var COMPODOC_SEARCH_INDEX = {
    "index": {"version":"2.3.6","fields":["title","body"],"fieldVectors":[["title/components/AppContainerComponent.html",[0,1.556,1,2.385]],["body/components/AppContainerComponent.html",[0,2.6,1,3.083,2,2.04,3,0.095,4,0.179,5,1.497,6,1.211,7,1.401,8,1.609,9,0.072,10,3.057,11,2.861,12,0.216,13,3.303,14,1.33,15,1.365,16,3.889,17,3.455,18,1.687,19,3.629,20,3.718,21,1.55,22,4.407,23,1.871,24,2.49,25,5.415,26,2.49,27,4.427,28,0.34,29,0.85,30,7.27,31,1.365,32,3.889,33,4.314,34,2.215,35,3.333,36,2.824,37,3.833,38,2.49,39,6.095,40,5.415,41,4.793,42,4.793,43,1.365,44,2.532,45,3.303,46,6.095,47,6.095,48,2.495,49,6.095,50,1.512,51,2.861,52,1.495,53,0.008,54,1.554,55,0.744,56,0.78,57,1.981,58,0.638,59,2.064,60,2.04,61,2.168,62,2.861,63,1.918,64,2.49,65,2.861,66,3.133,67,2.059,68,2.117,69,2.861,70,4.383,71,3.918,72,1.401,73,2.861,74,3.918,75,3.267,76,1.917,77,5.415,78,2.154,79,4.427,80,2.861,81,2.49,82,2.861,83,2.861,84,1.597,85,2.739,86,2.861,87,2.861,88,2.703,89,2.861,90,2.861,91,5.395,92,2.861,93,2.861,94,3.333,95,0.333,96,2.589,97,2.154,98,0.393,99,1.745,100,0.902,101,1.55,102,1.497,103,2.589,104,1.178,105,3.133,106,1.745,107,1.497,108,2.532,109,0.089,110,0.26,111,3.253,112,2.79,113,1.396,114,2.532,115,2.025,116,2.316,117,2.154,118,4.427,119,3.583,120,2.861,121,2.861,122,2.861,123,2.861,124,2.861,125,4.085,126,2.861,127,2.861,128,2.861,129,2.861,130,1.683,131,2.861,132,2.04,133,1.447,134,2.861,135,2.861,136,2.861,137,2.861,138,2.316,139,2.316,140,2.861,141,1.118,142,2.861,143,2.861,144,2.861,145,2.025,146,2.025,147,2.532,148,1.401,149,2.861,150,2.861,151,3.335,152,1.825,153,2.934,154,2.154,155,2.861,156,2.04,157,2.532,158,3.918,159,3.918,160,2.532,161,2.532,162,2.532,163,2.532,164,2.532,165,1.28,166,1.013,167,1.55,168,3.918,169,2.728,170,4.793,171,2.532,172,2.532,173,1.745,174,2.316,175,2.967,176,0.682,177,3.918,178,2.532,179,2.316,180,2.532,181,3.583,182,2.532,183,2.532,184,2.532,185,2.154,186,1.673,187,2.532,188,2.532,189,0.989,190,2.399,191,1.981,192,1.28,193,3.428,194,1.609,195,1.609,196,1.401,197,1.587,198,1.358,199,2.49,200,1.358,201,1.497,202,1.609,203,1.447,204,1.609,205,1.609,206,1.28,207,1.318,208,1.609,209,1.401,210,0.305,211,1.396,212,1.609,213,1.447,214,1.609,215,1.447,216,1.358,217,1.609,218,1.358,219,1.609,220,1.401,221,1.447,222,1.55,223,1.244,224,1.55,225,1.609,226,0.003,227,0.004,228,0.003]],["title/modules/AppModule.html",[229,0.886,230,3.337]],["body/modules/AppModule.html",[1,4.444,3,0.137,4,0.137,9,0.104,10,1.578,12,0.312,13,3.152,14,1.592,23,1.632,53,0.008,57,1.852,63,2.06,95,0.438,98,0.568,99,2.524,100,2.121,101,3.645,108,3.664,109,0.128,110,0.376,119,4.709,189,1.432,197,1.468,200,3.785,203,4.032,210,0.291,211,1.834,221,4.032,226,0.004,227,0.005,228,0.004,229,1.264,230,6.566,231,1.502,232,1.618,233,2.926,234,2.926,235,1.618,236,1.618,237,3.664,238,3.664,239,3.664,240,3.664,241,5.642,242,5.343,243,5.343,244,4.496,245,5.642,246,5.343,247,2.603,248,1.752,249,1.705,250,4.139,251,5.817,252,4.117,253,4.709,254,3.152,255,4.709,256,5.817,257,3.35,258,2.334,259,5.817,260,3.664,261,3.664,262,5.149,263,4.709,264,3.116,265,5.817,266,4.139,267,4.139,268,2.943,269,3.664,270,3.664,271,2.027,272,4.139,273,3.664,274,3.664,275,3.35,276,3.35,277,4.139,278,4.139,279,4.139,280,4.139,281,3.664,282,4.139,283,4.139,284,4.139,285,3.664,286,3.664,287,3.664,288,3.116,289,5.817,290,4.139,291,4.139,292,2.93,293,4.139,294,4.139,295,4.139,296,4.139,297,4.139]],["title/modules/AppRoutingModule.html",[229,0.886,241,3.337]],["body/modules/AppRoutingModule.html",[0,2.011,3,0.201,4,0.201,9,0.153,10,2.322,12,0.46,13,3.301,14,1.776,15,2.315,53,0.008,57,3.36,95,0.389,98,0.837,109,0.233,110,0.553,200,3.565,201,3.928,226,0.005,227,0.007,228,0.005,229,1.411,231,2.21,236,2.382,241,5.314,254,3.301,258,3.012,286,5.392,287,5.392,298,5.392,299,5.392,300,7.508,301,4.79,302,7.508,303,6.077,304,6.077,305,3.426,306,5.392,307,2.444,308,5.392,309,6.645,310,5.392,311,5.392,312,4.312,313,6.092]],["title/injectables/AppService.html",[45,2.555,314,1.074]],["body/injectables/AppService.html",[3,0.115,4,0.115,9,0.087,12,0.509,13,3.653,14,1.697,15,1.585,23,1.825,28,0.414,31,2.078,34,2.403,35,3.872,38,2.892,43,1.585,45,2.787,50,1.38,52,2.541,53,0.008,54,1.677,55,1.033,56,1.187,59,2.329,67,2.696,68,1.364,71,4.552,72,1.581,75,2.237,76,2.338,84,2.217,85,4.122,88,2.507,95,0.381,98,0.479,104,1.437,105,3.64,107,1.825,109,0.108,110,0.317,111,2.734,112,2.585,130,1.985,132,3.312,141,2.81,169,2.301,211,2.371,226,0.003,227,0.005,228,0.003,235,2.011,255,5.457,257,2.824,271,3.91,314,1.171,315,1.33,316,0.478,317,3.488,318,3.017,319,4.163,320,1.779,321,2.084,322,3.447,323,3.008,324,4.552,325,4.552,326,3.64,327,2.824,328,4.112,329,3.791,330,6.657,331,3.488,332,2.69,333,2.892,334,5.088,335,4.799,336,4.552,337,4.552,338,1.009,339,3.488,340,1.779,341,4.163,342,4.552,343,5.819,344,4.552,345,3.488,346,3.281,347,2.216,348,4.552,349,1.708,350,3.488,351,4.163,352,3.087,353,3.488,354,2.519,355,1.516,356,2.338,357,1.235,358,2.892,359,1.765,360,1.765,361,2.734,362,2.338,363,2.824,364,2.469,365,3.087,366,3.087,367,3.087,368,3.087,369,3.087,370,3.087,371,3.64,372,4.324,373,3.087,374,3.087,375,3.488,376,3.488,377,3.087,378,3.087,379,3.087,380,3.087,381,3.087,382,3.087,383,1.399,384,3.087,385,3.087,386,3.087,387,3.087]],["title/injectables/AppService-1.html",[45,2.153,314,0.905,388,1.374]],["body/injectables/AppService-1.html",[3,0.12,4,0.12,9,0.091,10,2.907,12,0.518,13,3.722,14,1.718,15,1.631,28,0.431,31,2.117,34,2.427,35,5.171,38,2.976,43,1.631,45,2.867,50,1.402,52,2.467,53,0.008,54,1.628,55,1.003,56,1.1,67,2.726,68,1.418,75,2.302,84,2.248,85,4.163,88,2.554,95,0.386,98,0.498,104,1.494,105,3.745,107,1.897,109,0.113,110,0.329,111,2.796,112,2.644,130,2.016,132,3.365,141,2.855,169,1.623,211,2.404,226,0.003,227,0.005,228,0.003,235,2.069,255,5.559,257,2.935,271,3.953,314,1.205,315,1.382,318,3.073,319,4.283,320,1.83,321,2.074,322,3.546,323,3.095,324,4.683,325,4.683,326,3.745,327,2.935,328,4.189,329,3.862,330,6.749,332,2.768,333,2.976,334,5.169,335,4.865,336,4.683,337,4.683,338,1.023,340,1.83,341,4.283,342,4.683,343,5.911,344,4.683,346,3.376,347,2.267,348,4.683,349,1.735,351,4.283,352,3.21,354,2.592,355,1.56,356,2.43,357,1.284,358,2.976,359,1.834,360,1.834,361,2.368,362,2.43,363,2.935,364,2.567,365,3.21,366,3.21,367,3.21,368,3.21,369,3.21,370,3.21,371,2.567,372,3.745,373,3.21,374,3.21,377,3.21,378,3.21,379,3.21,380,3.21,381,3.21,382,3.21,383,1.455,384,3.21,385,3.21,386,3.21,387,3.21,389,3.626,390,3.626,391,3.626,392,3.626,393,3.626,394,3.626,395,3.626]],["title/interfaces/ApplicationData.html",[358,2.651,396,0.205]],["body/interfaces/ApplicationData.html",[3,0.165,4,0.165,9,0.125,12,0.559,14,1.442,23,1.603,28,0.592,29,1.269,48,3.044,53,0.008,55,0.907,56,1.305,57,2.956,64,4.435,72,1.917,75,3.223,88,3.387,95,0.238,109,0.23,141,3.296,165,3.529,166,2.34,173,4.029,174,2.609,186,3.864,226,0.004,227,0.006,228,0.004,305,2.805,316,0.317,338,1.154,347,2.862,349,1.76,355,1.47,358,3.715,383,3.164,396,0.357,397,1.043,398,4.037,399,4.428,400,4.428,401,2.456,402,4.428,403,4.965,404,5.286,405,3.747,406,2.368,407,3.182,408,4.215,409,2.232,410,3.042,411,4.518,412,3.042,413,3.343,414,2.232,415,3.343,416,3.343,417,3.343,418,2.805]],["title/interfaces/ApplicationData-1.html",[358,2.234,388,1.374,396,0.173]],["body/interfaces/ApplicationData-1.html",[3,0.165,4,0.165,9,0.125,10,1.905,12,0.56,14,1.444,23,1.213,28,0.593,29,1.27,48,3.047,53,0.008,55,0.908,56,1.306,57,2.96,64,4.438,72,1.919,75,3.225,88,3.388,95,0.239,109,0.23,141,3.298,165,3.532,166,2.343,173,4.034,174,2.614,186,3.869,226,0.004,227,0.006,228,0.004,305,2.81,338,1.154,347,2.864,349,1.762,355,1.473,358,3.72,383,3.166,396,0.357,397,1.045,399,4.433,400,4.433,401,2.459,402,4.433,403,4.97,404,5.29,405,3.751,406,2.372,407,3.188,408,4.22,409,2.236,410,3.047,411,4.522,412,3.047,413,3.349,414,2.236,415,3.349,416,3.349,417,3.349,418,2.81,419,4.044]],["title/modules/ApplicationDataModule.html",[229,0.886,242,3.16]],["body/modules/ApplicationDataModule.html",[3,0.194,4,0.194,9,0.147,12,0.442,14,1.599,23,1.941,45,4.769,53,0.008,84,2.161,95,0.4,98,0.805,109,0.182,110,0.532,189,2.026,226,0.005,227,0.006,228,0.005,229,1.503,231,2.126,232,2.29,233,2.548,234,2.548,235,3.127,236,2.29,242,6.145,247,3.279,248,2.479,249,2.413,258,2.94,316,0.372,328,5.367,329,4.949,363,4.742,364,4.146,406,3.479,420,5.185,421,5.185,422,5.858,423,3.589,424,5.932,425,5.932,426,4.911,427,5.858]],["title/injectables/ApplicationQuery.html",[314,1.074,328,2.875]],["body/injectables/ApplicationQuery.html",[3,0.197,4,0.197,9,0.149,12,0.558,14,1.614,23,1.795,43,1.833,50,1.142,52,2.009,53,0.008,54,1.326,55,0.817,56,1.047,84,2.181,95,0.403,98,0.817,109,0.185,110,0.731,132,2.74,226,0.005,227,0.007,228,0.005,268,3.008,271,4.387,314,1.684,315,2.267,316,0.47,321,1.834,328,4.511,329,4.738,334,6.133,362,3.986,364,4.209,423,3.623,428,5.947,429,6.547,430,2.087,431,4.814,432,5.947,433,2.684,434,2.892,435,2.74,436,4.814,437,4.814]],["title/injectables/ApplicationQuery-1.html",[314,0.905,328,2.423,388,1.374]],["body/injectables/ApplicationQuery-1.html",[3,0.197,4,0.197,9,0.15,10,2.827,12,0.56,14,1.619,43,1.841,50,1.147,52,2.018,53,0.008,54,1.332,55,0.82,56,1.052,84,2.187,95,0.403,98,0.82,109,0.185,110,0.732,132,2.752,226,0.005,227,0.007,228,0.005,268,3.021,271,4.391,314,1.689,315,2.277,321,1.839,328,4.524,329,4.745,334,6.141,362,4.003,364,4.227,423,3.633,429,6.565,430,2.093,431,4.835,433,2.691,434,2.9,435,2.752,436,4.835,437,4.835,438,5.973,439,5.973]],["title/interfaces/ApplicationState.html",[396,0.205,435,2.172]],["body/interfaces/ApplicationState.html",[3,0.151,4,0.151,9,0.115,12,0.346,14,1.74,23,1.514,28,0.544,29,1.198,53,0.008,54,1.391,55,0.975,61,3.476,72,1.836,84,2.246,88,2.32,95,0.298,100,1.444,109,0.255,141,3.396,148,3.056,176,0.962,197,1.74,210,0.411,211,2.818,226,0.004,227,0.005,228,0.004,316,0.291,320,1.584,321,2.199,338,0.614,340,1.584,347,2.892,349,1.686,354,3.056,355,1.84,359,2.317,360,2.317,361,3.968,383,3.485,396,0.366,397,0.958,405,2.317,414,2.05,430,1.292,435,2.875,440,3.07,441,3.381,442,3.509,443,2.875,444,2.175,445,1.992,446,2.396,447,2.482,448,2.243,449,1.686,450,3.264,451,2.396]],["title/interfaces/ApplicationState-1.html",[388,1.374,396,0.173,435,1.83]],["body/interfaces/ApplicationState-1.html",[3,0.154,4,0.154,9,0.117,10,1.773,12,0.351,14,1.749,23,1.129,28,0.552,29,1.21,53,0.008,54,1.405,55,0.982,61,3.503,72,1.851,84,2.261,88,2.344,95,0.301,100,1.466,109,0.256,141,3.407,176,0.972,197,1.749,210,0.413,211,2.803,226,0.004,227,0.006,228,0.004,320,1.608,321,2.204,338,0.624,340,1.608,347,2.782,349,1.699,354,3.087,355,1.859,359,2.352,360,2.352,361,3.978,383,3.496,396,0.367,397,0.973,414,2.081,430,1.312,435,2.904,441,3.416,442,3.545,443,2.904,444,2.208,445,2.023,446,2.433,447,2.52,448,2.277,449,1.703,450,3.298,451,2.433,452,3.117]],["title/injectables/ApplicationStore.html",[314,1.074,329,2.651]],["body/injectables/ApplicationStore.html",[3,0.202,4,0.202,9,0.153,12,0.462,14,1.907,23,1.827,43,2.514,50,1.175,53,0.008,54,1.364,84,2.509,95,0.39,98,0.84,109,0.19,110,0.555,141,2.392,226,0.005,227,0.007,228,0.005,268,3.095,271,4.279,314,1.714,315,2.332,316,0.478,321,1.867,329,4.234,361,2.738,362,4.101,383,2.455,423,3.687,430,2.124,435,2.819,453,6.119,454,6.119,455,5.046,456,5.668,457,4.331,458,2.738]],["title/injectables/ApplicationStore-1.html",[314,0.905,329,2.234,388,1.374]],["body/injectables/ApplicationStore-1.html",[3,0.203,4,0.203,9,0.154,10,2.878,12,0.464,14,1.909,43,2.519,50,1.18,53,0.008,54,1.37,84,2.513,95,0.39,98,0.844,109,0.191,110,0.558,141,2.403,226,0.005,227,0.007,228,0.005,268,3.109,271,4.284,314,1.719,315,2.343,321,1.872,329,4.246,361,2.75,362,4.119,383,2.466,423,3.698,430,2.13,435,2.832,455,5.06,456,5.684,457,4.35,458,2.75,459,6.146,460,6.146]],["title/interfaces/BasePlugin.html",[396,0.205,461,1.892]],["body/interfaces/BasePlugin.html",[3,0.169,4,0.169,9,0.128,12,0.386,14,1.117,28,0.608,29,1.29,31,2.456,53,0.008,55,0.923,56,1.546,95,0.321,98,0.703,109,0.247,110,0.464,113,1.613,130,1.855,210,0.336,226,0.005,227,0.006,228,0.005,229,0.962,307,2.053,316,0.325,338,1.006,349,1.893,357,1.812,396,0.36,397,1.07,461,3.196,462,3.853,463,4.504,464,3.007,465,2.692,466,3.93,467,4.442,468,4.168,469,3.902,470,4.504,471,2.677,472,5.028,473,3.357,474,1.19,475,2.001,476,2.878,477,3.43,478,2.29,479,2.993,480,3.265,481,1.857,482,2.589,483,2.589,484,3.121,485,2.226,486,2.108,487,2.589,488,3.265]],["title/interfaces/BasePlugin-1.html",[388,1.374,396,0.173,461,1.594]],["body/interfaces/BasePlugin-1.html",[3,0.164,4,0.164,9,0.124,12,0.374,14,1.081,28,0.588,29,1.262,31,2.424,50,0.951,53,0.008,55,0.903,56,1.535,95,0.314,98,0.68,109,0.254,110,0.449,113,2.073,130,1.815,197,1.081,210,0.393,226,0.004,227,0.006,228,0.004,229,1.236,307,2.638,316,0.315,320,1.712,338,0.99,349,1.869,357,1.754,396,0.356,397,1.036,461,3.155,463,4.407,464,2.942,465,2.684,466,3.846,467,4.411,468,4.114,469,3.852,470,4.407,471,2.59,472,4.947,473,3.303,474,1.152,475,1.936,476,2.784,477,3.319,478,2.216,479,2.896,480,3.159,481,1.796,482,3.326,483,3.326,484,3.02,485,2.86,486,2.04,487,2.505,488,3.159,489,3.728,490,3.728,491,3.728]],["title/interfaces/Block.html",[176,0.727,396,0.205]],["body/interfaces/Block.html",[3,0.129,4,0.129,6,1.652,9,0.098,12,0.295,28,0.463,29,1.365,50,0.75,53,0.008,55,1.279,56,1.252,58,1.676,72,1.686,109,0.26,156,3.274,165,2.497,166,2.916,167,3.024,176,1.422,210,0.411,226,0.003,227,0.005,228,0.003,301,2.491,316,0.355,321,2.108,338,1.154,340,2.6,349,1.326,388,1.35,396,0.384,397,0.817,401,1.452,409,2.497,430,2.005,434,1.526,465,1.126,492,2.196,493,2.196,494,3.904,495,2.299,496,2.116,497,3.139,498,3.139,499,1.975,500,1.747,501,3.139,502,3.024,503,3.097,504,3.024,505,3.407,506,2.92,507,2.283,508,1.526,509,3.024,510,3.57,511,3.264,512,2.196,513,2.756,514,2.283,515,2.283,516,2.283,517,2.283,518,2.283,519,3.024,520,2.116,521,2.196]],["title/interfaces/BlocksMap.html",[396,0.205,522,3.008]],["body/interfaces/BlocksMap.html",[3,0.16,4,0.16,9,0.121,12,0.366,50,0.931,53,0.008,72,2.018,84,1.911,95,0.349,102,4.844,104,1.996,109,0.26,133,2.452,176,1.289,210,0.439,226,0.004,227,0.006,228,0.004,316,0.412,338,1.122,349,2.143,357,3.194,396,0.364,397,1.014,449,1.973,474,1.127,493,2.726,508,2.855,522,4.136,523,3.248,524,6.044,525,4.344,526,4.847,527,1.996,528,2.374,529,2.956,530,3.078,531,1.802,532,2.956,533,1.758,534,2.956,535,3.128,536,2.726,537,2.601,538,3.092,539,2.374,540,2.956]],["title/interfaces/ChangeMap.html",[396,0.205,540,2.875]],["body/interfaces/ChangeMap.html",[3,0.16,4,0.16,9,0.121,12,0.365,50,0.927,53,0.008,72,2.015,84,1.907,95,0.348,102,4.842,104,1.989,109,0.259,133,2.443,176,1.2,210,0.439,226,0.004,227,0.006,228,0.004,316,0.411,338,1.121,349,2.141,357,3.192,396,0.363,397,1.01,449,1.97,474,1.123,493,2.716,508,3.174,522,3.081,523,3.237,524,6.04,525,3.237,527,1.989,528,2.365,529,2.946,530,3.07,531,1.796,532,2.946,533,1.752,534,2.946,535,3.257,536,2.716,537,2.594,538,4.126,539,3.167,540,3.944,541,4.83]],["title/classes/Changed.html",[110,0.428,542,2.309]],["body/classes/Changed.html",[3,0.157,4,0.157,9,0.119,18,3.172,28,0.565,29,1.23,34,1.889,43,1.468,50,1.39,52,1.609,53,0.008,54,1.062,55,1.243,56,0.839,58,1.062,59,1.816,95,0.306,109,0.264,110,0.733,112,3.598,197,1.763,210,0.438,226,0.004,227,0.006,228,0.004,316,0.492,321,1.588,338,1.084,443,2.194,474,1.108,527,2.982,531,3.004,533,1.728,542,3.957,543,2.786,544,4.94,545,3.039,546,4.973,547,6.118,548,3.371,549,5.124,550,6.406,551,4.763,552,4.534,553,3.192,554,3.039,555,4.234,556,3.603,557,4.234,558,3.039,559,4.415,560,3.371,561,5.415,562,3.159,563,3.371,564,3.371,565,3.371,566,3.192]],["title/interfaces/CreateEditorJSOptions.html",[396,0.205,567,3.816]],["body/interfaces/CreateEditorJSOptions.html",[3,0.197,4,0.197,9,0.149,12,0.449,28,0.706,29,1.42,53,0.008,55,1.106,56,1.555,95,0.284,109,0.185,210,0.37,226,0.005,227,0.007,228,0.005,316,0.378,338,1.08,355,2.484,396,0.259,397,1.244,406,3.512,458,3.31,474,1.383,475,2.892,478,3.77,508,3.148,535,2.968,567,5.987,568,5.947,569,5.947,570,3.742,571,5.166,572,3.77,573,6.343,574,4.565,575,5.236]],["title/interfaces/DemoData.html",[361,2.11,396,0.205]],["body/interfaces/DemoData.html",[3,0.153,4,0.153,9,0.116,12,0.35,14,1.559,23,1.528,28,0.551,29,1.209,53,0.008,54,1.841,55,0.865,61,3.084,72,1.201,84,2.107,88,1.726,95,0.301,100,1.464,109,0.256,141,3.131,148,3.084,176,0.97,197,1.802,210,0.422,211,2.885,226,0.004,227,0.006,228,0.004,316,0.295,320,1.605,321,2.248,338,0.958,340,2.471,347,2.592,349,1.698,354,2.274,355,1.369,359,2.348,360,2.348,361,3.78,383,3.213,396,0.374,397,0.971,405,2.348,414,2.818,430,1.31,435,2.139,440,3.111,441,2.516,442,2.611,443,2.901,444,2.204,445,2.739,446,2.429,447,2.516,448,2.274,449,1.701,450,3.294,451,2.429]],["title/interfaces/DemoData-1.html",[361,1.778,388,1.374,396,0.173]],["body/interfaces/DemoData-1.html",[3,0.156,4,0.156,9,0.118,10,1.797,12,0.356,14,1.572,23,1.144,28,0.56,29,1.222,53,0.008,54,1.849,55,0.874,61,3.116,72,1.22,84,2.123,88,1.753,95,0.304,100,1.486,109,0.257,141,3.148,176,0.981,197,1.811,210,0.424,211,2.878,226,0.004,227,0.006,228,0.004,320,1.63,321,2.253,338,0.966,340,2.491,347,2.308,349,1.711,354,2.309,355,1.39,359,2.384,360,2.384,361,3.795,383,3.23,396,0.375,397,0.986,414,2.847,430,1.33,435,2.172,441,2.554,442,2.651,443,2.931,444,2.238,445,2.767,446,2.466,447,2.554,448,2.309,449,1.719,450,3.328,451,2.466,452,3.159]],["title/interfaces/EditorJSChange.html",[396,0.205,536,2.651]],["body/interfaces/EditorJSChange.html",[3,0.159,4,0.159,9,0.12,12,0.362,28,0.569,29,1.236,53,0.008,55,0.884,72,2.009,84,1.898,95,0.347,102,4.786,104,1.975,109,0.259,133,3.256,176,1.285,210,0.438,226,0.004,227,0.006,228,0.004,316,0.305,338,1.086,349,2.105,357,3.138,396,0.362,397,1.003,449,2.301,474,1.116,508,3.166,522,3.06,523,3.214,524,5.939,525,3.214,527,1.975,528,2.349,529,2.925,530,3.056,531,1.783,532,2.925,533,1.74,534,2.925,535,3.417,536,3.62,537,3.345,538,3.06,539,2.349,540,2.925]],["title/interfaces/EditorJSInstanceConfig.html",[396,0.205,576,3.16]],["body/interfaces/EditorJSInstanceConfig.html",[3,0.148,4,0.148,9,0.112,12,0.337,28,0.531,29,1.178,53,0.008,55,0.962,56,1.472,58,0.996,68,2.399,95,0.335,98,0.614,109,0.26,110,0.406,113,1.934,169,2,176,0.946,210,0.426,226,0.005,227,0.005,228,0.004,307,2.811,316,0.284,338,1.095,340,1.545,357,1.583,396,0.328,397,0.935,430,1.261,433,2.736,449,2.037,458,2.745,464,2.745,468,3.945,471,2.338,474,1.039,475,2.948,482,2.261,483,2.261,513,2.596,530,2.122,531,2.281,535,2.461,537,1.793,562,3.33,570,3.103,574,4.615,576,4.112,577,3.163,578,4.112,579,4.811,580,5.337,581,3.604,582,3.742,583,4.775,584,4.342,585,2.614,586,1.944,587,2.995,588,2.995,589,2.995,590,2.995,591,2.995,592,3.163,593,2.851,594,3.163,595,2.614,596,2.725,597,2.851,598,2.422,599,2.995,600,3.047,601,3.914,602,4.112,603,2.851,604,2.851]],["title/interfaces/EditorJSMaterialForm.html",[396,0.205,605,4.173]],["body/interfaces/EditorJSMaterialForm.html",[0,2.379,2,1.168,3,0.084,4,0.084,9,0.064,12,0.191,15,1.242,17,2.57,18,0.967,19,3.358,20,2.457,22,1.327,24,1.426,26,1.426,29,0.487,32,1.618,33,1.795,34,2.189,43,0.782,53,0.009,55,0.348,56,0.709,59,2.96,60,1.168,68,2.231,72,1.715,81,4.975,84,2.507,95,0.364,96,2.356,97,1.91,98,0.348,99,1.547,103,2.931,104,1.045,106,1.547,107,1.327,109,0.156,110,0.366,111,2.786,112,1.705,113,0.8,130,1.918,132,3.505,133,1.283,145,1.795,146,1.795,151,3.514,169,1.135,186,2.356,191,1.135,197,1.094,206,1.803,210,0.331,218,1.912,223,2.18,226,0.002,227,0.004,228,0.002,235,0.992,252,2.851,301,1.618,307,1.018,312,1.795,316,0.161,318,1.803,333,1.426,335,3.197,338,0.672,346,1.618,355,2.507,396,0.218,397,0.53,407,1.618,423,1.242,430,1.414,433,1.462,455,4.656,458,2.242,464,2.965,535,1.018,571,1.483,581,1.705,585,1.483,586,1.103,605,5.51,606,2.245,607,2.053,608,2.245,609,5.051,610,3.261,611,2.053,612,2.536,613,2.536,614,2.7,615,4.028,616,3.261,617,4.028,618,4.435,619,4.028,620,5.706,621,1.7,622,2.053,623,2.053,624,2.454,625,1.795,626,2.245,627,3.641,628,3.565,629,2.053,630,2.053,631,1.483,632,2.536,633,2.053,634,2.245,635,1.618,636,2.536,637,2.536,638,3.358,639,2.786,640,2.536,641,5.706,642,3.565,643,2.536,644,2.536,645,2.931,646,2.536,647,3.565,648,2.536,649,3.565,650,2.536,651,2.536,652,7.208,653,4.237,654,2.536,655,4.028,656,2.536,657,2.536,658,4.656,659,2.536,660,5.011,661,2.536,662,2.536,663,2.536,664,2.053,665,2.536,666,4.028,667,2.536,668,2.536,669,2.536,670,2.536,671,6.627,672,2.536,673,4.028,674,2.536,675,2.536,676,2.536,677,2.536,678,4.028,679,2.536,680,1.91,681,2.851,682,2.245,683,2.245,684,4.028,685,2.536,686,2.536,687,2.536,688,2.536,689,2.536,690,4.028,691,2.536,692,2.536,693,4.028,694,2.536,695,2.536,696,2.536,697,2.851,698,3.261,699,2.536,700,2.536,701,2.245,702,1.7,703,4.056,704,3.48,705,2.053,706,3.546,707,2.7,708,2.245,709,1.795,710,2.245,711,4.028,712,1.91,713,2.536,714,1.7,715,1.91,716,1.91,717,2.245,718,1.91,719,2.536,720,2.536,721,2.245,722,1.795,723,2.245,724,1.91,725,2.7,726,2.053,727,2.536,728,2.536,729,2.536,730,2.536,731,1.483,732,2.536,733,2.536,734,1.91,735,2.536,736,2.245,737,2.053,738,2.245,739,2.053,740,2.053]],["title/interfaces/EditorMap.html",[396,0.205,529,2.875]],["body/interfaces/EditorMap.html",[3,0.161,4,0.161,9,0.122,12,0.367,50,0.934,53,0.008,72,2.021,84,1.916,95,0.35,102,4.831,104,2.003,109,0.26,133,2.46,176,1.204,210,0.444,226,0.004,227,0.006,228,0.004,316,0.413,338,1.123,349,2.144,357,3.195,396,0.364,397,1.017,449,1.977,474,1.131,493,2.735,508,2.86,522,3.103,523,3.26,524,6.047,525,3.26,527,2.003,528,3.182,529,3.963,530,3.085,531,1.808,532,2.966,533,1.765,534,2.966,535,3.133,536,2.735,537,2.607,538,3.103,539,2.382,540,2.966,741,4.864]],["title/components/FormContainerComponent.html",[0,1.556,196,2.309]],["body/components/FormContainerComponent.html",[0,2.496,1,0.826,2,1.29,3,0.054,4,0.054,5,0.855,6,0.691,7,0.8,8,0.919,9,0.041,10,0.623,12,0.277,13,1.517,14,0.611,15,1.342,17,2.778,18,1.067,19,2.463,20,1.708,21,0.885,22,3.841,23,1.297,24,1.575,26,1.575,28,0.194,29,0.538,31,0.863,32,2.778,34,2.485,38,1.575,43,1.342,45,2.359,50,1.432,52,1.241,53,0.008,54,1.576,55,0.896,56,0.647,57,1.948,58,1.092,59,2.566,63,2.8,64,3.213,67,2.036,68,2.233,75,0.711,81,3.389,84,1.444,85,1.859,88,1.821,94,1.23,95,0.322,98,0.224,100,1.544,102,0.855,103,2.149,104,0.673,105,1.156,106,0.996,107,0.855,109,0.051,110,0.148,111,2.817,112,1.842,113,1.985,115,1.982,125,2.463,130,1.202,132,2.632,138,1.322,139,1.322,148,1.371,151,0.826,152,3.408,153,1.517,154,2.108,156,1.693,166,1.542,169,1.948,174,0.855,176,0.929,189,0.565,190,1.517,191,1.253,192,0.731,193,2.448,194,0.919,195,0.919,196,2.132,197,1.602,198,3.92,199,1.575,200,0.776,201,0.855,202,0.919,203,0.826,204,0.919,205,0.919,206,0.731,207,0.753,208,0.919,209,0.8,210,0.432,211,2.443,212,0.919,213,0.826,214,0.919,215,0.826,216,1.744,217,0.919,218,0.776,219,0.919,220,0.8,221,0.826,222,0.885,223,0.711,224,0.885,225,0.919,226,0.001,227,0.002,228,0.003,248,2.55,252,1.982,307,0.655,316,0.481,318,2.921,320,0.968,321,1.849,322,1.095,323,1.638,326,1.156,332,1.465,333,1.575,338,0.376,347,0.593,355,1.284,356,1.095,388,0.968,409,1.253,412,1.708,433,2.073,434,0.639,448,0.8,449,2.07,458,0.731,465,0.808,474,0.38,475,0.639,481,1.016,495,1.153,503,1.793,505,1.555,506,0.855,508,1.437,510,1.329,527,0.673,530,0.776,533,2.744,535,1.123,537,1.747,556,2.448,562,2.764,571,4.702,581,3.241,582,1.253,583,2.546,586,0.711,614,2.918,621,1.095,624,2.132,627,3.341,638,1.095,639,1.253,697,3.082,704,1.708,707,2.918,722,1.982,725,3.58,742,7.563,743,6.695,744,1.322,745,2.478,746,2.266,747,2.108,748,2.108,749,2.974,750,2.266,751,3.674,752,3.845,753,4.354,754,2.8,755,3.58,756,1.982,757,3.58,758,3.829,759,1.446,760,3.829,761,3.278,762,4.354,763,4.354,764,1.634,765,2.266,766,2.108,767,2.8,768,2.463,769,1.634,770,1.634,771,1.634,772,1.982,773,2.8,774,1.634,775,4.354,776,4.354,777,1.634,778,2.478,779,2.8,780,1.634,781,1.634,782,2.8,783,1.634,784,2.8,785,2.8,786,1.982,787,3.687,788,3.674,789,1.634,790,1.634,791,1.634,792,1.634,793,1.634,794,1.634,795,1.322,796,1.634,797,1.446,798,1.634,799,1.23,800,3.845,801,1.446,802,1.322,803,1.446,804,1.446,805,1.156,806,1.446,807,1.23,808,1.446,809,1.446,810,1.446,811,2.974,812,1.446,813,1.446,814,1.322,815,1.634,816,1.634,817,1.634,818,1.634,819,2.478,820,1.095,821,4.537,822,1.634,823,1.634,824,1.634,825,1.634,826,1.634,827,1.446,828,1.446,829,1.446,830,1.446,831,1.446,832,1.446,833,2.478,834,1.446,835,1.446,836,1.322,837,1.634,838,1.446,839,1.982,840,1.693,841,3.282,842,1.446,843,1.634,844,1.322,845,0.956,846,1.446,847,2.8,848,2.8,849,2.8,850,2.266,851,2.108,852,4.354,853,3.278,854,4.354,855,3.854,856,2.8,857,2.8,858,2.918,859,2.8,860,2.108,861,1.575,862,2.478,863,2.8,864,1.982,865,2.478,866,2.478,867,1.446,868,1.446,869,1.446,870,1.446,871,1.446,872,1.446,873,2.266,874,2.478,875,2.266,876,2.478,877,2.266,878,2.478,879,2.478,880,2.108,881,2.8,882,2.8,883,2.8,884,2.8,885,2.766,886,1.446,887,2.974,888,1.322,889,1.322,890,1.446,891,1.634]],["title/interfaces/Header.html",[396,0.205,505,1.995]],["body/interfaces/Header.html",[3,0.131,4,0.131,6,1.673,9,0.099,12,0.299,28,0.469,29,1.26,53,0.008,55,1.266,56,1.259,58,1.751,72,1.698,109,0.261,156,3.806,165,2.52,166,2.926,167,3.052,176,1.413,210,0.392,226,0.003,227,0.005,228,0.003,316,0.251,321,2.004,338,1.144,340,2.269,349,0.94,388,1.948,396,0.382,397,0.827,401,1.47,409,2.52,430,2.017,434,1.546,465,1.141,492,2.224,495,1.629,496,2.143,497,3.168,498,3.168,499,2,500,1.77,501,3.168,502,3.052,503,3.112,504,3.052,505,3.651,506,4.109,507,3.294,508,2.565,509,3.052,510,3.587,511,3.294,512,2.224,513,2.776,514,2.313,515,2.313,516,2.313,517,2.313,518,2.313,519,3.052,520,2.143,521,2.224]],["title/interfaces/HeaderBlock.html",[396,0.205,509,2.555]],["body/interfaces/HeaderBlock.html",[3,0.133,4,0.133,6,1.708,9,0.101,12,0.305,28,0.479,29,1.274,53,0.009,55,1.271,56,1.27,58,1.697,72,1.717,109,0.262,156,3.324,165,2.557,166,2.941,167,3.097,176,1.423,210,0.406,226,0.004,227,0.005,228,0.004,316,0.256,321,1.96,338,1.114,340,2.294,349,0.959,388,1.396,396,0.386,397,0.844,401,1.501,409,2.557,430,2.149,434,1.578,465,1.164,492,2.27,495,1.662,496,2.187,497,3.214,498,3.214,499,2.042,500,1.806,501,3.214,502,3.097,503,3.136,504,3.097,505,3.514,506,2.99,507,2.361,508,1.578,509,3.595,510,3.615,511,3.342,512,2.27,513,2.807,514,2.361,515,2.361,516,2.361,517,2.361,518,2.361,519,3.097,520,2.187,521,2.27]],["title/components/HomePageComponent.html",[0,1.556,200,2.238]],["body/components/HomePageComponent.html",[0,2.326,1,2.287,2,3.491,3,0.149,4,0.149,5,2.365,6,1.913,7,2.214,8,2.542,9,0.113,10,2.686,21,2.45,22,4.749,23,2.147,24,3.477,26,3.477,28,0.537,34,1.333,38,3.477,43,1.393,44,4.001,45,4.106,50,1.187,52,1.527,53,0.008,54,1.769,55,0.621,56,0.796,57,2.767,60,2.849,61,3.028,63,2.496,75,1.966,88,2.95,95,0.295,98,0.621,100,1.425,101,2.45,109,0.14,110,0.41,112,1.913,130,1.248,147,4.001,148,2.214,151,2.287,166,2.19,189,1.563,190,3.351,191,2.767,192,2.023,193,4.261,194,2.542,195,2.542,196,2.214,197,1.831,198,2.146,199,3.477,200,3.598,201,4.468,202,2.542,203,2.287,204,2.542,205,2.542,206,2.023,207,2.083,208,2.542,209,2.214,210,0.379,211,2.389,212,2.542,213,2.287,214,2.542,215,2.287,216,2.146,217,2.542,218,2.146,219,2.542,220,2.214,221,2.287,222,2.45,223,1.966,224,2.45,225,2.542,226,0.004,227,0.005,228,0.004,253,5.005,326,3.199,426,5.078,495,2.547,839,4.376,841,4.144,892,7.047,893,4.52,894,7.047,895,6.183,896,4.52,897,4.52,898,3.199,899,6.183,900,4.655,901,5.473,902,4.655,903,6.183,904,5.005,905,5.005,906,5.473,907,3.945,908,4.376,909,5.473,910,6.183,911,3.945,912,6.183]],["title/interfaces/Image.html",[396,0.205,510,2.238]],["body/interfaces/Image.html",[3,0.124,4,0.124,6,1.589,9,0.094,12,0.283,28,0.446,29,1.224,53,0.008,55,1.268,56,1.566,58,1.721,72,2.148,109,0.258,156,3.216,165,2.428,166,2.886,167,2.941,176,1.405,210,0.386,226,0.003,227,0.005,228,0.003,316,0.239,321,1.973,338,1.157,340,2.204,349,0.892,388,1.299,396,0.379,397,0.785,401,1.396,409,3.454,430,1.97,434,1.468,465,1.083,492,2.112,495,1.547,496,2.035,497,3.052,498,3.052,499,1.899,500,1.68,501,3.052,502,2.941,503,3.05,504,2.941,505,3.448,506,2.839,507,2.196,508,1.468,509,2.941,510,3.868,511,4.514,512,3.052,513,3.266,514,4.083,515,3.174,516,4.083,517,3.174,518,4.083,519,2.941,520,2.035,521,2.112]],["title/interfaces/ImageBlock.html",[396,0.205,519,2.555]],["body/interfaces/ImageBlock.html",[3,0.133,4,0.133,6,1.708,9,0.101,12,0.305,28,0.479,29,1.274,53,0.009,55,1.271,56,1.27,58,1.697,72,1.717,109,0.262,156,3.324,165,2.557,166,2.941,167,3.097,176,1.423,210,0.406,226,0.004,227,0.005,228,0.004,316,0.256,321,1.96,338,1.114,340,2.294,349,0.959,388,1.396,396,0.386,397,0.844,401,1.501,409,2.557,430,2.149,434,1.578,465,1.164,492,2.27,495,1.662,496,2.187,497,3.214,498,3.214,499,2.042,500,1.806,501,3.214,502,3.097,503,3.136,504,3.097,505,3.44,506,2.99,507,2.361,508,1.578,509,3.097,510,3.754,511,3.342,512,2.27,513,2.807,514,2.361,515,2.361,516,2.361,517,2.361,518,2.361,519,3.595,520,2.187,521,2.27]],["title/interfaces/InjectorApiCallOptions.html",[396,0.205,601,3.008]],["body/interfaces/InjectorApiCallOptions.html",[3,0.149,4,0.149,9,0.113,12,0.34,28,0.535,29,1.185,53,0.008,55,0.966,56,1.441,58,1.004,68,2.412,95,0.336,98,0.619,109,0.26,110,0.409,113,1.945,169,2.016,176,0.951,210,0.432,226,0.005,227,0.005,228,0.004,307,2.823,316,0.286,338,1.195,340,1.558,357,1.596,396,0.329,397,0.942,430,1.271,433,2.876,449,2.044,458,2.761,464,2.016,471,2.357,474,1.048,475,2.412,482,2.279,483,2.279,513,1.906,530,2.139,531,1.675,535,1.808,537,1.808,562,3.457,570,3.559,574,3.813,576,3.02,577,3.189,578,3.02,579,2.875,580,3.189,581,3.354,582,3.873,583,4.787,584,3.189,585,2.635,586,1.96,587,3.02,588,3.02,589,3.02,590,3.02,591,3.02,592,3.189,593,2.875,594,3.189,595,2.635,596,2.748,597,2.875,598,3.343,599,4.135,600,3.448,601,4.489,602,5.486,603,2.875,604,2.875]],["title/interfaces/InjectorApiCallResponse.html",[396,0.205,604,3.008]],["body/interfaces/InjectorApiCallResponse.html",[3,0.156,4,0.156,9,0.118,12,0.355,28,0.559,29,1.22,53,0.008,55,0.646,56,1.267,58,1.049,68,2.484,95,0.344,98,0.646,109,0.263,110,0.427,113,2.004,169,2.106,176,0.979,210,0.431,226,0.007,227,0.006,228,0.004,307,2.887,316,0.299,338,1.112,340,2.488,357,1.667,396,0.335,397,0.984,430,1.793,433,2.611,449,2.082,458,2.844,464,2.106,471,2.462,474,1.095,475,2.484,482,2.38,483,2.38,513,1.991,530,2.234,531,1.75,535,1.888,537,1.888,562,3.314,570,3.215,574,3.899,576,3.154,577,3.331,578,3.154,579,3.002,580,3.331,581,3.405,582,3.601,583,4.506,584,3.331,585,2.752,586,2.047,587,3.154,588,3.154,589,3.154,590,3.154,591,3.154,592,3.331,593,3.002,594,3.331,595,2.752,596,2.87,597,3.002,598,2.55,599,3.154,600,3.351,601,4.591,602,4.259,603,4.055,604,4.055]],["title/interfaces/InjectorMethodOption.html",[396,0.205,596,2.875]],["body/interfaces/InjectorMethodOption.html",[3,0.15,4,0.15,9,0.114,12,0.342,28,0.538,29,1.19,53,0.008,55,0.97,56,1.526,58,1.011,68,2.423,95,0.337,98,0.623,109,0.261,110,0.412,113,1.954,169,2.029,176,1.169,210,0.433,226,0.005,227,0.005,228,0.004,307,2.832,316,0.288,338,1.146,340,1.568,357,1.606,396,0.33,397,0.949,430,1.28,433,2.561,449,2.309,458,2.773,464,2.029,471,2.373,474,1.055,475,2.423,482,2.294,483,2.294,513,1.919,530,2.153,531,1.686,535,1.819,537,1.819,562,3.461,570,3.571,574,3.826,576,3.039,577,3.21,578,3.039,579,2.894,580,3.21,581,3.668,582,3.67,583,4.438,584,3.21,585,2.652,586,1.973,587,3.039,588,3.039,589,3.039,590,3.039,591,3.039,592,3.21,593,2.894,594,3.21,595,3.625,596,3.78,597,3.954,598,2.458,599,3.039,600,3.071,601,3.954,602,4.153,603,2.894,604,2.894]],["title/interfaces/List.html",[166,1.67,396,0.205]],["body/interfaces/List.html",[3,0.131,4,0.131,6,1.673,9,0.099,12,0.299,28,0.469,29,1.26,53,0.008,55,1.269,56,1.259,58,1.751,72,1.698,109,0.261,156,3.294,165,3.514,166,3.086,167,4.256,176,1.413,210,0.392,226,0.003,227,0.005,228,0.003,316,0.251,321,2.004,338,1.108,340,2.716,349,0.94,388,1.368,396,0.382,397,0.827,401,1.47,409,2.52,430,2.017,434,1.546,465,1.141,492,2.224,495,1.629,496,2.143,497,3.168,498,3.168,499,2,500,1.77,501,4.02,502,3.052,503,3.112,504,3.052,505,3.42,506,2.947,507,2.313,508,1.546,509,3.052,510,3.587,511,3.294,512,2.224,513,2.776,514,2.313,515,2.313,516,2.313,517,2.313,518,2.313,519,3.052,520,2.143,521,2.224]],["title/interfaces/ListBlock.html",[396,0.205,502,2.555]],["body/interfaces/ListBlock.html",[3,0.133,4,0.133,6,1.698,9,0.101,12,0.303,28,0.476,29,1.27,53,0.008,55,1.27,56,1.267,58,1.759,72,1.711,109,0.262,156,3.315,165,2.547,166,3.029,167,3.084,176,1.423,210,0.414,226,0.004,227,0.005,228,0.004,316,0.255,321,1.957,338,1.112,340,2.287,349,0.953,388,1.388,396,0.383,397,0.839,401,1.492,409,2.547,430,2.144,434,2.225,465,1.641,492,2.256,495,1.653,496,2.174,497,3.2,498,3.2,499,2.03,500,1.796,501,3.2,502,3.584,503,3.129,504,3.084,505,3.434,506,2.977,507,2.347,508,1.569,509,3.084,510,3.607,511,3.328,512,2.256,513,2.798,514,2.347,515,2.347,516,2.347,517,2.347,518,2.347,519,3.084,520,2.174,521,2.256]],["title/modules/MaterialModule.html",[229,0.886,243,3.16]],["body/modules/MaterialModule.html",[3,0.211,4,0.211,9,0.16,10,2.43,12,0.481,53,0.008,60,3.556,81,4.341,95,0.369,98,0.875,99,3.888,109,0.198,110,0.578,226,0.006,227,0.007,228,0.006,229,1.451,231,2.313,236,2.492,243,5.173,254,3.454,258,3.097,288,6.251,319,6.248,464,3.454,586,3.358,913,6.374,914,5.463,915,8.303,916,8.303,917,7.349,918,7.349,919,6.721]],["title/interfaces/MenuGroup.html",[347,1.711,396,0.205]],["body/interfaces/MenuGroup.html",[3,0.158,4,0.158,9,0.12,12,0.547,14,1.043,23,1.559,28,0.567,29,1.233,48,3.341,53,0.008,55,0.996,56,1.499,57,2.874,64,4.928,72,1.237,75,3.155,88,3.414,95,0.228,109,0.225,141,2.511,165,3.963,166,1.693,173,3.916,174,2.5,186,3.756,226,0.004,227,0.006,228,0.004,305,2.688,316,0.304,338,1.198,347,2.631,349,2.055,355,1.893,358,2.688,383,1.917,396,0.337,397,1,398,3.869,399,3.203,400,3.203,401,1.777,402,3.203,403,4.86,404,5.196,405,4.092,406,2.269,407,3.049,408,4.627,409,2.139,410,2.915,411,4.729,412,3.916,413,4.304,414,2.874,415,4.304,416,4.304,417,4.304,418,3.611]],["title/interfaces/MenuGroup-1.html",[347,1.441,388,1.374,396,0.173]],["body/interfaces/MenuGroup-1.html",[3,0.158,4,0.158,9,0.12,10,1.825,12,0.548,14,1.045,23,1.162,28,0.568,29,1.234,48,3.344,53,0.008,55,0.997,56,1.499,57,2.877,64,4.93,72,1.239,75,3.157,88,3.415,95,0.229,109,0.225,141,2.514,165,3.964,166,1.696,173,3.921,174,2.505,186,3.76,226,0.004,227,0.006,228,0.004,305,2.692,338,1.198,347,2.634,349,2.056,355,1.896,358,2.692,383,1.921,396,0.337,397,1.001,399,3.209,400,3.209,401,1.78,402,3.209,403,4.865,404,5.2,405,4.094,406,2.273,407,3.055,408,4.631,409,2.142,410,2.92,411,4.732,412,3.921,413,4.309,414,2.877,415,4.309,416,4.309,417,4.309,418,3.615,419,3.875]],["title/interfaces/MenuItem.html",[396,0.205,405,2.385]],["body/interfaces/MenuItem.html",[3,0.152,4,0.152,9,0.115,12,0.636,14,1.003,23,1.725,28,0.546,29,1.201,48,3.275,53,0.008,55,1.096,56,1.575,57,3.414,64,4.488,72,1.189,75,2.72,88,3.383,95,0.22,109,0.221,141,2.445,165,3.414,166,1.628,173,5.022,174,3.272,186,4.816,226,0.004,227,0.006,228,0.004,305,2.584,316,0.292,338,1.226,347,2.269,349,1.689,355,1.355,358,2.584,383,1.844,396,0.332,397,0.961,398,3.72,399,3.08,400,3.08,401,1.709,402,3.08,403,5.518,404,5.746,405,4.165,406,2.969,407,3.99,408,4.535,409,2.798,410,4.653,411,5.138,412,2.803,413,3.08,414,2.057,415,3.08,416,3.08,417,3.08,418,2.584]],["title/interfaces/MenuItem-1.html",[388,1.374,396,0.173,405,2.01]],["body/interfaces/MenuItem-1.html",[3,0.152,4,0.152,9,0.115,10,1.755,12,0.636,14,1.005,23,1.52,28,0.546,29,1.202,48,3.278,53,0.008,55,1.097,56,1.575,57,3.417,64,4.491,72,1.191,75,2.723,88,3.384,95,0.22,109,0.221,141,2.448,165,3.417,166,1.63,173,5.024,174,3.275,186,4.818,226,0.004,227,0.006,228,0.004,305,2.589,338,1.226,347,2.272,349,1.69,355,1.357,358,2.589,383,1.847,396,0.332,397,0.963,399,3.085,400,3.085,401,1.712,402,3.085,403,5.521,404,5.748,405,4.167,406,2.972,407,3.995,408,4.539,409,2.802,410,4.657,411,5.14,412,2.808,413,3.085,414,2.06,415,3.085,416,3.085,417,3.085,418,2.589,419,3.726]],["title/classes/MockEditorJS.html",[110,0.428,920,3.55]],["body/classes/MockEditorJS.html",[3,0.166,4,0.166,9,0.126,18,1.919,28,0.597,29,1.276,34,1.484,43,2.049,48,3.062,50,1.623,52,1.7,53,0.008,54,1.122,55,1.161,56,0.886,68,1.968,95,0.356,109,0.231,110,0.718,130,2.185,226,0.004,227,0.006,228,0.004,316,0.548,338,0.891,449,2.138,461,2.667,465,1.452,467,3.362,468,2.633,473,2.974,474,1.171,533,1.826,537,2.019,543,2.944,572,3.33,731,4.352,752,3.211,845,4.352,898,3.562,920,5.004,921,4.074,922,6.024,923,4.629,924,4.455,925,4.629,926,6.646,927,5.033,928,5.033,929,5.267,930,5.033,931,5.033,932,4.074,933,4.074,934,5.004,935,4.074,936,3.789,937,6.024,938,4.074,939,4.074,940,5.38,941,4.074,942,3.789,943,4.074,944,3.211,945,4.074]],["title/injectables/MockNgZone.html",[314,1.074,946,4.173]],["body/injectables/MockNgZone.html",[3,0.178,4,0.178,9,0.135,12,0.406,28,0.638,29,1.333,31,2.139,43,2.369,50,1.614,52,2.344,53,0.008,54,1.547,55,1.055,56,1.222,58,1.199,59,2.05,67,2.596,68,2.713,95,0.257,98,0.739,109,0.167,110,0.488,113,2.188,130,1.916,226,0.005,227,0.006,228,0.005,314,1.58,315,2.05,316,0.547,410,3.28,430,1.958,457,3.806,458,2.406,468,4.503,634,6.142,768,5.15,946,6.142,947,8.607,948,7.618,949,5.377,950,6.94,951,7.44,952,7.684,953,5.617,954,6.94,955,8.119,956,6.94,957,6.94,958,5.377,959,6.572,960,6.94,961,5.377,962,5.377,963,6.94,964,5.377,965,5.377]],["title/classes/MockPlugin.html",[110,0.428,936,3.55]],["body/classes/MockPlugin.html",[3,0.176,4,0.176,9,0.133,18,2.626,28,0.631,31,2.123,34,2.253,43,1.638,48,3.173,50,1.323,53,0.008,67,2.327,68,2.078,95,0.365,109,0.237,110,0.734,130,2.232,226,0.005,227,0.006,228,0.005,316,0.485,338,0.924,449,1.861,461,3.066,465,2.332,467,4.236,473,3.419,474,1.236,533,1.928,537,2.132,543,3.109,572,3.082,731,3.109,752,3.391,845,3.109,898,3.762,920,4.002,921,4.302,922,4.302,923,4.028,925,4.028,929,4.875,932,4.302,933,4.302,934,5.186,935,4.302,936,5.186,937,6.185,938,4.302,939,4.302,940,5.575,941,4.302,942,4.002,943,4.302,944,3.391,945,4.302,966,5.315,967,5.315]],["title/components/NavBarComponent.html",[0,1.556,203,2.385]],["body/components/NavBarComponent.html",[0,2.776,1,2.006,2,2.6,3,0.131,4,0.131,5,2.075,6,1.678,7,1.943,8,2.23,9,0.099,10,2.729,12,0.299,13,3.059,14,1.232,15,1.74,21,2.149,22,4.662,23,2.042,24,3.174,26,3.174,28,0.471,35,4.947,36,3.601,50,1.262,53,0.008,54,1.596,55,0.775,58,0.884,59,1.512,63,1.405,64,4.549,74,6.336,75,3.29,88,3.007,95,0.27,96,3.843,98,0.545,100,1.251,101,2.149,109,0.123,110,0.36,113,1.251,125,3.783,133,2.855,151,2.006,153,3.059,156,2.6,157,3.51,158,4.996,159,4.996,160,3.51,161,3.51,162,3.51,163,3.51,164,3.51,165,1.775,166,1.405,167,2.149,168,4.996,169,3.203,170,5.816,171,3.51,172,3.51,173,2.419,174,2.953,175,3.783,176,0.87,177,4.996,178,3.51,179,3.21,180,3.51,181,4.568,182,3.51,183,3.51,184,3.51,185,2.986,186,2.32,187,3.51,188,3.51,189,1.372,190,3.059,191,2.526,192,1.775,193,4.026,194,2.23,195,2.23,196,1.943,197,1.765,198,1.883,199,3.174,200,1.883,201,2.075,202,2.23,203,3.621,204,4.649,205,2.23,206,1.775,207,1.827,208,2.23,209,1.943,210,0.358,211,1.78,212,2.23,213,2.006,214,2.23,215,2.006,216,1.883,217,2.23,218,1.883,219,2.23,220,1.943,221,2.006,222,2.149,223,1.725,224,2.149,225,2.23,226,0.003,227,0.005,228,0.003,281,6.336,347,2.384,355,1.664,586,2.455,645,3.301,756,3.995,768,4.404,800,3.601,968,7.158,969,3.966,970,7.158,971,4.996,972,5.644,973,5.644,974,6.57,975,5.644,976,3.966,977,3.966,978,3.966,979,5.644,980,3.966,981,5.644]],["title/components/NgxEditorJSBaseComponent.html",[0,1.556,206,2.11]],["body/components/NgxEditorJSBaseComponent.html",[0,2.594,1,0.746,2,1.181,3,0.049,4,0.049,5,0.772,7,0.723,8,0.83,9,0.037,12,0.307,14,0.56,15,1.252,18,0.977,19,2.279,20,3.502,21,0.799,22,3.571,23,0.986,28,0.175,29,0.78,31,0.79,32,2.592,33,3.572,34,2.453,36,1.636,43,0.79,48,1.181,50,1.564,52,1.705,53,0.008,54,1.484,55,1.112,56,0.889,58,1.28,59,2.91,60,3.214,63,0.522,66,1.815,67,2.033,68,2.53,72,1.486,75,0.642,84,0.756,85,2.327,95,0.299,96,3.992,98,0.203,103,3.519,104,0.608,106,0.9,107,0.772,109,0.08,110,0.134,112,1.439,113,1.897,130,1.27,132,2.883,133,2.327,145,1.044,146,1.044,151,0.746,152,3.22,153,1.389,156,1.872,169,2.426,174,1.341,176,1.148,189,0.51,190,2.202,191,2.569,192,0.66,193,2.285,194,0.83,195,0.83,196,0.723,197,1.183,198,2.184,199,1.442,200,0.7,201,0.772,202,0.83,203,0.746,204,0.83,205,0.83,206,2.569,207,0.68,208,0.83,209,0.723,210,0.402,211,0.808,212,0.83,213,0.746,214,0.83,215,0.746,216,0.7,217,0.83,218,0.7,219,0.83,220,0.723,221,0.746,222,0.799,223,0.642,224,0.799,225,0.83,226,0.001,227,0.002,228,0.001,235,1.002,307,0.592,316,0.52,318,2.693,320,1.405,321,0.636,322,1.718,332,1.341,333,1.442,335,2.169,338,0.999,346,1.636,354,1.256,355,2.133,357,0.522,396,0.111,401,1.511,406,1.929,411,1.564,423,0.723,433,2.625,434,1.002,444,1.217,445,1.115,449,1.626,455,1.718,465,0.739,468,1.341,474,0.343,475,1.588,478,1.818,486,1.056,487,1.297,500,2.258,503,1.056,508,2.669,513,1.085,527,0.608,528,1.256,531,1.511,533,1.474,535,2.414,536,2.285,537,2.511,539,1.256,542,1.256,556,1.442,562,2.447,570,1.297,571,4.512,573,2.56,578,1.718,579,2.936,582,2.801,583,1.5,586,1.115,598,1.389,610,3.289,611,1.194,614,2.723,616,2.075,621,0.989,624,1.99,625,1.044,627,3.358,629,1.194,630,1.194,631,3.171,639,1.147,649,1.306,653,1.564,658,2.723,664,1.194,698,2.752,701,2.269,703,3.724,704,3.502,705,4.647,706,5.274,707,3.084,709,1.815,714,1.718,718,1.93,722,2.407,724,1.111,725,3.848,731,1.5,734,4.082,737,2.075,739,1.194,740,1.194,747,1.93,748,1.93,755,1.718,756,1.815,757,2.723,765,2.075,766,1.93,768,4.337,772,2.876,787,1.93,799,1.111,800,3.663,807,2.56,820,2.723,821,3.464,844,1.194,845,2.376,851,1.93,860,1.93,861,1.442,880,1.93,959,3.289,982,1.306,983,2.269,984,2.269,985,1.718,986,2.564,987,2.564,988,2.075,989,3.289,990,3.01,991,3.01,992,3.01,993,3.01,994,3.01,995,2.269,996,2.269,997,3.596,998,3.596,999,2.269,1000,3.084,1001,2.169,1002,2.279,1003,2.279,1004,2.279,1005,3.084,1006,2.752,1007,2.752,1008,1.306,1009,2.564,1010,1.718,1011,1.475,1012,1.475,1013,3.502,1014,1.815,1015,2.075,1016,2.075,1017,2.075,1018,1.475,1019,2.202,1020,1.815,1021,1.475,1022,1.475,1023,1.718,1024,2.075,1025,1.475,1026,1.93,1027,1.475,1028,3.059,1029,1.475,1030,2.075,1031,2.075,1032,1.475,1033,2.075,1034,1.718,1035,3.256,1036,1.475,1037,1.475,1038,5.066,1039,1.475,1040,2.876,1041,1.475,1042,1.475,1043,1.475,1044,1.93,1045,2.269,1046,3.01,1047,3.596,1048,1.475,1049,2.075,1050,2.269,1051,2.269,1052,2.269,1053,3.596,1054,1.475,1055,1.442,1056,1.475,1057,2.269,1058,1.815,1059,1.475,1060,2.269,1061,2.269,1062,1.475,1063,2.269,1064,1.475,1065,2.269,1066,1.475,1067,2.269,1068,1.475,1069,1.475,1070,1.475,1071,2.269,1072,2.269,1073,2.269,1074,1.475,1075,2.269,1076,4.798,1077,1.475,1078,3.01,1079,2.564,1080,1.306,1081,1.306,1082,1.475,1083,1.475,1084,1.475,1085,1.475,1086,2.564,1087,2.269,1088,1.475,1089,1.475,1090,1.475,1091,1.475,1092,1.475,1093,1.475,1094,1.475,1095,2.269,1096,1.475,1097,1.475,1098,1.475,1099,3.01,1100,1.306,1101,1.306,1102,1.306,1103,1.306]],["title/components/NgxEditorJSComponent.html",[0,1.556,207,2.172]],["body/components/NgxEditorJSComponent.html",[0,2.648,1,1.046,2,1.573,3,0.068,4,0.068,5,1.082,6,0.875,7,1.013,8,1.163,9,0.052,12,0.382,14,0.745,20,3.416,21,1.12,22,4.098,23,1.228,24,1.92,26,1.92,28,0.245,29,0.655,31,1.052,32,4.071,33,4.721,34,2.241,36,2.178,43,1.052,48,0.952,50,1.677,52,2.037,53,0.008,54,1.628,55,1.175,56,1.175,58,1.542,59,2.897,60,2.332,63,0.732,66,1.463,67,2.407,68,2.785,72,1.31,75,0.899,78,1.557,84,0.61,85,1.727,95,0.288,97,1.557,98,0.284,103,3.527,106,1.261,107,1.082,109,0.064,110,0.188,112,1.845,113,1.076,125,2.288,130,0.571,132,0.952,133,1.046,145,1.463,146,1.463,151,1.046,152,2.781,153,2.362,156,2.008,169,1.527,174,1.786,176,1.066,181,1.673,189,0.715,190,2.362,191,2.507,192,1.951,193,2.846,194,1.163,195,1.163,196,1.013,197,1.509,198,1.621,199,1.92,200,0.982,201,1.082,202,1.163,203,1.046,204,1.163,205,1.163,206,3.907,207,2.332,208,1.163,209,1.013,210,0.396,211,1.076,212,1.163,213,1.046,214,1.163,215,1.046,216,0.982,217,1.163,218,0.982,219,1.163,220,1.013,221,1.046,222,1.12,223,2.201,224,1.12,225,1.163,226,0.002,227,0.003,228,0.002,316,0.356,318,2.265,320,1.18,321,0.513,322,1.386,332,1.082,333,2.452,338,0.928,346,1.319,354,1.013,355,2.1,388,0.715,401,0.769,406,1.621,411,1.261,430,0.963,433,2.315,434,1.704,444,0.982,445,0.899,449,1.367,455,1.386,465,0.596,467,1.727,468,1.786,475,0.808,478,1.527,486,0.852,487,1.046,500,1.951,503,0.852,508,2.608,512,1.92,513,0.875,531,1.269,533,1.238,535,1.749,536,1.163,537,2.03,539,1.013,542,1.013,556,1.163,562,1.704,571,4.044,573,2.57,579,2.781,581,2.7,582,2.507,583,2.55,586,0.899,598,1.12,610,4.096,611,1.673,614,3.392,622,1.673,623,1.673,624,2.954,625,1.463,626,1.83,627,2.96,631,2.55,635,2.178,638,1.386,639,0.925,653,1.261,658,1.386,664,1.673,680,2.57,681,2.416,682,3.021,683,3.859,698,1.673,703,4.096,704,3.416,705,5.165,706,5.38,707,3.392,708,1.83,709,1.463,714,1.386,718,1.557,721,1.83,722,1.463,723,1.83,724,1.557,725,1.386,731,2.55,734,3.282,736,1.83,737,1.673,738,1.83,739,1.673,740,1.673,747,2.57,748,2.57,755,1.386,756,2.416,757,2.288,768,3.754,772,1.463,787,1.557,799,1.557,820,2.288,845,1.996,860,1.557,885,3.81,887,3.529,890,1.83,909,1.83,959,2.763,989,1.673,992,3.021,993,3.021,994,3.021,995,3.021,996,3.021,997,3.859,998,3.859,999,3.021,1000,2.922,1001,2.178,1002,2.288,1003,2.288,1004,2.288,1005,2.922,1006,2.763,1007,2.763,1008,1.83,1010,2.288,1013,3.087,1014,1.463,1015,1.673,1016,1.673,1017,1.673,1019,1.85,1020,1.463,1023,1.386,1024,1.673,1026,1.557,1028,2.57,1030,1.673,1031,1.673,1033,1.673,1034,1.386,1035,2.416,1038,4.534,1040,2.416,1044,1.557,1045,1.83,1046,3.021,1047,3.021,1049,1.673,1050,1.83,1051,1.83,1052,1.83,1053,3.021,1055,1.163,1057,1.83,1058,1.463,1060,1.83,1061,1.83,1063,1.83,1065,1.83,1067,1.83,1071,1.83,1072,1.83,1073,1.83,1075,3.859,1076,4.958,1104,2.067,1105,2.57,1106,3.413,1107,2.57,1108,4.359,1109,3.413,1110,3.413,1111,3.021,1112,8.594,1113,2.067,1114,2.067,1115,2.067,1116,2.067,1117,2.067,1118,2.067,1119,2.067,1120,2.067,1121,2.067,1122,2.067,1123,2.067,1124,2.067,1125,2.067,1126,2.067,1127,2.067,1128,2.067,1129,3.413,1130,2.067,1131,2.067,1132,2.067,1133,2.067,1134,2.067,1135,2.067,1136,2.067,1137,2.067,1138,2.067,1139,2.067,1140,2.067,1141,2.067,1142,2.067,1143,3.413,1144,3.413,1145,2.067,1146,2.067,1147,2.067,1148,2.067,1149,2.067,1150,2.067]],["title/interfaces/NgxEditorJSConfig.html",[396,0.205,1151,3.55]],["body/interfaces/NgxEditorJSConfig.html",[3,0.138,4,0.138,9,0.105,12,0.315,28,0.495,29,1.123,48,2.694,53,0.008,54,1.304,55,1.15,56,1.589,57,1.866,58,1.781,72,2.068,95,0.279,98,0.573,109,0.239,113,2.129,153,3.169,176,1.232,191,2.617,210,0.418,226,0.004,227,0.005,228,0.004,292,2.952,307,2.709,316,0.265,320,2.532,321,1.981,338,1.141,355,1.724,396,0.254,397,0.872,433,2.45,458,2.617,471,2.182,474,0.97,475,3.124,482,2.11,483,2.958,503,2.409,508,2.64,527,3.015,539,2.864,562,2.862,570,2.11,572,3.022,574,3.169,582,1.866,586,1.814,597,2.661,631,3.42,639,2.617,653,3.567,704,3.567,800,3.731,864,4.139,925,2.439,1000,4.906,1001,4.67,1002,4.906,1003,4.906,1004,4.906,1005,5.355,1019,3.169,1023,3.919,1034,3.919,1035,5.181,1151,5.511,1152,3.376,1153,5.176,1154,4.139,1155,4.403,1156,5.176,1157,5.176,1158,4.734,1159,4.734,1160,5.176,1161,2.952,1162,3.376,1163,2.952,1164,3.376,1165,3.376,1166,2.795,1167,3.14,1168,3.376,1169,2.795,1170,3.376,1171,3.376]],["title/interfaces/NgxEditorJSDemo.html",[396,0.205,448,2.309]],["body/interfaces/NgxEditorJSDemo.html",[3,0.153,4,0.153,9,0.116,12,0.35,14,1.559,23,1.528,28,0.551,29,1.209,53,0.008,54,1.404,55,0.865,61,3.084,72,1.201,84,2.107,88,1.726,95,0.301,100,1.464,109,0.256,141,3.131,148,4.045,176,1.181,197,1.802,210,0.422,211,2.872,226,0.004,227,0.006,228,0.004,316,0.295,320,2.178,321,2.184,338,0.623,340,1.605,347,2.906,349,1.698,354,2.274,355,1.369,359,2.348,360,2.348,361,3.696,383,3.213,396,0.374,397,0.971,405,2.348,414,2.077,430,1.31,435,2.139,440,3.111,441,2.516,442,2.611,443,2.901,444,2.204,445,2.019,446,3.294,447,3.412,448,3.084,449,2.231,450,3.294,451,2.429]],["title/interfaces/NgxEditorJSDemo-1.html",[388,1.374,396,0.173,448,1.946]],["body/interfaces/NgxEditorJSDemo-1.html",[3,0.158,4,0.158,9,0.12,10,1.825,12,0.361,14,1.584,23,1.162,28,0.568,29,1.234,53,0.008,54,1.433,55,0.658,61,3.149,72,1.239,84,2.14,88,1.78,95,0.307,100,1.51,109,0.259,141,3.164,176,1.196,197,1.819,210,0.425,211,2.855,226,0.004,227,0.006,228,0.004,320,2.223,321,2.196,338,0.642,340,1.656,347,2.333,349,1.725,354,2.345,355,1.412,359,2.422,360,2.422,361,3.729,383,3.247,396,0.376,397,1.001,414,2.142,430,1.351,435,2.206,441,2.594,442,2.692,443,2.962,444,2.273,445,2.083,446,3.363,447,3.484,448,3.149,449,2.252,450,3.363,451,2.505,452,3.209]],["title/interfaces/NgxEditorJSDemoData.html",[396,0.205,450,2.467]],["body/interfaces/NgxEditorJSDemoData.html",[3,0.159,4,0.159,9,0.121,12,0.364,14,1.59,23,1.568,53,0.008,54,1.44,61,3.164,72,1.248,84,2.148,88,1.793,95,0.309,100,1.52,109,0.259,141,3.172,148,3.164,176,0.996,197,1.822,210,0.426,211,2.873,226,0.004,227,0.006,228,0.004,316,0.306,320,1.667,321,2.199,338,0.647,340,1.667,347,2.643,349,1.731,354,2.361,355,1.422,359,2.439,360,2.439,361,3.817,383,3.255,396,0.371,397,1.008,405,2.439,414,2.157,430,1.823,435,2.221,440,3.231,441,2.613,442,2.711,443,2.976,444,2.289,445,2.097,446,2.522,447,2.613,448,2.361,449,1.745,450,3.811,451,2.522]],["title/interfaces/NgxEditorJSDemoData-1.html",[388,1.374,396,0.173,450,2.078]],["body/interfaces/NgxEditorJSDemoData-1.html",[3,0.162,4,0.162,9,0.123,10,1.867,12,0.37,14,1.602,23,1.189,53,0.008,54,1.455,61,3.197,72,1.268,84,2.165,88,1.821,95,0.312,100,1.545,109,0.26,141,3.189,176,1.006,197,1.831,210,0.428,211,2.865,226,0.004,227,0.006,228,0.004,320,1.694,321,2.206,338,0.657,340,1.694,347,2.369,349,1.745,354,2.399,355,1.444,359,2.478,360,2.478,361,3.832,383,3.272,396,0.372,397,1.025,414,2.192,430,1.842,435,2.257,441,2.655,442,2.755,443,3.008,444,2.326,445,2.131,446,2.563,447,2.655,448,2.399,449,1.764,450,3.841,451,2.563,452,3.283]],["title/components/NgxEditorJSDemoHomeComponent.html",[0,1.556,209,2.309]],["body/components/NgxEditorJSDemoHomeComponent.html",[0,2.861,1,2.294,2,3.496,3,0.15,4,0.15,5,2.373,6,1.919,7,2.221,8,2.55,9,0.114,14,1.353,15,1.91,21,2.458,22,4.751,23,1.842,24,3.485,26,3.485,53,0.008,54,1.692,60,3.938,61,3.716,63,1.606,75,1.973,81,4.267,95,0.217,98,0.623,100,2.586,109,0.141,110,0.412,148,3.035,151,2.294,189,1.568,190,3.358,191,2.773,192,2.029,193,4.267,194,2.55,195,2.55,196,2.221,197,1.892,198,3.772,199,3.485,200,2.153,201,4.471,202,2.55,203,2.294,204,2.55,205,2.55,206,2.029,207,2.089,208,2.55,209,3.716,210,0.442,211,2.849,212,2.55,213,2.294,214,2.55,215,2.294,216,2.153,217,2.55,218,2.153,219,2.55,220,2.221,221,2.294,222,2.458,223,1.973,224,2.458,225,2.55,226,0.004,227,0.005,228,0.004,229,1.426,316,0.288,406,3.602,433,2.248,520,3.358,581,3.211,585,4.438,600,2.696,635,3.954,744,3.671,749,5.714,750,5.016,839,4.386,900,4.666,988,5.016,1013,4.628,1172,4.535,1173,4.014,1174,3.78,1175,6.197,1176,4.666,1177,3.625,1178,5.485]],["title/components/NgxEditorJSDemoInfoComponent.html",[0,1.556,213,2.385]],["body/components/NgxEditorJSDemoInfoComponent.html",[0,2.556,1,1.74,2,2.345,3,0.221,4,0.114,5,1.8,6,1.456,7,1.685,8,1.935,9,0.086,18,1.94,21,1.864,22,4.558,23,2.098,24,2.863,26,2.863,28,0.408,31,1.569,34,1.974,36,3.248,38,2.863,50,1.487,52,1.162,53,0.008,54,1.593,55,0.982,56,0.606,59,1.311,63,1.218,64,4.566,67,2.047,68,2.369,72,1.85,75,1.497,84,1.974,85,3.065,88,2.658,94,5.381,95,0.29,96,4.18,98,0.472,102,1.8,104,1.417,109,0.107,110,0.312,111,1.539,113,1.085,119,4.12,125,3.412,130,0.95,148,3.665,151,1.74,153,2.759,154,2.59,189,1.19,190,2.759,191,2.278,192,1.539,193,3.766,194,1.935,195,1.935,196,1.685,197,1.772,198,1.633,199,2.863,200,1.633,201,1.8,202,1.935,203,1.74,204,1.935,205,1.935,206,1.539,207,1.585,208,1.935,209,1.685,210,0.374,211,2.726,212,1.935,213,3.387,214,1.935,215,1.74,216,1.633,217,1.935,218,1.633,219,1.935,220,1.685,221,1.74,222,1.864,223,1.497,224,1.864,225,1.935,226,0.003,227,0.004,228,0.003,316,0.505,332,2.663,338,0.683,346,3.248,347,2.198,351,4.12,359,1.74,371,2.435,372,2.435,412,3.105,618,5.363,638,2.306,697,4.74,710,5.927,811,6.268,812,5.927,813,3.045,841,3.412,885,3.833,888,2.785,889,2.785,1177,2.977,1179,7.95,1180,7.037,1181,3.44,1182,6.059,1183,5.09,1184,5.09,1185,5.363,1186,7.147,1187,6.059,1188,3.44,1189,3.44,1190,3.44,1191,3.44,1192,3.44,1193,5.09,1194,3.44,1195,3.44,1196,3.44,1197,3.44,1198,3.44,1199,3.44,1200,3.44,1201,2.493,1202,4.12,1203,3.833,1204,5.09,1205,5.09,1206,5.09,1207,4.12,1208,5.09,1209,3.833,1210,5.09,1211,3.44]],["title/directives/NgxEditorJSDirective.html",[192,2.11,223,2.051]],["body/directives/NgxEditorJSDirective.html",[0,2.315,2,1.338,3,0.056,4,0.056,7,1.422,9,0.043,12,0.338,13,1.573,15,0.895,18,1.107,19,2.542,20,2.731,21,0.924,22,1.519,28,0.202,31,0.895,32,2.857,33,3.169,34,2.373,36,1.853,38,1.633,43,0.895,48,1.338,50,1.579,52,1.281,53,0.008,54,1.12,55,1.105,56,0.668,58,0.845,59,2.443,60,2.063,66,2.055,67,1.846,68,2.137,70,1.38,72,1.59,76,1.143,84,1.118,85,1.918,95,0.279,96,3.999,98,0.234,102,0.892,103,2.218,104,0.702,106,1.04,107,0.892,109,0.053,110,0.155,111,2.004,112,1.895,113,2.093,116,1.38,117,3.371,130,1.611,132,2.063,152,3.92,153,1.573,156,2.063,169,2.004,174,1.519,176,1.146,190,1.573,191,3.377,192,3.465,197,0.634,198,0.809,210,0.416,222,0.924,223,1.263,224,1.573,226,0.002,227,0.003,228,0.002,307,1.165,316,0.526,318,3.06,320,1.549,321,0.72,323,1.698,332,1.519,333,1.633,338,1.05,346,1.853,355,2.225,401,1.08,406,1.379,433,2.92,434,1.483,444,1.379,445,1.263,449,1.847,455,1.946,465,0.837,474,0.397,475,1.964,478,2.004,486,1.844,487,1.469,500,2.446,503,1.196,508,2.402,513,2.469,527,0.702,530,0.809,531,1.665,533,1.625,535,1.165,537,2.015,539,1.422,542,1.422,562,2.742,571,3.593,572,2.446,573,3.782,574,2.962,581,3.034,582,1.299,598,1.573,614,3.001,624,3.009,625,1.207,631,2.619,635,1.853,638,1.946,639,2.749,645,1.698,653,2.313,658,1.946,697,3.555,702,3.001,704,1.771,706,2.684,707,2.542,709,3.169,714,1.946,717,2.57,722,2.684,724,1.284,725,3.91,731,1.698,734,2.186,756,2.055,757,3.001,761,3.371,768,4.582,772,2.055,787,2.186,800,3.487,819,1.509,820,3.001,821,3.371,844,1.38,845,2.619,853,2.186,860,2.186,861,2.825,923,0.997,942,2.186,944,1.088,989,2.35,1000,3.91,1001,2.857,1002,3.366,1003,3.366,1004,3.366,1005,3.91,1006,3.07,1007,3.07,1010,1.946,1013,1.771,1014,2.055,1015,2.35,1016,2.35,1017,2.35,1019,1.573,1020,2.055,1023,1.946,1024,2.35,1026,3.371,1028,3.371,1030,2.35,1031,2.35,1033,2.35,1034,1.946,1035,3.555,1038,5.373,1040,2.055,1044,4.825,1080,1.509,1087,1.509,1095,1.509,1099,3.357,1100,1.509,1101,1.509,1102,1.509,1103,1.509,1176,2.186,1177,2.218,1207,1.38,1212,8.274,1213,1.705,1214,3.169,1215,2.35,1216,3.792,1217,2.57,1218,4.478,1219,2.903,1220,1.705,1221,4.478,1222,1.705,1223,3.792,1224,1.705,1225,1.705,1226,1.705,1227,1.705,1228,1.705,1229,1.705,1230,1.705,1231,1.705,1232,1.705,1233,1.705,1234,1.705,1235,1.705,1236,1.705,1237,1.705,1238,1.705,1239,1.705,1240,2.903,1241,1.705,1242,1.705,1243,3.555,1244,2.903,1245,2.903,1246,4.478,1247,1.705,1248,2.57,1249,2.903,1250,2.903,1251,2.903,1252,2.57,1253,2.903,1254,2.903,1255,1.705,1256,2.57,1257,1.38,1258,1.705,1259,1.705,1260,1.705,1261,1.705,1262,1.705,1263,1.705,1264,1.705,1265,1.705,1266,2.35,1267,1.705,1268,1.705,1269,1.207,1270,1.705,1271,1.705,1272,1.705,1273,1.705,1274,5.834,1275,1.705,1276,1.705,1277,1.705,1278,1.705,1279,1.705,1280,1.705,1281,1.705,1282,1.705,1283,1.705,1284,1.705,1285,1.705,1286,1.705,1287,1.705,1288,2.903,1289,1.705,1290,1.38,1291,1.705,1292,1.705,1293,1.705,1294,1.705,1295,1.705,1296,1.705,1297,1.705,1298,1.705,1299,1.705,1300,1.705,1301,1.705,1302,1.705,1303,1.38]],["title/injectables/NgxEditorJSEffects.html",[314,1.074,1304,4.173]],["body/injectables/NgxEditorJSEffects.html",[3,0.16,4,0.16,9,0.121,28,0.575,29,1.245,43,1.494,50,1.245,52,1.637,53,0.008,54,1.08,55,0.666,56,0.853,58,1.08,59,1.848,78,3.649,85,3.694,95,0.408,98,0.666,100,1.528,104,1.996,107,2.536,109,0.15,110,0.44,111,2.169,112,2.743,113,2.044,130,2.153,176,0.747,210,0.406,226,0.004,227,0.006,228,0.004,314,1.476,315,1.848,316,0.464,321,1.607,357,1.717,449,2.259,458,2.901,474,1.127,533,2.65,537,2.601,546,4.891,554,3.092,555,4.995,557,4.272,562,2.534,624,3.819,761,5.499,807,3.649,808,6.464,898,3.43,923,3.791,944,4.136,1049,5.247,1303,5.247,1304,5.737,1305,7.303,1306,4.847,1307,4.847,1308,7.402,1309,4.847,1310,6.482,1311,6.482,1312,7.797,1313,6.482,1314,6.482,1315,6.482,1316,6.482,1317,6.482,1318,4.847,1319,4.847,1320,4.847,1321,3.649,1322,4.847,1323,4.847,1324,4.847,1325,4.847,1326,4.847]],["title/injectables/NgxEditorJSInstanceService.html",[314,1.074,1327,3.008]],["body/injectables/NgxEditorJSInstanceService.html",[3,0.051,4,0.051,9,0.039,12,0.39,15,1.29,16,0.983,17,1.698,20,0.94,28,0.183,31,1.29,34,2.482,43,0.821,50,1.359,52,2.391,53,0.008,54,1.607,55,0.972,56,1.22,58,1.054,59,2.698,60,2.177,67,2.634,68,2.492,70,1.247,84,1.234,85,4.076,95,0.247,98,0.212,102,1.839,103,2.056,104,0.635,106,0.94,107,0.806,109,0.048,110,0.319,111,2.852,112,1.126,113,2.312,116,2.845,130,1.991,132,3.556,145,1.09,146,1.09,169,1.191,210,0.432,226,0.006,227,0.002,228,0.001,307,2.225,314,0.606,315,0.587,316,0.458,318,2.623,321,0.382,323,1.557,332,0.806,333,2.658,338,0.634,340,0.533,355,1.036,356,1.032,357,1.964,371,2.962,372,1.09,424,2.155,433,2.98,434,0.602,449,1.658,458,1.191,464,1.873,468,1.393,474,0.358,475,1.041,495,1.724,513,1.126,527,0.635,528,1.721,529,2.144,530,1.264,531,1.307,532,1.623,533,1.715,534,1.623,535,1.41,536,0.866,537,2.075,540,1.623,562,3.192,570,4.015,572,1.191,574,1.905,576,2.805,579,2.67,580,2.962,581,2.995,582,3.454,583,2.448,586,2.056,587,1.032,588,1.032,589,1.032,590,1.032,593,0.983,595,1.557,596,5.194,598,2.268,600,2.772,601,2.67,602,1.784,603,1.698,604,0.983,631,1.557,639,2.623,702,1.784,706,3.66,709,1.09,712,2.004,715,2.004,716,2.004,718,2.004,731,3.243,752,2.67,755,2.805,757,1.784,766,3.151,805,1.09,814,1.247,820,2.805,836,2.845,840,1.226,845,1.557,861,1.497,904,2.155,923,0.901,929,3.345,944,2.242,948,5.189,951,3.704,953,2.155,985,1.784,1010,1.032,1014,3.66,1019,1.442,1040,1.884,1058,1.884,1081,1.364,1111,2.356,1154,1.884,1155,2.004,1161,1.884,1174,0.94,1203,3.151,1243,1.884,1256,3.111,1257,2.155,1290,1.247,1327,2.67,1328,7.211,1329,1.54,1330,3.515,1331,2.662,1332,2.155,1333,2.662,1334,2.662,1335,1.54,1336,5.171,1337,1.54,1338,2.662,1339,2.356,1340,4.183,1341,1.54,1342,2.155,1343,3.704,1344,2.155,1345,3.704,1346,2.356,1347,2.356,1348,4.488,1349,2.356,1350,1.54,1351,2.662,1352,1.54,1353,3.515,1354,2.662,1355,1.54,1356,2.662,1357,2.662,1358,1.54,1359,2.356,1360,2.662,1361,2.356,1362,1.54,1363,2.356,1364,1.54,1365,2.356,1366,1.54,1367,2.662,1368,2.356,1369,1.54,1370,2.662,1371,1.54,1372,2.662,1373,1.54,1374,2.356,1375,1.54,1376,3.151,1377,2.356,1378,4.183,1379,1.54,1380,1.247,1381,1.247,1382,1.247,1383,2.662,1384,1.54,1385,1.54,1386,1.54,1387,3.515,1388,1.54,1389,3.515,1390,1.54,1391,3.515,1392,1.54,1393,5.171,1394,1.54,1395,1.54,1396,1.54,1397,1.54,1398,1.364,1399,1.54,1400,1.54,1401,2.662,1402,4.185,1403,2.662,1404,3.515,1405,4.185,1406,1.54,1407,1.364,1408,1.54,1409,1.364,1410,1.54,1411,3.515,1412,1.54,1413,1.54,1414,1.54,1415,1.54,1416,1.54,1417,4.726,1418,1.54,1419,1.54,1420,4.185,1421,4.185,1422,1.54,1423,2.662,1424,2.662,1425,1.54,1426,1.54,1427,1.54,1428,1.54,1429,4.185,1430,1.54,1431,1.54,1432,1.54,1433,2.662,1434,1.54,1435,1.54,1436,1.54,1437,1.54,1438,1.54,1439,1.54,1440,1.54,1441,1.54,1442,1.54,1443,2.662,1444,2.662,1445,1.54,1446,1.54,1447,2.662,1448,1.54,1449,1.54,1450,1.54,1451,1.247,1452,1.54,1453,3.515,1454,1.54,1455,1.54,1456,2.155,1457,1.54,1458,1.54]],["title/modules/NgxEditorJSModule.html",[229,0.886,244,2.758]],["body/modules/NgxEditorJSModule.html",[3,0.117,4,0.117,9,0.088,12,0.391,14,1.479,15,1.597,16,4.323,31,1.086,43,1.086,50,0.677,52,1.19,53,0.008,54,0.786,55,0.484,56,1.439,57,2.319,58,1.155,60,2.387,67,1.19,76,2.362,95,0.423,98,0.484,99,2.149,100,1.634,109,0.161,110,0.47,130,1.697,132,1.624,151,2.621,189,1.219,206,3.813,207,3.926,210,0.39,218,4.046,223,3.707,226,0.003,227,0.005,228,0.003,229,1.357,231,1.279,232,1.378,233,2.673,234,1.533,235,2.649,236,2.402,244,5.327,247,2.319,248,1.491,249,1.452,254,1.91,258,2.465,292,3.667,301,2.248,316,0.329,332,2.711,423,3.697,433,2.458,434,2.026,466,3.031,468,2.711,474,0.82,475,2.649,572,3.492,582,3.032,591,4.118,593,3.306,595,2.061,598,3.671,607,2.852,621,2.362,622,2.852,623,2.852,624,3.697,625,2.494,642,4.586,645,3.031,900,3.901,914,3.667,925,4.415,1163,3.667,1166,2.362,1167,4.627,1177,4.682,1327,4.816,1381,2.852,1459,3.119,1460,3.119,1461,3.119,1462,3.119,1463,4.415,1464,4.586,1465,3.119,1466,5.439,1467,4.586,1468,3.524,1469,3.524,1470,5.996,1471,6.145,1472,3.473,1473,2.248,1474,5.181,1475,5.181,1476,4.586,1477,4.586,1478,4.586,1479,3.524,1480,3.524,1481,3.524,1482,3.524,1483,3.524,1484,3.524,1485,3.524,1486,3.119,1487,3.119,1488,3.524,1489,5.181,1490,4.194,1491,3.119,1492,5.181,1493,3.524,1494,3.524]],["title/interfaces/NgxEditorJSModuleConfig.html",[396,0.205,925,2.758]],["body/interfaces/NgxEditorJSModuleConfig.html",[3,0.161,4,0.161,9,0.122,12,0.368,28,0.579,29,1.251,48,2.249,53,0.008,54,1.088,55,0.67,56,1.147,57,2.184,58,1.634,72,1.685,95,0.311,98,0.67,109,0.253,113,2.311,153,2.645,176,1.13,191,2.184,210,0.444,226,0.004,227,0.006,228,0.004,292,4.61,307,2.94,316,0.31,320,2.252,321,1.615,338,0.983,355,1.439,396,0.283,397,1.021,433,2.363,458,2.184,471,2.554,474,1.135,475,3.276,482,2.469,483,3.294,503,2.011,508,1.908,527,2.683,539,2.391,562,1.908,570,3.294,572,2.914,574,4.237,582,2.914,586,2.123,597,4.155,631,2.855,639,2.184,653,2.977,704,2.977,800,3.114,864,3.455,925,3.809,1000,3.271,1001,3.114,1002,3.271,1003,3.271,1004,3.271,1005,4.365,1019,2.645,1023,3.271,1034,3.271,1035,4.61,1151,5.518,1152,3.951,1153,4.32,1154,3.455,1155,3.675,1156,4.32,1157,4.32,1158,3.951,1159,3.951,1160,4.32,1161,4.61,1162,3.951,1163,3.455,1164,3.951,1165,3.951,1166,3.271,1167,3.675,1168,3.951,1169,3.271,1170,3.951,1171,3.951]],["title/injectables/NgxEditorJSPluginService.html",[314,1.074,1463,2.758]],["body/injectables/NgxEditorJSPluginService.html",[3,0.117,4,0.117,9,0.089,12,0.513,14,1.482,15,1.603,16,2.26,28,0.421,31,1.603,34,2.54,38,2.925,43,1.092,50,1.452,52,2.444,53,0.008,54,1.686,55,0.993,56,1.376,58,0.79,59,1.35,66,4.807,67,2.764,68,2.033,95,0.249,98,0.486,109,0.11,110,0.616,111,1.585,130,2.088,132,3.484,210,0.26,226,0.003,227,0.005,228,0.003,252,3.681,271,3.927,314,1.184,315,1.35,316,0.497,318,3.384,320,1.799,338,1.144,349,1.976,357,3.051,401,1.934,433,1.887,444,2.469,445,1.541,461,3.034,465,2.582,467,1.792,476,4.395,478,2.327,479,3.605,481,1.887,485,3.748,487,3.659,528,2.547,572,2.327,581,2.201,584,3.681,712,2.667,858,5.068,1028,3.916,1161,3.681,1169,4.552,1380,2.867,1382,2.867,1456,2.867,1463,3.042,1495,3.542,1496,5.201,1497,5.201,1498,6.011,1499,3.542,1500,3.542,1501,6.791,1502,5.201,1503,5.201,1504,5.201,1505,3.542,1506,5.201,1507,3.542,1508,5.201,1509,3.542,1510,6.791,1511,5.201,1512,3.542,1513,3.542,1514,3.542,1515,5.201,1516,2.072,1517,2.667,1518,3.542,1519,3.542,1520,3.542,1521,3.542,1522,3.542,1523,6.791,1524,3.542,1525,3.542,1526,3.542,1527,3.542,1528,3.542,1529,5.201,1530,5.201,1531,5.201]],["title/injectables/NgxEditorJSService.html",[314,1.074,624,2.309]],["body/injectables/NgxEditorJSService.html",[3,0.077,4,0.077,9,0.058,12,0.41,15,1.16,16,1.487,17,2.401,28,0.277,31,1.16,34,2.606,43,1.16,50,1.455,52,2.609,53,0.008,54,1.836,55,1.061,56,1.335,58,0.519,59,1.805,60,1.734,67,2.806,68,2.625,84,1.11,85,4.294,95,0.345,98,0.32,104,0.96,107,1.219,109,0.072,110,0.211,111,2.119,112,1.593,113,1.187,115,4.516,130,1.647,132,3.559,210,0.421,226,0.005,227,0.003,228,0.002,307,0.935,314,0.857,315,0.888,316,0.491,318,2.119,323,2.201,332,1.969,340,0.806,355,1.11,356,1.562,357,1.925,371,1.649,372,1.649,418,2.117,424,3.046,433,3.06,445,1.637,449,1.724,458,1.684,464,2.432,474,0.542,478,1.043,485,2.06,486,1.55,495,2.239,513,1.593,527,1.95,528,1.843,530,2.581,531,1.399,533,1.972,535,2.56,538,3.468,539,2.662,562,3.069,567,4.4,570,4.294,572,1.684,574,2.946,581,0.986,582,3.717,595,1.363,596,5.29,598,2.946,599,4.277,600,3.297,601,3.468,602,2.522,603,2.401,604,1.487,624,2.662,631,2.201,639,2.432,645,2.201,647,4.811,702,2.522,731,3.179,752,2.401,755,3.643,757,2.522,820,3.643,840,2.504,845,2.201,904,3.046,924,2.062,925,3.179,929,3.847,985,2.522,1014,4.516,1019,2.04,1020,4.516,1155,2.834,1161,2.664,1163,1.649,1174,2.888,1201,1.843,1203,3.565,1217,6.186,1257,3.046,1269,2.664,1290,4.4,1327,3.468,1332,3.046,1339,3.331,1340,5.281,1342,3.046,1343,4.811,1344,3.046,1345,4.811,1346,3.331,1347,3.331,1348,4.4,1349,3.331,1359,3.331,1361,3.331,1363,3.331,1365,3.331,1368,3.331,1374,3.331,1376,4.093,1377,3.331,1378,5.281,1380,1.886,1381,1.886,1382,1.886,1398,2.062,1407,2.062,1463,3.179,1470,3.331,1486,2.062,1532,2.33,1533,4.735,1534,2.33,1535,2.33,1536,2.33,1537,3.764,1538,3.764,1539,2.33,1540,3.764,1541,2.33,1542,3.764,1543,3.764,1544,2.33,1545,2.33,1546,6.381,1547,2.33,1548,2.33,1549,2.33,1550,2.33,1551,2.33,1552,2.33,1553,2.33,1554,2.33,1555,2.33,1556,2.33,1557,2.33,1558,2.33,1559,2.33,1560,2.33,1561,2.33,1562,2.33,1563,2.33,1564,2.33,1565,2.33,1566,2.33,1567,2.33]],["title/modules/NgxEditorjsDemoModule.html",[229,0.886,245,3.337]],["body/modules/NgxEditorjsDemoModule.html",[3,0.129,4,0.129,9,0.098,10,1.492,23,0.95,53,0.008,95,0.43,98,0.538,99,2.388,100,2.057,109,0.122,110,0.355,189,1.354,196,4.328,197,1.221,209,3.834,210,0.376,215,3.96,220,4.328,226,0.003,227,0.005,228,0.003,229,0.736,231,1.421,232,1.531,233,2.838,234,1.703,235,2.186,236,2.551,243,5.246,244,4.578,245,6.655,246,5.246,247,2.503,248,1.657,249,1.613,254,3.031,258,2.244,274,3.465,275,3.169,288,4.211,304,3.169,305,2.202,316,0.249,423,1.918,485,1.703,487,2.829,572,1.752,621,2.624,743,3.465,802,3.169,917,4.95,919,4.527,1173,3.465,1472,3.748,1473,2.498,1476,4.95,1477,4.95,1490,3.169,1568,3.465,1569,3.465,1570,3.465,1571,3.465,1572,6.155,1573,4.994,1574,4.774,1575,4.994,1576,4.994,1577,4.994,1578,4.774,1579,4.994,1580,3.169,1581,3.169,1582,5.592,1583,5.592,1584,4.95,1585,4.95,1586,5.592,1587,5.592,1588,4.95,1589,3.915,1590,3.465,1591,6.524,1592,3.465,1593,3.915,1594,3.915,1595,3.915,1596,3.915,1597,3.915,1598,3.915,1599,3.915,1600,3.915,1601,3.915]],["title/modules/NgxEditorjsNgrxModule.html",[229,0.886,1602,3.55]],["body/modules/NgxEditorjsNgrxModule.html",[3,0.191,4,0.191,9,0.145,12,0.436,15,2.238,53,0.008,95,0.398,98,0.793,100,1.82,109,0.179,110,0.524,115,5.139,189,1.996,210,0.429,226,0.005,227,0.006,228,0.005,229,1.614,231,2.094,232,2.257,233,2.511,234,2.511,235,2.257,236,2.257,244,5.128,247,3.249,248,2.443,249,2.378,254,3.935,258,2.913,271,3.556,316,0.367,355,2.141,433,2.634,466,4.246,486,2.991,645,4.246,1308,6.426,1321,4.346,1472,4.866,1473,3.683,1602,6.601,1603,5.109,1604,5.772,1605,5.772,1606,5.772,1607,6.426,1608,5.877,1609,7.26,1610,7.26,1611,5.772,1612,5.772,1613,5.772,1614,5.772]],["title/modules/NgxEditorjsPluginsModule.html",[229,0.886,1615,3.55]],["body/modules/NgxEditorjsPluginsModule.html",[3,0.141,4,0.141,9,0.107,12,0.321,15,1.828,53,0.008,95,0.422,98,0.584,109,0.132,110,0.386,175,3.974,176,0.914,189,1.471,210,0.369,226,0.004,227,0.005,228,0.004,229,1.283,231,2.817,232,1.663,233,1.851,234,1.851,235,1.663,236,2.669,247,2.654,248,1.8,249,1.752,254,3.214,258,2.379,316,0.27,423,2.904,464,2.654,478,2.654,495,2.443,575,4.197,585,3.468,1176,4.465,1472,3.974,1473,2.714,1573,5.632,1574,5.383,1575,5.632,1576,5.632,1577,5.632,1578,5.383,1579,5.632,1615,7.078,1616,3.766,1617,3.766,1618,3.766,1619,5.916,1620,4.254,1621,4.254,1622,5.249,1623,5.93,1624,5.93,1625,5.93,1626,5.93,1627,5.249,1628,4.254,1629,4.254,1630,4.254,1631,4.254,1632,4.254,1633,4.254,1634,4.254,1635,4.254,1636,3.444,1637,4.254]],["title/modules/NgxHideableHeaderDemoModule.html",[229,0.886,1638,3.816]],["body/modules/NgxHideableHeaderDemoModule.html",[3,0.219,4,0.219,9,0.166,53,0.008,95,0.404,98,0.911,109,0.245,110,0.602,226,0.006,227,0.007,228,0.006,231,2.408,254,3.596,258,3.172,303,6.401,304,6.401,305,3.732,307,2.662,316,0.422,505,3.346,1472,5.3,1473,4.234,1580,5.371,1581,5.371,1638,6.401,1639,6.401,1640,5.873]],["title/modules/NgxTinynodesCoreMaterialModule.html",[229,0.886,1641,3.337]],["body/modules/NgxTinynodesCoreMaterialModule.html",[3,0.216,4,0.216,9,0.164,23,1.9,53,0.008,95,0.401,98,0.896,99,3.98,101,3.536,109,0.203,110,0.592,226,0.006,227,0.007,228,0.006,231,2.368,236,2.551,254,3.536,258,3.141,288,6.315,316,0.415,918,7.423,919,6.789,1472,5.621,1473,4.163,1584,7.423,1585,7.423,1641,5.541,1642,5.776,1643,6.525]],["title/modules/NgxTinynodesCoreModule.html",[229,0.886,246,3.16]],["body/modules/NgxTinynodesCoreModule.html",[3,0.174,4,0.174,9,0.132,12,0.397,15,2.481,23,2.025,45,3.705,53,0.008,84,2.016,95,0.385,98,0.722,101,4.118,109,0.163,110,0.477,189,1.817,197,1.147,213,4.617,226,0.005,227,0.006,228,0.005,229,1.428,231,1.906,232,2.054,233,3.306,234,2.285,235,2.054,236,2.971,242,6.176,246,6.149,247,3.059,248,2.223,249,2.164,254,3.705,258,2.743,285,4.65,316,0.334,321,1.695,426,4.582,486,2.816,746,5.534,853,5.147,914,4.839,1180,4.65,1641,6.46,1642,4.65,1644,4.65,1645,4.65,1646,4.65,1647,4.65,1648,5.254,1649,6.836,1650,5.534,1651,5.254,1652,5.254,1653,5.254]],["title/classes/NotReady.html",[110,0.428,559,2.875]],["body/classes/NotReady.html",[3,0.157,4,0.157,9,0.119,18,3.172,28,0.565,29,1.23,34,1.889,43,1.468,50,1.39,52,1.609,53,0.008,54,1.062,55,1.243,56,0.839,58,1.062,59,1.816,95,0.306,109,0.264,110,0.733,112,3.598,197,1.763,210,0.438,226,0.004,227,0.006,228,0.004,316,0.492,321,1.588,338,1.084,443,2.194,474,1.108,527,2.982,531,3.004,533,1.728,542,3.792,543,2.786,544,4.94,545,3.039,546,4.973,547,6.118,548,3.371,549,5.124,552,3.371,553,3.192,554,3.039,555,4.234,556,3.603,557,4.234,558,3.039,559,4.722,560,3.371,561,5.415,562,3.159,563,3.371,564,4.534,565,3.371,566,3.192,1654,6.406,1655,4.763]],["title/interfaces/Page.html",[63,1.67,396,0.205]],["body/interfaces/Page.html",[3,0.202,4,0.202,9,0.153,28,0.725,29,1.444,37,6.018,53,0.008,55,1.168,63,2.663,95,0.359,100,1.925,109,0.253,176,1.159,210,0.376,216,4.037,226,0.005,227,0.007,228,0.005,268,3.088,316,0.388,338,1.14,349,1.451,396,0.354,397,1.277,430,1.723,449,2.297,639,4.129,786,6.018,1656,4.942,1657,6.018]],["title/interfaces/PageBlock.html",[396,0.205,1657,3.337]],["body/interfaces/PageBlock.html",[3,0.211,4,0.211,9,0.16,28,0.757,29,1.482,37,4.512,53,0.008,55,0.875,63,2.258,95,0.369,100,2.01,109,0.258,176,1.28,210,0.386,216,3.665,226,0.006,227,0.007,228,0.006,268,3.224,316,0.405,338,1.035,349,1.515,396,0.361,397,1.333,430,2.178,449,1.722,639,4.155,786,4.512,1656,5.159,1657,5.877]],["title/components/PageContainerComponent.html",[0,1.556,220,2.309]],["body/components/PageContainerComponent.html",[0,2.163,1,1.113,2,1.655,3,0.073,4,0.073,5,1.151,6,0.931,7,1.077,8,1.237,9,0.055,10,0.838,12,0.271,13,1.946,14,0.784,15,1.62,17,3.352,18,1.369,19,3.051,20,2.19,21,1.192,22,4.161,23,1.508,24,2.02,26,2.02,28,0.261,29,0.69,31,1.107,32,3.352,34,2.345,38,2.02,43,1.62,45,2.847,50,1.43,52,0.743,53,0.008,54,1.291,55,0.625,56,0.387,57,2.351,58,1.015,59,0.838,63,2.908,67,1.956,68,2.054,75,0.957,78,1.656,85,2.303,88,1.954,95,0.348,97,1.656,98,0.302,100,1.826,102,1.151,103,2.662,104,0.906,105,1.557,106,1.341,107,1.151,109,0.068,110,0.2,111,2.78,112,1.926,113,1.132,125,2.407,130,1.599,132,2.421,138,1.78,139,1.78,148,2.229,151,1.113,152,2.292,153,1.946,154,2.704,166,1.861,169,1.607,176,1.01,189,0.761,190,1.946,191,1.607,192,0.984,193,2.955,194,1.237,195,1.237,196,1.077,197,1.688,198,1.044,199,2.02,200,1.044,201,1.151,202,1.237,203,1.113,204,1.237,205,1.237,206,0.984,207,2.862,208,1.237,209,1.077,210,0.433,211,2.611,212,1.237,213,1.113,214,1.237,215,1.113,216,2.161,217,1.237,218,1.044,219,1.237,220,2.573,221,1.113,222,1.192,223,0.957,224,2.847,225,1.237,226,0.002,227,0.003,228,0.004,248,2.893,252,2.542,316,0.483,318,3.059,320,1.242,321,1.804,326,1.557,332,1.879,333,2.02,338,0.295,347,0.798,356,1.474,357,0.779,388,0.761,409,1.607,433,1.906,448,1.759,449,2.218,465,1.036,474,0.512,481,1.303,495,1.479,503,1.479,505,1.52,510,1.705,527,0.906,531,1.335,533,2.48,535,2.108,539,1.759,542,1.759,556,2.955,562,2.765,581,3.322,582,1.607,583,2.101,586,0.957,614,3.521,624,2.573,638,1.474,639,1.607,658,2.407,697,2.542,707,3.521,712,1.656,725,1.474,744,1.78,745,3.179,746,2.907,747,2.704,748,2.704,749,3.684,750,2.907,752,4.362,758,4.393,759,1.947,760,4.393,761,3.956,765,2.907,766,2.704,778,3.179,795,1.78,797,1.947,799,1.656,800,3.694,801,1.947,802,1.78,803,1.947,804,1.947,805,1.557,806,1.947,807,2.704,809,1.947,810,1.947,811,2.907,814,1.78,821,3.956,827,1.947,828,1.947,829,1.947,830,1.947,831,1.947,832,1.947,833,1.947,834,1.947,835,1.947,836,1.78,838,1.947,840,1.655,841,3.521,842,1.947,846,1.947,858,2.407,862,3.179,864,2.542,865,3.179,866,3.179,867,1.947,868,1.947,869,1.947,870,1.947,871,1.947,872,1.947,873,2.907,874,3.179,875,2.907,876,3.179,877,2.907,878,3.179,879,3.179,885,2.704,886,1.947,887,1.78,888,1.78,889,1.78,1040,2.542,1044,2.704,1203,5.477,1409,1.947,1590,6.726,1658,7.599,1659,5.79,1660,3.592,1661,2.2,1662,2.2,1663,3.592,1664,2.2,1665,2.2,1666,2.2,1667,3.592,1668,3.592,1669,2.2,1670,2.2,1671,2.2,1672,2.2,1673,2.2,1674,3.592,1675,2.2,1676,2.2,1677,2.2,1678,2.2,1679,2.2,1680,3.592,1681,3.592,1682,3.592,1683,3.592,1684,3.592]],["title/modules/PageStoreModule.html",[229,0.886,1572,3.337]],["body/modules/PageStoreModule.html",[3,0.187,4,0.187,9,0.142,12,0.428,53,0.008,63,2.541,95,0.396,98,0.778,109,0.176,110,0.514,189,1.959,197,1.566,210,0.393,211,2.262,226,0.005,227,0.006,228,0.005,229,1.605,231,2.055,232,2.215,233,2.464,234,2.464,235,3.079,236,2.215,247,3.211,248,2.397,249,2.334,258,2.879,271,3.514,316,0.36,466,4.197,586,3.121,758,4.809,760,5.848,1055,4.035,1154,5.079,1572,6.455,1607,6.351,1608,5.808,1685,5.014,1686,5.014,1687,6.176,1688,5.567,1689,5.665,1690,5.808,1691,6.351,1692,5.014,1693,5.665,1694,4.586]],["title/injectables/PagesQuery.html",[314,1.074,1687,3.337]],["body/injectables/PagesQuery.html",[3,0.211,4,0.211,9,0.16,43,1.97,50,1.227,52,2.158,53,0.008,54,1.424,55,0.877,56,1.125,63,2.263,95,0.413,98,0.877,109,0.198,110,0.58,210,0.386,226,0.006,227,0.007,228,0.006,268,3.232,271,3.786,314,1.76,315,2.435,316,0.491,430,2.181,431,5.171,436,5.171,437,5.171,1687,5.471,1688,5.51,1694,5.171,1695,6.389,1696,8.311,1697,6.389,1698,4.81,1699,4.81]],["title/injectables/PagesService.html",[314,1.074,760,3.16]],["body/injectables/PagesService.html",[3,0.113,4,0.113,9,0.086,12,0.505,15,1.566,28,0.407,29,0.976,31,1.566,34,2.105,37,2.429,38,2.857,43,1.058,48,2.341,50,1.585,52,2.614,53,0.008,54,1.725,55,1.114,56,1.429,63,3.27,67,2.614,68,2.923,76,2.3,85,3.782,95,0.37,98,0.471,100,1.082,104,1.414,109,0.107,110,0.311,111,1.536,112,3.164,113,1.082,130,0.947,132,2.788,176,1.291,210,0.423,226,0.003,227,0.004,228,0.003,268,1.736,271,4.101,307,1.377,314,1.157,315,1.308,316,0.532,318,2.274,323,2.972,327,2.778,334,4.734,401,1.889,449,2.09,486,2.093,500,2.274,533,1.844,561,2.3,639,3.948,702,3.405,758,5.325,760,3.405,786,2.429,795,2.778,858,4.483,1010,3.405,1176,3.826,1376,3.826,1456,4.113,1657,5.476,1687,5.054,1688,4.556,1692,3.037,1694,2.778,1698,2.584,1700,3.432,1701,5.081,1702,5.081,1703,5.081,1704,5.081,1705,3.432,1706,5.081,1707,3.432,1708,5.081,1709,3.432,1710,7.14,1711,5.081,1712,3.432,1713,5.081,1714,3.596,1715,5.081,1716,3.432,1717,5.081,1718,3.432,1719,5.081,1720,3.432,1721,5.081,1722,3.432,1723,3.432,1724,3.432,1725,6.688,1726,5.081,1727,3.432,1728,3.432,1729,3.432,1730,5.081,1731,3.432,1732,3.432,1733,6.05,1734,5.081,1735,3.432,1736,3.432,1737,3.432]],["title/interfaces/PagesState.html",[396,0.205,1699,3.55]],["body/interfaces/PagesState.html",[3,0.216,4,0.216,9,0.164,43,2.016,53,0.008,54,1.458,63,2.317,95,0.401,98,0.898,109,0.243,110,0.594,210,0.327,226,0.006,227,0.007,228,0.006,268,3.309,314,1.785,316,0.416,396,0.284,397,1.368,430,2.369,456,5.903,457,4.63,758,4.384,1688,4.173,1698,4.925,1699,5.903,1738,5.789,1739,7.431,1740,6.939]],["title/injectables/PagesStore.html",[314,1.074,1688,3.008]],["body/injectables/PagesStore.html",[3,0.213,4,0.213,9,0.162,43,2.572,50,1.238,53,0.008,54,1.438,63,2.284,95,0.399,98,0.886,109,0.241,110,0.585,210,0.388,226,0.006,227,0.007,228,0.006,268,3.262,314,1.77,315,2.458,316,0.494,396,0.28,430,2.355,456,5.853,457,4.564,758,4.322,1688,4.96,1698,4.855,1699,4.855,1738,5.708,1739,6.88,1740,7.386,1741,6.449]],["title/interfaces/Paragraph.html",[396,0.205,503,1.942]],["body/interfaces/Paragraph.html",[3,0.133,4,0.133,6,1.7,9,0.101,12,0.303,28,0.477,29,1.271,53,0.009,55,1.265,56,1.268,58,1.76,72,1.713,109,0.262,156,3.822,165,2.549,166,2.938,167,3.087,176,1.416,210,0.394,226,0.004,227,0.005,228,0.004,316,0.255,321,2.013,338,1.148,340,2.289,349,0.955,388,1.39,396,0.383,397,0.84,401,1.494,409,2.549,430,2.032,434,1.571,465,1.159,492,2.26,495,1.655,496,2.178,497,3.204,498,3.204,499,2.033,500,1.798,501,3.204,502,3.087,503,3.417,504,3.087,505,3.436,506,2.98,507,2.35,508,1.571,509,3.087,510,3.609,511,3.332,512,2.26,513,2.8,514,2.35,515,2.35,516,2.35,517,2.35,518,2.35,519,3.087,520,2.178,521,2.26]],["title/interfaces/ParagraphBlock.html",[396,0.205,504,2.555]],["body/interfaces/ParagraphBlock.html",[3,0.133,4,0.133,6,1.708,9,0.101,12,0.305,28,0.479,29,1.274,53,0.009,55,1.271,56,1.27,58,1.697,72,1.717,109,0.262,156,3.324,165,2.557,166,2.941,167,3.097,176,1.423,210,0.406,226,0.004,227,0.005,228,0.004,316,0.256,321,1.96,338,1.114,340,2.294,349,0.959,388,1.396,396,0.386,397,0.844,401,1.501,409,2.557,430,2.149,434,1.578,465,1.164,492,2.27,495,1.662,496,2.187,497,3.214,498,3.214,499,2.042,500,1.806,501,3.214,502,3.097,503,3.257,504,3.595,505,3.44,506,2.99,507,2.361,508,1.578,509,3.097,510,3.615,511,3.342,512,2.27,513,2.807,514,2.361,515,2.361,516,2.361,517,2.361,518,2.361,519,3.097,520,2.187,521,2.27]],["title/injectables/PluginCode.html",[314,1.074,1742,3.55]],["body/injectables/PluginCode.html",[3,0.2,4,0.2,9,0.151,12,0.456,18,2.302,28,0.717,31,2.302,34,2.39,50,1.159,53,0.008,67,2.94,95,0.405,98,0.829,109,0.187,110,0.548,130,1.667,176,1.151,210,0.423,226,0.005,227,0.007,228,0.005,314,1.7,315,2.302,316,0.474,461,2.996,465,2.619,469,3.657,473,3.895,474,1.405,481,3.073,839,5.285,1516,3.532,1742,5.622,1743,6.038,1744,6.038,1745,6.038]],["title/modules/PluginCodeModule.html",[229,0.886,1573,3.008]],["body/modules/PluginCodeModule.html",[3,0.202,4,0.202,9,0.153,12,0.462,15,2.321,53,0.008,58,1.678,95,0.36,98,0.84,109,0.19,110,0.555,176,1.16,189,2.116,210,0.407,226,0.005,227,0.007,228,0.005,229,1.533,231,2.22,232,2.392,233,2.662,234,2.662,235,3.188,236,2.392,247,3.369,248,2.589,249,2.52,258,3.02,316,0.389,481,2.732,600,3.275,840,3.469,1201,3.687,1573,5.675,1742,6.697,1746,5.416,1747,5.416,1748,6.119,1749,4.08,1750,3.579,1751,6.119,1752,3.732,1753,6.119]],["title/interfaces/PluginConfig.html",[396,0.205,476,2.651]],["body/interfaces/PluginConfig.html",[3,0.177,4,0.177,9,0.134,12,0.404,14,1.167,31,2.131,50,1.027,53,0.008,56,1.349,95,0.33,98,0.734,109,0.251,110,0.627,113,1.686,130,1.476,210,0.267,226,0.005,227,0.006,228,0.005,229,1.299,307,2.145,316,0.439,338,1.087,349,2.042,357,1.893,396,0.352,397,1.118,461,3.366,462,4.025,463,3.583,464,2.392,465,2.664,466,3.127,467,3.876,469,3.753,470,3.583,471,2.797,472,5.136,473,3.429,474,1.243,475,2.703,476,3.888,477,4.634,478,2.392,479,3.127,480,3.411,481,1.94,482,2.704,483,2.704,484,3.26,485,2.325,486,2.202,487,2.704,488,3.411,493,3.006,1754,5.346]],["title/interfaces/PluginConfig-1.html",[388,1.374,396,0.173,476,2.234]],["body/interfaces/PluginConfig-1.html",[3,0.17,4,0.17,9,0.129,12,0.389,14,1.125,31,2.082,50,1.297,53,0.008,56,1.326,95,0.323,98,0.708,109,0.257,110,0.613,113,2.129,130,1.423,197,1.125,210,0.399,226,0.005,227,0.006,228,0.005,229,1.415,307,2.709,316,0.429,320,1.783,338,1.072,349,2.022,357,1.826,396,0.347,397,1.078,461,3.327,463,3.455,464,2.307,465,2.652,466,3.015,467,3.809,469,3.688,470,3.455,471,2.697,472,5.047,473,3.37,474,1.199,475,2.64,476,3.797,477,4.526,478,2.307,479,3.015,480,3.289,481,1.871,482,3.416,483,3.416,484,3.144,485,2.937,486,2.124,487,2.608,488,3.289,489,3.882,490,3.882,491,3.882,493,2.899,1755,5.155]],["title/injectables/PluginHeader.html",[314,1.074,1756,3.337]],["body/injectables/PluginHeader.html",[3,0.199,4,0.199,9,0.151,12,0.455,18,2.297,28,0.715,31,2.299,34,2.388,50,1.157,53,0.008,67,2.938,95,0.404,98,0.827,109,0.187,110,0.547,130,1.663,176,1.149,210,0.423,226,0.005,227,0.007,228,0.005,314,1.698,315,2.297,316,0.474,461,2.992,465,2.617,469,4.145,473,3.624,474,1.401,481,3.071,505,3.156,1516,3.524,1756,5.278,1757,6.025,1758,6.025,1759,4.877]],["title/modules/PluginHeaderModule.html",[229,0.886,1574,2.875]],["body/modules/PluginHeaderModule.html",[3,0.202,4,0.202,9,0.153,12,0.461,15,2.318,53,0.008,58,1.676,95,0.359,98,0.839,109,0.189,110,0.554,176,1.159,189,2.111,210,0.407,226,0.005,227,0.007,228,0.005,229,1.531,231,2.215,232,2.387,233,2.656,234,2.656,235,3.185,236,2.387,247,3.364,248,2.583,249,2.515,258,3.016,316,0.388,481,2.728,505,3.181,600,3.27,840,3.464,1201,3.682,1574,5.422,1749,4.074,1750,3.571,1752,3.724,1756,6.292,1760,5.404,1761,5.404,1762,6.105,1763,6.105,1764,6.105]],["title/injectables/PluginImage.html",[314,1.074,1765,3.55]],["body/injectables/PluginImage.html",[3,0.199,4,0.199,9,0.151,12,0.455,18,2.297,28,0.715,31,2.299,34,2.388,50,1.157,53,0.008,67,2.938,95,0.404,98,0.827,109,0.187,110,0.547,130,1.663,176,1.149,210,0.423,226,0.005,227,0.007,228,0.005,314,1.698,315,2.297,316,0.474,461,2.992,465,2.617,469,4.145,473,3.624,474,1.401,481,3.071,510,3.541,1516,3.524,1765,5.615,1766,6.025,1767,6.025,1768,6.025]],["title/modules/PluginImageModule.html",[229,0.886,1619,3.16]],["body/modules/PluginImageModule.html",[3,0.202,4,0.202,9,0.153,12,0.462,15,2.321,53,0.008,58,1.678,95,0.36,98,0.84,109,0.19,110,0.555,176,1.16,189,2.116,210,0.407,226,0.005,227,0.007,228,0.005,229,1.533,231,2.22,232,2.392,233,2.662,234,2.662,235,3.188,236,2.392,247,3.369,248,2.589,249,2.52,258,3.02,316,0.389,481,2.732,600,3.275,840,3.469,1201,3.687,1619,5.962,1749,4.08,1750,3.579,1752,3.732,1765,6.697,1769,5.416,1770,5.416,1771,6.119,1772,5.416,1773,5.416]],["title/injectables/PluginLink.html",[314,1.074,1774,3.55]],["body/injectables/PluginLink.html",[3,0.2,4,0.2,9,0.151,12,0.456,18,2.302,28,0.717,31,2.302,34,2.39,50,1.159,53,0.008,67,2.94,95,0.405,98,0.829,109,0.187,110,0.548,130,1.667,176,1.151,210,0.423,226,0.005,227,0.007,228,0.005,314,1.7,315,2.302,316,0.474,410,4.554,461,2.996,465,2.619,469,4.148,473,3.628,474,1.405,481,3.073,1516,3.532,1774,5.622,1775,6.038,1776,6.038,1777,6.038]],["title/modules/PluginLinkModule.html",[229,0.886,1575,3.008]],["body/modules/PluginLinkModule.html",[3,0.202,4,0.202,9,0.153,12,0.462,15,2.321,53,0.008,58,1.678,95,0.36,98,0.84,109,0.19,110,0.555,176,1.16,189,2.116,210,0.407,226,0.005,227,0.007,228,0.005,229,1.533,231,2.22,232,2.392,233,2.662,234,2.662,235,3.188,236,2.392,247,3.369,248,2.589,249,2.52,258,3.02,316,0.389,481,2.732,600,3.275,840,3.469,1201,3.687,1575,5.675,1749,4.08,1750,3.579,1752,3.732,1774,6.697,1778,5.416,1779,5.416,1780,6.119,1781,6.119,1782,6.119]],["title/injectables/PluginList.html",[314,1.074,1783,3.337]],["body/injectables/PluginList.html",[3,0.199,4,0.199,9,0.151,12,0.455,18,2.297,28,0.715,31,2.299,34,2.388,50,1.157,53,0.008,67,2.938,95,0.404,98,0.827,109,0.187,110,0.547,130,1.663,166,2.641,176,1.149,210,0.423,226,0.005,227,0.007,228,0.005,314,1.698,315,2.297,316,0.474,461,2.992,465,2.617,469,4.145,473,3.624,474,1.401,481,3.071,1516,3.524,1783,5.278,1784,6.025,1785,6.025,1786,5.333]],["title/modules/PluginListModule.html",[229,0.886,1576,3.008]],["body/modules/PluginListModule.html",[3,0.202,4,0.202,9,0.153,12,0.461,15,2.318,53,0.008,58,1.676,95,0.359,98,0.839,109,0.189,110,0.554,176,1.159,189,2.111,210,0.407,226,0.005,227,0.007,228,0.005,229,1.531,231,2.215,232,2.387,233,2.656,234,2.656,235,3.185,236,2.387,247,3.364,248,2.583,249,2.515,258,3.016,316,0.388,481,2.728,600,3.27,840,3.464,1201,3.682,1576,5.672,1749,4.074,1750,3.571,1752,3.724,1783,6.292,1787,5.404,1788,5.404,1789,6.105,1790,6.105,1791,6.105]],["title/injectables/PluginMarker.html",[314,1.074,1792,3.55]],["body/injectables/PluginMarker.html",[3,0.188,4,0.188,9,0.143,12,0.429,18,2.168,28,0.675,31,2.218,34,2.575,50,1.381,53,0.008,67,3.032,95,0.396,98,0.781,109,0.177,110,0.516,130,1.986,175,4.822,210,0.427,226,0.005,227,0.006,228,0.005,314,1.638,315,2.168,316,0.501,338,0.763,461,2.886,465,2.632,467,4.419,469,4.061,473,3.531,474,1.323,481,3.008,1516,3.327,1792,5.416,1793,5.689,1794,7.338,1795,5.689,1796,5.689,1797,5.689,1798,5.689]],["title/modules/PluginMarkerModule.html",[229,0.886,1577,3.008]],["body/modules/PluginMarkerModule.html",[3,0.202,4,0.202,9,0.153,12,0.461,15,2.318,53,0.008,58,1.676,95,0.359,98,0.839,109,0.189,110,0.554,175,5.039,189,2.111,210,0.407,226,0.005,227,0.007,228,0.005,229,1.531,231,2.215,232,2.387,233,2.656,234,2.656,235,3.185,236,2.387,247,3.364,248,2.583,249,2.515,258,3.016,316,0.388,481,2.728,600,3.27,840,3.464,1201,3.682,1577,5.672,1749,4.074,1750,3.571,1752,3.724,1792,6.694,1794,6.655,1799,5.404,1800,5.404,1801,6.105,1802,6.105,1803,6.105]],["title/injectables/PluginParagraph.html",[314,1.074,1804,3.337]],["body/injectables/PluginParagraph.html",[3,0.2,4,0.2,9,0.151,12,0.456,18,2.302,28,0.717,31,2.302,34,2.39,50,1.159,53,0.008,67,2.94,95,0.405,98,0.829,109,0.187,110,0.548,130,1.667,176,1.151,210,0.423,226,0.005,227,0.007,228,0.005,314,1.7,315,2.302,316,0.474,461,2.996,465,2.619,469,4.148,473,3.628,474,1.405,481,3.073,503,3.076,1516,3.532,1804,5.285,1805,6.038,1806,6.038,1807,4.546]],["title/modules/PluginParagraphModule.html",[229,0.886,1578,2.875]],["body/modules/PluginParagraphModule.html",[3,0.202,4,0.202,9,0.153,12,0.462,15,2.321,53,0.008,58,1.678,95,0.36,98,0.84,109,0.19,110,0.555,176,1.16,189,2.116,210,0.407,226,0.005,227,0.007,228,0.005,229,1.533,231,2.22,232,2.392,233,2.662,234,2.662,235,3.188,236,2.392,247,3.369,248,2.589,249,2.52,258,3.02,316,0.389,481,2.732,600,3.275,840,3.469,1201,3.687,1578,5.425,1749,4.08,1750,3.579,1752,3.732,1804,6.296,1808,5.416,1809,5.416,1810,6.119,1811,6.119,1812,6.119]],["title/injectables/PluginSimpleImage.html",[314,1.074,1813,3.55]],["body/injectables/PluginSimpleImage.html",[3,0.197,4,0.197,9,0.149,12,0.449,18,2.267,28,0.706,31,2.28,34,2.374,50,1.142,53,0.008,67,2.927,95,0.403,98,0.817,109,0.185,110,0.54,130,1.642,176,1.14,210,0.421,226,0.005,227,0.007,228,0.005,314,1.684,315,2.267,316,0.47,461,2.968,465,2.611,469,3.623,473,3.603,474,1.383,481,2.684,510,3.823,581,3.13,875,5.987,1516,3.478,1636,5.987,1813,5.569,1814,6.547,1815,5.947,1816,6.547,1817,5.947,1818,5.947]],["title/modules/PluginSimpleImageModule.html",[229,0.886,1579,3.008]],["body/modules/PluginSimpleImageModule.html",[3,0.199,4,0.199,9,0.151,12,0.455,15,2.299,53,0.008,95,0.356,98,0.827,109,0.187,110,0.547,176,1.149,189,2.084,210,0.405,226,0.005,227,0.007,228,0.005,229,1.522,231,2.186,232,2.356,233,2.621,234,2.621,235,3.166,236,2.356,247,3.337,248,2.55,249,2.482,258,2.992,316,0.383,478,3.337,481,2.706,510,3.541,600,3.244,840,3.436,1201,3.652,1579,5.654,1636,4.877,1749,4.041,1750,3.524,1752,3.675,1772,5.333,1773,5.333,1813,6.672,1814,5.333,1816,7.168,1819,5.333,1820,5.333,1821,6.025]],["title/classes/Ready.html",[110,0.428,531,1.753]],["body/classes/Ready.html",[3,0.157,4,0.157,9,0.119,18,3.172,28,0.565,29,1.23,34,1.889,43,1.468,50,1.39,52,1.609,53,0.008,54,1.062,55,1.243,56,0.839,58,1.062,59,1.816,95,0.306,109,0.264,110,0.733,112,3.598,197,1.763,210,0.438,226,0.004,227,0.006,228,0.004,316,0.492,321,1.588,338,1.084,443,2.194,474,1.108,527,2.982,531,3.094,533,1.728,542,3.792,543,2.786,544,4.94,545,3.039,546,4.973,547,6.118,548,3.371,549,5.124,552,3.371,553,3.192,554,3.039,555,4.234,556,3.603,557,4.234,558,3.039,559,4.415,560,3.371,561,5.415,562,3.159,563,3.371,564,3.371,565,4.534,566,3.192,1822,6.406,1823,4.763]],["title/interfaces/ReadyMap.html",[396,0.205,532,2.875]],["body/interfaces/ReadyMap.html",[3,0.16,4,0.16,9,0.121,12,0.365,50,0.927,53,0.008,72,2.162,84,2.15,95,0.348,102,4.842,104,1.989,109,0.259,133,2.443,176,1.2,210,0.439,226,0.004,227,0.006,228,0.004,316,0.411,338,1.121,349,2.141,357,3.192,396,0.363,397,1.01,449,1.97,474,1.123,493,2.716,508,2.85,522,3.081,523,3.237,524,6.04,525,3.237,527,1.989,528,2.365,529,2.946,530,3.461,531,2.404,532,3.944,533,1.752,534,2.946,535,3.124,536,2.716,537,2.594,538,3.081,539,2.365,540,2.946,1824,4.83]],["title/classes/SaveEnd.html",[110,0.428,557,2.758]],["body/classes/SaveEnd.html",[3,0.157,4,0.157,9,0.119,18,3.172,28,0.565,29,1.23,34,1.889,43,1.468,50,1.39,52,1.609,53,0.008,54,1.062,55,1.243,56,0.839,58,1.062,59,1.816,95,0.306,109,0.264,110,0.733,112,3.598,197,1.763,210,0.438,226,0.004,227,0.006,228,0.004,316,0.492,321,1.588,338,1.084,443,2.194,474,1.108,527,2.982,531,3.004,533,1.728,542,3.792,543,2.786,544,4.94,545,3.039,546,4.973,547,6.118,548,3.371,549,5.124,552,3.371,553,3.192,554,3.039,555,4.234,556,3.603,557,4.528,558,3.039,559,4.415,560,3.371,561,5.415,562,3.159,563,4.534,564,3.371,565,3.371,566,3.192,1825,6.406,1826,4.763]],["title/classes/SaveStart.html",[110,0.428,555,2.758]],["body/classes/SaveStart.html",[3,0.157,4,0.157,9,0.119,18,3.172,28,0.565,29,1.23,34,1.889,43,1.468,50,1.39,52,1.609,53,0.008,54,1.062,55,1.243,56,0.839,58,1.062,59,1.816,95,0.306,109,0.264,110,0.733,112,3.598,197,1.763,210,0.438,226,0.004,227,0.006,228,0.004,316,0.492,321,1.588,338,1.084,443,2.194,474,1.108,527,2.982,531,3.004,533,1.728,542,3.792,543,2.786,544,4.94,545,3.039,546,4.973,547,6.118,548,3.371,549,5.124,552,3.371,553,3.192,554,3.039,555,4.528,556,3.603,557,4.234,558,3.039,559,4.415,560,4.534,561,5.415,562,3.159,563,3.371,564,3.371,565,3.371,566,3.192,1827,6.406,1828,4.763]],["title/interfaces/SavedMap.html",[396,0.205,534,2.875]],["body/interfaces/SavedMap.html",[3,0.16,4,0.16,9,0.121,12,0.365,50,0.927,53,0.008,72,2.162,84,2.15,95,0.348,102,4.842,104,1.989,109,0.259,133,2.443,176,1.2,210,0.439,226,0.004,227,0.006,228,0.004,316,0.411,338,1.121,349,2.141,357,3.192,396,0.363,397,1.01,449,1.97,474,1.123,493,2.716,508,2.85,522,3.081,523,3.237,524,6.04,525,3.237,527,1.989,528,2.365,529,2.946,530,3.461,531,1.796,532,2.946,533,2.346,534,3.944,535,3.124,536,2.716,537,2.594,538,3.081,539,2.365,540,2.946,1829,4.83]],["title/components/SidebarComponent.html",[0,1.556,221,2.385]],["body/components/SidebarComponent.html",[0,2.43,1,2.491,2,3.018,3,0.163,4,0.163,5,2.576,6,2.084,7,2.412,8,2.77,9,0.123,10,2.806,21,2.669,22,4.802,23,2.081,24,3.684,26,3.684,28,0.585,36,4.18,41,6.516,42,6.516,50,1.258,53,0.008,54,1.749,55,0.9,63,1.744,75,3.202,95,0.313,96,4.306,98,0.676,100,1.553,101,2.669,109,0.153,110,0.447,151,2.491,189,1.703,190,3.55,191,2.932,192,2.204,193,4.413,194,2.77,195,2.77,196,2.412,197,1.871,198,2.338,199,3.684,200,2.338,201,2.576,202,2.77,203,2.491,204,2.77,205,2.77,206,2.204,207,2.269,208,2.77,209,2.412,210,0.392,211,2.066,212,2.77,213,2.491,214,2.77,215,2.491,216,2.338,217,2.77,218,2.338,219,2.77,220,2.412,221,3.97,222,2.669,223,2.142,224,2.669,225,2.77,226,0.004,227,0.006,228,0.004,347,2.965,1830,7.362,1831,4.925,1832,7.362,1833,6.551,1834,4.925,1835,4.925,1836,6.551,1837,7.847,1838,6.551]],["title/interfaces/Tag.html",[216,2.238,396,0.205]],["body/interfaces/Tag.html",[3,0.212,4,0.212,9,0.161,28,0.76,29,1.486,37,4.533,53,0.008,55,0.88,63,2.268,95,0.37,100,2.019,109,0.258,176,1.193,210,0.387,216,3.95,226,0.006,227,0.007,228,0.006,268,3.239,316,0.407,338,1.159,349,2.054,396,0.362,397,1.339,430,1.807,449,1.73,639,3.96,786,4.533,1656,5.183,1657,5.479]],["title/classes/TestClass.html",[110,0.428,934,3.55]],["body/classes/TestClass.html",[3,0.179,4,0.179,9,0.136,18,2.062,28,0.642,31,2.148,34,1.595,43,2.375,48,3.88,50,1.338,53,0.008,67,1.827,68,2.115,95,0.368,109,0.239,110,0.738,130,2.247,226,0.005,227,0.006,228,0.005,316,0.49,338,0.725,449,1.882,461,2.795,465,1.56,467,3.524,473,3.117,474,1.258,533,1.963,537,2.17,543,3.164,572,3.117,731,3.164,752,3.451,845,3.164,898,3.828,920,4.073,921,4.378,922,4.378,923,4.074,925,4.074,929,4.931,932,4.378,933,4.378,934,5.802,935,4.378,936,4.073,937,6.237,938,4.378,939,4.378,940,5.639,941,4.378,942,4.073,943,4.378,944,3.451,945,4.378,1839,5.409,1840,5.409]],["title/interfaces/TinynodeDemos.html",[396,0.205,451,2.467]],["body/interfaces/TinynodeDemos.html",[3,0.155,4,0.155,9,0.118,12,0.355,14,1.569,23,1.745,28,0.558,29,1.219,53,0.008,54,1.415,55,0.645,61,3.521,72,1.216,84,2.12,88,1.747,95,0.303,100,1.481,109,0.257,141,3.144,148,3.109,176,0.978,197,1.906,210,0.441,211,2.889,226,0.004,227,0.006,228,0.004,316,0.298,320,1.625,321,2.189,338,0.63,340,1.625,347,2.608,349,1.708,354,2.301,355,1.385,359,2.376,360,2.376,361,3.709,383,3.226,396,0.368,397,0.983,405,2.376,414,2.102,430,1.326,435,2.164,440,3.148,441,2.546,442,2.642,443,2.924,444,2.23,445,2.043,446,2.458,447,2.546,448,2.301,449,1.715,450,4.028,451,3.321]],["title/interfaces/TinynodeDemos-1.html",[388,1.374,396,0.173,451,2.078]],["body/interfaces/TinynodeDemos-1.html",[3,0.158,4,0.158,9,0.12,10,1.819,12,0.36,14,1.581,23,1.557,28,0.566,29,1.232,53,0.008,54,1.43,55,0.655,61,3.549,72,1.235,84,2.136,88,1.774,95,0.306,100,1.504,109,0.258,141,3.161,176,0.989,197,1.912,210,0.442,211,2.883,226,0.004,227,0.006,228,0.004,320,1.65,321,2.195,338,0.64,340,1.65,347,2.327,349,1.722,354,2.337,355,1.407,359,2.413,360,2.413,361,3.725,383,3.243,396,0.37,397,0.998,414,2.135,430,1.346,435,2.198,441,2.585,442,2.683,443,2.955,444,2.265,445,2.075,446,2.496,447,2.585,448,2.337,449,1.733,450,4.053,451,3.356,452,3.198]],["title/interfaces/ToolSettingsMap.html",[396,0.205,479,2.758]],["body/interfaces/ToolSettingsMap.html",[3,0.176,4,0.176,9,0.133,12,0.402,14,1.162,31,2.126,50,1.023,53,0.008,56,1.347,95,0.33,98,0.731,109,0.251,110,0.483,113,1.679,130,1.47,210,0.266,226,0.005,227,0.006,228,0.005,229,1.001,307,2.136,316,0.438,338,1.085,349,2.04,357,2.443,396,0.352,397,1.114,461,3.069,462,4.009,463,3.569,464,2.383,465,2.651,466,3.115,467,3.869,469,4.104,470,3.569,471,2.786,472,5.422,473,3.62,474,1.239,475,2.082,476,2.995,477,3.569,478,3.086,479,4.034,480,4.4,481,2.502,482,2.694,483,2.694,484,3.248,485,2.316,486,2.193,487,2.694,488,3.398,493,2.995,1841,5.325]],["title/interfaces/ToolSettingsMap-1.html",[388,1.374,396,0.173,479,2.324]],["body/interfaces/ToolSettingsMap-1.html",[3,0.17,4,0.17,9,0.129,12,0.388,14,1.121,31,2.077,50,1.293,53,0.008,56,1.324,95,0.322,98,0.705,109,0.257,110,0.466,113,2.124,130,1.418,197,1.121,210,0.399,226,0.005,227,0.006,228,0.005,229,1.266,307,2.702,316,0.428,320,1.776,338,1.07,349,2.02,357,2.386,396,0.347,397,1.074,461,3.015,463,3.442,464,2.298,465,2.638,466,3.004,467,3.802,469,4.057,470,3.442,471,2.687,472,5.347,473,3.57,474,1.195,475,2.008,476,2.888,477,3.442,478,3.014,479,3.94,480,4.298,481,2.444,482,3.407,483,3.407,484,3.133,485,2.93,486,2.116,487,2.598,488,3.277,489,3.867,490,3.867,491,3.867,493,2.888,1842,5.136]],["title/changelog.html",[1843,2.812,1844,2.812,1845,2.324]],["body/changelog.html",[0,2.62,13,2.747,14,1.107,15,1.563,23,1.231,53,0.006,57,2.989,58,1.13,60,3.077,81,3.756,100,2.503,101,2.747,113,2.671,115,4.727,176,0.781,198,2.407,210,0.397,211,2.601,226,0.004,227,0.006,228,0.004,229,1.255,236,1.982,318,2.269,323,3.906,396,0.22,418,2.851,426,5.006,433,1.84,434,1.982,485,3.588,500,2.989,506,2.652,535,2.679,595,2.965,627,2.965,635,3.235,645,2.965,681,4.727,840,2.336,850,5.406,861,2.851,902,3.817,905,6.425,906,4.487,908,3.588,911,3.235,914,3.588,923,2.965,971,4.487,1010,3.398,1013,4.073,1019,2.747,1105,3.817,1107,3.817,1174,3.092,1207,4.104,1622,4.487,1690,4.104,1714,3.588,1845,3.906,1846,5.07,1847,5.07,1848,3.588,1849,6.679,1850,5.07,1851,5.977,1852,7.468,1853,5.07,1854,5.07,1855,5.07,1856,5.911,1857,5.07,1858,5.07,1859,4.487,1860,5.07,1861,6.045,1862,5.07,1863,5.07,1864,6.679,1865,5.07,1866,5.07,1867,5.07,1868,5.07,1869,5.07,1870,6.679,1871,5.07,1872,5.07,1873,5.07,1874,4.487,1875,5.07,1876,5.07,1877,5.07,1878,5.07,1879,4.104,1880,5.07,1881,5.07,1882,5.07,1883,6.679,1884,6.679,1885,5.07,1886,5.911,1887,4.487,1888,4.104,1889,5.07,1890,5.07,1891,3.235,1892,5.07,1893,5.07,1894,5.07,1895,5.07,1896,5.07,1897,5.07,1898,5.07,1899,5.07,1900,5.07,1901,5.07,1902,5.07,1903,5.07,1904,4.487,1905,4.487,1906,4.487]],["title/contributing.html",[1843,2.812,1844,2.812,1907,3.516]],["body/contributing.html",[9,0.097,17,2.467,34,1.634,50,0.742,52,1.306,53,0.005,94,2.911,111,2.48,113,1.747,133,1.956,179,3.129,226,0.005,227,0.005,228,0.003,232,1.511,276,5.243,341,3.129,396,0.168,401,1.437,441,2.095,486,2.283,506,2.022,528,2.714,535,2.223,546,2.261,558,2.467,575,4.585,578,2.591,582,1.73,603,3.536,755,2.591,805,2.736,839,5.682,861,2.174,923,3.789,985,2.591,1019,2.095,1020,3.922,1105,4.172,1107,2.911,1177,3.241,1185,3.422,1201,2.714,1209,2.911,1248,3.422,1252,3.422,1342,3.129,1344,3.129,1348,5.727,1451,3.129,1498,3.422,1627,3.422,1650,3.129,1714,2.736,1886,4.905,1887,3.422,1891,5.584,1904,4.905,1905,3.422,1906,3.422,1907,4.905,1908,4.905,1909,5.733,1910,3.866,1911,3.866,1912,3.422,1913,3.866,1914,3.866,1915,3.422,1916,8.027,1917,5.542,1918,3.866,1919,6.478,1920,3.866,1921,2.911,1922,3.866,1923,3.866,1924,4.486,1925,3.129,1926,3.866,1927,3.866,1928,3.866,1929,3.866,1930,3.866,1931,7.075,1932,3.129,1933,3.866,1934,3.129,1935,3.866,1936,3.866,1937,4.486,1938,3.866,1939,3.866,1940,4.905,1941,3.866,1942,5.542,1943,3.866,1944,3.866,1945,5.542,1946,3.866,1947,7.49,1948,3.866,1949,7.49,1950,5.542,1951,3.422,1952,5.542,1953,3.866,1954,3.866,1955,3.866,1956,3.866,1957,3.866,1958,3.866,1959,3.866,1960,5.542,1961,3.866,1962,3.866,1963,5.542,1964,3.866,1965,3.866,1966,3.866,1967,5.542,1968,3.866,1969,5.542,1970,7.49,1971,3.866,1972,3.866,1973,3.866,1974,5.542,1975,3.866,1976,3.866,1977,3.866,1978,3.866,1979,3.866,1980,3.866,1981,3.866,1982,3.866,1983,3.866,1984,3.866,1985,3.866,1986,3.866,1987,3.866,1988,3.866,1989,5.542,1990,6.478,1991,3.866,1992,3.866,1993,3.866,1994,3.866,1995,3.866,1996,3.866,1997,3.866,1998,3.866,1999,5.542,2000,3.866,2001,3.866,2002,3.422,2003,3.866,2004,3.866,2005,3.866,2006,3.866,2007,5.542,2008,3.866,2009,3.866,2010,3.866,2011,5.542,2012,3.866,2013,3.422,2014,3.866,2015,3.866,2016,3.866,2017,3.866,2018,3.866,2019,5.542,2020,3.866,2021,3.866,2022,3.866,2023,3.866,2024,3.866,2025,3.866,2026,3.866,2027,3.866,2028,3.866,2029,3.866,2030,3.866,2031,3.866,2032,3.866,2033,5.542,2034,3.866,2035,3.866,2036,3.866,2037,3.866,2038,3.866,2039,3.866,2040,3.866,2041,3.422,2042,5.542,2043,5.542,2044,5.542,2045,3.866,2046,3.866,2047,3.866,2048,3.866,2049,3.866,2050,3.866,2051,3.866,2052,3.866,2053,3.866,2054,3.866,2055,3.866,2056,5.542,2057,3.866,2058,5.542,2059,3.866,2060,3.866,2061,3.422,2062,3.866,2063,3.866,2064,5.542,2065,3.422,2066,3.866,2067,3.866,2068,3.866,2069,3.866,2070,3.866,2071,3.866,2072,3.866,2073,3.866,2074,3.866,2075,3.866,2076,3.866,2077,3.866,2078,3.866,2079,3.866,2080,3.866,2081,3.866,2082,3.866,2083,3.866,2084,3.866,2085,3.866,2086,3.866,2087,3.866,2088,3.866,2089,3.866,2090,3.866,2091,3.866,2092,3.866,2093,3.866,2094,3.866,2095,3.866]],["title/dependencies.html",[232,2.209,1879,3.216]],["body/dependencies.html",[53,0.008,98,0.81,99,3.596,101,3.195,104,2.429,197,1.606,226,0.005,227,0.006,228,0.005,232,2.305,260,5.219,261,5.219,263,5.955,264,5.54,268,3.722,269,5.219,270,5.219,271,2.888,273,5.219,275,4.772,305,3.316,474,1.371,505,2.495,553,3.952,621,3.952,907,3.762,1321,4.439,1473,3.762,1639,4.772,1759,4.772,1786,5.219,1807,4.439,1921,4.439,2096,5.896,2097,9.038,2098,5.896,2099,7.357,2100,5.896,2101,5.896,2102,5.896,2103,5.896,2104,5.896,2105,5.896,2106,5.896,2107,5.896,2108,5.896,2109,5.896,2110,7.357,2111,5.219,2112,5.896,2113,5.896,2114,5.896,2115,5.896,2116,5.896,2117,5.896,2118,5.896,2119,5.896,2120,5.896,2121,5.896]],["title/miscellaneous/enumerations.html",[2122,2.423,2123,5.002]],["body/miscellaneous/enumerations.html",[10,2.292,14,1.625,23,1.459,28,0.714,53,0.008,59,3.528,84,2.196,141,3.306,197,1.897,210,0.443,226,0.005,227,0.007,228,0.005,316,0.473,360,4.278,361,3.784,383,3.393,440,4.029,443,3.431,444,3.536,452,4.029,531,3.008,533,2.181,542,3.647,544,3.836,545,4.752,554,4.752,555,3.516,556,4.188,557,3.516,558,3.836,559,3.667,2122,3.667,2123,5.321,2124,6.012,2125,6.012,2126,4.526]],["title/miscellaneous/functions.html",[425,4.574,2122,2.423]],["body/miscellaneous/functions.html",[12,0.561,14,1.309,23,1.456,28,0.712,52,2.731,53,0.008,54,1.802,55,0.824,56,1.488,67,2.731,76,4.984,110,0.544,130,1.656,197,1.309,210,0.422,211,1.891,226,0.005,227,0.007,228,0.005,229,1.398,301,3.827,316,0.537,425,4.856,468,3.138,475,2.345,476,3.374,478,2.684,572,3.781,574,3.251,702,5.417,925,3.509,1166,4.021,1266,6.02,1464,5.31,1465,6.583,1478,6.583,1487,5.31,1491,6.583,1517,4.517,1588,7.154,1937,4.856,2122,3.659,2126,4.517,2127,5.31,2128,7.479,2129,5.999,2130,5.999,2131,5.31,2132,5.999,2133,5.999,2134,5.999,2135,5.999,2136,5.999]],["title/index.html",[28,0.472,1843,2.812,1844,2.812]],["body/index.html",[0,2.465,2,3.441,5,2.652,7,2.483,14,1.458,15,2.447,23,1.231,29,0.974,53,0.006,58,1.13,60,3.979,61,2.483,81,2.851,100,2.355,111,2.989,148,2.483,176,0.781,191,2.269,192,2.269,197,1.458,198,3.546,206,2.269,207,2.336,210,0.447,211,2.355,223,2.205,226,0.004,227,0.006,228,0.004,229,1.255,232,1.982,236,1.982,249,2.088,253,4.104,301,3.235,312,3.588,318,2.269,355,1.969,396,0.22,406,3.171,423,2.483,426,4.476,433,2.423,464,2.989,485,2.905,486,2.088,499,2.565,528,2.483,600,2.905,624,2.483,627,2.965,633,5.406,635,3.235,680,3.817,681,3.588,714,3.398,715,3.817,716,3.817,840,3.441,841,3.398,851,5.028,900,5.028,902,5.028,907,3.235,908,4.727,911,5.065,914,4.727,953,4.104,983,4.487,985,4.476,1013,3.092,1055,2.851,1058,3.588,1105,5.028,1169,3.398,1174,3.092,1177,4.368,1202,4.104,1209,3.817,1214,3.588,1215,4.104,1243,3.588,1327,4.261,1463,3.906,1608,5.406,1845,4.368,1848,4.727,1891,5.065,1908,6.61,2137,5.07,2138,5.07,2139,5.07,2140,4.487,2141,4.487,2142,4.487,2143,4.487,2144,4.487,2145,4.487,2146,4.487,2147,4.104,2148,4.487,2149,5.07,2150,4.476,2151,6.679,2152,4.487,2153,4.487,2154,4.104,2155,5.07]],["title/license.html",[1843,2.812,1844,2.812,2156,3.973]],["body/license.html",[23,1.431,53,0.006,103,3.448,133,2.982,226,0.005,227,0.006,228,0.005,249,2.429,434,2.305,546,3.448,911,3.762,1107,6.039,1177,4.303,1851,4.439,1932,4.772,1937,4.772,1940,6.512,1951,5.219,2061,5.219,2065,5.219,2152,5.219,2153,5.219,2157,5.219,2158,5.896,2159,5.896,2160,8.02,2161,5.896,2162,5.896,2163,5.896,2164,5.896,2165,5.896,2166,7.357,2167,9.115,2168,5.896,2169,5.896,2170,5.896,2171,7.357,2172,5.896,2173,5.896,2174,5.896,2175,5.219,2176,5.896,2177,5.896,2178,5.896,2179,5.896,2180,7.357,2181,5.896,2182,5.896,2183,5.896,2184,5.896,2185,5.896,2186,5.896,2187,7.357,2188,7.357,2189,5.219,2190,5.896,2191,5.896,2192,5.896,2193,5.896,2194,5.896,2195,5.896,2196,5.896,2197,5.896,2198,5.896,2199,5.896,2200,5.896,2201,5.896,2202,5.896,2203,5.896,2204,5.896,2205,5.896,2206,5.896,2207,5.896,2208,5.896,2209,5.896,2210,5.896,2211,5.896,2212,5.896,2213,5.896,2214,5.896]],["title/modules.html",[231,2.309]],["body/modules.html",[53,0.006,226,0.005,227,0.006,228,0.005,230,4.068,231,2.086,241,4.068,242,4.853,243,3.852,244,3.362,245,4.068,246,4.853,264,7.089,401,3.094,1055,5.295,1572,4.068,1573,3.668,1574,3.506,1575,3.668,1576,3.668,1577,3.668,1578,3.506,1579,3.668,1602,4.328,1615,4.328,1619,3.852,1638,4.653,1641,4.068,2215,9.415,2216,9.48,2217,8.322]],["title/overview.html",[2218,5.632]],["body/overview.html",[1,3.766,2,1.409,45,3.421,53,0.008,189,1.058,192,1.368,196,3.646,200,2.68,203,2.855,206,3.331,207,3.43,209,2.765,213,3.766,215,2.855,218,3.534,220,3.646,221,2.855,223,3.238,226,0.003,227,0.004,228,0.003,229,0.575,230,6.32,231,1.109,232,1.196,233,1.33,234,1.33,235,1.196,236,1.196,237,2.707,238,2.707,239,2.707,240,2.707,241,3.995,242,5.984,243,4.231,244,5.222,245,6.525,246,5.764,247,2.085,248,1.294,249,1.26,315,1.166,328,3.85,329,3.55,388,1.058,397,0.64,420,2.707,421,2.707,543,1.788,624,2.765,760,3.783,1327,3.602,1459,2.707,1460,2.707,1461,2.707,1462,2.707,1463,3.301,1568,2.707,1569,2.707,1570,2.707,1571,2.707,1572,5.922,1573,5.116,1574,4.891,1575,5.116,1576,5.116,1577,5.116,1578,4.891,1579,5.116,1602,4.753,1603,2.707,1615,6.791,1616,2.707,1617,2.707,1618,2.707,1619,5.269,1641,5.269,1644,2.707,1645,2.707,1646,2.707,1647,2.707,1685,2.707,1686,2.707,1687,3.995,1688,3.602,1742,4.25,1746,2.707,1747,2.707,1756,3.995,1760,2.707,1761,2.707,1765,4.25,1769,2.707,1770,2.707,1774,4.25,1778,2.707,1779,2.707,1783,3.995,1787,2.707,1788,2.707,1792,4.25,1799,2.707,1800,2.707,1804,3.995,1808,2.707,1809,2.707,1813,4.25,1819,2.707,1820,2.707,2218,2.707,2219,4.124,2220,3.058,2221,3.058,2222,3.058]],["title/todo.html",[446,2.078,1843,2.812,1844,2.812]],["body/todo.html",[0,2.075,23,1.526,53,0.007,63,2.227,96,3.677,192,2.813,197,1.801,210,0.429,211,1.982,226,0.006,227,0.007,228,0.006,229,1.181,231,2.281,271,3.079,312,4.45,318,3.425,408,4.011,414,2.813,423,3.079,446,3.289,449,1.699,486,3.153,533,2.281,570,3.18,571,3.677,572,3.693,581,2.66,597,4.011,645,3.677,855,5.564,858,6.074,861,3.535,877,5.089,880,4.733,1055,4.305,1269,4.45,1321,4.733,1750,3.677,1848,4.45,2002,5.564,2013,5.564,2157,5.564,2175,5.564,2223,6.287,2224,6.287,2225,6.287,2226,5.564,2227,6.287,2228,6.287,2229,6.287,2230,6.287,2231,5.564,2232,5.564]],["title/miscellaneous/typealiases.html",[2122,2.423,2233,5.651]],["body/miscellaneous/typealiases.html",[6,2.722,28,0.764,53,0.008,55,1.145,166,2.279,176,1.196,210,0.321,226,0.006,227,0.007,228,0.006,316,0.493,338,1.041,401,2.392,492,3.618,496,3.487,497,4.365,498,4.365,499,3.255,500,2.879,501,4.365,502,3.487,504,3.487,509,3.487,519,3.487,520,3.487,521,4.365,531,2.392,542,3.151,544,4.105,545,4.953,555,3.763,557,3.763,559,3.924,566,5.203,2122,3.924,2126,4.844,2234,6.434,2235,7.762]],["title/miscellaneous/variables.html",[1925,4.574,2122,2.423]],["body/miscellaneous/variables.html",[0,2.499,10,2.594,13,1.927,14,1.348,23,0.863,28,0.422,50,0.683,53,0.008,55,1.159,57,1.591,58,2.02,59,3.442,81,2.933,110,0.323,113,2.531,151,3.125,169,1.591,196,1.742,197,1.485,198,1.688,200,1.688,201,2.729,206,2.334,209,1.742,210,0.431,211,1.121,215,2.638,216,1.688,218,1.688,220,1.742,226,0.003,227,0.005,228,0.003,229,0.668,276,5.507,298,3.147,299,4.617,303,5,306,3.147,308,4.617,309,6.413,310,3.147,311,3.147,312,2.517,316,0.529,320,1.23,335,4.993,338,0.477,357,1.259,423,3.332,433,1.29,445,2.269,449,0.961,458,2.764,462,2.677,482,3.665,483,3.831,484,3.181,485,2.687,486,2.148,487,3.442,488,3.328,489,2.677,490,3.927,491,2.677,505,2.614,530,1.688,537,1.427,562,1.39,572,1.591,577,2.517,581,1.505,585,2.08,586,2.269,587,3.496,588,2.383,589,2.383,590,2.383,591,3.496,592,2.517,593,3.328,594,2.517,606,3.147,607,2.878,608,4.617,609,4.617,616,5.507,627,3.051,628,4.617,629,5.507,630,5.507,631,4.238,639,1.591,982,3.147,991,4.617,1055,2,1078,5.467,1151,3.927,1152,2.878,1162,2.878,1163,3.692,1164,2.878,1165,2.878,1166,2.383,1167,3.927,1168,2.878,1169,2.383,1170,4.222,1171,2.878,1214,2.517,1580,4.222,1581,4.222,1592,4.617,1639,5,1640,4.617,1925,2.878,2111,3.147,2122,2.169,2126,3.927,2127,3.147,2128,4.617,2131,3.147,2236,3.556,2237,5.216,2238,6.177,2239,3.556,2240,3.556,2241,6.177,2242,3.556,2243,3.556,2244,5.216,2245,3.556,2246,6.177,2247,5.216,2248,5.216,2249,5.216,2250,5.216,2251,3.556,2252,5.216,2253,3.556,2254,3.556,2255,3.556,2256,5.216,2257,3.556,2258,3.556,2259,3.556]],["title/additional-documentation/tinynodes-library-docs.html",[23,0.733,63,1.07,495,1.245,1174,1.843,1848,2.139]],["body/additional-documentation/tinynodes-library-docs.html",[23,1.684,53,0.007,91,6.14,197,1.514,226,0.006,227,0.007,228,0.006,322,4.649,902,5.223,905,5.615,907,5.179,908,4.91,1201,3.398,1690,5.615,1749,3.759,1845,4.057,1856,6.14,1888,5.615,1909,6.14,1915,6.14,1924,5.615,1932,5.615,2150,4.649,2154,5.615,2260,6.14,2261,8.117,2262,6.937]],["title/additional-documentation/tinynodes-library-docs/ngx-editorjs-readme.html",[63,1.07,197,0.66,210,0.151,495,1.245,2150,2.025]],["body/additional-documentation/tinynodes-library-docs/ngx-editorjs-readme.html",[0,2.231,2,1.615,5,1.834,7,1.717,12,0.265,14,1.127,15,1.591,29,0.673,53,0.008,55,0.482,56,0.617,58,1.507,59,1.336,60,3.471,67,1.184,81,1.972,95,0.36,98,0.482,100,2.131,109,0.16,110,0.318,111,2.31,113,1.932,117,2.64,130,0.968,148,1.717,152,3.294,153,1.9,166,1.242,169,1.569,176,1.042,191,2.31,192,1.569,197,0.765,198,2.909,206,1.569,207,1.615,210,0.452,211,2.131,223,1.525,226,0.003,227,0.005,228,0.003,229,1.416,230,2.482,233,1.525,234,1.525,235,1.371,244,3.019,249,1.444,254,1.9,258,2.071,262,4.569,263,2.838,264,2.64,292,2.482,301,2.237,318,2.31,320,1.213,321,1.519,332,1.834,335,2.237,343,4.178,349,1.456,355,1.806,357,1.242,396,0.152,406,2.909,418,2.903,423,3.001,433,2.452,434,1.371,445,1.525,449,0.947,458,1.569,464,2.31,465,1.489,468,2.701,474,1.201,475,2.816,478,2.742,484,3.148,485,2.665,486,2.126,487,2.611,499,3.099,503,2.126,505,1.484,527,1.444,528,2.528,537,2.071,539,1.717,546,2.051,562,2.395,570,3.099,571,3.019,572,2.31,575,2.482,581,2.593,582,1.569,585,3.019,598,2.797,600,1.525,624,1.717,627,2.051,633,4.178,635,3.294,639,1.569,653,2.138,658,2.35,680,2.64,681,2.482,704,2.138,714,2.35,715,2.64,716,2.64,772,2.482,840,3.683,841,2.35,851,4.613,853,3.887,861,1.972,864,2.482,880,2.64,901,3.103,907,3.909,908,2.482,911,2.237,923,2.051,944,2.237,984,3.103,985,2.35,1000,4.106,1001,2.237,1002,2.35,1003,3.46,1004,2.35,1005,3.46,1013,3.148,1019,1.9,1023,2.35,1034,2.35,1055,1.972,1058,2.482,1158,2.838,1159,4.178,1166,2.35,1169,2.35,1174,3.737,1177,4.407,1178,3.103,1201,1.717,1202,4.178,1209,2.64,1214,2.482,1215,2.838,1243,2.482,1303,2.838,1327,3.294,1451,2.838,1463,3.019,1466,4.569,1467,3.103,1490,2.838,1517,2.64,1574,2.138,1576,2.237,1578,2.138,1749,2.797,1756,3.654,1783,3.654,1804,3.654,1807,2.64,1845,2.051,1848,4.336,1891,2.237,1921,4.613,2140,3.103,2141,3.103,2142,3.103,2143,3.103,2144,3.103,2145,3.103,2146,3.103,2147,2.838,2148,4.569,2232,3.103,2263,3.506,2264,3.506,2265,3.506,2266,3.103,2267,3.506,2268,6.127,2269,3.506,2270,5.162,2271,3.506,2272,3.506,2273,3.506,2274,3.506,2275,3.506,2276,3.506]],["title/additional-documentation/tinynodes-library-docs/ngx-editorjs-readme/ngx-editorjs-changelog.html",[63,1.07,197,0.66,210,0.151,495,1.245,1845,1.767]],["body/additional-documentation/tinynodes-library-docs/ngx-editorjs-readme/ngx-editorjs-changelog.html",[0,2.487,2,2.582,7,1.923,9,0.098,14,0.857,15,1.21,16,3.575,29,0.754,31,1.728,34,1.158,53,0.005,56,0.691,58,1.68,60,3.01,67,1.326,81,3.675,95,0.188,96,2.297,100,1.238,101,2.128,110,0.509,111,1.757,113,1.238,114,3.475,117,4.219,166,1.391,185,4.219,191,2.508,192,2.924,197,0.857,207,2.582,210,0.442,211,1.238,218,1.864,223,1.708,226,0.003,227,0.005,228,0.003,229,1.416,244,2.297,314,0.894,318,3.372,320,1.358,321,0.974,323,2.297,333,2.208,335,2.505,338,0.527,355,1.652,396,0.171,401,2.43,406,2.661,418,3.151,426,2.632,433,2.843,434,2.946,445,1.708,461,1.575,465,1.885,467,2.835,468,2.054,475,2.555,478,2.508,480,2.505,485,3.587,486,2.691,496,2.128,499,1.986,500,3.809,503,1.617,505,1.662,513,2.371,528,3.2,542,3.837,562,1.535,570,1.986,571,2.297,572,1.757,575,2.779,581,2.371,582,3.189,586,2.438,595,2.297,596,2.395,599,2.632,600,1.708,624,2.745,627,2.297,639,1.757,645,2.297,653,2.395,726,3.178,805,3.966,850,7.043,858,2.632,861,3.151,907,3.575,911,4.169,988,3.178,990,3.475,1001,2.505,1013,2.395,1019,2.128,1026,2.956,1055,3.151,1154,2.779,1174,4.596,1177,3.278,1214,2.779,1243,2.779,1266,3.178,1269,2.779,1332,3.178,1463,2.297,1517,2.956,1650,3.178,1691,3.475,1714,5.044,1845,3.822,1851,6.208,1859,4.96,1861,4.536,1874,3.475,1879,4.536,1888,3.178,1891,4.808,1912,3.475,1934,3.178,2041,3.475,2147,3.178,2150,2.632,2154,5.768,2189,4.96,2219,3.475,2226,3.475,2260,3.475,2277,3.475,2278,3.475,2279,3.475,2280,3.475,2281,3.475,2282,3.475,2283,3.926,2284,7.298,2285,3.926,2286,3.926,2287,3.926,2288,3.926,2289,5.604,2290,3.926,2291,3.926,2292,3.926,2293,3.926,2294,3.926,2295,3.926,2296,3.926,2297,3.926,2298,3.926,2299,3.926,2300,5.604,2301,3.926,2302,3.475,2303,3.926,2304,3.926,2305,3.475,2306,3.926,2307,3.475,2308,6.534,2309,3.926,2310,3.475,2311,3.926,2312,3.926,2313,3.926,2314,3.926,2315,3.926,2316,5.604,2317,3.926,2318,3.926,2319,3.475,2320,3.926,2321,3.926]],["title/additional-documentation/tinynodes-library-docs/ngx-editorjs-plugins-readme.html",[63,0.956,197,0.589,210,0.135,485,1.174,495,1.112,2150,1.809]],["body/additional-documentation/tinynodes-library-docs/ngx-editorjs-plugins-readme.html",[9,0.135,12,0.407,14,1.176,15,2.765,16,4.433,53,0.008,54,1.201,58,1.201,60,3.544,100,1.699,148,2.639,156,2.482,166,1.908,175,3.611,176,1.35,197,1.176,210,0.406,226,0.005,227,0.006,228,0.005,229,1.013,231,2.521,232,2.106,355,1.589,465,2.004,485,3.346,486,2.219,581,3.708,873,4.361,907,3.438,1055,3.908,1573,3.438,1574,3.286,1575,3.438,1577,3.438,1578,3.286,1579,3.438,1619,3.611,1749,4.811,1759,4.361,1807,4.057,1891,3.438,1921,5.232,2150,5.95,2231,4.769,2266,4.769,2322,5.388,2323,5.388,2324,5.388,2325,5.388,2326,5.388,2327,5.388,2328,5.388]],["title/additional-documentation/tinynodes-library-docs/ngx-editorjs-plugins-readme/ngx-editorjs-plugins-changelog.html",[63,0.956,197,0.589,210,0.135,485,1.174,495,1.112,1845,1.578]],["body/additional-documentation/tinynodes-library-docs/ngx-editorjs-plugins-readme/ngx-editorjs-plugins-changelog.html",[9,0.163,34,1.919,53,0.007,58,1.451,101,3.528,185,4.901,226,0.006,227,0.007,228,0.006,229,1.575,320,2.251,434,2.545,447,3.528,485,2.832,500,2.913,542,3.188,586,2.832,726,5.269,840,2.999,861,3.661,911,4.154,1201,3.188,1269,4.608,1376,4.901,1463,4.572,1714,5.533,1845,4.572,1851,6.308,1861,5.269,1891,4.988,1924,5.269,1934,5.269,2277,5.762,2278,5.762,2279,5.762,2280,5.762,2281,5.762,2282,5.762,2284,7.416,2302,5.762,2305,5.762,2307,5.762,2310,5.762,2319,5.762,2329,6.51]]],"invertedIndex":[["",{"_index":53,"title":{},"body":{"components/AppContainerComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"injectables/AppService.html":{},"injectables/AppService-1.html":{},"interfaces/ApplicationData.html":{},"interfaces/ApplicationData-1.html":{},"modules/ApplicationDataModule.html":{},"injectables/ApplicationQuery.html":{},"injectables/ApplicationQuery-1.html":{},"interfaces/ApplicationState.html":{},"interfaces/ApplicationState-1.html":{},"injectables/ApplicationStore.html":{},"injectables/ApplicationStore-1.html":{},"interfaces/BasePlugin.html":{},"interfaces/BasePlugin-1.html":{},"interfaces/Block.html":{},"interfaces/BlocksMap.html":{},"interfaces/ChangeMap.html":{},"classes/Changed.html":{},"interfaces/CreateEditorJSOptions.html":{},"interfaces/DemoData.html":{},"interfaces/DemoData-1.html":{},"interfaces/EditorJSChange.html":{},"interfaces/EditorJSInstanceConfig.html":{},"interfaces/EditorJSMaterialForm.html":{},"interfaces/EditorMap.html":{},"components/FormContainerComponent.html":{},"interfaces/Header.html":{},"interfaces/HeaderBlock.html":{},"components/HomePageComponent.html":{},"interfaces/Image.html":{},"interfaces/ImageBlock.html":{},"interfaces/InjectorApiCallOptions.html":{},"interfaces/InjectorApiCallResponse.html":{},"interfaces/InjectorMethodOption.html":{},"interfaces/List.html":{},"interfaces/ListBlock.html":{},"modules/MaterialModule.html":{},"interfaces/MenuGroup.html":{},"interfaces/MenuGroup-1.html":{},"interfaces/MenuItem.html":{},"interfaces/MenuItem-1.html":{},"classes/MockEditorJS.html":{},"injectables/MockNgZone.html":{},"classes/MockPlugin.html":{},"components/NavBarComponent.html":{},"components/NgxEditorJSBaseComponent.html":{},"components/NgxEditorJSComponent.html":{},"interfaces/NgxEditorJSConfig.html":{},"interfaces/NgxEditorJSDemo.html":{},"interfaces/NgxEditorJSDemo-1.html":{},"interfaces/NgxEditorJSDemoData.html":{},"interfaces/NgxEditorJSDemoData-1.html":{},"components/NgxEditorJSDemoHomeComponent.html":{},"components/NgxEditorJSDemoInfoComponent.html":{},"directives/NgxEditorJSDirective.html":{},"injectables/NgxEditorJSEffects.html":{},"injectables/NgxEditorJSInstanceService.html":{},"modules/NgxEditorJSModule.html":{},"interfaces/NgxEditorJSModuleConfig.html":{},"injectables/NgxEditorJSPluginService.html":{},"injectables/NgxEditorJSService.html":{},"modules/NgxEditorjsDemoModule.html":{},"modules/NgxEditorjsNgrxModule.html":{},"modules/NgxEditorjsPluginsModule.html":{},"modules/NgxHideableHeaderDemoModule.html":{},"modules/NgxTinynodesCoreMaterialModule.html":{},"modules/NgxTinynodesCoreModule.html":{},"classes/NotReady.html":{},"interfaces/Page.html":{},"interfaces/PageBlock.html":{},"components/PageContainerComponent.html":{},"modules/PageStoreModule.html":{},"injectables/PagesQuery.html":{},"injectables/PagesService.html":{},"interfaces/PagesState.html":{},"injectables/PagesStore.html":{},"interfaces/Paragraph.html":{},"interfaces/ParagraphBlock.html":{},"injectables/PluginCode.html":{},"modules/PluginCodeModule.html":{},"interfaces/PluginConfig.html":{},"interfaces/PluginConfig-1.html":{},"injectables/PluginHeader.html":{},"modules/PluginHeaderModule.html":{},"injectables/PluginImage.html":{},"modules/PluginImageModule.html":{},"injectables/PluginLink.html":{},"modules/PluginLinkModule.html":{},"injectables/PluginList.html":{},"modules/PluginListModule.html":{},"injectables/PluginMarker.html":{},"modules/PluginMarkerModule.html":{},"injectables/PluginParagraph.html":{},"modules/PluginParagraphModule.html":{},"injectables/PluginSimpleImage.html":{},"modules/PluginSimpleImageModule.html":{},"classes/Ready.html":{},"interfaces/ReadyMap.html":{},"classes/SaveEnd.html":{},"classes/SaveStart.html":{},"interfaces/SavedMap.html":{},"components/SidebarComponent.html":{},"interfaces/Tag.html":{},"classes/TestClass.html":{},"interfaces/TinynodeDemos.html":{},"interfaces/TinynodeDemos-1.html":{},"interfaces/ToolSettingsMap.html":{},"interfaces/ToolSettingsMap-1.html":{},"changelog.html":{},"contributing.html":{},"dependencies.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"index.html":{},"license.html":{},"modules.html":{},"overview.html":{},"todo.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{},"additional-documentation/tinynodes-library-docs.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-readme.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-readme/ngx-editorjs-changelog.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-plugins-readme.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-plugins-readme/ngx-editorjs-plugins-changelog.html":{}}}],["0",{"_index":169,"title":{},"body":{"components/AppContainerComponent.html":{},"injectables/AppService.html":{},"injectables/AppService-1.html":{},"interfaces/EditorJSInstanceConfig.html":{},"interfaces/EditorJSMaterialForm.html":{},"components/FormContainerComponent.html":{},"interfaces/InjectorApiCallOptions.html":{},"interfaces/InjectorApiCallResponse.html":{},"interfaces/InjectorMethodOption.html":{},"components/NavBarComponent.html":{},"components/NgxEditorJSBaseComponent.html":{},"components/NgxEditorJSComponent.html":{},"directives/NgxEditorJSDirective.html":{},"injectables/NgxEditorJSInstanceService.html":{},"components/PageContainerComponent.html":{},"miscellaneous/variables.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-readme.html":{}}}],["0).subscribe",{"_index":1098,"title":{},"body":{"components/NgxEditorJSBaseComponent.html":{}}}],["0.0.5",{"_index":2116,"title":{},"body":{"dependencies.html":{}}}],["0.12.2",{"_index":2115,"title":{},"body":{"dependencies.html":{}}}],["0.8.26",{"_index":2121,"title":{},"body":{"dependencies.html":{}}}],["05",{"_index":2284,"title":{},"body":{"additional-documentation/tinynodes-library-docs/ngx-editorjs-readme/ngx-editorjs-changelog.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-plugins-readme/ngx-editorjs-plugins-changelog.html":{}}}],["1",{"_index":388,"title":{"injectables/AppService-1.html":{},"interfaces/ApplicationData-1.html":{},"injectables/ApplicationQuery-1.html":{},"interfaces/ApplicationState-1.html":{},"injectables/ApplicationStore-1.html":{},"interfaces/BasePlugin-1.html":{},"interfaces/DemoData-1.html":{},"interfaces/MenuGroup-1.html":{},"interfaces/MenuItem-1.html":{},"interfaces/NgxEditorJSDemo-1.html":{},"interfaces/NgxEditorJSDemoData-1.html":{},"interfaces/PluginConfig-1.html":{},"interfaces/TinynodeDemos-1.html":{},"interfaces/ToolSettingsMap-1.html":{}},"body":{"interfaces/Block.html":{},"components/FormContainerComponent.html":{},"interfaces/Header.html":{},"interfaces/HeaderBlock.html":{},"interfaces/Image.html":{},"interfaces/ImageBlock.html":{},"interfaces/List.html":{},"interfaces/ListBlock.html":{},"components/NgxEditorJSComponent.html":{},"components/PageContainerComponent.html":{},"interfaces/Paragraph.html":{},"interfaces/ParagraphBlock.html":{},"overview.html":{}}}],["1.0.0",{"_index":2319,"title":{},"body":{"additional-documentation/tinynodes-library-docs/ngx-editorjs-readme/ngx-editorjs-changelog.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-plugins-readme/ngx-editorjs-plugins-changelog.html":{}}}],["1.0.4",{"_index":2105,"title":{},"body":{"dependencies.html":{}}}],["1.1.0",{"_index":2310,"title":{},"body":{"additional-documentation/tinynodes-library-docs/ngx-editorjs-readme/ngx-editorjs-changelog.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-plugins-readme/ngx-editorjs-plugins-changelog.html":{}}}],["1.1.1",{"_index":2307,"title":{},"body":{"additional-documentation/tinynodes-library-docs/ngx-editorjs-readme/ngx-editorjs-changelog.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-plugins-readme/ngx-editorjs-plugins-changelog.html":{}}}],["1.1.2",{"_index":2304,"title":{},"body":{"additional-documentation/tinynodes-library-docs/ngx-editorjs-readme/ngx-editorjs-changelog.html":{}}}],["1.2",{"_index":1884,"title":{},"body":{"changelog.html":{}}}],["1.2.0",{"_index":2301,"title":{},"body":{"additional-documentation/tinynodes-library-docs/ngx-editorjs-readme/ngx-editorjs-changelog.html":{}}}],["1.3.0",{"_index":2295,"title":{},"body":{"additional-documentation/tinynodes-library-docs/ngx-editorjs-readme/ngx-editorjs-changelog.html":{}}}],["1.3.2",{"_index":2290,"title":{},"body":{"additional-documentation/tinynodes-library-docs/ngx-editorjs-readme/ngx-editorjs-changelog.html":{}}}],["1.3.4",{"_index":2108,"title":{},"body":{"dependencies.html":{}}}],["1.4",{"_index":2093,"title":{},"body":{"contributing.html":{}}}],["10",{"_index":2308,"title":{},"body":{"additional-documentation/tinynodes-library-docs/ngx-editorjs-readme/ngx-editorjs-changelog.html":{}}}],["100",{"_index":885,"title":{},"body":{"components/FormContainerComponent.html":{},"components/NgxEditorJSComponent.html":{},"components/NgxEditorJSDemoInfoComponent.html":{},"components/PageContainerComponent.html":{}}}],["100vh",{"_index":154,"title":{},"body":{"components/AppContainerComponent.html":{},"components/FormContainerComponent.html":{},"components/NgxEditorJSDemoInfoComponent.html":{},"components/PageContainerComponent.html":{}}}],["11",{"_index":2305,"title":{},"body":{"additional-documentation/tinynodes-library-docs/ngx-editorjs-readme/ngx-editorjs-changelog.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-plugins-readme/ngx-editorjs-plugins-changelog.html":{}}}],["12",{"_index":2220,"title":{},"body":{"overview.html":{}}}],["12th",{"_index":1881,"title":{},"body":{"changelog.html":{}}}],["13",{"_index":2302,"title":{},"body":{"additional-documentation/tinynodes-library-docs/ngx-editorjs-readme/ngx-editorjs-changelog.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-plugins-readme/ngx-editorjs-plugins-changelog.html":{}}}],["13th",{"_index":1877,"title":{},"body":{"changelog.html":{}}}],["15",{"_index":185,"title":{},"body":{"components/AppContainerComponent.html":{},"components/NavBarComponent.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-readme/ngx-editorjs-changelog.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-plugins-readme/ngx-editorjs-plugins-changelog.html":{}}}],["15th",{"_index":1866,"title":{},"body":{"changelog.html":{}}}],["1em",{"_index":1150,"title":{},"body":{"components/NgxEditorJSComponent.html":{}}}],["2.0.0",{"_index":2283,"title":{},"body":{"additional-documentation/tinynodes-library-docs/ngx-editorjs-readme/ngx-editorjs-changelog.html":{}}}],["2.0.8",{"_index":2114,"title":{},"body":{"dependencies.html":{}}}],["2.13.0",{"_index":2106,"title":{},"body":{"dependencies.html":{}}}],["2.2.3",{"_index":2107,"title":{},"body":{"dependencies.html":{}}}],["2.5.0",{"_index":2109,"title":{},"body":{"dependencies.html":{}}}],["2.5.4",{"_index":2112,"title":{},"body":{"dependencies.html":{}}}],["2019",{"_index":1851,"title":{},"body":{"changelog.html":{},"license.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-readme/ngx-editorjs-changelog.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-plugins-readme/ngx-editorjs-plugins-changelog.html":{}}}],["22",{"_index":2219,"title":{},"body":{"overview.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-readme/ngx-editorjs-changelog.html":{}}}],["22nd",{"_index":1850,"title":{},"body":{"changelog.html":{}}}],["250px",{"_index":155,"title":{},"body":{"components/AppContainerComponent.html":{}}}],["2px",{"_index":1146,"title":{},"body":{"components/NgxEditorJSComponent.html":{}}}],["3.0.2",{"_index":2104,"title":{},"body":{"dependencies.html":{}}}],["30px",{"_index":177,"title":{},"body":{"components/AppContainerComponent.html":{},"components/NavBarComponent.html":{}}}],["4",{"_index":1679,"title":{},"body":{"components/PageContainerComponent.html":{}}}],["49",{"_index":2222,"title":{},"body":{"overview.html":{}}}],["5px",{"_index":180,"title":{},"body":{"components/AppContainerComponent.html":{},"components/NavBarComponent.html":{}}}],["6",{"_index":507,"title":{},"body":{"interfaces/Block.html":{},"interfaces/Header.html":{},"interfaces/HeaderBlock.html":{},"interfaces/Image.html":{},"interfaces/ImageBlock.html":{},"interfaces/List.html":{},"interfaces/ListBlock.html":{},"interfaces/Paragraph.html":{},"interfaces/ParagraphBlock.html":{}}}],["6.3.3",{"_index":2119,"title":{},"body":{"dependencies.html":{}}}],["6.9.0",{"_index":2118,"title":{},"body":{"dependencies.html":{}}}],["7",{"_index":2149,"title":{},"body":{"index.html":{}}}],["7.0.0",{"_index":2101,"title":{},"body":{"dependencies.html":{}}}],["7.1.5",{"_index":2117,"title":{},"body":{"dependencies.html":{}}}],["7.2.15",{"_index":2097,"title":{},"body":{"dependencies.html":{}}}],["7.3.7",{"_index":2099,"title":{},"body":{"dependencies.html":{}}}],["7.4.0",{"_index":2110,"title":{},"body":{"dependencies.html":{}}}],["768px",{"_index":126,"title":{},"body":{"components/AppContainerComponent.html":{}}}],["8",{"_index":2221,"title":{},"body":{"overview.html":{}}}],["85",{"_index":188,"title":{},"body":{"components/AppContainerComponent.html":{},"components/NavBarComponent.html":{}}}],["_disabled",{"_index":672,"title":{},"body":{"interfaces/EditorJSMaterialForm.html":{}}}],["_empty",{"_index":677,"title":{},"body":{"interfaces/EditorJSMaterialForm.html":{}}}],["_focused",{"_index":659,"title":{},"body":{"interfaces/EditorJSMaterialForm.html":{}}}],["_placeholder",{"_index":654,"title":{},"body":{"interfaces/EditorJSMaterialForm.html":{}}}],["_required",{"_index":665,"title":{},"body":{"interfaces/EditorJSMaterialForm.html":{}}}],["_value",{"_index":992,"title":{},"body":{"components/NgxEditorJSBaseComponent.html":{},"components/NgxEditorJSComponent.html":{}}}],["a:active",{"_index":162,"title":{},"body":{"components/AppContainerComponent.html":{},"components/NavBarComponent.html":{}}}],["a:hover",{"_index":161,"title":{},"body":{"components/AppContainerComponent.html":{},"components/NavBarComponent.html":{}}}],["above",{"_index":2186,"title":{},"body":{"license.html":{}}}],["abusive",{"_index":2059,"title":{},"body":{"contributing.html":{}}}],["acceptable",{"_index":2017,"title":{},"body":{"contributing.html":{}}}],["accepting",{"_index":1981,"title":{},"body":{"contributing.html":{}}}],["access",{"_index":680,"title":{},"body":{"interfaces/EditorJSMaterialForm.html":{},"components/NgxEditorJSComponent.html":{},"index.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-readme.html":{}}}],["accessor",{"_index":2259,"title":{},"body":{"miscellaneous/variables.html":{}}}],["accessors",{"_index":38,"title":{},"body":{"components/AppContainerComponent.html":{},"injectables/AppService.html":{},"injectables/AppService-1.html":{},"components/FormContainerComponent.html":{},"components/HomePageComponent.html":{},"components/NgxEditorJSDemoInfoComponent.html":{},"directives/NgxEditorJSDirective.html":{},"injectables/NgxEditorJSPluginService.html":{},"components/PageContainerComponent.html":{},"injectables/PagesService.html":{}}}],["account",{"_index":2050,"title":{},"body":{"contributing.html":{}}}],["acting",{"_index":2051,"title":{},"body":{"contributing.html":{}}}],["action",{"_index":546,"title":{},"body":{"classes/Changed.html":{},"injectables/NgxEditorJSEffects.html":{},"classes/NotReady.html":{},"classes/Ready.html":{},"classes/SaveEnd.html":{},"classes/SaveStart.html":{},"contributing.html":{},"license.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-readme.html":{}}}],["action.payload.holder",{"_index":1317,"title":{},"body":{"injectables/NgxEditorJSEffects.html":{}}}],["actions",{"_index":1308,"title":{},"body":{"injectables/NgxEditorJSEffects.html":{},"modules/NgxEditorjsNgrxModule.html":{}}}],["actions/ngx",{"_index":1322,"title":{},"body":{"injectables/NgxEditorJSEffects.html":{}}}],["active",{"_index":860,"title":{},"body":{"components/FormContainerComponent.html":{},"components/NgxEditorJSBaseComponent.html":{},"components/NgxEditorJSComponent.html":{},"directives/NgxEditorJSDirective.html":{}}}],["actual_component",{"_index":225,"title":{},"body":{"components/AppContainerComponent.html":{},"components/FormContainerComponent.html":{},"components/HomePageComponent.html":{},"components/NavBarComponent.html":{},"components/NgxEditorJSBaseComponent.html":{},"components/NgxEditorJSComponent.html":{},"components/NgxEditorJSDemoHomeComponent.html":{},"components/NgxEditorJSDemoInfoComponent.html":{},"components/PageContainerComponent.html":{},"components/SidebarComponent.html":{}}}],["adapted",{"_index":2091,"title":{},"body":{"contributing.html":{}}}],["add",{"_index":858,"title":{},"body":{"components/FormContainerComponent.html":{},"injectables/NgxEditorJSPluginService.html":{},"components/PageContainerComponent.html":{},"injectables/PagesService.html":{},"todo.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-readme/ngx-editorjs-changelog.html":{}}}],["add(key",{"_index":1504,"title":{},"body":{"injectables/NgxEditorJSPluginService.html":{}}}],["add(page",{"_index":1706,"title":{},"body":{"injectables/PagesService.html":{}}}],["addblock",{"_index":1701,"title":{},"body":{"injectables/PagesService.html":{}}}],["addblock(pageid",{"_index":1708,"title":{},"body":{"injectables/PagesService.html":{}}}],["added",{"_index":500,"title":{},"body":{"interfaces/Block.html":{},"interfaces/Header.html":{},"interfaces/HeaderBlock.html":{},"interfaces/Image.html":{},"interfaces/ImageBlock.html":{},"interfaces/List.html":{},"interfaces/ListBlock.html":{},"components/NgxEditorJSBaseComponent.html":{},"components/NgxEditorJSComponent.html":{},"directives/NgxEditorJSDirective.html":{},"injectables/PagesService.html":{},"interfaces/Paragraph.html":{},"interfaces/ParagraphBlock.html":{},"changelog.html":{},"miscellaneous/typealiases.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-readme/ngx-editorjs-changelog.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-plugins-readme/ngx-editorjs-plugins-changelog.html":{}}}],["adding",{"_index":484,"title":{},"body":{"interfaces/BasePlugin.html":{},"interfaces/BasePlugin-1.html":{},"interfaces/PluginConfig.html":{},"interfaces/PluginConfig-1.html":{},"interfaces/ToolSettingsMap.html":{},"interfaces/ToolSettingsMap-1.html":{},"miscellaneous/variables.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-readme.html":{}}}],["additional",{"_index":495,"title":{"additional-documentation/tinynodes-library-docs.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-readme.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-readme/ngx-editorjs-changelog.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-plugins-readme.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-plugins-readme/ngx-editorjs-plugins-changelog.html":{}},"body":{"interfaces/Block.html":{},"components/FormContainerComponent.html":{},"interfaces/Header.html":{},"interfaces/HeaderBlock.html":{},"components/HomePageComponent.html":{},"interfaces/Image.html":{},"interfaces/ImageBlock.html":{},"interfaces/List.html":{},"interfaces/ListBlock.html":{},"injectables/NgxEditorJSInstanceService.html":{},"injectables/NgxEditorJSService.html":{},"modules/NgxEditorjsPluginsModule.html":{},"components/PageContainerComponent.html":{},"interfaces/Paragraph.html":{},"interfaces/ParagraphBlock.html":{}}}],["address",{"_index":2007,"title":{},"body":{"contributing.html":{}}}],["adds",{"_index":1354,"title":{},"body":{"injectables/NgxEditorJSInstanceService.html":{}}}],["adheres",{"_index":2281,"title":{},"body":{"additional-documentation/tinynodes-library-docs/ngx-editorjs-readme/ngx-editorjs-changelog.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-plugins-readme/ngx-editorjs-plugins-changelog.html":{}}}],["advances",{"_index":1996,"title":{},"body":{"contributing.html":{}}}],["aftercontentinit",{"_index":19,"title":{},"body":{"components/AppContainerComponent.html":{},"interfaces/EditorJSMaterialForm.html":{},"components/FormContainerComponent.html":{},"components/NgxEditorJSBaseComponent.html":{},"directives/NgxEditorJSDirective.html":{},"components/PageContainerComponent.html":{}}}],["age",{"_index":1955,"title":{},"body":{"contributing.html":{}}}],["aggregate",{"_index":399,"title":{},"body":{"interfaces/ApplicationData.html":{},"interfaces/ApplicationData-1.html":{},"interfaces/MenuGroup.html":{},"interfaces/MenuGroup-1.html":{},"interfaces/MenuItem.html":{},"interfaces/MenuItem-1.html":{}}}],["akitangdevtools",{"_index":272,"title":{},"body":{"modules/AppModule.html":{}}}],["akitangdevtools.forroot",{"_index":296,"title":{},"body":{"modules/AppModule.html":{}}}],["akitangrouterstoremodule",{"_index":267,"title":{},"body":{"modules/AppModule.html":{}}}],["akitangrouterstoremodule.forroot",{"_index":297,"title":{},"body":{"modules/AppModule.html":{}}}],["aliases",{"_index":2234,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["align",{"_index":181,"title":{},"body":{"components/AppContainerComponent.html":{},"components/NavBarComponent.html":{},"components/NgxEditorJSComponent.html":{}}}],["aligned",{"_index":2029,"title":{},"body":{"contributing.html":{}}}],["allow",{"_index":466,"title":{},"body":{"interfaces/BasePlugin.html":{},"interfaces/BasePlugin-1.html":{},"modules/NgxEditorJSModule.html":{},"modules/NgxEditorjsNgrxModule.html":{},"modules/PageStoreModule.html":{},"interfaces/PluginConfig.html":{},"interfaces/PluginConfig-1.html":{},"interfaces/ToolSettingsMap.html":{},"interfaces/ToolSettingsMap-1.html":{}}}],["allows",{"_index":1159,"title":{},"body":{"interfaces/NgxEditorJSConfig.html":{},"interfaces/NgxEditorJSModuleConfig.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-readme.html":{}}}],["along",{"_index":2265,"title":{},"body":{"additional-documentation/tinynodes-library-docs/ngx-editorjs-readme.html":{}}}],["and/or",{"_index":2178,"title":{},"body":{"license.html":{}}}],["angular",{"_index":60,"title":{},"body":{"components/AppContainerComponent.html":{},"interfaces/EditorJSMaterialForm.html":{},"components/HomePageComponent.html":{},"modules/MaterialModule.html":{},"components/NgxEditorJSBaseComponent.html":{},"components/NgxEditorJSComponent.html":{},"components/NgxEditorJSDemoHomeComponent.html":{},"directives/NgxEditorJSDirective.html":{},"injectables/NgxEditorJSInstanceService.html":{},"modules/NgxEditorJSModule.html":{},"injectables/NgxEditorJSService.html":{},"changelog.html":{},"index.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-readme.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-readme/ngx-editorjs-changelog.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-plugins-readme.html":{}}}],["angular/animations",{"_index":2096,"title":{},"body":{"dependencies.html":{}}}],["angular/cdk",{"_index":2098,"title":{},"body":{"dependencies.html":{}}}],["angular/cdk/a11y",{"_index":611,"title":{},"body":{"interfaces/EditorJSMaterialForm.html":{},"components/NgxEditorJSBaseComponent.html":{},"components/NgxEditorJSComponent.html":{}}}],["angular/cdk/coercion",{"_index":613,"title":{},"body":{"interfaces/EditorJSMaterialForm.html":{}}}],["angular/cdk/layout",{"_index":108,"title":{},"body":{"components/AppContainerComponent.html":{},"modules/AppModule.html":{}}}],["angular/common",{"_index":1473,"title":{},"body":{"modules/NgxEditorJSModule.html":{},"modules/NgxEditorjsDemoModule.html":{},"modules/NgxEditorjsNgrxModule.html":{},"modules/NgxEditorjsPluginsModule.html":{},"modules/NgxHideableHeaderDemoModule.html":{},"modules/NgxTinynodesCoreMaterialModule.html":{},"dependencies.html":{}}}],["angular/common/http",{"_index":257,"title":{},"body":{"modules/AppModule.html":{},"injectables/AppService.html":{},"injectables/AppService-1.html":{}}}],["angular/compiler",{"_index":2100,"title":{},"body":{"dependencies.html":{}}}],["angular/core",{"_index":98,"title":{},"body":{"components/AppContainerComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"injectables/AppService.html":{},"injectables/AppService-1.html":{},"modules/ApplicationDataModule.html":{},"injectables/ApplicationQuery.html":{},"injectables/ApplicationQuery-1.html":{},"injectables/ApplicationStore.html":{},"injectables/ApplicationStore-1.html":{},"interfaces/BasePlugin.html":{},"interfaces/BasePlugin-1.html":{},"interfaces/EditorJSInstanceConfig.html":{},"interfaces/EditorJSMaterialForm.html":{},"components/FormContainerComponent.html":{},"components/HomePageComponent.html":{},"interfaces/InjectorApiCallOptions.html":{},"interfaces/InjectorApiCallResponse.html":{},"interfaces/InjectorMethodOption.html":{},"modules/MaterialModule.html":{},"injectables/MockNgZone.html":{},"components/NavBarComponent.html":{},"components/NgxEditorJSBaseComponent.html":{},"components/NgxEditorJSComponent.html":{},"interfaces/NgxEditorJSConfig.html":{},"components/NgxEditorJSDemoHomeComponent.html":{},"components/NgxEditorJSDemoInfoComponent.html":{},"directives/NgxEditorJSDirective.html":{},"injectables/NgxEditorJSEffects.html":{},"injectables/NgxEditorJSInstanceService.html":{},"modules/NgxEditorJSModule.html":{},"interfaces/NgxEditorJSModuleConfig.html":{},"injectables/NgxEditorJSPluginService.html":{},"injectables/NgxEditorJSService.html":{},"modules/NgxEditorjsDemoModule.html":{},"modules/NgxEditorjsNgrxModule.html":{},"modules/NgxEditorjsPluginsModule.html":{},"modules/NgxHideableHeaderDemoModule.html":{},"modules/NgxTinynodesCoreMaterialModule.html":{},"modules/NgxTinynodesCoreModule.html":{},"components/PageContainerComponent.html":{},"modules/PageStoreModule.html":{},"injectables/PagesQuery.html":{},"injectables/PagesService.html":{},"interfaces/PagesState.html":{},"injectables/PagesStore.html":{},"injectables/PluginCode.html":{},"modules/PluginCodeModule.html":{},"interfaces/PluginConfig.html":{},"interfaces/PluginConfig-1.html":{},"injectables/PluginHeader.html":{},"modules/PluginHeaderModule.html":{},"injectables/PluginImage.html":{},"modules/PluginImageModule.html":{},"injectables/PluginLink.html":{},"modules/PluginLinkModule.html":{},"injectables/PluginList.html":{},"modules/PluginListModule.html":{},"injectables/PluginMarker.html":{},"modules/PluginMarkerModule.html":{},"injectables/PluginParagraph.html":{},"modules/PluginParagraphModule.html":{},"injectables/PluginSimpleImage.html":{},"modules/PluginSimpleImageModule.html":{},"components/SidebarComponent.html":{},"interfaces/ToolSettingsMap.html":{},"interfaces/ToolSettingsMap-1.html":{},"dependencies.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-readme.html":{}}}],["angular/core/src/render3/jit/compiler_facade_interface",{"_index":1077,"title":{},"body":{"components/NgxEditorJSBaseComponent.html":{}}}],["angular/flex",{"_index":260,"title":{},"body":{"modules/AppModule.html":{},"dependencies.html":{}}}],["angular/forms",{"_index":621,"title":{},"body":{"interfaces/EditorJSMaterialForm.html":{},"components/FormContainerComponent.html":{},"components/NgxEditorJSBaseComponent.html":{},"modules/NgxEditorJSModule.html":{},"modules/NgxEditorjsDemoModule.html":{},"dependencies.html":{}}}],["angular/material",{"_index":99,"title":{},"body":{"components/AppContainerComponent.html":{},"modules/AppModule.html":{},"interfaces/EditorJSMaterialForm.html":{},"modules/MaterialModule.html":{},"modules/NgxEditorJSModule.html":{},"modules/NgxEditorjsDemoModule.html":{},"modules/NgxTinynodesCoreMaterialModule.html":{},"dependencies.html":{}}}],["angular/platform",{"_index":263,"title":{},"body":{"modules/AppModule.html":{},"dependencies.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-readme.html":{}}}],["angular/router",{"_index":305,"title":{},"body":{"modules/AppRoutingModule.html":{},"interfaces/ApplicationData.html":{},"interfaces/ApplicationData-1.html":{},"interfaces/MenuGroup.html":{},"interfaces/MenuGroup-1.html":{},"interfaces/MenuItem.html":{},"interfaces/MenuItem-1.html":{},"modules/NgxEditorjsDemoModule.html":{},"modules/NgxHideableHeaderDemoModule.html":{},"dependencies.html":{}}}],["any)(editorconfig",{"_index":1395,"title":{},"body":{"injectables/NgxEditorJSInstanceService.html":{}}}],["any).onready",{"_index":945,"title":{},"body":{"classes/MockEditorJS.html":{},"classes/MockPlugin.html":{},"classes/TestClass.html":{}}}],["aot",{"_index":2316,"title":{},"body":{"additional-documentation/tinynodes-library-docs/ngx-editorjs-readme/ngx-editorjs-changelog.html":{}}}],["api",{"_index":600,"title":{},"body":{"interfaces/EditorJSInstanceConfig.html":{},"interfaces/InjectorApiCallOptions.html":{},"interfaces/InjectorApiCallResponse.html":{},"interfaces/InjectorMethodOption.html":{},"components/NgxEditorJSDemoHomeComponent.html":{},"injectables/NgxEditorJSInstanceService.html":{},"injectables/NgxEditorJSService.html":{},"modules/PluginCodeModule.html":{},"modules/PluginHeaderModule.html":{},"modules/PluginImageModule.html":{},"modules/PluginLinkModule.html":{},"modules/PluginListModule.html":{},"modules/PluginMarkerModule.html":{},"modules/PluginParagraphModule.html":{},"modules/PluginSimpleImageModule.html":{},"index.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-readme.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-readme/ngx-editorjs-changelog.html":{}}}],["api](https://editorjs.io/api",{"_index":1558,"title":{},"body":{"injectables/NgxEditorJSService.html":{}}}],["apicall",{"_index":1332,"title":{},"body":{"injectables/NgxEditorJSInstanceService.html":{},"injectables/NgxEditorJSService.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-readme/ngx-editorjs-changelog.html":{}}}],["apicall(options",{"_index":1339,"title":{},"body":{"injectables/NgxEditorJSInstanceService.html":{},"injectables/NgxEditorJSService.html":{}}}],["app",{"_index":57,"title":{},"body":{"components/AppContainerComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"interfaces/ApplicationData.html":{},"interfaces/ApplicationData-1.html":{},"components/FormContainerComponent.html":{},"components/HomePageComponent.html":{},"interfaces/MenuGroup.html":{},"interfaces/MenuGroup-1.html":{},"interfaces/MenuItem.html":{},"interfaces/MenuItem-1.html":{},"interfaces/NgxEditorJSConfig.html":{},"modules/NgxEditorJSModule.html":{},"interfaces/NgxEditorJSModuleConfig.html":{},"components/PageContainerComponent.html":{},"changelog.html":{},"miscellaneous/variables.html":{}}}],["app.component",{"_index":2269,"title":{},"body":{"additional-documentation/tinynodes-library-docs/ngx-editorjs-readme.html":{}}}],["app.component.html",{"_index":27,"title":{},"body":{"components/AppContainerComponent.html":{}}}],["app.component.scss",{"_index":25,"title":{},"body":{"components/AppContainerComponent.html":{}}}],["appcomponent",{"_index":2268,"title":{},"body":{"additional-documentation/tinynodes-library-docs/ngx-editorjs-readme.html":{}}}],["appcontainercomponent",{"_index":1,"title":{"components/AppContainerComponent.html":{}},"body":{"components/AppContainerComponent.html":{},"modules/AppModule.html":{},"components/FormContainerComponent.html":{},"components/HomePageComponent.html":{},"components/NavBarComponent.html":{},"components/NgxEditorJSBaseComponent.html":{},"components/NgxEditorJSComponent.html":{},"components/NgxEditorJSDemoHomeComponent.html":{},"components/NgxEditorJSDemoInfoComponent.html":{},"components/PageContainerComponent.html":{},"components/SidebarComponent.html":{},"overview.html":{}}}],["appear",{"_index":865,"title":{},"body":{"components/FormContainerComponent.html":{},"components/PageContainerComponent.html":{}}}],["appearance",{"_index":1964,"title":{},"body":{"contributing.html":{}}}],["application",{"_index":14,"title":{},"body":{"components/AppContainerComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"injectables/AppService.html":{},"injectables/AppService-1.html":{},"interfaces/ApplicationData.html":{},"interfaces/ApplicationData-1.html":{},"modules/ApplicationDataModule.html":{},"injectables/ApplicationQuery.html":{},"injectables/ApplicationQuery-1.html":{},"interfaces/ApplicationState.html":{},"interfaces/ApplicationState-1.html":{},"injectables/ApplicationStore.html":{},"injectables/ApplicationStore-1.html":{},"interfaces/BasePlugin.html":{},"interfaces/BasePlugin-1.html":{},"interfaces/DemoData.html":{},"interfaces/DemoData-1.html":{},"components/FormContainerComponent.html":{},"interfaces/MenuGroup.html":{},"interfaces/MenuGroup-1.html":{},"interfaces/MenuItem.html":{},"interfaces/MenuItem-1.html":{},"components/NavBarComponent.html":{},"components/NgxEditorJSBaseComponent.html":{},"components/NgxEditorJSComponent.html":{},"interfaces/NgxEditorJSDemo.html":{},"interfaces/NgxEditorJSDemo-1.html":{},"interfaces/NgxEditorJSDemoData.html":{},"interfaces/NgxEditorJSDemoData-1.html":{},"components/NgxEditorJSDemoHomeComponent.html":{},"modules/NgxEditorJSModule.html":{},"injectables/NgxEditorJSPluginService.html":{},"components/PageContainerComponent.html":{},"interfaces/PluginConfig.html":{},"interfaces/PluginConfig-1.html":{},"interfaces/TinynodeDemos.html":{},"interfaces/TinynodeDemos-1.html":{},"interfaces/ToolSettingsMap.html":{},"interfaces/ToolSettingsMap-1.html":{},"changelog.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"index.html":{},"miscellaneous/variables.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-readme.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-readme/ngx-editorjs-changelog.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-plugins-readme.html":{}}}],["application.model",{"_index":362,"title":{},"body":{"injectables/AppService.html":{},"injectables/AppService-1.html":{},"injectables/ApplicationQuery.html":{},"injectables/ApplicationQuery-1.html":{},"injectables/ApplicationStore.html":{},"injectables/ApplicationStore-1.html":{}}}],["application.query",{"_index":363,"title":{},"body":{"injectables/AppService.html":{},"injectables/AppService-1.html":{},"modules/ApplicationDataModule.html":{}}}],["application.service",{"_index":427,"title":{},"body":{"modules/ApplicationDataModule.html":{}}}],["application.store",{"_index":364,"title":{},"body":{"injectables/AppService.html":{},"injectables/AppService-1.html":{},"modules/ApplicationDataModule.html":{},"injectables/ApplicationQuery.html":{},"injectables/ApplicationQuery-1.html":{}}}],["applicationdata",{"_index":358,"title":{"interfaces/ApplicationData.html":{},"interfaces/ApplicationData-1.html":{}},"body":{"injectables/AppService.html":{},"injectables/AppService-1.html":{},"interfaces/ApplicationData.html":{},"interfaces/ApplicationData-1.html":{},"interfaces/MenuGroup.html":{},"interfaces/MenuGroup-1.html":{},"interfaces/MenuItem.html":{},"interfaces/MenuItem-1.html":{}}}],["applicationdatamodule",{"_index":242,"title":{"modules/ApplicationDataModule.html":{}},"body":{"modules/AppModule.html":{},"modules/ApplicationDataModule.html":{},"modules/NgxTinynodesCoreModule.html":{},"modules.html":{},"overview.html":{}}}],["applicationquery",{"_index":328,"title":{"injectables/ApplicationQuery.html":{},"injectables/ApplicationQuery-1.html":{}},"body":{"injectables/AppService.html":{},"injectables/AppService-1.html":{},"modules/ApplicationDataModule.html":{},"injectables/ApplicationQuery.html":{},"injectables/ApplicationQuery-1.html":{},"overview.html":{}}}],["applicationref",{"_index":1336,"title":{},"body":{"injectables/NgxEditorJSInstanceService.html":{}}}],["applicationstate",{"_index":435,"title":{"interfaces/ApplicationState.html":{},"interfaces/ApplicationState-1.html":{}},"body":{"injectables/ApplicationQuery.html":{},"injectables/ApplicationQuery-1.html":{},"interfaces/ApplicationState.html":{},"interfaces/ApplicationState-1.html":{},"injectables/ApplicationStore.html":{},"injectables/ApplicationStore-1.html":{},"interfaces/DemoData.html":{},"interfaces/DemoData-1.html":{},"interfaces/NgxEditorJSDemo.html":{},"interfaces/NgxEditorJSDemo-1.html":{},"interfaces/NgxEditorJSDemoData.html":{},"interfaces/NgxEditorJSDemoData-1.html":{},"interfaces/TinynodeDemos.html":{},"interfaces/TinynodeDemos-1.html":{}}}],["applicationstatekeys",{"_index":360,"title":{},"body":{"injectables/AppService.html":{},"injectables/AppService-1.html":{},"interfaces/ApplicationState.html":{},"interfaces/ApplicationState-1.html":{},"interfaces/DemoData.html":{},"interfaces/DemoData-1.html":{},"interfaces/NgxEditorJSDemo.html":{},"interfaces/NgxEditorJSDemo-1.html":{},"interfaces/NgxEditorJSDemoData.html":{},"interfaces/NgxEditorJSDemoData-1.html":{},"interfaces/TinynodeDemos.html":{},"interfaces/TinynodeDemos-1.html":{},"miscellaneous/enumerations.html":{}}}],["applicationstatekeys.hidden",{"_index":370,"title":{},"body":{"injectables/AppService.html":{},"injectables/AppService-1.html":{}}}],["applicationstore",{"_index":329,"title":{"injectables/ApplicationStore.html":{},"injectables/ApplicationStore-1.html":{}},"body":{"injectables/AppService.html":{},"injectables/AppService-1.html":{},"modules/ApplicationDataModule.html":{},"injectables/ApplicationQuery.html":{},"injectables/ApplicationQuery-1.html":{},"injectables/ApplicationStore.html":{},"injectables/ApplicationStore-1.html":{},"overview.html":{}}}],["applies",{"_index":2040,"title":{},"body":{"contributing.html":{}}}],["appmodule",{"_index":230,"title":{"modules/AppModule.html":{}},"body":{"modules/AppModule.html":{},"modules.html":{},"overview.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-readme.html":{}}}],["appointed",{"_index":2052,"title":{},"body":{"contributing.html":{}}}],["appropriate",{"_index":2019,"title":{},"body":{"contributing.html":{}}}],["approutes",{"_index":308,"title":{},"body":{"modules/AppRoutingModule.html":{},"miscellaneous/variables.html":{}}}],["approutingmodule",{"_index":241,"title":{"modules/AppRoutingModule.html":{}},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"modules.html":{},"overview.html":{}}}],["apps",{"_index":402,"title":{},"body":{"interfaces/ApplicationData.html":{},"interfaces/ApplicationData-1.html":{},"interfaces/MenuGroup.html":{},"interfaces/MenuGroup-1.html":{},"interfaces/MenuItem.html":{},"interfaces/MenuItem-1.html":{}}}],["apps/.../app",{"_index":2236,"title":{},"body":{"miscellaneous/variables.html":{}}}],["apps/.../app.po.ts",{"_index":2245,"title":{},"body":{"miscellaneous/variables.html":{}}}],["apps/.../application.model.ts",{"_index":2125,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["apps/.../environment.prod.ts",{"_index":2242,"title":{},"body":{"miscellaneous/variables.html":{}}}],["apps/.../environment.ts",{"_index":2243,"title":{},"body":{"miscellaneous/variables.html":{}}}],["apps/ngx",{"_index":10,"title":{},"body":{"components/AppContainerComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"injectables/AppService-1.html":{},"interfaces/ApplicationData-1.html":{},"injectables/ApplicationQuery-1.html":{},"interfaces/ApplicationState-1.html":{},"injectables/ApplicationStore-1.html":{},"interfaces/DemoData-1.html":{},"components/FormContainerComponent.html":{},"components/HomePageComponent.html":{},"modules/MaterialModule.html":{},"interfaces/MenuGroup-1.html":{},"interfaces/MenuItem-1.html":{},"components/NavBarComponent.html":{},"interfaces/NgxEditorJSDemo-1.html":{},"interfaces/NgxEditorJSDemoData-1.html":{},"modules/NgxEditorjsDemoModule.html":{},"components/PageContainerComponent.html":{},"components/SidebarComponent.html":{},"interfaces/TinynodeDemos-1.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/variables.html":{}}}],["appservice",{"_index":45,"title":{"injectables/AppService.html":{},"injectables/AppService-1.html":{}},"body":{"components/AppContainerComponent.html":{},"injectables/AppService.html":{},"injectables/AppService-1.html":{},"modules/ApplicationDataModule.html":{},"components/FormContainerComponent.html":{},"components/HomePageComponent.html":{},"modules/NgxTinynodesCoreModule.html":{},"components/PageContainerComponent.html":{},"overview.html":{}}}],["area",{"_index":864,"title":{},"body":{"components/FormContainerComponent.html":{},"interfaces/NgxEditorJSConfig.html":{},"interfaces/NgxEditorJSModuleConfig.html":{},"components/PageContainerComponent.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-readme.html":{}}}],["args",{"_index":1340,"title":{},"body":{"injectables/NgxEditorJSInstanceService.html":{},"injectables/NgxEditorJSService.html":{}}}],["argument",{"_index":1343,"title":{},"body":{"injectables/NgxEditorJSInstanceService.html":{},"injectables/NgxEditorJSService.html":{}}}],["arguments",{"_index":1345,"title":{},"body":{"injectables/NgxEditorJSInstanceService.html":{},"injectables/NgxEditorJSService.html":{}}}],["aria",{"_index":407,"title":{},"body":{"interfaces/ApplicationData.html":{},"interfaces/ApplicationData-1.html":{},"interfaces/EditorJSMaterialForm.html":{},"interfaces/MenuGroup.html":{},"interfaces/MenuGroup-1.html":{},"interfaces/MenuItem.html":{},"interfaces/MenuItem-1.html":{}}}],["arising",{"_index":2212,"title":{},"body":{"license.html":{}}}],["array",{"_index":1028,"title":{},"body":{"components/NgxEditorJSBaseComponent.html":{},"components/NgxEditorJSComponent.html":{},"directives/NgxEditorJSDirective.html":{},"injectables/NgxEditorJSPluginService.html":{}}}],["arrayadd",{"_index":1723,"title":{},"body":{"injectables/PagesService.html":{}}}],["arrayadd(entity.blocks",{"_index":1735,"title":{},"body":{"injectables/PagesService.html":{}}}],["arrayremove",{"_index":1724,"title":{},"body":{"injectables/PagesService.html":{}}}],["arrayremove(entity.blocks",{"_index":1736,"title":{},"body":{"injectables/PagesService.html":{}}}],["asjson",{"_index":1659,"title":{},"body":{"components/PageContainerComponent.html":{}}}],["associated",{"_index":2168,"title":{},"body":{"license.html":{}}}],["async",{"_index":1203,"title":{},"body":{"components/NgxEditorJSDemoInfoComponent.html":{},"injectables/NgxEditorJSInstanceService.html":{},"injectables/NgxEditorJSService.html":{},"components/PageContainerComponent.html":{}}}],["attach",{"_index":1214,"title":{},"body":{"directives/NgxEditorJSDirective.html":{},"index.html":{},"miscellaneous/variables.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-readme.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-readme/ngx-editorjs-changelog.html":{}}}],["attached",{"_index":1026,"title":{},"body":{"components/NgxEditorJSBaseComponent.html":{},"components/NgxEditorJSComponent.html":{},"directives/NgxEditorJSDirective.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-readme/ngx-editorjs-changelog.html":{}}}],["attacks",{"_index":2001,"title":{},"body":{"contributing.html":{}}}],["attention",{"_index":1995,"title":{},"body":{"contributing.html":{}}}],["attr.aria",{"_index":640,"title":{},"body":{"interfaces/EditorJSMaterialForm.html":{}}}],["attributes",{"_index":1106,"title":{},"body":{"components/NgxEditorJSComponent.html":{}}}],["attribution",{"_index":2090,"title":{},"body":{"contributing.html":{}}}],["authors",{"_index":2203,"title":{},"body":{"license.html":{}}}],["auto",{"_index":178,"title":{},"body":{"components/AppContainerComponent.html":{},"components/NavBarComponent.html":{}}}],["autofocus",{"_index":1000,"title":{},"body":{"components/NgxEditorJSBaseComponent.html":{},"components/NgxEditorJSComponent.html":{},"interfaces/NgxEditorJSConfig.html":{},"directives/NgxEditorJSDirective.html":{},"interfaces/NgxEditorJSModuleConfig.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-readme.html":{}}}],["autofocused",{"_index":1153,"title":{},"body":{"interfaces/NgxEditorJSConfig.html":{},"interfaces/NgxEditorJSModuleConfig.html":{}}}],["autosave",{"_index":571,"title":{},"body":{"interfaces/CreateEditorJSOptions.html":{},"interfaces/EditorJSMaterialForm.html":{},"components/FormContainerComponent.html":{},"components/NgxEditorJSBaseComponent.html":{},"components/NgxEditorJSComponent.html":{},"directives/NgxEditorJSDirective.html":{},"todo.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-readme.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-readme/ngx-editorjs-changelog.html":{}}}],["autosaves",{"_index":1017,"title":{},"body":{"components/NgxEditorJSBaseComponent.html":{},"components/NgxEditorJSComponent.html":{},"directives/NgxEditorJSDirective.html":{}}}],["autosavetime",{"_index":776,"title":{},"body":{"components/FormContainerComponent.html":{}}}],["available",{"_index":401,"title":{},"body":{"interfaces/ApplicationData.html":{},"interfaces/ApplicationData-1.html":{},"interfaces/Block.html":{},"interfaces/Header.html":{},"interfaces/HeaderBlock.html":{},"interfaces/Image.html":{},"interfaces/ImageBlock.html":{},"interfaces/List.html":{},"interfaces/ListBlock.html":{},"interfaces/MenuGroup.html":{},"interfaces/MenuGroup-1.html":{},"interfaces/MenuItem.html":{},"interfaces/MenuItem-1.html":{},"components/NgxEditorJSBaseComponent.html":{},"components/NgxEditorJSComponent.html":{},"directives/NgxEditorJSDirective.html":{},"injectables/NgxEditorJSPluginService.html":{},"injectables/PagesService.html":{},"interfaces/Paragraph.html":{},"interfaces/ParagraphBlock.html":{},"contributing.html":{},"modules.html":{},"miscellaneous/typealiases.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-readme/ngx-editorjs-changelog.html":{}}}],["await",{"_index":1398,"title":{},"body":{"injectables/NgxEditorJSInstanceService.html":{},"injectables/NgxEditorJSService.html":{}}}],["back",{"_index":1269,"title":{},"body":{"directives/NgxEditorJSDirective.html":{},"injectables/NgxEditorJSService.html":{},"todo.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-readme/ngx-editorjs-changelog.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-plugins-readme/ngx-editorjs-plugins-changelog.html":{}}}],["background",{"_index":515,"title":{},"body":{"interfaces/Block.html":{},"interfaces/Header.html":{},"interfaces/HeaderBlock.html":{},"interfaces/Image.html":{},"interfaces/ImageBlock.html":{},"interfaces/List.html":{},"interfaces/ListBlock.html":{},"interfaces/Paragraph.html":{},"interfaces/ParagraphBlock.html":{}}}],["ban",{"_index":2030,"title":{},"body":{"contributing.html":{}}}],["bar",{"_index":973,"title":{},"body":{"components/NavBarComponent.html":{}}}],["bar'},{'name",{"_index":205,"title":{},"body":{"components/AppContainerComponent.html":{},"components/FormContainerComponent.html":{},"components/HomePageComponent.html":{},"components/NavBarComponent.html":{},"components/NgxEditorJSBaseComponent.html":{},"components/NgxEditorJSComponent.html":{},"components/NgxEditorJSDemoHomeComponent.html":{},"components/NgxEditorJSDemoInfoComponent.html":{},"components/PageContainerComponent.html":{},"components/SidebarComponent.html":{}}}],["bar.component",{"_index":282,"title":{},"body":{"modules/AppModule.html":{}}}],["bar.component.html",{"_index":975,"title":{},"body":{"components/NavBarComponent.html":{}}}],["bar.component.scss",{"_index":974,"title":{},"body":{"components/NavBarComponent.html":{}}}],["bar.component.ts",{"_index":969,"title":{},"body":{"components/NavBarComponent.html":{}}}],["bar.component.ts:18",{"_index":977,"title":{},"body":{"components/NavBarComponent.html":{}}}],["bar.component.ts:21",{"_index":976,"title":{},"body":{"components/NavBarComponent.html":{}}}],["bar.component.ts:27",{"_index":978,"title":{},"body":{"components/NavBarComponent.html":{}}}],["bar/nav",{"_index":281,"title":{},"body":{"modules/AppModule.html":{},"components/NavBarComponent.html":{}}}],["base",{"_index":301,"title":{},"body":{"modules/AppRoutingModule.html":{},"interfaces/Block.html":{},"interfaces/EditorJSMaterialForm.html":{},"modules/NgxEditorJSModule.html":{},"miscellaneous/functions.html":{},"index.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-readme.html":{}}}],["base/container.class",{"_index":626,"title":{},"body":{"interfaces/EditorJSMaterialForm.html":{},"components/NgxEditorJSComponent.html":{}}}],["based",{"_index":726,"title":{},"body":{"interfaces/EditorJSMaterialForm.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-readme/ngx-editorjs-changelog.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-plugins-readme/ngx-editorjs-plugins-changelog.html":{}}}],["baseplugin",{"_index":461,"title":{"interfaces/BasePlugin.html":{},"interfaces/BasePlugin-1.html":{}},"body":{"interfaces/BasePlugin.html":{},"interfaces/BasePlugin-1.html":{},"classes/MockEditorJS.html":{},"classes/MockPlugin.html":{},"injectables/NgxEditorJSPluginService.html":{},"injectables/PluginCode.html":{},"interfaces/PluginConfig.html":{},"interfaces/PluginConfig-1.html":{},"injectables/PluginHeader.html":{},"injectables/PluginImage.html":{},"injectables/PluginLink.html":{},"injectables/PluginList.html":{},"injectables/PluginMarker.html":{},"injectables/PluginParagraph.html":{},"injectables/PluginSimpleImage.html":{},"classes/TestClass.html":{},"interfaces/ToolSettingsMap.html":{},"interfaces/ToolSettingsMap-1.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-readme/ngx-editorjs-changelog.html":{}}}],["bash",{"_index":2266,"title":{},"body":{"additional-documentation/tinynodes-library-docs/ngx-editorjs-readme.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-plugins-readme.html":{}}}],["basic",{"_index":520,"title":{},"body":{"interfaces/Block.html":{},"interfaces/Header.html":{},"interfaces/HeaderBlock.html":{},"interfaces/Image.html":{},"interfaces/ImageBlock.html":{},"interfaces/List.html":{},"interfaces/ListBlock.html":{},"components/NgxEditorJSDemoHomeComponent.html":{},"interfaces/Paragraph.html":{},"interfaces/ParagraphBlock.html":{},"miscellaneous/typealiases.html":{}}}],["basis",{"_index":883,"title":{},"body":{"components/FormContainerComponent.html":{}}}],["before",{"_index":1020,"title":{},"body":{"components/NgxEditorJSBaseComponent.html":{},"components/NgxEditorJSComponent.html":{},"directives/NgxEditorJSDirective.html":{},"injectables/NgxEditorJSService.html":{},"contributing.html":{}}}],["behavior",{"_index":1970,"title":{},"body":{"contributing.html":{}}}],["behaviors",{"_index":2034,"title":{},"body":{"contributing.html":{}}}],["behaviorsubject",{"_index":102,"title":{},"body":{"components/AppContainerComponent.html":{},"interfaces/BlocksMap.html":{},"interfaces/ChangeMap.html":{},"interfaces/EditorJSChange.html":{},"interfaces/EditorMap.html":{},"components/FormContainerComponent.html":{},"components/NgxEditorJSDemoInfoComponent.html":{},"directives/NgxEditorJSDirective.html":{},"injectables/NgxEditorJSInstanceService.html":{},"components/PageContainerComponent.html":{},"interfaces/ReadyMap.html":{},"interfaces/SavedMap.html":{}}}],["behaviorsubject(0",{"_index":815,"title":{},"body":{"components/FormContainerComponent.html":{}}}],["behaviorsubject(editor",{"_index":1449,"title":{},"body":{"injectables/NgxEditorJSInstanceService.html":{}}}],["behaviorsubject(false",{"_index":116,"title":{},"body":{"components/AppContainerComponent.html":{},"directives/NgxEditorJSDirective.html":{},"injectables/NgxEditorJSInstanceService.html":{}}}],["behaviorsubject(true",{"_index":813,"title":{},"body":{"components/FormContainerComponent.html":{},"components/NgxEditorJSDemoInfoComponent.html":{}}}],["behaviorsubject(undefined",{"_index":814,"title":{},"body":{"components/FormContainerComponent.html":{},"injectables/NgxEditorJSInstanceService.html":{},"components/PageContainerComponent.html":{}}}],["behaviorsubject(value",{"_index":1445,"title":{},"body":{"injectables/NgxEditorJSInstanceService.html":{}}}],["being",{"_index":1975,"title":{},"body":{"contributing.html":{}}}],["below",{"_index":841,"title":{},"body":{"components/FormContainerComponent.html":{},"components/HomePageComponent.html":{},"components/NgxEditorJSDemoInfoComponent.html":{},"components/PageContainerComponent.html":{},"index.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-readme.html":{}}}],["best",{"_index":1985,"title":{},"body":{"contributing.html":{}}}],["beta.24",{"_index":2102,"title":{},"body":{"dependencies.html":{}}}],["better",{"_index":1860,"title":{},"body":{"changelog.html":{}}}],["big",{"_index":2285,"title":{},"body":{"additional-documentation/tinynodes-library-docs/ngx-editorjs-readme/ngx-editorjs-changelog.html":{}}}],["binding",{"_index":684,"title":{},"body":{"interfaces/EditorJSMaterialForm.html":{}}}],["block",{"_index":176,"title":{"interfaces/Block.html":{}},"body":{"components/AppContainerComponent.html":{},"interfaces/ApplicationState.html":{},"interfaces/ApplicationState-1.html":{},"interfaces/Block.html":{},"interfaces/BlocksMap.html":{},"interfaces/ChangeMap.html":{},"interfaces/DemoData.html":{},"interfaces/DemoData-1.html":{},"interfaces/EditorJSChange.html":{},"interfaces/EditorJSInstanceConfig.html":{},"interfaces/EditorMap.html":{},"components/FormContainerComponent.html":{},"interfaces/Header.html":{},"interfaces/HeaderBlock.html":{},"interfaces/Image.html":{},"interfaces/ImageBlock.html":{},"interfaces/InjectorApiCallOptions.html":{},"interfaces/InjectorApiCallResponse.html":{},"interfaces/InjectorMethodOption.html":{},"interfaces/List.html":{},"interfaces/ListBlock.html":{},"components/NavBarComponent.html":{},"components/NgxEditorJSBaseComponent.html":{},"components/NgxEditorJSComponent.html":{},"interfaces/NgxEditorJSConfig.html":{},"interfaces/NgxEditorJSDemo.html":{},"interfaces/NgxEditorJSDemo-1.html":{},"interfaces/NgxEditorJSDemoData.html":{},"interfaces/NgxEditorJSDemoData-1.html":{},"directives/NgxEditorJSDirective.html":{},"injectables/NgxEditorJSEffects.html":{},"interfaces/NgxEditorJSModuleConfig.html":{},"modules/NgxEditorjsPluginsModule.html":{},"interfaces/Page.html":{},"interfaces/PageBlock.html":{},"components/PageContainerComponent.html":{},"injectables/PagesService.html":{},"interfaces/Paragraph.html":{},"interfaces/ParagraphBlock.html":{},"injectables/PluginCode.html":{},"modules/PluginCodeModule.html":{},"injectables/PluginHeader.html":{},"modules/PluginHeaderModule.html":{},"injectables/PluginImage.html":{},"modules/PluginImageModule.html":{},"injectables/PluginLink.html":{},"modules/PluginLinkModule.html":{},"injectables/PluginList.html":{},"modules/PluginListModule.html":{},"injectables/PluginParagraph.html":{},"modules/PluginParagraphModule.html":{},"injectables/PluginSimpleImage.html":{},"modules/PluginSimpleImageModule.html":{},"interfaces/ReadyMap.html":{},"interfaces/SavedMap.html":{},"interfaces/Tag.html":{},"interfaces/TinynodeDemos.html":{},"interfaces/TinynodeDemos-1.html":{},"changelog.html":{},"index.html":{},"miscellaneous/typealiases.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-readme.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-plugins-readme.html":{}}}],["block.id",{"_index":1737,"title":{},"body":{"injectables/PagesService.html":{}}}],["blockplaceholder",{"_index":1001,"title":{},"body":{"components/NgxEditorJSBaseComponent.html":{},"components/NgxEditorJSComponent.html":{},"interfaces/NgxEditorJSConfig.html":{},"directives/NgxEditorJSDirective.html":{},"interfaces/NgxEditorJSModuleConfig.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-readme.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-readme/ngx-editorjs-changelog.html":{}}}],["blocks",{"_index":449,"title":{},"body":{"interfaces/ApplicationState.html":{},"interfaces/ApplicationState-1.html":{},"interfaces/BlocksMap.html":{},"interfaces/ChangeMap.html":{},"interfaces/DemoData.html":{},"interfaces/DemoData-1.html":{},"interfaces/EditorJSChange.html":{},"interfaces/EditorJSInstanceConfig.html":{},"interfaces/EditorMap.html":{},"components/FormContainerComponent.html":{},"interfaces/InjectorApiCallOptions.html":{},"interfaces/InjectorApiCallResponse.html":{},"interfaces/InjectorMethodOption.html":{},"classes/MockEditorJS.html":{},"classes/MockPlugin.html":{},"components/NgxEditorJSBaseComponent.html":{},"components/NgxEditorJSComponent.html":{},"interfaces/NgxEditorJSDemo.html":{},"interfaces/NgxEditorJSDemo-1.html":{},"interfaces/NgxEditorJSDemoData.html":{},"interfaces/NgxEditorJSDemoData-1.html":{},"directives/NgxEditorJSDirective.html":{},"injectables/NgxEditorJSEffects.html":{},"injectables/NgxEditorJSInstanceService.html":{},"injectables/NgxEditorJSService.html":{},"interfaces/Page.html":{},"interfaces/PageBlock.html":{},"components/PageContainerComponent.html":{},"injectables/PagesService.html":{},"interfaces/ReadyMap.html":{},"interfaces/SavedMap.html":{},"interfaces/Tag.html":{},"classes/TestClass.html":{},"interfaces/TinynodeDemos.html":{},"interfaces/TinynodeDemos-1.html":{},"todo.html":{},"miscellaneous/variables.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-readme.html":{}}}],["blocks.subscribe",{"_index":1316,"title":{},"body":{"injectables/NgxEditorJSEffects.html":{}}}],["blocksmap",{"_index":522,"title":{"interfaces/BlocksMap.html":{}},"body":{"interfaces/BlocksMap.html":{},"interfaces/ChangeMap.html":{},"interfaces/EditorJSChange.html":{},"interfaces/EditorMap.html":{},"interfaces/ReadyMap.html":{},"interfaces/SavedMap.html":{}}}],["blocktypes",{"_index":521,"title":{},"body":{"interfaces/Block.html":{},"interfaces/Header.html":{},"interfaces/HeaderBlock.html":{},"interfaces/Image.html":{},"interfaces/ImageBlock.html":{},"interfaces/List.html":{},"interfaces/ListBlock.html":{},"interfaces/Paragraph.html":{},"interfaces/ParagraphBlock.html":{},"miscellaneous/typealiases.html":{}}}],["blur",{"_index":1016,"title":{},"body":{"components/NgxEditorJSBaseComponent.html":{},"components/NgxEditorJSComponent.html":{},"directives/NgxEditorJSDirective.html":{}}}],["body",{"_index":1185,"title":{},"body":{"components/NgxEditorJSDemoInfoComponent.html":{},"contributing.html":{}}}],["boolean",{"_index":72,"title":{},"body":{"components/AppContainerComponent.html":{},"injectables/AppService.html":{},"interfaces/ApplicationData.html":{},"interfaces/ApplicationData-1.html":{},"interfaces/ApplicationState.html":{},"interfaces/ApplicationState-1.html":{},"interfaces/Block.html":{},"interfaces/BlocksMap.html":{},"interfaces/ChangeMap.html":{},"interfaces/DemoData.html":{},"interfaces/DemoData-1.html":{},"interfaces/EditorJSChange.html":{},"interfaces/EditorJSMaterialForm.html":{},"interfaces/EditorMap.html":{},"interfaces/Header.html":{},"interfaces/HeaderBlock.html":{},"interfaces/Image.html":{},"interfaces/ImageBlock.html":{},"interfaces/List.html":{},"interfaces/ListBlock.html":{},"interfaces/MenuGroup.html":{},"interfaces/MenuGroup-1.html":{},"interfaces/MenuItem.html":{},"interfaces/MenuItem-1.html":{},"components/NgxEditorJSBaseComponent.html":{},"components/NgxEditorJSComponent.html":{},"interfaces/NgxEditorJSConfig.html":{},"interfaces/NgxEditorJSDemo.html":{},"interfaces/NgxEditorJSDemo-1.html":{},"interfaces/NgxEditorJSDemoData.html":{},"interfaces/NgxEditorJSDemoData-1.html":{},"components/NgxEditorJSDemoInfoComponent.html":{},"directives/NgxEditorJSDirective.html":{},"interfaces/NgxEditorJSModuleConfig.html":{},"interfaces/Paragraph.html":{},"interfaces/ParagraphBlock.html":{},"interfaces/ReadyMap.html":{},"interfaces/SavedMap.html":{},"interfaces/TinynodeDemos.html":{},"interfaces/TinynodeDemos-1.html":{}}}],["bootstrap",{"_index":234,"title":{},"body":{"modules/AppModule.html":{},"modules/ApplicationDataModule.html":{},"modules/NgxEditorJSModule.html":{},"modules/NgxEditorjsDemoModule.html":{},"modules/NgxEditorjsNgrxModule.html":{},"modules/NgxEditorjsPluginsModule.html":{},"modules/NgxTinynodesCoreModule.html":{},"modules/PageStoreModule.html":{},"modules/PluginCodeModule.html":{},"modules/PluginHeaderModule.html":{},"modules/PluginImageModule.html":{},"modules/PluginLinkModule.html":{},"modules/PluginListModule.html":{},"modules/PluginMarkerModule.html":{},"modules/PluginParagraphModule.html":{},"modules/PluginSimpleImageModule.html":{},"overview.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-readme.html":{}}}],["border",{"_index":512,"title":{},"body":{"interfaces/Block.html":{},"interfaces/Header.html":{},"interfaces/HeaderBlock.html":{},"interfaces/Image.html":{},"interfaces/ImageBlock.html":{},"interfaces/List.html":{},"interfaces/ListBlock.html":{},"components/NgxEditorJSComponent.html":{},"interfaces/Paragraph.html":{},"interfaces/ParagraphBlock.html":{}}}],["both",{"_index":2041,"title":{},"body":{"contributing.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-readme/ngx-editorjs-changelog.html":{}}}],["bottom",{"_index":1034,"title":{},"body":{"components/NgxEditorJSBaseComponent.html":{},"components/NgxEditorJSComponent.html":{},"interfaces/NgxEditorJSConfig.html":{},"directives/NgxEditorJSDirective.html":{},"interfaces/NgxEditorJSModuleConfig.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-readme.html":{}}}],["box",{"_index":2140,"title":{},"body":{"index.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-readme.html":{}}}],["break",{"_index":1897,"title":{},"body":{"changelog.html":{}}}],["breaking",{"_index":1857,"title":{},"body":{"changelog.html":{}}}],["browse",{"_index":2216,"title":{},"body":{"modules.html":{}}}],["browser",{"_index":264,"title":{},"body":{"modules/AppModule.html":{},"dependencies.html":{},"modules.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-readme.html":{}}}],["browser/animations",{"_index":266,"title":{},"body":{"modules/AppModule.html":{}}}],["browseranimationsmodule",{"_index":265,"title":{},"body":{"modules/AppModule.html":{}}}],["browsermodule",{"_index":262,"title":{},"body":{"modules/AppModule.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-readme.html":{}}}],["bug",{"_index":1888,"title":{},"body":{"changelog.html":{},"additional-documentation/tinynodes-library-docs.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-readme/ngx-editorjs-changelog.html":{}}}],["build",{"_index":1886,"title":{},"body":{"changelog.html":{},"contributing.html":{}}}],["builder",{"_index":767,"title":{},"body":{"components/FormContainerComponent.html":{}}}],["builds",{"_index":251,"title":{},"body":{"modules/AppModule.html":{}}}],["bump",{"_index":1855,"title":{},"body":{"changelog.html":{}}}],["calc(300px",{"_index":1211,"title":{},"body":{"components/NgxEditorJSDemoInfoComponent.html":{}}}],["call",{"_index":583,"title":{},"body":{"interfaces/EditorJSInstanceConfig.html":{},"components/FormContainerComponent.html":{},"interfaces/InjectorApiCallOptions.html":{},"interfaces/InjectorApiCallResponse.html":{},"interfaces/InjectorMethodOption.html":{},"components/NgxEditorJSBaseComponent.html":{},"components/NgxEditorJSComponent.html":{},"injectables/NgxEditorJSInstanceService.html":{},"components/PageContainerComponent.html":{}}}],["called",{"_index":709,"title":{},"body":{"interfaces/EditorJSMaterialForm.html":{},"components/NgxEditorJSBaseComponent.html":{},"components/NgxEditorJSComponent.html":{},"directives/NgxEditorJSDirective.html":{},"injectables/NgxEditorJSInstanceService.html":{}}}],["calling",{"_index":599,"title":{},"body":{"interfaces/EditorJSInstanceConfig.html":{},"interfaces/InjectorApiCallOptions.html":{},"interfaces/InjectorApiCallResponse.html":{},"interfaces/InjectorMethodOption.html":{},"injectables/NgxEditorJSService.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-readme/ngx-editorjs-changelog.html":{}}}],["calls",{"_index":1014,"title":{},"body":{"components/NgxEditorJSBaseComponent.html":{},"components/NgxEditorJSComponent.html":{},"directives/NgxEditorJSDirective.html":{},"injectables/NgxEditorJSInstanceService.html":{},"injectables/NgxEditorJSService.html":{}}}],["caption",{"_index":511,"title":{},"body":{"interfaces/Block.html":{},"interfaces/Header.html":{},"interfaces/HeaderBlock.html":{},"interfaces/Image.html":{},"interfaces/ImageBlock.html":{},"interfaces/List.html":{},"interfaces/ListBlock.html":{},"interfaces/Paragraph.html":{},"interfaces/ParagraphBlock.html":{}}}],["card",{"_index":886,"title":{},"body":{"components/FormContainerComponent.html":{},"components/PageContainerComponent.html":{}}}],["cd",{"_index":707,"title":{},"body":{"interfaces/EditorJSMaterialForm.html":{},"components/FormContainerComponent.html":{},"components/NgxEditorJSBaseComponent.html":{},"components/NgxEditorJSComponent.html":{},"directives/NgxEditorJSDirective.html":{},"components/PageContainerComponent.html":{}}}],["center",{"_index":182,"title":{},"body":{"components/AppContainerComponent.html":{},"components/NavBarComponent.html":{}}}],["change",{"_index":535,"title":{},"body":{"interfaces/BlocksMap.html":{},"interfaces/ChangeMap.html":{},"interfaces/CreateEditorJSOptions.html":{},"interfaces/EditorJSChange.html":{},"interfaces/EditorJSInstanceConfig.html":{},"interfaces/EditorJSMaterialForm.html":{},"interfaces/EditorMap.html":{},"components/FormContainerComponent.html":{},"interfaces/InjectorApiCallOptions.html":{},"interfaces/InjectorApiCallResponse.html":{},"interfaces/InjectorMethodOption.html":{},"components/NgxEditorJSBaseComponent.html":{},"components/NgxEditorJSComponent.html":{},"directives/NgxEditorJSDirective.html":{},"injectables/NgxEditorJSInstanceService.html":{},"injectables/NgxEditorJSService.html":{},"components/PageContainerComponent.html":{},"interfaces/ReadyMap.html":{},"interfaces/SavedMap.html":{},"changelog.html":{},"contributing.html":{}}}],["change.time",{"_index":1681,"title":{},"body":{"components/PageContainerComponent.html":{}}}],["changed",{"_index":542,"title":{"classes/Changed.html":{}},"body":{"classes/Changed.html":{},"components/NgxEditorJSBaseComponent.html":{},"components/NgxEditorJSComponent.html":{},"directives/NgxEditorJSDirective.html":{},"classes/NotReady.html":{},"components/PageContainerComponent.html":{},"classes/Ready.html":{},"classes/SaveEnd.html":{},"classes/SaveStart.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/typealiases.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-readme/ngx-editorjs-changelog.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-plugins-readme/ngx-editorjs-plugins-changelog.html":{}}}],["changedetection",{"_index":747,"title":{},"body":{"components/FormContainerComponent.html":{},"components/NgxEditorJSBaseComponent.html":{},"components/NgxEditorJSComponent.html":{},"components/PageContainerComponent.html":{}}}],["changedetectionstrategy",{"_index":799,"title":{},"body":{"components/FormContainerComponent.html":{},"components/NgxEditorJSBaseComponent.html":{},"components/NgxEditorJSComponent.html":{},"components/PageContainerComponent.html":{}}}],["changedetectionstrategy.onpush",{"_index":748,"title":{},"body":{"components/FormContainerComponent.html":{},"components/NgxEditorJSBaseComponent.html":{},"components/NgxEditorJSComponent.html":{},"components/PageContainerComponent.html":{}}}],["changedetectorref",{"_index":614,"title":{},"body":{"interfaces/EditorJSMaterialForm.html":{},"components/FormContainerComponent.html":{},"components/NgxEditorJSBaseComponent.html":{},"components/NgxEditorJSComponent.html":{},"directives/NgxEditorJSDirective.html":{},"components/PageContainerComponent.html":{}}}],["changelog",{"_index":1845,"title":{"changelog.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-readme/ngx-editorjs-changelog.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-plugins-readme/ngx-editorjs-plugins-changelog.html":{}},"body":{"changelog.html":{},"index.html":{},"additional-documentation/tinynodes-library-docs.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-readme.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-readme/ngx-editorjs-changelog.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-plugins-readme/ngx-editorjs-plugins-changelog.html":{}}}],["changelog.md",{"_index":2309,"title":{},"body":{"additional-documentation/tinynodes-library-docs/ngx-editorjs-readme/ngx-editorjs-changelog.html":{}}}],["changelogs",{"_index":1847,"title":{},"body":{"changelog.html":{}}}],["changemap",{"_index":540,"title":{"interfaces/ChangeMap.html":{}},"body":{"interfaces/BlocksMap.html":{},"interfaces/ChangeMap.html":{},"interfaces/EditorJSChange.html":{},"interfaces/EditorMap.html":{},"injectables/NgxEditorJSInstanceService.html":{},"interfaces/ReadyMap.html":{},"interfaces/SavedMap.html":{}}}],["changes",{"_index":861,"title":{},"body":{"components/FormContainerComponent.html":{},"components/NgxEditorJSBaseComponent.html":{},"directives/NgxEditorJSDirective.html":{},"injectables/NgxEditorJSInstanceService.html":{},"changelog.html":{},"contributing.html":{},"todo.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-readme.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-readme/ngx-editorjs-changelog.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-plugins-readme/ngx-editorjs-plugins-changelog.html":{}}}],["changes.blocks",{"_index":1279,"title":{},"body":{"directives/NgxEditorJSDirective.html":{}}}],["changes.blocks.currentvalue",{"_index":1282,"title":{},"body":{"directives/NgxEditorJSDirective.html":{}}}],["changes.blocks.firstchange",{"_index":1280,"title":{},"body":{"directives/NgxEditorJSDirective.html":{}}}],["changeskeys",{"_index":1283,"title":{},"body":{"directives/NgxEditorJSDirective.html":{}}}],["changeskeys.includes(key",{"_index":1287,"title":{},"body":{"directives/NgxEditorJSDirective.html":{}}}],["charge",{"_index":2163,"title":{},"body":{"license.html":{}}}],["check",{"_index":879,"title":{},"body":{"components/FormContainerComponent.html":{},"components/PageContainerComponent.html":{}}}],["checkchildren",{"_index":1047,"title":{},"body":{"components/NgxEditorJSBaseComponent.html":{},"components/NgxEditorJSComponent.html":{}}}],["checkchildren).pipe",{"_index":1090,"title":{},"body":{"components/NgxEditorJSBaseComponent.html":{}}}],["checked",{"_index":1051,"title":{},"body":{"components/NgxEditorJSBaseComponent.html":{},"components/NgxEditorJSComponent.html":{}}}],["child.label",{"_index":1837,"title":{},"body":{"components/SidebarComponent.html":{}}}],["children",{"_index":411,"title":{},"body":{"interfaces/ApplicationData.html":{},"interfaces/ApplicationData-1.html":{},"interfaces/MenuGroup.html":{},"interfaces/MenuGroup-1.html":{},"interfaces/MenuItem.html":{},"interfaces/MenuItem-1.html":{},"components/NgxEditorJSBaseComponent.html":{},"components/NgxEditorJSComponent.html":{}}}],["ci",{"_index":2224,"title":{},"body":{"todo.html":{}}}],["circumstances",{"_index":2071,"title":{},"body":{"contributing.html":{}}}],["claim",{"_index":2206,"title":{},"body":{"license.html":{}}}],["clarified",{"_index":2057,"title":{},"body":{"contributing.html":{}}}],["clarifying",{"_index":2016,"title":{},"body":{"contributing.html":{}}}],["clash",{"_index":2287,"title":{},"body":{"additional-documentation/tinynodes-library-docs/ngx-editorjs-readme/ngx-editorjs-changelog.html":{}}}],["class",{"_index":110,"title":{"classes/Changed.html":{},"classes/MockEditorJS.html":{},"classes/MockPlugin.html":{},"classes/NotReady.html":{},"classes/Ready.html":{},"classes/SaveEnd.html":{},"classes/SaveStart.html":{},"classes/TestClass.html":{}},"body":{"components/AppContainerComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"injectables/AppService.html":{},"injectables/AppService-1.html":{},"modules/ApplicationDataModule.html":{},"injectables/ApplicationQuery.html":{},"injectables/ApplicationQuery-1.html":{},"injectables/ApplicationStore.html":{},"injectables/ApplicationStore-1.html":{},"interfaces/BasePlugin.html":{},"interfaces/BasePlugin-1.html":{},"classes/Changed.html":{},"interfaces/EditorJSInstanceConfig.html":{},"interfaces/EditorJSMaterialForm.html":{},"components/FormContainerComponent.html":{},"components/HomePageComponent.html":{},"interfaces/InjectorApiCallOptions.html":{},"interfaces/InjectorApiCallResponse.html":{},"interfaces/InjectorMethodOption.html":{},"modules/MaterialModule.html":{},"classes/MockEditorJS.html":{},"injectables/MockNgZone.html":{},"classes/MockPlugin.html":{},"components/NavBarComponent.html":{},"components/NgxEditorJSBaseComponent.html":{},"components/NgxEditorJSComponent.html":{},"components/NgxEditorJSDemoHomeComponent.html":{},"components/NgxEditorJSDemoInfoComponent.html":{},"directives/NgxEditorJSDirective.html":{},"injectables/NgxEditorJSEffects.html":{},"injectables/NgxEditorJSInstanceService.html":{},"modules/NgxEditorJSModule.html":{},"injectables/NgxEditorJSPluginService.html":{},"injectables/NgxEditorJSService.html":{},"modules/NgxEditorjsDemoModule.html":{},"modules/NgxEditorjsNgrxModule.html":{},"modules/NgxEditorjsPluginsModule.html":{},"modules/NgxHideableHeaderDemoModule.html":{},"modules/NgxTinynodesCoreMaterialModule.html":{},"modules/NgxTinynodesCoreModule.html":{},"classes/NotReady.html":{},"components/PageContainerComponent.html":{},"modules/PageStoreModule.html":{},"injectables/PagesQuery.html":{},"injectables/PagesService.html":{},"interfaces/PagesState.html":{},"injectables/PagesStore.html":{},"injectables/PluginCode.html":{},"modules/PluginCodeModule.html":{},"interfaces/PluginConfig.html":{},"interfaces/PluginConfig-1.html":{},"injectables/PluginHeader.html":{},"modules/PluginHeaderModule.html":{},"injectables/PluginImage.html":{},"modules/PluginImageModule.html":{},"injectables/PluginLink.html":{},"modules/PluginLinkModule.html":{},"injectables/PluginList.html":{},"modules/PluginListModule.html":{},"injectables/PluginMarker.html":{},"modules/PluginMarkerModule.html":{},"injectables/PluginParagraph.html":{},"modules/PluginParagraphModule.html":{},"injectables/PluginSimpleImage.html":{},"modules/PluginSimpleImageModule.html":{},"classes/Ready.html":{},"classes/SaveEnd.html":{},"classes/SaveStart.html":{},"components/SidebarComponent.html":{},"classes/TestClass.html":{},"interfaces/ToolSettingsMap.html":{},"interfaces/ToolSettingsMap-1.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-readme.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-readme/ngx-editorjs-changelog.html":{}}}],["classes",{"_index":543,"title":{},"body":{"classes/Changed.html":{},"classes/MockEditorJS.html":{},"classes/MockPlugin.html":{},"classes/NotReady.html":{},"classes/Ready.html":{},"classes/SaveEnd.html":{},"classes/SaveStart.html":{},"classes/TestClass.html":{},"overview.html":{}}}],["cleaning",{"_index":1450,"title":{},"body":{"injectables/NgxEditorJSInstanceService.html":{}}}],["cleans",{"_index":1360,"title":{},"body":{"injectables/NgxEditorJSInstanceService.html":{}}}],["cleanupsubjects(options",{"_index":1452,"title":{},"body":{"injectables/NgxEditorJSInstanceService.html":{}}}],["clear",{"_index":752,"title":{},"body":{"components/FormContainerComponent.html":{},"classes/MockEditorJS.html":{},"classes/MockPlugin.html":{},"injectables/NgxEditorJSInstanceService.html":{},"injectables/NgxEditorJSService.html":{},"components/PageContainerComponent.html":{},"classes/TestClass.html":{}}}],["clear(options",{"_index":1349,"title":{},"body":{"injectables/NgxEditorJSInstanceService.html":{},"injectables/NgxEditorJSService.html":{}}}],["clears",{"_index":1537,"title":{},"body":{"injectables/NgxEditorJSService.html":{}}}],["click",{"_index":697,"title":{},"body":{"interfaces/EditorJSMaterialForm.html":{},"components/FormContainerComponent.html":{},"components/NgxEditorJSDemoInfoComponent.html":{},"directives/NgxEditorJSDirective.html":{},"components/PageContainerComponent.html":{}}}],["click)=\"disableautosave()\">disable",{"_index":847,"title":{},"body":{"components/FormContainerComponent.html":{}}}],["client",{"_index":336,"title":{},"body":{"injectables/AppService.html":{},"injectables/AppService-1.html":{}}}],["close",{"_index":1204,"title":{},"body":{"components/NgxEditorJSDemoInfoComponent.html":{}}}],["cluster_applicationdatamodule",{"_index":420,"title":{},"body":{"modules/ApplicationDataModule.html":{},"overview.html":{}}}],["cluster_applicationdatamodule_providers",{"_index":421,"title":{},"body":{"modules/ApplicationDataModule.html":{},"overview.html":{}}}],["cluster_appmodule",{"_index":237,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_appmodule_bootstrap",{"_index":240,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_appmodule_declarations",{"_index":238,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_appmodule_imports",{"_index":239,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_ngxeditorjsdemomodule",{"_index":1568,"title":{},"body":{"modules/NgxEditorjsDemoModule.html":{},"overview.html":{}}}],["cluster_ngxeditorjsdemomodule_declarations",{"_index":1569,"title":{},"body":{"modules/NgxEditorjsDemoModule.html":{},"overview.html":{}}}],["cluster_ngxeditorjsdemomodule_exports",{"_index":1571,"title":{},"body":{"modules/NgxEditorjsDemoModule.html":{},"overview.html":{}}}],["cluster_ngxeditorjsdemomodule_imports",{"_index":1570,"title":{},"body":{"modules/NgxEditorjsDemoModule.html":{},"overview.html":{}}}],["cluster_ngxeditorjsmodule",{"_index":1459,"title":{},"body":{"modules/NgxEditorJSModule.html":{},"overview.html":{}}}],["cluster_ngxeditorjsmodule_declarations",{"_index":1460,"title":{},"body":{"modules/NgxEditorJSModule.html":{},"overview.html":{}}}],["cluster_ngxeditorjsmodule_exports",{"_index":1461,"title":{},"body":{"modules/NgxEditorJSModule.html":{},"overview.html":{}}}],["cluster_ngxeditorjsmodule_providers",{"_index":1462,"title":{},"body":{"modules/NgxEditorJSModule.html":{},"overview.html":{}}}],["cluster_ngxeditorjsngrxmodule",{"_index":1603,"title":{},"body":{"modules/NgxEditorjsNgrxModule.html":{},"overview.html":{}}}],["cluster_ngxeditorjsngrxmodule_imports",{"_index":1604,"title":{},"body":{"modules/NgxEditorjsNgrxModule.html":{}}}],["cluster_ngxeditorjspluginsmodule",{"_index":1616,"title":{},"body":{"modules/NgxEditorjsPluginsModule.html":{},"overview.html":{}}}],["cluster_ngxeditorjspluginsmodule_exports",{"_index":1618,"title":{},"body":{"modules/NgxEditorjsPluginsModule.html":{},"overview.html":{}}}],["cluster_ngxeditorjspluginsmodule_imports",{"_index":1617,"title":{},"body":{"modules/NgxEditorjsPluginsModule.html":{},"overview.html":{}}}],["cluster_ngxtinynodescoremodule",{"_index":1644,"title":{},"body":{"modules/NgxTinynodesCoreModule.html":{},"overview.html":{}}}],["cluster_ngxtinynodescoremodule_declarations",{"_index":1645,"title":{},"body":{"modules/NgxTinynodesCoreModule.html":{},"overview.html":{}}}],["cluster_ngxtinynodescoremodule_exports",{"_index":1647,"title":{},"body":{"modules/NgxTinynodesCoreModule.html":{},"overview.html":{}}}],["cluster_ngxtinynodescoremodule_imports",{"_index":1646,"title":{},"body":{"modules/NgxTinynodesCoreModule.html":{},"overview.html":{}}}],["cluster_pagestoremodule",{"_index":1685,"title":{},"body":{"modules/PageStoreModule.html":{},"overview.html":{}}}],["cluster_pagestoremodule_providers",{"_index":1686,"title":{},"body":{"modules/PageStoreModule.html":{},"overview.html":{}}}],["cluster_plugincodemodule",{"_index":1746,"title":{},"body":{"modules/PluginCodeModule.html":{},"overview.html":{}}}],["cluster_plugincodemodule_providers",{"_index":1747,"title":{},"body":{"modules/PluginCodeModule.html":{},"overview.html":{}}}],["cluster_pluginheadermodule",{"_index":1760,"title":{},"body":{"modules/PluginHeaderModule.html":{},"overview.html":{}}}],["cluster_pluginheadermodule_providers",{"_index":1761,"title":{},"body":{"modules/PluginHeaderModule.html":{},"overview.html":{}}}],["cluster_pluginimagemodule",{"_index":1769,"title":{},"body":{"modules/PluginImageModule.html":{},"overview.html":{}}}],["cluster_pluginimagemodule_providers",{"_index":1770,"title":{},"body":{"modules/PluginImageModule.html":{},"overview.html":{}}}],["cluster_pluginlinkmodule",{"_index":1778,"title":{},"body":{"modules/PluginLinkModule.html":{},"overview.html":{}}}],["cluster_pluginlinkmodule_providers",{"_index":1779,"title":{},"body":{"modules/PluginLinkModule.html":{},"overview.html":{}}}],["cluster_pluginlistmodule",{"_index":1787,"title":{},"body":{"modules/PluginListModule.html":{},"overview.html":{}}}],["cluster_pluginlistmodule_providers",{"_index":1788,"title":{},"body":{"modules/PluginListModule.html":{},"overview.html":{}}}],["cluster_pluginmarkermodule",{"_index":1799,"title":{},"body":{"modules/PluginMarkerModule.html":{},"overview.html":{}}}],["cluster_pluginmarkermodule_providers",{"_index":1800,"title":{},"body":{"modules/PluginMarkerModule.html":{},"overview.html":{}}}],["cluster_pluginparagraphmodule",{"_index":1808,"title":{},"body":{"modules/PluginParagraphModule.html":{},"overview.html":{}}}],["cluster_pluginparagraphmodule_providers",{"_index":1809,"title":{},"body":{"modules/PluginParagraphModule.html":{},"overview.html":{}}}],["cluster_pluginsimpleimagemodule",{"_index":1819,"title":{},"body":{"modules/PluginSimpleImageModule.html":{},"overview.html":{}}}],["cluster_pluginsimpleimagemodule_providers",{"_index":1820,"title":{},"body":{"modules/PluginSimpleImageModule.html":{},"overview.html":{}}}],["cmd+shift+m",{"_index":1798,"title":{},"body":{"injectables/PluginMarker.html":{}}}],["code",{"_index":839,"title":{},"body":{"components/FormContainerComponent.html":{},"components/HomePageComponent.html":{},"components/NgxEditorJSDemoHomeComponent.html":{},"injectables/PluginCode.html":{},"contributing.html":{}}}],["code.plugin",{"_index":1751,"title":{},"body":{"modules/PluginCodeModule.html":{}}}],["coercebooleanproperty",{"_index":612,"title":{},"body":{"interfaces/EditorJSMaterialForm.html":{}}}],["coercebooleanproperty(disabled",{"_index":676,"title":{},"body":{"interfaces/EditorJSMaterialForm.html":{}}}],["coercebooleanproperty(focused",{"_index":663,"title":{},"body":{"interfaces/EditorJSMaterialForm.html":{}}}],["coercebooleanproperty(required",{"_index":670,"title":{},"body":{"interfaces/EditorJSMaterialForm.html":{}}}],["collection",{"_index":900,"title":{},"body":{"components/HomePageComponent.html":{},"components/NgxEditorJSDemoHomeComponent.html":{},"modules/NgxEditorJSModule.html":{},"index.html":{}}}],["color",{"_index":159,"title":{},"body":{"components/AppContainerComponent.html":{},"components/NavBarComponent.html":{}}}],["column",{"_index":891,"title":{},"body":{"components/FormContainerComponent.html":{}}}],["comma",{"_index":857,"title":{},"body":{"components/FormContainerComponent.html":{}}}],["comments",{"_index":1999,"title":{},"body":{"contributing.html":{}}}],["commits",{"_index":2025,"title":{},"body":{"contributing.html":{}}}],["common",{"_index":1892,"title":{},"body":{"changelog.html":{}}}],["commonmodule",{"_index":1472,"title":{},"body":{"modules/NgxEditorJSModule.html":{},"modules/NgxEditorjsDemoModule.html":{},"modules/NgxEditorjsNgrxModule.html":{},"modules/NgxEditorjsPluginsModule.html":{},"modules/NgxHideableHeaderDemoModule.html":{},"modules/NgxTinynodesCoreMaterialModule.html":{}}}],["community",{"_index":1949,"title":{},"body":{"contributing.html":{}}}],["compatible",{"_index":633,"title":{},"body":{"interfaces/EditorJSMaterialForm.html":{},"index.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-readme.html":{}}}],["complaints",{"_index":2066,"title":{},"body":{"contributing.html":{}}}],["complete",{"_index":1072,"title":{},"body":{"components/NgxEditorJSBaseComponent.html":{},"components/NgxEditorJSComponent.html":{}}}],["completes",{"_index":1543,"title":{},"body":{"injectables/NgxEditorJSService.html":{}}}],["completly",{"_index":1875,"title":{},"body":{"changelog.html":{}}}],["compodoc",{"_index":2260,"title":{},"body":{"additional-documentation/tinynodes-library-docs.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-readme/ngx-editorjs-changelog.html":{}}}],["component",{"_index":0,"title":{"components/AppContainerComponent.html":{},"components/FormContainerComponent.html":{},"components/HomePageComponent.html":{},"components/NavBarComponent.html":{},"components/NgxEditorJSBaseComponent.html":{},"components/NgxEditorJSComponent.html":{},"components/NgxEditorJSDemoHomeComponent.html":{},"components/NgxEditorJSDemoInfoComponent.html":{},"components/PageContainerComponent.html":{},"components/SidebarComponent.html":{}},"body":{"components/AppContainerComponent.html":{},"modules/AppRoutingModule.html":{},"interfaces/EditorJSMaterialForm.html":{},"components/FormContainerComponent.html":{},"components/HomePageComponent.html":{},"components/NavBarComponent.html":{},"components/NgxEditorJSBaseComponent.html":{},"components/NgxEditorJSComponent.html":{},"components/NgxEditorJSDemoHomeComponent.html":{},"components/NgxEditorJSDemoInfoComponent.html":{},"directives/NgxEditorJSDirective.html":{},"components/PageContainerComponent.html":{},"components/SidebarComponent.html":{},"changelog.html":{},"index.html":{},"todo.html":{},"miscellaneous/variables.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-readme.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-readme/ngx-editorjs-changelog.html":{}}}],["component'},{'name",{"_index":217,"title":{},"body":{"components/AppContainerComponent.html":{},"components/FormContainerComponent.html":{},"components/HomePageComponent.html":{},"components/NavBarComponent.html":{},"components/NgxEditorJSBaseComponent.html":{},"components/NgxEditorJSComponent.html":{},"components/NgxEditorJSDemoHomeComponent.html":{},"components/NgxEditorJSDemoInfoComponent.html":{},"components/PageContainerComponent.html":{},"components/SidebarComponent.html":{}}}],["component/sidebar.component",{"_index":284,"title":{},"body":{"modules/AppModule.html":{}}}],["component/sidebar.component.ts",{"_index":1831,"title":{},"body":{"components/SidebarComponent.html":{}}}],["component/sidebar.component.ts:11",{"_index":1835,"title":{},"body":{"components/SidebarComponent.html":{}}}],["component/sidebar.component.ts:14",{"_index":1834,"title":{},"body":{"components/SidebarComponent.html":{}}}],["component/tag.component",{"_index":1599,"title":{},"body":{"modules/NgxEditorjsDemoModule.html":{}}}],["component/tag.component.ts",{"_index":2258,"title":{},"body":{"miscellaneous/variables.html":{}}}],["component_template",{"_index":194,"title":{},"body":{"components/AppContainerComponent.html":{},"components/FormContainerComponent.html":{},"components/HomePageComponent.html":{},"components/NavBarComponent.html":{},"components/NgxEditorJSBaseComponent.html":{},"components/NgxEditorJSComponent.html":{},"components/NgxEditorJSDemoHomeComponent.html":{},"components/NgxEditorJSDemoInfoComponent.html":{},"components/PageContainerComponent.html":{},"components/SidebarComponent.html":{}}}],["components",{"_index":2,"title":{},"body":{"components/AppContainerComponent.html":{},"interfaces/EditorJSMaterialForm.html":{},"components/FormContainerComponent.html":{},"components/HomePageComponent.html":{},"components/NavBarComponent.html":{},"components/NgxEditorJSBaseComponent.html":{},"components/NgxEditorJSComponent.html":{},"components/NgxEditorJSDemoHomeComponent.html":{},"components/NgxEditorJSDemoInfoComponent.html":{},"directives/NgxEditorJSDirective.html":{},"components/PageContainerComponent.html":{},"components/SidebarComponent.html":{},"index.html":{},"overview.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-readme.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-readme/ngx-editorjs-changelog.html":{}}}],["components/demo",{"_index":1652,"title":{},"body":{"modules/NgxTinynodesCoreModule.html":{}}}],["components/nav",{"_index":280,"title":{},"body":{"modules/AppModule.html":{}}}],["components/sidebar",{"_index":283,"title":{},"body":{"modules/AppModule.html":{}}}],["components/tag",{"_index":1598,"title":{},"body":{"modules/NgxEditorjsDemoModule.html":{}}}],["conditions",{"_index":2185,"title":{},"body":{"license.html":{}}}],["conduct",{"_index":1916,"title":{},"body":{"contributing.html":{}}}],["confidentiality",{"_index":2074,"title":{},"body":{"contributing.html":{}}}],["config",{"_index":572,"title":{},"body":{"interfaces/CreateEditorJSOptions.html":{},"classes/MockEditorJS.html":{},"classes/MockPlugin.html":{},"interfaces/NgxEditorJSConfig.html":{},"directives/NgxEditorJSDirective.html":{},"injectables/NgxEditorJSInstanceService.html":{},"modules/NgxEditorJSModule.html":{},"interfaces/NgxEditorJSModuleConfig.html":{},"injectables/NgxEditorJSPluginService.html":{},"injectables/NgxEditorJSService.html":{},"modules/NgxEditorjsDemoModule.html":{},"classes/TestClass.html":{},"miscellaneous/functions.html":{},"todo.html":{},"miscellaneous/variables.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-readme.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-readme/ngx-editorjs-changelog.html":{}}}],["config.data",{"_index":1302,"title":{},"body":{"directives/NgxEditorJSDirective.html":{}}}],["config.editorconfig",{"_index":1385,"title":{},"body":{"injectables/NgxEditorJSInstanceService.html":{}}}],["config.onchange",{"_index":1387,"title":{},"body":{"injectables/NgxEditorJSInstanceService.html":{}}}],["config.onready",{"_index":1391,"title":{},"body":{"injectables/NgxEditorJSInstanceService.html":{}}}],["config.ts",{"_index":2128,"title":{},"body":{"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["config/editor",{"_index":1267,"title":{},"body":{"directives/NgxEditorJSDirective.html":{}}}],["config/module",{"_index":1479,"title":{},"body":{"modules/NgxEditorJSModule.html":{}}}],["configuration",{"_index":475,"title":{},"body":{"interfaces/BasePlugin.html":{},"interfaces/BasePlugin-1.html":{},"interfaces/CreateEditorJSOptions.html":{},"interfaces/EditorJSInstanceConfig.html":{},"components/FormContainerComponent.html":{},"interfaces/InjectorApiCallOptions.html":{},"interfaces/InjectorApiCallResponse.html":{},"interfaces/InjectorMethodOption.html":{},"components/NgxEditorJSBaseComponent.html":{},"components/NgxEditorJSComponent.html":{},"interfaces/NgxEditorJSConfig.html":{},"directives/NgxEditorJSDirective.html":{},"injectables/NgxEditorJSInstanceService.html":{},"modules/NgxEditorJSModule.html":{},"interfaces/NgxEditorJSModuleConfig.html":{},"interfaces/PluginConfig.html":{},"interfaces/PluginConfig-1.html":{},"interfaces/ToolSettingsMap.html":{},"interfaces/ToolSettingsMap-1.html":{},"miscellaneous/functions.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-readme.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-readme/ngx-editorjs-changelog.html":{}}}],["configurations",{"_index":1517,"title":{},"body":{"injectables/NgxEditorJSPluginService.html":{},"miscellaneous/functions.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-readme.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-readme/ngx-editorjs-changelog.html":{}}}],["configured",{"_index":2321,"title":{},"body":{"additional-documentation/tinynodes-library-docs/ngx-editorjs-readme/ngx-editorjs-changelog.html":{}}}],["configuring",{"_index":2275,"title":{},"body":{"additional-documentation/tinynodes-library-docs/ngx-editorjs-readme.html":{}}}],["connection",{"_index":2213,"title":{},"body":{"license.html":{}}}],["considered",{"_index":2010,"title":{},"body":{"contributing.html":{}}}],["console.log",{"_index":2294,"title":{},"body":{"additional-documentation/tinynodes-library-docs/ngx-editorjs-readme/ngx-editorjs-changelog.html":{}}}],["const",{"_index":307,"title":{},"body":{"modules/AppRoutingModule.html":{},"interfaces/BasePlugin.html":{},"interfaces/BasePlugin-1.html":{},"interfaces/EditorJSInstanceConfig.html":{},"interfaces/EditorJSMaterialForm.html":{},"components/FormContainerComponent.html":{},"interfaces/InjectorApiCallOptions.html":{},"interfaces/InjectorApiCallResponse.html":{},"interfaces/InjectorMethodOption.html":{},"components/NgxEditorJSBaseComponent.html":{},"interfaces/NgxEditorJSConfig.html":{},"directives/NgxEditorJSDirective.html":{},"injectables/NgxEditorJSInstanceService.html":{},"interfaces/NgxEditorJSModuleConfig.html":{},"injectables/NgxEditorJSService.html":{},"modules/NgxHideableHeaderDemoModule.html":{},"injectables/PagesService.html":{},"interfaces/PluginConfig.html":{},"interfaces/PluginConfig-1.html":{},"interfaces/ToolSettingsMap.html":{},"interfaces/ToolSettingsMap-1.html":{}}}],["constructive",{"_index":1982,"title":{},"body":{"contributing.html":{}}}],["constructor",{"_index":43,"title":{},"body":{"components/AppContainerComponent.html":{},"injectables/AppService.html":{},"injectables/AppService-1.html":{},"injectables/ApplicationQuery.html":{},"injectables/ApplicationQuery-1.html":{},"injectables/ApplicationStore.html":{},"injectables/ApplicationStore-1.html":{},"classes/Changed.html":{},"interfaces/EditorJSMaterialForm.html":{},"components/FormContainerComponent.html":{},"components/HomePageComponent.html":{},"classes/MockEditorJS.html":{},"injectables/MockNgZone.html":{},"classes/MockPlugin.html":{},"components/NgxEditorJSBaseComponent.html":{},"components/NgxEditorJSComponent.html":{},"directives/NgxEditorJSDirective.html":{},"injectables/NgxEditorJSEffects.html":{},"injectables/NgxEditorJSInstanceService.html":{},"modules/NgxEditorJSModule.html":{},"injectables/NgxEditorJSPluginService.html":{},"injectables/NgxEditorJSService.html":{},"classes/NotReady.html":{},"components/PageContainerComponent.html":{},"injectables/PagesQuery.html":{},"injectables/PagesService.html":{},"interfaces/PagesState.html":{},"injectables/PagesStore.html":{},"classes/Ready.html":{},"classes/SaveEnd.html":{},"classes/SaveStart.html":{},"classes/TestClass.html":{}}}],["constructor(@inject(userplugins",{"_index":1519,"title":{},"body":{"injectables/NgxEditorJSPluginService.html":{}}}],["constructor(actions",{"_index":1307,"title":{},"body":{"injectables/NgxEditorJSEffects.html":{}}}],["constructor(app",{"_index":44,"title":{},"body":{"components/AppContainerComponent.html":{},"components/HomePageComponent.html":{}}}],["constructor(config",{"_index":924,"title":{},"body":{"classes/MockEditorJS.html":{},"injectables/NgxEditorJSService.html":{}}}],["constructor(editorjs",{"_index":1335,"title":{},"body":{"injectables/NgxEditorJSInstanceService.html":{}}}],["constructor(el",{"_index":1220,"title":{},"body":{"directives/NgxEditorJSDirective.html":{}}}],["constructor(pagesservice",{"_index":759,"title":{},"body":{"components/FormContainerComponent.html":{},"components/PageContainerComponent.html":{}}}],["constructor(payload",{"_index":548,"title":{},"body":{"classes/Changed.html":{},"classes/NotReady.html":{},"classes/Ready.html":{},"classes/SaveEnd.html":{},"classes/SaveStart.html":{}}}],["constructor(private",{"_index":898,"title":{},"body":{"components/HomePageComponent.html":{},"classes/MockEditorJS.html":{},"classes/MockPlugin.html":{},"injectables/NgxEditorJSEffects.html":{},"classes/TestClass.html":{}}}],["constructor(protected",{"_index":436,"title":{},"body":{"injectables/ApplicationQuery.html":{},"injectables/ApplicationQuery-1.html":{},"injectables/PagesQuery.html":{}}}],["constructor(public",{"_index":561,"title":{},"body":{"classes/Changed.html":{},"classes/NotReady.html":{},"injectables/PagesService.html":{},"classes/Ready.html":{},"classes/SaveEnd.html":{},"classes/SaveStart.html":{}}}],["constructor(query",{"_index":327,"title":{},"body":{"injectables/AppService.html":{},"injectables/AppService-1.html":{},"injectables/PagesService.html":{}}}],["constructor(service",{"_index":1008,"title":{},"body":{"components/NgxEditorJSBaseComponent.html":{},"components/NgxEditorJSComponent.html":{}}}],["constructor(store",{"_index":431,"title":{},"body":{"injectables/ApplicationQuery.html":{},"injectables/ApplicationQuery-1.html":{},"injectables/PagesQuery.html":{}}}],["constructor(userplugins",{"_index":1499,"title":{},"body":{"injectables/NgxEditorJSPluginService.html":{}}}],["constructs",{"_index":1111,"title":{},"body":{"components/NgxEditorJSComponent.html":{},"injectables/NgxEditorJSInstanceService.html":{}}}],["contacting",{"_index":2063,"title":{},"body":{"contributing.html":{}}}],["contain",{"_index":416,"title":{},"body":{"interfaces/ApplicationData.html":{},"interfaces/ApplicationData-1.html":{},"interfaces/MenuGroup.html":{},"interfaces/MenuGroup-1.html":{},"interfaces/MenuItem.html":{},"interfaces/MenuItem-1.html":{}}}],["container",{"_index":17,"title":{},"body":{"components/AppContainerComponent.html":{},"interfaces/EditorJSMaterialForm.html":{},"components/FormContainerComponent.html":{},"injectables/NgxEditorJSInstanceService.html":{},"injectables/NgxEditorJSService.html":{},"components/PageContainerComponent.html":{},"contributing.html":{}}}],["container'},{'name",{"_index":199,"title":{},"body":{"components/AppContainerComponent.html":{},"components/FormContainerComponent.html":{},"components/HomePageComponent.html":{},"components/NavBarComponent.html":{},"components/NgxEditorJSBaseComponent.html":{},"components/NgxEditorJSComponent.html":{},"components/NgxEditorJSDemoHomeComponent.html":{},"components/NgxEditorJSDemoInfoComponent.html":{},"components/PageContainerComponent.html":{},"components/SidebarComponent.html":{}}}],["container.component",{"_index":1591,"title":{},"body":{"modules/NgxEditorjsDemoModule.html":{}}}],["container.component.html",{"_index":750,"title":{},"body":{"components/FormContainerComponent.html":{},"components/NgxEditorJSDemoHomeComponent.html":{},"components/PageContainerComponent.html":{}}}],["container.component.scss",{"_index":749,"title":{},"body":{"components/FormContainerComponent.html":{},"components/NgxEditorJSDemoHomeComponent.html":{},"components/PageContainerComponent.html":{}}}],["container.component.ts",{"_index":744,"title":{},"body":{"components/FormContainerComponent.html":{},"components/NgxEditorJSDemoHomeComponent.html":{},"components/PageContainerComponent.html":{}}}],["container.component.ts:108",{"_index":1673,"title":{},"body":{"components/PageContainerComponent.html":{}}}],["container.component.ts:121",{"_index":1662,"title":{},"body":{"components/PageContainerComponent.html":{}}}],["container.component.ts:125",{"_index":789,"title":{},"body":{"components/FormContainerComponent.html":{}}}],["container.component.ts:134",{"_index":794,"title":{},"body":{"components/FormContainerComponent.html":{}}}],["container.component.ts:141",{"_index":796,"title":{},"body":{"components/FormContainerComponent.html":{}}}],["container.component.ts:145",{"_index":798,"title":{},"body":{"components/FormContainerComponent.html":{}}}],["container.component.ts:155",{"_index":781,"title":{},"body":{"components/FormContainerComponent.html":{}}}],["container.component.ts:163",{"_index":770,"title":{},"body":{"components/FormContainerComponent.html":{}}}],["container.component.ts:172",{"_index":783,"title":{},"body":{"components/FormContainerComponent.html":{}}}],["container.component.ts:180",{"_index":780,"title":{},"body":{"components/FormContainerComponent.html":{}}}],["container.component.ts:233",{"_index":777,"title":{},"body":{"components/FormContainerComponent.html":{}}}],["container.component.ts:31",{"_index":1666,"title":{},"body":{"components/PageContainerComponent.html":{}}}],["container.component.ts:34",{"_index":791,"title":{},"body":{"components/FormContainerComponent.html":{}}}],["container.component.ts:38",{"_index":1660,"title":{},"body":{"components/PageContainerComponent.html":{}}}],["container.component.ts:43",{"_index":790,"title":{},"body":{"components/FormContainerComponent.html":{}}}],["container.component.ts:57",{"_index":1669,"title":{},"body":{"components/PageContainerComponent.html":{}}}],["container.component.ts:64",{"_index":769,"title":{},"body":{"components/FormContainerComponent.html":{}}}],["container.component.ts:67",{"_index":1670,"title":{},"body":{"components/PageContainerComponent.html":{}}}],["container.component.ts:70",{"_index":774,"title":{},"body":{"components/FormContainerComponent.html":{}}}],["container.component.ts:74",{"_index":1671,"title":{},"body":{"components/PageContainerComponent.html":{}}}],["container.component.ts:77",{"_index":771,"title":{},"body":{"components/FormContainerComponent.html":{}}}],["container.component.ts:81",{"_index":1665,"title":{},"body":{"components/PageContainerComponent.html":{}}}],["container.component.ts:84",{"_index":793,"title":{},"body":{"components/FormContainerComponent.html":{}}}],["container.component.ts:86",{"_index":764,"title":{},"body":{"components/FormContainerComponent.html":{}}}],["container.component.ts:88",{"_index":1661,"title":{},"body":{"components/PageContainerComponent.html":{}}}],["container.component.ts:95",{"_index":1664,"title":{},"body":{"components/PageContainerComponent.html":{}}}],["container/form",{"_index":743,"title":{},"body":{"components/FormContainerComponent.html":{},"modules/NgxEditorjsDemoModule.html":{}}}],["container/home",{"_index":1173,"title":{},"body":{"components/NgxEditorJSDemoHomeComponent.html":{},"modules/NgxEditorjsDemoModule.html":{}}}],["container/page",{"_index":1590,"title":{},"body":{"modules/NgxEditorjsDemoModule.html":{},"components/PageContainerComponent.html":{}}}],["containers",{"_index":2144,"title":{},"body":{"index.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-readme.html":{}}}],["containers/app/app.component",{"_index":279,"title":{},"body":{"modules/AppModule.html":{}}}],["containers/base/container.class",{"_index":1480,"title":{},"body":{"modules/NgxEditorJSModule.html":{}}}],["containers/editorjs",{"_index":1481,"title":{},"body":{"modules/NgxEditorJSModule.html":{}}}],["containers/editorjs/editorjs.component",{"_index":1483,"title":{},"body":{"modules/NgxEditorJSModule.html":{}}}],["containers/form",{"_index":1596,"title":{},"body":{"modules/NgxEditorjsDemoModule.html":{}}}],["containers/home",{"_index":1597,"title":{},"body":{"modules/NgxEditorjsDemoModule.html":{}}}],["containers/page",{"_index":1589,"title":{},"body":{"modules/NgxEditorjsDemoModule.html":{}}}],["containing",{"_index":524,"title":{},"body":{"interfaces/BlocksMap.html":{},"interfaces/ChangeMap.html":{},"interfaces/EditorJSChange.html":{},"interfaces/EditorMap.html":{},"interfaces/ReadyMap.html":{},"interfaces/SavedMap.html":{}}}],["contains",{"_index":904,"title":{},"body":{"components/HomePageComponent.html":{},"injectables/NgxEditorJSInstanceService.html":{},"injectables/NgxEditorJSService.html":{}}}],["content",{"_index":152,"title":{},"body":{"components/AppContainerComponent.html":{},"components/FormContainerComponent.html":{},"components/NgxEditorJSBaseComponent.html":{},"components/NgxEditorJSComponent.html":{},"directives/NgxEditorJSDirective.html":{},"components/PageContainerComponent.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-readme.html":{}}}],["continue",{"_index":1902,"title":{},"body":{"changelog.html":{}}}],["contract",{"_index":2210,"title":{},"body":{"license.html":{}}}],["contributes",{"_index":1971,"title":{},"body":{"contributing.html":{}}}],["contributing",{"_index":1907,"title":{"contributing.html":{}},"body":{"contributing.html":{}}}],["contributions",{"_index":2028,"title":{},"body":{"contributing.html":{}}}],["contributor",{"_index":2033,"title":{},"body":{"contributing.html":{}}}],["contributors",{"_index":1946,"title":{},"body":{"contributing.html":{}}}],["control",{"_index":645,"title":{},"body":{"interfaces/EditorJSMaterialForm.html":{},"components/NavBarComponent.html":{},"directives/NgxEditorJSDirective.html":{},"modules/NgxEditorJSModule.html":{},"injectables/NgxEditorJSService.html":{},"modules/NgxEditorjsNgrxModule.html":{},"changelog.html":{},"todo.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-readme/ngx-editorjs-changelog.html":{}}}],["controlling",{"_index":2300,"title":{},"body":{"additional-documentation/tinynodes-library-docs/ngx-editorjs-readme/ngx-editorjs-changelog.html":{}}}],["controls",{"_index":877,"title":{},"body":{"components/FormContainerComponent.html":{},"components/PageContainerComponent.html":{},"todo.html":{}}}],["controltype",{"_index":646,"title":{},"body":{"interfaces/EditorJSMaterialForm.html":{}}}],["controlvalueaccessor",{"_index":990,"title":{},"body":{"components/NgxEditorJSBaseComponent.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-readme/ngx-editorjs-changelog.html":{}}}],["copies",{"_index":2180,"title":{},"body":{"license.html":{}}}],["copy",{"_index":2166,"title":{},"body":{"license.html":{}}}],["copyright",{"_index":2160,"title":{},"body":{"license.html":{}}}],["core",{"_index":101,"title":{},"body":{"components/AppContainerComponent.html":{},"modules/AppModule.html":{},"components/HomePageComponent.html":{},"components/NavBarComponent.html":{},"modules/NgxTinynodesCoreMaterialModule.html":{},"modules/NgxTinynodesCoreModule.html":{},"components/SidebarComponent.html":{},"changelog.html":{},"dependencies.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-readme/ngx-editorjs-changelog.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-plugins-readme/ngx-editorjs-plugins-changelog.html":{}}}],["core.module.ts",{"_index":1648,"title":{},"body":{"modules/NgxTinynodesCoreModule.html":{}}}],["core/src",{"_index":802,"title":{},"body":{"components/FormContainerComponent.html":{},"modules/NgxEditorjsDemoModule.html":{},"components/PageContainerComponent.html":{}}}],["core/src/lib/components/demo",{"_index":1179,"title":{},"body":{"components/NgxEditorJSDemoInfoComponent.html":{}}}],["core/src/lib/ngx",{"_index":1642,"title":{},"body":{"modules/NgxTinynodesCoreMaterialModule.html":{},"modules/NgxTinynodesCoreModule.html":{}}}],["core/src/lib/stores/app/application.model",{"_index":803,"title":{},"body":{"components/FormContainerComponent.html":{},"components/PageContainerComponent.html":{}}}],["core/src/lib/stores/app/application.model.ts",{"_index":440,"title":{},"body":{"interfaces/ApplicationState.html":{},"interfaces/DemoData.html":{},"interfaces/NgxEditorJSDemo.html":{},"interfaces/NgxEditorJSDemoData.html":{},"interfaces/TinynodeDemos.html":{},"miscellaneous/enumerations.html":{}}}],["core/src/lib/stores/app/application.module.ts",{"_index":422,"title":{},"body":{"modules/ApplicationDataModule.html":{}}}],["core/src/lib/stores/app/application.query.ts",{"_index":428,"title":{},"body":{"injectables/ApplicationQuery.html":{}}}],["core/src/lib/stores/app/application.query.ts:10",{"_index":432,"title":{},"body":{"injectables/ApplicationQuery.html":{}}}],["core/src/lib/stores/app/application.service.ts",{"_index":317,"title":{},"body":{"injectables/AppService.html":{}}}],["core/src/lib/stores/app/application.service.ts:15",{"_index":331,"title":{},"body":{"injectables/AppService.html":{}}}],["core/src/lib/stores/app/application.service.ts:34",{"_index":353,"title":{},"body":{"injectables/AppService.html":{}}}],["core/src/lib/stores/app/application.service.ts:41",{"_index":350,"title":{},"body":{"injectables/AppService.html":{}}}],["core/src/lib/stores/app/application.service.ts:52",{"_index":339,"title":{},"body":{"injectables/AppService.html":{}}}],["core/src/lib/stores/app/application.service.ts:65",{"_index":345,"title":{},"body":{"injectables/AppService.html":{}}}],["core/src/lib/stores/app/application.store.ts",{"_index":453,"title":{},"body":{"injectables/ApplicationStore.html":{}}}],["core/src/lib/stores/app/application.store.ts:10",{"_index":454,"title":{},"body":{"injectables/ApplicationStore.html":{}}}],["core/src/lib/types/app.ts",{"_index":398,"title":{},"body":{"interfaces/ApplicationData.html":{},"interfaces/MenuGroup.html":{},"interfaces/MenuItem.html":{}}}],["coreapi",{"_index":2228,"title":{},"body":{"todo.html":{}}}],["corrective",{"_index":2021,"title":{},"body":{"contributing.html":{}}}],["correctly",{"_index":2261,"title":{},"body":{"additional-documentation/tinynodes-library-docs.html":{}}}],["covenant",{"_index":2092,"title":{},"body":{"contributing.html":{}}}],["covenant.org/version/1/4",{"_index":2095,"title":{},"body":{"contributing.html":{}}}],["cover",{"_index":1894,"title":{},"body":{"changelog.html":{}}}],["create",{"_index":1243,"title":{},"body":{"directives/NgxEditorJSDirective.html":{},"injectables/NgxEditorJSInstanceService.html":{},"index.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-readme.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-readme/ngx-editorjs-changelog.html":{}}}],["createconfig",{"_index":1294,"title":{},"body":{"directives/NgxEditorJSDirective.html":{}}}],["created",{"_index":1010,"title":{},"body":{"components/NgxEditorJSBaseComponent.html":{},"components/NgxEditorJSComponent.html":{},"directives/NgxEditorJSDirective.html":{},"injectables/NgxEditorJSInstanceService.html":{},"injectables/PagesService.html":{},"changelog.html":{}}}],["createeditor",{"_index":1217,"title":{},"body":{"directives/NgxEditorJSDirective.html":{},"injectables/NgxEditorJSService.html":{}}}],["createeditor(config",{"_index":1240,"title":{},"body":{"directives/NgxEditorJSDirective.html":{}}}],["createeditor(options",{"_index":1538,"title":{},"body":{"injectables/NgxEditorJSService.html":{}}}],["createeditorjsconfig",{"_index":1266,"title":{},"body":{"directives/NgxEditorJSDirective.html":{},"miscellaneous/functions.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-readme/ngx-editorjs-changelog.html":{}}}],["createeditorjsconfig(inputconfig",{"_index":2132,"title":{},"body":{"miscellaneous/functions.html":{}}}],["createeditorjsinstance",{"_index":1491,"title":{},"body":{"modules/NgxEditorJSModule.html":{},"miscellaneous/functions.html":{}}}],["createeditorjsinstance(editorjs",{"_index":1487,"title":{},"body":{"modules/NgxEditorJSModule.html":{},"miscellaneous/functions.html":{}}}],["createeditorjsoptions",{"_index":567,"title":{"interfaces/CreateEditorJSOptions.html":{}},"body":{"interfaces/CreateEditorJSOptions.html":{},"injectables/NgxEditorJSService.html":{}}}],["createinstance",{"_index":1333,"title":{},"body":{"injectables/NgxEditorJSInstanceService.html":{}}}],["createinstance(config",{"_index":1351,"title":{},"body":{"injectables/NgxEditorJSInstanceService.html":{}}}],["createmoduleconfig",{"_index":1478,"title":{},"body":{"modules/NgxEditorJSModule.html":{},"miscellaneous/functions.html":{}}}],["createmoduleconfig(config",{"_index":2135,"title":{},"body":{"miscellaneous/functions.html":{}}}],["createngxeditorjsdemotools",{"_index":1588,"title":{},"body":{"modules/NgxEditorjsDemoModule.html":{},"miscellaneous/functions.html":{}}}],["creates",{"_index":702,"title":{},"body":{"interfaces/EditorJSMaterialForm.html":{},"directives/NgxEditorJSDirective.html":{},"injectables/NgxEditorJSInstanceService.html":{},"injectables/NgxEditorJSService.html":{},"injectables/PagesService.html":{},"miscellaneous/functions.html":{}}}],["createtools",{"_index":2270,"title":{},"body":{"additional-documentation/tinynodes-library-docs/ngx-editorjs-readme.html":{}}}],["creating",{"_index":578,"title":{},"body":{"interfaces/EditorJSInstanceConfig.html":{},"interfaces/InjectorApiCallOptions.html":{},"interfaces/InjectorApiCallResponse.html":{},"interfaces/InjectorMethodOption.html":{},"components/NgxEditorJSBaseComponent.html":{},"contributing.html":{}}}],["creation",{"_index":1154,"title":{},"body":{"interfaces/NgxEditorJSConfig.html":{},"injectables/NgxEditorJSInstanceService.html":{},"interfaces/NgxEditorJSModuleConfig.html":{},"modules/PageStoreModule.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-readme/ngx-editorjs-changelog.html":{}}}],["criticism",{"_index":1983,"title":{},"body":{"contributing.html":{}}}],["current",{"_index":115,"title":{},"body":{"components/AppContainerComponent.html":{},"components/FormContainerComponent.html":{},"injectables/NgxEditorJSService.html":{},"modules/NgxEditorjsNgrxModule.html":{},"changelog.html":{}}}],["currently",{"_index":1690,"title":{},"body":{"modules/PageStoreModule.html":{},"changelog.html":{},"additional-documentation/tinynodes-library-docs.html":{}}}],["cursor",{"_index":171,"title":{},"body":{"components/AppContainerComponent.html":{},"components/NavBarComponent.html":{}}}],["custom",{"_index":499,"title":{},"body":{"interfaces/Block.html":{},"interfaces/Header.html":{},"interfaces/HeaderBlock.html":{},"interfaces/Image.html":{},"interfaces/ImageBlock.html":{},"interfaces/List.html":{},"interfaces/ListBlock.html":{},"interfaces/Paragraph.html":{},"interfaces/ParagraphBlock.html":{},"index.html":{},"miscellaneous/typealiases.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-readme.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-readme/ngx-editorjs-changelog.html":{}}}],["cy.get('h1",{"_index":2255,"title":{},"body":{"miscellaneous/variables.html":{}}}],["cycle",{"_index":716,"title":{},"body":{"interfaces/EditorJSMaterialForm.html":{},"injectables/NgxEditorJSInstanceService.html":{},"index.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-readme.html":{}}}],["damages",{"_index":2207,"title":{},"body":{"license.html":{}}}],["darkgray",{"_index":1148,"title":{},"body":{"components/NgxEditorJSComponent.html":{}}}],["data",{"_index":321,"title":{},"body":{"injectables/AppService.html":{},"injectables/AppService-1.html":{},"injectables/ApplicationQuery.html":{},"injectables/ApplicationQuery-1.html":{},"interfaces/ApplicationState.html":{},"interfaces/ApplicationState-1.html":{},"injectables/ApplicationStore.html":{},"injectables/ApplicationStore-1.html":{},"interfaces/Block.html":{},"classes/Changed.html":{},"interfaces/DemoData.html":{},"interfaces/DemoData-1.html":{},"components/FormContainerComponent.html":{},"interfaces/Header.html":{},"interfaces/HeaderBlock.html":{},"interfaces/Image.html":{},"interfaces/ImageBlock.html":{},"interfaces/List.html":{},"interfaces/ListBlock.html":{},"components/NgxEditorJSBaseComponent.html":{},"components/NgxEditorJSComponent.html":{},"interfaces/NgxEditorJSConfig.html":{},"interfaces/NgxEditorJSDemo.html":{},"interfaces/NgxEditorJSDemo-1.html":{},"interfaces/NgxEditorJSDemoData.html":{},"interfaces/NgxEditorJSDemoData-1.html":{},"directives/NgxEditorJSDirective.html":{},"injectables/NgxEditorJSEffects.html":{},"injectables/NgxEditorJSInstanceService.html":{},"interfaces/NgxEditorJSModuleConfig.html":{},"modules/NgxTinynodesCoreModule.html":{},"classes/NotReady.html":{},"components/PageContainerComponent.html":{},"interfaces/Paragraph.html":{},"interfaces/ParagraphBlock.html":{},"classes/Ready.html":{},"classes/SaveEnd.html":{},"classes/SaveStart.html":{},"interfaces/TinynodeDemos.html":{},"interfaces/TinynodeDemos-1.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-readme.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-readme/ngx-editorjs-changelog.html":{}}}],["data.blocks",{"_index":838,"title":{},"body":{"components/FormContainerComponent.html":{},"components/PageContainerComponent.html":{}}}],["data.json').subscribe((appdata",{"_index":366,"title":{},"body":{"injectables/AppService.html":{},"injectables/AppService-1.html":{}}}],["data.length",{"_index":376,"title":{},"body":{"injectables/AppService.html":{}}}],["date.now",{"_index":944,"title":{},"body":{"classes/MockEditorJS.html":{},"classes/MockPlugin.html":{},"directives/NgxEditorJSDirective.html":{},"injectables/NgxEditorJSEffects.html":{},"injectables/NgxEditorJSInstanceService.html":{},"classes/TestClass.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-readme.html":{}}}],["datorama/akita",{"_index":268,"title":{},"body":{"modules/AppModule.html":{},"injectables/ApplicationQuery.html":{},"injectables/ApplicationQuery-1.html":{},"injectables/ApplicationStore.html":{},"injectables/ApplicationStore-1.html":{},"interfaces/Page.html":{},"interfaces/PageBlock.html":{},"injectables/PagesQuery.html":{},"injectables/PagesService.html":{},"interfaces/PagesState.html":{},"injectables/PagesStore.html":{},"interfaces/Tag.html":{},"dependencies.html":{}}}],["deal",{"_index":2169,"title":{},"body":{"license.html":{}}}],["dealings",{"_index":2214,"title":{},"body":{"license.html":{}}}],["declarations",{"_index":233,"title":{},"body":{"modules/AppModule.html":{},"modules/ApplicationDataModule.html":{},"modules/NgxEditorJSModule.html":{},"modules/NgxEditorjsDemoModule.html":{},"modules/NgxEditorjsNgrxModule.html":{},"modules/NgxEditorjsPluginsModule.html":{},"modules/NgxTinynodesCoreModule.html":{},"modules/PageStoreModule.html":{},"modules/PluginCodeModule.html":{},"modules/PluginHeaderModule.html":{},"modules/PluginImageModule.html":{},"modules/PluginLinkModule.html":{},"modules/PluginListModule.html":{},"modules/PluginMarkerModule.html":{},"modules/PluginParagraphModule.html":{},"modules/PluginSimpleImageModule.html":{},"overview.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-readme.html":{}}}],["decoration",{"_index":157,"title":{},"body":{"components/AppContainerComponent.html":{},"components/NavBarComponent.html":{}}}],["decorators",{"_index":78,"title":{},"body":{"components/AppContainerComponent.html":{},"components/NgxEditorJSComponent.html":{},"injectables/NgxEditorJSEffects.html":{},"components/PageContainerComponent.html":{}}}],["deem",{"_index":2035,"title":{},"body":{"contributing.html":{}}}],["deemed",{"_index":2069,"title":{},"body":{"contributing.html":{}}}],["default",{"_index":58,"title":{},"body":{"components/AppContainerComponent.html":{},"interfaces/Block.html":{},"classes/Changed.html":{},"interfaces/EditorJSInstanceConfig.html":{},"components/FormContainerComponent.html":{},"interfaces/Header.html":{},"interfaces/HeaderBlock.html":{},"interfaces/Image.html":{},"interfaces/ImageBlock.html":{},"interfaces/InjectorApiCallOptions.html":{},"interfaces/InjectorApiCallResponse.html":{},"interfaces/InjectorMethodOption.html":{},"interfaces/List.html":{},"interfaces/ListBlock.html":{},"injectables/MockNgZone.html":{},"components/NavBarComponent.html":{},"components/NgxEditorJSBaseComponent.html":{},"components/NgxEditorJSComponent.html":{},"interfaces/NgxEditorJSConfig.html":{},"directives/NgxEditorJSDirective.html":{},"injectables/NgxEditorJSEffects.html":{},"injectables/NgxEditorJSInstanceService.html":{},"modules/NgxEditorJSModule.html":{},"interfaces/NgxEditorJSModuleConfig.html":{},"injectables/NgxEditorJSPluginService.html":{},"injectables/NgxEditorJSService.html":{},"classes/NotReady.html":{},"components/PageContainerComponent.html":{},"interfaces/Paragraph.html":{},"interfaces/ParagraphBlock.html":{},"modules/PluginCodeModule.html":{},"modules/PluginHeaderModule.html":{},"modules/PluginImageModule.html":{},"modules/PluginLinkModule.html":{},"modules/PluginListModule.html":{},"modules/PluginMarkerModule.html":{},"modules/PluginParagraphModule.html":{},"classes/Ready.html":{},"classes/SaveEnd.html":{},"classes/SaveStart.html":{},"changelog.html":{},"index.html":{},"miscellaneous/variables.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-readme.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-readme/ngx-editorjs-changelog.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-plugins-readme.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-plugins-readme/ngx-editorjs-plugins-changelog.html":{}}}],["default_holder_id",{"_index":2237,"title":{},"body":{"miscellaneous/variables.html":{}}}],["defaults",{"_index":1470,"title":{},"body":{"modules/NgxEditorJSModule.html":{},"injectables/NgxEditorJSService.html":{}}}],["define",{"_index":1160,"title":{},"body":{"interfaces/NgxEditorJSConfig.html":{},"interfaces/NgxEditorJSModuleConfig.html":{}}}],["defined",{"_index":50,"title":{},"body":{"components/AppContainerComponent.html":{},"injectables/AppService.html":{},"injectables/AppService-1.html":{},"injectables/ApplicationQuery.html":{},"injectables/ApplicationQuery-1.html":{},"injectables/ApplicationStore.html":{},"injectables/ApplicationStore-1.html":{},"interfaces/BasePlugin-1.html":{},"interfaces/Block.html":{},"interfaces/BlocksMap.html":{},"interfaces/ChangeMap.html":{},"classes/Changed.html":{},"interfaces/EditorMap.html":{},"components/FormContainerComponent.html":{},"components/HomePageComponent.html":{},"classes/MockEditorJS.html":{},"injectables/MockNgZone.html":{},"classes/MockPlugin.html":{},"components/NavBarComponent.html":{},"components/NgxEditorJSBaseComponent.html":{},"components/NgxEditorJSComponent.html":{},"components/NgxEditorJSDemoInfoComponent.html":{},"directives/NgxEditorJSDirective.html":{},"injectables/NgxEditorJSEffects.html":{},"injectables/NgxEditorJSInstanceService.html":{},"modules/NgxEditorJSModule.html":{},"injectables/NgxEditorJSPluginService.html":{},"injectables/NgxEditorJSService.html":{},"classes/NotReady.html":{},"components/PageContainerComponent.html":{},"injectables/PagesQuery.html":{},"injectables/PagesService.html":{},"injectables/PagesStore.html":{},"injectables/PluginCode.html":{},"interfaces/PluginConfig.html":{},"interfaces/PluginConfig-1.html":{},"injectables/PluginHeader.html":{},"injectables/PluginImage.html":{},"injectables/PluginLink.html":{},"injectables/PluginList.html":{},"injectables/PluginMarker.html":{},"injectables/PluginParagraph.html":{},"injectables/PluginSimpleImage.html":{},"classes/Ready.html":{},"interfaces/ReadyMap.html":{},"classes/SaveEnd.html":{},"classes/SaveStart.html":{},"interfaces/SavedMap.html":{},"components/SidebarComponent.html":{},"classes/TestClass.html":{},"interfaces/ToolSettingsMap.html":{},"interfaces/ToolSettingsMap-1.html":{},"contributing.html":{},"miscellaneous/variables.html":{}}}],["defines",{"_index":463,"title":{},"body":{"interfaces/BasePlugin.html":{},"interfaces/BasePlugin-1.html":{},"interfaces/PluginConfig.html":{},"interfaces/PluginConfig-1.html":{},"interfaces/ToolSettingsMap.html":{},"interfaces/ToolSettingsMap-1.html":{}}}],["deigned",{"_index":2271,"title":{},"body":{"additional-documentation/tinynodes-library-docs/ngx-editorjs-readme.html":{}}}],["delayed",{"_index":1885,"title":{},"body":{"changelog.html":{}}}],["delete",{"_index":1456,"title":{},"body":{"injectables/NgxEditorJSInstanceService.html":{},"injectables/NgxEditorJSPluginService.html":{},"injectables/PagesService.html":{}}}],["delete(pageid",{"_index":1711,"title":{},"body":{"injectables/PagesService.html":{}}}],["demo",{"_index":211,"title":{},"body":{"components/AppContainerComponent.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"injectables/AppService-1.html":{},"interfaces/ApplicationState.html":{},"interfaces/ApplicationState-1.html":{},"interfaces/DemoData.html":{},"interfaces/DemoData-1.html":{},"components/FormContainerComponent.html":{},"components/HomePageComponent.html":{},"components/NavBarComponent.html":{},"components/NgxEditorJSBaseComponent.html":{},"components/NgxEditorJSComponent.html":{},"interfaces/NgxEditorJSDemo.html":{},"interfaces/NgxEditorJSDemo-1.html":{},"interfaces/NgxEditorJSDemoData.html":{},"interfaces/NgxEditorJSDemoData-1.html":{},"components/NgxEditorJSDemoHomeComponent.html":{},"components/NgxEditorJSDemoInfoComponent.html":{},"components/PageContainerComponent.html":{},"modules/PageStoreModule.html":{},"components/SidebarComponent.html":{},"interfaces/TinynodeDemos.html":{},"interfaces/TinynodeDemos-1.html":{},"changelog.html":{},"miscellaneous/functions.html":{},"index.html":{},"todo.html":{},"miscellaneous/variables.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-readme.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-readme/ngx-editorjs-changelog.html":{}}}],["demo.module.ts",{"_index":1581,"title":{},"body":{"modules/NgxEditorjsDemoModule.html":{},"modules/NgxHideableHeaderDemoModule.html":{},"miscellaneous/variables.html":{}}}],["demo.name",{"_index":379,"title":{},"body":{"injectables/AppService.html":{},"injectables/AppService-1.html":{}}}],["demo.routes",{"_index":1593,"title":{},"body":{"modules/NgxEditorjsDemoModule.html":{}}}],["demo.routes.ts",{"_index":2247,"title":{},"body":{"miscellaneous/variables.html":{}}}],["demo/angular",{"_index":2256,"title":{},"body":{"miscellaneous/variables.html":{}}}],["demo/src/lib/components/tag",{"_index":2257,"title":{},"body":{"miscellaneous/variables.html":{}}}],["demo/src/lib/config/index.ts",{"_index":2136,"title":{},"body":{"miscellaneous/functions.html":{}}}],["demo/src/lib/containers/form",{"_index":742,"title":{},"body":{"components/FormContainerComponent.html":{}}}],["demo/src/lib/containers/home",{"_index":1172,"title":{},"body":{"components/NgxEditorJSDemoHomeComponent.html":{}}}],["demo/src/lib/containers/page",{"_index":1658,"title":{},"body":{"components/PageContainerComponent.html":{}}}],["demo/src/lib/ngx",{"_index":1580,"title":{},"body":{"modules/NgxEditorjsDemoModule.html":{},"modules/NgxHideableHeaderDemoModule.html":{},"miscellaneous/variables.html":{}}}],["demo/src/lib/store/pages/pages.models.ts",{"_index":1656,"title":{},"body":{"interfaces/Page.html":{},"interfaces/PageBlock.html":{},"interfaces/Tag.html":{}}}],["demo/src/lib/store/pages/pages.module.ts",{"_index":1689,"title":{},"body":{"modules/PageStoreModule.html":{}}}],["demo/src/lib/store/pages/pages.query.ts",{"_index":1695,"title":{},"body":{"injectables/PagesQuery.html":{}}}],["demo/src/lib/store/pages/pages.query.ts:7",{"_index":1697,"title":{},"body":{"injectables/PagesQuery.html":{}}}],["demo/src/lib/store/pages/pages.service.ts",{"_index":1700,"title":{},"body":{"injectables/PagesService.html":{}}}],["demo/src/lib/store/pages/pages.service.ts:15",{"_index":1705,"title":{},"body":{"injectables/PagesService.html":{}}}],["demo/src/lib/store/pages/pages.service.ts:17",{"_index":1721,"title":{},"body":{"injectables/PagesService.html":{}}}],["demo/src/lib/store/pages/pages.service.ts:24",{"_index":1722,"title":{},"body":{"injectables/PagesService.html":{}}}],["demo/src/lib/store/pages/pages.service.ts:32",{"_index":1707,"title":{},"body":{"injectables/PagesService.html":{}}}],["demo/src/lib/store/pages/pages.service.ts:47",{"_index":1720,"title":{},"body":{"injectables/PagesService.html":{}}}],["demo/src/lib/store/pages/pages.service.ts:56",{"_index":1712,"title":{},"body":{"injectables/PagesService.html":{}}}],["demo/src/lib/store/pages/pages.service.ts:60",{"_index":1718,"title":{},"body":{"injectables/PagesService.html":{}}}],["demo/src/lib/store/pages/pages.service.ts:64",{"_index":1709,"title":{},"body":{"injectables/PagesService.html":{}}}],["demo/src/lib/store/pages/pages.service.ts:70",{"_index":1716,"title":{},"body":{"injectables/PagesService.html":{}}}],["demo/src/lib/store/pages/pages.store.ts",{"_index":1738,"title":{},"body":{"interfaces/PagesState.html":{},"injectables/PagesStore.html":{}}}],["demo/src/lib/store/pages/pages.store.ts:9",{"_index":1741,"title":{},"body":{"injectables/PagesStore.html":{}}}],["demo](https://tinynodes",{"_index":290,"title":{},"body":{"modules/AppModule.html":{}}}],["demodata",{"_index":361,"title":{"interfaces/DemoData.html":{},"interfaces/DemoData-1.html":{}},"body":{"injectables/AppService.html":{},"injectables/AppService-1.html":{},"interfaces/ApplicationState.html":{},"interfaces/ApplicationState-1.html":{},"injectables/ApplicationStore.html":{},"injectables/ApplicationStore-1.html":{},"interfaces/DemoData.html":{},"interfaces/DemoData-1.html":{},"interfaces/NgxEditorJSDemo.html":{},"interfaces/NgxEditorJSDemo-1.html":{},"interfaces/NgxEditorJSDemoData.html":{},"interfaces/NgxEditorJSDemoData-1.html":{},"interfaces/TinynodeDemos.html":{},"interfaces/TinynodeDemos-1.html":{},"miscellaneous/enumerations.html":{}}}],["demodata.find(demo",{"_index":378,"title":{},"body":{"injectables/AppService.html":{},"injectables/AppService-1.html":{}}}],["demoname",{"_index":342,"title":{},"body":{"injectables/AppService.html":{},"injectables/AppService-1.html":{}}}],["demoname).data",{"_index":380,"title":{},"body":{"injectables/AppService.html":{},"injectables/AppService-1.html":{}}}],["demos",{"_index":61,"title":{},"body":{"components/AppContainerComponent.html":{},"interfaces/ApplicationState.html":{},"interfaces/ApplicationState-1.html":{},"interfaces/DemoData.html":{},"interfaces/DemoData-1.html":{},"components/HomePageComponent.html":{},"interfaces/NgxEditorJSDemo.html":{},"interfaces/NgxEditorJSDemo-1.html":{},"interfaces/NgxEditorJSDemoData.html":{},"interfaces/NgxEditorJSDemoData-1.html":{},"components/NgxEditorJSDemoHomeComponent.html":{},"interfaces/TinynodeDemos.html":{},"interfaces/TinynodeDemos-1.html":{},"index.html":{}}}],["dependencies",{"_index":232,"title":{"dependencies.html":{}},"body":{"modules/AppModule.html":{},"modules/ApplicationDataModule.html":{},"modules/NgxEditorJSModule.html":{},"modules/NgxEditorjsDemoModule.html":{},"modules/NgxEditorjsNgrxModule.html":{},"modules/NgxEditorjsPluginsModule.html":{},"modules/NgxTinynodesCoreModule.html":{},"modules/PageStoreModule.html":{},"modules/PluginCodeModule.html":{},"modules/PluginHeaderModule.html":{},"modules/PluginImageModule.html":{},"modules/PluginLinkModule.html":{},"modules/PluginListModule.html":{},"modules/PluginMarkerModule.html":{},"modules/PluginParagraphModule.html":{},"modules/PluginSimpleImageModule.html":{},"contributing.html":{},"dependencies.html":{},"index.html":{},"overview.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-plugins-readme.html":{}}}],["dependency",{"_index":2232,"title":{},"body":{"todo.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-readme.html":{}}}],["deps",{"_index":1492,"title":{},"body":{"modules/NgxEditorJSModule.html":{}}}],["describedby",{"_index":641,"title":{},"body":{"interfaces/EditorJSMaterialForm.html":{}}}],["describes",{"_index":413,"title":{},"body":{"interfaces/ApplicationData.html":{},"interfaces/ApplicationData-1.html":{},"interfaces/MenuGroup.html":{},"interfaces/MenuGroup-1.html":{},"interfaces/MenuItem.html":{},"interfaces/MenuItem-1.html":{}}}],["description",{"_index":12,"title":{},"body":{"components/AppContainerComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"injectables/AppService.html":{},"injectables/AppService-1.html":{},"interfaces/ApplicationData.html":{},"interfaces/ApplicationData-1.html":{},"modules/ApplicationDataModule.html":{},"injectables/ApplicationQuery.html":{},"injectables/ApplicationQuery-1.html":{},"interfaces/ApplicationState.html":{},"interfaces/ApplicationState-1.html":{},"injectables/ApplicationStore.html":{},"injectables/ApplicationStore-1.html":{},"interfaces/BasePlugin.html":{},"interfaces/BasePlugin-1.html":{},"interfaces/Block.html":{},"interfaces/BlocksMap.html":{},"interfaces/ChangeMap.html":{},"interfaces/CreateEditorJSOptions.html":{},"interfaces/DemoData.html":{},"interfaces/DemoData-1.html":{},"interfaces/EditorJSChange.html":{},"interfaces/EditorJSInstanceConfig.html":{},"interfaces/EditorJSMaterialForm.html":{},"interfaces/EditorMap.html":{},"components/FormContainerComponent.html":{},"interfaces/Header.html":{},"interfaces/HeaderBlock.html":{},"interfaces/Image.html":{},"interfaces/ImageBlock.html":{},"interfaces/InjectorApiCallOptions.html":{},"interfaces/InjectorApiCallResponse.html":{},"interfaces/InjectorMethodOption.html":{},"interfaces/List.html":{},"interfaces/ListBlock.html":{},"modules/MaterialModule.html":{},"interfaces/MenuGroup.html":{},"interfaces/MenuGroup-1.html":{},"interfaces/MenuItem.html":{},"interfaces/MenuItem-1.html":{},"injectables/MockNgZone.html":{},"components/NavBarComponent.html":{},"components/NgxEditorJSBaseComponent.html":{},"components/NgxEditorJSComponent.html":{},"interfaces/NgxEditorJSConfig.html":{},"interfaces/NgxEditorJSDemo.html":{},"interfaces/NgxEditorJSDemo-1.html":{},"interfaces/NgxEditorJSDemoData.html":{},"interfaces/NgxEditorJSDemoData-1.html":{},"directives/NgxEditorJSDirective.html":{},"injectables/NgxEditorJSInstanceService.html":{},"modules/NgxEditorJSModule.html":{},"interfaces/NgxEditorJSModuleConfig.html":{},"injectables/NgxEditorJSPluginService.html":{},"injectables/NgxEditorJSService.html":{},"modules/NgxEditorjsNgrxModule.html":{},"modules/NgxEditorjsPluginsModule.html":{},"modules/NgxTinynodesCoreModule.html":{},"components/PageContainerComponent.html":{},"modules/PageStoreModule.html":{},"injectables/PagesService.html":{},"interfaces/Paragraph.html":{},"interfaces/ParagraphBlock.html":{},"injectables/PluginCode.html":{},"modules/PluginCodeModule.html":{},"interfaces/PluginConfig.html":{},"interfaces/PluginConfig-1.html":{},"injectables/PluginHeader.html":{},"modules/PluginHeaderModule.html":{},"injectables/PluginImage.html":{},"modules/PluginImageModule.html":{},"injectables/PluginLink.html":{},"modules/PluginLinkModule.html":{},"injectables/PluginList.html":{},"modules/PluginListModule.html":{},"injectables/PluginMarker.html":{},"modules/PluginMarkerModule.html":{},"injectables/PluginParagraph.html":{},"modules/PluginParagraphModule.html":{},"injectables/PluginSimpleImage.html":{},"modules/PluginSimpleImageModule.html":{},"interfaces/ReadyMap.html":{},"interfaces/SavedMap.html":{},"interfaces/TinynodeDemos.html":{},"interfaces/TinynodeDemos-1.html":{},"interfaces/ToolSettingsMap.html":{},"interfaces/ToolSettingsMap-1.html":{},"miscellaneous/functions.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-readme.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-plugins-readme.html":{}}}],["destroy",{"_index":731,"title":{},"body":{"interfaces/EditorJSMaterialForm.html":{},"classes/MockEditorJS.html":{},"classes/MockPlugin.html":{},"components/NgxEditorJSBaseComponent.html":{},"components/NgxEditorJSComponent.html":{},"directives/NgxEditorJSDirective.html":{},"injectables/NgxEditorJSInstanceService.html":{},"injectables/NgxEditorJSService.html":{},"classes/TestClass.html":{}}}],["destroy(options",{"_index":1540,"title":{},"body":{"injectables/NgxEditorJSService.html":{}}}],["destroyed",{"_index":70,"title":{},"body":{"components/AppContainerComponent.html":{},"directives/NgxEditorJSDirective.html":{},"injectables/NgxEditorJSInstanceService.html":{}}}],["destroyinstance",{"_index":1334,"title":{},"body":{"injectables/NgxEditorJSInstanceService.html":{}}}],["destroyinstance(options",{"_index":1357,"title":{},"body":{"injectables/NgxEditorJSInstanceService.html":{}}}],["destroys",{"_index":1359,"title":{},"body":{"injectables/NgxEditorJSInstanceService.html":{},"injectables/NgxEditorJSService.html":{}}}],["destructive",{"_index":1251,"title":{},"body":{"directives/NgxEditorJSDirective.html":{}}}],["details",{"_index":1201,"title":{},"body":{"components/NgxEditorJSDemoInfoComponent.html":{},"injectables/NgxEditorJSService.html":{},"modules/PluginCodeModule.html":{},"modules/PluginHeaderModule.html":{},"modules/PluginImageModule.html":{},"modules/PluginLinkModule.html":{},"modules/PluginListModule.html":{},"modules/PluginMarkerModule.html":{},"modules/PluginParagraphModule.html":{},"modules/PluginSimpleImageModule.html":{},"contributing.html":{},"additional-documentation/tinynodes-library-docs.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-readme.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-plugins-readme/ngx-editorjs-plugins-changelog.html":{}}}],["detection",{"_index":765,"title":{},"body":{"components/FormContainerComponent.html":{},"components/NgxEditorJSBaseComponent.html":{},"components/PageContainerComponent.html":{}}}],["determined",{"_index":2087,"title":{},"body":{"contributing.html":{}}}],["developers",{"_index":1939,"title":{},"body":{"contributing.html":{}}}],["development",{"_index":1608,"title":{},"body":{"modules/NgxEditorjsNgrxModule.html":{},"modules/PageStoreModule.html":{},"index.html":{}}}],["devlog",{"_index":1882,"title":{},"body":{"changelog.html":{}}}],["diary",{"_index":2137,"title":{},"body":{"index.html":{}}}],["differing",{"_index":1977,"title":{},"body":{"contributing.html":{}}}],["direction",{"_index":890,"title":{},"body":{"components/FormContainerComponent.html":{},"components/NgxEditorJSComponent.html":{}}}],["directive",{"_index":192,"title":{"directives/NgxEditorJSDirective.html":{}},"body":{"components/AppContainerComponent.html":{},"components/FormContainerComponent.html":{},"components/HomePageComponent.html":{},"components/NavBarComponent.html":{},"components/NgxEditorJSBaseComponent.html":{},"components/NgxEditorJSComponent.html":{},"components/NgxEditorJSDemoHomeComponent.html":{},"components/NgxEditorJSDemoInfoComponent.html":{},"directives/NgxEditorJSDirective.html":{},"components/PageContainerComponent.html":{},"components/SidebarComponent.html":{},"index.html":{},"overview.html":{},"todo.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-readme.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-readme/ngx-editorjs-changelog.html":{}}}],["directives",{"_index":222,"title":{},"body":{"components/AppContainerComponent.html":{},"components/FormContainerComponent.html":{},"components/HomePageComponent.html":{},"components/NavBarComponent.html":{},"components/NgxEditorJSBaseComponent.html":{},"components/NgxEditorJSComponent.html":{},"components/NgxEditorJSDemoHomeComponent.html":{},"components/NgxEditorJSDemoInfoComponent.html":{},"directives/NgxEditorJSDirective.html":{},"components/PageContainerComponent.html":{},"components/SidebarComponent.html":{}}}],["directives/ngx",{"_index":622,"title":{},"body":{"interfaces/EditorJSMaterialForm.html":{},"components/NgxEditorJSComponent.html":{},"modules/NgxEditorJSModule.html":{}}}],["disability",{"_index":1957,"title":{},"body":{"contributing.html":{}}}],["disable",{"_index":772,"title":{},"body":{"components/FormContainerComponent.html":{},"components/NgxEditorJSBaseComponent.html":{},"components/NgxEditorJSComponent.html":{},"directives/NgxEditorJSDirective.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-readme.html":{}}}],["disableautosave",{"_index":753,"title":{},"body":{"components/FormContainerComponent.html":{}}}],["disabled",{"_index":671,"title":{},"body":{"interfaces/EditorJSMaterialForm.html":{}}}],["disabled(disabled",{"_index":675,"title":{},"body":{"interfaces/EditorJSMaterialForm.html":{}}}],["discuss",{"_index":1910,"title":{},"body":{"contributing.html":{}}}],["dispatch",{"_index":1326,"title":{},"body":{"injectables/NgxEditorJSEffects.html":{}}}],["display",{"_index":174,"title":{},"body":{"components/AppContainerComponent.html":{},"interfaces/ApplicationData.html":{},"interfaces/ApplicationData-1.html":{},"components/FormContainerComponent.html":{},"interfaces/MenuGroup.html":{},"interfaces/MenuGroup-1.html":{},"interfaces/MenuItem.html":{},"interfaces/MenuItem-1.html":{},"components/NavBarComponent.html":{},"components/NgxEditorJSBaseComponent.html":{},"components/NgxEditorJSComponent.html":{},"directives/NgxEditorJSDirective.html":{}}}],["displays",{"_index":972,"title":{},"body":{"components/NavBarComponent.html":{}}}],["distinctuntilchanged",{"_index":105,"title":{},"body":{"components/AppContainerComponent.html":{},"injectables/AppService.html":{},"injectables/AppService-1.html":{},"components/FormContainerComponent.html":{},"components/PageContainerComponent.html":{}}}],["distribute",{"_index":2176,"title":{},"body":{"license.html":{}}}],["doc",{"_index":2226,"title":{},"body":{"todo.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-readme/ngx-editorjs-changelog.html":{}}}],["docheck",{"_index":615,"title":{},"body":{"interfaces/EditorJSMaterialForm.html":{}}}],["docs",{"_index":1174,"title":{"additional-documentation/tinynodes-library-docs.html":{}},"body":{"components/NgxEditorJSDemoHomeComponent.html":{},"injectables/NgxEditorJSInstanceService.html":{},"injectables/NgxEditorJSService.html":{},"changelog.html":{},"index.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-readme.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-readme/ngx-editorjs-changelog.html":{}}}],["docs](https://editorjs.io/api",{"_index":1407,"title":{},"body":{"injectables/NgxEditorJSInstanceService.html":{},"injectables/NgxEditorJSService.html":{}}}],["document.createelement('div",{"_index":935,"title":{},"body":{"classes/MockEditorJS.html":{},"classes/MockPlugin.html":{},"classes/TestClass.html":{}}}],["documentation",{"_index":911,"title":{},"body":{"components/HomePageComponent.html":{},"changelog.html":{},"index.html":{},"license.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-readme.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-readme/ngx-editorjs-changelog.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-plugins-readme/ngx-editorjs-plugins-changelog.html":{}}}],["documented",{"_index":2278,"title":{},"body":{"additional-documentation/tinynodes-library-docs/ngx-editorjs-readme/ngx-editorjs-changelog.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-plugins-readme/ngx-editorjs-plugins-changelog.html":{}}}],["doing",{"_index":1923,"title":{},"body":{"contributing.html":{}}}],["dom",{"_index":7,"title":{},"body":{"components/AppContainerComponent.html":{},"components/FormContainerComponent.html":{},"components/HomePageComponent.html":{},"components/NavBarComponent.html":{},"components/NgxEditorJSBaseComponent.html":{},"components/NgxEditorJSComponent.html":{},"components/NgxEditorJSDemoHomeComponent.html":{},"components/NgxEditorJSDemoInfoComponent.html":{},"directives/NgxEditorJSDirective.html":{},"components/PageContainerComponent.html":{},"components/SidebarComponent.html":{},"index.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-readme.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-readme/ngx-editorjs-changelog.html":{}}}],["download",{"_index":2263,"title":{},"body":{"additional-documentation/tinynodes-library-docs/ngx-editorjs-readme.html":{}}}],["due",{"_index":1856,"title":{},"body":{"changelog.html":{},"additional-documentation/tinynodes-library-docs.html":{}}}],["dynamic",{"_index":2103,"title":{},"body":{"dependencies.html":{}}}],["e",{"_index":2045,"title":{},"body":{"contributing.html":{}}}],["e.g",{"_index":414,"title":{},"body":{"interfaces/ApplicationData.html":{},"interfaces/ApplicationData-1.html":{},"interfaces/ApplicationState.html":{},"interfaces/ApplicationState-1.html":{},"interfaces/DemoData.html":{},"interfaces/DemoData-1.html":{},"interfaces/MenuGroup.html":{},"interfaces/MenuGroup-1.html":{},"interfaces/MenuItem.html":{},"interfaces/MenuItem-1.html":{},"interfaces/NgxEditorJSDemo.html":{},"interfaces/NgxEditorJSDemo-1.html":{},"interfaces/NgxEditorJSDemoData.html":{},"interfaces/NgxEditorJSDemoData-1.html":{},"interfaces/TinynodeDemos.html":{},"interfaces/TinynodeDemos-1.html":{},"todo.html":{}}}],["e2e/src/support/app.po.ts",{"_index":2254,"title":{},"body":{"miscellaneous/variables.html":{}}}],["each",{"_index":585,"title":{},"body":{"interfaces/EditorJSInstanceConfig.html":{},"interfaces/EditorJSMaterialForm.html":{},"interfaces/InjectorApiCallOptions.html":{},"interfaces/InjectorApiCallResponse.html":{},"interfaces/InjectorMethodOption.html":{},"components/NgxEditorJSDemoHomeComponent.html":{},"modules/NgxEditorjsPluginsModule.html":{},"miscellaneous/variables.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-readme.html":{}}}],["easily",{"_index":1623,"title":{},"body":{"modules/NgxEditorjsPluginsModule.html":{}}}],["edit",{"_index":2023,"title":{},"body":{"contributing.html":{}}}],["editior_js_instance",{"_index":1170,"title":{},"body":{"interfaces/NgxEditorJSConfig.html":{},"interfaces/NgxEditorJSModuleConfig.html":{},"miscellaneous/variables.html":{}}}],["editor",{"_index":581,"title":{},"body":{"interfaces/EditorJSInstanceConfig.html":{},"interfaces/EditorJSMaterialForm.html":{},"components/FormContainerComponent.html":{},"interfaces/InjectorApiCallOptions.html":{},"interfaces/InjectorApiCallResponse.html":{},"interfaces/InjectorMethodOption.html":{},"components/NgxEditorJSComponent.html":{},"components/NgxEditorJSDemoHomeComponent.html":{},"directives/NgxEditorJSDirective.html":{},"injectables/NgxEditorJSInstanceService.html":{},"injectables/NgxEditorJSPluginService.html":{},"injectables/NgxEditorJSService.html":{},"components/PageContainerComponent.html":{},"injectables/PluginSimpleImage.html":{},"todo.html":{},"miscellaneous/variables.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-readme.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-readme/ngx-editorjs-changelog.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-plugins-readme.html":{}}}],["editor's",{"_index":1158,"title":{},"body":{"interfaces/NgxEditorJSConfig.html":{},"interfaces/NgxEditorJSModuleConfig.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-readme.html":{}}}],["editor.blocks.clear",{"_index":1425,"title":{},"body":{"injectables/NgxEditorJSInstanceService.html":{}}}],["editor.blocks.render(data",{"_index":1427,"title":{},"body":{"injectables/NgxEditorJSInstanceService.html":{}}}],["editor.destroy",{"_index":1437,"title":{},"body":{"injectables/NgxEditorJSInstanceService.html":{}}}],["editor.isready.then",{"_index":1396,"title":{},"body":{"injectables/NgxEditorJSInstanceService.html":{}}}],["editor.saver.save().then(data",{"_index":1422,"title":{},"body":{"injectables/NgxEditorJSInstanceService.html":{}}}],["editor[options.method",{"_index":1412,"title":{},"body":{"injectables/NgxEditorJSInstanceService.html":{}}}],["editor[options.namespace][options.method",{"_index":1413,"title":{},"body":{"injectables/NgxEditorJSInstanceService.html":{}}}],["editorconfig",{"_index":574,"title":{},"body":{"interfaces/CreateEditorJSOptions.html":{},"interfaces/EditorJSInstanceConfig.html":{},"interfaces/InjectorApiCallOptions.html":{},"interfaces/InjectorApiCallResponse.html":{},"interfaces/InjectorMethodOption.html":{},"interfaces/NgxEditorJSConfig.html":{},"directives/NgxEditorJSDirective.html":{},"injectables/NgxEditorJSInstanceService.html":{},"interfaces/NgxEditorJSModuleConfig.html":{},"injectables/NgxEditorJSService.html":{},"miscellaneous/functions.html":{}}}],["editorconfig.holder",{"_index":1389,"title":{},"body":{"injectables/NgxEditorJSInstanceService.html":{}}}],["editorconfig.onchange",{"_index":1386,"title":{},"body":{"injectables/NgxEditorJSInstanceService.html":{}}}],["editorconfig.onready",{"_index":1390,"title":{},"body":{"injectables/NgxEditorJSInstanceService.html":{}}}],["editorel",{"_index":683,"title":{},"body":{"interfaces/EditorJSMaterialForm.html":{},"components/NgxEditorJSComponent.html":{}}}],["editorform",{"_index":751,"title":{},"body":{"components/FormContainerComponent.html":{}}}],["editorform.value.pagename",{"_index":859,"title":{},"body":{"components/FormContainerComponent.html":{}}}],["editorjs",{"_index":210,"title":{"additional-documentation/tinynodes-library-docs/ngx-editorjs-readme.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-readme/ngx-editorjs-changelog.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-plugins-readme.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-plugins-readme/ngx-editorjs-plugins-changelog.html":{}},"body":{"components/AppContainerComponent.html":{},"modules/AppModule.html":{},"interfaces/ApplicationState.html":{},"interfaces/ApplicationState-1.html":{},"interfaces/BasePlugin.html":{},"interfaces/BasePlugin-1.html":{},"interfaces/Block.html":{},"interfaces/BlocksMap.html":{},"interfaces/ChangeMap.html":{},"classes/Changed.html":{},"interfaces/CreateEditorJSOptions.html":{},"interfaces/DemoData.html":{},"interfaces/DemoData-1.html":{},"interfaces/EditorJSChange.html":{},"interfaces/EditorJSInstanceConfig.html":{},"interfaces/EditorJSMaterialForm.html":{},"interfaces/EditorMap.html":{},"components/FormContainerComponent.html":{},"interfaces/Header.html":{},"interfaces/HeaderBlock.html":{},"components/HomePageComponent.html":{},"interfaces/Image.html":{},"interfaces/ImageBlock.html":{},"interfaces/InjectorApiCallOptions.html":{},"interfaces/InjectorApiCallResponse.html":{},"interfaces/InjectorMethodOption.html":{},"interfaces/List.html":{},"interfaces/ListBlock.html":{},"components/NavBarComponent.html":{},"components/NgxEditorJSBaseComponent.html":{},"components/NgxEditorJSComponent.html":{},"interfaces/NgxEditorJSConfig.html":{},"interfaces/NgxEditorJSDemo.html":{},"interfaces/NgxEditorJSDemo-1.html":{},"interfaces/NgxEditorJSDemoData.html":{},"interfaces/NgxEditorJSDemoData-1.html":{},"components/NgxEditorJSDemoHomeComponent.html":{},"components/NgxEditorJSDemoInfoComponent.html":{},"directives/NgxEditorJSDirective.html":{},"injectables/NgxEditorJSEffects.html":{},"injectables/NgxEditorJSInstanceService.html":{},"modules/NgxEditorJSModule.html":{},"interfaces/NgxEditorJSModuleConfig.html":{},"injectables/NgxEditorJSPluginService.html":{},"injectables/NgxEditorJSService.html":{},"modules/NgxEditorjsDemoModule.html":{},"modules/NgxEditorjsNgrxModule.html":{},"modules/NgxEditorjsPluginsModule.html":{},"classes/NotReady.html":{},"interfaces/Page.html":{},"interfaces/PageBlock.html":{},"components/PageContainerComponent.html":{},"modules/PageStoreModule.html":{},"injectables/PagesQuery.html":{},"injectables/PagesService.html":{},"interfaces/PagesState.html":{},"injectables/PagesStore.html":{},"interfaces/Paragraph.html":{},"interfaces/ParagraphBlock.html":{},"injectables/PluginCode.html":{},"modules/PluginCodeModule.html":{},"interfaces/PluginConfig.html":{},"interfaces/PluginConfig-1.html":{},"injectables/PluginHeader.html":{},"modules/PluginHeaderModule.html":{},"injectables/PluginImage.html":{},"modules/PluginImageModule.html":{},"injectables/PluginLink.html":{},"modules/PluginLinkModule.html":{},"injectables/PluginList.html":{},"modules/PluginListModule.html":{},"injectables/PluginMarker.html":{},"modules/PluginMarkerModule.html":{},"injectables/PluginParagraph.html":{},"modules/PluginParagraphModule.html":{},"injectables/PluginSimpleImage.html":{},"modules/PluginSimpleImageModule.html":{},"classes/Ready.html":{},"interfaces/ReadyMap.html":{},"classes/SaveEnd.html":{},"classes/SaveStart.html":{},"interfaces/SavedMap.html":{},"components/SidebarComponent.html":{},"interfaces/Tag.html":{},"interfaces/TinynodeDemos.html":{},"interfaces/TinynodeDemos-1.html":{},"interfaces/ToolSettingsMap.html":{},"interfaces/ToolSettingsMap-1.html":{},"changelog.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"index.html":{},"todo.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-readme.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-readme/ngx-editorjs-changelog.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-plugins-readme.html":{}}}],["editorjs'},{'name",{"_index":208,"title":{},"body":{"components/AppContainerComponent.html":{},"components/FormContainerComponent.html":{},"components/HomePageComponent.html":{},"components/NavBarComponent.html":{},"components/NgxEditorJSBaseComponent.html":{},"components/NgxEditorJSComponent.html":{},"components/NgxEditorJSDemoHomeComponent.html":{},"components/NgxEditorJSDemoInfoComponent.html":{},"components/PageContainerComponent.html":{},"components/SidebarComponent.html":{}}}],["editorjs.actions",{"_index":1323,"title":{},"body":{"injectables/NgxEditorJSEffects.html":{}}}],["editorjs.actions.ts",{"_index":545,"title":{},"body":{"classes/Changed.html":{},"classes/NotReady.html":{},"classes/Ready.html":{},"classes/SaveEnd.html":{},"classes/SaveStart.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/typealiases.html":{}}}],["editorjs.actions.ts:13",{"_index":1827,"title":{},"body":{"classes/SaveStart.html":{}}}],["editorjs.actions.ts:14",{"_index":1828,"title":{},"body":{"classes/SaveStart.html":{}}}],["editorjs.actions.ts:18",{"_index":1825,"title":{},"body":{"classes/SaveEnd.html":{}}}],["editorjs.actions.ts:19",{"_index":1826,"title":{},"body":{"classes/SaveEnd.html":{}}}],["editorjs.actions.ts:23",{"_index":1654,"title":{},"body":{"classes/NotReady.html":{}}}],["editorjs.actions.ts:24",{"_index":1655,"title":{},"body":{"classes/NotReady.html":{}}}],["editorjs.actions.ts:28",{"_index":1822,"title":{},"body":{"classes/Ready.html":{}}}],["editorjs.actions.ts:29",{"_index":1823,"title":{},"body":{"classes/Ready.html":{}}}],["editorjs.actions.ts:33",{"_index":550,"title":{},"body":{"classes/Changed.html":{}}}],["editorjs.actions.ts:34",{"_index":551,"title":{},"body":{"classes/Changed.html":{}}}],["editorjs.component.html",{"_index":1109,"title":{},"body":{"components/NgxEditorJSComponent.html":{}}}],["editorjs.component.scss",{"_index":1108,"title":{},"body":{"components/NgxEditorJSComponent.html":{}}}],["editorjs.directive",{"_index":623,"title":{},"body":{"interfaces/EditorJSMaterialForm.html":{},"components/NgxEditorJSComponent.html":{},"modules/NgxEditorJSModule.html":{}}}],["editorjs.directive.ts",{"_index":1213,"title":{},"body":{"directives/NgxEditorJSDirective.html":{}}}],["editorjs.directive.ts:106",{"_index":1225,"title":{},"body":{"directives/NgxEditorJSDirective.html":{}}}],["editorjs.directive.ts:112",{"_index":1227,"title":{},"body":{"directives/NgxEditorJSDirective.html":{}}}],["editorjs.directive.ts:118",{"_index":1235,"title":{},"body":{"directives/NgxEditorJSDirective.html":{}}}],["editorjs.directive.ts:124",{"_index":1238,"title":{},"body":{"directives/NgxEditorJSDirective.html":{}}}],["editorjs.directive.ts:130",{"_index":1236,"title":{},"body":{"directives/NgxEditorJSDirective.html":{}}}],["editorjs.directive.ts:136",{"_index":1234,"title":{},"body":{"directives/NgxEditorJSDirective.html":{}}}],["editorjs.directive.ts:142",{"_index":1237,"title":{},"body":{"directives/NgxEditorJSDirective.html":{}}}],["editorjs.directive.ts:148",{"_index":1239,"title":{},"body":{"directives/NgxEditorJSDirective.html":{}}}],["editorjs.directive.ts:152",{"_index":1222,"title":{},"body":{"directives/NgxEditorJSDirective.html":{}}}],["editorjs.directive.ts:168",{"_index":1258,"title":{},"body":{"directives/NgxEditorJSDirective.html":{}}}],["editorjs.directive.ts:175",{"_index":1260,"title":{},"body":{"directives/NgxEditorJSDirective.html":{}}}],["editorjs.directive.ts:182",{"_index":1262,"title":{},"body":{"directives/NgxEditorJSDirective.html":{}}}],["editorjs.directive.ts:189",{"_index":1264,"title":{},"body":{"directives/NgxEditorJSDirective.html":{}}}],["editorjs.directive.ts:197",{"_index":1241,"title":{},"body":{"directives/NgxEditorJSDirective.html":{}}}],["editorjs.directive.ts:214",{"_index":1247,"title":{},"body":{"directives/NgxEditorJSDirective.html":{}}}],["editorjs.directive.ts:245",{"_index":1242,"title":{},"body":{"directives/NgxEditorJSDirective.html":{}}}],["editorjs.directive.ts:281",{"_index":1255,"title":{},"body":{"directives/NgxEditorJSDirective.html":{}}}],["editorjs.directive.ts:53",{"_index":1224,"title":{},"body":{"directives/NgxEditorJSDirective.html":{}}}],["editorjs.directive.ts:59",{"_index":1228,"title":{},"body":{"directives/NgxEditorJSDirective.html":{}}}],["editorjs.directive.ts:65",{"_index":1229,"title":{},"body":{"directives/NgxEditorJSDirective.html":{}}}],["editorjs.directive.ts:72",{"_index":1231,"title":{},"body":{"directives/NgxEditorJSDirective.html":{}}}],["editorjs.directive.ts:78",{"_index":1232,"title":{},"body":{"directives/NgxEditorJSDirective.html":{}}}],["editorjs.directive.ts:84",{"_index":1226,"title":{},"body":{"directives/NgxEditorJSDirective.html":{}}}],["editorjs.directive.ts:90",{"_index":1233,"title":{},"body":{"directives/NgxEditorJSDirective.html":{}}}],["editorjs.directive.ts:97",{"_index":1230,"title":{},"body":{"directives/NgxEditorJSDirective.html":{}}}],["editorjs.effects.ts",{"_index":1306,"title":{},"body":{"injectables/NgxEditorJSEffects.html":{}}}],["editorjs.effects.ts:10",{"_index":1309,"title":{},"body":{"injectables/NgxEditorJSEffects.html":{}}}],["editorjs.effects.ts:14",{"_index":1319,"title":{},"body":{"injectables/NgxEditorJSEffects.html":{}}}],["editorjs.module.ts",{"_index":1465,"title":{},"body":{"modules/NgxEditorJSModule.html":{},"miscellaneous/functions.html":{}}}],["editorjs.module.ts:63",{"_index":1469,"title":{},"body":{"modules/NgxEditorJSModule.html":{}}}],["editorjs.version",{"_index":1303,"title":{},"body":{"directives/NgxEditorJSDirective.html":{},"injectables/NgxEditorJSEffects.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-readme.html":{}}}],["editorjs/code",{"_index":1745,"title":{},"body":{"injectables/PluginCode.html":{}}}],["editorjs/editorjs",{"_index":474,"title":{},"body":{"interfaces/BasePlugin.html":{},"interfaces/BasePlugin-1.html":{},"interfaces/BlocksMap.html":{},"interfaces/ChangeMap.html":{},"classes/Changed.html":{},"interfaces/CreateEditorJSOptions.html":{},"interfaces/EditorJSChange.html":{},"interfaces/EditorJSInstanceConfig.html":{},"interfaces/EditorMap.html":{},"components/FormContainerComponent.html":{},"interfaces/InjectorApiCallOptions.html":{},"interfaces/InjectorApiCallResponse.html":{},"interfaces/InjectorMethodOption.html":{},"classes/MockEditorJS.html":{},"classes/MockPlugin.html":{},"components/NgxEditorJSBaseComponent.html":{},"interfaces/NgxEditorJSConfig.html":{},"directives/NgxEditorJSDirective.html":{},"injectables/NgxEditorJSEffects.html":{},"injectables/NgxEditorJSInstanceService.html":{},"modules/NgxEditorJSModule.html":{},"interfaces/NgxEditorJSModuleConfig.html":{},"injectables/NgxEditorJSService.html":{},"classes/NotReady.html":{},"components/PageContainerComponent.html":{},"injectables/PluginCode.html":{},"interfaces/PluginConfig.html":{},"interfaces/PluginConfig-1.html":{},"injectables/PluginHeader.html":{},"injectables/PluginImage.html":{},"injectables/PluginLink.html":{},"injectables/PluginList.html":{},"injectables/PluginMarker.html":{},"injectables/PluginParagraph.html":{},"injectables/PluginSimpleImage.html":{},"classes/Ready.html":{},"interfaces/ReadyMap.html":{},"classes/SaveEnd.html":{},"classes/SaveStart.html":{},"interfaces/SavedMap.html":{},"classes/TestClass.html":{},"interfaces/ToolSettingsMap.html":{},"interfaces/ToolSettingsMap-1.html":{},"dependencies.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-readme.html":{}}}],["editorjs/header",{"_index":1759,"title":{},"body":{"injectables/PluginHeader.html":{},"dependencies.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-plugins-readme.html":{}}}],["editorjs/image",{"_index":1768,"title":{},"body":{"injectables/PluginImage.html":{}}}],["editorjs/link",{"_index":1777,"title":{},"body":{"injectables/PluginLink.html":{}}}],["editorjs/list",{"_index":1786,"title":{},"body":{"injectables/PluginList.html":{},"dependencies.html":{}}}],["editorjs/marker",{"_index":1797,"title":{},"body":{"injectables/PluginMarker.html":{}}}],["editorjs/paragraph",{"_index":1807,"title":{},"body":{"injectables/PluginParagraph.html":{},"dependencies.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-readme.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-plugins-readme.html":{}}}],["editorjs/simple",{"_index":1818,"title":{},"body":{"injectables/PluginSimpleImage.html":{}}}],["editorjs/src",{"_index":801,"title":{},"body":{"components/FormContainerComponent.html":{},"components/PageContainerComponent.html":{}}}],["editorjs/src/lib/config/editor",{"_index":2131,"title":{},"body":{"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["editorjs/src/lib/config/module",{"_index":2134,"title":{},"body":{"miscellaneous/functions.html":{}}}],["editorjs/src/lib/containers/base/container.class.ts",{"_index":982,"title":{},"body":{"components/NgxEditorJSBaseComponent.html":{},"miscellaneous/variables.html":{}}}],["editorjs/src/lib/containers/base/container.class.ts:106",{"_index":1012,"title":{},"body":{"components/NgxEditorJSBaseComponent.html":{}}}],["editorjs/src/lib/containers/base/container.class.ts:112",{"_index":1021,"title":{},"body":{"components/NgxEditorJSBaseComponent.html":{}}}],["editorjs/src/lib/containers/base/container.class.ts:118",{"_index":1039,"title":{},"body":{"components/NgxEditorJSBaseComponent.html":{}}}],["editorjs/src/lib/containers/base/container.class.ts:124",{"_index":1043,"title":{},"body":{"components/NgxEditorJSBaseComponent.html":{}}}],["editorjs/src/lib/containers/base/container.class.ts:130",{"_index":1041,"title":{},"body":{"components/NgxEditorJSBaseComponent.html":{}}}],["editorjs/src/lib/containers/base/container.class.ts:136",{"_index":1037,"title":{},"body":{"components/NgxEditorJSBaseComponent.html":{}}}],["editorjs/src/lib/containers/base/container.class.ts:142",{"_index":1042,"title":{},"body":{"components/NgxEditorJSBaseComponent.html":{}}}],["editorjs/src/lib/containers/base/container.class.ts:147",{"_index":1068,"title":{},"body":{"components/NgxEditorJSBaseComponent.html":{}}}],["editorjs/src/lib/containers/base/container.class.ts:152",{"_index":1009,"title":{},"body":{"components/NgxEditorJSBaseComponent.html":{}}}],["editorjs/src/lib/containers/base/container.class.ts:172",{"_index":1054,"title":{},"body":{"components/NgxEditorJSBaseComponent.html":{}}}],["editorjs/src/lib/containers/base/container.class.ts:186",{"_index":1074,"title":{},"body":{"components/NgxEditorJSBaseComponent.html":{}}}],["editorjs/src/lib/containers/base/container.class.ts:194",{"_index":1069,"title":{},"body":{"components/NgxEditorJSBaseComponent.html":{}}}],["editorjs/src/lib/containers/base/container.class.ts:203",{"_index":1066,"title":{},"body":{"components/NgxEditorJSBaseComponent.html":{}}}],["editorjs/src/lib/containers/base/container.class.ts:212",{"_index":1062,"title":{},"body":{"components/NgxEditorJSBaseComponent.html":{}}}],["editorjs/src/lib/containers/base/container.class.ts:219",{"_index":1064,"title":{},"body":{"components/NgxEditorJSBaseComponent.html":{}}}],["editorjs/src/lib/containers/base/container.class.ts:230",{"_index":1048,"title":{},"body":{"components/NgxEditorJSBaseComponent.html":{}}}],["editorjs/src/lib/containers/base/container.class.ts:260",{"_index":1056,"title":{},"body":{"components/NgxEditorJSBaseComponent.html":{}}}],["editorjs/src/lib/containers/base/container.class.ts:289",{"_index":1059,"title":{},"body":{"components/NgxEditorJSBaseComponent.html":{}}}],["editorjs/src/lib/containers/base/container.class.ts:48",{"_index":1070,"title":{},"body":{"components/NgxEditorJSBaseComponent.html":{}}}],["editorjs/src/lib/containers/base/container.class.ts:53",{"_index":1011,"title":{},"body":{"components/NgxEditorJSBaseComponent.html":{}}}],["editorjs/src/lib/containers/base/container.class.ts:59",{"_index":1022,"title":{},"body":{"components/NgxEditorJSBaseComponent.html":{}}}],["editorjs/src/lib/containers/base/container.class.ts:65",{"_index":1025,"title":{},"body":{"components/NgxEditorJSBaseComponent.html":{}}}],["editorjs/src/lib/containers/base/container.class.ts:72",{"_index":1029,"title":{},"body":{"components/NgxEditorJSBaseComponent.html":{}}}],["editorjs/src/lib/containers/base/container.class.ts:78",{"_index":1032,"title":{},"body":{"components/NgxEditorJSBaseComponent.html":{}}}],["editorjs/src/lib/containers/base/container.class.ts:84",{"_index":1018,"title":{},"body":{"components/NgxEditorJSBaseComponent.html":{}}}],["editorjs/src/lib/containers/base/container.class.ts:90",{"_index":1036,"title":{},"body":{"components/NgxEditorJSBaseComponent.html":{}}}],["editorjs/src/lib/containers/base/container.class.ts:97",{"_index":1027,"title":{},"body":{"components/NgxEditorJSBaseComponent.html":{}}}],["editorjs/src/lib/containers/editorjs",{"_index":606,"title":{},"body":{"interfaces/EditorJSMaterialForm.html":{},"miscellaneous/variables.html":{}}}],["editorjs/src/lib/containers/editorjs/editorjs.component.ts",{"_index":1104,"title":{},"body":{"components/NgxEditorJSComponent.html":{}}}],["editorjs/src/lib/containers/editorjs/editorjs.component.ts:26",{"_index":1110,"title":{},"body":{"components/NgxEditorJSComponent.html":{}}}],["editorjs/src/lib/containers/editorjs/editorjs.component.ts:43",{"_index":1128,"title":{},"body":{"components/NgxEditorJSComponent.html":{}}}],["editorjs/src/lib/containers/editorjs/editorjs.component.ts:56",{"_index":1130,"title":{},"body":{"components/NgxEditorJSComponent.html":{}}}],["editorjs/src/lib/directives/ngx",{"_index":1212,"title":{},"body":{"directives/NgxEditorJSDirective.html":{}}}],["editorjs/src/lib/ngx",{"_index":1464,"title":{},"body":{"modules/NgxEditorJSModule.html":{},"miscellaneous/functions.html":{}}}],["editorjs/src/lib/services/editorjs",{"_index":1328,"title":{},"body":{"injectables/NgxEditorJSInstanceService.html":{}}}],["editorjs/src/lib/services/editorjs.service.ts",{"_index":1532,"title":{},"body":{"injectables/NgxEditorJSService.html":{}}}],["editorjs/src/lib/services/editorjs.service.ts:104",{"_index":1549,"title":{},"body":{"injectables/NgxEditorJSService.html":{}}}],["editorjs/src/lib/services/editorjs.service.ts:112",{"_index":1536,"title":{},"body":{"injectables/NgxEditorJSService.html":{}}}],["editorjs/src/lib/services/editorjs.service.ts:122",{"_index":1541,"title":{},"body":{"injectables/NgxEditorJSService.html":{}}}],["editorjs/src/lib/services/editorjs.service.ts:17",{"_index":1534,"title":{},"body":{"injectables/NgxEditorJSService.html":{}}}],["editorjs/src/lib/services/editorjs.service.ts:28",{"_index":1539,"title":{},"body":{"injectables/NgxEditorJSService.html":{}}}],["editorjs/src/lib/services/editorjs.service.ts:43",{"_index":1544,"title":{},"body":{"injectables/NgxEditorJSService.html":{}}}],["editorjs/src/lib/services/editorjs.service.ts:52",{"_index":1548,"title":{},"body":{"injectables/NgxEditorJSService.html":{}}}],["editorjs/src/lib/services/editorjs.service.ts:61",{"_index":1545,"title":{},"body":{"injectables/NgxEditorJSService.html":{}}}],["editorjs/src/lib/services/editorjs.service.ts:70",{"_index":1547,"title":{},"body":{"injectables/NgxEditorJSService.html":{}}}],["editorjs/src/lib/services/editorjs.service.ts:84",{"_index":1535,"title":{},"body":{"injectables/NgxEditorJSService.html":{}}}],["editorjs/src/lib/services/editorjs.service.ts:94",{"_index":1550,"title":{},"body":{"injectables/NgxEditorJSService.html":{}}}],["editorjs/src/lib/services/plugins.service.ts",{"_index":1495,"title":{},"body":{"injectables/NgxEditorJSPluginService.html":{}}}],["editorjs/src/lib/services/plugins.service.ts:15",{"_index":1500,"title":{},"body":{"injectables/NgxEditorJSPluginService.html":{}}}],["editorjs/src/lib/services/plugins.service.ts:31",{"_index":1505,"title":{},"body":{"injectables/NgxEditorJSPluginService.html":{}}}],["editorjs/src/lib/services/plugins.service.ts:39",{"_index":1512,"title":{},"body":{"injectables/NgxEditorJSPluginService.html":{}}}],["editorjs/src/lib/services/plugins.service.ts:48",{"_index":1507,"title":{},"body":{"injectables/NgxEditorJSPluginService.html":{}}}],["editorjs/src/lib/services/plugins.service.ts:55",{"_index":1514,"title":{},"body":{"injectables/NgxEditorJSPluginService.html":{}}}],["editorjs/src/lib/services/plugins.service.ts:63",{"_index":1509,"title":{},"body":{"injectables/NgxEditorJSPluginService.html":{}}}],["editorjs/src/lib/types/blocks.ts",{"_index":492,"title":{},"body":{"interfaces/Block.html":{},"interfaces/Header.html":{},"interfaces/HeaderBlock.html":{},"interfaces/Image.html":{},"interfaces/ImageBlock.html":{},"interfaces/List.html":{},"interfaces/ListBlock.html":{},"interfaces/Paragraph.html":{},"interfaces/ParagraphBlock.html":{},"miscellaneous/typealiases.html":{}}}],["editorjs/src/lib/types/blocks.ts:13",{"_index":494,"title":{},"body":{"interfaces/Block.html":{}}}],["editorjs/src/lib/types/config.ts",{"_index":1152,"title":{},"body":{"interfaces/NgxEditorJSConfig.html":{},"interfaces/NgxEditorJSModuleConfig.html":{},"miscellaneous/variables.html":{}}}],["editorjs/src/lib/types/editorjs",{"_index":568,"title":{},"body":{"interfaces/CreateEditorJSOptions.html":{}}}],["editorjs/src/lib/types/injector.ts",{"_index":577,"title":{},"body":{"interfaces/EditorJSInstanceConfig.html":{},"interfaces/InjectorApiCallOptions.html":{},"interfaces/InjectorApiCallResponse.html":{},"interfaces/InjectorMethodOption.html":{},"miscellaneous/variables.html":{}}}],["editorjs/src/lib/types/maps.ts",{"_index":523,"title":{},"body":{"interfaces/BlocksMap.html":{},"interfaces/ChangeMap.html":{},"interfaces/EditorJSChange.html":{},"interfaces/EditorMap.html":{},"interfaces/ReadyMap.html":{},"interfaces/SavedMap.html":{}}}],["editorjs/src/lib/types/maps.ts:18",{"_index":526,"title":{},"body":{"interfaces/BlocksMap.html":{}}}],["editorjs/src/lib/types/maps.ts:28",{"_index":1824,"title":{},"body":{"interfaces/ReadyMap.html":{}}}],["editorjs/src/lib/types/maps.ts:38",{"_index":1829,"title":{},"body":{"interfaces/SavedMap.html":{}}}],["editorjs/src/lib/types/maps.ts:62",{"_index":541,"title":{},"body":{"interfaces/ChangeMap.html":{}}}],["editorjs/src/lib/types/maps.ts:8",{"_index":741,"title":{},"body":{"interfaces/EditorMap.html":{}}}],["editorjs/src/lib/types/plugins.ts",{"_index":462,"title":{},"body":{"interfaces/BasePlugin.html":{},"interfaces/PluginConfig.html":{},"interfaces/ToolSettingsMap.html":{},"miscellaneous/variables.html":{}}}],["editorjs/src/lib/types/plugins.ts:17",{"_index":1841,"title":{},"body":{"interfaces/ToolSettingsMap.html":{}}}],["editorjs/src/lib/types/plugins.ts:7",{"_index":1754,"title":{},"body":{"interfaces/PluginConfig.html":{}}}],["editorjs/src/testing/ng",{"_index":947,"title":{},"body":{"injectables/MockNgZone.html":{}}}],["editorjs/src/testing/shared.ts",{"_index":921,"title":{},"body":{"classes/MockEditorJS.html":{},"classes/MockPlugin.html":{},"classes/TestClass.html":{}}}],["editorjs/src/testing/shared.ts:13",{"_index":966,"title":{},"body":{"classes/MockPlugin.html":{}}}],["editorjs/src/testing/shared.ts:16",{"_index":967,"title":{},"body":{"classes/MockPlugin.html":{}}}],["editorjs/src/testing/shared.ts:22",{"_index":927,"title":{},"body":{"classes/MockEditorJS.html":{}}}],["editorjs/src/testing/shared.ts:23",{"_index":930,"title":{},"body":{"classes/MockEditorJS.html":{}}}],["editorjs/src/testing/shared.ts:24",{"_index":931,"title":{},"body":{"classes/MockEditorJS.html":{}}}],["editorjs/src/testing/shared.ts:25",{"_index":928,"title":{},"body":{"classes/MockEditorJS.html":{}}}],["editorjs/src/testing/shared.ts:27",{"_index":926,"title":{},"body":{"classes/MockEditorJS.html":{}}}],["editorjs/src/testing/shared.ts:5",{"_index":1839,"title":{},"body":{"classes/TestClass.html":{}}}],["editorjs/src/testing/shared.ts:7",{"_index":1840,"title":{},"body":{"classes/TestClass.html":{}}}],["editorjs@1.2.0",{"_index":1878,"title":{},"body":{"changelog.html":{}}}],["editorjs@1.3.2",{"_index":1867,"title":{},"body":{"changelog.html":{}}}],["editorjs@2.0.0",{"_index":1853,"title":{},"body":{"changelog.html":{}}}],["editorjs](http://editorjs.io",{"_index":1488,"title":{},"body":{"modules/NgxEditorJSModule.html":{}}}],["editorjs_form_value_accessor",{"_index":991,"title":{},"body":{"components/NgxEditorJSBaseComponent.html":{},"miscellaneous/variables.html":{}}}],["editorjs_material_field_control",{"_index":628,"title":{},"body":{"interfaces/EditorJSMaterialForm.html":{},"miscellaneous/variables.html":{}}}],["editorjs_module_import",{"_index":591,"title":{},"body":{"interfaces/EditorJSInstanceConfig.html":{},"interfaces/InjectorApiCallOptions.html":{},"interfaces/InjectorApiCallResponse.html":{},"interfaces/InjectorMethodOption.html":{},"modules/NgxEditorJSModule.html":{},"miscellaneous/variables.html":{}}}],["editorjsactiontypes",{"_index":554,"title":{},"body":{"classes/Changed.html":{},"injectables/NgxEditorJSEffects.html":{},"classes/NotReady.html":{},"classes/Ready.html":{},"classes/SaveEnd.html":{},"classes/SaveStart.html":{},"miscellaneous/enumerations.html":{}}}],["editorjsactiontypes.changed",{"_index":552,"title":{},"body":{"classes/Changed.html":{},"classes/NotReady.html":{},"classes/Ready.html":{},"classes/SaveEnd.html":{},"classes/SaveStart.html":{}}}],["editorjsactiontypes.notready",{"_index":564,"title":{},"body":{"classes/Changed.html":{},"classes/NotReady.html":{},"classes/Ready.html":{},"classes/SaveEnd.html":{},"classes/SaveStart.html":{}}}],["editorjsactiontypes.ready",{"_index":565,"title":{},"body":{"classes/Changed.html":{},"classes/NotReady.html":{},"classes/Ready.html":{},"classes/SaveEnd.html":{},"classes/SaveStart.html":{}}}],["editorjsactiontypes.saveend",{"_index":563,"title":{},"body":{"classes/Changed.html":{},"classes/NotReady.html":{},"classes/Ready.html":{},"classes/SaveEnd.html":{},"classes/SaveStart.html":{}}}],["editorjsactiontypes.savestart",{"_index":560,"title":{},"body":{"classes/Changed.html":{},"classes/NotReady.html":{},"classes/Ready.html":{},"classes/SaveEnd.html":{},"classes/SaveStart.html":{}}}],["editorjsbasecomponent",{"_index":2286,"title":{},"body":{"additional-documentation/tinynodes-library-docs/ngx-editorjs-readme/ngx-editorjs-changelog.html":{}}}],["editorjschange",{"_index":536,"title":{"interfaces/EditorJSChange.html":{}},"body":{"interfaces/BlocksMap.html":{},"interfaces/ChangeMap.html":{},"interfaces/EditorJSChange.html":{},"interfaces/EditorMap.html":{},"components/NgxEditorJSBaseComponent.html":{},"components/NgxEditorJSComponent.html":{},"injectables/NgxEditorJSInstanceService.html":{},"interfaces/ReadyMap.html":{},"interfaces/SavedMap.html":{}}}],["editorjsinstance",{"_index":593,"title":{},"body":{"interfaces/EditorJSInstanceConfig.html":{},"interfaces/InjectorApiCallOptions.html":{},"interfaces/InjectorApiCallResponse.html":{},"interfaces/InjectorMethodOption.html":{},"injectables/NgxEditorJSInstanceService.html":{},"modules/NgxEditorJSModule.html":{},"miscellaneous/variables.html":{}}}],["editorjsinstanceconfig",{"_index":576,"title":{"interfaces/EditorJSInstanceConfig.html":{}},"body":{"interfaces/EditorJSInstanceConfig.html":{},"interfaces/InjectorApiCallOptions.html":{},"interfaces/InjectorApiCallResponse.html":{},"interfaces/InjectorMethodOption.html":{},"injectables/NgxEditorJSInstanceService.html":{}}}],["editorjsmaterialform",{"_index":605,"title":{"interfaces/EditorJSMaterialForm.html":{}},"body":{"interfaces/EditorJSMaterialForm.html":{}}}],["editorjsplugin",{"_index":2317,"title":{},"body":{"additional-documentation/tinynodes-library-docs/ngx-editorjs-readme/ngx-editorjs-changelog.html":{}}}],["editormap",{"_index":529,"title":{"interfaces/EditorMap.html":{}},"body":{"interfaces/BlocksMap.html":{},"interfaces/ChangeMap.html":{},"interfaces/EditorJSChange.html":{},"interfaces/EditorMap.html":{},"injectables/NgxEditorJSInstanceService.html":{},"interfaces/ReadyMap.html":{},"interfaces/SavedMap.html":{}}}],["editorservice",{"_index":761,"title":{},"body":{"components/FormContainerComponent.html":{},"directives/NgxEditorJSDirective.html":{},"injectables/NgxEditorJSEffects.html":{},"components/PageContainerComponent.html":{}}}],["edits",{"_index":2027,"title":{},"body":{"contributing.html":{}}}],["effect",{"_index":1049,"title":{},"body":{"components/NgxEditorJSBaseComponent.html":{},"components/NgxEditorJSComponent.html":{},"injectables/NgxEditorJSEffects.html":{}}}],["effect({dispatch",{"_index":1318,"title":{},"body":{"injectables/NgxEditorJSEffects.html":{}}}],["effects",{"_index":1611,"title":{},"body":{"modules/NgxEditorjsNgrxModule.html":{}}}],["effects](https://ngrx.io/guide/effects",{"_index":1613,"title":{},"body":{"modules/NgxEditorjsNgrxModule.html":{}}}],["effectsmodule",{"_index":1612,"title":{},"body":{"modules/NgxEditorjsNgrxModule.html":{}}}],["effectsmodule.forfeature",{"_index":1614,"title":{},"body":{"modules/NgxEditorjsNgrxModule.html":{}}}],["el",{"_index":1223,"title":{},"body":{"directives/NgxEditorJSDirective.html":{}}}],["electronic",{"_index":2006,"title":{},"body":{"contributing.html":{}}}],["element",{"_index":191,"title":{},"body":{"components/AppContainerComponent.html":{},"interfaces/EditorJSMaterialForm.html":{},"components/FormContainerComponent.html":{},"components/HomePageComponent.html":{},"components/NavBarComponent.html":{},"components/NgxEditorJSBaseComponent.html":{},"components/NgxEditorJSComponent.html":{},"interfaces/NgxEditorJSConfig.html":{},"components/NgxEditorJSDemoHomeComponent.html":{},"components/NgxEditorJSDemoInfoComponent.html":{},"directives/NgxEditorJSDirective.html":{},"interfaces/NgxEditorJSModuleConfig.html":{},"components/PageContainerComponent.html":{},"components/SidebarComponent.html":{},"index.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-readme.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-readme/ngx-editorjs-changelog.html":{}}}],["elementref",{"_index":1221,"title":{},"body":{"directives/NgxEditorJSDirective.html":{}}}],["elements",{"_index":525,"title":{},"body":{"interfaces/BlocksMap.html":{},"interfaces/ChangeMap.html":{},"interfaces/EditorJSChange.html":{},"interfaces/EditorMap.html":{},"interfaces/ReadyMap.html":{},"interfaces/SavedMap.html":{}}}],["email",{"_index":1913,"title":{},"body":{"contributing.html":{}}}],["emits",{"_index":1038,"title":{},"body":{"components/NgxEditorJSBaseComponent.html":{},"components/NgxEditorJSComponent.html":{},"directives/NgxEditorJSDirective.html":{}}}],["emitters",{"_index":986,"title":{},"body":{"components/NgxEditorJSBaseComponent.html":{}}}],["empathy",{"_index":1987,"title":{},"body":{"contributing.html":{}}}],["empty",{"_index":455,"title":{},"body":{"injectables/ApplicationStore.html":{},"injectables/ApplicationStore-1.html":{},"interfaces/EditorJSMaterialForm.html":{},"components/NgxEditorJSBaseComponent.html":{},"components/NgxEditorJSComponent.html":{},"directives/NgxEditorJSDirective.html":{}}}],["empty(empty",{"_index":679,"title":{},"body":{"interfaces/EditorJSMaterialForm.html":{}}}],["enable",{"_index":775,"title":{},"body":{"components/FormContainerComponent.html":{}}}],["enableautosave",{"_index":754,"title":{},"body":{"components/FormContainerComponent.html":{}}}],["enableautosave(autosavetime",{"_index":773,"title":{},"body":{"components/FormContainerComponent.html":{}}}],["enabled",{"_index":849,"title":{},"body":{"components/FormContainerComponent.html":{}}}],["enablelongstacktrace",{"_index":964,"title":{},"body":{"injectables/MockNgZone.html":{}}}],["enables",{"_index":881,"title":{},"body":{"components/FormContainerComponent.html":{}}}],["end",{"_index":558,"title":{},"body":{"classes/Changed.html":{},"classes/NotReady.html":{},"classes/Ready.html":{},"classes/SaveEnd.html":{},"classes/SaveStart.html":{},"contributing.html":{},"miscellaneous/enumerations.html":{}}}],["enforce",{"_index":2081,"title":{},"body":{"contributing.html":{}}}],["enforcement",{"_index":2058,"title":{},"body":{"contributing.html":{}}}],["ensure",{"_index":1920,"title":{},"body":{"contributing.html":{}}}],["enter",{"_index":854,"title":{},"body":{"components/FormContainerComponent.html":{}}}],["entire",{"_index":1858,"title":{},"body":{"changelog.html":{}}}],["entity",{"_index":1734,"title":{},"body":{"injectables/PagesService.html":{}}}],["entitystate",{"_index":1739,"title":{},"body":{"interfaces/PagesState.html":{},"injectables/PagesStore.html":{}}}],["entitystore",{"_index":1740,"title":{},"body":{"interfaces/PagesState.html":{},"injectables/PagesStore.html":{}}}],["entrycomponents",{"_index":1582,"title":{},"body":{"modules/NgxEditorjsDemoModule.html":{}}}],["enum",{"_index":443,"title":{},"body":{"interfaces/ApplicationState.html":{},"interfaces/ApplicationState-1.html":{},"classes/Changed.html":{},"interfaces/DemoData.html":{},"interfaces/DemoData-1.html":{},"interfaces/NgxEditorJSDemo.html":{},"interfaces/NgxEditorJSDemo-1.html":{},"interfaces/NgxEditorJSDemoData.html":{},"interfaces/NgxEditorJSDemoData-1.html":{},"classes/NotReady.html":{},"classes/Ready.html":{},"classes/SaveEnd.html":{},"classes/SaveStart.html":{},"interfaces/TinynodeDemos.html":{},"interfaces/TinynodeDemos-1.html":{},"miscellaneous/enumerations.html":{}}}],["enumerations",{"_index":2123,"title":{"miscellaneous/enumerations.html":{}},"body":{"miscellaneous/enumerations.html":{}}}],["environment",{"_index":276,"title":{},"body":{"modules/AppModule.html":{},"contributing.html":{},"miscellaneous/variables.html":{}}}],["environment.production",{"_index":295,"title":{},"body":{"modules/AppModule.html":{}}}],["environments/environment",{"_index":277,"title":{},"body":{"modules/AppModule.html":{}}}],["error",{"_index":647,"title":{},"body":{"interfaces/EditorJSMaterialForm.html":{},"injectables/NgxEditorJSService.html":{}}}],["error('error",{"_index":1291,"title":{},"body":{"directives/NgxEditorJSDirective.html":{}}}],["error(`no",{"_index":1414,"title":{},"body":{"injectables/NgxEditorJSInstanceService.html":{}}}],["errorstate",{"_index":648,"title":{},"body":{"interfaces/EditorJSMaterialForm.html":{}}}],["etc",{"_index":408,"title":{},"body":{"interfaces/ApplicationData.html":{},"interfaces/ApplicationData-1.html":{},"interfaces/MenuGroup.html":{},"interfaces/MenuGroup-1.html":{},"interfaces/MenuItem.html":{},"interfaces/MenuItem-1.html":{},"todo.html":{}}}],["ethnicity",{"_index":1958,"title":{},"body":{"contributing.html":{}}}],["event",{"_index":133,"title":{},"body":{"components/AppContainerComponent.html":{},"interfaces/BlocksMap.html":{},"interfaces/ChangeMap.html":{},"interfaces/EditorJSChange.html":{},"interfaces/EditorJSMaterialForm.html":{},"interfaces/EditorMap.html":{},"components/NavBarComponent.html":{},"components/NgxEditorJSBaseComponent.html":{},"components/NgxEditorJSComponent.html":{},"interfaces/ReadyMap.html":{},"interfaces/SavedMap.html":{},"contributing.html":{},"license.html":{}}}],["eventemitter",{"_index":768,"title":{},"body":{"components/FormContainerComponent.html":{},"injectables/MockNgZone.html":{},"components/NavBarComponent.html":{},"components/NgxEditorJSBaseComponent.html":{},"components/NgxEditorJSComponent.html":{},"directives/NgxEditorJSDirective.html":{}}}],["eventemitter(false",{"_index":963,"title":{},"body":{"injectables/MockNgZone.html":{}}}],["events",{"_index":1058,"title":{},"body":{"components/NgxEditorJSBaseComponent.html":{},"components/NgxEditorJSComponent.html":{},"injectables/NgxEditorJSInstanceService.html":{},"index.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-readme.html":{}}}],["everyone",{"_index":1953,"title":{},"body":{"contributing.html":{}}}],["example",{"_index":635,"title":{},"body":{"interfaces/EditorJSMaterialForm.html":{},"components/NgxEditorJSComponent.html":{},"components/NgxEditorJSDemoHomeComponent.html":{},"directives/NgxEditorJSDirective.html":{},"changelog.html":{},"index.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-readme.html":{}}}],["examples",{"_index":1931,"title":{},"body":{"contributing.html":{}}}],["exclude",{"_index":1510,"title":{},"body":{"injectables/NgxEditorJSPluginService.html":{}}}],["exclude.includes(key",{"_index":1527,"title":{},"body":{"injectables/NgxEditorJSPluginService.html":{}}}],["existing",{"_index":1254,"title":{},"body":{"directives/NgxEditorJSDirective.html":{}}}],["exiting",{"_index":1862,"title":{},"body":{"changelog.html":{}}}],["expanded",{"_index":1893,"title":{},"body":{"changelog.html":{}}}],["expected",{"_index":2018,"title":{},"body":{"contributing.html":{}}}],["experience",{"_index":1952,"title":{},"body":{"contributing.html":{}}}],["experiences",{"_index":1979,"title":{},"body":{"contributing.html":{}}}],["explicit",{"_index":2008,"title":{},"body":{"contributing.html":{}}}],["export",{"_index":109,"title":{},"body":{"components/AppContainerComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"injectables/AppService.html":{},"injectables/AppService-1.html":{},"interfaces/ApplicationData.html":{},"interfaces/ApplicationData-1.html":{},"modules/ApplicationDataModule.html":{},"injectables/ApplicationQuery.html":{},"injectables/ApplicationQuery-1.html":{},"interfaces/ApplicationState.html":{},"interfaces/ApplicationState-1.html":{},"injectables/ApplicationStore.html":{},"injectables/ApplicationStore-1.html":{},"interfaces/BasePlugin.html":{},"interfaces/BasePlugin-1.html":{},"interfaces/Block.html":{},"interfaces/BlocksMap.html":{},"interfaces/ChangeMap.html":{},"classes/Changed.html":{},"interfaces/CreateEditorJSOptions.html":{},"interfaces/DemoData.html":{},"interfaces/DemoData-1.html":{},"interfaces/EditorJSChange.html":{},"interfaces/EditorJSInstanceConfig.html":{},"interfaces/EditorJSMaterialForm.html":{},"interfaces/EditorMap.html":{},"components/FormContainerComponent.html":{},"interfaces/Header.html":{},"interfaces/HeaderBlock.html":{},"components/HomePageComponent.html":{},"interfaces/Image.html":{},"interfaces/ImageBlock.html":{},"interfaces/InjectorApiCallOptions.html":{},"interfaces/InjectorApiCallResponse.html":{},"interfaces/InjectorMethodOption.html":{},"interfaces/List.html":{},"interfaces/ListBlock.html":{},"modules/MaterialModule.html":{},"interfaces/MenuGroup.html":{},"interfaces/MenuGroup-1.html":{},"interfaces/MenuItem.html":{},"interfaces/MenuItem-1.html":{},"classes/MockEditorJS.html":{},"injectables/MockNgZone.html":{},"classes/MockPlugin.html":{},"components/NavBarComponent.html":{},"components/NgxEditorJSBaseComponent.html":{},"components/NgxEditorJSComponent.html":{},"interfaces/NgxEditorJSConfig.html":{},"interfaces/NgxEditorJSDemo.html":{},"interfaces/NgxEditorJSDemo-1.html":{},"interfaces/NgxEditorJSDemoData.html":{},"interfaces/NgxEditorJSDemoData-1.html":{},"components/NgxEditorJSDemoHomeComponent.html":{},"components/NgxEditorJSDemoInfoComponent.html":{},"directives/NgxEditorJSDirective.html":{},"injectables/NgxEditorJSEffects.html":{},"injectables/NgxEditorJSInstanceService.html":{},"modules/NgxEditorJSModule.html":{},"interfaces/NgxEditorJSModuleConfig.html":{},"injectables/NgxEditorJSPluginService.html":{},"injectables/NgxEditorJSService.html":{},"modules/NgxEditorjsDemoModule.html":{},"modules/NgxEditorjsNgrxModule.html":{},"modules/NgxEditorjsPluginsModule.html":{},"modules/NgxHideableHeaderDemoModule.html":{},"modules/NgxTinynodesCoreMaterialModule.html":{},"modules/NgxTinynodesCoreModule.html":{},"classes/NotReady.html":{},"interfaces/Page.html":{},"interfaces/PageBlock.html":{},"components/PageContainerComponent.html":{},"modules/PageStoreModule.html":{},"injectables/PagesQuery.html":{},"injectables/PagesService.html":{},"interfaces/PagesState.html":{},"injectables/PagesStore.html":{},"interfaces/Paragraph.html":{},"interfaces/ParagraphBlock.html":{},"injectables/PluginCode.html":{},"modules/PluginCodeModule.html":{},"interfaces/PluginConfig.html":{},"interfaces/PluginConfig-1.html":{},"injectables/PluginHeader.html":{},"modules/PluginHeaderModule.html":{},"injectables/PluginImage.html":{},"modules/PluginImageModule.html":{},"injectables/PluginLink.html":{},"modules/PluginLinkModule.html":{},"injectables/PluginList.html":{},"modules/PluginListModule.html":{},"injectables/PluginMarker.html":{},"modules/PluginMarkerModule.html":{},"injectables/PluginParagraph.html":{},"modules/PluginParagraphModule.html":{},"injectables/PluginSimpleImage.html":{},"modules/PluginSimpleImageModule.html":{},"classes/Ready.html":{},"interfaces/ReadyMap.html":{},"classes/SaveEnd.html":{},"classes/SaveStart.html":{},"interfaces/SavedMap.html":{},"components/SidebarComponent.html":{},"interfaces/Tag.html":{},"classes/TestClass.html":{},"interfaces/TinynodeDemos.html":{},"interfaces/TinynodeDemos-1.html":{},"interfaces/ToolSettingsMap.html":{},"interfaces/ToolSettingsMap-1.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-readme.html":{}}}],["exported",{"_index":480,"title":{},"body":{"interfaces/BasePlugin.html":{},"interfaces/BasePlugin-1.html":{},"interfaces/PluginConfig.html":{},"interfaces/PluginConfig-1.html":{},"interfaces/ToolSettingsMap.html":{},"interfaces/ToolSettingsMap-1.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-readme/ngx-editorjs-changelog.html":{}}}],["exports",{"_index":236,"title":{},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"modules/ApplicationDataModule.html":{},"modules/MaterialModule.html":{},"modules/NgxEditorJSModule.html":{},"modules/NgxEditorjsDemoModule.html":{},"modules/NgxEditorjsNgrxModule.html":{},"modules/NgxEditorjsPluginsModule.html":{},"modules/NgxTinynodesCoreMaterialModule.html":{},"modules/NgxTinynodesCoreModule.html":{},"modules/PageStoreModule.html":{},"modules/PluginCodeModule.html":{},"modules/PluginHeaderModule.html":{},"modules/PluginImageModule.html":{},"modules/PluginLinkModule.html":{},"modules/PluginListModule.html":{},"modules/PluginMarkerModule.html":{},"modules/PluginParagraphModule.html":{},"modules/PluginSimpleImageModule.html":{},"changelog.html":{},"index.html":{},"overview.html":{}}}],["expose",{"_index":2227,"title":{},"body":{"todo.html":{}}}],["exposed",{"_index":1926,"title":{},"body":{"contributing.html":{}}}],["express",{"_index":2194,"title":{},"body":{"license.html":{}}}],["expression",{"_index":1961,"title":{},"body":{"contributing.html":{}}}],["extendable",{"_index":2272,"title":{},"body":{"additional-documentation/tinynodes-library-docs/ngx-editorjs-readme.html":{}}}],["extending",{"_index":477,"title":{},"body":{"interfaces/BasePlugin.html":{},"interfaces/BasePlugin-1.html":{},"interfaces/PluginConfig.html":{},"interfaces/PluginConfig-1.html":{},"interfaces/ToolSettingsMap.html":{},"interfaces/ToolSettingsMap-1.html":{}}}],["extends",{"_index":430,"title":{},"body":{"injectables/ApplicationQuery.html":{},"injectables/ApplicationQuery-1.html":{},"interfaces/ApplicationState.html":{},"interfaces/ApplicationState-1.html":{},"injectables/ApplicationStore.html":{},"injectables/ApplicationStore-1.html":{},"interfaces/Block.html":{},"interfaces/DemoData.html":{},"interfaces/DemoData-1.html":{},"interfaces/EditorJSInstanceConfig.html":{},"interfaces/EditorJSMaterialForm.html":{},"interfaces/Header.html":{},"interfaces/HeaderBlock.html":{},"interfaces/Image.html":{},"interfaces/ImageBlock.html":{},"interfaces/InjectorApiCallOptions.html":{},"interfaces/InjectorApiCallResponse.html":{},"interfaces/InjectorMethodOption.html":{},"interfaces/List.html":{},"interfaces/ListBlock.html":{},"injectables/MockNgZone.html":{},"components/NgxEditorJSComponent.html":{},"interfaces/NgxEditorJSDemo.html":{},"interfaces/NgxEditorJSDemo-1.html":{},"interfaces/NgxEditorJSDemoData.html":{},"interfaces/NgxEditorJSDemoData-1.html":{},"interfaces/Page.html":{},"interfaces/PageBlock.html":{},"injectables/PagesQuery.html":{},"interfaces/PagesState.html":{},"injectables/PagesStore.html":{},"interfaces/Paragraph.html":{},"interfaces/ParagraphBlock.html":{},"interfaces/Tag.html":{},"interfaces/TinynodeDemos.html":{},"interfaces/TinynodeDemos-1.html":{}}}],["extra",{"_index":1346,"title":{},"body":{"injectables/NgxEditorJSInstanceService.html":{},"injectables/NgxEditorJSService.html":{}}}],["face",{"_index":2083,"title":{},"body":{"contributing.html":{}}}],["factory",{"_index":1166,"title":{},"body":{"interfaces/NgxEditorJSConfig.html":{},"modules/NgxEditorJSModule.html":{},"interfaces/NgxEditorJSModuleConfig.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-readme.html":{}}}],["failed",{"_index":2313,"title":{},"body":{"additional-documentation/tinynodes-library-docs/ngx-editorjs-readme/ngx-editorjs-changelog.html":{}}}],["fair",{"_index":2020,"title":{},"body":{"contributing.html":{}}}],["faith",{"_index":2082,"title":{},"body":{"contributing.html":{}}}],["falls",{"_index":1268,"title":{},"body":{"directives/NgxEditorJSDirective.html":{}}}],["false",{"_index":458,"title":{},"body":{"injectables/ApplicationStore.html":{},"injectables/ApplicationStore-1.html":{},"interfaces/CreateEditorJSOptions.html":{},"interfaces/EditorJSInstanceConfig.html":{},"interfaces/EditorJSMaterialForm.html":{},"components/FormContainerComponent.html":{},"interfaces/InjectorApiCallOptions.html":{},"interfaces/InjectorApiCallResponse.html":{},"interfaces/InjectorMethodOption.html":{},"injectables/MockNgZone.html":{},"interfaces/NgxEditorJSConfig.html":{},"injectables/NgxEditorJSEffects.html":{},"injectables/NgxEditorJSInstanceService.html":{},"interfaces/NgxEditorJSModuleConfig.html":{},"injectables/NgxEditorJSService.html":{},"miscellaneous/variables.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-readme.html":{}}}],["fb",{"_index":762,"title":{},"body":{"components/FormContainerComponent.html":{}}}],["feature",{"_index":880,"title":{},"body":{"components/FormContainerComponent.html":{},"components/NgxEditorJSBaseComponent.html":{},"todo.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-readme.html":{}}}],["features",{"_index":914,"title":{},"body":{"modules/MaterialModule.html":{},"modules/NgxEditorJSModule.html":{},"modules/NgxTinynodesCoreModule.html":{},"changelog.html":{},"index.html":{}}}],["field",{"_index":627,"title":{},"body":{"interfaces/EditorJSMaterialForm.html":{},"components/FormContainerComponent.html":{},"components/NgxEditorJSBaseComponent.html":{},"components/NgxEditorJSComponent.html":{},"changelog.html":{},"index.html":{},"miscellaneous/variables.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-readme.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-readme/ngx-editorjs-changelog.html":{}}}],["field'},{'name",{"_index":219,"title":{},"body":{"components/AppContainerComponent.html":{},"components/FormContainerComponent.html":{},"components/HomePageComponent.html":{},"components/NavBarComponent.html":{},"components/NgxEditorJSBaseComponent.html":{},"components/NgxEditorJSComponent.html":{},"components/NgxEditorJSDemoHomeComponent.html":{},"components/NgxEditorJSDemoInfoComponent.html":{},"components/PageContainerComponent.html":{},"components/SidebarComponent.html":{}}}],["field.component",{"_index":1482,"title":{},"body":{"modules/NgxEditorJSModule.html":{}}}],["field.component.html",{"_index":636,"title":{},"body":{"interfaces/EditorJSMaterialForm.html":{}}}],["field.component.scss",{"_index":637,"title":{},"body":{"interfaces/EditorJSMaterialForm.html":{}}}],["field.component.ts",{"_index":608,"title":{},"body":{"interfaces/EditorJSMaterialForm.html":{},"miscellaneous/variables.html":{}}}],["field/editorjs",{"_index":607,"title":{},"body":{"interfaces/EditorJSMaterialForm.html":{},"modules/NgxEditorJSModule.html":{},"miscellaneous/variables.html":{}}}],["file",{"_index":9,"title":{},"body":{"components/AppContainerComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"injectables/AppService.html":{},"injectables/AppService-1.html":{},"interfaces/ApplicationData.html":{},"interfaces/ApplicationData-1.html":{},"modules/ApplicationDataModule.html":{},"injectables/ApplicationQuery.html":{},"injectables/ApplicationQuery-1.html":{},"interfaces/ApplicationState.html":{},"interfaces/ApplicationState-1.html":{},"injectables/ApplicationStore.html":{},"injectables/ApplicationStore-1.html":{},"interfaces/BasePlugin.html":{},"interfaces/BasePlugin-1.html":{},"interfaces/Block.html":{},"interfaces/BlocksMap.html":{},"interfaces/ChangeMap.html":{},"classes/Changed.html":{},"interfaces/CreateEditorJSOptions.html":{},"interfaces/DemoData.html":{},"interfaces/DemoData-1.html":{},"interfaces/EditorJSChange.html":{},"interfaces/EditorJSInstanceConfig.html":{},"interfaces/EditorJSMaterialForm.html":{},"interfaces/EditorMap.html":{},"components/FormContainerComponent.html":{},"interfaces/Header.html":{},"interfaces/HeaderBlock.html":{},"components/HomePageComponent.html":{},"interfaces/Image.html":{},"interfaces/ImageBlock.html":{},"interfaces/InjectorApiCallOptions.html":{},"interfaces/InjectorApiCallResponse.html":{},"interfaces/InjectorMethodOption.html":{},"interfaces/List.html":{},"interfaces/ListBlock.html":{},"modules/MaterialModule.html":{},"interfaces/MenuGroup.html":{},"interfaces/MenuGroup-1.html":{},"interfaces/MenuItem.html":{},"interfaces/MenuItem-1.html":{},"classes/MockEditorJS.html":{},"injectables/MockNgZone.html":{},"classes/MockPlugin.html":{},"components/NavBarComponent.html":{},"components/NgxEditorJSBaseComponent.html":{},"components/NgxEditorJSComponent.html":{},"interfaces/NgxEditorJSConfig.html":{},"interfaces/NgxEditorJSDemo.html":{},"interfaces/NgxEditorJSDemo-1.html":{},"interfaces/NgxEditorJSDemoData.html":{},"interfaces/NgxEditorJSDemoData-1.html":{},"components/NgxEditorJSDemoHomeComponent.html":{},"components/NgxEditorJSDemoInfoComponent.html":{},"directives/NgxEditorJSDirective.html":{},"injectables/NgxEditorJSEffects.html":{},"injectables/NgxEditorJSInstanceService.html":{},"modules/NgxEditorJSModule.html":{},"interfaces/NgxEditorJSModuleConfig.html":{},"injectables/NgxEditorJSPluginService.html":{},"injectables/NgxEditorJSService.html":{},"modules/NgxEditorjsDemoModule.html":{},"modules/NgxEditorjsNgrxModule.html":{},"modules/NgxEditorjsPluginsModule.html":{},"modules/NgxHideableHeaderDemoModule.html":{},"modules/NgxTinynodesCoreMaterialModule.html":{},"modules/NgxTinynodesCoreModule.html":{},"classes/NotReady.html":{},"interfaces/Page.html":{},"interfaces/PageBlock.html":{},"components/PageContainerComponent.html":{},"modules/PageStoreModule.html":{},"injectables/PagesQuery.html":{},"injectables/PagesService.html":{},"interfaces/PagesState.html":{},"injectables/PagesStore.html":{},"interfaces/Paragraph.html":{},"interfaces/ParagraphBlock.html":{},"injectables/PluginCode.html":{},"modules/PluginCodeModule.html":{},"interfaces/PluginConfig.html":{},"interfaces/PluginConfig-1.html":{},"injectables/PluginHeader.html":{},"modules/PluginHeaderModule.html":{},"injectables/PluginImage.html":{},"modules/PluginImageModule.html":{},"injectables/PluginLink.html":{},"modules/PluginLinkModule.html":{},"injectables/PluginList.html":{},"modules/PluginListModule.html":{},"injectables/PluginMarker.html":{},"modules/PluginMarkerModule.html":{},"injectables/PluginParagraph.html":{},"modules/PluginParagraphModule.html":{},"injectables/PluginSimpleImage.html":{},"modules/PluginSimpleImageModule.html":{},"classes/Ready.html":{},"interfaces/ReadyMap.html":{},"classes/SaveEnd.html":{},"classes/SaveStart.html":{},"interfaces/SavedMap.html":{},"components/SidebarComponent.html":{},"interfaces/Tag.html":{},"classes/TestClass.html":{},"interfaces/TinynodeDemos.html":{},"interfaces/TinynodeDemos-1.html":{},"interfaces/ToolSettingsMap.html":{},"interfaces/ToolSettingsMap-1.html":{},"contributing.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-readme/ngx-editorjs-changelog.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-plugins-readme.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-plugins-readme/ngx-editorjs-plugins-changelog.html":{}}}],["filed",{"_index":1889,"title":{},"body":{"changelog.html":{}}}],["files",{"_index":1932,"title":{},"body":{"contributing.html":{},"license.html":{},"additional-documentation/tinynodes-library-docs.html":{}}}],["filter",{"_index":356,"title":{},"body":{"injectables/AppService.html":{},"injectables/AppService-1.html":{},"components/FormContainerComponent.html":{},"injectables/NgxEditorJSInstanceService.html":{},"injectables/NgxEditorJSService.html":{},"components/PageContainerComponent.html":{}}}],["filter(([key",{"_index":1526,"title":{},"body":{"injectables/NgxEditorJSPluginService.html":{}}}],["filter((data",{"_index":375,"title":{},"body":{"injectables/AppService.html":{}}}],["filter(data",{"_index":395,"title":{},"body":{"injectables/AppService-1.html":{}}}],["filter(menus",{"_index":382,"title":{},"body":{"injectables/AppService.html":{},"injectables/AppService-1.html":{}}}],["finaltools",{"_index":1531,"title":{},"body":{"injectables/NgxEditorJSPluginService.html":{}}}],["find",{"_index":908,"title":{},"body":{"components/HomePageComponent.html":{},"changelog.html":{},"index.html":{},"additional-documentation/tinynodes-library-docs.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-readme.html":{}}}],["find(key",{"_index":1286,"title":{},"body":{"directives/NgxEditorJSDirective.html":{}}}],["first",{"_index":1019,"title":{},"body":{"components/NgxEditorJSBaseComponent.html":{},"components/NgxEditorJSComponent.html":{},"interfaces/NgxEditorJSConfig.html":{},"directives/NgxEditorJSDirective.html":{},"injectables/NgxEditorJSInstanceService.html":{},"interfaces/NgxEditorJSModuleConfig.html":{},"injectables/NgxEditorJSService.html":{},"changelog.html":{},"contributing.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-readme.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-readme/ngx-editorjs-changelog.html":{}}}],["fitness",{"_index":2199,"title":{},"body":{"license.html":{}}}],["fixed",{"_index":2291,"title":{},"body":{"additional-documentation/tinynodes-library-docs/ngx-editorjs-readme/ngx-editorjs-changelog.html":{}}}],["fixes",{"_index":2311,"title":{},"body":{"additional-documentation/tinynodes-library-docs/ngx-editorjs-readme/ngx-editorjs-changelog.html":{}}}],["flex",{"_index":887,"title":{},"body":{"components/FormContainerComponent.html":{},"components/NgxEditorJSComponent.html":{},"components/PageContainerComponent.html":{}}}],["flexlayoutmodule",{"_index":259,"title":{},"body":{"modules/AppModule.html":{}}}],["float",{"_index":687,"title":{},"body":{"interfaces/EditorJSMaterialForm.html":{}}}],["fm",{"_index":703,"title":{},"body":{"interfaces/EditorJSMaterialForm.html":{},"components/NgxEditorJSBaseComponent.html":{},"components/NgxEditorJSComponent.html":{}}}],["fn",{"_index":959,"title":{},"body":{"injectables/MockNgZone.html":{},"components/NgxEditorJSBaseComponent.html":{},"components/NgxEditorJSComponent.html":{}}}],["focus",{"_index":704,"title":{},"body":{"interfaces/EditorJSMaterialForm.html":{},"components/FormContainerComponent.html":{},"components/NgxEditorJSBaseComponent.html":{},"components/NgxEditorJSComponent.html":{},"interfaces/NgxEditorJSConfig.html":{},"directives/NgxEditorJSDirective.html":{},"interfaces/NgxEditorJSModuleConfig.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-readme.html":{}}}],["focused",{"_index":658,"title":{},"body":{"interfaces/EditorJSMaterialForm.html":{},"components/NgxEditorJSBaseComponent.html":{},"components/NgxEditorJSComponent.html":{},"directives/NgxEditorJSDirective.html":{},"components/PageContainerComponent.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-readme.html":{}}}],["focused(focused",{"_index":662,"title":{},"body":{"interfaces/EditorJSMaterialForm.html":{}}}],["focusing",{"_index":1984,"title":{},"body":{"contributing.html":{}}}],["focusmonitor",{"_index":610,"title":{},"body":{"interfaces/EditorJSMaterialForm.html":{},"components/NgxEditorJSBaseComponent.html":{},"components/NgxEditorJSComponent.html":{}}}],["folder",{"_index":2151,"title":{},"body":{"index.html":{}}}],["follow",{"_index":1917,"title":{},"body":{"contributing.html":{}}}],["following",{"_index":2184,"title":{},"body":{"license.html":{}}}],["for_root_options_token",{"_index":1167,"title":{},"body":{"interfaces/NgxEditorJSConfig.html":{},"modules/NgxEditorJSModule.html":{},"interfaces/NgxEditorJSModuleConfig.html":{},"miscellaneous/variables.html":{}}}],["foreach(([key",{"_index":1521,"title":{},"body":{"injectables/NgxEditorJSPluginService.html":{}}}],["form",{"_index":198,"title":{},"body":{"components/AppContainerComponent.html":{},"components/FormContainerComponent.html":{},"components/HomePageComponent.html":{},"components/NavBarComponent.html":{},"components/NgxEditorJSBaseComponent.html":{},"components/NgxEditorJSComponent.html":{},"components/NgxEditorJSDemoHomeComponent.html":{},"components/NgxEditorJSDemoInfoComponent.html":{},"directives/NgxEditorJSDirective.html":{},"components/PageContainerComponent.html":{},"components/SidebarComponent.html":{},"changelog.html":{},"index.html":{},"miscellaneous/variables.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-readme.html":{}}}],["format",{"_index":2279,"title":{},"body":{"additional-documentation/tinynodes-library-docs/ngx-editorjs-readme/ngx-editorjs-changelog.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-plugins-readme/ngx-editorjs-plugins-changelog.html":{}}}],["formatted",{"_index":1674,"title":{},"body":{"components/PageContainerComponent.html":{}}}],["formbuilder",{"_index":763,"title":{},"body":{"components/FormContainerComponent.html":{}}}],["formcontainercomponent",{"_index":196,"title":{"components/FormContainerComponent.html":{}},"body":{"components/AppContainerComponent.html":{},"components/FormContainerComponent.html":{},"components/HomePageComponent.html":{},"components/NavBarComponent.html":{},"components/NgxEditorJSBaseComponent.html":{},"components/NgxEditorJSComponent.html":{},"components/NgxEditorJSDemoHomeComponent.html":{},"components/NgxEditorJSDemoInfoComponent.html":{},"modules/NgxEditorjsDemoModule.html":{},"components/PageContainerComponent.html":{},"components/SidebarComponent.html":{},"overview.html":{},"miscellaneous/variables.html":{}}}],["formcontrol",{"_index":787,"title":{},"body":{"components/FormContainerComponent.html":{},"components/NgxEditorJSBaseComponent.html":{},"components/NgxEditorJSComponent.html":{},"directives/NgxEditorJSDirective.html":{}}}],["forms",{"_index":1013,"title":{},"body":{"components/NgxEditorJSBaseComponent.html":{},"components/NgxEditorJSComponent.html":{},"components/NgxEditorJSDemoHomeComponent.html":{},"directives/NgxEditorJSDirective.html":{},"changelog.html":{},"index.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-readme.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-readme/ngx-editorjs-changelog.html":{}}}],["formsmodule",{"_index":1475,"title":{},"body":{"modules/NgxEditorJSModule.html":{}}}],["forroot",{"_index":1466,"title":{},"body":{"modules/NgxEditorJSModule.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-readme.html":{}}}],["forroot(@optional",{"_index":1494,"title":{},"body":{"modules/NgxEditorJSModule.html":{}}}],["forroot(config",{"_index":1468,"title":{},"body":{"modules/NgxEditorJSModule.html":{}}}],["forwardref",{"_index":616,"title":{},"body":{"interfaces/EditorJSMaterialForm.html":{},"components/NgxEditorJSBaseComponent.html":{},"miscellaneous/variables.html":{}}}],["fostering",{"_index":1944,"title":{},"body":{"contributing.html":{}}}],["framework",{"_index":2143,"title":{},"body":{"index.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-readme.html":{}}}],["free",{"_index":1951,"title":{},"body":{"contributing.html":{},"license.html":{}}}],["full",{"_index":312,"title":{},"body":{"modules/AppRoutingModule.html":{},"interfaces/EditorJSMaterialForm.html":{},"index.html":{},"todo.html":{},"miscellaneous/variables.html":{}}}],["fully",{"_index":983,"title":{},"body":{"components/NgxEditorJSBaseComponent.html":{},"index.html":{}}}],["function",{"_index":468,"title":{},"body":{"interfaces/BasePlugin.html":{},"interfaces/BasePlugin-1.html":{},"interfaces/EditorJSInstanceConfig.html":{},"classes/MockEditorJS.html":{},"injectables/MockNgZone.html":{},"components/NgxEditorJSBaseComponent.html":{},"components/NgxEditorJSComponent.html":{},"injectables/NgxEditorJSInstanceService.html":{},"modules/NgxEditorJSModule.html":{},"miscellaneous/functions.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-readme.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-readme/ngx-editorjs-changelog.html":{}}}],["functions",{"_index":425,"title":{"miscellaneous/functions.html":{}},"body":{"modules/ApplicationDataModule.html":{},"miscellaneous/functions.html":{}}}],["furnished",{"_index":2183,"title":{},"body":{"license.html":{}}}],["further",{"_index":2056,"title":{},"body":{"contributing.html":{}}}],["future",{"_index":2273,"title":{},"body":{"additional-documentation/tinynodes-library-docs/ngx-editorjs-readme.html":{}}}],["gender",{"_index":1959,"title":{},"body":{"contributing.html":{}}}],["general",{"_index":2157,"title":{},"body":{"license.html":{},"todo.html":{}}}],["generate",{"_index":2296,"title":{},"body":{"additional-documentation/tinynodes-library-docs/ngx-editorjs-readme/ngx-editorjs-changelog.html":{}}}],["generated",{"_index":2154,"title":{},"body":{"index.html":{},"additional-documentation/tinynodes-library-docs.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-readme/ngx-editorjs-changelog.html":{}}}],["get(key",{"_index":1506,"title":{},"body":{"injectables/NgxEditorJSPluginService.html":{}}}],["getasjson",{"_index":1672,"title":{},"body":{"components/PageContainerComponent.html":{}}}],["getautosave",{"_index":792,"title":{},"body":{"components/FormContainerComponent.html":{}}}],["getblocks",{"_index":797,"title":{},"body":{"components/FormContainerComponent.html":{},"components/PageContainerComponent.html":{}}}],["getdemodata",{"_index":325,"title":{},"body":{"injectables/AppService.html":{},"injectables/AppService-1.html":{}}}],["getdemodata('ngx",{"_index":835,"title":{},"body":{"components/FormContainerComponent.html":{},"components/PageContainerComponent.html":{}}}],["getdemodata(demoname",{"_index":337,"title":{},"body":{"injectables/AppService.html":{},"injectables/AppService-1.html":{}}}],["geteditor",{"_index":1257,"title":{},"body":{"directives/NgxEditorJSDirective.html":{},"injectables/NgxEditorJSInstanceService.html":{},"injectables/NgxEditorJSService.html":{}}}],["geteditor(options",{"_index":1361,"title":{},"body":{"injectables/NgxEditorJSInstanceService.html":{},"injectables/NgxEditorJSService.html":{}}}],["getelement",{"_index":1259,"title":{},"body":{"directives/NgxEditorJSDirective.html":{}}}],["getfocusmonitor",{"_index":995,"title":{},"body":{"components/NgxEditorJSBaseComponent.html":{},"components/NgxEditorJSComponent.html":{}}}],["getfocusmonitor(element",{"_index":1045,"title":{},"body":{"components/NgxEditorJSBaseComponent.html":{},"components/NgxEditorJSComponent.html":{}}}],["getgreeting",{"_index":2244,"title":{},"body":{"miscellaneous/variables.html":{}}}],["gethidden",{"_index":352,"title":{},"body":{"injectables/AppService.html":{},"injectables/AppService-1.html":{}}}],["getispanelopen",{"_index":1195,"title":{},"body":{"components/NgxEditorJSDemoInfoComponent.html":{}}}],["getmainmenu",{"_index":86,"title":{},"body":{"components/AppContainerComponent.html":{}}}],["getmenu",{"_index":326,"title":{},"body":{"injectables/AppService.html":{},"injectables/AppService-1.html":{},"components/FormContainerComponent.html":{},"components/HomePageComponent.html":{},"components/PageContainerComponent.html":{}}}],["getmenu(key",{"_index":344,"title":{},"body":{"injectables/AppService.html":{},"injectables/AppService-1.html":{}}}],["getopensourcemenu",{"_index":92,"title":{},"body":{"components/AppContainerComponent.html":{}}}],["getpages",{"_index":795,"title":{},"body":{"components/FormContainerComponent.html":{},"components/PageContainerComponent.html":{},"injectables/PagesService.html":{}}}],["getplugins",{"_index":1513,"title":{},"body":{"injectables/NgxEditorJSPluginService.html":{}}}],["getprojectsmenu",{"_index":89,"title":{},"body":{"components/AppContainerComponent.html":{}}}],["gets",{"_index":346,"title":{},"body":{"injectables/AppService.html":{},"injectables/AppService-1.html":{},"interfaces/EditorJSMaterialForm.html":{},"components/NgxEditorJSBaseComponent.html":{},"components/NgxEditorJSComponent.html":{},"components/NgxEditorJSDemoInfoComponent.html":{},"directives/NgxEditorJSDirective.html":{}}}],["getservice",{"_index":1261,"title":{},"body":{"directives/NgxEditorJSDirective.html":{}}}],["getsidebarhidden",{"_index":82,"title":{},"body":{"components/AppContainerComponent.html":{}}}],["getters",{"_index":2314,"title":{},"body":{"additional-documentation/tinynodes-library-docs/ngx-editorjs-readme/ngx-editorjs-changelog.html":{}}}],["gettimer",{"_index":996,"title":{},"body":{"components/NgxEditorJSBaseComponent.html":{},"components/NgxEditorJSComponent.html":{}}}],["gettimer(time",{"_index":1052,"title":{},"body":{"components/NgxEditorJSBaseComponent.html":{},"components/NgxEditorJSComponent.html":{}}}],["getting",{"_index":1843,"title":{"changelog.html":{},"contributing.html":{},"index.html":{},"license.html":{},"todo.html":{}},"body":{}}],["gettools",{"_index":1497,"title":{},"body":{"injectables/NgxEditorJSPluginService.html":{}}}],["gettools(exclude",{"_index":1508,"title":{},"body":{"injectables/NgxEditorJSPluginService.html":{}}}],["gettouched",{"_index":1263,"title":{},"body":{"directives/NgxEditorJSDirective.html":{}}}],["github",{"_index":1749,"title":{},"body":{"modules/PluginCodeModule.html":{},"modules/PluginHeaderModule.html":{},"modules/PluginImageModule.html":{},"modules/PluginLinkModule.html":{},"modules/PluginListModule.html":{},"modules/PluginMarkerModule.html":{},"modules/PluginParagraphModule.html":{},"modules/PluginSimpleImageModule.html":{},"additional-documentation/tinynodes-library-docs.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-readme.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-plugins-readme.html":{}}}],["goes",{"_index":1210,"title":{},"body":{"components/NgxEditorJSDemoInfoComponent.html":{}}}],["good",{"_index":1906,"title":{},"body":{"changelog.html":{},"contributing.html":{}}}],["gracefully",{"_index":1980,"title":{},"body":{"contributing.html":{}}}],["granted",{"_index":2162,"title":{},"body":{"license.html":{}}}],["graph",{"_index":2217,"title":{},"body":{"modules.html":{}}}],["group",{"_index":412,"title":{},"body":{"interfaces/ApplicationData.html":{},"interfaces/ApplicationData-1.html":{},"components/FormContainerComponent.html":{},"interfaces/MenuGroup.html":{},"interfaces/MenuGroup-1.html":{},"interfaces/MenuItem.html":{},"interfaces/MenuItem-1.html":{},"components/NgxEditorJSDemoInfoComponent.html":{}}}],["groups",{"_index":400,"title":{},"body":{"interfaces/ApplicationData.html":{},"interfaces/ApplicationData-1.html":{},"interfaces/MenuGroup.html":{},"interfaces/MenuGroup-1.html":{},"interfaces/MenuItem.html":{},"interfaces/MenuItem-1.html":{}}}],["guid",{"_index":1725,"title":{},"body":{"injectables/PagesService.html":{}}}],["hammerjs",{"_index":2113,"title":{},"body":{"dependencies.html":{}}}],["handle",{"_index":1871,"title":{},"body":{"changelog.html":{}}}],["handler",{"_index":429,"title":{},"body":{"injectables/ApplicationQuery.html":{},"injectables/ApplicationQuery-1.html":{}}}],["handles",{"_index":1330,"title":{},"body":{"injectables/NgxEditorJSInstanceService.html":{}}}],["harassing",{"_index":2060,"title":{},"body":{"contributing.html":{}}}],["harassment",{"_index":1950,"title":{},"body":{"contributing.html":{}}}],["harmful",{"_index":2038,"title":{},"body":{"contributing.html":{}}}],["haschanged",{"_index":820,"title":{},"body":{"components/FormContainerComponent.html":{},"components/NgxEditorJSBaseComponent.html":{},"components/NgxEditorJSComponent.html":{},"directives/NgxEditorJSDirective.html":{},"injectables/NgxEditorJSInstanceService.html":{},"injectables/NgxEditorJSService.html":{}}}],["haschanged(options",{"_index":1363,"title":{},"body":{"injectables/NgxEditorJSInstanceService.html":{},"injectables/NgxEditorJSService.html":{}}}],["haschanged.blocks",{"_index":824,"title":{},"body":{"components/FormContainerComponent.html":{}}}],["haschangedmap",{"_index":588,"title":{},"body":{"interfaces/EditorJSInstanceConfig.html":{},"interfaces/InjectorApiCallOptions.html":{},"interfaces/InjectorApiCallResponse.html":{},"interfaces/InjectorMethodOption.html":{},"injectables/NgxEditorJSInstanceService.html":{},"miscellaneous/variables.html":{}}}],["hassaved",{"_index":757,"title":{},"body":{"components/FormContainerComponent.html":{},"components/NgxEditorJSBaseComponent.html":{},"components/NgxEditorJSComponent.html":{},"directives/NgxEditorJSDirective.html":{},"injectables/NgxEditorJSInstanceService.html":{},"injectables/NgxEditorJSService.html":{}}}],["hassaved(options",{"_index":1365,"title":{},"body":{"injectables/NgxEditorJSInstanceService.html":{},"injectables/NgxEditorJSService.html":{}}}],["hassavedmap",{"_index":590,"title":{},"body":{"interfaces/EditorJSInstanceConfig.html":{},"interfaces/InjectorApiCallOptions.html":{},"interfaces/InjectorApiCallResponse.html":{},"interfaces/InjectorMethodOption.html":{},"injectables/NgxEditorJSInstanceService.html":{},"miscellaneous/variables.html":{}}}],["header",{"_index":505,"title":{"interfaces/Header.html":{}},"body":{"interfaces/Block.html":{},"components/FormContainerComponent.html":{},"interfaces/Header.html":{},"interfaces/HeaderBlock.html":{},"interfaces/Image.html":{},"interfaces/ImageBlock.html":{},"interfaces/List.html":{},"interfaces/ListBlock.html":{},"modules/NgxHideableHeaderDemoModule.html":{},"components/PageContainerComponent.html":{},"interfaces/Paragraph.html":{},"interfaces/ParagraphBlock.html":{},"injectables/PluginHeader.html":{},"modules/PluginHeaderModule.html":{},"dependencies.html":{},"miscellaneous/variables.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-readme.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-readme/ngx-editorjs-changelog.html":{}}}],["header.plugin",{"_index":1763,"title":{},"body":{"modules/PluginHeaderModule.html":{}}}],["headerblock",{"_index":509,"title":{"interfaces/HeaderBlock.html":{}},"body":{"interfaces/Block.html":{},"interfaces/Header.html":{},"interfaces/HeaderBlock.html":{},"interfaces/Image.html":{},"interfaces/ImageBlock.html":{},"interfaces/List.html":{},"interfaces/ListBlock.html":{},"interfaces/Paragraph.html":{},"interfaces/ParagraphBlock.html":{},"miscellaneous/typealiases.html":{}}}],["height",{"_index":153,"title":{},"body":{"components/AppContainerComponent.html":{},"components/FormContainerComponent.html":{},"components/NavBarComponent.html":{},"components/NgxEditorJSBaseComponent.html":{},"components/NgxEditorJSComponent.html":{},"interfaces/NgxEditorJSConfig.html":{},"components/NgxEditorJSDemoInfoComponent.html":{},"directives/NgxEditorJSDirective.html":{},"interfaces/NgxEditorJSModuleConfig.html":{},"components/PageContainerComponent.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-readme.html":{}}}],["helper",{"_index":424,"title":{},"body":{"modules/ApplicationDataModule.html":{},"injectables/NgxEditorJSInstanceService.html":{},"injectables/NgxEditorJSService.html":{}}}],["helpers",{"_index":2229,"title":{},"body":{"todo.html":{}}}],["here",{"_index":322,"title":{},"body":{"injectables/AppService.html":{},"injectables/AppService-1.html":{},"components/FormContainerComponent.html":{},"components/NgxEditorJSBaseComponent.html":{},"components/NgxEditorJSComponent.html":{},"additional-documentation/tinynodes-library-docs.html":{}}}],["hereby",{"_index":2161,"title":{},"body":{"license.html":{}}}],["hidden",{"_index":141,"title":{},"body":{"components/AppContainerComponent.html":{},"injectables/AppService.html":{},"injectables/AppService-1.html":{},"interfaces/ApplicationData.html":{},"interfaces/ApplicationData-1.html":{},"interfaces/ApplicationState.html":{},"interfaces/ApplicationState-1.html":{},"injectables/ApplicationStore.html":{},"injectables/ApplicationStore-1.html":{},"interfaces/DemoData.html":{},"interfaces/DemoData-1.html":{},"interfaces/MenuGroup.html":{},"interfaces/MenuGroup-1.html":{},"interfaces/MenuItem.html":{},"interfaces/MenuItem-1.html":{},"interfaces/NgxEditorJSDemo.html":{},"interfaces/NgxEditorJSDemo-1.html":{},"interfaces/NgxEditorJSDemoData.html":{},"interfaces/NgxEditorJSDemoData-1.html":{},"interfaces/TinynodeDemos.html":{},"interfaces/TinynodeDemos-1.html":{},"miscellaneous/enumerations.html":{}}}],["hide",{"_index":120,"title":{},"body":{"components/AppContainerComponent.html":{}}}],["hideable",{"_index":1639,"title":{},"body":{"modules/NgxHideableHeaderDemoModule.html":{},"dependencies.html":{},"miscellaneous/variables.html":{}}}],["hides",{"_index":2276,"title":{},"body":{"additional-documentation/tinynodes-library-docs/ngx-editorjs-readme.html":{}}}],["hidetoolbar",{"_index":1002,"title":{},"body":{"components/NgxEditorJSBaseComponent.html":{},"components/NgxEditorJSComponent.html":{},"interfaces/NgxEditorJSConfig.html":{},"directives/NgxEditorJSDirective.html":{},"interfaces/NgxEditorJSModuleConfig.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-readme.html":{}}}],["hold",{"_index":1157,"title":{},"body":{"interfaces/NgxEditorJSConfig.html":{},"interfaces/NgxEditorJSModuleConfig.html":{}}}],["holder",{"_index":562,"title":{},"body":{"classes/Changed.html":{},"interfaces/EditorJSInstanceConfig.html":{},"components/FormContainerComponent.html":{},"interfaces/InjectorApiCallOptions.html":{},"interfaces/InjectorApiCallResponse.html":{},"interfaces/InjectorMethodOption.html":{},"components/NgxEditorJSBaseComponent.html":{},"components/NgxEditorJSComponent.html":{},"interfaces/NgxEditorJSConfig.html":{},"directives/NgxEditorJSDirective.html":{},"injectables/NgxEditorJSEffects.html":{},"injectables/NgxEditorJSInstanceService.html":{},"interfaces/NgxEditorJSModuleConfig.html":{},"injectables/NgxEditorJSService.html":{},"classes/NotReady.html":{},"components/PageContainerComponent.html":{},"classes/Ready.html":{},"classes/SaveEnd.html":{},"classes/SaveStart.html":{},"miscellaneous/variables.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-readme.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-readme/ngx-editorjs-changelog.html":{}}}],["holders",{"_index":2204,"title":{},"body":{"license.html":{}}}],["home",{"_index":201,"title":{},"body":{"components/AppContainerComponent.html":{},"modules/AppRoutingModule.html":{},"components/FormContainerComponent.html":{},"components/HomePageComponent.html":{},"components/NavBarComponent.html":{},"components/NgxEditorJSBaseComponent.html":{},"components/NgxEditorJSComponent.html":{},"components/NgxEditorJSDemoHomeComponent.html":{},"components/NgxEditorJSDemoInfoComponent.html":{},"components/PageContainerComponent.html":{},"components/SidebarComponent.html":{},"miscellaneous/variables.html":{}}}],["home'},{'name",{"_index":212,"title":{},"body":{"components/AppContainerComponent.html":{},"components/FormContainerComponent.html":{},"components/HomePageComponent.html":{},"components/NavBarComponent.html":{},"components/NgxEditorJSBaseComponent.html":{},"components/NgxEditorJSComponent.html":{},"components/NgxEditorJSDemoHomeComponent.html":{},"components/NgxEditorJSDemoInfoComponent.html":{},"components/PageContainerComponent.html":{},"components/SidebarComponent.html":{}}}],["homepagecomponent",{"_index":200,"title":{"components/HomePageComponent.html":{}},"body":{"components/AppContainerComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"components/FormContainerComponent.html":{},"components/HomePageComponent.html":{},"components/NavBarComponent.html":{},"components/NgxEditorJSBaseComponent.html":{},"components/NgxEditorJSComponent.html":{},"components/NgxEditorJSDemoHomeComponent.html":{},"components/NgxEditorJSDemoInfoComponent.html":{},"components/PageContainerComponent.html":{},"components/SidebarComponent.html":{},"overview.html":{},"miscellaneous/variables.html":{}}}],["host",{"_index":638,"title":{},"body":{"interfaces/EditorJSMaterialForm.html":{},"components/FormContainerComponent.html":{},"components/NgxEditorJSComponent.html":{},"components/NgxEditorJSDemoInfoComponent.html":{},"directives/NgxEditorJSDirective.html":{},"components/PageContainerComponent.html":{}}}],["hostbinding",{"_index":617,"title":{},"body":{"interfaces/EditorJSMaterialForm.html":{}}}],["hostbinding('attr.aria",{"_index":692,"title":{},"body":{"interfaces/EditorJSMaterialForm.html":{}}}],["hostbinding('class.floating",{"_index":688,"title":{},"body":{"interfaces/EditorJSMaterialForm.html":{}}}],["hostlistener",{"_index":1265,"title":{},"body":{"directives/NgxEditorJSDirective.html":{}}}],["hostlistener('click",{"_index":1270,"title":{},"body":{"directives/NgxEditorJSDirective.html":{}}}],["hostlisteners",{"_index":1219,"title":{},"body":{"directives/NgxEditorJSDirective.html":{}}}],["html",{"_index":190,"title":{},"body":{"components/AppContainerComponent.html":{},"components/FormContainerComponent.html":{},"components/HomePageComponent.html":{},"components/NavBarComponent.html":{},"components/NgxEditorJSBaseComponent.html":{},"components/NgxEditorJSComponent.html":{},"components/NgxEditorJSDemoHomeComponent.html":{},"components/NgxEditorJSDemoInfoComponent.html":{},"directives/NgxEditorJSDirective.html":{},"components/PageContainerComponent.html":{},"components/SidebarComponent.html":{}}}],["htmlelement",{"_index":1046,"title":{},"body":{"components/NgxEditorJSBaseComponent.html":{},"components/NgxEditorJSComponent.html":{}}}],["http",{"_index":330,"title":{},"body":{"injectables/AppService.html":{},"injectables/AppService-1.html":{}}}],["http://contributor",{"_index":2094,"title":{},"body":{"contributing.html":{}}}],["httpclient",{"_index":255,"title":{},"body":{"modules/AppModule.html":{},"injectables/AppService.html":{},"injectables/AppService-1.html":{}}}],["httpclientmodule",{"_index":256,"title":{},"body":{"modules/AppModule.html":{}}}],["i'll",{"_index":1901,"title":{},"body":{"changelog.html":{}}}],["i'm",{"_index":1869,"title":{},"body":{"changelog.html":{}}}],["i've",{"_index":1870,"title":{},"body":{"changelog.html":{}}}],["icon",{"_index":173,"title":{},"body":{"components/AppContainerComponent.html":{},"interfaces/ApplicationData.html":{},"interfaces/ApplicationData-1.html":{},"interfaces/MenuGroup.html":{},"interfaces/MenuGroup-1.html":{},"interfaces/MenuItem.html":{},"interfaces/MenuItem-1.html":{},"components/NavBarComponent.html":{}}}],["id",{"_index":639,"title":{},"body":{"interfaces/EditorJSMaterialForm.html":{},"components/FormContainerComponent.html":{},"components/NgxEditorJSBaseComponent.html":{},"components/NgxEditorJSComponent.html":{},"interfaces/NgxEditorJSConfig.html":{},"directives/NgxEditorJSDirective.html":{},"injectables/NgxEditorJSInstanceService.html":{},"interfaces/NgxEditorJSModuleConfig.html":{},"injectables/NgxEditorJSService.html":{},"interfaces/Page.html":{},"interfaces/PageBlock.html":{},"components/PageContainerComponent.html":{},"injectables/PagesService.html":{},"interfaces/Tag.html":{},"miscellaneous/variables.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-readme.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-readme/ngx-editorjs-changelog.html":{}}}],["identity",{"_index":1960,"title":{},"body":{"contributing.html":{}}}],["ids",{"_index":693,"title":{},"body":{"interfaces/EditorJSMaterialForm.html":{}}}],["ids.join",{"_index":696,"title":{},"body":{"interfaces/EditorJSMaterialForm.html":{}}}],["ignore",{"_index":1285,"title":{},"body":{"directives/NgxEditorJSDirective.html":{}}}],["image",{"_index":510,"title":{"interfaces/Image.html":{}},"body":{"interfaces/Block.html":{},"components/FormContainerComponent.html":{},"interfaces/Header.html":{},"interfaces/HeaderBlock.html":{},"interfaces/Image.html":{},"interfaces/ImageBlock.html":{},"interfaces/List.html":{},"interfaces/ListBlock.html":{},"components/PageContainerComponent.html":{},"interfaces/Paragraph.html":{},"interfaces/ParagraphBlock.html":{},"injectables/PluginImage.html":{},"injectables/PluginSimpleImage.html":{},"modules/PluginSimpleImageModule.html":{}}}],["image.module",{"_index":1637,"title":{},"body":{"modules/NgxEditorjsPluginsModule.html":{}}}],["image.module.ts",{"_index":1821,"title":{},"body":{"modules/PluginSimpleImageModule.html":{}}}],["image.plugin",{"_index":1772,"title":{},"body":{"modules/PluginImageModule.html":{},"modules/PluginSimpleImageModule.html":{}}}],["image.plugin.ts",{"_index":1815,"title":{},"body":{"injectables/PluginSimpleImage.html":{}}}],["image.plugin.ts:14",{"_index":1817,"title":{},"body":{"injectables/PluginSimpleImage.html":{}}}],["image/simple",{"_index":1636,"title":{},"body":{"modules/NgxEditorjsPluginsModule.html":{},"injectables/PluginSimpleImage.html":{},"modules/PluginSimpleImageModule.html":{}}}],["imageblock",{"_index":519,"title":{"interfaces/ImageBlock.html":{}},"body":{"interfaces/Block.html":{},"interfaces/Header.html":{},"interfaces/HeaderBlock.html":{},"interfaces/Image.html":{},"interfaces/ImageBlock.html":{},"interfaces/List.html":{},"interfaces/ListBlock.html":{},"interfaces/Paragraph.html":{},"interfaces/ParagraphBlock.html":{},"miscellaneous/typealiases.html":{}}}],["imagery",{"_index":1993,"title":{},"body":{"contributing.html":{}}}],["implementation",{"_index":634,"title":{},"body":{"interfaces/EditorJSMaterialForm.html":{},"injectables/MockNgZone.html":{}}}],["implemented",{"_index":984,"title":{},"body":{"components/NgxEditorJSBaseComponent.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-readme.html":{}}}],["implements",{"_index":18,"title":{},"body":{"components/AppContainerComponent.html":{},"classes/Changed.html":{},"interfaces/EditorJSMaterialForm.html":{},"components/FormContainerComponent.html":{},"classes/MockEditorJS.html":{},"classes/MockPlugin.html":{},"components/NgxEditorJSBaseComponent.html":{},"components/NgxEditorJSDemoInfoComponent.html":{},"directives/NgxEditorJSDirective.html":{},"classes/NotReady.html":{},"components/PageContainerComponent.html":{},"injectables/PluginCode.html":{},"injectables/PluginHeader.html":{},"injectables/PluginImage.html":{},"injectables/PluginLink.html":{},"injectables/PluginList.html":{},"injectables/PluginMarker.html":{},"injectables/PluginParagraph.html":{},"injectables/PluginSimpleImage.html":{},"classes/Ready.html":{},"classes/SaveEnd.html":{},"classes/SaveStart.html":{},"classes/TestClass.html":{}}}],["implied",{"_index":2195,"title":{},"body":{"license.html":{}}}],["import",{"_index":95,"title":{},"body":{"components/AppContainerComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"injectables/AppService.html":{},"injectables/AppService-1.html":{},"interfaces/ApplicationData.html":{},"interfaces/ApplicationData-1.html":{},"modules/ApplicationDataModule.html":{},"injectables/ApplicationQuery.html":{},"injectables/ApplicationQuery-1.html":{},"interfaces/ApplicationState.html":{},"interfaces/ApplicationState-1.html":{},"injectables/ApplicationStore.html":{},"injectables/ApplicationStore-1.html":{},"interfaces/BasePlugin.html":{},"interfaces/BasePlugin-1.html":{},"interfaces/BlocksMap.html":{},"interfaces/ChangeMap.html":{},"classes/Changed.html":{},"interfaces/CreateEditorJSOptions.html":{},"interfaces/DemoData.html":{},"interfaces/DemoData-1.html":{},"interfaces/EditorJSChange.html":{},"interfaces/EditorJSInstanceConfig.html":{},"interfaces/EditorJSMaterialForm.html":{},"interfaces/EditorMap.html":{},"components/FormContainerComponent.html":{},"components/HomePageComponent.html":{},"interfaces/InjectorApiCallOptions.html":{},"interfaces/InjectorApiCallResponse.html":{},"interfaces/InjectorMethodOption.html":{},"modules/MaterialModule.html":{},"interfaces/MenuGroup.html":{},"interfaces/MenuGroup-1.html":{},"interfaces/MenuItem.html":{},"interfaces/MenuItem-1.html":{},"classes/MockEditorJS.html":{},"injectables/MockNgZone.html":{},"classes/MockPlugin.html":{},"components/NavBarComponent.html":{},"components/NgxEditorJSBaseComponent.html":{},"components/NgxEditorJSComponent.html":{},"interfaces/NgxEditorJSConfig.html":{},"interfaces/NgxEditorJSDemo.html":{},"interfaces/NgxEditorJSDemo-1.html":{},"interfaces/NgxEditorJSDemoData.html":{},"interfaces/NgxEditorJSDemoData-1.html":{},"components/NgxEditorJSDemoHomeComponent.html":{},"components/NgxEditorJSDemoInfoComponent.html":{},"directives/NgxEditorJSDirective.html":{},"injectables/NgxEditorJSEffects.html":{},"injectables/NgxEditorJSInstanceService.html":{},"modules/NgxEditorJSModule.html":{},"interfaces/NgxEditorJSModuleConfig.html":{},"injectables/NgxEditorJSPluginService.html":{},"injectables/NgxEditorJSService.html":{},"modules/NgxEditorjsDemoModule.html":{},"modules/NgxEditorjsNgrxModule.html":{},"modules/NgxEditorjsPluginsModule.html":{},"modules/NgxHideableHeaderDemoModule.html":{},"modules/NgxTinynodesCoreMaterialModule.html":{},"modules/NgxTinynodesCoreModule.html":{},"classes/NotReady.html":{},"interfaces/Page.html":{},"interfaces/PageBlock.html":{},"components/PageContainerComponent.html":{},"modules/PageStoreModule.html":{},"injectables/PagesQuery.html":{},"injectables/PagesService.html":{},"interfaces/PagesState.html":{},"injectables/PagesStore.html":{},"injectables/PluginCode.html":{},"modules/PluginCodeModule.html":{},"interfaces/PluginConfig.html":{},"interfaces/PluginConfig-1.html":{},"injectables/PluginHeader.html":{},"modules/PluginHeaderModule.html":{},"injectables/PluginImage.html":{},"modules/PluginImageModule.html":{},"injectables/PluginLink.html":{},"modules/PluginLinkModule.html":{},"injectables/PluginList.html":{},"modules/PluginListModule.html":{},"injectables/PluginMarker.html":{},"modules/PluginMarkerModule.html":{},"injectables/PluginParagraph.html":{},"modules/PluginParagraphModule.html":{},"injectables/PluginSimpleImage.html":{},"modules/PluginSimpleImageModule.html":{},"classes/Ready.html":{},"interfaces/ReadyMap.html":{},"classes/SaveEnd.html":{},"classes/SaveStart.html":{},"interfaces/SavedMap.html":{},"components/SidebarComponent.html":{},"interfaces/Tag.html":{},"classes/TestClass.html":{},"interfaces/TinynodeDemos.html":{},"interfaces/TinynodeDemos-1.html":{},"interfaces/ToolSettingsMap.html":{},"interfaces/ToolSettingsMap-1.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-readme.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-readme/ngx-editorjs-changelog.html":{}}}],["imported",{"_index":2147,"title":{},"body":{"index.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-readme.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-readme/ngx-editorjs-changelog.html":{}}}],["importing",{"_index":1625,"title":{},"body":{"modules/NgxEditorjsPluginsModule.html":{}}}],["imports",{"_index":254,"title":{},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"modules/MaterialModule.html":{},"modules/NgxEditorJSModule.html":{},"modules/NgxEditorjsDemoModule.html":{},"modules/NgxEditorjsNgrxModule.html":{},"modules/NgxEditorjsPluginsModule.html":{},"modules/NgxHideableHeaderDemoModule.html":{},"modules/NgxTinynodesCoreMaterialModule.html":{},"modules/NgxTinynodesCoreModule.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-readme.html":{}}}],["improved",{"_index":1859,"title":{},"body":{"changelog.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-readme/ngx-editorjs-changelog.html":{}}}],["improvements",{"_index":1874,"title":{},"body":{"changelog.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-readme/ngx-editorjs-changelog.html":{}}}],["inappropriate",{"_index":2011,"title":{},"body":{"contributing.html":{}}}],["incident",{"_index":2077,"title":{},"body":{"contributing.html":{}}}],["include",{"_index":575,"title":{},"body":{"interfaces/CreateEditorJSOptions.html":{},"modules/NgxEditorjsPluginsModule.html":{},"contributing.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-readme.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-readme/ngx-editorjs-changelog.html":{}}}],["included",{"_index":2189,"title":{},"body":{"license.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-readme/ngx-editorjs-changelog.html":{}}}],["includes",{"_index":1650,"title":{},"body":{"modules/NgxTinynodesCoreModule.html":{},"contributing.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-readme/ngx-editorjs-changelog.html":{}}}],["includetools",{"_index":573,"title":{},"body":{"interfaces/CreateEditorJSOptions.html":{},"components/NgxEditorJSBaseComponent.html":{},"components/NgxEditorJSComponent.html":{},"directives/NgxEditorJSDirective.html":{}}}],["including",{"_index":2171,"title":{},"body":{"license.html":{}}}],["inclusive",{"_index":1973,"title":{},"body":{"contributing.html":{}}}],["increase",{"_index":1929,"title":{},"body":{"contributing.html":{}}}],["index",{"_index":28,"title":{"index.html":{}},"body":{"components/AppContainerComponent.html":{},"injectables/AppService.html":{},"injectables/AppService-1.html":{},"interfaces/ApplicationData.html":{},"interfaces/ApplicationData-1.html":{},"interfaces/ApplicationState.html":{},"interfaces/ApplicationState-1.html":{},"interfaces/BasePlugin.html":{},"interfaces/BasePlugin-1.html":{},"interfaces/Block.html":{},"classes/Changed.html":{},"interfaces/CreateEditorJSOptions.html":{},"interfaces/DemoData.html":{},"interfaces/DemoData-1.html":{},"interfaces/EditorJSChange.html":{},"interfaces/EditorJSInstanceConfig.html":{},"components/FormContainerComponent.html":{},"interfaces/Header.html":{},"interfaces/HeaderBlock.html":{},"components/HomePageComponent.html":{},"interfaces/Image.html":{},"interfaces/ImageBlock.html":{},"interfaces/InjectorApiCallOptions.html":{},"interfaces/InjectorApiCallResponse.html":{},"interfaces/InjectorMethodOption.html":{},"interfaces/List.html":{},"interfaces/ListBlock.html":{},"interfaces/MenuGroup.html":{},"interfaces/MenuGroup-1.html":{},"interfaces/MenuItem.html":{},"interfaces/MenuItem-1.html":{},"classes/MockEditorJS.html":{},"injectables/MockNgZone.html":{},"classes/MockPlugin.html":{},"components/NavBarComponent.html":{},"components/NgxEditorJSBaseComponent.html":{},"components/NgxEditorJSComponent.html":{},"interfaces/NgxEditorJSConfig.html":{},"interfaces/NgxEditorJSDemo.html":{},"interfaces/NgxEditorJSDemo-1.html":{},"components/NgxEditorJSDemoInfoComponent.html":{},"directives/NgxEditorJSDirective.html":{},"injectables/NgxEditorJSEffects.html":{},"injectables/NgxEditorJSInstanceService.html":{},"interfaces/NgxEditorJSModuleConfig.html":{},"injectables/NgxEditorJSPluginService.html":{},"injectables/NgxEditorJSService.html":{},"classes/NotReady.html":{},"interfaces/Page.html":{},"interfaces/PageBlock.html":{},"components/PageContainerComponent.html":{},"injectables/PagesService.html":{},"interfaces/Paragraph.html":{},"interfaces/ParagraphBlock.html":{},"injectables/PluginCode.html":{},"injectables/PluginHeader.html":{},"injectables/PluginImage.html":{},"injectables/PluginLink.html":{},"injectables/PluginList.html":{},"injectables/PluginMarker.html":{},"injectables/PluginParagraph.html":{},"injectables/PluginSimpleImage.html":{},"classes/Ready.html":{},"classes/SaveEnd.html":{},"classes/SaveStart.html":{},"components/SidebarComponent.html":{},"interfaces/Tag.html":{},"classes/TestClass.html":{},"interfaces/TinynodeDemos.html":{},"interfaces/TinynodeDemos-1.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["indexable",{"_index":493,"title":{},"body":{"interfaces/Block.html":{},"interfaces/BlocksMap.html":{},"interfaces/ChangeMap.html":{},"interfaces/EditorMap.html":{},"interfaces/PluginConfig.html":{},"interfaces/PluginConfig-1.html":{},"interfaces/ReadyMap.html":{},"interfaces/SavedMap.html":{},"interfaces/ToolSettingsMap.html":{},"interfaces/ToolSettingsMap-1.html":{}}}],["individual",{"_index":1627,"title":{},"body":{"modules/NgxEditorjsPluginsModule.html":{},"contributing.html":{}}}],["info",{"_index":3,"title":{},"body":{"components/AppContainerComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"injectables/AppService.html":{},"injectables/AppService-1.html":{},"interfaces/ApplicationData.html":{},"interfaces/ApplicationData-1.html":{},"modules/ApplicationDataModule.html":{},"injectables/ApplicationQuery.html":{},"injectables/ApplicationQuery-1.html":{},"interfaces/ApplicationState.html":{},"interfaces/ApplicationState-1.html":{},"injectables/ApplicationStore.html":{},"injectables/ApplicationStore-1.html":{},"interfaces/BasePlugin.html":{},"interfaces/BasePlugin-1.html":{},"interfaces/Block.html":{},"interfaces/BlocksMap.html":{},"interfaces/ChangeMap.html":{},"classes/Changed.html":{},"interfaces/CreateEditorJSOptions.html":{},"interfaces/DemoData.html":{},"interfaces/DemoData-1.html":{},"interfaces/EditorJSChange.html":{},"interfaces/EditorJSInstanceConfig.html":{},"interfaces/EditorJSMaterialForm.html":{},"interfaces/EditorMap.html":{},"components/FormContainerComponent.html":{},"interfaces/Header.html":{},"interfaces/HeaderBlock.html":{},"components/HomePageComponent.html":{},"interfaces/Image.html":{},"interfaces/ImageBlock.html":{},"interfaces/InjectorApiCallOptions.html":{},"interfaces/InjectorApiCallResponse.html":{},"interfaces/InjectorMethodOption.html":{},"interfaces/List.html":{},"interfaces/ListBlock.html":{},"modules/MaterialModule.html":{},"interfaces/MenuGroup.html":{},"interfaces/MenuGroup-1.html":{},"interfaces/MenuItem.html":{},"interfaces/MenuItem-1.html":{},"classes/MockEditorJS.html":{},"injectables/MockNgZone.html":{},"classes/MockPlugin.html":{},"components/NavBarComponent.html":{},"components/NgxEditorJSBaseComponent.html":{},"components/NgxEditorJSComponent.html":{},"interfaces/NgxEditorJSConfig.html":{},"interfaces/NgxEditorJSDemo.html":{},"interfaces/NgxEditorJSDemo-1.html":{},"interfaces/NgxEditorJSDemoData.html":{},"interfaces/NgxEditorJSDemoData-1.html":{},"components/NgxEditorJSDemoHomeComponent.html":{},"components/NgxEditorJSDemoInfoComponent.html":{},"directives/NgxEditorJSDirective.html":{},"injectables/NgxEditorJSEffects.html":{},"injectables/NgxEditorJSInstanceService.html":{},"modules/NgxEditorJSModule.html":{},"interfaces/NgxEditorJSModuleConfig.html":{},"injectables/NgxEditorJSPluginService.html":{},"injectables/NgxEditorJSService.html":{},"modules/NgxEditorjsDemoModule.html":{},"modules/NgxEditorjsNgrxModule.html":{},"modules/NgxEditorjsPluginsModule.html":{},"modules/NgxHideableHeaderDemoModule.html":{},"modules/NgxTinynodesCoreMaterialModule.html":{},"modules/NgxTinynodesCoreModule.html":{},"classes/NotReady.html":{},"interfaces/Page.html":{},"interfaces/PageBlock.html":{},"components/PageContainerComponent.html":{},"modules/PageStoreModule.html":{},"injectables/PagesQuery.html":{},"injectables/PagesService.html":{},"interfaces/PagesState.html":{},"injectables/PagesStore.html":{},"interfaces/Paragraph.html":{},"interfaces/ParagraphBlock.html":{},"injectables/PluginCode.html":{},"modules/PluginCodeModule.html":{},"interfaces/PluginConfig.html":{},"interfaces/PluginConfig-1.html":{},"injectables/PluginHeader.html":{},"modules/PluginHeaderModule.html":{},"injectables/PluginImage.html":{},"modules/PluginImageModule.html":{},"injectables/PluginLink.html":{},"modules/PluginLinkModule.html":{},"injectables/PluginList.html":{},"modules/PluginListModule.html":{},"injectables/PluginMarker.html":{},"modules/PluginMarkerModule.html":{},"injectables/PluginParagraph.html":{},"modules/PluginParagraphModule.html":{},"injectables/PluginSimpleImage.html":{},"modules/PluginSimpleImageModule.html":{},"classes/Ready.html":{},"interfaces/ReadyMap.html":{},"classes/SaveEnd.html":{},"classes/SaveStart.html":{},"interfaces/SavedMap.html":{},"components/SidebarComponent.html":{},"interfaces/Tag.html":{},"classes/TestClass.html":{},"interfaces/TinynodeDemos.html":{},"interfaces/TinynodeDemos-1.html":{},"interfaces/ToolSettingsMap.html":{},"interfaces/ToolSettingsMap-1.html":{}}}],["info'},{'name",{"_index":214,"title":{},"body":{"components/AppContainerComponent.html":{},"components/FormContainerComponent.html":{},"components/HomePageComponent.html":{},"components/NavBarComponent.html":{},"components/NgxEditorJSBaseComponent.html":{},"components/NgxEditorJSComponent.html":{},"components/NgxEditorJSDemoHomeComponent.html":{},"components/NgxEditorJSDemoInfoComponent.html":{},"components/PageContainerComponent.html":{},"components/SidebarComponent.html":{}}}],["info.component",{"_index":1653,"title":{},"body":{"modules/NgxTinynodesCoreModule.html":{}}}],["info.component.html",{"_index":1183,"title":{},"body":{"components/NgxEditorJSDemoInfoComponent.html":{}}}],["info.component.scss",{"_index":1182,"title":{},"body":{"components/NgxEditorJSDemoInfoComponent.html":{}}}],["info.component.ts",{"_index":1181,"title":{},"body":{"components/NgxEditorJSDemoInfoComponent.html":{}}}],["info.component.ts:20",{"_index":1190,"title":{},"body":{"components/NgxEditorJSDemoInfoComponent.html":{}}}],["info.component.ts:26",{"_index":1189,"title":{},"body":{"components/NgxEditorJSDemoInfoComponent.html":{}}}],["info.component.ts:32",{"_index":1191,"title":{},"body":{"components/NgxEditorJSDemoInfoComponent.html":{}}}],["info.component.ts:35",{"_index":1188,"title":{},"body":{"components/NgxEditorJSDemoInfoComponent.html":{}}}],["info.component.ts:37",{"_index":1192,"title":{},"body":{"components/NgxEditorJSDemoInfoComponent.html":{}}}],["info.component.ts:46",{"_index":1196,"title":{},"body":{"components/NgxEditorJSDemoInfoComponent.html":{}}}],["info.component.ts:53",{"_index":1194,"title":{},"body":{"components/NgxEditorJSDemoInfoComponent.html":{}}}],["info/demo",{"_index":1180,"title":{},"body":{"components/NgxEditorJSDemoInfoComponent.html":{},"modules/NgxTinynodesCoreModule.html":{}}}],["information",{"_index":1209,"title":{},"body":{"components/NgxEditorJSDemoInfoComponent.html":{},"contributing.html":{},"index.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-readme.html":{}}}],["inherited",{"_index":1112,"title":{},"body":{"components/NgxEditorJSComponent.html":{}}}],["init",{"_index":778,"title":{},"body":{"components/FormContainerComponent.html":{},"components/PageContainerComponent.html":{}}}],["initial",{"_index":320,"title":{},"body":{"injectables/AppService.html":{},"injectables/AppService-1.html":{},"interfaces/ApplicationState.html":{},"interfaces/ApplicationState-1.html":{},"interfaces/BasePlugin-1.html":{},"interfaces/DemoData.html":{},"interfaces/DemoData-1.html":{},"components/FormContainerComponent.html":{},"components/NgxEditorJSBaseComponent.html":{},"components/NgxEditorJSComponent.html":{},"interfaces/NgxEditorJSConfig.html":{},"interfaces/NgxEditorJSDemo.html":{},"interfaces/NgxEditorJSDemo-1.html":{},"interfaces/NgxEditorJSDemoData.html":{},"interfaces/NgxEditorJSDemoData-1.html":{},"directives/NgxEditorJSDirective.html":{},"interfaces/NgxEditorJSModuleConfig.html":{},"injectables/NgxEditorJSPluginService.html":{},"components/PageContainerComponent.html":{},"interfaces/PluginConfig-1.html":{},"interfaces/TinynodeDemos.html":{},"interfaces/TinynodeDemos-1.html":{},"interfaces/ToolSettingsMap-1.html":{},"miscellaneous/variables.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-readme.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-readme/ngx-editorjs-changelog.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-plugins-readme/ngx-editorjs-plugins-changelog.html":{}}}],["initialblock",{"_index":1003,"title":{},"body":{"components/NgxEditorJSBaseComponent.html":{},"components/NgxEditorJSComponent.html":{},"interfaces/NgxEditorJSConfig.html":{},"directives/NgxEditorJSDirective.html":{},"interfaces/NgxEditorJSModuleConfig.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-readme.html":{}}}],["initialized",{"_index":66,"title":{},"body":{"components/AppContainerComponent.html":{},"components/NgxEditorJSBaseComponent.html":{},"components/NgxEditorJSComponent.html":{},"directives/NgxEditorJSDirective.html":{},"injectables/NgxEditorJSPluginService.html":{}}}],["initialplugins",{"_index":490,"title":{},"body":{"interfaces/BasePlugin-1.html":{},"interfaces/PluginConfig-1.html":{},"interfaces/ToolSettingsMap-1.html":{},"miscellaneous/variables.html":{}}}],["inject",{"_index":1380,"title":{},"body":{"injectables/NgxEditorJSInstanceService.html":{},"injectables/NgxEditorJSPluginService.html":{},"injectables/NgxEditorJSService.html":{}}}],["inject(editorjsinstance",{"_index":1384,"title":{},"body":{"injectables/NgxEditorJSInstanceService.html":{}}}],["inject(ngx_editorjs_config",{"_index":1553,"title":{},"body":{"injectables/NgxEditorJSService.html":{}}}],["injectable",{"_index":314,"title":{"injectables/AppService.html":{},"injectables/AppService-1.html":{},"injectables/ApplicationQuery.html":{},"injectables/ApplicationQuery-1.html":{},"injectables/ApplicationStore.html":{},"injectables/ApplicationStore-1.html":{},"injectables/MockNgZone.html":{},"injectables/NgxEditorJSEffects.html":{},"injectables/NgxEditorJSInstanceService.html":{},"injectables/NgxEditorJSPluginService.html":{},"injectables/NgxEditorJSService.html":{},"injectables/PagesQuery.html":{},"injectables/PagesService.html":{},"injectables/PagesStore.html":{},"injectables/PluginCode.html":{},"injectables/PluginHeader.html":{},"injectables/PluginImage.html":{},"injectables/PluginLink.html":{},"injectables/PluginList.html":{},"injectables/PluginMarker.html":{},"injectables/PluginParagraph.html":{},"injectables/PluginSimpleImage.html":{}},"body":{"injectables/AppService.html":{},"injectables/AppService-1.html":{},"injectables/ApplicationQuery.html":{},"injectables/ApplicationQuery-1.html":{},"injectables/ApplicationStore.html":{},"injectables/ApplicationStore-1.html":{},"injectables/MockNgZone.html":{},"injectables/NgxEditorJSEffects.html":{},"injectables/NgxEditorJSInstanceService.html":{},"injectables/NgxEditorJSPluginService.html":{},"injectables/NgxEditorJSService.html":{},"injectables/PagesQuery.html":{},"injectables/PagesService.html":{},"interfaces/PagesState.html":{},"injectables/PagesStore.html":{},"injectables/PluginCode.html":{},"injectables/PluginHeader.html":{},"injectables/PluginImage.html":{},"injectables/PluginLink.html":{},"injectables/PluginList.html":{},"injectables/PluginMarker.html":{},"injectables/PluginParagraph.html":{},"injectables/PluginSimpleImage.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-readme/ngx-editorjs-changelog.html":{}}}],["injectables",{"_index":315,"title":{},"body":{"injectables/AppService.html":{},"injectables/AppService-1.html":{},"injectables/ApplicationQuery.html":{},"injectables/ApplicationQuery-1.html":{},"injectables/ApplicationStore.html":{},"injectables/ApplicationStore-1.html":{},"injectables/MockNgZone.html":{},"injectables/NgxEditorJSEffects.html":{},"injectables/NgxEditorJSInstanceService.html":{},"injectables/NgxEditorJSPluginService.html":{},"injectables/NgxEditorJSService.html":{},"injectables/PagesQuery.html":{},"injectables/PagesService.html":{},"injectables/PagesStore.html":{},"injectables/PluginCode.html":{},"injectables/PluginHeader.html":{},"injectables/PluginImage.html":{},"injectables/PluginLink.html":{},"injectables/PluginList.html":{},"injectables/PluginMarker.html":{},"injectables/PluginParagraph.html":{},"injectables/PluginSimpleImage.html":{},"overview.html":{}}}],["injected",{"_index":1169,"title":{},"body":{"interfaces/NgxEditorJSConfig.html":{},"interfaces/NgxEditorJSModuleConfig.html":{},"injectables/NgxEditorJSPluginService.html":{},"index.html":{},"miscellaneous/variables.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-readme.html":{}}}],["injecting",{"_index":1165,"title":{},"body":{"interfaces/NgxEditorJSConfig.html":{},"interfaces/NgxEditorJSModuleConfig.html":{},"miscellaneous/variables.html":{}}}],["injection",{"_index":482,"title":{},"body":{"interfaces/BasePlugin.html":{},"interfaces/BasePlugin-1.html":{},"interfaces/EditorJSInstanceConfig.html":{},"interfaces/InjectorApiCallOptions.html":{},"interfaces/InjectorApiCallResponse.html":{},"interfaces/InjectorMethodOption.html":{},"interfaces/NgxEditorJSConfig.html":{},"interfaces/NgxEditorJSModuleConfig.html":{},"interfaces/PluginConfig.html":{},"interfaces/PluginConfig-1.html":{},"interfaces/ToolSettingsMap.html":{},"interfaces/ToolSettingsMap-1.html":{},"miscellaneous/variables.html":{}}}],["injectiontoken",{"_index":471,"title":{},"body":{"interfaces/BasePlugin.html":{},"interfaces/BasePlugin-1.html":{},"interfaces/EditorJSInstanceConfig.html":{},"interfaces/InjectorApiCallOptions.html":{},"interfaces/InjectorApiCallResponse.html":{},"interfaces/InjectorMethodOption.html":{},"interfaces/NgxEditorJSConfig.html":{},"interfaces/NgxEditorJSModuleConfig.html":{},"interfaces/PluginConfig.html":{},"interfaces/PluginConfig-1.html":{},"interfaces/ToolSettingsMap.html":{},"interfaces/ToolSettingsMap-1.html":{}}}],["injectiontoken('editior_js_instance",{"_index":1171,"title":{},"body":{"interfaces/NgxEditorJSConfig.html":{},"interfaces/NgxEditorJSModuleConfig.html":{},"miscellaneous/variables.html":{}}}],["injectiontoken('editorjs_module_import",{"_index":592,"title":{},"body":{"interfaces/EditorJSInstanceConfig.html":{},"interfaces/InjectorApiCallOptions.html":{},"interfaces/InjectorApiCallResponse.html":{},"interfaces/InjectorMethodOption.html":{},"miscellaneous/variables.html":{}}}],["injectiontoken('editorjsinstance",{"_index":594,"title":{},"body":{"interfaces/EditorJSInstanceConfig.html":{},"interfaces/InjectorApiCallOptions.html":{},"interfaces/InjectorApiCallResponse.html":{},"interfaces/InjectorMethodOption.html":{},"miscellaneous/variables.html":{}}}],["injectiontoken('for_root_options_token",{"_index":1168,"title":{},"body":{"interfaces/NgxEditorJSConfig.html":{},"interfaces/NgxEditorJSModuleConfig.html":{},"miscellaneous/variables.html":{}}}],["injectiontoken('initialplugins",{"_index":491,"title":{},"body":{"interfaces/BasePlugin-1.html":{},"interfaces/PluginConfig-1.html":{},"interfaces/ToolSettingsMap-1.html":{},"miscellaneous/variables.html":{}}}],["injectiontoken('ngx_editorjs_config",{"_index":1164,"title":{},"body":{"interfaces/NgxEditorJSConfig.html":{},"interfaces/NgxEditorJSModuleConfig.html":{},"miscellaneous/variables.html":{}}}],["injectiontoken('userplugins",{"_index":488,"title":{},"body":{"interfaces/BasePlugin.html":{},"interfaces/BasePlugin-1.html":{},"interfaces/PluginConfig.html":{},"interfaces/PluginConfig-1.html":{},"interfaces/ToolSettingsMap.html":{},"interfaces/ToolSettingsMap-1.html":{},"miscellaneous/variables.html":{}}}],["injector",{"_index":595,"title":{},"body":{"interfaces/EditorJSInstanceConfig.html":{},"interfaces/InjectorApiCallOptions.html":{},"interfaces/InjectorApiCallResponse.html":{},"interfaces/InjectorMethodOption.html":{},"injectables/NgxEditorJSInstanceService.html":{},"modules/NgxEditorJSModule.html":{},"injectables/NgxEditorJSService.html":{},"changelog.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-readme/ngx-editorjs-changelog.html":{}}}],["injector.ts",{"_index":1329,"title":{},"body":{"injectables/NgxEditorJSInstanceService.html":{}}}],["injector.ts:110",{"_index":1373,"title":{},"body":{"injectables/NgxEditorJSInstanceService.html":{}}}],["injector.ts:129",{"_index":1341,"title":{},"body":{"injectables/NgxEditorJSInstanceService.html":{}}}],["injector.ts:162",{"_index":1375,"title":{},"body":{"injectables/NgxEditorJSInstanceService.html":{}}}],["injector.ts:181",{"_index":1350,"title":{},"body":{"injectables/NgxEditorJSInstanceService.html":{}}}],["injector.ts:200",{"_index":1379,"title":{},"body":{"injectables/NgxEditorJSInstanceService.html":{}}}],["injector.ts:230",{"_index":1362,"title":{},"body":{"injectables/NgxEditorJSInstanceService.html":{}}}],["injector.ts:241",{"_index":1369,"title":{},"body":{"injectables/NgxEditorJSInstanceService.html":{}}}],["injector.ts:252",{"_index":1364,"title":{},"body":{"injectables/NgxEditorJSInstanceService.html":{}}}],["injector.ts:263",{"_index":1366,"title":{},"body":{"injectables/NgxEditorJSInstanceService.html":{}}}],["injector.ts:274",{"_index":1358,"title":{},"body":{"injectables/NgxEditorJSInstanceService.html":{}}}],["injector.ts:331",{"_index":1355,"title":{},"body":{"injectables/NgxEditorJSInstanceService.html":{}}}],["injector.ts:47",{"_index":1337,"title":{},"body":{"injectables/NgxEditorJSInstanceService.html":{}}}],["injector.ts:66",{"_index":1352,"title":{},"body":{"injectables/NgxEditorJSInstanceService.html":{}}}],["injector.ts:94",{"_index":1371,"title":{},"body":{"injectables/NgxEditorJSInstanceService.html":{}}}],["injectorapicalloptions",{"_index":601,"title":{"interfaces/InjectorApiCallOptions.html":{}},"body":{"interfaces/EditorJSInstanceConfig.html":{},"interfaces/InjectorApiCallOptions.html":{},"interfaces/InjectorApiCallResponse.html":{},"interfaces/InjectorMethodOption.html":{},"injectables/NgxEditorJSInstanceService.html":{},"injectables/NgxEditorJSService.html":{}}}],["injectorapicallresponse",{"_index":604,"title":{"interfaces/InjectorApiCallResponse.html":{}},"body":{"interfaces/EditorJSInstanceConfig.html":{},"interfaces/InjectorApiCallOptions.html":{},"interfaces/InjectorApiCallResponse.html":{},"interfaces/InjectorMethodOption.html":{},"injectables/NgxEditorJSInstanceService.html":{},"injectables/NgxEditorJSService.html":{}}}],["injectormethodoption",{"_index":596,"title":{"interfaces/InjectorMethodOption.html":{}},"body":{"interfaces/EditorJSInstanceConfig.html":{},"interfaces/InjectorApiCallOptions.html":{},"interfaces/InjectorApiCallResponse.html":{},"interfaces/InjectorMethodOption.html":{},"injectables/NgxEditorJSInstanceService.html":{},"injectables/NgxEditorJSService.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-readme/ngx-editorjs-changelog.html":{}}}],["inline",{"_index":175,"title":{},"body":{"components/AppContainerComponent.html":{},"components/NavBarComponent.html":{},"modules/NgxEditorjsPluginsModule.html":{},"injectables/PluginMarker.html":{},"modules/PluginMarkerModule.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-plugins-readme.html":{}}}],["input",{"_index":96,"title":{},"body":{"components/AppContainerComponent.html":{},"interfaces/EditorJSMaterialForm.html":{},"components/NavBarComponent.html":{},"components/NgxEditorJSBaseComponent.html":{},"components/NgxEditorJSDemoInfoComponent.html":{},"directives/NgxEditorJSDirective.html":{},"components/SidebarComponent.html":{},"todo.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-readme/ngx-editorjs-changelog.html":{}}}],["input('disabled",{"_index":674,"title":{},"body":{"interfaces/EditorJSMaterialForm.html":{}}}],["input('focused",{"_index":661,"title":{},"body":{"interfaces/EditorJSMaterialForm.html":{}}}],["input('placeholder",{"_index":656,"title":{},"body":{"interfaces/EditorJSMaterialForm.html":{}}}],["input('required",{"_index":668,"title":{},"body":{"interfaces/EditorJSMaterialForm.html":{}}}],["input('value",{"_index":650,"title":{},"body":{"interfaces/EditorJSMaterialForm.html":{}}}],["inputconfig",{"_index":2133,"title":{},"body":{"miscellaneous/functions.html":{}}}],["inputs",{"_index":36,"title":{},"body":{"components/AppContainerComponent.html":{},"components/NavBarComponent.html":{},"components/NgxEditorJSBaseComponent.html":{},"components/NgxEditorJSComponent.html":{},"components/NgxEditorJSDemoInfoComponent.html":{},"directives/NgxEditorJSDirective.html":{},"components/SidebarComponent.html":{}}}],["inside",{"_index":714,"title":{},"body":{"interfaces/EditorJSMaterialForm.html":{},"components/NgxEditorJSBaseComponent.html":{},"components/NgxEditorJSComponent.html":{},"directives/NgxEditorJSDirective.html":{},"index.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-readme.html":{}}}],["install",{"_index":1921,"title":{},"body":{"contributing.html":{},"dependencies.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-readme.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-plugins-readme.html":{}}}],["installed",{"_index":2267,"title":{},"body":{"additional-documentation/tinynodes-library-docs/ngx-editorjs-readme.html":{}}}],["installing",{"_index":2264,"title":{},"body":{"additional-documentation/tinynodes-library-docs/ngx-editorjs-readme.html":{}}}],["instance",{"_index":433,"title":{},"body":{"injectables/ApplicationQuery.html":{},"injectables/ApplicationQuery-1.html":{},"interfaces/EditorJSInstanceConfig.html":{},"interfaces/EditorJSMaterialForm.html":{},"components/FormContainerComponent.html":{},"interfaces/InjectorApiCallOptions.html":{},"interfaces/InjectorApiCallResponse.html":{},"interfaces/InjectorMethodOption.html":{},"components/NgxEditorJSBaseComponent.html":{},"components/NgxEditorJSComponent.html":{},"interfaces/NgxEditorJSConfig.html":{},"components/NgxEditorJSDemoHomeComponent.html":{},"directives/NgxEditorJSDirective.html":{},"injectables/NgxEditorJSInstanceService.html":{},"modules/NgxEditorJSModule.html":{},"interfaces/NgxEditorJSModuleConfig.html":{},"injectables/NgxEditorJSPluginService.html":{},"injectables/NgxEditorJSService.html":{},"modules/NgxEditorjsNgrxModule.html":{},"components/PageContainerComponent.html":{},"changelog.html":{},"index.html":{},"miscellaneous/variables.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-readme.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-readme/ngx-editorjs-changelog.html":{}}}],["instancedestroyed",{"_index":1435,"title":{},"body":{"injectables/NgxEditorJSInstanceService.html":{}}}],["instancedestroyed.complete",{"_index":1441,"title":{},"body":{"injectables/NgxEditorJSInstanceService.html":{}}}],["instancedestroyed.next(true",{"_index":1440,"title":{},"body":{"injectables/NgxEditorJSInstanceService.html":{}}}],["instances",{"_index":528,"title":{},"body":{"interfaces/BlocksMap.html":{},"interfaces/ChangeMap.html":{},"interfaces/EditorJSChange.html":{},"interfaces/EditorMap.html":{},"components/NgxEditorJSBaseComponent.html":{},"injectables/NgxEditorJSInstanceService.html":{},"injectables/NgxEditorJSPluginService.html":{},"injectables/NgxEditorJSService.html":{},"interfaces/ReadyMap.html":{},"interfaces/SavedMap.html":{},"contributing.html":{},"index.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-readme.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-readme/ngx-editorjs-changelog.html":{}}}],["instanceservice",{"_index":1533,"title":{},"body":{"injectables/NgxEditorJSService.html":{}}}],["instructions",{"_index":1205,"title":{},"body":{"components/NgxEditorJSDemoInfoComponent.html":{}}}],["insulting/derogatory",{"_index":1998,"title":{},"body":{"contributing.html":{}}}],["interact",{"_index":2145,"title":{},"body":{"index.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-readme.html":{}}}],["interactions",{"_index":1918,"title":{},"body":{"contributing.html":{}}}],["interest",{"_index":1943,"title":{},"body":{"contributing.html":{}}}],["interface",{"_index":396,"title":{"interfaces/ApplicationData.html":{},"interfaces/ApplicationData-1.html":{},"interfaces/ApplicationState.html":{},"interfaces/ApplicationState-1.html":{},"interfaces/BasePlugin.html":{},"interfaces/BasePlugin-1.html":{},"interfaces/Block.html":{},"interfaces/BlocksMap.html":{},"interfaces/ChangeMap.html":{},"interfaces/CreateEditorJSOptions.html":{},"interfaces/DemoData.html":{},"interfaces/DemoData-1.html":{},"interfaces/EditorJSChange.html":{},"interfaces/EditorJSInstanceConfig.html":{},"interfaces/EditorJSMaterialForm.html":{},"interfaces/EditorMap.html":{},"interfaces/Header.html":{},"interfaces/HeaderBlock.html":{},"interfaces/Image.html":{},"interfaces/ImageBlock.html":{},"interfaces/InjectorApiCallOptions.html":{},"interfaces/InjectorApiCallResponse.html":{},"interfaces/InjectorMethodOption.html":{},"interfaces/List.html":{},"interfaces/ListBlock.html":{},"interfaces/MenuGroup.html":{},"interfaces/MenuGroup-1.html":{},"interfaces/MenuItem.html":{},"interfaces/MenuItem-1.html":{},"interfaces/NgxEditorJSConfig.html":{},"interfaces/NgxEditorJSDemo.html":{},"interfaces/NgxEditorJSDemo-1.html":{},"interfaces/NgxEditorJSDemoData.html":{},"interfaces/NgxEditorJSDemoData-1.html":{},"interfaces/NgxEditorJSModuleConfig.html":{},"interfaces/Page.html":{},"interfaces/PageBlock.html":{},"interfaces/PagesState.html":{},"interfaces/Paragraph.html":{},"interfaces/ParagraphBlock.html":{},"interfaces/PluginConfig.html":{},"interfaces/PluginConfig-1.html":{},"interfaces/ReadyMap.html":{},"interfaces/SavedMap.html":{},"interfaces/Tag.html":{},"interfaces/TinynodeDemos.html":{},"interfaces/TinynodeDemos-1.html":{},"interfaces/ToolSettingsMap.html":{},"interfaces/ToolSettingsMap-1.html":{}},"body":{"interfaces/ApplicationData.html":{},"interfaces/ApplicationData-1.html":{},"interfaces/ApplicationState.html":{},"interfaces/ApplicationState-1.html":{},"interfaces/BasePlugin.html":{},"interfaces/BasePlugin-1.html":{},"interfaces/Block.html":{},"interfaces/BlocksMap.html":{},"interfaces/ChangeMap.html":{},"interfaces/CreateEditorJSOptions.html":{},"interfaces/DemoData.html":{},"interfaces/DemoData-1.html":{},"interfaces/EditorJSChange.html":{},"interfaces/EditorJSInstanceConfig.html":{},"interfaces/EditorJSMaterialForm.html":{},"interfaces/EditorMap.html":{},"interfaces/Header.html":{},"interfaces/HeaderBlock.html":{},"interfaces/Image.html":{},"interfaces/ImageBlock.html":{},"interfaces/InjectorApiCallOptions.html":{},"interfaces/InjectorApiCallResponse.html":{},"interfaces/InjectorMethodOption.html":{},"interfaces/List.html":{},"interfaces/ListBlock.html":{},"interfaces/MenuGroup.html":{},"interfaces/MenuGroup-1.html":{},"interfaces/MenuItem.html":{},"interfaces/MenuItem-1.html":{},"components/NgxEditorJSBaseComponent.html":{},"interfaces/NgxEditorJSConfig.html":{},"interfaces/NgxEditorJSDemo.html":{},"interfaces/NgxEditorJSDemo-1.html":{},"interfaces/NgxEditorJSDemoData.html":{},"interfaces/NgxEditorJSDemoData-1.html":{},"interfaces/NgxEditorJSModuleConfig.html":{},"interfaces/Page.html":{},"interfaces/PageBlock.html":{},"interfaces/PagesState.html":{},"injectables/PagesStore.html":{},"interfaces/Paragraph.html":{},"interfaces/ParagraphBlock.html":{},"interfaces/PluginConfig.html":{},"interfaces/PluginConfig-1.html":{},"interfaces/ReadyMap.html":{},"interfaces/SavedMap.html":{},"interfaces/Tag.html":{},"interfaces/TinynodeDemos.html":{},"interfaces/TinynodeDemos-1.html":{},"interfaces/ToolSettingsMap.html":{},"interfaces/ToolSettingsMap-1.html":{},"changelog.html":{},"contributing.html":{},"index.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-readme.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-readme/ngx-editorjs-changelog.html":{}}}],["interfaces",{"_index":397,"title":{},"body":{"interfaces/ApplicationData.html":{},"interfaces/ApplicationData-1.html":{},"interfaces/ApplicationState.html":{},"interfaces/ApplicationState-1.html":{},"interfaces/BasePlugin.html":{},"interfaces/BasePlugin-1.html":{},"interfaces/Block.html":{},"interfaces/BlocksMap.html":{},"interfaces/ChangeMap.html":{},"interfaces/CreateEditorJSOptions.html":{},"interfaces/DemoData.html":{},"interfaces/DemoData-1.html":{},"interfaces/EditorJSChange.html":{},"interfaces/EditorJSInstanceConfig.html":{},"interfaces/EditorJSMaterialForm.html":{},"interfaces/EditorMap.html":{},"interfaces/Header.html":{},"interfaces/HeaderBlock.html":{},"interfaces/Image.html":{},"interfaces/ImageBlock.html":{},"interfaces/InjectorApiCallOptions.html":{},"interfaces/InjectorApiCallResponse.html":{},"interfaces/InjectorMethodOption.html":{},"interfaces/List.html":{},"interfaces/ListBlock.html":{},"interfaces/MenuGroup.html":{},"interfaces/MenuGroup-1.html":{},"interfaces/MenuItem.html":{},"interfaces/MenuItem-1.html":{},"interfaces/NgxEditorJSConfig.html":{},"interfaces/NgxEditorJSDemo.html":{},"interfaces/NgxEditorJSDemo-1.html":{},"interfaces/NgxEditorJSDemoData.html":{},"interfaces/NgxEditorJSDemoData-1.html":{},"interfaces/NgxEditorJSModuleConfig.html":{},"interfaces/Page.html":{},"interfaces/PageBlock.html":{},"interfaces/PagesState.html":{},"interfaces/Paragraph.html":{},"interfaces/ParagraphBlock.html":{},"interfaces/PluginConfig.html":{},"interfaces/PluginConfig-1.html":{},"interfaces/ReadyMap.html":{},"interfaces/SavedMap.html":{},"interfaces/Tag.html":{},"interfaces/TinynodeDemos.html":{},"interfaces/TinynodeDemos-1.html":{},"interfaces/ToolSettingsMap.html":{},"interfaces/ToolSettingsMap-1.html":{},"overview.html":{}}}],["internal",{"_index":586,"title":{},"body":{"interfaces/EditorJSInstanceConfig.html":{},"interfaces/EditorJSMaterialForm.html":{},"components/FormContainerComponent.html":{},"interfaces/InjectorApiCallOptions.html":{},"interfaces/InjectorApiCallResponse.html":{},"interfaces/InjectorMethodOption.html":{},"modules/MaterialModule.html":{},"components/NavBarComponent.html":{},"components/NgxEditorJSBaseComponent.html":{},"components/NgxEditorJSComponent.html":{},"interfaces/NgxEditorJSConfig.html":{},"injectables/NgxEditorJSInstanceService.html":{},"interfaces/NgxEditorJSModuleConfig.html":{},"components/PageContainerComponent.html":{},"modules/PageStoreModule.html":{},"miscellaneous/variables.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-readme/ngx-editorjs-changelog.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-plugins-readme/ngx-editorjs-plugins-changelog.html":{}}}],["internally",{"_index":1868,"title":{},"body":{"changelog.html":{}}}],["interval.interval",{"_index":1085,"title":{},"body":{"components/NgxEditorJSBaseComponent.html":{}}}],["investigated",{"_index":2068,"title":{},"body":{"contributing.html":{}}}],["isfocused",{"_index":1006,"title":{},"body":{"components/NgxEditorJSBaseComponent.html":{},"components/NgxEditorJSComponent.html":{},"directives/NgxEditorJSDirective.html":{}}}],["ispanelopen",{"_index":1186,"title":{},"body":{"components/NgxEditorJSDemoInfoComponent.html":{}}}],["isready",{"_index":845,"title":{},"body":{"components/FormContainerComponent.html":{},"classes/MockEditorJS.html":{},"classes/MockPlugin.html":{},"components/NgxEditorJSBaseComponent.html":{},"components/NgxEditorJSComponent.html":{},"directives/NgxEditorJSDirective.html":{},"injectables/NgxEditorJSInstanceService.html":{},"injectables/NgxEditorJSService.html":{},"classes/TestClass.html":{}}}],["isready(options",{"_index":1368,"title":{},"body":{"injectables/NgxEditorJSInstanceService.html":{},"injectables/NgxEditorJSService.html":{}}}],["isreadymap",{"_index":589,"title":{},"body":{"interfaces/EditorJSInstanceConfig.html":{},"interfaces/InjectorApiCallOptions.html":{},"interfaces/InjectorApiCallResponse.html":{},"interfaces/InjectorMethodOption.html":{},"injectables/NgxEditorJSInstanceService.html":{},"miscellaneous/variables.html":{}}}],["issue",{"_index":1912,"title":{},"body":{"contributing.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-readme/ngx-editorjs-changelog.html":{}}}],["issues",{"_index":1887,"title":{},"body":{"changelog.html":{},"contributing.html":{}}}],["istouched",{"_index":1007,"title":{},"body":{"components/NgxEditorJSBaseComponent.html":{},"components/NgxEditorJSComponent.html":{},"directives/NgxEditorJSDirective.html":{}}}],["it's",{"_index":117,"title":{},"body":{"components/AppContainerComponent.html":{},"directives/NgxEditorJSDirective.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-readme.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-readme/ngx-editorjs-changelog.html":{}}}],["item",{"_index":404,"title":{},"body":{"interfaces/ApplicationData.html":{},"interfaces/ApplicationData-1.html":{},"interfaces/MenuGroup.html":{},"interfaces/MenuGroup-1.html":{},"interfaces/MenuItem.html":{},"interfaces/MenuItem-1.html":{}}}],["items",{"_index":165,"title":{},"body":{"components/AppContainerComponent.html":{},"interfaces/ApplicationData.html":{},"interfaces/ApplicationData-1.html":{},"interfaces/Block.html":{},"interfaces/Header.html":{},"interfaces/HeaderBlock.html":{},"interfaces/Image.html":{},"interfaces/ImageBlock.html":{},"interfaces/List.html":{},"interfaces/ListBlock.html":{},"interfaces/MenuGroup.html":{},"interfaces/MenuGroup-1.html":{},"interfaces/MenuItem.html":{},"interfaces/MenuItem-1.html":{},"components/NavBarComponent.html":{},"interfaces/Paragraph.html":{},"interfaces/ParagraphBlock.html":{}}}],["js",{"_index":2111,"title":{},"body":{"dependencies.html":{},"miscellaneous/variables.html":{}}}],["js/code",{"_index":1753,"title":{},"body":{"modules/PluginCodeModule.html":{}}}],["js/header",{"_index":1764,"title":{},"body":{"modules/PluginHeaderModule.html":{}}}],["js/image",{"_index":1773,"title":{},"body":{"modules/PluginImageModule.html":{},"modules/PluginSimpleImageModule.html":{}}}],["js/link",{"_index":1782,"title":{},"body":{"modules/PluginLinkModule.html":{}}}],["js/list",{"_index":1791,"title":{},"body":{"modules/PluginListModule.html":{}}}],["js/marker",{"_index":1803,"title":{},"body":{"modules/PluginMarkerModule.html":{}}}],["js/paragraph",{"_index":1812,"title":{},"body":{"modules/PluginParagraphModule.html":{}}}],["json",{"_index":862,"title":{},"body":{"components/FormContainerComponent.html":{},"components/PageContainerComponent.html":{}}}],["json.stringify(blocks",{"_index":1678,"title":{},"body":{"components/PageContainerComponent.html":{}}}],["keep",{"_index":2280,"title":{},"body":{"additional-documentation/tinynodes-library-docs/ngx-editorjs-readme/ngx-editorjs-changelog.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-plugins-readme/ngx-editorjs-plugins-changelog.html":{}}}],["key",{"_index":349,"title":{},"body":{"injectables/AppService.html":{},"injectables/AppService-1.html":{},"interfaces/ApplicationData.html":{},"interfaces/ApplicationData-1.html":{},"interfaces/ApplicationState.html":{},"interfaces/ApplicationState-1.html":{},"interfaces/BasePlugin.html":{},"interfaces/BasePlugin-1.html":{},"interfaces/Block.html":{},"interfaces/BlocksMap.html":{},"interfaces/ChangeMap.html":{},"interfaces/DemoData.html":{},"interfaces/DemoData-1.html":{},"interfaces/EditorJSChange.html":{},"interfaces/EditorMap.html":{},"interfaces/Header.html":{},"interfaces/HeaderBlock.html":{},"interfaces/Image.html":{},"interfaces/ImageBlock.html":{},"interfaces/List.html":{},"interfaces/ListBlock.html":{},"interfaces/MenuGroup.html":{},"interfaces/MenuGroup-1.html":{},"interfaces/MenuItem.html":{},"interfaces/MenuItem-1.html":{},"interfaces/NgxEditorJSDemo.html":{},"interfaces/NgxEditorJSDemo-1.html":{},"interfaces/NgxEditorJSDemoData.html":{},"interfaces/NgxEditorJSDemoData-1.html":{},"injectables/NgxEditorJSPluginService.html":{},"interfaces/Page.html":{},"interfaces/PageBlock.html":{},"interfaces/Paragraph.html":{},"interfaces/ParagraphBlock.html":{},"interfaces/PluginConfig.html":{},"interfaces/PluginConfig-1.html":{},"interfaces/ReadyMap.html":{},"interfaces/SavedMap.html":{},"interfaces/Tag.html":{},"interfaces/TinynodeDemos.html":{},"interfaces/TinynodeDemos-1.html":{},"interfaces/ToolSettingsMap.html":{},"interfaces/ToolSettingsMap-1.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-readme.html":{}}}],["keys",{"_index":444,"title":{},"body":{"interfaces/ApplicationState.html":{},"interfaces/ApplicationState-1.html":{},"interfaces/DemoData.html":{},"interfaces/DemoData-1.html":{},"components/NgxEditorJSBaseComponent.html":{},"components/NgxEditorJSComponent.html":{},"interfaces/NgxEditorJSDemo.html":{},"interfaces/NgxEditorJSDemo-1.html":{},"interfaces/NgxEditorJSDemoData.html":{},"interfaces/NgxEditorJSDemoData-1.html":{},"directives/NgxEditorJSDirective.html":{},"injectables/NgxEditorJSPluginService.html":{},"interfaces/TinynodeDemos.html":{},"interfaces/TinynodeDemos-1.html":{},"miscellaneous/enumerations.html":{}}}],["kind",{"_index":2193,"title":{},"body":{"license.html":{}}}],["label",{"_index":186,"title":{},"body":{"components/AppContainerComponent.html":{},"interfaces/ApplicationData.html":{},"interfaces/ApplicationData-1.html":{},"interfaces/EditorJSMaterialForm.html":{},"interfaces/MenuGroup.html":{},"interfaces/MenuGroup-1.html":{},"interfaces/MenuItem.html":{},"interfaces/MenuItem-1.html":{},"components/NavBarComponent.html":{}}}],["language",{"_index":1974,"title":{},"body":{"contributing.html":{}}}],["last",{"_index":539,"title":{},"body":{"interfaces/BlocksMap.html":{},"interfaces/ChangeMap.html":{},"interfaces/EditorJSChange.html":{},"interfaces/EditorMap.html":{},"components/NgxEditorJSBaseComponent.html":{},"components/NgxEditorJSComponent.html":{},"interfaces/NgxEditorJSConfig.html":{},"directives/NgxEditorJSDirective.html":{},"interfaces/NgxEditorJSModuleConfig.html":{},"injectables/NgxEditorJSService.html":{},"components/PageContainerComponent.html":{},"interfaces/ReadyMap.html":{},"interfaces/SavedMap.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-readme.html":{}}}],["layer",{"_index":1922,"title":{},"body":{"contributing.html":{}}}],["layout",{"_index":261,"title":{},"body":{"modules/AppModule.html":{},"dependencies.html":{}}}],["layoutmodule",{"_index":289,"title":{},"body":{"modules/AppModule.html":{}}}],["leadership",{"_index":2089,"title":{},"body":{"contributing.html":{}}}],["left",{"_index":909,"title":{},"body":{"components/HomePageComponent.html":{},"components/NgxEditorJSComponent.html":{}}}],["legend",{"_index":189,"title":{},"body":{"components/AppContainerComponent.html":{},"modules/AppModule.html":{},"modules/ApplicationDataModule.html":{},"components/FormContainerComponent.html":{},"components/HomePageComponent.html":{},"components/NavBarComponent.html":{},"components/NgxEditorJSBaseComponent.html":{},"components/NgxEditorJSComponent.html":{},"components/NgxEditorJSDemoHomeComponent.html":{},"components/NgxEditorJSDemoInfoComponent.html":{},"modules/NgxEditorJSModule.html":{},"modules/NgxEditorjsDemoModule.html":{},"modules/NgxEditorjsNgrxModule.html":{},"modules/NgxEditorjsPluginsModule.html":{},"modules/NgxTinynodesCoreModule.html":{},"components/PageContainerComponent.html":{},"modules/PageStoreModule.html":{},"modules/PluginCodeModule.html":{},"modules/PluginHeaderModule.html":{},"modules/PluginImageModule.html":{},"modules/PluginLinkModule.html":{},"modules/PluginListModule.html":{},"modules/PluginMarkerModule.html":{},"modules/PluginParagraphModule.html":{},"modules/PluginSimpleImageModule.html":{},"components/SidebarComponent.html":{},"overview.html":{}}}],["level",{"_index":506,"title":{},"body":{"interfaces/Block.html":{},"components/FormContainerComponent.html":{},"interfaces/Header.html":{},"interfaces/HeaderBlock.html":{},"interfaces/Image.html":{},"interfaces/ImageBlock.html":{},"interfaces/List.html":{},"interfaces/ListBlock.html":{},"interfaces/Paragraph.html":{},"interfaces/ParagraphBlock.html":{},"changelog.html":{},"contributing.html":{}}}],["liability",{"_index":2208,"title":{},"body":{"license.html":{}}}],["liable",{"_index":2205,"title":{},"body":{"license.html":{}}}],["lib/types/config",{"_index":933,"title":{},"body":{"classes/MockEditorJS.html":{},"classes/MockPlugin.html":{},"classes/TestClass.html":{}}}],["lib/types/plugins",{"_index":932,"title":{},"body":{"classes/MockEditorJS.html":{},"classes/MockPlugin.html":{},"classes/TestClass.html":{}}}],["libraries",{"_index":902,"title":{},"body":{"components/HomePageComponent.html":{},"changelog.html":{},"index.html":{},"additional-documentation/tinynodes-library-docs.html":{}}}],["library",{"_index":1848,"title":{"additional-documentation/tinynodes-library-docs.html":{}},"body":{"changelog.html":{},"index.html":{},"todo.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-readme.html":{}}}],["libs/.../application.model.ts",{"_index":2124,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["libs/.../blocks.ts",{"_index":2235,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["libs/.../config.ts",{"_index":2238,"title":{},"body":{"miscellaneous/variables.html":{}}}],["libs/.../container.class.ts",{"_index":2239,"title":{},"body":{"miscellaneous/variables.html":{}}}],["libs/.../editor",{"_index":2127,"title":{},"body":{"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["libs/.../editorjs",{"_index":2240,"title":{},"body":{"miscellaneous/variables.html":{}}}],["libs/.../index.ts",{"_index":2130,"title":{},"body":{"miscellaneous/functions.html":{}}}],["libs/.../injector.ts",{"_index":2241,"title":{},"body":{"miscellaneous/variables.html":{}}}],["libs/.../module",{"_index":2129,"title":{},"body":{"miscellaneous/functions.html":{}}}],["libs/.../ngx",{"_index":2126,"title":{},"body":{"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["libs/.../plugins.ts",{"_index":2246,"title":{},"body":{"miscellaneous/variables.html":{}}}],["libs/.../tag.component.ts",{"_index":2249,"title":{},"body":{"miscellaneous/variables.html":{}}}],["libs/ngx",{"_index":316,"title":{},"body":{"injectables/AppService.html":{},"interfaces/ApplicationData.html":{},"modules/ApplicationDataModule.html":{},"injectables/ApplicationQuery.html":{},"interfaces/ApplicationState.html":{},"injectables/ApplicationStore.html":{},"interfaces/BasePlugin.html":{},"interfaces/BasePlugin-1.html":{},"interfaces/Block.html":{},"interfaces/BlocksMap.html":{},"interfaces/ChangeMap.html":{},"classes/Changed.html":{},"interfaces/CreateEditorJSOptions.html":{},"interfaces/DemoData.html":{},"interfaces/EditorJSChange.html":{},"interfaces/EditorJSInstanceConfig.html":{},"interfaces/EditorJSMaterialForm.html":{},"interfaces/EditorMap.html":{},"components/FormContainerComponent.html":{},"interfaces/Header.html":{},"interfaces/HeaderBlock.html":{},"interfaces/Image.html":{},"interfaces/ImageBlock.html":{},"interfaces/InjectorApiCallOptions.html":{},"interfaces/InjectorApiCallResponse.html":{},"interfaces/InjectorMethodOption.html":{},"interfaces/List.html":{},"interfaces/ListBlock.html":{},"interfaces/MenuGroup.html":{},"interfaces/MenuItem.html":{},"classes/MockEditorJS.html":{},"injectables/MockNgZone.html":{},"classes/MockPlugin.html":{},"components/NgxEditorJSBaseComponent.html":{},"components/NgxEditorJSComponent.html":{},"interfaces/NgxEditorJSConfig.html":{},"interfaces/NgxEditorJSDemo.html":{},"interfaces/NgxEditorJSDemoData.html":{},"components/NgxEditorJSDemoHomeComponent.html":{},"components/NgxEditorJSDemoInfoComponent.html":{},"directives/NgxEditorJSDirective.html":{},"injectables/NgxEditorJSEffects.html":{},"injectables/NgxEditorJSInstanceService.html":{},"modules/NgxEditorJSModule.html":{},"interfaces/NgxEditorJSModuleConfig.html":{},"injectables/NgxEditorJSPluginService.html":{},"injectables/NgxEditorJSService.html":{},"modules/NgxEditorjsDemoModule.html":{},"modules/NgxEditorjsNgrxModule.html":{},"modules/NgxEditorjsPluginsModule.html":{},"modules/NgxHideableHeaderDemoModule.html":{},"modules/NgxTinynodesCoreMaterialModule.html":{},"modules/NgxTinynodesCoreModule.html":{},"classes/NotReady.html":{},"interfaces/Page.html":{},"interfaces/PageBlock.html":{},"components/PageContainerComponent.html":{},"modules/PageStoreModule.html":{},"injectables/PagesQuery.html":{},"injectables/PagesService.html":{},"interfaces/PagesState.html":{},"injectables/PagesStore.html":{},"interfaces/Paragraph.html":{},"interfaces/ParagraphBlock.html":{},"injectables/PluginCode.html":{},"modules/PluginCodeModule.html":{},"interfaces/PluginConfig.html":{},"interfaces/PluginConfig-1.html":{},"injectables/PluginHeader.html":{},"modules/PluginHeaderModule.html":{},"injectables/PluginImage.html":{},"modules/PluginImageModule.html":{},"injectables/PluginLink.html":{},"modules/PluginLinkModule.html":{},"injectables/PluginList.html":{},"modules/PluginListModule.html":{},"injectables/PluginMarker.html":{},"modules/PluginMarkerModule.html":{},"injectables/PluginParagraph.html":{},"modules/PluginParagraphModule.html":{},"injectables/PluginSimpleImage.html":{},"modules/PluginSimpleImageModule.html":{},"classes/Ready.html":{},"interfaces/ReadyMap.html":{},"classes/SaveEnd.html":{},"classes/SaveStart.html":{},"interfaces/SavedMap.html":{},"interfaces/Tag.html":{},"classes/TestClass.html":{},"interfaces/TinynodeDemos.html":{},"interfaces/ToolSettingsMap.html":{},"interfaces/ToolSettingsMap-1.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["licence",{"_index":2159,"title":{},"body":{"license.html":{}}}],["license",{"_index":2156,"title":{"license.html":{}},"body":{}}],["life",{"_index":715,"title":{},"body":{"interfaces/EditorJSMaterialForm.html":{},"injectables/NgxEditorJSInstanceService.html":{},"index.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-readme.html":{}}}],["lightgray",{"_index":163,"title":{},"body":{"components/AppContainerComponent.html":{},"components/NavBarComponent.html":{}}}],["limitation",{"_index":2172,"title":{},"body":{"license.html":{}}}],["limited",{"_index":2196,"title":{},"body":{"license.html":{}}}],["line",{"_index":187,"title":{},"body":{"components/AppContainerComponent.html":{},"components/NavBarComponent.html":{}}}],["link",{"_index":410,"title":{},"body":{"interfaces/ApplicationData.html":{},"interfaces/ApplicationData-1.html":{},"interfaces/MenuGroup.html":{},"interfaces/MenuGroup-1.html":{},"interfaces/MenuItem.html":{},"interfaces/MenuItem-1.html":{},"injectables/MockNgZone.html":{},"injectables/PluginLink.html":{}}}],["link.label",{"_index":1208,"title":{},"body":{"components/NgxEditorJSDemoInfoComponent.html":{}}}],["link.plugin",{"_index":1781,"title":{},"body":{"modules/PluginLinkModule.html":{}}}],["links",{"_index":148,"title":{},"body":{"components/AppContainerComponent.html":{},"interfaces/ApplicationState.html":{},"interfaces/DemoData.html":{},"components/FormContainerComponent.html":{},"components/HomePageComponent.html":{},"interfaces/NgxEditorJSDemo.html":{},"interfaces/NgxEditorJSDemoData.html":{},"components/NgxEditorJSDemoHomeComponent.html":{},"components/NgxEditorJSDemoInfoComponent.html":{},"components/PageContainerComponent.html":{},"interfaces/TinynodeDemos.html":{},"index.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-readme.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-plugins-readme.html":{}}}],["list",{"_index":166,"title":{"interfaces/List.html":{}},"body":{"components/AppContainerComponent.html":{},"interfaces/ApplicationData.html":{},"interfaces/ApplicationData-1.html":{},"interfaces/Block.html":{},"components/FormContainerComponent.html":{},"interfaces/Header.html":{},"interfaces/HeaderBlock.html":{},"components/HomePageComponent.html":{},"interfaces/Image.html":{},"interfaces/ImageBlock.html":{},"interfaces/List.html":{},"interfaces/ListBlock.html":{},"interfaces/MenuGroup.html":{},"interfaces/MenuGroup-1.html":{},"interfaces/MenuItem.html":{},"interfaces/MenuItem-1.html":{},"components/NavBarComponent.html":{},"components/PageContainerComponent.html":{},"interfaces/Paragraph.html":{},"interfaces/ParagraphBlock.html":{},"injectables/PluginList.html":{},"miscellaneous/typealiases.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-readme.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-readme/ngx-editorjs-changelog.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-plugins-readme.html":{}}}],["list.plugin",{"_index":1790,"title":{},"body":{"modules/PluginListModule.html":{}}}],["listblock",{"_index":502,"title":{"interfaces/ListBlock.html":{}},"body":{"interfaces/Block.html":{},"interfaces/Header.html":{},"interfaces/HeaderBlock.html":{},"interfaces/Image.html":{},"interfaces/ImageBlock.html":{},"interfaces/List.html":{},"interfaces/ListBlock.html":{},"interfaces/Paragraph.html":{},"interfaces/ParagraphBlock.html":{},"miscellaneous/typealiases.html":{}}}],["listed",{"_index":2322,"title":{},"body":{"additional-documentation/tinynodes-library-docs/ngx-editorjs-plugins-readme.html":{}}}],["listen",{"_index":987,"title":{},"body":{"components/NgxEditorJSBaseComponent.html":{}}}],["listener",{"_index":717,"title":{},"body":{"interfaces/EditorJSMaterialForm.html":{},"directives/NgxEditorJSDirective.html":{}}}],["listeners",{"_index":1057,"title":{},"body":{"components/NgxEditorJSBaseComponent.html":{},"components/NgxEditorJSComponent.html":{}}}],["listners",{"_index":1244,"title":{},"body":{"directives/NgxEditorJSDirective.html":{}}}],["liststyle",{"_index":501,"title":{},"body":{"interfaces/Block.html":{},"interfaces/Header.html":{},"interfaces/HeaderBlock.html":{},"interfaces/Image.html":{},"interfaces/ImageBlock.html":{},"interfaces/List.html":{},"interfaces/ListBlock.html":{},"interfaces/Paragraph.html":{},"interfaces/ParagraphBlock.html":{},"miscellaneous/typealiases.html":{}}}],["literal",{"_index":549,"title":{},"body":{"classes/Changed.html":{},"classes/NotReady.html":{},"classes/Ready.html":{},"classes/SaveEnd.html":{},"classes/SaveStart.html":{}}}],["load",{"_index":343,"title":{},"body":{"injectables/AppService.html":{},"injectables/AppService-1.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-readme.html":{}}}],["loaded",{"_index":442,"title":{},"body":{"interfaces/ApplicationState.html":{},"interfaces/ApplicationState-1.html":{},"interfaces/DemoData.html":{},"interfaces/DemoData-1.html":{},"interfaces/NgxEditorJSDemo.html":{},"interfaces/NgxEditorJSDemo-1.html":{},"interfaces/NgxEditorJSDemoData.html":{},"interfaces/NgxEditorJSDemoData-1.html":{},"interfaces/TinynodeDemos.html":{},"interfaces/TinynodeDemos-1.html":{}}}],["loader",{"_index":294,"title":{},"body":{"modules/AppModule.html":{}}}],["loading",{"_index":746,"title":{},"body":{"components/FormContainerComponent.html":{},"modules/NgxTinynodesCoreModule.html":{},"components/PageContainerComponent.html":{}}}],["loads",{"_index":319,"title":{},"body":{"injectables/AppService.html":{},"injectables/AppService-1.html":{},"modules/MaterialModule.html":{}}}],["locations",{"_index":1928,"title":{},"body":{"contributing.html":{}}}],["longer",{"_index":2306,"title":{},"body":{"additional-documentation/tinynodes-library-docs/ngx-editorjs-readme/ngx-editorjs-changelog.html":{}}}],["lot",{"_index":1873,"title":{},"body":{"changelog.html":{}}}],["lots",{"_index":2297,"title":{},"body":{"additional-documentation/tinynodes-library-docs/ngx-editorjs-readme/ngx-editorjs-changelog.html":{}}}],["lt;code",{"_index":872,"title":{},"body":{"components/FormContainerComponent.html":{},"components/PageContainerComponent.html":{}}}],["lt;h1",{"_index":868,"title":{},"body":{"components/FormContainerComponent.html":{},"components/PageContainerComponent.html":{}}}],["lt;h6",{"_index":869,"title":{},"body":{"components/FormContainerComponent.html":{},"components/PageContainerComponent.html":{}}}],["lt;img",{"_index":874,"title":{},"body":{"components/FormContainerComponent.html":{},"components/PageContainerComponent.html":{}}}],["lt;li",{"_index":871,"title":{},"body":{"components/FormContainerComponent.html":{},"components/PageContainerComponent.html":{}}}],["lt;ol",{"_index":870,"title":{},"body":{"components/FormContainerComponent.html":{},"components/PageContainerComponent.html":{}}}],["lt;p",{"_index":867,"title":{},"body":{"components/FormContainerComponent.html":{},"components/PageContainerComponent.html":{}}}],["mail",{"_index":2046,"title":{},"body":{"contributing.html":{}}}],["main",{"_index":13,"title":{},"body":{"components/AppContainerComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"injectables/AppService.html":{},"injectables/AppService-1.html":{},"components/FormContainerComponent.html":{},"components/NavBarComponent.html":{},"directives/NgxEditorJSDirective.html":{},"components/PageContainerComponent.html":{},"changelog.html":{},"miscellaneous/variables.html":{}}}],["mainmenu",{"_index":40,"title":{},"body":{"components/AppContainerComponent.html":{}}}],["maintain",{"_index":2073,"title":{},"body":{"contributing.html":{}}}],["maintainers",{"_index":1947,"title":{},"body":{"contributing.html":{}}}],["major",{"_index":1854,"title":{},"body":{"changelog.html":{}}}],["make",{"_index":1342,"title":{},"body":{"injectables/NgxEditorJSInstanceService.html":{},"injectables/NgxEditorJSService.html":{},"contributing.html":{}}}],["makes",{"_index":584,"title":{},"body":{"interfaces/EditorJSInstanceConfig.html":{},"interfaces/InjectorApiCallOptions.html":{},"interfaces/InjectorApiCallResponse.html":{},"interfaces/InjectorMethodOption.html":{},"injectables/NgxEditorJSPluginService.html":{}}}],["making",{"_index":1904,"title":{},"body":{"changelog.html":{},"contributing.html":{}}}],["managing",{"_index":1872,"title":{},"body":{"changelog.html":{}}}],["manually",{"_index":2325,"title":{},"body":{"additional-documentation/tinynodes-library-docs/ngx-editorjs-plugins-readme.html":{}}}],["map",{"_index":357,"title":{},"body":{"injectables/AppService.html":{},"injectables/AppService-1.html":{},"interfaces/BasePlugin.html":{},"interfaces/BasePlugin-1.html":{},"interfaces/BlocksMap.html":{},"interfaces/ChangeMap.html":{},"interfaces/EditorJSChange.html":{},"interfaces/EditorJSInstanceConfig.html":{},"interfaces/EditorMap.html":{},"interfaces/InjectorApiCallOptions.html":{},"interfaces/InjectorApiCallResponse.html":{},"interfaces/InjectorMethodOption.html":{},"components/NgxEditorJSBaseComponent.html":{},"injectables/NgxEditorJSEffects.html":{},"injectables/NgxEditorJSInstanceService.html":{},"injectables/NgxEditorJSPluginService.html":{},"injectables/NgxEditorJSService.html":{},"components/PageContainerComponent.html":{},"interfaces/PluginConfig.html":{},"interfaces/PluginConfig-1.html":{},"interfaces/ReadyMap.html":{},"interfaces/SavedMap.html":{},"interfaces/ToolSettingsMap.html":{},"interfaces/ToolSettingsMap-1.html":{},"miscellaneous/variables.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-readme.html":{}}}],["map((action",{"_index":1312,"title":{},"body":{"injectables/NgxEditorJSEffects.html":{}}}],["map((demodata",{"_index":377,"title":{},"body":{"injectables/AppService.html":{},"injectables/AppService-1.html":{}}}],["map(blocks",{"_index":1677,"title":{},"body":{"components/PageContainerComponent.html":{}}}],["map(editor",{"_index":1410,"title":{},"body":{"injectables/NgxEditorJSInstanceService.html":{}}}],["map(interval",{"_index":1084,"title":{},"body":{"components/NgxEditorJSBaseComponent.html":{}}}],["map(menus",{"_index":385,"title":{},"body":{"injectables/AppService.html":{},"injectables/AppService-1.html":{}}}],["map(origin",{"_index":1091,"title":{},"body":{"components/NgxEditorJSBaseComponent.html":{}}}],["map_defaults",{"_index":587,"title":{},"body":{"interfaces/EditorJSInstanceConfig.html":{},"interfaces/InjectorApiCallOptions.html":{},"interfaces/InjectorApiCallResponse.html":{},"interfaces/InjectorMethodOption.html":{},"injectables/NgxEditorJSInstanceService.html":{},"miscellaneous/variables.html":{}}}],["map_defaults.foreach(([mapkey",{"_index":1443,"title":{},"body":{"injectables/NgxEditorJSInstanceService.html":{}}}],["maps",{"_index":1542,"title":{},"body":{"injectables/NgxEditorJSService.html":{}}}],["margin",{"_index":170,"title":{},"body":{"components/AppContainerComponent.html":{},"components/NavBarComponent.html":{}}}],["markdown",{"_index":275,"title":{},"body":{"modules/AppModule.html":{},"modules/NgxEditorjsDemoModule.html":{},"dependencies.html":{}}}],["markdownmodule",{"_index":274,"title":{},"body":{"modules/AppModule.html":{},"modules/NgxEditorjsDemoModule.html":{}}}],["markdownmodule.forchild",{"_index":1601,"title":{},"body":{"modules/NgxEditorjsDemoModule.html":{}}}],["markdownmodule.forroot",{"_index":293,"title":{},"body":{"modules/AppModule.html":{}}}],["marker",{"_index":1794,"title":{},"body":{"injectables/PluginMarker.html":{},"modules/PluginMarkerModule.html":{}}}],["marker.plugin",{"_index":1802,"title":{},"body":{"modules/PluginMarkerModule.html":{}}}],["marking",{"_index":2328,"title":{},"body":{"additional-documentation/tinynodes-library-docs/ngx-editorjs-plugins-readme.html":{}}}],["mat",{"_index":151,"title":{},"body":{"components/AppContainerComponent.html":{},"interfaces/EditorJSMaterialForm.html":{},"components/FormContainerComponent.html":{},"components/HomePageComponent.html":{},"components/NavBarComponent.html":{},"components/NgxEditorJSBaseComponent.html":{},"components/NgxEditorJSComponent.html":{},"components/NgxEditorJSDemoHomeComponent.html":{},"components/NgxEditorJSDemoInfoComponent.html":{},"modules/NgxEditorJSModule.html":{},"components/PageContainerComponent.html":{},"components/SidebarComponent.html":{},"miscellaneous/variables.html":{}}}],["matbadgemodule",{"_index":1587,"title":{},"body":{"modules/NgxEditorjsDemoModule.html":{}}}],["matbuttonmodule",{"_index":288,"title":{},"body":{"modules/AppModule.html":{},"modules/MaterialModule.html":{},"modules/NgxEditorjsDemoModule.html":{},"modules/NgxTinynodesCoreMaterialModule.html":{}}}],["matcardmodule",{"_index":919,"title":{},"body":{"modules/MaterialModule.html":{},"modules/NgxEditorjsDemoModule.html":{},"modules/NgxTinynodesCoreMaterialModule.html":{}}}],["match",{"_index":1031,"title":{},"body":{"components/NgxEditorJSBaseComponent.html":{},"components/NgxEditorJSComponent.html":{},"directives/NgxEditorJSDirective.html":{}}}],["matcher",{"_index":46,"title":{},"body":{"components/AppContainerComponent.html":{}}}],["matching",{"_index":227,"title":{},"body":{"components/AppContainerComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"injectables/AppService.html":{},"injectables/AppService-1.html":{},"interfaces/ApplicationData.html":{},"interfaces/ApplicationData-1.html":{},"modules/ApplicationDataModule.html":{},"injectables/ApplicationQuery.html":{},"injectables/ApplicationQuery-1.html":{},"interfaces/ApplicationState.html":{},"interfaces/ApplicationState-1.html":{},"injectables/ApplicationStore.html":{},"injectables/ApplicationStore-1.html":{},"interfaces/BasePlugin.html":{},"interfaces/BasePlugin-1.html":{},"interfaces/Block.html":{},"interfaces/BlocksMap.html":{},"interfaces/ChangeMap.html":{},"classes/Changed.html":{},"interfaces/CreateEditorJSOptions.html":{},"interfaces/DemoData.html":{},"interfaces/DemoData-1.html":{},"interfaces/EditorJSChange.html":{},"interfaces/EditorJSInstanceConfig.html":{},"interfaces/EditorJSMaterialForm.html":{},"interfaces/EditorMap.html":{},"components/FormContainerComponent.html":{},"interfaces/Header.html":{},"interfaces/HeaderBlock.html":{},"components/HomePageComponent.html":{},"interfaces/Image.html":{},"interfaces/ImageBlock.html":{},"interfaces/InjectorApiCallOptions.html":{},"interfaces/InjectorApiCallResponse.html":{},"interfaces/InjectorMethodOption.html":{},"interfaces/List.html":{},"interfaces/ListBlock.html":{},"modules/MaterialModule.html":{},"interfaces/MenuGroup.html":{},"interfaces/MenuGroup-1.html":{},"interfaces/MenuItem.html":{},"interfaces/MenuItem-1.html":{},"classes/MockEditorJS.html":{},"injectables/MockNgZone.html":{},"classes/MockPlugin.html":{},"components/NavBarComponent.html":{},"components/NgxEditorJSBaseComponent.html":{},"components/NgxEditorJSComponent.html":{},"interfaces/NgxEditorJSConfig.html":{},"interfaces/NgxEditorJSDemo.html":{},"interfaces/NgxEditorJSDemo-1.html":{},"interfaces/NgxEditorJSDemoData.html":{},"interfaces/NgxEditorJSDemoData-1.html":{},"components/NgxEditorJSDemoHomeComponent.html":{},"components/NgxEditorJSDemoInfoComponent.html":{},"directives/NgxEditorJSDirective.html":{},"injectables/NgxEditorJSEffects.html":{},"injectables/NgxEditorJSInstanceService.html":{},"modules/NgxEditorJSModule.html":{},"interfaces/NgxEditorJSModuleConfig.html":{},"injectables/NgxEditorJSPluginService.html":{},"injectables/NgxEditorJSService.html":{},"modules/NgxEditorjsDemoModule.html":{},"modules/NgxEditorjsNgrxModule.html":{},"modules/NgxEditorjsPluginsModule.html":{},"modules/NgxHideableHeaderDemoModule.html":{},"modules/NgxTinynodesCoreMaterialModule.html":{},"modules/NgxTinynodesCoreModule.html":{},"classes/NotReady.html":{},"interfaces/Page.html":{},"interfaces/PageBlock.html":{},"components/PageContainerComponent.html":{},"modules/PageStoreModule.html":{},"injectables/PagesQuery.html":{},"injectables/PagesService.html":{},"interfaces/PagesState.html":{},"injectables/PagesStore.html":{},"interfaces/Paragraph.html":{},"interfaces/ParagraphBlock.html":{},"injectables/PluginCode.html":{},"modules/PluginCodeModule.html":{},"interfaces/PluginConfig.html":{},"interfaces/PluginConfig-1.html":{},"injectables/PluginHeader.html":{},"modules/PluginHeaderModule.html":{},"injectables/PluginImage.html":{},"modules/PluginImageModule.html":{},"injectables/PluginLink.html":{},"modules/PluginLinkModule.html":{},"injectables/PluginList.html":{},"modules/PluginListModule.html":{},"injectables/PluginMarker.html":{},"modules/PluginMarkerModule.html":{},"injectables/PluginParagraph.html":{},"modules/PluginParagraphModule.html":{},"injectables/PluginSimpleImage.html":{},"modules/PluginSimpleImageModule.html":{},"classes/Ready.html":{},"interfaces/ReadyMap.html":{},"classes/SaveEnd.html":{},"classes/SaveStart.html":{},"interfaces/SavedMap.html":{},"components/SidebarComponent.html":{},"interfaces/Tag.html":{},"classes/TestClass.html":{},"interfaces/TinynodeDemos.html":{},"interfaces/TinynodeDemos-1.html":{},"interfaces/ToolSettingsMap.html":{},"interfaces/ToolSettingsMap-1.html":{},"changelog.html":{},"contributing.html":{},"dependencies.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"index.html":{},"license.html":{},"modules.html":{},"overview.html":{},"todo.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{},"additional-documentation/tinynodes-library-docs.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-readme.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-readme/ngx-editorjs-changelog.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-plugins-readme.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-plugins-readme/ngx-editorjs-plugins-changelog.html":{}}}],["matchipsmodule",{"_index":1586,"title":{},"body":{"modules/NgxEditorjsDemoModule.html":{}}}],["matchview(event",{"_index":134,"title":{},"body":{"components/AppContainerComponent.html":{}}}],["materia",{"_index":863,"title":{},"body":{"components/FormContainerComponent.html":{}}}],["material",{"_index":81,"title":{},"body":{"components/AppContainerComponent.html":{},"interfaces/EditorJSMaterialForm.html":{},"components/FormContainerComponent.html":{},"modules/MaterialModule.html":{},"components/NgxEditorJSDemoHomeComponent.html":{},"changelog.html":{},"index.html":{},"miscellaneous/variables.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-readme.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-readme/ngx-editorjs-changelog.html":{}}}],["material.module",{"_index":285,"title":{},"body":{"modules/AppModule.html":{},"modules/NgxTinynodesCoreModule.html":{}}}],["material.module.ts",{"_index":1643,"title":{},"body":{"modules/NgxTinynodesCoreMaterialModule.html":{}}}],["material](https://material.angular.io",{"_index":632,"title":{},"body":{"interfaces/EditorJSMaterialForm.html":{}}}],["materialmodule",{"_index":243,"title":{"modules/MaterialModule.html":{}},"body":{"modules/AppModule.html":{},"modules/MaterialModule.html":{},"modules/NgxEditorjsDemoModule.html":{},"modules.html":{},"overview.html":{}}}],["matexpansionmodule",{"_index":1585,"title":{},"body":{"modules/NgxEditorjsDemoModule.html":{},"modules/NgxTinynodesCoreMaterialModule.html":{}}}],["matformfieldcontrol",{"_index":609,"title":{},"body":{"interfaces/EditorJSMaterialForm.html":{},"miscellaneous/variables.html":{}}}],["matformfieldmodule",{"_index":1476,"title":{},"body":{"modules/NgxEditorJSModule.html":{},"modules/NgxEditorjsDemoModule.html":{}}}],["matgridlistmodule",{"_index":1584,"title":{},"body":{"modules/NgxEditorjsDemoModule.html":{},"modules/NgxTinynodesCoreMaterialModule.html":{}}}],["maticonmodule",{"_index":917,"title":{},"body":{"modules/MaterialModule.html":{},"modules/NgxEditorjsDemoModule.html":{}}}],["matinputmodule",{"_index":1477,"title":{},"body":{"modules/NgxEditorJSModule.html":{},"modules/NgxEditorjsDemoModule.html":{}}}],["matlistmodule",{"_index":918,"title":{},"body":{"modules/MaterialModule.html":{},"modules/NgxTinynodesCoreMaterialModule.html":{}}}],["matsidenav",{"_index":77,"title":{},"body":{"components/AppContainerComponent.html":{}}}],["matsidenavmodule",{"_index":915,"title":{},"body":{"modules/MaterialModule.html":{}}}],["mattoolbarmodule",{"_index":916,"title":{},"body":{"modules/MaterialModule.html":{}}}],["me@tane.dev",{"_index":2065,"title":{},"body":{"contributing.html":{},"license.html":{}}}],["means",{"_index":1250,"title":{},"body":{"directives/NgxEditorJSDirective.html":{}}}],["meantime",{"_index":1900,"title":{},"body":{"changelog.html":{}}}],["media",{"_index":2049,"title":{},"body":{"contributing.html":{}}}],["mediamatcher",{"_index":47,"title":{},"body":{"components/AppContainerComponent.html":{}}}],["mediaquerylist",{"_index":122,"title":{},"body":{"components/AppContainerComponent.html":{}}}],["members",{"_index":1989,"title":{},"body":{"contributing.html":{}}}],["men",{"_index":348,"title":{},"body":{"injectables/AppService.html":{},"injectables/AppService-1.html":{}}}],["menu",{"_index":88,"title":{},"body":{"components/AppContainerComponent.html":{},"injectables/AppService.html":{},"injectables/AppService-1.html":{},"interfaces/ApplicationData.html":{},"interfaces/ApplicationData-1.html":{},"interfaces/ApplicationState.html":{},"interfaces/ApplicationState-1.html":{},"interfaces/DemoData.html":{},"interfaces/DemoData-1.html":{},"components/FormContainerComponent.html":{},"components/HomePageComponent.html":{},"interfaces/MenuGroup.html":{},"interfaces/MenuGroup-1.html":{},"interfaces/MenuItem.html":{},"interfaces/MenuItem-1.html":{},"components/NavBarComponent.html":{},"interfaces/NgxEditorJSDemo.html":{},"interfaces/NgxEditorJSDemo-1.html":{},"interfaces/NgxEditorJSDemoData.html":{},"interfaces/NgxEditorJSDemoData-1.html":{},"components/NgxEditorJSDemoInfoComponent.html":{},"components/PageContainerComponent.html":{},"interfaces/TinynodeDemos.html":{},"interfaces/TinynodeDemos-1.html":{}}}],["menu.key",{"_index":387,"title":{},"body":{"injectables/AppService.html":{},"injectables/AppService-1.html":{}}}],["menu.label",{"_index":912,"title":{},"body":{"components/HomePageComponent.html":{}}}],["menugroup",{"_index":347,"title":{"interfaces/MenuGroup.html":{},"interfaces/MenuGroup-1.html":{}},"body":{"injectables/AppService.html":{},"injectables/AppService-1.html":{},"interfaces/ApplicationData.html":{},"interfaces/ApplicationData-1.html":{},"interfaces/ApplicationState.html":{},"interfaces/ApplicationState-1.html":{},"interfaces/DemoData.html":{},"interfaces/DemoData-1.html":{},"components/FormContainerComponent.html":{},"interfaces/MenuGroup.html":{},"interfaces/MenuGroup-1.html":{},"interfaces/MenuItem.html":{},"interfaces/MenuItem-1.html":{},"components/NavBarComponent.html":{},"interfaces/NgxEditorJSDemo.html":{},"interfaces/NgxEditorJSDemo-1.html":{},"interfaces/NgxEditorJSDemoData.html":{},"interfaces/NgxEditorJSDemoData-1.html":{},"components/NgxEditorJSDemoInfoComponent.html":{},"components/PageContainerComponent.html":{},"components/SidebarComponent.html":{},"interfaces/TinynodeDemos.html":{},"interfaces/TinynodeDemos-1.html":{}}}],["menuitem",{"_index":405,"title":{"interfaces/MenuItem.html":{},"interfaces/MenuItem-1.html":{}},"body":{"interfaces/ApplicationData.html":{},"interfaces/ApplicationData-1.html":{},"interfaces/ApplicationState.html":{},"interfaces/DemoData.html":{},"interfaces/MenuGroup.html":{},"interfaces/MenuGroup-1.html":{},"interfaces/MenuItem.html":{},"interfaces/MenuItem-1.html":{},"interfaces/NgxEditorJSDemo.html":{},"interfaces/NgxEditorJSDemoData.html":{},"interfaces/TinynodeDemos.html":{}}}],["menuitem.label",{"_index":981,"title":{},"body":{"components/NavBarComponent.html":{}}}],["menus",{"_index":383,"title":{},"body":{"injectables/AppService.html":{},"injectables/AppService-1.html":{},"interfaces/ApplicationData.html":{},"interfaces/ApplicationData-1.html":{},"interfaces/ApplicationState.html":{},"interfaces/ApplicationState-1.html":{},"injectables/ApplicationStore.html":{},"injectables/ApplicationStore-1.html":{},"interfaces/DemoData.html":{},"interfaces/DemoData-1.html":{},"interfaces/MenuGroup.html":{},"interfaces/MenuGroup-1.html":{},"interfaces/MenuItem.html":{},"interfaces/MenuItem-1.html":{},"interfaces/NgxEditorJSDemo.html":{},"interfaces/NgxEditorJSDemo-1.html":{},"interfaces/NgxEditorJSDemoData.html":{},"interfaces/NgxEditorJSDemoData-1.html":{},"interfaces/TinynodeDemos.html":{},"interfaces/TinynodeDemos-1.html":{},"miscellaneous/enumerations.html":{}}}],["menus.find(menu",{"_index":386,"title":{},"body":{"injectables/AppService.html":{},"injectables/AppService-1.html":{}}}],["menus.length",{"_index":384,"title":{},"body":{"injectables/AppService.html":{},"injectables/AppService-1.html":{}}}],["merchantability",{"_index":2198,"title":{},"body":{"license.html":{}}}],["merge",{"_index":1937,"title":{},"body":{"contributing.html":{},"miscellaneous/functions.html":{},"license.html":{}}}],["merged",{"_index":1502,"title":{},"body":{"injectables/NgxEditorJSPluginService.html":{}}}],["mergemap",{"_index":1325,"title":{},"body":{"injectables/NgxEditorJSEffects.html":{}}}],["mergemap(([action",{"_index":1315,"title":{},"body":{"injectables/NgxEditorJSEffects.html":{}}}],["metadata",{"_index":21,"title":{},"body":{"components/AppContainerComponent.html":{},"components/FormContainerComponent.html":{},"components/HomePageComponent.html":{},"components/NavBarComponent.html":{},"components/NgxEditorJSBaseComponent.html":{},"components/NgxEditorJSComponent.html":{},"components/NgxEditorJSDemoHomeComponent.html":{},"components/NgxEditorJSDemoInfoComponent.html":{},"directives/NgxEditorJSDirective.html":{},"components/PageContainerComponent.html":{},"components/SidebarComponent.html":{}}}],["method",{"_index":582,"title":{},"body":{"interfaces/EditorJSInstanceConfig.html":{},"components/FormContainerComponent.html":{},"interfaces/InjectorApiCallOptions.html":{},"interfaces/InjectorApiCallResponse.html":{},"interfaces/InjectorMethodOption.html":{},"components/NgxEditorJSBaseComponent.html":{},"components/NgxEditorJSComponent.html":{},"interfaces/NgxEditorJSConfig.html":{},"directives/NgxEditorJSDirective.html":{},"injectables/NgxEditorJSInstanceService.html":{},"modules/NgxEditorJSModule.html":{},"interfaces/NgxEditorJSModuleConfig.html":{},"injectables/NgxEditorJSService.html":{},"components/PageContainerComponent.html":{},"contributing.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-readme.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-readme/ngx-editorjs-changelog.html":{}}}],["method.call(editor",{"_index":1416,"title":{},"body":{"injectables/NgxEditorJSInstanceService.html":{}}}],["methods",{"_index":31,"title":{},"body":{"components/AppContainerComponent.html":{},"injectables/AppService.html":{},"injectables/AppService-1.html":{},"interfaces/BasePlugin.html":{},"interfaces/BasePlugin-1.html":{},"components/FormContainerComponent.html":{},"injectables/MockNgZone.html":{},"classes/MockPlugin.html":{},"components/NgxEditorJSBaseComponent.html":{},"components/NgxEditorJSComponent.html":{},"components/NgxEditorJSDemoInfoComponent.html":{},"directives/NgxEditorJSDirective.html":{},"injectables/NgxEditorJSInstanceService.html":{},"modules/NgxEditorJSModule.html":{},"injectables/NgxEditorJSPluginService.html":{},"injectables/NgxEditorJSService.html":{},"components/PageContainerComponent.html":{},"injectables/PagesService.html":{},"injectables/PluginCode.html":{},"interfaces/PluginConfig.html":{},"interfaces/PluginConfig-1.html":{},"injectables/PluginHeader.html":{},"injectables/PluginImage.html":{},"injectables/PluginLink.html":{},"injectables/PluginList.html":{},"injectables/PluginMarker.html":{},"injectables/PluginParagraph.html":{},"injectables/PluginSimpleImage.html":{},"classes/TestClass.html":{},"interfaces/ToolSettingsMap.html":{},"interfaces/ToolSettingsMap-1.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-readme/ngx-editorjs-changelog.html":{}}}],["middle",{"_index":184,"title":{},"body":{"components/AppContainerComponent.html":{},"components/NavBarComponent.html":{}}}],["minheight",{"_index":1004,"title":{},"body":{"components/NgxEditorJSBaseComponent.html":{},"components/NgxEditorJSComponent.html":{},"interfaces/NgxEditorJSConfig.html":{},"directives/NgxEditorJSDirective.html":{},"interfaces/NgxEditorJSModuleConfig.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-readme.html":{}}}],["minimum",{"_index":1033,"title":{},"body":{"components/NgxEditorJSBaseComponent.html":{},"components/NgxEditorJSComponent.html":{},"directives/NgxEditorJSDirective.html":{}}}],["miscellaneous",{"_index":2122,"title":{"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}},"body":{"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["mit",{"_index":2158,"title":{},"body":{"license.html":{}}}],["mobile",{"_index":118,"title":{},"body":{"components/AppContainerComponent.html":{}}}],["mobileview",{"_index":121,"title":{},"body":{"components/AppContainerComponent.html":{}}}],["mock",{"_index":950,"title":{},"body":{"injectables/MockNgZone.html":{}}}],["mock.ts",{"_index":949,"title":{},"body":{"injectables/MockNgZone.html":{}}}],["mock.ts:16",{"_index":956,"title":{},"body":{"injectables/MockNgZone.html":{}}}],["mock.ts:22",{"_index":958,"title":{},"body":{"injectables/MockNgZone.html":{}}}],["mock.ts:26",{"_index":961,"title":{},"body":{"injectables/MockNgZone.html":{}}}],["mock.ts:30",{"_index":962,"title":{},"body":{"injectables/MockNgZone.html":{}}}],["mockeditorjs",{"_index":920,"title":{"classes/MockEditorJS.html":{}},"body":{"classes/MockEditorJS.html":{},"classes/MockPlugin.html":{},"classes/TestClass.html":{}}}],["mockngzone",{"_index":946,"title":{"injectables/MockNgZone.html":{}},"body":{"injectables/MockNgZone.html":{}}}],["mockplugin",{"_index":936,"title":{"classes/MockPlugin.html":{}},"body":{"classes/MockEditorJS.html":{},"classes/MockPlugin.html":{},"classes/TestClass.html":{}}}],["modify",{"_index":2174,"title":{},"body":{"license.html":{}}}],["module",{"_index":229,"title":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"modules/ApplicationDataModule.html":{},"modules/MaterialModule.html":{},"modules/NgxEditorJSModule.html":{},"modules/NgxEditorjsDemoModule.html":{},"modules/NgxEditorjsNgrxModule.html":{},"modules/NgxEditorjsPluginsModule.html":{},"modules/NgxHideableHeaderDemoModule.html":{},"modules/NgxTinynodesCoreMaterialModule.html":{},"modules/NgxTinynodesCoreModule.html":{},"modules/PageStoreModule.html":{},"modules/PluginCodeModule.html":{},"modules/PluginHeaderModule.html":{},"modules/PluginImageModule.html":{},"modules/PluginLinkModule.html":{},"modules/PluginListModule.html":{},"modules/PluginMarkerModule.html":{},"modules/PluginParagraphModule.html":{},"modules/PluginSimpleImageModule.html":{}},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"modules/ApplicationDataModule.html":{},"interfaces/BasePlugin.html":{},"interfaces/BasePlugin-1.html":{},"modules/MaterialModule.html":{},"components/NgxEditorJSDemoHomeComponent.html":{},"modules/NgxEditorJSModule.html":{},"modules/NgxEditorjsDemoModule.html":{},"modules/NgxEditorjsNgrxModule.html":{},"modules/NgxEditorjsPluginsModule.html":{},"modules/NgxTinynodesCoreModule.html":{},"modules/PageStoreModule.html":{},"modules/PluginCodeModule.html":{},"interfaces/PluginConfig.html":{},"interfaces/PluginConfig-1.html":{},"modules/PluginHeaderModule.html":{},"modules/PluginImageModule.html":{},"modules/PluginLinkModule.html":{},"modules/PluginListModule.html":{},"modules/PluginMarkerModule.html":{},"modules/PluginParagraphModule.html":{},"modules/PluginSimpleImageModule.html":{},"interfaces/ToolSettingsMap.html":{},"interfaces/ToolSettingsMap-1.html":{},"changelog.html":{},"miscellaneous/functions.html":{},"index.html":{},"overview.html":{},"todo.html":{},"miscellaneous/variables.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-readme.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-readme/ngx-editorjs-changelog.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-plugins-readme.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-plugins-readme/ngx-editorjs-plugins-changelog.html":{}}}],["modules",{"_index":231,"title":{"modules.html":{}},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"modules/ApplicationDataModule.html":{},"modules/MaterialModule.html":{},"modules/NgxEditorJSModule.html":{},"modules/NgxEditorjsDemoModule.html":{},"modules/NgxEditorjsNgrxModule.html":{},"modules/NgxEditorjsPluginsModule.html":{},"modules/NgxHideableHeaderDemoModule.html":{},"modules/NgxTinynodesCoreMaterialModule.html":{},"modules/NgxTinynodesCoreModule.html":{},"modules/PageStoreModule.html":{},"modules/PluginCodeModule.html":{},"modules/PluginHeaderModule.html":{},"modules/PluginImageModule.html":{},"modules/PluginLinkModule.html":{},"modules/PluginListModule.html":{},"modules/PluginMarkerModule.html":{},"modules/PluginParagraphModule.html":{},"modules/PluginSimpleImageModule.html":{},"modules.html":{},"overview.html":{},"todo.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-plugins-readme.html":{}}}],["modulewithproviders",{"_index":1471,"title":{},"body":{"modules/NgxEditorJSModule.html":{}}}],["monday",{"_index":1876,"title":{},"body":{"changelog.html":{}}}],["monitor",{"_index":705,"title":{},"body":{"interfaces/EditorJSMaterialForm.html":{},"components/NgxEditorJSBaseComponent.html":{},"components/NgxEditorJSComponent.html":{}}}],["monitoring",{"_index":732,"title":{},"body":{"interfaces/EditorJSMaterialForm.html":{}}}],["more",{"_index":418,"title":{},"body":{"interfaces/ApplicationData.html":{},"interfaces/ApplicationData-1.html":{},"interfaces/MenuGroup.html":{},"interfaces/MenuGroup-1.html":{},"interfaces/MenuItem.html":{},"interfaces/MenuItem-1.html":{},"injectables/NgxEditorJSService.html":{},"changelog.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-readme.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-readme/ngx-editorjs-changelog.html":{}}}],["mouseevent",{"_index":698,"title":{},"body":{"interfaces/EditorJSMaterialForm.html":{},"components/NgxEditorJSBaseComponent.html":{},"components/NgxEditorJSComponent.html":{}}}],["moved",{"_index":447,"title":{},"body":{"interfaces/ApplicationState.html":{},"interfaces/ApplicationState-1.html":{},"interfaces/DemoData.html":{},"interfaces/DemoData-1.html":{},"interfaces/NgxEditorJSDemo.html":{},"interfaces/NgxEditorJSDemo-1.html":{},"interfaces/NgxEditorJSDemoData.html":{},"interfaces/NgxEditorJSDemoData-1.html":{},"interfaces/TinynodeDemos.html":{},"interfaces/TinynodeDemos-1.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-plugins-readme/ngx-editorjs-plugins-changelog.html":{}}}],["ms",{"_index":989,"title":{},"body":{"components/NgxEditorJSBaseComponent.html":{},"components/NgxEditorJSComponent.html":{},"directives/NgxEditorJSDirective.html":{}}}],["multi",{"_index":630,"title":{},"body":{"interfaces/EditorJSMaterialForm.html":{},"components/NgxEditorJSBaseComponent.html":{},"miscellaneous/variables.html":{}}}],["multiple",{"_index":1691,"title":{},"body":{"modules/PageStoreModule.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-readme/ngx-editorjs-changelog.html":{}}}],["name",{"_index":54,"title":{},"body":{"components/AppContainerComponent.html":{},"injectables/AppService.html":{},"injectables/AppService-1.html":{},"injectables/ApplicationQuery.html":{},"injectables/ApplicationQuery-1.html":{},"interfaces/ApplicationState.html":{},"interfaces/ApplicationState-1.html":{},"injectables/ApplicationStore.html":{},"injectables/ApplicationStore-1.html":{},"classes/Changed.html":{},"interfaces/DemoData.html":{},"interfaces/DemoData-1.html":{},"components/FormContainerComponent.html":{},"components/HomePageComponent.html":{},"classes/MockEditorJS.html":{},"injectables/MockNgZone.html":{},"components/NavBarComponent.html":{},"components/NgxEditorJSBaseComponent.html":{},"components/NgxEditorJSComponent.html":{},"interfaces/NgxEditorJSConfig.html":{},"interfaces/NgxEditorJSDemo.html":{},"interfaces/NgxEditorJSDemo-1.html":{},"interfaces/NgxEditorJSDemoData.html":{},"interfaces/NgxEditorJSDemoData-1.html":{},"components/NgxEditorJSDemoHomeComponent.html":{},"components/NgxEditorJSDemoInfoComponent.html":{},"directives/NgxEditorJSDirective.html":{},"injectables/NgxEditorJSEffects.html":{},"injectables/NgxEditorJSInstanceService.html":{},"modules/NgxEditorJSModule.html":{},"interfaces/NgxEditorJSModuleConfig.html":{},"injectables/NgxEditorJSPluginService.html":{},"injectables/NgxEditorJSService.html":{},"classes/NotReady.html":{},"components/PageContainerComponent.html":{},"injectables/PagesQuery.html":{},"injectables/PagesService.html":{},"interfaces/PagesState.html":{},"injectables/PagesStore.html":{},"classes/Ready.html":{},"classes/SaveEnd.html":{},"classes/SaveStart.html":{},"components/SidebarComponent.html":{},"interfaces/TinynodeDemos.html":{},"interfaces/TinynodeDemos-1.html":{},"miscellaneous/functions.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-plugins-readme.html":{}}}],["namespace",{"_index":602,"title":{},"body":{"interfaces/EditorJSInstanceConfig.html":{},"interfaces/InjectorApiCallOptions.html":{},"interfaces/InjectorApiCallResponse.html":{},"interfaces/InjectorMethodOption.html":{},"injectables/NgxEditorJSInstanceService.html":{},"injectables/NgxEditorJSService.html":{}}}],["nationality",{"_index":1962,"title":{},"body":{"contributing.html":{}}}],["nav",{"_index":204,"title":{},"body":{"components/AppContainerComponent.html":{},"components/FormContainerComponent.html":{},"components/HomePageComponent.html":{},"components/NavBarComponent.html":{},"components/NgxEditorJSBaseComponent.html":{},"components/NgxEditorJSComponent.html":{},"components/NgxEditorJSDemoHomeComponent.html":{},"components/NgxEditorJSDemoInfoComponent.html":{},"components/PageContainerComponent.html":{},"components/SidebarComponent.html":{}}}],["navbar",{"_index":970,"title":{},"body":{"components/NavBarComponent.html":{}}}],["navbarcomponent",{"_index":203,"title":{"components/NavBarComponent.html":{}},"body":{"components/AppContainerComponent.html":{},"modules/AppModule.html":{},"components/FormContainerComponent.html":{},"components/HomePageComponent.html":{},"components/NavBarComponent.html":{},"components/NgxEditorJSBaseComponent.html":{},"components/NgxEditorJSComponent.html":{},"components/NgxEditorJSDemoHomeComponent.html":{},"components/NgxEditorJSDemoInfoComponent.html":{},"components/PageContainerComponent.html":{},"components/SidebarComponent.html":{},"overview.html":{}}}],["navigation",{"_index":164,"title":{},"body":{"components/AppContainerComponent.html":{},"components/NavBarComponent.html":{}}}],["nbsp",{"_index":980,"title":{},"body":{"components/NavBarComponent.html":{}}}],["necessary",{"_index":2070,"title":{},"body":{"contributing.html":{}}}],["need",{"_index":853,"title":{},"body":{"components/FormContainerComponent.html":{},"directives/NgxEditorJSDirective.html":{},"modules/NgxTinynodesCoreModule.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-readme.html":{}}}],["needs",{"_index":1030,"title":{},"body":{"components/NgxEditorJSBaseComponent.html":{},"components/NgxEditorJSComponent.html":{},"directives/NgxEditorJSDirective.html":{}}}],["new",{"_index":113,"title":{},"body":{"components/AppContainerComponent.html":{},"interfaces/BasePlugin.html":{},"interfaces/BasePlugin-1.html":{},"interfaces/EditorJSInstanceConfig.html":{},"interfaces/EditorJSMaterialForm.html":{},"components/FormContainerComponent.html":{},"interfaces/InjectorApiCallOptions.html":{},"interfaces/InjectorApiCallResponse.html":{},"interfaces/InjectorMethodOption.html":{},"injectables/MockNgZone.html":{},"components/NavBarComponent.html":{},"components/NgxEditorJSBaseComponent.html":{},"components/NgxEditorJSComponent.html":{},"interfaces/NgxEditorJSConfig.html":{},"components/NgxEditorJSDemoInfoComponent.html":{},"directives/NgxEditorJSDirective.html":{},"injectables/NgxEditorJSEffects.html":{},"injectables/NgxEditorJSInstanceService.html":{},"interfaces/NgxEditorJSModuleConfig.html":{},"injectables/NgxEditorJSService.html":{},"components/PageContainerComponent.html":{},"injectables/PagesService.html":{},"interfaces/PluginConfig.html":{},"interfaces/PluginConfig-1.html":{},"interfaces/ToolSettingsMap.html":{},"interfaces/ToolSettingsMap-1.html":{},"changelog.html":{},"contributing.html":{},"miscellaneous/variables.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-readme.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-readme/ngx-editorjs-changelog.html":{}}}],["newpage",{"_index":1728,"title":{},"body":{"injectables/PagesService.html":{}}}],["next(true",{"_index":1071,"title":{},"body":{"components/NgxEditorJSBaseComponent.html":{},"components/NgxEditorJSComponent.html":{}}}],["nextid",{"_index":643,"title":{},"body":{"interfaces/EditorJSMaterialForm.html":{}}}],["ng",{"_index":269,"title":{},"body":{"modules/AppModule.html":{},"dependencies.html":{}}}],["ng_value_accessor",{"_index":1078,"title":{},"body":{"components/NgxEditorJSBaseComponent.html":{},"miscellaneous/variables.html":{}}}],["ngaftercontentinit",{"_index":32,"title":{},"body":{"components/AppContainerComponent.html":{},"interfaces/EditorJSMaterialForm.html":{},"components/FormContainerComponent.html":{},"components/NgxEditorJSBaseComponent.html":{},"components/NgxEditorJSComponent.html":{},"directives/NgxEditorJSDirective.html":{},"components/PageContainerComponent.html":{}}}],["ngcontrol",{"_index":620,"title":{},"body":{"interfaces/EditorJSMaterialForm.html":{}}}],["ngdevtools",{"_index":273,"title":{},"body":{"modules/AppModule.html":{},"dependencies.html":{}}}],["ngdocheck",{"_index":727,"title":{},"body":{"interfaces/EditorJSMaterialForm.html":{}}}],["ngmodule",{"_index":258,"title":{},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"modules/ApplicationDataModule.html":{},"modules/MaterialModule.html":{},"modules/NgxEditorJSModule.html":{},"modules/NgxEditorjsDemoModule.html":{},"modules/NgxEditorjsNgrxModule.html":{},"modules/NgxEditorjsPluginsModule.html":{},"modules/NgxHideableHeaderDemoModule.html":{},"modules/NgxTinynodesCoreMaterialModule.html":{},"modules/NgxTinynodesCoreModule.html":{},"modules/PageStoreModule.html":{},"modules/PluginCodeModule.html":{},"modules/PluginHeaderModule.html":{},"modules/PluginImageModule.html":{},"modules/PluginLinkModule.html":{},"modules/PluginListModule.html":{},"modules/PluginMarkerModule.html":{},"modules/PluginParagraphModule.html":{},"modules/PluginSimpleImageModule.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-readme.html":{}}}],["ngonchanges",{"_index":1218,"title":{},"body":{"directives/NgxEditorJSDirective.html":{}}}],["ngonchanges(changes",{"_index":1245,"title":{},"body":{"directives/NgxEditorJSDirective.html":{}}}],["ngondestroy",{"_index":33,"title":{},"body":{"components/AppContainerComponent.html":{},"interfaces/EditorJSMaterialForm.html":{},"components/NgxEditorJSBaseComponent.html":{},"components/NgxEditorJSComponent.html":{},"directives/NgxEditorJSDirective.html":{}}}],["ngoninit",{"_index":710,"title":{},"body":{"interfaces/EditorJSMaterialForm.html":{},"components/NgxEditorJSDemoInfoComponent.html":{}}}],["ngrx",{"_index":1610,"title":{},"body":{"modules/NgxEditorjsNgrxModule.html":{}}}],["ngrx.module.ts",{"_index":1606,"title":{},"body":{"modules/NgxEditorjsNgrxModule.html":{}}}],["ngrx/effects",{"_index":1321,"title":{},"body":{"injectables/NgxEditorJSEffects.html":{},"modules/NgxEditorjsNgrxModule.html":{},"dependencies.html":{},"todo.html":{}}}],["ngrx/src/lib/actions/ngx",{"_index":544,"title":{},"body":{"classes/Changed.html":{},"classes/NotReady.html":{},"classes/Ready.html":{},"classes/SaveEnd.html":{},"classes/SaveStart.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/typealiases.html":{}}}],["ngrx/src/lib/effects/ngx",{"_index":1305,"title":{},"body":{"injectables/NgxEditorJSEffects.html":{}}}],["ngrx/src/lib/ngx",{"_index":1605,"title":{},"body":{"modules/NgxEditorjsNgrxModule.html":{}}}],["ngrx/store",{"_index":553,"title":{},"body":{"classes/Changed.html":{},"classes/NotReady.html":{},"classes/Ready.html":{},"classes/SaveEnd.html":{},"classes/SaveStart.html":{},"dependencies.html":{}}}],["ngx",{"_index":197,"title":{"additional-documentation/tinynodes-library-docs/ngx-editorjs-readme.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-readme/ngx-editorjs-changelog.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-plugins-readme.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-plugins-readme/ngx-editorjs-plugins-changelog.html":{}},"body":{"components/AppContainerComponent.html":{},"modules/AppModule.html":{},"interfaces/ApplicationState.html":{},"interfaces/ApplicationState-1.html":{},"interfaces/BasePlugin-1.html":{},"classes/Changed.html":{},"interfaces/DemoData.html":{},"interfaces/DemoData-1.html":{},"interfaces/EditorJSMaterialForm.html":{},"components/FormContainerComponent.html":{},"components/HomePageComponent.html":{},"components/NavBarComponent.html":{},"components/NgxEditorJSBaseComponent.html":{},"components/NgxEditorJSComponent.html":{},"interfaces/NgxEditorJSDemo.html":{},"interfaces/NgxEditorJSDemo-1.html":{},"interfaces/NgxEditorJSDemoData.html":{},"interfaces/NgxEditorJSDemoData-1.html":{},"components/NgxEditorJSDemoHomeComponent.html":{},"components/NgxEditorJSDemoInfoComponent.html":{},"directives/NgxEditorJSDirective.html":{},"modules/NgxEditorjsDemoModule.html":{},"modules/NgxTinynodesCoreModule.html":{},"classes/NotReady.html":{},"components/PageContainerComponent.html":{},"modules/PageStoreModule.html":{},"interfaces/PluginConfig-1.html":{},"classes/Ready.html":{},"classes/SaveEnd.html":{},"classes/SaveStart.html":{},"components/SidebarComponent.html":{},"interfaces/TinynodeDemos.html":{},"interfaces/TinynodeDemos-1.html":{},"interfaces/ToolSettingsMap-1.html":{},"dependencies.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"index.html":{},"todo.html":{},"miscellaneous/variables.html":{},"additional-documentation/tinynodes-library-docs.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-readme.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-readme/ngx-editorjs-changelog.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-plugins-readme.html":{}}}],["ngx.firebaseapp.com",{"_index":291,"title":{},"body":{"modules/AppModule.html":{}}}],["ngx_editorjs_config",{"_index":1163,"title":{},"body":{"interfaces/NgxEditorJSConfig.html":{},"modules/NgxEditorJSModule.html":{},"interfaces/NgxEditorJSModuleConfig.html":{},"injectables/NgxEditorJSService.html":{},"miscellaneous/variables.html":{}}}],["ngxeditorjs",{"_index":224,"title":{},"body":{"components/AppContainerComponent.html":{},"components/FormContainerComponent.html":{},"components/HomePageComponent.html":{},"components/NavBarComponent.html":{},"components/NgxEditorJSBaseComponent.html":{},"components/NgxEditorJSComponent.html":{},"components/NgxEditorJSDemoHomeComponent.html":{},"components/NgxEditorJSDemoInfoComponent.html":{},"directives/NgxEditorJSDirective.html":{},"components/PageContainerComponent.html":{},"components/SidebarComponent.html":{}}}],["ngxeditorjs.hassaved",{"_index":1684,"title":{},"body":{"components/PageContainerComponent.html":{}}}],["ngxeditorjs.isfocused",{"_index":1683,"title":{},"body":{"components/PageContainerComponent.html":{}}}],["ngxeditorjs.isready",{"_index":1680,"title":{},"body":{"components/PageContainerComponent.html":{}}}],["ngxeditorjs.istouched",{"_index":1682,"title":{},"body":{"components/PageContainerComponent.html":{}}}],["ngxeditorjsactions",{"_index":566,"title":{},"body":{"classes/Changed.html":{},"classes/NotReady.html":{},"classes/Ready.html":{},"classes/SaveEnd.html":{},"classes/SaveStart.html":{},"miscellaneous/typealiases.html":{}}}],["ngxeditorjsbasecomponent",{"_index":206,"title":{"components/NgxEditorJSBaseComponent.html":{}},"body":{"components/AppContainerComponent.html":{},"interfaces/EditorJSMaterialForm.html":{},"components/FormContainerComponent.html":{},"components/HomePageComponent.html":{},"components/NavBarComponent.html":{},"components/NgxEditorJSBaseComponent.html":{},"components/NgxEditorJSComponent.html":{},"components/NgxEditorJSDemoHomeComponent.html":{},"components/NgxEditorJSDemoInfoComponent.html":{},"modules/NgxEditorJSModule.html":{},"components/PageContainerComponent.html":{},"components/SidebarComponent.html":{},"index.html":{},"overview.html":{},"miscellaneous/variables.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-readme.html":{}}}],["ngxeditorjsbasecomponent:106",{"_index":1114,"title":{},"body":{"components/NgxEditorJSComponent.html":{}}}],["ngxeditorjsbasecomponent:112",{"_index":1116,"title":{},"body":{"components/NgxEditorJSComponent.html":{}}}],["ngxeditorjsbasecomponent:118",{"_index":1124,"title":{},"body":{"components/NgxEditorJSComponent.html":{}}}],["ngxeditorjsbasecomponent:124",{"_index":1127,"title":{},"body":{"components/NgxEditorJSComponent.html":{}}}],["ngxeditorjsbasecomponent:130",{"_index":1125,"title":{},"body":{"components/NgxEditorJSComponent.html":{}}}],["ngxeditorjsbasecomponent:136",{"_index":1123,"title":{},"body":{"components/NgxEditorJSComponent.html":{}}}],["ngxeditorjsbasecomponent:142",{"_index":1126,"title":{},"body":{"components/NgxEditorJSComponent.html":{}}}],["ngxeditorjsbasecomponent:147",{"_index":1138,"title":{},"body":{"components/NgxEditorJSComponent.html":{}}}],["ngxeditorjsbasecomponent:152",{"_index":1142,"title":{},"body":{"components/NgxEditorJSComponent.html":{}}}],["ngxeditorjsbasecomponent:172",{"_index":1132,"title":{},"body":{"components/NgxEditorJSComponent.html":{}}}],["ngxeditorjsbasecomponent:186",{"_index":1141,"title":{},"body":{"components/NgxEditorJSComponent.html":{}}}],["ngxeditorjsbasecomponent:194",{"_index":1139,"title":{},"body":{"components/NgxEditorJSComponent.html":{}}}],["ngxeditorjsbasecomponent:203",{"_index":1137,"title":{},"body":{"components/NgxEditorJSComponent.html":{}}}],["ngxeditorjsbasecomponent:212",{"_index":1135,"title":{},"body":{"components/NgxEditorJSComponent.html":{}}}],["ngxeditorjsbasecomponent:219",{"_index":1136,"title":{},"body":{"components/NgxEditorJSComponent.html":{}}}],["ngxeditorjsbasecomponent:230",{"_index":1131,"title":{},"body":{"components/NgxEditorJSComponent.html":{}}}],["ngxeditorjsbasecomponent:260",{"_index":1133,"title":{},"body":{"components/NgxEditorJSComponent.html":{}}}],["ngxeditorjsbasecomponent:289",{"_index":1134,"title":{},"body":{"components/NgxEditorJSComponent.html":{}}}],["ngxeditorjsbasecomponent:48",{"_index":1140,"title":{},"body":{"components/NgxEditorJSComponent.html":{}}}],["ngxeditorjsbasecomponent:53",{"_index":1113,"title":{},"body":{"components/NgxEditorJSComponent.html":{}}}],["ngxeditorjsbasecomponent:59",{"_index":1117,"title":{},"body":{"components/NgxEditorJSComponent.html":{}}}],["ngxeditorjsbasecomponent:65",{"_index":1118,"title":{},"body":{"components/NgxEditorJSComponent.html":{}}}],["ngxeditorjsbasecomponent:72",{"_index":1120,"title":{},"body":{"components/NgxEditorJSComponent.html":{}}}],["ngxeditorjsbasecomponent:78",{"_index":1121,"title":{},"body":{"components/NgxEditorJSComponent.html":{}}}],["ngxeditorjsbasecomponent:84",{"_index":1115,"title":{},"body":{"components/NgxEditorJSComponent.html":{}}}],["ngxeditorjsbasecomponent:90",{"_index":1122,"title":{},"body":{"components/NgxEditorJSComponent.html":{}}}],["ngxeditorjsbasecomponent:97",{"_index":1119,"title":{},"body":{"components/NgxEditorJSComponent.html":{}}}],["ngxeditorjscomponent",{"_index":207,"title":{"components/NgxEditorJSComponent.html":{}},"body":{"components/AppContainerComponent.html":{},"components/FormContainerComponent.html":{},"components/HomePageComponent.html":{},"components/NavBarComponent.html":{},"components/NgxEditorJSBaseComponent.html":{},"components/NgxEditorJSComponent.html":{},"components/NgxEditorJSDemoHomeComponent.html":{},"components/NgxEditorJSDemoInfoComponent.html":{},"modules/NgxEditorJSModule.html":{},"components/PageContainerComponent.html":{},"components/SidebarComponent.html":{},"index.html":{},"overview.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-readme.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-readme/ngx-editorjs-changelog.html":{}}}],["ngxeditorjsconfig",{"_index":1151,"title":{"interfaces/NgxEditorJSConfig.html":{}},"body":{"interfaces/NgxEditorJSConfig.html":{},"interfaces/NgxEditorJSModuleConfig.html":{},"miscellaneous/variables.html":{}}}],["ngxeditorjsdemo",{"_index":448,"title":{"interfaces/NgxEditorJSDemo.html":{},"interfaces/NgxEditorJSDemo-1.html":{}},"body":{"interfaces/ApplicationState.html":{},"interfaces/ApplicationState-1.html":{},"interfaces/DemoData.html":{},"interfaces/DemoData-1.html":{},"components/FormContainerComponent.html":{},"interfaces/NgxEditorJSDemo.html":{},"interfaces/NgxEditorJSDemo-1.html":{},"interfaces/NgxEditorJSDemoData.html":{},"interfaces/NgxEditorJSDemoData-1.html":{},"components/PageContainerComponent.html":{},"interfaces/TinynodeDemos.html":{},"interfaces/TinynodeDemos-1.html":{}}}],["ngxeditorjsdemodata",{"_index":450,"title":{"interfaces/NgxEditorJSDemoData.html":{},"interfaces/NgxEditorJSDemoData-1.html":{}},"body":{"interfaces/ApplicationState.html":{},"interfaces/ApplicationState-1.html":{},"interfaces/DemoData.html":{},"interfaces/DemoData-1.html":{},"interfaces/NgxEditorJSDemo.html":{},"interfaces/NgxEditorJSDemo-1.html":{},"interfaces/NgxEditorJSDemoData.html":{},"interfaces/NgxEditorJSDemoData-1.html":{},"interfaces/TinynodeDemos.html":{},"interfaces/TinynodeDemos-1.html":{}}}],["ngxeditorjsdemohomecomponent",{"_index":209,"title":{"components/NgxEditorJSDemoHomeComponent.html":{}},"body":{"components/AppContainerComponent.html":{},"components/FormContainerComponent.html":{},"components/HomePageComponent.html":{},"components/NavBarComponent.html":{},"components/NgxEditorJSBaseComponent.html":{},"components/NgxEditorJSComponent.html":{},"components/NgxEditorJSDemoHomeComponent.html":{},"components/NgxEditorJSDemoInfoComponent.html":{},"modules/NgxEditorjsDemoModule.html":{},"components/PageContainerComponent.html":{},"components/SidebarComponent.html":{},"overview.html":{},"miscellaneous/variables.html":{}}}],["ngxeditorjsdemoinfocomponent",{"_index":213,"title":{"components/NgxEditorJSDemoInfoComponent.html":{}},"body":{"components/AppContainerComponent.html":{},"components/FormContainerComponent.html":{},"components/HomePageComponent.html":{},"components/NavBarComponent.html":{},"components/NgxEditorJSBaseComponent.html":{},"components/NgxEditorJSComponent.html":{},"components/NgxEditorJSDemoHomeComponent.html":{},"components/NgxEditorJSDemoInfoComponent.html":{},"modules/NgxTinynodesCoreModule.html":{},"components/PageContainerComponent.html":{},"components/SidebarComponent.html":{},"overview.html":{}}}],["ngxeditorjsdemomodule",{"_index":245,"title":{"modules/NgxEditorjsDemoModule.html":{}},"body":{"modules/AppModule.html":{},"modules/NgxEditorjsDemoModule.html":{},"modules.html":{},"overview.html":{}}}],["ngxeditorjsdemoroutes",{"_index":1592,"title":{},"body":{"modules/NgxEditorjsDemoModule.html":{},"miscellaneous/variables.html":{}}}],["ngxeditorjsdemotagcomponent",{"_index":215,"title":{},"body":{"components/AppContainerComponent.html":{},"components/FormContainerComponent.html":{},"components/HomePageComponent.html":{},"components/NavBarComponent.html":{},"components/NgxEditorJSBaseComponent.html":{},"components/NgxEditorJSComponent.html":{},"components/NgxEditorJSDemoHomeComponent.html":{},"components/NgxEditorJSDemoInfoComponent.html":{},"modules/NgxEditorjsDemoModule.html":{},"components/PageContainerComponent.html":{},"components/SidebarComponent.html":{},"overview.html":{},"miscellaneous/variables.html":{}}}],["ngxeditorjsdirective",{"_index":223,"title":{"directives/NgxEditorJSDirective.html":{}},"body":{"components/AppContainerComponent.html":{},"interfaces/EditorJSMaterialForm.html":{},"components/FormContainerComponent.html":{},"components/HomePageComponent.html":{},"components/NavBarComponent.html":{},"components/NgxEditorJSBaseComponent.html":{},"components/NgxEditorJSComponent.html":{},"components/NgxEditorJSDemoHomeComponent.html":{},"components/NgxEditorJSDemoInfoComponent.html":{},"directives/NgxEditorJSDirective.html":{},"modules/NgxEditorJSModule.html":{},"components/PageContainerComponent.html":{},"components/SidebarComponent.html":{},"index.html":{},"overview.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-readme.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-readme/ngx-editorjs-changelog.html":{}}}],["ngxeditorjsdirective::ngaftercontentinit",{"_index":1292,"title":{},"body":{"directives/NgxEditorJSDirective.html":{}}}],["ngxeditorjseffects",{"_index":1304,"title":{"injectables/NgxEditorJSEffects.html":{}},"body":{"injectables/NgxEditorJSEffects.html":{}}}],["ngxeditorjsinstanceservice",{"_index":1327,"title":{"injectables/NgxEditorJSInstanceService.html":{}},"body":{"injectables/NgxEditorJSInstanceService.html":{},"modules/NgxEditorJSModule.html":{},"injectables/NgxEditorJSService.html":{},"index.html":{},"overview.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-readme.html":{}}}],["ngxeditorjsmaterialfieldcomponent",{"_index":2141,"title":{},"body":{"index.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-readme.html":{}}}],["ngxeditorjsmatfieldcomponent",{"_index":218,"title":{},"body":{"components/AppContainerComponent.html":{},"interfaces/EditorJSMaterialForm.html":{},"components/FormContainerComponent.html":{},"components/HomePageComponent.html":{},"components/NavBarComponent.html":{},"components/NgxEditorJSBaseComponent.html":{},"components/NgxEditorJSComponent.html":{},"components/NgxEditorJSDemoHomeComponent.html":{},"components/NgxEditorJSDemoInfoComponent.html":{},"modules/NgxEditorJSModule.html":{},"components/PageContainerComponent.html":{},"components/SidebarComponent.html":{},"overview.html":{},"miscellaneous/variables.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-readme/ngx-editorjs-changelog.html":{}}}],["ngxeditorjsmatfieldcomponent.nextid",{"_index":686,"title":{},"body":{"interfaces/EditorJSMaterialForm.html":{}}}],["ngxeditorjsmodule",{"_index":244,"title":{"modules/NgxEditorJSModule.html":{}},"body":{"modules/AppModule.html":{},"modules/NgxEditorJSModule.html":{},"modules/NgxEditorjsDemoModule.html":{},"modules/NgxEditorjsNgrxModule.html":{},"modules.html":{},"overview.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-readme.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-readme/ngx-editorjs-changelog.html":{}}}],["ngxeditorjsmodule.forroot",{"_index":292,"title":{},"body":{"modules/AppModule.html":{},"interfaces/NgxEditorJSConfig.html":{},"modules/NgxEditorJSModule.html":{},"interfaces/NgxEditorJSModuleConfig.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-readme.html":{}}}],["ngxeditorjsmoduleconfig",{"_index":925,"title":{"interfaces/NgxEditorJSModuleConfig.html":{}},"body":{"classes/MockEditorJS.html":{},"classes/MockPlugin.html":{},"interfaces/NgxEditorJSConfig.html":{},"modules/NgxEditorJSModule.html":{},"interfaces/NgxEditorJSModuleConfig.html":{},"injectables/NgxEditorJSService.html":{},"classes/TestClass.html":{},"miscellaneous/functions.html":{}}}],["ngxeditorjsngrxmodule",{"_index":1602,"title":{"modules/NgxEditorjsNgrxModule.html":{}},"body":{"modules/NgxEditorjsNgrxModule.html":{},"modules.html":{},"overview.html":{}}}],["ngxeditorjspluginservice",{"_index":1463,"title":{"injectables/NgxEditorJSPluginService.html":{}},"body":{"modules/NgxEditorJSModule.html":{},"injectables/NgxEditorJSPluginService.html":{},"injectables/NgxEditorJSService.html":{},"index.html":{},"overview.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-readme.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-readme/ngx-editorjs-changelog.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-plugins-readme/ngx-editorjs-plugins-changelog.html":{}}}],["ngxeditorjspluginsmodule",{"_index":1615,"title":{"modules/NgxEditorjsPluginsModule.html":{}},"body":{"modules/NgxEditorjsPluginsModule.html":{},"modules.html":{},"overview.html":{}}}],["ngxeditorjsservice",{"_index":624,"title":{"injectables/NgxEditorJSService.html":{}},"body":{"interfaces/EditorJSMaterialForm.html":{},"components/FormContainerComponent.html":{},"components/NgxEditorJSBaseComponent.html":{},"components/NgxEditorJSComponent.html":{},"directives/NgxEditorJSDirective.html":{},"injectables/NgxEditorJSEffects.html":{},"modules/NgxEditorJSModule.html":{},"injectables/NgxEditorJSService.html":{},"components/PageContainerComponent.html":{},"index.html":{},"overview.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-readme.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-readme/ngx-editorjs-changelog.html":{}}}],["ngxhideableheaderdemomodule",{"_index":1638,"title":{"modules/NgxHideableHeaderDemoModule.html":{}},"body":{"modules/NgxHideableHeaderDemoModule.html":{},"modules.html":{}}}],["ngxhideableheaderdemoroutes",{"_index":1640,"title":{},"body":{"modules/NgxHideableHeaderDemoModule.html":{},"miscellaneous/variables.html":{}}}],["ngxtinynodescorematerialmodule",{"_index":1641,"title":{"modules/NgxTinynodesCoreMaterialModule.html":{}},"body":{"modules/NgxTinynodesCoreMaterialModule.html":{},"modules/NgxTinynodesCoreModule.html":{},"modules.html":{},"overview.html":{}}}],["ngxtinynodescoremodule",{"_index":246,"title":{"modules/NgxTinynodesCoreModule.html":{}},"body":{"modules/AppModule.html":{},"modules/NgxEditorjsDemoModule.html":{},"modules/NgxTinynodesCoreModule.html":{},"modules.html":{},"overview.html":{}}}],["ngzone",{"_index":951,"title":{},"body":{"injectables/MockNgZone.html":{},"injectables/NgxEditorJSInstanceService.html":{}}}],["none",{"_index":158,"title":{},"body":{"components/AppContainerComponent.html":{},"components/NavBarComponent.html":{}}}],["noninfringement",{"_index":2202,"title":{},"body":{"license.html":{}}}],["notable",{"_index":2277,"title":{},"body":{"additional-documentation/tinynodes-library-docs/ngx-editorjs-readme/ngx-editorjs-changelog.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-plugins-readme/ngx-editorjs-plugins-changelog.html":{}}}],["note",{"_index":1915,"title":{},"body":{"contributing.html":{},"additional-documentation/tinynodes-library-docs.html":{}}}],["notice",{"_index":2187,"title":{},"body":{"license.html":{}}}],["notready",{"_index":559,"title":{"classes/NotReady.html":{}},"body":{"classes/Changed.html":{},"classes/NotReady.html":{},"classes/Ready.html":{},"classes/SaveEnd.html":{},"classes/SaveStart.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/typealiases.html":{}}}],["now",{"_index":850,"title":{},"body":{"components/FormContainerComponent.html":{},"changelog.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-readme/ngx-editorjs-changelog.html":{}}}],["npm",{"_index":907,"title":{},"body":{"components/HomePageComponent.html":{},"dependencies.html":{},"index.html":{},"additional-documentation/tinynodes-library-docs.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-readme.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-readme/ngx-editorjs-changelog.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-plugins-readme.html":{}}}],["nrwl/nx",{"_index":1890,"title":{},"body":{"changelog.html":{}}}],["null",{"_index":712,"title":{},"body":{"interfaces/EditorJSMaterialForm.html":{},"injectables/NgxEditorJSInstanceService.html":{},"injectables/NgxEditorJSPluginService.html":{},"components/PageContainerComponent.html":{}}}],["number",{"_index":508,"title":{},"body":{"interfaces/Block.html":{},"interfaces/BlocksMap.html":{},"interfaces/ChangeMap.html":{},"interfaces/CreateEditorJSOptions.html":{},"interfaces/EditorJSChange.html":{},"interfaces/EditorMap.html":{},"components/FormContainerComponent.html":{},"interfaces/Header.html":{},"interfaces/HeaderBlock.html":{},"interfaces/Image.html":{},"interfaces/ImageBlock.html":{},"interfaces/List.html":{},"interfaces/ListBlock.html":{},"components/NgxEditorJSBaseComponent.html":{},"components/NgxEditorJSComponent.html":{},"interfaces/NgxEditorJSConfig.html":{},"directives/NgxEditorJSDirective.html":{},"interfaces/NgxEditorJSModuleConfig.html":{},"interfaces/Paragraph.html":{},"interfaces/ParagraphBlock.html":{},"interfaces/ReadyMap.html":{},"interfaces/SavedMap.html":{}}}],["numbers",{"_index":1930,"title":{},"body":{"contributing.html":{}}}],["nx",{"_index":2155,"title":{},"body":{"index.html":{}}}],["object",{"_index":445,"title":{},"body":{"interfaces/ApplicationState.html":{},"interfaces/ApplicationState-1.html":{},"interfaces/DemoData.html":{},"interfaces/DemoData-1.html":{},"components/NgxEditorJSBaseComponent.html":{},"components/NgxEditorJSComponent.html":{},"interfaces/NgxEditorJSDemo.html":{},"interfaces/NgxEditorJSDemo-1.html":{},"interfaces/NgxEditorJSDemoData.html":{},"interfaces/NgxEditorJSDemoData-1.html":{},"directives/NgxEditorJSDirective.html":{},"injectables/NgxEditorJSPluginService.html":{},"injectables/NgxEditorJSService.html":{},"interfaces/TinynodeDemos.html":{},"interfaces/TinynodeDemos-1.html":{},"miscellaneous/variables.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-readme.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-readme/ngx-editorjs-changelog.html":{}}}],["object.entries",{"_index":1520,"title":{},"body":{"injectables/NgxEditorJSPluginService.html":{}}}],["object.entries(this.pluginsmap",{"_index":1525,"title":{},"body":{"injectables/NgxEditorJSPluginService.html":{}}}],["object.keys(changes",{"_index":1284,"title":{},"body":{"directives/NgxEditorJSDirective.html":{}}}],["object.keys(this.editormap).foreach(holder",{"_index":1457,"title":{},"body":{"injectables/NgxEditorJSInstanceService.html":{}}}],["obligated",{"_index":2072,"title":{},"body":{"contributing.html":{}}}],["observable",{"_index":85,"title":{},"body":{"components/AppContainerComponent.html":{},"injectables/AppService.html":{},"injectables/AppService-1.html":{},"components/FormContainerComponent.html":{},"components/NgxEditorJSBaseComponent.html":{},"components/NgxEditorJSComponent.html":{},"components/NgxEditorJSDemoInfoComponent.html":{},"directives/NgxEditorJSDirective.html":{},"injectables/NgxEditorJSEffects.html":{},"injectables/NgxEditorJSInstanceService.html":{},"injectables/NgxEditorJSService.html":{},"components/PageContainerComponent.html":{},"injectables/PagesService.html":{}}}],["observables",{"_index":1331,"title":{},"body":{"injectables/NgxEditorJSInstanceService.html":{}}}],["obtaining",{"_index":2165,"title":{},"body":{"license.html":{}}}],["offensive",{"_index":2037,"title":{},"body":{"contributing.html":{}}}],["official",{"_index":2044,"title":{},"body":{"contributing.html":{}}}],["officially",{"_index":1895,"title":{},"body":{"changelog.html":{}}}],["offline",{"_index":2055,"title":{},"body":{"contributing.html":{}}}],["oftype",{"_index":1320,"title":{},"body":{"injectables/NgxEditorJSEffects.html":{}}}],["oftype(editorjsactiontypes.savestart",{"_index":1311,"title":{},"body":{"injectables/NgxEditorJSEffects.html":{}}}],["once",{"_index":1451,"title":{},"body":{"injectables/NgxEditorJSInstanceService.html":{},"contributing.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-readme.html":{}}}],["onchange",{"_index":579,"title":{},"body":{"interfaces/EditorJSInstanceConfig.html":{},"interfaces/InjectorApiCallOptions.html":{},"interfaces/InjectorApiCallResponse.html":{},"interfaces/InjectorMethodOption.html":{},"components/NgxEditorJSBaseComponent.html":{},"components/NgxEditorJSComponent.html":{},"injectables/NgxEditorJSInstanceService.html":{}}}],["onchange(options",{"_index":1370,"title":{},"body":{"injectables/NgxEditorJSInstanceService.html":{}}}],["onchanges",{"_index":1216,"title":{},"body":{"directives/NgxEditorJSDirective.html":{}}}],["onclick",{"_index":1271,"title":{},"body":{"directives/NgxEditorJSDirective.html":{}}}],["oncontainerclick(event",{"_index":699,"title":{},"body":{"interfaces/EditorJSMaterialForm.html":{}}}],["ondestroy",{"_index":20,"title":{},"body":{"components/AppContainerComponent.html":{},"interfaces/EditorJSMaterialForm.html":{},"components/FormContainerComponent.html":{},"components/NgxEditorJSBaseComponent.html":{},"components/NgxEditorJSComponent.html":{},"directives/NgxEditorJSDirective.html":{},"injectables/NgxEditorJSInstanceService.html":{},"components/PageContainerComponent.html":{}}}],["one",{"_index":417,"title":{},"body":{"interfaces/ApplicationData.html":{},"interfaces/ApplicationData-1.html":{},"interfaces/MenuGroup.html":{},"interfaces/MenuGroup-1.html":{},"interfaces/MenuItem.html":{},"interfaces/MenuItem-1.html":{}}}],["oninit",{"_index":618,"title":{},"body":{"interfaces/EditorJSMaterialForm.html":{},"components/NgxEditorJSDemoInfoComponent.html":{}}}],["online",{"_index":2054,"title":{},"body":{"contributing.html":{}}}],["onready",{"_index":580,"title":{},"body":{"interfaces/EditorJSInstanceConfig.html":{},"interfaces/InjectorApiCallOptions.html":{},"interfaces/InjectorApiCallResponse.html":{},"interfaces/InjectorMethodOption.html":{},"injectables/NgxEditorJSInstanceService.html":{}}}],["onready(options",{"_index":1372,"title":{},"body":{"injectables/NgxEditorJSInstanceService.html":{}}}],["onstable",{"_index":952,"title":{},"body":{"injectables/MockNgZone.html":{}}}],["ontouch",{"_index":993,"title":{},"body":{"components/NgxEditorJSBaseComponent.html":{},"components/NgxEditorJSComponent.html":{}}}],["open",{"_index":94,"title":{},"body":{"components/AppContainerComponent.html":{},"components/FormContainerComponent.html":{},"components/NgxEditorJSDemoInfoComponent.html":{},"contributing.html":{}}}],["opensourcemenu",{"_index":42,"title":{},"body":{"components/AppContainerComponent.html":{},"components/SidebarComponent.html":{}}}],["opensourcemenu.title",{"_index":1838,"title":{},"body":{"components/SidebarComponent.html":{}}}],["option",{"_index":597,"title":{},"body":{"interfaces/EditorJSInstanceConfig.html":{},"interfaces/InjectorApiCallOptions.html":{},"interfaces/InjectorApiCallResponse.html":{},"interfaces/InjectorMethodOption.html":{},"interfaces/NgxEditorJSConfig.html":{},"interfaces/NgxEditorJSModuleConfig.html":{},"todo.html":{}}}],["optional",{"_index":56,"title":{},"body":{"components/AppContainerComponent.html":{},"injectables/AppService.html":{},"injectables/AppService-1.html":{},"interfaces/ApplicationData.html":{},"interfaces/ApplicationData-1.html":{},"injectables/ApplicationQuery.html":{},"injectables/ApplicationQuery-1.html":{},"interfaces/BasePlugin.html":{},"interfaces/BasePlugin-1.html":{},"interfaces/Block.html":{},"classes/Changed.html":{},"interfaces/CreateEditorJSOptions.html":{},"interfaces/EditorJSInstanceConfig.html":{},"interfaces/EditorJSMaterialForm.html":{},"components/FormContainerComponent.html":{},"interfaces/Header.html":{},"interfaces/HeaderBlock.html":{},"components/HomePageComponent.html":{},"interfaces/Image.html":{},"interfaces/ImageBlock.html":{},"interfaces/InjectorApiCallOptions.html":{},"interfaces/InjectorApiCallResponse.html":{},"interfaces/InjectorMethodOption.html":{},"interfaces/List.html":{},"interfaces/ListBlock.html":{},"interfaces/MenuGroup.html":{},"interfaces/MenuGroup-1.html":{},"interfaces/MenuItem.html":{},"interfaces/MenuItem-1.html":{},"classes/MockEditorJS.html":{},"injectables/MockNgZone.html":{},"components/NgxEditorJSBaseComponent.html":{},"components/NgxEditorJSComponent.html":{},"interfaces/NgxEditorJSConfig.html":{},"components/NgxEditorJSDemoInfoComponent.html":{},"directives/NgxEditorJSDirective.html":{},"injectables/NgxEditorJSEffects.html":{},"injectables/NgxEditorJSInstanceService.html":{},"modules/NgxEditorJSModule.html":{},"interfaces/NgxEditorJSModuleConfig.html":{},"injectables/NgxEditorJSPluginService.html":{},"injectables/NgxEditorJSService.html":{},"classes/NotReady.html":{},"components/PageContainerComponent.html":{},"injectables/PagesQuery.html":{},"injectables/PagesService.html":{},"interfaces/Paragraph.html":{},"interfaces/ParagraphBlock.html":{},"interfaces/PluginConfig.html":{},"interfaces/PluginConfig-1.html":{},"classes/Ready.html":{},"classes/SaveEnd.html":{},"classes/SaveStart.html":{},"interfaces/ToolSettingsMap.html":{},"interfaces/ToolSettingsMap-1.html":{},"miscellaneous/functions.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-readme.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-readme/ngx-editorjs-changelog.html":{}}}],["options",{"_index":570,"title":{},"body":{"interfaces/CreateEditorJSOptions.html":{},"interfaces/EditorJSInstanceConfig.html":{},"interfaces/InjectorApiCallOptions.html":{},"interfaces/InjectorApiCallResponse.html":{},"interfaces/InjectorMethodOption.html":{},"components/NgxEditorJSBaseComponent.html":{},"interfaces/NgxEditorJSConfig.html":{},"injectables/NgxEditorJSInstanceService.html":{},"interfaces/NgxEditorJSModuleConfig.html":{},"injectables/NgxEditorJSService.html":{},"todo.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-readme.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-readme/ngx-editorjs-changelog.html":{}}}],["options.blocks",{"_index":1404,"title":{},"body":{"injectables/NgxEditorJSInstanceService.html":{}}}],["options.config",{"_index":1555,"title":{},"body":{"injectables/NgxEditorJSService.html":{}}}],["options.holder",{"_index":1439,"title":{},"body":{"injectables/NgxEditorJSInstanceService.html":{}}}],["options.method",{"_index":1415,"title":{},"body":{"injectables/NgxEditorJSInstanceService.html":{}}}],["options.namespace",{"_index":1411,"title":{},"body":{"injectables/NgxEditorJSInstanceService.html":{}}}],["ordered",{"_index":497,"title":{},"body":{"interfaces/Block.html":{},"interfaces/Header.html":{},"interfaces/HeaderBlock.html":{},"interfaces/Image.html":{},"interfaces/ImageBlock.html":{},"interfaces/List.html":{},"interfaces/ListBlock.html":{},"interfaces/Paragraph.html":{},"interfaces/ParagraphBlock.html":{},"miscellaneous/typealiases.html":{}}}],["orientation",{"_index":1968,"title":{},"body":{"contributing.html":{}}}],["origin",{"_index":1092,"title":{},"body":{"components/NgxEditorJSBaseComponent.html":{}}}],["others",{"_index":2003,"title":{},"body":{"contributing.html":{}}}],["otherwise",{"_index":2061,"title":{},"body":{"contributing.html":{},"license.html":{}}}],["out",{"_index":249,"title":{},"body":{"modules/AppModule.html":{},"modules/ApplicationDataModule.html":{},"modules/NgxEditorJSModule.html":{},"modules/NgxEditorjsDemoModule.html":{},"modules/NgxEditorjsNgrxModule.html":{},"modules/NgxEditorjsPluginsModule.html":{},"modules/NgxTinynodesCoreModule.html":{},"modules/PageStoreModule.html":{},"modules/PluginCodeModule.html":{},"modules/PluginHeaderModule.html":{},"modules/PluginImageModule.html":{},"modules/PluginLinkModule.html":{},"modules/PluginListModule.html":{},"modules/PluginMarkerModule.html":{},"modules/PluginParagraphModule.html":{},"modules/PluginSimpleImageModule.html":{},"index.html":{},"license.html":{},"overview.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-readme.html":{}}}],["output",{"_index":800,"title":{},"body":{"components/FormContainerComponent.html":{},"components/NavBarComponent.html":{},"components/NgxEditorJSBaseComponent.html":{},"interfaces/NgxEditorJSConfig.html":{},"directives/NgxEditorJSDirective.html":{},"interfaces/NgxEditorJSModuleConfig.html":{},"components/PageContainerComponent.html":{}}}],["outputdata",{"_index":527,"title":{},"body":{"interfaces/BlocksMap.html":{},"interfaces/ChangeMap.html":{},"classes/Changed.html":{},"interfaces/EditorJSChange.html":{},"interfaces/EditorMap.html":{},"components/FormContainerComponent.html":{},"components/NgxEditorJSBaseComponent.html":{},"interfaces/NgxEditorJSConfig.html":{},"directives/NgxEditorJSDirective.html":{},"injectables/NgxEditorJSInstanceService.html":{},"interfaces/NgxEditorJSModuleConfig.html":{},"injectables/NgxEditorJSService.html":{},"classes/NotReady.html":{},"components/PageContainerComponent.html":{},"classes/Ready.html":{},"interfaces/ReadyMap.html":{},"classes/SaveEnd.html":{},"classes/SaveStart.html":{},"interfaces/SavedMap.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-readme.html":{}}}],["outputs",{"_index":756,"title":{},"body":{"components/FormContainerComponent.html":{},"components/NavBarComponent.html":{},"components/NgxEditorJSBaseComponent.html":{},"components/NgxEditorJSComponent.html":{},"directives/NgxEditorJSDirective.html":{}}}],["outside",{"_index":1353,"title":{},"body":{"injectables/NgxEditorJSInstanceService.html":{}}}],["over",{"_index":971,"title":{},"body":{"components/NavBarComponent.html":{},"changelog.html":{}}}],["overall",{"_index":1846,"title":{},"body":{"changelog.html":{}}}],["overflow",{"_index":888,"title":{},"body":{"components/FormContainerComponent.html":{},"components/NgxEditorJSDemoInfoComponent.html":{},"components/PageContainerComponent.html":{}}}],["overide",{"_index":779,"title":{},"body":{"components/FormContainerComponent.html":{}}}],["override",{"_index":1663,"title":{},"body":{"components/PageContainerComponent.html":{}}}],["overview",{"_index":2218,"title":{"overview.html":{}},"body":{"overview.html":{}}}],["owners",{"_index":1914,"title":{},"body":{"contributing.html":{}}}],["package",{"_index":1879,"title":{"dependencies.html":{}},"body":{"changelog.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-readme/ngx-editorjs-changelog.html":{}}}],["padding",{"_index":168,"title":{},"body":{"components/AppContainerComponent.html":{},"components/NavBarComponent.html":{}}}],["page",{"_index":63,"title":{"interfaces/Page.html":{},"additional-documentation/tinynodes-library-docs.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-readme.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-readme/ngx-editorjs-changelog.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-plugins-readme.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-plugins-readme/ngx-editorjs-plugins-changelog.html":{}},"body":{"components/AppContainerComponent.html":{},"modules/AppModule.html":{},"components/FormContainerComponent.html":{},"components/HomePageComponent.html":{},"components/NavBarComponent.html":{},"components/NgxEditorJSBaseComponent.html":{},"components/NgxEditorJSComponent.html":{},"components/NgxEditorJSDemoHomeComponent.html":{},"components/NgxEditorJSDemoInfoComponent.html":{},"interfaces/Page.html":{},"interfaces/PageBlock.html":{},"components/PageContainerComponent.html":{},"modules/PageStoreModule.html":{},"injectables/PagesQuery.html":{},"injectables/PagesService.html":{},"interfaces/PagesState.html":{},"injectables/PagesStore.html":{},"components/SidebarComponent.html":{},"interfaces/Tag.html":{},"todo.html":{}}}],["page'},{'name",{"_index":202,"title":{},"body":{"components/AppContainerComponent.html":{},"components/FormContainerComponent.html":{},"components/HomePageComponent.html":{},"components/NavBarComponent.html":{},"components/NgxEditorJSBaseComponent.html":{},"components/NgxEditorJSComponent.html":{},"components/NgxEditorJSDemoHomeComponent.html":{},"components/NgxEditorJSDemoInfoComponent.html":{},"components/PageContainerComponent.html":{},"components/SidebarComponent.html":{}}}],["page.component",{"_index":287,"title":{},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{}}}],["page.component.html",{"_index":895,"title":{},"body":{"components/HomePageComponent.html":{}}}],["page.component.scss",{"_index":894,"title":{},"body":{"components/HomePageComponent.html":{}}}],["page.component.ts",{"_index":893,"title":{},"body":{"components/HomePageComponent.html":{}}}],["page.component.ts:12",{"_index":897,"title":{},"body":{"components/HomePageComponent.html":{}}}],["page.component.ts:9",{"_index":896,"title":{},"body":{"components/HomePageComponent.html":{}}}],["page.id",{"_index":1730,"title":{},"body":{"injectables/PagesService.html":{}}}],["pageblock",{"_index":1657,"title":{"interfaces/PageBlock.html":{}},"body":{"interfaces/Page.html":{},"interfaces/PageBlock.html":{},"injectables/PagesService.html":{},"interfaces/Tag.html":{}}}],["pagecontainercomponent",{"_index":220,"title":{"components/PageContainerComponent.html":{}},"body":{"components/AppContainerComponent.html":{},"components/FormContainerComponent.html":{},"components/HomePageComponent.html":{},"components/NavBarComponent.html":{},"components/NgxEditorJSBaseComponent.html":{},"components/NgxEditorJSComponent.html":{},"components/NgxEditorJSDemoHomeComponent.html":{},"components/NgxEditorJSDemoInfoComponent.html":{},"modules/NgxEditorjsDemoModule.html":{},"components/PageContainerComponent.html":{},"components/SidebarComponent.html":{},"overview.html":{},"miscellaneous/variables.html":{}}}],["pageeditor",{"_index":788,"title":{},"body":{"components/FormContainerComponent.html":{}}}],["pageid",{"_index":1710,"title":{},"body":{"injectables/PagesService.html":{}}}],["pagename",{"_index":785,"title":{},"body":{"components/FormContainerComponent.html":{}}}],["pages",{"_index":758,"title":{},"body":{"components/FormContainerComponent.html":{},"components/PageContainerComponent.html":{},"modules/PageStoreModule.html":{},"injectables/PagesService.html":{},"interfaces/PagesState.html":{},"injectables/PagesStore.html":{}}}],["pages.models",{"_index":1698,"title":{},"body":{"injectables/PagesQuery.html":{},"injectables/PagesService.html":{},"interfaces/PagesState.html":{},"injectables/PagesStore.html":{}}}],["pages.query",{"_index":1692,"title":{},"body":{"modules/PageStoreModule.html":{},"injectables/PagesService.html":{}}}],["pages.service",{"_index":1693,"title":{},"body":{"modules/PageStoreModule.html":{}}}],["pages.store",{"_index":1694,"title":{},"body":{"modules/PageStoreModule.html":{},"injectables/PagesQuery.html":{},"injectables/PagesService.html":{}}}],["pages/home/home",{"_index":286,"title":{},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{}}}],["pagesquery",{"_index":1687,"title":{"injectables/PagesQuery.html":{}},"body":{"modules/PageStoreModule.html":{},"injectables/PagesQuery.html":{},"injectables/PagesService.html":{},"overview.html":{}}}],["pagesservice",{"_index":760,"title":{"injectables/PagesService.html":{}},"body":{"components/FormContainerComponent.html":{},"components/PageContainerComponent.html":{},"modules/PageStoreModule.html":{},"injectables/PagesService.html":{},"overview.html":{}}}],["pagesstate",{"_index":1699,"title":{"interfaces/PagesState.html":{}},"body":{"injectables/PagesQuery.html":{},"interfaces/PagesState.html":{},"injectables/PagesStore.html":{}}}],["pagesstore",{"_index":1688,"title":{"injectables/PagesStore.html":{}},"body":{"modules/PageStoreModule.html":{},"injectables/PagesQuery.html":{},"injectables/PagesService.html":{},"interfaces/PagesState.html":{},"injectables/PagesStore.html":{},"overview.html":{}}}],["pagestoremodule",{"_index":1572,"title":{"modules/PageStoreModule.html":{}},"body":{"modules/NgxEditorjsDemoModule.html":{},"modules/PageStoreModule.html":{},"modules.html":{},"overview.html":{}}}],["pagetags",{"_index":786,"title":{},"body":{"components/FormContainerComponent.html":{},"interfaces/Page.html":{},"interfaces/PageBlock.html":{},"injectables/PagesService.html":{},"interfaces/Tag.html":{}}}],["pagetitle",{"_index":37,"title":{},"body":{"components/AppContainerComponent.html":{},"interfaces/Page.html":{},"interfaces/PageBlock.html":{},"injectables/PagesService.html":{},"interfaces/Tag.html":{}}}],["panel",{"_index":811,"title":{},"body":{"components/FormContainerComponent.html":{},"components/NgxEditorJSDemoInfoComponent.html":{},"components/PageContainerComponent.html":{}}}],["panelopen",{"_index":812,"title":{},"body":{"components/FormContainerComponent.html":{},"components/NgxEditorJSDemoInfoComponent.html":{}}}],["paragraph",{"_index":503,"title":{"interfaces/Paragraph.html":{}},"body":{"interfaces/Block.html":{},"components/FormContainerComponent.html":{},"interfaces/Header.html":{},"interfaces/HeaderBlock.html":{},"interfaces/Image.html":{},"interfaces/ImageBlock.html":{},"interfaces/List.html":{},"interfaces/ListBlock.html":{},"components/NgxEditorJSBaseComponent.html":{},"components/NgxEditorJSComponent.html":{},"interfaces/NgxEditorJSConfig.html":{},"directives/NgxEditorJSDirective.html":{},"interfaces/NgxEditorJSModuleConfig.html":{},"components/PageContainerComponent.html":{},"interfaces/Paragraph.html":{},"interfaces/ParagraphBlock.html":{},"injectables/PluginParagraph.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-readme.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-readme/ngx-editorjs-changelog.html":{}}}],["paragraph.plugin",{"_index":1811,"title":{},"body":{"modules/PluginParagraphModule.html":{}}}],["paragraphblock",{"_index":504,"title":{"interfaces/ParagraphBlock.html":{}},"body":{"interfaces/Block.html":{},"interfaces/Header.html":{},"interfaces/HeaderBlock.html":{},"interfaces/Image.html":{},"interfaces/ImageBlock.html":{},"interfaces/List.html":{},"interfaces/ListBlock.html":{},"interfaces/Paragraph.html":{},"interfaces/ParagraphBlock.html":{},"miscellaneous/typealiases.html":{}}}],["param",{"_index":132,"title":{},"body":{"components/AppContainerComponent.html":{},"injectables/AppService.html":{},"injectables/AppService-1.html":{},"injectables/ApplicationQuery.html":{},"injectables/ApplicationQuery-1.html":{},"interfaces/EditorJSMaterialForm.html":{},"components/FormContainerComponent.html":{},"components/NgxEditorJSBaseComponent.html":{},"components/NgxEditorJSComponent.html":{},"directives/NgxEditorJSDirective.html":{},"injectables/NgxEditorJSInstanceService.html":{},"modules/NgxEditorJSModule.html":{},"injectables/NgxEditorJSPluginService.html":{},"injectables/NgxEditorJSService.html":{},"components/PageContainerComponent.html":{},"injectables/PagesService.html":{}}}],["parameter",{"_index":2289,"title":{},"body":{"additional-documentation/tinynodes-library-docs/ngx-editorjs-readme/ngx-editorjs-changelog.html":{}}}],["parameters",{"_index":52,"title":{},"body":{"components/AppContainerComponent.html":{},"injectables/AppService.html":{},"injectables/AppService-1.html":{},"injectables/ApplicationQuery.html":{},"injectables/ApplicationQuery-1.html":{},"classes/Changed.html":{},"components/FormContainerComponent.html":{},"components/HomePageComponent.html":{},"classes/MockEditorJS.html":{},"injectables/MockNgZone.html":{},"components/NgxEditorJSBaseComponent.html":{},"components/NgxEditorJSComponent.html":{},"components/NgxEditorJSDemoInfoComponent.html":{},"directives/NgxEditorJSDirective.html":{},"injectables/NgxEditorJSEffects.html":{},"injectables/NgxEditorJSInstanceService.html":{},"modules/NgxEditorJSModule.html":{},"injectables/NgxEditorJSPluginService.html":{},"injectables/NgxEditorJSService.html":{},"classes/NotReady.html":{},"components/PageContainerComponent.html":{},"injectables/PagesQuery.html":{},"injectables/PagesService.html":{},"classes/Ready.html":{},"classes/SaveEnd.html":{},"classes/SaveStart.html":{},"contributing.html":{},"miscellaneous/functions.html":{}}}],["parentmodule",{"_index":1493,"title":{},"body":{"modules/NgxEditorJSModule.html":{}}}],["participants",{"_index":1991,"title":{},"body":{"contributing.html":{}}}],["participation",{"_index":1948,"title":{},"body":{"contributing.html":{}}}],["particular",{"_index":2200,"title":{},"body":{"license.html":{}}}],["pass",{"_index":598,"title":{},"body":{"interfaces/EditorJSInstanceConfig.html":{},"interfaces/InjectorApiCallOptions.html":{},"interfaces/InjectorApiCallResponse.html":{},"interfaces/InjectorMethodOption.html":{},"components/NgxEditorJSBaseComponent.html":{},"components/NgxEditorJSComponent.html":{},"directives/NgxEditorJSDirective.html":{},"injectables/NgxEditorJSInstanceService.html":{},"modules/NgxEditorJSModule.html":{},"injectables/NgxEditorJSService.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-readme.html":{}}}],["passed",{"_index":1161,"title":{},"body":{"interfaces/NgxEditorJSConfig.html":{},"injectables/NgxEditorJSInstanceService.html":{},"interfaces/NgxEditorJSModuleConfig.html":{},"injectables/NgxEditorJSPluginService.html":{},"injectables/NgxEditorJSService.html":{}}}],["passing",{"_index":2292,"title":{},"body":{"additional-documentation/tinynodes-library-docs/ngx-editorjs-readme/ngx-editorjs-changelog.html":{}}}],["paste",{"_index":873,"title":{},"body":{"components/FormContainerComponent.html":{},"components/PageContainerComponent.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-plugins-readme.html":{}}}],["patches",{"_index":1015,"title":{},"body":{"components/NgxEditorJSBaseComponent.html":{},"components/NgxEditorJSComponent.html":{},"directives/NgxEditorJSDirective.html":{}}}],["path",{"_index":309,"title":{},"body":{"modules/AppRoutingModule.html":{},"miscellaneous/variables.html":{}}}],["pathmatch",{"_index":311,"title":{},"body":{"modules/AppRoutingModule.html":{},"miscellaneous/variables.html":{}}}],["paths",{"_index":1249,"title":{},"body":{"directives/NgxEditorJSDirective.html":{}}}],["payload",{"_index":547,"title":{},"body":{"classes/Changed.html":{},"classes/NotReady.html":{},"classes/Ready.html":{},"classes/SaveEnd.html":{},"classes/SaveStart.html":{}}}],["peer",{"_index":2231,"title":{},"body":{"todo.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-plugins-readme.html":{}}}],["peerdependencies",{"_index":2323,"title":{},"body":{"additional-documentation/tinynodes-library-docs/ngx-editorjs-plugins-readme.html":{}}}],["permanent",{"_index":2085,"title":{},"body":{"contributing.html":{}}}],["permanently",{"_index":2032,"title":{},"body":{"contributing.html":{}}}],["permission",{"_index":1940,"title":{},"body":{"contributing.html":{},"license.html":{}}}],["permit",{"_index":2181,"title":{},"body":{"license.html":{}}}],["person",{"_index":2164,"title":{},"body":{"license.html":{}}}],["personal",{"_index":1963,"title":{},"body":{"contributing.html":{}}}],["persons",{"_index":2182,"title":{},"body":{"license.html":{}}}],["physical",{"_index":2005,"title":{},"body":{"contributing.html":{}}}],["pipe",{"_index":138,"title":{},"body":{"components/AppContainerComponent.html":{},"components/FormContainerComponent.html":{},"components/PageContainerComponent.html":{}}}],["pipe(take(1",{"_index":836,"title":{},"body":{"components/FormContainerComponent.html":{},"injectables/NgxEditorJSInstanceService.html":{},"components/PageContainerComponent.html":{}}}],["pipe(takeuntil(instancedestroyed",{"_index":1436,"title":{},"body":{"injectables/NgxEditorJSInstanceService.html":{}}}],["pipe(takeuntil(this.ondestroy",{"_index":722,"title":{},"body":{"interfaces/EditorJSMaterialForm.html":{},"components/FormContainerComponent.html":{},"components/NgxEditorJSBaseComponent.html":{},"components/NgxEditorJSComponent.html":{},"directives/NgxEditorJSDirective.html":{}}}],["pipeline",{"_index":2225,"title":{},"body":{"todo.html":{}}}],["piper",{"_index":2153,"title":{},"body":{"index.html":{},"license.html":{}}}],["placeholder",{"_index":653,"title":{},"body":{"interfaces/EditorJSMaterialForm.html":{},"components/NgxEditorJSBaseComponent.html":{},"components/NgxEditorJSComponent.html":{},"interfaces/NgxEditorJSConfig.html":{},"directives/NgxEditorJSDirective.html":{},"interfaces/NgxEditorJSModuleConfig.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-readme.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-readme/ngx-editorjs-changelog.html":{}}}],["placeholder(placeholder",{"_index":657,"title":{},"body":{"interfaces/EditorJSMaterialForm.html":{}}}],["please",{"_index":1909,"title":{},"body":{"contributing.html":{},"additional-documentation/tinynodes-library-docs.html":{}}}],["pledge",{"_index":1942,"title":{},"body":{"contributing.html":{}}}],["pluck",{"_index":806,"title":{},"body":{"components/FormContainerComponent.html":{},"components/PageContainerComponent.html":{}}}],["pluck('blocks",{"_index":830,"title":{},"body":{"components/FormContainerComponent.html":{},"components/PageContainerComponent.html":{}}}],["plug",{"_index":1624,"title":{},"body":{"modules/NgxEditorjsPluginsModule.html":{}}}],["plugin",{"_index":465,"title":{},"body":{"interfaces/BasePlugin.html":{},"interfaces/BasePlugin-1.html":{},"interfaces/Block.html":{},"components/FormContainerComponent.html":{},"interfaces/Header.html":{},"interfaces/HeaderBlock.html":{},"interfaces/Image.html":{},"interfaces/ImageBlock.html":{},"interfaces/List.html":{},"interfaces/ListBlock.html":{},"classes/MockEditorJS.html":{},"classes/MockPlugin.html":{},"components/NgxEditorJSBaseComponent.html":{},"components/NgxEditorJSComponent.html":{},"directives/NgxEditorJSDirective.html":{},"injectables/NgxEditorJSPluginService.html":{},"components/PageContainerComponent.html":{},"interfaces/Paragraph.html":{},"interfaces/ParagraphBlock.html":{},"injectables/PluginCode.html":{},"interfaces/PluginConfig.html":{},"interfaces/PluginConfig-1.html":{},"injectables/PluginHeader.html":{},"injectables/PluginImage.html":{},"injectables/PluginLink.html":{},"injectables/PluginList.html":{},"injectables/PluginMarker.html":{},"injectables/PluginParagraph.html":{},"injectables/PluginSimpleImage.html":{},"classes/TestClass.html":{},"interfaces/ToolSettingsMap.html":{},"interfaces/ToolSettingsMap-1.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-readme.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-readme/ngx-editorjs-changelog.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-plugins-readme.html":{}}}],["plugin.plugin",{"_index":1530,"title":{},"body":{"injectables/NgxEditorJSPluginService.html":{}}}],["plugin.shortcut",{"_index":1529,"title":{},"body":{"injectables/NgxEditorJSPluginService.html":{}}}],["plugincode",{"_index":1742,"title":{"injectables/PluginCode.html":{}},"body":{"injectables/PluginCode.html":{},"modules/PluginCodeModule.html":{},"overview.html":{}}}],["plugincodemodule",{"_index":1573,"title":{"modules/PluginCodeModule.html":{}},"body":{"modules/NgxEditorjsDemoModule.html":{},"modules/NgxEditorjsPluginsModule.html":{},"modules/PluginCodeModule.html":{},"modules.html":{},"overview.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-plugins-readme.html":{}}}],["pluginconfig",{"_index":476,"title":{"interfaces/PluginConfig.html":{},"interfaces/PluginConfig-1.html":{}},"body":{"interfaces/BasePlugin.html":{},"interfaces/BasePlugin-1.html":{},"injectables/NgxEditorJSPluginService.html":{},"interfaces/PluginConfig.html":{},"interfaces/PluginConfig-1.html":{},"interfaces/ToolSettingsMap.html":{},"interfaces/ToolSettingsMap-1.html":{},"miscellaneous/functions.html":{}}}],["pluginheader",{"_index":1756,"title":{"injectables/PluginHeader.html":{}},"body":{"injectables/PluginHeader.html":{},"modules/PluginHeaderModule.html":{},"overview.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-readme.html":{}}}],["pluginheadermodule",{"_index":1574,"title":{"modules/PluginHeaderModule.html":{}},"body":{"modules/NgxEditorjsDemoModule.html":{},"modules/NgxEditorjsPluginsModule.html":{},"modules/PluginHeaderModule.html":{},"modules.html":{},"overview.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-readme.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-plugins-readme.html":{}}}],["pluginilistmodule",{"_index":2327,"title":{},"body":{"additional-documentation/tinynodes-library-docs/ngx-editorjs-plugins-readme.html":{}}}],["pluginimage",{"_index":1765,"title":{"injectables/PluginImage.html":{}},"body":{"injectables/PluginImage.html":{},"modules/PluginImageModule.html":{},"overview.html":{}}}],["pluginimagemodule",{"_index":1619,"title":{"modules/PluginImageModule.html":{}},"body":{"modules/NgxEditorjsPluginsModule.html":{},"modules/PluginImageModule.html":{},"modules.html":{},"overview.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-plugins-readme.html":{}}}],["pluginlink",{"_index":1774,"title":{"injectables/PluginLink.html":{}},"body":{"injectables/PluginLink.html":{},"modules/PluginLinkModule.html":{},"overview.html":{}}}],["pluginlinkmodule",{"_index":1575,"title":{"modules/PluginLinkModule.html":{}},"body":{"modules/NgxEditorjsDemoModule.html":{},"modules/NgxEditorjsPluginsModule.html":{},"modules/PluginLinkModule.html":{},"modules.html":{},"overview.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-plugins-readme.html":{}}}],["pluginlist",{"_index":1783,"title":{"injectables/PluginList.html":{}},"body":{"injectables/PluginList.html":{},"modules/PluginListModule.html":{},"overview.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-readme.html":{}}}],["pluginlistmodule",{"_index":1576,"title":{"modules/PluginListModule.html":{}},"body":{"modules/NgxEditorjsDemoModule.html":{},"modules/NgxEditorjsPluginsModule.html":{},"modules/PluginListModule.html":{},"modules.html":{},"overview.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-readme.html":{}}}],["pluginmarker",{"_index":1792,"title":{"injectables/PluginMarker.html":{}},"body":{"injectables/PluginMarker.html":{},"modules/PluginMarkerModule.html":{},"overview.html":{}}}],["pluginmarkermodule",{"_index":1577,"title":{"modules/PluginMarkerModule.html":{}},"body":{"modules/NgxEditorjsDemoModule.html":{},"modules/NgxEditorjsPluginsModule.html":{},"modules/PluginMarkerModule.html":{},"modules.html":{},"overview.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-plugins-readme.html":{}}}],["pluginparagraph",{"_index":1804,"title":{"injectables/PluginParagraph.html":{}},"body":{"injectables/PluginParagraph.html":{},"modules/PluginParagraphModule.html":{},"overview.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-readme.html":{}}}],["pluginparagraphmodule",{"_index":1578,"title":{"modules/PluginParagraphModule.html":{}},"body":{"modules/NgxEditorjsDemoModule.html":{},"modules/NgxEditorjsPluginsModule.html":{},"modules/PluginParagraphModule.html":{},"modules.html":{},"overview.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-readme.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-plugins-readme.html":{}}}],["plugins",{"_index":485,"title":{"additional-documentation/tinynodes-library-docs/ngx-editorjs-plugins-readme.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-plugins-readme/ngx-editorjs-plugins-changelog.html":{}},"body":{"interfaces/BasePlugin.html":{},"interfaces/BasePlugin-1.html":{},"injectables/NgxEditorJSPluginService.html":{},"injectables/NgxEditorJSService.html":{},"modules/NgxEditorjsDemoModule.html":{},"interfaces/PluginConfig.html":{},"interfaces/PluginConfig-1.html":{},"interfaces/ToolSettingsMap.html":{},"interfaces/ToolSettingsMap-1.html":{},"changelog.html":{},"index.html":{},"miscellaneous/variables.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-readme.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-readme/ngx-editorjs-changelog.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-plugins-readme.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-plugins-readme/ngx-editorjs-plugins-changelog.html":{}}}],["plugins.module.ts",{"_index":1621,"title":{},"body":{"modules/NgxEditorjsPluginsModule.html":{}}}],["plugins.service",{"_index":1552,"title":{},"body":{"injectables/NgxEditorJSService.html":{}}}],["plugins/code/code.module",{"_index":1628,"title":{},"body":{"modules/NgxEditorjsPluginsModule.html":{}}}],["plugins/header/header.module",{"_index":1629,"title":{},"body":{"modules/NgxEditorjsPluginsModule.html":{}}}],["plugins/image/image.module",{"_index":1630,"title":{},"body":{"modules/NgxEditorjsPluginsModule.html":{}}}],["plugins/link/link.module",{"_index":1631,"title":{},"body":{"modules/NgxEditorjsPluginsModule.html":{}}}],["plugins/list/list.module",{"_index":1632,"title":{},"body":{"modules/NgxEditorjsPluginsModule.html":{}}}],["plugins/marker/marker.module",{"_index":1633,"title":{},"body":{"modules/NgxEditorjsPluginsModule.html":{}}}],["plugins/paragraph/paragraph.module",{"_index":1634,"title":{},"body":{"modules/NgxEditorjsPluginsModule.html":{}}}],["plugins/simple",{"_index":1635,"title":{},"body":{"modules/NgxEditorjsPluginsModule.html":{}}}],["plugins/src/lib/ngx",{"_index":1620,"title":{},"body":{"modules/NgxEditorjsPluginsModule.html":{}}}],["plugins/src/lib/plugins/code/code.module.ts",{"_index":1748,"title":{},"body":{"modules/PluginCodeModule.html":{}}}],["plugins/src/lib/plugins/code/code.plugin.ts",{"_index":1743,"title":{},"body":{"injectables/PluginCode.html":{}}}],["plugins/src/lib/plugins/code/code.plugin.ts:14",{"_index":1744,"title":{},"body":{"injectables/PluginCode.html":{}}}],["plugins/src/lib/plugins/header/header.module.ts",{"_index":1762,"title":{},"body":{"modules/PluginHeaderModule.html":{}}}],["plugins/src/lib/plugins/header/header.plugin.ts",{"_index":1757,"title":{},"body":{"injectables/PluginHeader.html":{}}}],["plugins/src/lib/plugins/header/header.plugin.ts:14",{"_index":1758,"title":{},"body":{"injectables/PluginHeader.html":{}}}],["plugins/src/lib/plugins/image/image.module.ts",{"_index":1771,"title":{},"body":{"modules/PluginImageModule.html":{}}}],["plugins/src/lib/plugins/image/image.plugin.ts",{"_index":1766,"title":{},"body":{"injectables/PluginImage.html":{}}}],["plugins/src/lib/plugins/image/image.plugin.ts:14",{"_index":1767,"title":{},"body":{"injectables/PluginImage.html":{}}}],["plugins/src/lib/plugins/link/link.module.ts",{"_index":1780,"title":{},"body":{"modules/PluginLinkModule.html":{}}}],["plugins/src/lib/plugins/link/link.plugin.ts",{"_index":1775,"title":{},"body":{"injectables/PluginLink.html":{}}}],["plugins/src/lib/plugins/link/link.plugin.ts:14",{"_index":1776,"title":{},"body":{"injectables/PluginLink.html":{}}}],["plugins/src/lib/plugins/list/list.module.ts",{"_index":1789,"title":{},"body":{"modules/PluginListModule.html":{}}}],["plugins/src/lib/plugins/list/list.plugin.ts",{"_index":1784,"title":{},"body":{"injectables/PluginList.html":{}}}],["plugins/src/lib/plugins/list/list.plugin.ts:14",{"_index":1785,"title":{},"body":{"injectables/PluginList.html":{}}}],["plugins/src/lib/plugins/marker/marker.module.ts",{"_index":1801,"title":{},"body":{"modules/PluginMarkerModule.html":{}}}],["plugins/src/lib/plugins/marker/marker.plugin.ts",{"_index":1793,"title":{},"body":{"injectables/PluginMarker.html":{}}}],["plugins/src/lib/plugins/marker/marker.plugin.ts:14",{"_index":1795,"title":{},"body":{"injectables/PluginMarker.html":{}}}],["plugins/src/lib/plugins/marker/marker.plugin.ts:20",{"_index":1796,"title":{},"body":{"injectables/PluginMarker.html":{}}}],["plugins/src/lib/plugins/paragraph/paragraph.module.ts",{"_index":1810,"title":{},"body":{"modules/PluginParagraphModule.html":{}}}],["plugins/src/lib/plugins/paragraph/paragraph.plugin.ts",{"_index":1805,"title":{},"body":{"injectables/PluginParagraph.html":{}}}],["plugins/src/lib/plugins/paragraph/paragraph.plugin.ts:14",{"_index":1806,"title":{},"body":{"injectables/PluginParagraph.html":{}}}],["plugins/src/lib/plugins/simple",{"_index":1814,"title":{},"body":{"injectables/PluginSimpleImage.html":{},"modules/PluginSimpleImageModule.html":{}}}],["plugins/src/lib/types/plugins.ts",{"_index":489,"title":{},"body":{"interfaces/BasePlugin-1.html":{},"interfaces/PluginConfig-1.html":{},"interfaces/ToolSettingsMap-1.html":{},"miscellaneous/variables.html":{}}}],["plugins/src/lib/types/plugins.ts:17",{"_index":1842,"title":{},"body":{"interfaces/ToolSettingsMap-1.html":{}}}],["plugins/src/lib/types/plugins.ts:7",{"_index":1755,"title":{},"body":{"interfaces/PluginConfig-1.html":{}}}],["pluginservice",{"_index":2329,"title":{},"body":{"additional-documentation/tinynodes-library-docs/ngx-editorjs-plugins-readme/ngx-editorjs-plugins-changelog.html":{}}}],["pluginsimpleimage",{"_index":1813,"title":{"injectables/PluginSimpleImage.html":{}},"body":{"injectables/PluginSimpleImage.html":{},"modules/PluginSimpleImageModule.html":{},"overview.html":{}}}],["pluginsimpleimagemodule",{"_index":1579,"title":{"modules/PluginSimpleImageModule.html":{}},"body":{"modules/NgxEditorjsDemoModule.html":{},"modules/NgxEditorjsPluginsModule.html":{},"modules/PluginSimpleImageModule.html":{},"modules.html":{},"overview.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-plugins-readme.html":{}}}],["pluginsmap",{"_index":1518,"title":{},"body":{"injectables/NgxEditorJSPluginService.html":{}}}],["pointer",{"_index":172,"title":{},"body":{"components/AppContainerComponent.html":{},"components/NavBarComponent.html":{}}}],["pointing",{"_index":876,"title":{},"body":{"components/FormContainerComponent.html":{},"components/PageContainerComponent.html":{}}}],["policies",{"_index":2078,"title":{},"body":{"contributing.html":{}}}],["political",{"_index":2000,"title":{},"body":{"contributing.html":{}}}],["portions",{"_index":2191,"title":{},"body":{"license.html":{}}}],["ports",{"_index":1927,"title":{},"body":{"contributing.html":{}}}],["position",{"_index":1143,"title":{},"body":{"components/NgxEditorJSComponent.html":{}}}],["positive",{"_index":1972,"title":{},"body":{"contributing.html":{}}}],["possible",{"_index":1626,"title":{},"body":{"modules/NgxEditorjsPluginsModule.html":{}}}],["posted",{"_index":2079,"title":{},"body":{"contributing.html":{}}}],["posting",{"_index":2047,"title":{},"body":{"contributing.html":{}}}],["potential",{"_index":2274,"title":{},"body":{"additional-documentation/tinynodes-library-docs/ngx-editorjs-readme.html":{}}}],["pre",{"_index":2320,"title":{},"body":{"additional-documentation/tinynodes-library-docs/ngx-editorjs-readme/ngx-editorjs-changelog.html":{}}}],["press",{"_index":856,"title":{},"body":{"components/FormContainerComponent.html":{}}}],["pressed",{"_index":979,"title":{},"body":{"components/NavBarComponent.html":{}}}],["private",{"_index":111,"title":{},"body":{"components/AppContainerComponent.html":{},"injectables/AppService.html":{},"injectables/AppService-1.html":{},"interfaces/EditorJSMaterialForm.html":{},"components/FormContainerComponent.html":{},"components/NgxEditorJSDemoInfoComponent.html":{},"directives/NgxEditorJSDirective.html":{},"injectables/NgxEditorJSEffects.html":{},"injectables/NgxEditorJSInstanceService.html":{},"injectables/NgxEditorJSPluginService.html":{},"injectables/NgxEditorJSService.html":{},"components/PageContainerComponent.html":{},"injectables/PagesService.html":{},"contributing.html":{},"index.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-readme.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-readme/ngx-editorjs-changelog.html":{}}}],["process",{"_index":1252,"title":{},"body":{"directives/NgxEditorJSDirective.html":{},"contributing.html":{}}}],["production",{"_index":2252,"title":{},"body":{"miscellaneous/variables.html":{}}}],["professional",{"_index":2012,"title":{},"body":{"contributing.html":{}}}],["project",{"_index":1891,"title":{},"body":{"changelog.html":{},"contributing.html":{},"index.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-readme.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-readme/ngx-editorjs-changelog.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-plugins-readme.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-plugins-readme/ngx-editorjs-plugins-changelog.html":{}}}],["project's",{"_index":2088,"title":{},"body":{"contributing.html":{}}}],["projects",{"_index":91,"title":{},"body":{"components/AppContainerComponent.html":{},"additional-documentation/tinynodes-library-docs.html":{}}}],["projectsmenu",{"_index":41,"title":{},"body":{"components/AppContainerComponent.html":{},"components/SidebarComponent.html":{}}}],["projectsmenu.title",{"_index":1836,"title":{},"body":{"components/SidebarComponent.html":{}}}],["promise",{"_index":929,"title":{},"body":{"classes/MockEditorJS.html":{},"classes/MockPlugin.html":{},"injectables/NgxEditorJSInstanceService.html":{},"injectables/NgxEditorJSService.html":{},"classes/TestClass.html":{}}}],["promise.resolve",{"_index":940,"title":{},"body":{"classes/MockEditorJS.html":{},"classes/MockPlugin.html":{},"classes/TestClass.html":{}}}],["properties",{"_index":29,"title":{},"body":{"components/AppContainerComponent.html":{},"interfaces/ApplicationData.html":{},"interfaces/ApplicationData-1.html":{},"interfaces/ApplicationState.html":{},"interfaces/ApplicationState-1.html":{},"interfaces/BasePlugin.html":{},"interfaces/BasePlugin-1.html":{},"interfaces/Block.html":{},"classes/Changed.html":{},"interfaces/CreateEditorJSOptions.html":{},"interfaces/DemoData.html":{},"interfaces/DemoData-1.html":{},"interfaces/EditorJSChange.html":{},"interfaces/EditorJSInstanceConfig.html":{},"interfaces/EditorJSMaterialForm.html":{},"components/FormContainerComponent.html":{},"interfaces/Header.html":{},"interfaces/HeaderBlock.html":{},"interfaces/Image.html":{},"interfaces/ImageBlock.html":{},"interfaces/InjectorApiCallOptions.html":{},"interfaces/InjectorApiCallResponse.html":{},"interfaces/InjectorMethodOption.html":{},"interfaces/List.html":{},"interfaces/ListBlock.html":{},"interfaces/MenuGroup.html":{},"interfaces/MenuGroup-1.html":{},"interfaces/MenuItem.html":{},"interfaces/MenuItem-1.html":{},"classes/MockEditorJS.html":{},"injectables/MockNgZone.html":{},"components/NgxEditorJSBaseComponent.html":{},"components/NgxEditorJSComponent.html":{},"interfaces/NgxEditorJSConfig.html":{},"interfaces/NgxEditorJSDemo.html":{},"interfaces/NgxEditorJSDemo-1.html":{},"injectables/NgxEditorJSEffects.html":{},"interfaces/NgxEditorJSModuleConfig.html":{},"classes/NotReady.html":{},"interfaces/Page.html":{},"interfaces/PageBlock.html":{},"components/PageContainerComponent.html":{},"injectables/PagesService.html":{},"interfaces/Paragraph.html":{},"interfaces/ParagraphBlock.html":{},"classes/Ready.html":{},"classes/SaveEnd.html":{},"classes/SaveStart.html":{},"interfaces/Tag.html":{},"interfaces/TinynodeDemos.html":{},"interfaces/TinynodeDemos-1.html":{},"index.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-readme.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-readme/ngx-editorjs-changelog.html":{}}}],["property",{"_index":513,"title":{},"body":{"interfaces/Block.html":{},"interfaces/EditorJSInstanceConfig.html":{},"interfaces/Header.html":{},"interfaces/HeaderBlock.html":{},"interfaces/Image.html":{},"interfaces/ImageBlock.html":{},"interfaces/InjectorApiCallOptions.html":{},"interfaces/InjectorApiCallResponse.html":{},"interfaces/InjectorMethodOption.html":{},"interfaces/List.html":{},"interfaces/ListBlock.html":{},"components/NgxEditorJSBaseComponent.html":{},"components/NgxEditorJSComponent.html":{},"directives/NgxEditorJSDirective.html":{},"injectables/NgxEditorJSInstanceService.html":{},"injectables/NgxEditorJSService.html":{},"interfaces/Paragraph.html":{},"interfaces/ParagraphBlock.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-readme/ngx-editorjs-changelog.html":{}}}],["protected",{"_index":706,"title":{},"body":{"interfaces/EditorJSMaterialForm.html":{},"components/NgxEditorJSBaseComponent.html":{},"components/NgxEditorJSComponent.html":{},"directives/NgxEditorJSDirective.html":{},"injectables/NgxEditorJSInstanceService.html":{}}}],["provide",{"_index":423,"title":{},"body":{"modules/ApplicationDataModule.html":{},"injectables/ApplicationQuery.html":{},"injectables/ApplicationQuery-1.html":{},"injectables/ApplicationStore.html":{},"injectables/ApplicationStore-1.html":{},"interfaces/EditorJSMaterialForm.html":{},"components/NgxEditorJSBaseComponent.html":{},"modules/NgxEditorJSModule.html":{},"modules/NgxEditorjsDemoModule.html":{},"modules/NgxEditorjsPluginsModule.html":{},"index.html":{},"todo.html":{},"miscellaneous/variables.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-readme.html":{}}}],["provided",{"_index":434,"title":{},"body":{"injectables/ApplicationQuery.html":{},"injectables/ApplicationQuery-1.html":{},"interfaces/Block.html":{},"components/FormContainerComponent.html":{},"interfaces/Header.html":{},"interfaces/HeaderBlock.html":{},"interfaces/Image.html":{},"interfaces/ImageBlock.html":{},"interfaces/List.html":{},"interfaces/ListBlock.html":{},"components/NgxEditorJSBaseComponent.html":{},"components/NgxEditorJSComponent.html":{},"directives/NgxEditorJSDirective.html":{},"injectables/NgxEditorJSInstanceService.html":{},"modules/NgxEditorJSModule.html":{},"interfaces/Paragraph.html":{},"interfaces/ParagraphBlock.html":{},"changelog.html":{},"license.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-readme.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-readme/ngx-editorjs-changelog.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-plugins-readme/ngx-editorjs-plugins-changelog.html":{}}}],["providedin",{"_index":1382,"title":{},"body":{"injectables/NgxEditorJSInstanceService.html":{},"injectables/NgxEditorJSPluginService.html":{},"injectables/NgxEditorJSService.html":{}}}],["provider",{"_index":335,"title":{},"body":{"injectables/AppService.html":{},"injectables/AppService-1.html":{},"interfaces/EditorJSMaterialForm.html":{},"components/NgxEditorJSBaseComponent.html":{},"miscellaneous/variables.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-readme.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-readme/ngx-editorjs-changelog.html":{}}}],["providers",{"_index":235,"title":{},"body":{"modules/AppModule.html":{},"injectables/AppService.html":{},"injectables/AppService-1.html":{},"modules/ApplicationDataModule.html":{},"interfaces/EditorJSMaterialForm.html":{},"components/NgxEditorJSBaseComponent.html":{},"modules/NgxEditorJSModule.html":{},"modules/NgxEditorjsDemoModule.html":{},"modules/NgxEditorjsNgrxModule.html":{},"modules/NgxEditorjsPluginsModule.html":{},"modules/NgxTinynodesCoreModule.html":{},"modules/PageStoreModule.html":{},"modules/PluginCodeModule.html":{},"modules/PluginHeaderModule.html":{},"modules/PluginImageModule.html":{},"modules/PluginLinkModule.html":{},"modules/PluginListModule.html":{},"modules/PluginMarkerModule.html":{},"modules/PluginParagraphModule.html":{},"modules/PluginSimpleImageModule.html":{},"overview.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-readme.html":{}}}],["provides",{"_index":15,"title":{},"body":{"components/AppContainerComponent.html":{},"modules/AppRoutingModule.html":{},"injectables/AppService.html":{},"injectables/AppService-1.html":{},"interfaces/EditorJSMaterialForm.html":{},"components/FormContainerComponent.html":{},"components/NavBarComponent.html":{},"components/NgxEditorJSBaseComponent.html":{},"components/NgxEditorJSDemoHomeComponent.html":{},"directives/NgxEditorJSDirective.html":{},"injectables/NgxEditorJSInstanceService.html":{},"modules/NgxEditorJSModule.html":{},"injectables/NgxEditorJSPluginService.html":{},"injectables/NgxEditorJSService.html":{},"modules/NgxEditorjsNgrxModule.html":{},"modules/NgxEditorjsPluginsModule.html":{},"modules/NgxTinynodesCoreModule.html":{},"components/PageContainerComponent.html":{},"injectables/PagesService.html":{},"modules/PluginCodeModule.html":{},"modules/PluginHeaderModule.html":{},"modules/PluginImageModule.html":{},"modules/PluginLinkModule.html":{},"modules/PluginListModule.html":{},"modules/PluginMarkerModule.html":{},"modules/PluginParagraphModule.html":{},"modules/PluginSimpleImageModule.html":{},"changelog.html":{},"index.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-readme.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-readme/ngx-editorjs-changelog.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-plugins-readme.html":{}}}],["providing",{"_index":988,"title":{},"body":{"components/NgxEditorJSBaseComponent.html":{},"components/NgxEditorJSDemoHomeComponent.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-readme/ngx-editorjs-changelog.html":{}}}],["provied",{"_index":1162,"title":{},"body":{"interfaces/NgxEditorJSConfig.html":{},"interfaces/NgxEditorJSModuleConfig.html":{},"miscellaneous/variables.html":{}}}],["public",{"_index":34,"title":{},"body":{"components/AppContainerComponent.html":{},"injectables/AppService.html":{},"injectables/AppService-1.html":{},"classes/Changed.html":{},"interfaces/EditorJSMaterialForm.html":{},"components/FormContainerComponent.html":{},"components/HomePageComponent.html":{},"classes/MockEditorJS.html":{},"classes/MockPlugin.html":{},"components/NgxEditorJSBaseComponent.html":{},"components/NgxEditorJSComponent.html":{},"components/NgxEditorJSDemoInfoComponent.html":{},"directives/NgxEditorJSDirective.html":{},"injectables/NgxEditorJSInstanceService.html":{},"injectables/NgxEditorJSPluginService.html":{},"injectables/NgxEditorJSService.html":{},"classes/NotReady.html":{},"components/PageContainerComponent.html":{},"injectables/PagesService.html":{},"injectables/PluginCode.html":{},"injectables/PluginHeader.html":{},"injectables/PluginImage.html":{},"injectables/PluginLink.html":{},"injectables/PluginList.html":{},"injectables/PluginMarker.html":{},"injectables/PluginParagraph.html":{},"injectables/PluginSimpleImage.html":{},"classes/Ready.html":{},"classes/SaveEnd.html":{},"classes/SaveStart.html":{},"classes/TestClass.html":{},"contributing.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-readme/ngx-editorjs-changelog.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-plugins-readme/ngx-editorjs-plugins-changelog.html":{}}}],["publish",{"_index":2175,"title":{},"body":{"license.html":{},"todo.html":{}}}],["published",{"_index":1609,"title":{},"body":{"modules/NgxEditorjsNgrxModule.html":{}}}],["publishing",{"_index":2002,"title":{},"body":{"contributing.html":{},"todo.html":{}}}],["pull",{"_index":1919,"title":{},"body":{"contributing.html":{}}}],["purpose",{"_index":2201,"title":{},"body":{"license.html":{}}}],["queried",{"_index":324,"title":{},"body":{"injectables/AppService.html":{},"injectables/AppService-1.html":{}}}],["query",{"_index":334,"title":{},"body":{"injectables/AppService.html":{},"injectables/AppService-1.html":{},"injectables/ApplicationQuery.html":{},"injectables/ApplicationQuery-1.html":{},"injectables/PagesService.html":{}}}],["queryentity",{"_index":1696,"title":{},"body":{"injectables/PagesQuery.html":{}}}],["race",{"_index":1965,"title":{},"body":{"contributing.html":{}}}],["radius",{"_index":1149,"title":{},"body":{"components/NgxEditorJSComponent.html":{}}}],["reactive",{"_index":851,"title":{},"body":{"components/FormContainerComponent.html":{},"components/NgxEditorJSBaseComponent.html":{},"index.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-readme.html":{}}}],["reactiveformsmodule",{"_index":1583,"title":{},"body":{"modules/NgxEditorjsDemoModule.html":{}}}],["read",{"_index":1668,"title":{},"body":{"components/PageContainerComponent.html":{}}}],["readme",{"_index":2150,"title":{"additional-documentation/tinynodes-library-docs/ngx-editorjs-readme.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-plugins-readme.html":{}},"body":{"index.html":{},"additional-documentation/tinynodes-library-docs.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-readme/ngx-editorjs-changelog.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-plugins-readme.html":{}}}],["readme.md",{"_index":1924,"title":{},"body":{"contributing.html":{},"additional-documentation/tinynodes-library-docs.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-plugins-readme/ngx-editorjs-plugins-changelog.html":{}}}],["readonly",{"_index":112,"title":{},"body":{"components/AppContainerComponent.html":{},"injectables/AppService.html":{},"injectables/AppService-1.html":{},"classes/Changed.html":{},"interfaces/EditorJSMaterialForm.html":{},"components/FormContainerComponent.html":{},"components/HomePageComponent.html":{},"components/NgxEditorJSBaseComponent.html":{},"components/NgxEditorJSComponent.html":{},"directives/NgxEditorJSDirective.html":{},"injectables/NgxEditorJSEffects.html":{},"injectables/NgxEditorJSInstanceService.html":{},"injectables/NgxEditorJSService.html":{},"classes/NotReady.html":{},"components/PageContainerComponent.html":{},"injectables/PagesService.html":{},"classes/Ready.html":{},"classes/SaveEnd.html":{},"classes/SaveStart.html":{}}}],["ready",{"_index":531,"title":{"classes/Ready.html":{}},"body":{"interfaces/BlocksMap.html":{},"interfaces/ChangeMap.html":{},"classes/Changed.html":{},"interfaces/EditorJSChange.html":{},"interfaces/EditorJSInstanceConfig.html":{},"interfaces/EditorMap.html":{},"interfaces/InjectorApiCallOptions.html":{},"interfaces/InjectorApiCallResponse.html":{},"interfaces/InjectorMethodOption.html":{},"components/NgxEditorJSBaseComponent.html":{},"components/NgxEditorJSComponent.html":{},"directives/NgxEditorJSDirective.html":{},"injectables/NgxEditorJSInstanceService.html":{},"injectables/NgxEditorJSService.html":{},"classes/NotReady.html":{},"components/PageContainerComponent.html":{},"classes/Ready.html":{},"interfaces/ReadyMap.html":{},"classes/SaveEnd.html":{},"classes/SaveStart.html":{},"interfaces/SavedMap.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/typealiases.html":{}}}],["readymap",{"_index":532,"title":{"interfaces/ReadyMap.html":{}},"body":{"interfaces/BlocksMap.html":{},"interfaces/ChangeMap.html":{},"interfaces/EditorJSChange.html":{},"interfaces/EditorMap.html":{},"injectables/NgxEditorJSInstanceService.html":{},"interfaces/ReadyMap.html":{},"interfaces/SavedMap.html":{}}}],["reasonably",{"_index":2009,"title":{},"body":{"contributing.html":{}}}],["redirectto",{"_index":310,"title":{},"body":{"modules/AppRoutingModule.html":{},"miscellaneous/variables.html":{}}}],["reduce((finaltools",{"_index":1528,"title":{},"body":{"injectables/NgxEditorJSPluginService.html":{}}}],["ref",{"_index":766,"title":{},"body":{"components/FormContainerComponent.html":{},"components/NgxEditorJSBaseComponent.html":{},"injectables/NgxEditorJSInstanceService.html":{},"components/PageContainerComponent.html":{}}}],["refactored",{"_index":2288,"title":{},"body":{"additional-documentation/tinynodes-library-docs/ngx-editorjs-readme/ngx-editorjs-changelog.html":{}}}],["reflect",{"_index":1865,"title":{},"body":{"changelog.html":{}}}],["regard",{"_index":2075,"title":{},"body":{"contributing.html":{}}}],["regardless",{"_index":1954,"title":{},"body":{"contributing.html":{}}}],["regenerated",{"_index":2312,"title":{},"body":{"additional-documentation/tinynodes-library-docs/ngx-editorjs-readme/ngx-editorjs-changelog.html":{}}}],["registered",{"_index":1515,"title":{},"body":{"injectables/NgxEditorJSPluginService.html":{}}}],["registeronchange",{"_index":997,"title":{},"body":{"components/NgxEditorJSBaseComponent.html":{},"components/NgxEditorJSComponent.html":{}}}],["registeronchange(fn",{"_index":1061,"title":{},"body":{"components/NgxEditorJSBaseComponent.html":{},"components/NgxEditorJSComponent.html":{}}}],["registerontouched",{"_index":998,"title":{},"body":{"components/NgxEditorJSBaseComponent.html":{},"components/NgxEditorJSComponent.html":{}}}],["registerontouched(fn",{"_index":1063,"title":{},"body":{"components/NgxEditorJSBaseComponent.html":{},"components/NgxEditorJSComponent.html":{}}}],["regular",{"_index":882,"title":{},"body":{"components/FormContainerComponent.html":{}}}],["reject",{"_index":2024,"title":{},"body":{"contributing.html":{}}}],["related",{"_index":1207,"title":{},"body":{"components/NgxEditorJSDemoInfoComponent.html":{},"directives/NgxEditorJSDirective.html":{},"changelog.html":{}}}],["relative",{"_index":1144,"title":{},"body":{"components/NgxEditorJSComponent.html":{}}}],["release",{"_index":1861,"title":{},"body":{"changelog.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-readme/ngx-editorjs-changelog.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-plugins-readme/ngx-editorjs-plugins-changelog.html":{}}}],["released",{"_index":905,"title":{},"body":{"components/HomePageComponent.html":{},"changelog.html":{},"additional-documentation/tinynodes-library-docs.html":{}}}],["religion",{"_index":1966,"title":{},"body":{"contributing.html":{}}}],["remaining",{"_index":733,"title":{},"body":{"interfaces/EditorJSMaterialForm.html":{}}}],["remove",{"_index":1498,"title":{},"body":{"injectables/NgxEditorJSPluginService.html":{},"contributing.html":{}}}],["remove(key",{"_index":1511,"title":{},"body":{"injectables/NgxEditorJSPluginService.html":{}}}],["removeblock",{"_index":1702,"title":{},"body":{"injectables/PagesService.html":{}}}],["removeblock(pageid",{"_index":1715,"title":{},"body":{"injectables/PagesService.html":{}}}],["removed",{"_index":1714,"title":{},"body":{"injectables/PagesService.html":{},"changelog.html":{},"contributing.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-readme/ngx-editorjs-changelog.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-plugins-readme/ngx-editorjs-plugins-changelog.html":{}}}],["removes",{"_index":1713,"title":{},"body":{"injectables/PagesService.html":{}}}],["renamed",{"_index":2318,"title":{},"body":{"additional-documentation/tinynodes-library-docs/ngx-editorjs-readme/ngx-editorjs-changelog.html":{}}}],["render",{"_index":48,"title":{},"body":{"components/AppContainerComponent.html":{},"interfaces/ApplicationData.html":{},"interfaces/ApplicationData-1.html":{},"interfaces/MenuGroup.html":{},"interfaces/MenuGroup-1.html":{},"interfaces/MenuItem.html":{},"interfaces/MenuItem-1.html":{},"classes/MockEditorJS.html":{},"classes/MockPlugin.html":{},"components/NgxEditorJSBaseComponent.html":{},"components/NgxEditorJSComponent.html":{},"interfaces/NgxEditorJSConfig.html":{},"directives/NgxEditorJSDirective.html":{},"interfaces/NgxEditorJSModuleConfig.html":{},"injectables/PagesService.html":{},"classes/TestClass.html":{}}}],["rendered",{"_index":2262,"title":{},"body":{"additional-documentation/tinynodes-library-docs.html":{}}}],["renderer2",{"_index":49,"title":{},"body":{"components/AppContainerComponent.html":{}}}],["repercussions",{"_index":2086,"title":{},"body":{"contributing.html":{}}}],["replaced",{"_index":2315,"title":{},"body":{"additional-documentation/tinynodes-library-docs/ngx-editorjs-readme/ngx-editorjs-changelog.html":{}}}],["repo",{"_index":1750,"title":{},"body":{"modules/PluginCodeModule.html":{},"modules/PluginHeaderModule.html":{},"modules/PluginImageModule.html":{},"modules/PluginLinkModule.html":{},"modules/PluginListModule.html":{},"modules/PluginMarkerModule.html":{},"modules/PluginParagraphModule.html":{},"modules/PluginSimpleImageModule.html":{},"todo.html":{}}}],["repo](https://github.com/editor",{"_index":1752,"title":{},"body":{"modules/PluginCodeModule.html":{},"modules/PluginHeaderModule.html":{},"modules/PluginImageModule.html":{},"modules/PluginLinkModule.html":{},"modules/PluginListModule.html":{},"modules/PluginMarkerModule.html":{},"modules/PluginParagraphModule.html":{},"modules/PluginSimpleImageModule.html":{}}}],["report",{"_index":1883,"title":{},"body":{"changelog.html":{}}}],["reported",{"_index":2062,"title":{},"body":{"contributing.html":{}}}],["reporter",{"_index":2076,"title":{},"body":{"contributing.html":{}}}],["repository",{"_index":1908,"title":{},"body":{"contributing.html":{},"index.html":{}}}],["represent",{"_index":1933,"title":{},"body":{"contributing.html":{}}}],["representation",{"_index":441,"title":{},"body":{"interfaces/ApplicationState.html":{},"interfaces/ApplicationState-1.html":{},"interfaces/DemoData.html":{},"interfaces/DemoData-1.html":{},"interfaces/NgxEditorJSDemo.html":{},"interfaces/NgxEditorJSDemo-1.html":{},"interfaces/NgxEditorJSDemoData.html":{},"interfaces/NgxEditorJSDemoData-1.html":{},"interfaces/TinynodeDemos.html":{},"interfaces/TinynodeDemos-1.html":{},"contributing.html":{}}}],["representative",{"_index":2053,"title":{},"body":{"contributing.html":{}}}],["representing",{"_index":2043,"title":{},"body":{"contributing.html":{}}}],["request",{"_index":1348,"title":{},"body":{"injectables/NgxEditorJSInstanceService.html":{},"injectables/NgxEditorJSService.html":{},"contributing.html":{}}}],["requied",{"_index":667,"title":{},"body":{"interfaces/EditorJSMaterialForm.html":{}}}],["required",{"_index":464,"title":{},"body":{"interfaces/BasePlugin.html":{},"interfaces/BasePlugin-1.html":{},"interfaces/EditorJSInstanceConfig.html":{},"interfaces/EditorJSMaterialForm.html":{},"interfaces/InjectorApiCallOptions.html":{},"interfaces/InjectorApiCallResponse.html":{},"interfaces/InjectorMethodOption.html":{},"modules/MaterialModule.html":{},"injectables/NgxEditorJSInstanceService.html":{},"injectables/NgxEditorJSService.html":{},"modules/NgxEditorjsPluginsModule.html":{},"interfaces/PluginConfig.html":{},"interfaces/PluginConfig-1.html":{},"interfaces/ToolSettingsMap.html":{},"interfaces/ToolSettingsMap-1.html":{},"index.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-readme.html":{}}}],["required(required",{"_index":669,"title":{},"body":{"interfaces/EditorJSMaterialForm.html":{}}}],["requires",{"_index":2324,"title":{},"body":{"additional-documentation/tinynodes-library-docs/ngx-editorjs-plugins-readme.html":{}}}],["reset",{"_index":248,"title":{},"body":{"modules/AppModule.html":{},"modules/ApplicationDataModule.html":{},"components/FormContainerComponent.html":{},"modules/NgxEditorJSModule.html":{},"modules/NgxEditorjsDemoModule.html":{},"modules/NgxEditorjsNgrxModule.html":{},"modules/NgxEditorjsPluginsModule.html":{},"modules/NgxTinynodesCoreModule.html":{},"components/PageContainerComponent.html":{},"modules/PageStoreModule.html":{},"modules/PluginCodeModule.html":{},"modules/PluginHeaderModule.html":{},"modules/PluginImageModule.html":{},"modules/PluginLinkModule.html":{},"modules/PluginListModule.html":{},"modules/PluginMarkerModule.html":{},"modules/PluginParagraphModule.html":{},"modules/PluginSimpleImageModule.html":{},"overview.html":{}}}],["resolve",{"_index":1347,"title":{},"body":{"injectables/NgxEditorJSInstanceService.html":{},"injectables/NgxEditorJSService.html":{}}}],["resolved",{"_index":1899,"title":{},"body":{"changelog.html":{}}}],["respectful",{"_index":1976,"title":{},"body":{"contributing.html":{}}}],["response",{"_index":603,"title":{},"body":{"interfaces/EditorJSInstanceConfig.html":{},"interfaces/InjectorApiCallOptions.html":{},"interfaces/InjectorApiCallResponse.html":{},"interfaces/InjectorMethodOption.html":{},"injectables/NgxEditorJSInstanceService.html":{},"injectables/NgxEditorJSService.html":{},"contributing.html":{}}}],["responsibilities",{"_index":2014,"title":{},"body":{"contributing.html":{}}}],["responsibility",{"_index":2022,"title":{},"body":{"contributing.html":{}}}],["responsible",{"_index":2015,"title":{},"body":{"contributing.html":{}}}],["restriction",{"_index":2170,"title":{},"body":{"license.html":{}}}],["result",{"_index":226,"title":{},"body":{"components/AppContainerComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"injectables/AppService.html":{},"injectables/AppService-1.html":{},"interfaces/ApplicationData.html":{},"interfaces/ApplicationData-1.html":{},"modules/ApplicationDataModule.html":{},"injectables/ApplicationQuery.html":{},"injectables/ApplicationQuery-1.html":{},"interfaces/ApplicationState.html":{},"interfaces/ApplicationState-1.html":{},"injectables/ApplicationStore.html":{},"injectables/ApplicationStore-1.html":{},"interfaces/BasePlugin.html":{},"interfaces/BasePlugin-1.html":{},"interfaces/Block.html":{},"interfaces/BlocksMap.html":{},"interfaces/ChangeMap.html":{},"classes/Changed.html":{},"interfaces/CreateEditorJSOptions.html":{},"interfaces/DemoData.html":{},"interfaces/DemoData-1.html":{},"interfaces/EditorJSChange.html":{},"interfaces/EditorJSInstanceConfig.html":{},"interfaces/EditorJSMaterialForm.html":{},"interfaces/EditorMap.html":{},"components/FormContainerComponent.html":{},"interfaces/Header.html":{},"interfaces/HeaderBlock.html":{},"components/HomePageComponent.html":{},"interfaces/Image.html":{},"interfaces/ImageBlock.html":{},"interfaces/InjectorApiCallOptions.html":{},"interfaces/InjectorApiCallResponse.html":{},"interfaces/InjectorMethodOption.html":{},"interfaces/List.html":{},"interfaces/ListBlock.html":{},"modules/MaterialModule.html":{},"interfaces/MenuGroup.html":{},"interfaces/MenuGroup-1.html":{},"interfaces/MenuItem.html":{},"interfaces/MenuItem-1.html":{},"classes/MockEditorJS.html":{},"injectables/MockNgZone.html":{},"classes/MockPlugin.html":{},"components/NavBarComponent.html":{},"components/NgxEditorJSBaseComponent.html":{},"components/NgxEditorJSComponent.html":{},"interfaces/NgxEditorJSConfig.html":{},"interfaces/NgxEditorJSDemo.html":{},"interfaces/NgxEditorJSDemo-1.html":{},"interfaces/NgxEditorJSDemoData.html":{},"interfaces/NgxEditorJSDemoData-1.html":{},"components/NgxEditorJSDemoHomeComponent.html":{},"components/NgxEditorJSDemoInfoComponent.html":{},"directives/NgxEditorJSDirective.html":{},"injectables/NgxEditorJSEffects.html":{},"injectables/NgxEditorJSInstanceService.html":{},"modules/NgxEditorJSModule.html":{},"interfaces/NgxEditorJSModuleConfig.html":{},"injectables/NgxEditorJSPluginService.html":{},"injectables/NgxEditorJSService.html":{},"modules/NgxEditorjsDemoModule.html":{},"modules/NgxEditorjsNgrxModule.html":{},"modules/NgxEditorjsPluginsModule.html":{},"modules/NgxHideableHeaderDemoModule.html":{},"modules/NgxTinynodesCoreMaterialModule.html":{},"modules/NgxTinynodesCoreModule.html":{},"classes/NotReady.html":{},"interfaces/Page.html":{},"interfaces/PageBlock.html":{},"components/PageContainerComponent.html":{},"modules/PageStoreModule.html":{},"injectables/PagesQuery.html":{},"injectables/PagesService.html":{},"interfaces/PagesState.html":{},"injectables/PagesStore.html":{},"interfaces/Paragraph.html":{},"interfaces/ParagraphBlock.html":{},"injectables/PluginCode.html":{},"modules/PluginCodeModule.html":{},"interfaces/PluginConfig.html":{},"interfaces/PluginConfig-1.html":{},"injectables/PluginHeader.html":{},"modules/PluginHeaderModule.html":{},"injectables/PluginImage.html":{},"modules/PluginImageModule.html":{},"injectables/PluginLink.html":{},"modules/PluginLinkModule.html":{},"injectables/PluginList.html":{},"modules/PluginListModule.html":{},"injectables/PluginMarker.html":{},"modules/PluginMarkerModule.html":{},"injectables/PluginParagraph.html":{},"modules/PluginParagraphModule.html":{},"injectables/PluginSimpleImage.html":{},"modules/PluginSimpleImageModule.html":{},"classes/Ready.html":{},"interfaces/ReadyMap.html":{},"classes/SaveEnd.html":{},"classes/SaveStart.html":{},"interfaces/SavedMap.html":{},"components/SidebarComponent.html":{},"interfaces/Tag.html":{},"classes/TestClass.html":{},"interfaces/TinynodeDemos.html":{},"interfaces/TinynodeDemos-1.html":{},"interfaces/ToolSettingsMap.html":{},"interfaces/ToolSettingsMap-1.html":{},"changelog.html":{},"contributing.html":{},"dependencies.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"index.html":{},"license.html":{},"modules.html":{},"overview.html":{},"todo.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{},"additional-documentation/tinynodes-library-docs.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-readme.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-readme/ngx-editorjs-changelog.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-plugins-readme.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-plugins-readme/ngx-editorjs-plugins-changelog.html":{}}}],["result.then",{"_index":1418,"title":{},"body":{"injectables/NgxEditorJSInstanceService.html":{}}}],["result.then(result",{"_index":1419,"title":{},"body":{"injectables/NgxEditorJSInstanceService.html":{}}}],["results",{"_index":228,"title":{},"body":{"components/AppContainerComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"injectables/AppService.html":{},"injectables/AppService-1.html":{},"interfaces/ApplicationData.html":{},"interfaces/ApplicationData-1.html":{},"modules/ApplicationDataModule.html":{},"injectables/ApplicationQuery.html":{},"injectables/ApplicationQuery-1.html":{},"interfaces/ApplicationState.html":{},"interfaces/ApplicationState-1.html":{},"injectables/ApplicationStore.html":{},"injectables/ApplicationStore-1.html":{},"interfaces/BasePlugin.html":{},"interfaces/BasePlugin-1.html":{},"interfaces/Block.html":{},"interfaces/BlocksMap.html":{},"interfaces/ChangeMap.html":{},"classes/Changed.html":{},"interfaces/CreateEditorJSOptions.html":{},"interfaces/DemoData.html":{},"interfaces/DemoData-1.html":{},"interfaces/EditorJSChange.html":{},"interfaces/EditorJSInstanceConfig.html":{},"interfaces/EditorJSMaterialForm.html":{},"interfaces/EditorMap.html":{},"components/FormContainerComponent.html":{},"interfaces/Header.html":{},"interfaces/HeaderBlock.html":{},"components/HomePageComponent.html":{},"interfaces/Image.html":{},"interfaces/ImageBlock.html":{},"interfaces/InjectorApiCallOptions.html":{},"interfaces/InjectorApiCallResponse.html":{},"interfaces/InjectorMethodOption.html":{},"interfaces/List.html":{},"interfaces/ListBlock.html":{},"modules/MaterialModule.html":{},"interfaces/MenuGroup.html":{},"interfaces/MenuGroup-1.html":{},"interfaces/MenuItem.html":{},"interfaces/MenuItem-1.html":{},"classes/MockEditorJS.html":{},"injectables/MockNgZone.html":{},"classes/MockPlugin.html":{},"components/NavBarComponent.html":{},"components/NgxEditorJSBaseComponent.html":{},"components/NgxEditorJSComponent.html":{},"interfaces/NgxEditorJSConfig.html":{},"interfaces/NgxEditorJSDemo.html":{},"interfaces/NgxEditorJSDemo-1.html":{},"interfaces/NgxEditorJSDemoData.html":{},"interfaces/NgxEditorJSDemoData-1.html":{},"components/NgxEditorJSDemoHomeComponent.html":{},"components/NgxEditorJSDemoInfoComponent.html":{},"directives/NgxEditorJSDirective.html":{},"injectables/NgxEditorJSEffects.html":{},"injectables/NgxEditorJSInstanceService.html":{},"modules/NgxEditorJSModule.html":{},"interfaces/NgxEditorJSModuleConfig.html":{},"injectables/NgxEditorJSPluginService.html":{},"injectables/NgxEditorJSService.html":{},"modules/NgxEditorjsDemoModule.html":{},"modules/NgxEditorjsNgrxModule.html":{},"modules/NgxEditorjsPluginsModule.html":{},"modules/NgxHideableHeaderDemoModule.html":{},"modules/NgxTinynodesCoreMaterialModule.html":{},"modules/NgxTinynodesCoreModule.html":{},"classes/NotReady.html":{},"interfaces/Page.html":{},"interfaces/PageBlock.html":{},"components/PageContainerComponent.html":{},"modules/PageStoreModule.html":{},"injectables/PagesQuery.html":{},"injectables/PagesService.html":{},"interfaces/PagesState.html":{},"injectables/PagesStore.html":{},"interfaces/Paragraph.html":{},"interfaces/ParagraphBlock.html":{},"injectables/PluginCode.html":{},"modules/PluginCodeModule.html":{},"interfaces/PluginConfig.html":{},"interfaces/PluginConfig-1.html":{},"injectables/PluginHeader.html":{},"modules/PluginHeaderModule.html":{},"injectables/PluginImage.html":{},"modules/PluginImageModule.html":{},"injectables/PluginLink.html":{},"modules/PluginLinkModule.html":{},"injectables/PluginList.html":{},"modules/PluginListModule.html":{},"injectables/PluginMarker.html":{},"modules/PluginMarkerModule.html":{},"injectables/PluginParagraph.html":{},"modules/PluginParagraphModule.html":{},"injectables/PluginSimpleImage.html":{},"modules/PluginSimpleImageModule.html":{},"classes/Ready.html":{},"interfaces/ReadyMap.html":{},"classes/SaveEnd.html":{},"classes/SaveStart.html":{},"interfaces/SavedMap.html":{},"components/SidebarComponent.html":{},"interfaces/Tag.html":{},"classes/TestClass.html":{},"interfaces/TinynodeDemos.html":{},"interfaces/TinynodeDemos-1.html":{},"interfaces/ToolSettingsMap.html":{},"interfaces/ToolSettingsMap-1.html":{},"changelog.html":{},"contributing.html":{},"dependencies.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"index.html":{},"license.html":{},"modules.html":{},"overview.html":{},"todo.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{},"additional-documentation/tinynodes-library-docs.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-readme.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-readme/ngx-editorjs-changelog.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-plugins-readme.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-plugins-readme/ngx-editorjs-plugins-changelog.html":{}}}],["return",{"_index":130,"title":{},"body":{"components/AppContainerComponent.html":{},"injectables/AppService.html":{},"injectables/AppService-1.html":{},"interfaces/BasePlugin.html":{},"interfaces/BasePlugin-1.html":{},"interfaces/EditorJSMaterialForm.html":{},"components/FormContainerComponent.html":{},"components/HomePageComponent.html":{},"classes/MockEditorJS.html":{},"injectables/MockNgZone.html":{},"classes/MockPlugin.html":{},"components/NgxEditorJSBaseComponent.html":{},"components/NgxEditorJSComponent.html":{},"components/NgxEditorJSDemoInfoComponent.html":{},"directives/NgxEditorJSDirective.html":{},"injectables/NgxEditorJSEffects.html":{},"injectables/NgxEditorJSInstanceService.html":{},"modules/NgxEditorJSModule.html":{},"injectables/NgxEditorJSPluginService.html":{},"injectables/NgxEditorJSService.html":{},"components/PageContainerComponent.html":{},"injectables/PagesService.html":{},"injectables/PluginCode.html":{},"interfaces/PluginConfig.html":{},"interfaces/PluginConfig-1.html":{},"injectables/PluginHeader.html":{},"injectables/PluginImage.html":{},"injectables/PluginLink.html":{},"injectables/PluginList.html":{},"injectables/PluginMarker.html":{},"injectables/PluginParagraph.html":{},"injectables/PluginSimpleImage.html":{},"classes/TestClass.html":{},"interfaces/ToolSettingsMap.html":{},"interfaces/ToolSettingsMap-1.html":{},"miscellaneous/functions.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-readme.html":{}}}],["returned",{"_index":470,"title":{},"body":{"interfaces/BasePlugin.html":{},"interfaces/BasePlugin-1.html":{},"interfaces/PluginConfig.html":{},"interfaces/PluginConfig-1.html":{},"interfaces/ToolSettingsMap.html":{},"interfaces/ToolSettingsMap-1.html":{}}}],["returns",{"_index":67,"title":{},"body":{"components/AppContainerComponent.html":{},"injectables/AppService.html":{},"injectables/AppService-1.html":{},"components/FormContainerComponent.html":{},"injectables/MockNgZone.html":{},"classes/MockPlugin.html":{},"components/NgxEditorJSBaseComponent.html":{},"components/NgxEditorJSComponent.html":{},"components/NgxEditorJSDemoInfoComponent.html":{},"directives/NgxEditorJSDirective.html":{},"injectables/NgxEditorJSInstanceService.html":{},"modules/NgxEditorJSModule.html":{},"injectables/NgxEditorJSPluginService.html":{},"injectables/NgxEditorJSService.html":{},"components/PageContainerComponent.html":{},"injectables/PagesService.html":{},"injectables/PluginCode.html":{},"injectables/PluginHeader.html":{},"injectables/PluginImage.html":{},"injectables/PluginLink.html":{},"injectables/PluginList.html":{},"injectables/PluginMarker.html":{},"injectables/PluginParagraph.html":{},"injectables/PluginSimpleImage.html":{},"classes/TestClass.html":{},"miscellaneous/functions.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-readme.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-readme/ngx-editorjs-changelog.html":{}}}],["reviewed",{"_index":2067,"title":{},"body":{"contributing.html":{}}}],["reviewer",{"_index":1941,"title":{},"body":{"contributing.html":{}}}],["right",{"_index":179,"title":{},"body":{"components/AppContainerComponent.html":{},"components/NavBarComponent.html":{},"contributing.html":{}}}],["rights",{"_index":2173,"title":{},"body":{"license.html":{}}}],["robust",{"_index":2299,"title":{},"body":{"additional-documentation/tinynodes-library-docs/ngx-editorjs-readme/ngx-editorjs-changelog.html":{}}}],["rogue",{"_index":2293,"title":{},"body":{"additional-documentation/tinynodes-library-docs/ngx-editorjs-readme/ngx-editorjs-changelog.html":{}}}],["root",{"_index":16,"title":{},"body":{"components/AppContainerComponent.html":{},"injectables/NgxEditorJSInstanceService.html":{},"modules/NgxEditorJSModule.html":{},"injectables/NgxEditorJSPluginService.html":{},"injectables/NgxEditorJSService.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-readme/ngx-editorjs-changelog.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-plugins-readme.html":{}}}],["root'},{'name",{"_index":195,"title":{},"body":{"components/AppContainerComponent.html":{},"components/FormContainerComponent.html":{},"components/HomePageComponent.html":{},"components/NavBarComponent.html":{},"components/NgxEditorJSBaseComponent.html":{},"components/NgxEditorJSComponent.html":{},"components/NgxEditorJSDemoHomeComponent.html":{},"components/NgxEditorJSDemoInfoComponent.html":{},"components/PageContainerComponent.html":{},"components/SidebarComponent.html":{}}}],["roots",{"_index":302,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["routable",{"_index":745,"title":{},"body":{"components/FormContainerComponent.html":{},"components/PageContainerComponent.html":{}}}],["route",{"_index":303,"title":{},"body":{"modules/AppRoutingModule.html":{},"modules/NgxHideableHeaderDemoModule.html":{},"miscellaneous/variables.html":{}}}],["router",{"_index":270,"title":{},"body":{"modules/AppModule.html":{},"dependencies.html":{}}}],["routerlink",{"_index":403,"title":{},"body":{"interfaces/ApplicationData.html":{},"interfaces/ApplicationData-1.html":{},"interfaces/MenuGroup.html":{},"interfaces/MenuGroup-1.html":{},"interfaces/MenuItem.html":{},"interfaces/MenuItem-1.html":{}}}],["routermodule",{"_index":304,"title":{},"body":{"modules/AppRoutingModule.html":{},"modules/NgxEditorjsDemoModule.html":{},"modules/NgxHideableHeaderDemoModule.html":{}}}],["routermodule.forchild(ngxeditorjsdemoroutes",{"_index":1600,"title":{},"body":{"modules/NgxEditorjsDemoModule.html":{}}}],["routermodule.forroot(approutes",{"_index":313,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["routes",{"_index":306,"title":{},"body":{"modules/AppRoutingModule.html":{},"miscellaneous/variables.html":{}}}],["routing",{"_index":300,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["routing.module",{"_index":278,"title":{},"body":{"modules/AppModule.html":{}}}],["routing.module.ts",{"_index":299,"title":{},"body":{"modules/AppRoutingModule.html":{},"miscellaneous/variables.html":{}}}],["row",{"_index":1145,"title":{},"body":{"components/NgxEditorJSComponent.html":{}}}],["run",{"_index":953,"title":{},"body":{"injectables/MockNgZone.html":{},"injectables/NgxEditorJSInstanceService.html":{},"index.html":{}}}],["run(fn",{"_index":957,"title":{},"body":{"injectables/MockNgZone.html":{}}}],["runoutsideangular",{"_index":954,"title":{},"body":{"injectables/MockNgZone.html":{}}}],["runoutsideangular(fn",{"_index":960,"title":{},"body":{"injectables/MockNgZone.html":{}}}],["rxjs",{"_index":104,"title":{},"body":{"components/AppContainerComponent.html":{},"injectables/AppService.html":{},"injectables/AppService-1.html":{},"interfaces/BlocksMap.html":{},"interfaces/ChangeMap.html":{},"interfaces/EditorJSChange.html":{},"interfaces/EditorJSMaterialForm.html":{},"interfaces/EditorMap.html":{},"components/FormContainerComponent.html":{},"components/NgxEditorJSBaseComponent.html":{},"components/NgxEditorJSDemoInfoComponent.html":{},"directives/NgxEditorJSDirective.html":{},"injectables/NgxEditorJSEffects.html":{},"injectables/NgxEditorJSInstanceService.html":{},"injectables/NgxEditorJSService.html":{},"components/PageContainerComponent.html":{},"injectables/PagesService.html":{},"interfaces/ReadyMap.html":{},"interfaces/SavedMap.html":{},"dependencies.html":{}}}],["rxjs/operators",{"_index":107,"title":{},"body":{"components/AppContainerComponent.html":{},"injectables/AppService.html":{},"injectables/AppService-1.html":{},"interfaces/EditorJSMaterialForm.html":{},"components/FormContainerComponent.html":{},"components/NgxEditorJSBaseComponent.html":{},"components/NgxEditorJSComponent.html":{},"directives/NgxEditorJSDirective.html":{},"injectables/NgxEditorJSEffects.html":{},"injectables/NgxEditorJSInstanceService.html":{},"injectables/NgxEditorJSService.html":{},"components/PageContainerComponent.html":{}}}],["sanitizer",{"_index":1005,"title":{},"body":{"components/NgxEditorJSBaseComponent.html":{},"components/NgxEditorJSComponent.html":{},"interfaces/NgxEditorJSConfig.html":{},"directives/NgxEditorJSDirective.html":{},"interfaces/NgxEditorJSModuleConfig.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-readme.html":{}}}],["sanitizerconfig",{"_index":1035,"title":{},"body":{"components/NgxEditorJSBaseComponent.html":{},"components/NgxEditorJSComponent.html":{},"interfaces/NgxEditorJSConfig.html":{},"directives/NgxEditorJSDirective.html":{},"interfaces/NgxEditorJSModuleConfig.html":{}}}],["save",{"_index":533,"title":{},"body":{"interfaces/BlocksMap.html":{},"interfaces/ChangeMap.html":{},"classes/Changed.html":{},"interfaces/EditorJSChange.html":{},"interfaces/EditorMap.html":{},"components/FormContainerComponent.html":{},"classes/MockEditorJS.html":{},"classes/MockPlugin.html":{},"components/NgxEditorJSBaseComponent.html":{},"components/NgxEditorJSComponent.html":{},"directives/NgxEditorJSDirective.html":{},"injectables/NgxEditorJSEffects.html":{},"injectables/NgxEditorJSInstanceService.html":{},"injectables/NgxEditorJSService.html":{},"classes/NotReady.html":{},"components/PageContainerComponent.html":{},"injectables/PagesService.html":{},"classes/Ready.html":{},"interfaces/ReadyMap.html":{},"classes/SaveEnd.html":{},"classes/SaveStart.html":{},"interfaces/SavedMap.html":{},"classes/TestClass.html":{},"miscellaneous/enumerations.html":{},"todo.html":{}}}],["save(options",{"_index":1374,"title":{},"body":{"injectables/NgxEditorJSInstanceService.html":{},"injectables/NgxEditorJSService.html":{}}}],["saved",{"_index":1040,"title":{},"body":{"components/NgxEditorJSBaseComponent.html":{},"components/NgxEditorJSComponent.html":{},"directives/NgxEditorJSDirective.html":{},"injectables/NgxEditorJSInstanceService.html":{},"components/PageContainerComponent.html":{}}}],["savedmap",{"_index":534,"title":{"interfaces/SavedMap.html":{}},"body":{"interfaces/BlocksMap.html":{},"interfaces/ChangeMap.html":{},"interfaces/EditorJSChange.html":{},"interfaces/EditorMap.html":{},"injectables/NgxEditorJSInstanceService.html":{},"interfaces/ReadyMap.html":{},"interfaces/SavedMap.html":{}}}],["saveend",{"_index":557,"title":{"classes/SaveEnd.html":{}},"body":{"classes/Changed.html":{},"injectables/NgxEditorJSEffects.html":{},"classes/NotReady.html":{},"classes/Ready.html":{},"classes/SaveEnd.html":{},"classes/SaveStart.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/typealiases.html":{}}}],["saver",{"_index":922,"title":{},"body":{"classes/MockEditorJS.html":{},"classes/MockPlugin.html":{},"classes/TestClass.html":{}}}],["saves",{"_index":1367,"title":{},"body":{"injectables/NgxEditorJSInstanceService.html":{}}}],["savestart",{"_index":555,"title":{"classes/SaveStart.html":{}},"body":{"classes/Changed.html":{},"injectables/NgxEditorJSEffects.html":{},"classes/NotReady.html":{},"classes/Ready.html":{},"classes/SaveEnd.html":{},"classes/SaveStart.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/typealiases.html":{}}}],["saving",{"_index":878,"title":{},"body":{"components/FormContainerComponent.html":{},"components/PageContainerComponent.html":{}}}],["scheme",{"_index":1935,"title":{},"body":{"contributing.html":{}}}],["scope",{"_index":2039,"title":{},"body":{"contributing.html":{}}}],["scripts",{"_index":1896,"title":{},"body":{"changelog.html":{}}}],["scroll",{"_index":889,"title":{},"body":{"components/FormContainerComponent.html":{},"components/NgxEditorJSDemoInfoComponent.html":{},"components/PageContainerComponent.html":{}}}],["searchable",{"_index":2138,"title":{},"body":{"index.html":{}}}],["second",{"_index":1344,"title":{},"body":{"injectables/NgxEditorJSInstanceService.html":{},"injectables/NgxEditorJSService.html":{},"contributing.html":{}}}],["seconds",{"_index":848,"title":{},"body":{"components/FormContainerComponent.html":{}}}],["section",{"_index":1175,"title":{},"body":{"components/NgxEditorJSDemoHomeComponent.html":{}}}],["see",{"_index":840,"title":{},"body":{"components/FormContainerComponent.html":{},"injectables/NgxEditorJSInstanceService.html":{},"injectables/NgxEditorJSService.html":{},"components/PageContainerComponent.html":{},"modules/PluginCodeModule.html":{},"modules/PluginHeaderModule.html":{},"modules/PluginImageModule.html":{},"modules/PluginLinkModule.html":{},"modules/PluginListModule.html":{},"modules/PluginMarkerModule.html":{},"modules/PluginParagraphModule.html":{},"modules/PluginSimpleImageModule.html":{},"changelog.html":{},"index.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-readme.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-plugins-readme/ngx-editorjs-plugins-changelog.html":{}}}],["selection",{"_index":2230,"title":{},"body":{"todo.html":{}}}],["selector",{"_index":22,"title":{},"body":{"components/AppContainerComponent.html":{},"interfaces/EditorJSMaterialForm.html":{},"components/FormContainerComponent.html":{},"components/HomePageComponent.html":{},"components/NavBarComponent.html":{},"components/NgxEditorJSBaseComponent.html":{},"components/NgxEditorJSComponent.html":{},"components/NgxEditorJSDemoHomeComponent.html":{},"components/NgxEditorJSDemoInfoComponent.html":{},"directives/NgxEditorJSDirective.html":{},"components/PageContainerComponent.html":{},"components/SidebarComponent.html":{}}}],["self",{"_index":619,"title":{},"body":{"interfaces/EditorJSMaterialForm.html":{}}}],["sell",{"_index":2179,"title":{},"body":{"license.html":{}}}],["semantic",{"_index":2282,"title":{},"body":{"additional-documentation/tinynodes-library-docs/ngx-editorjs-readme/ngx-editorjs-changelog.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-plugins-readme/ngx-editorjs-plugins-changelog.html":{}}}],["semver",{"_index":1936,"title":{},"body":{"contributing.html":{}}}],["separately",{"_index":2080,"title":{},"body":{"contributing.html":{}}}],["service",{"_index":318,"title":{},"body":{"injectables/AppService.html":{},"injectables/AppService-1.html":{},"interfaces/EditorJSMaterialForm.html":{},"components/FormContainerComponent.html":{},"components/NgxEditorJSBaseComponent.html":{},"components/NgxEditorJSComponent.html":{},"directives/NgxEditorJSDirective.html":{},"injectables/NgxEditorJSInstanceService.html":{},"injectables/NgxEditorJSPluginService.html":{},"injectables/NgxEditorJSService.html":{},"components/PageContainerComponent.html":{},"injectables/PagesService.html":{},"changelog.html":{},"index.html":{},"todo.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-readme.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-readme/ngx-editorjs-changelog.html":{}}}],["service.ts",{"_index":569,"title":{},"body":{"interfaces/CreateEditorJSOptions.html":{}}}],["services",{"_index":1215,"title":{},"body":{"directives/NgxEditorJSDirective.html":{},"index.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-readme.html":{}}}],["services/editorjs",{"_index":1484,"title":{},"body":{"modules/NgxEditorJSModule.html":{}}}],["services/editorjs.service",{"_index":625,"title":{},"body":{"interfaces/EditorJSMaterialForm.html":{},"components/NgxEditorJSBaseComponent.html":{},"components/NgxEditorJSComponent.html":{},"directives/NgxEditorJSDirective.html":{},"modules/NgxEditorJSModule.html":{}}}],["services/plugins.service",{"_index":1485,"title":{},"body":{"modules/NgxEditorJSModule.html":{}}}],["set",{"_index":355,"title":{},"body":{"injectables/AppService.html":{},"injectables/AppService-1.html":{},"interfaces/ApplicationData.html":{},"interfaces/ApplicationData-1.html":{},"interfaces/ApplicationState.html":{},"interfaces/ApplicationState-1.html":{},"interfaces/CreateEditorJSOptions.html":{},"interfaces/DemoData.html":{},"interfaces/DemoData-1.html":{},"interfaces/EditorJSMaterialForm.html":{},"components/FormContainerComponent.html":{},"interfaces/MenuGroup.html":{},"interfaces/MenuGroup-1.html":{},"interfaces/MenuItem.html":{},"interfaces/MenuItem-1.html":{},"components/NavBarComponent.html":{},"components/NgxEditorJSBaseComponent.html":{},"components/NgxEditorJSComponent.html":{},"interfaces/NgxEditorJSConfig.html":{},"interfaces/NgxEditorJSDemo.html":{},"interfaces/NgxEditorJSDemo-1.html":{},"interfaces/NgxEditorJSDemoData.html":{},"interfaces/NgxEditorJSDemoData-1.html":{},"directives/NgxEditorJSDirective.html":{},"injectables/NgxEditorJSInstanceService.html":{},"interfaces/NgxEditorJSModuleConfig.html":{},"injectables/NgxEditorJSService.html":{},"modules/NgxEditorjsNgrxModule.html":{},"interfaces/TinynodeDemos.html":{},"interfaces/TinynodeDemos-1.html":{},"index.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-readme.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-readme/ngx-editorjs-changelog.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-plugins-readme.html":{}}}],["setblocks",{"_index":1703,"title":{},"body":{"injectables/PagesService.html":{}}}],["setblocks(pageid",{"_index":1717,"title":{},"body":{"injectables/PagesService.html":{}}}],["setdescribedbyids(ids",{"_index":694,"title":{},"body":{"interfaces/EditorJSMaterialForm.html":{}}}],["sets",{"_index":332,"title":{},"body":{"injectables/AppService.html":{},"injectables/AppService-1.html":{},"components/FormContainerComponent.html":{},"components/NgxEditorJSBaseComponent.html":{},"components/NgxEditorJSComponent.html":{},"components/NgxEditorJSDemoInfoComponent.html":{},"directives/NgxEditorJSDirective.html":{},"injectables/NgxEditorJSInstanceService.html":{},"modules/NgxEditorJSModule.html":{},"injectables/NgxEditorJSService.html":{},"components/PageContainerComponent.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-readme.html":{}}}],["setting",{"_index":2013,"title":{},"body":{"contributing.html":{},"todo.html":{}}}],["settings",{"_index":469,"title":{},"body":{"interfaces/BasePlugin.html":{},"interfaces/BasePlugin-1.html":{},"injectables/PluginCode.html":{},"interfaces/PluginConfig.html":{},"interfaces/PluginConfig-1.html":{},"injectables/PluginHeader.html":{},"injectables/PluginImage.html":{},"injectables/PluginLink.html":{},"injectables/PluginList.html":{},"injectables/PluginMarker.html":{},"injectables/PluginParagraph.html":{},"injectables/PluginSimpleImage.html":{},"interfaces/ToolSettingsMap.html":{},"interfaces/ToolSettingsMap-1.html":{}}}],["setupsubjects",{"_index":1442,"title":{},"body":{"injectables/NgxEditorJSInstanceService.html":{}}}],["several",{"_index":1622,"title":{},"body":{"modules/NgxEditorjsPluginsModule.html":{},"changelog.html":{}}}],["sexual",{"_index":1967,"title":{},"body":{"contributing.html":{}}}],["sexualized",{"_index":1992,"title":{},"body":{"contributing.html":{}}}],["shall",{"_index":2188,"title":{},"body":{"license.html":{}}}],["shared",{"_index":1649,"title":{},"body":{"modules/NgxTinynodesCoreModule.html":{}}}],["shortcut",{"_index":467,"title":{},"body":{"interfaces/BasePlugin.html":{},"interfaces/BasePlugin-1.html":{},"classes/MockEditorJS.html":{},"classes/MockPlugin.html":{},"components/NgxEditorJSComponent.html":{},"injectables/NgxEditorJSPluginService.html":{},"interfaces/PluginConfig.html":{},"interfaces/PluginConfig-1.html":{},"injectables/PluginMarker.html":{},"classes/TestClass.html":{},"interfaces/ToolSettingsMap.html":{},"interfaces/ToolSettingsMap-1.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-readme/ngx-editorjs-changelog.html":{}}}],["shouldlabelfloat",{"_index":689,"title":{},"body":{"interfaces/EditorJSMaterialForm.html":{}}}],["show",{"_index":1024,"title":{},"body":{"components/NgxEditorJSBaseComponent.html":{},"components/NgxEditorJSComponent.html":{},"directives/NgxEditorJSDirective.html":{}}}],["showing",{"_index":1986,"title":{},"body":{"contributing.html":{}}}],["shown",{"_index":1156,"title":{},"body":{"interfaces/NgxEditorJSConfig.html":{},"interfaces/NgxEditorJSModuleConfig.html":{}}}],["shows",{"_index":1178,"title":{},"body":{"components/NgxEditorJSDemoHomeComponent.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-readme.html":{}}}],["side",{"_index":354,"title":{},"body":{"injectables/AppService.html":{},"injectables/AppService-1.html":{},"interfaces/ApplicationState.html":{},"interfaces/ApplicationState-1.html":{},"interfaces/DemoData.html":{},"interfaces/DemoData-1.html":{},"components/NgxEditorJSBaseComponent.html":{},"components/NgxEditorJSComponent.html":{},"interfaces/NgxEditorJSDemo.html":{},"interfaces/NgxEditorJSDemo-1.html":{},"interfaces/NgxEditorJSDemoData.html":{},"interfaces/NgxEditorJSDemoData-1.html":{},"interfaces/TinynodeDemos.html":{},"interfaces/TinynodeDemos-1.html":{}}}],["sidebar",{"_index":75,"title":{},"body":{"components/AppContainerComponent.html":{},"injectables/AppService.html":{},"injectables/AppService-1.html":{},"interfaces/ApplicationData.html":{},"interfaces/ApplicationData-1.html":{},"components/FormContainerComponent.html":{},"components/HomePageComponent.html":{},"interfaces/MenuGroup.html":{},"interfaces/MenuGroup-1.html":{},"interfaces/MenuItem.html":{},"interfaces/MenuItem-1.html":{},"components/NavBarComponent.html":{},"components/NgxEditorJSBaseComponent.html":{},"components/NgxEditorJSComponent.html":{},"components/NgxEditorJSDemoHomeComponent.html":{},"components/NgxEditorJSDemoInfoComponent.html":{},"components/PageContainerComponent.html":{},"components/SidebarComponent.html":{}}}],["sidebar.component.html",{"_index":1833,"title":{},"body":{"components/SidebarComponent.html":{}}}],["sidebar.component.scss",{"_index":1832,"title":{},"body":{"components/SidebarComponent.html":{}}}],["sidebarcomponent",{"_index":221,"title":{"components/SidebarComponent.html":{}},"body":{"components/AppContainerComponent.html":{},"modules/AppModule.html":{},"components/FormContainerComponent.html":{},"components/HomePageComponent.html":{},"components/NavBarComponent.html":{},"components/NgxEditorJSBaseComponent.html":{},"components/NgxEditorJSComponent.html":{},"components/NgxEditorJSDemoHomeComponent.html":{},"components/NgxEditorJSDemoInfoComponent.html":{},"components/PageContainerComponent.html":{},"components/SidebarComponent.html":{},"overview.html":{}}}],["sidebarhidden",{"_index":39,"title":{},"body":{"components/AppContainerComponent.html":{}}}],["sidenav",{"_index":30,"title":{},"body":{"components/AppContainerComponent.html":{}}}],["sign",{"_index":1938,"title":{},"body":{"contributing.html":{}}}],["simple",{"_index":1816,"title":{},"body":{"injectables/PluginSimpleImage.html":{},"modules/PluginSimpleImageModule.html":{}}}],["simplechanges",{"_index":1246,"title":{},"body":{"directives/NgxEditorJSDirective.html":{}}}],["simpleimage",{"_index":875,"title":{},"body":{"components/FormContainerComponent.html":{},"components/PageContainerComponent.html":{},"injectables/PluginSimpleImage.html":{}}}],["simulatezoneexit",{"_index":955,"title":{},"body":{"injectables/MockNgZone.html":{}}}],["single",{"_index":252,"title":{},"body":{"modules/AppModule.html":{},"interfaces/EditorJSMaterialForm.html":{},"components/FormContainerComponent.html":{},"injectables/NgxEditorJSPluginService.html":{},"components/PageContainerComponent.html":{}}}],["singleton",{"_index":1496,"title":{},"body":{"injectables/NgxEditorJSPluginService.html":{}}}],["site",{"_index":426,"title":{},"body":{"modules/ApplicationDataModule.html":{},"components/HomePageComponent.html":{},"modules/NgxTinynodesCoreModule.html":{},"changelog.html":{},"index.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-readme/ngx-editorjs-changelog.html":{}}}],["sites",{"_index":910,"title":{},"body":{"components/HomePageComponent.html":{}}}],["size",{"_index":1956,"title":{},"body":{"contributing.html":{}}}],["skipself",{"_index":1474,"title":{},"body":{"modules/NgxEditorJSModule.html":{}}}],["small",{"_index":1903,"title":{},"body":{"changelog.html":{}}}],["social",{"_index":2048,"title":{},"body":{"contributing.html":{}}}],["software",{"_index":2167,"title":{},"body":{"license.html":{}}}],["solid",{"_index":1147,"title":{},"body":{"components/NgxEditorJSComponent.html":{}}}],["source",{"_index":4,"title":{},"body":{"components/AppContainerComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"injectables/AppService.html":{},"injectables/AppService-1.html":{},"interfaces/ApplicationData.html":{},"interfaces/ApplicationData-1.html":{},"modules/ApplicationDataModule.html":{},"injectables/ApplicationQuery.html":{},"injectables/ApplicationQuery-1.html":{},"interfaces/ApplicationState.html":{},"interfaces/ApplicationState-1.html":{},"injectables/ApplicationStore.html":{},"injectables/ApplicationStore-1.html":{},"interfaces/BasePlugin.html":{},"interfaces/BasePlugin-1.html":{},"interfaces/Block.html":{},"interfaces/BlocksMap.html":{},"interfaces/ChangeMap.html":{},"classes/Changed.html":{},"interfaces/CreateEditorJSOptions.html":{},"interfaces/DemoData.html":{},"interfaces/DemoData-1.html":{},"interfaces/EditorJSChange.html":{},"interfaces/EditorJSInstanceConfig.html":{},"interfaces/EditorJSMaterialForm.html":{},"interfaces/EditorMap.html":{},"components/FormContainerComponent.html":{},"interfaces/Header.html":{},"interfaces/HeaderBlock.html":{},"components/HomePageComponent.html":{},"interfaces/Image.html":{},"interfaces/ImageBlock.html":{},"interfaces/InjectorApiCallOptions.html":{},"interfaces/InjectorApiCallResponse.html":{},"interfaces/InjectorMethodOption.html":{},"interfaces/List.html":{},"interfaces/ListBlock.html":{},"modules/MaterialModule.html":{},"interfaces/MenuGroup.html":{},"interfaces/MenuGroup-1.html":{},"interfaces/MenuItem.html":{},"interfaces/MenuItem-1.html":{},"classes/MockEditorJS.html":{},"injectables/MockNgZone.html":{},"classes/MockPlugin.html":{},"components/NavBarComponent.html":{},"components/NgxEditorJSBaseComponent.html":{},"components/NgxEditorJSComponent.html":{},"interfaces/NgxEditorJSConfig.html":{},"interfaces/NgxEditorJSDemo.html":{},"interfaces/NgxEditorJSDemo-1.html":{},"interfaces/NgxEditorJSDemoData.html":{},"interfaces/NgxEditorJSDemoData-1.html":{},"components/NgxEditorJSDemoHomeComponent.html":{},"components/NgxEditorJSDemoInfoComponent.html":{},"directives/NgxEditorJSDirective.html":{},"injectables/NgxEditorJSEffects.html":{},"injectables/NgxEditorJSInstanceService.html":{},"modules/NgxEditorJSModule.html":{},"interfaces/NgxEditorJSModuleConfig.html":{},"injectables/NgxEditorJSPluginService.html":{},"injectables/NgxEditorJSService.html":{},"modules/NgxEditorjsDemoModule.html":{},"modules/NgxEditorjsNgrxModule.html":{},"modules/NgxEditorjsPluginsModule.html":{},"modules/NgxHideableHeaderDemoModule.html":{},"modules/NgxTinynodesCoreMaterialModule.html":{},"modules/NgxTinynodesCoreModule.html":{},"classes/NotReady.html":{},"interfaces/Page.html":{},"interfaces/PageBlock.html":{},"components/PageContainerComponent.html":{},"modules/PageStoreModule.html":{},"injectables/PagesQuery.html":{},"injectables/PagesService.html":{},"interfaces/PagesState.html":{},"injectables/PagesStore.html":{},"interfaces/Paragraph.html":{},"interfaces/ParagraphBlock.html":{},"injectables/PluginCode.html":{},"modules/PluginCodeModule.html":{},"interfaces/PluginConfig.html":{},"interfaces/PluginConfig-1.html":{},"injectables/PluginHeader.html":{},"modules/PluginHeaderModule.html":{},"injectables/PluginImage.html":{},"modules/PluginImageModule.html":{},"injectables/PluginLink.html":{},"modules/PluginLinkModule.html":{},"injectables/PluginList.html":{},"modules/PluginListModule.html":{},"injectables/PluginMarker.html":{},"modules/PluginMarkerModule.html":{},"injectables/PluginParagraph.html":{},"modules/PluginParagraphModule.html":{},"injectables/PluginSimpleImage.html":{},"modules/PluginSimpleImageModule.html":{},"classes/Ready.html":{},"interfaces/ReadyMap.html":{},"classes/SaveEnd.html":{},"classes/SaveStart.html":{},"interfaces/SavedMap.html":{},"components/SidebarComponent.html":{},"interfaces/Tag.html":{},"classes/TestClass.html":{},"interfaces/TinynodeDemos.html":{},"interfaces/TinynodeDemos-1.html":{},"interfaces/ToolSettingsMap.html":{},"interfaces/ToolSettingsMap-1.html":{}}}],["spaces",{"_index":2042,"title":{},"body":{"contributing.html":{}}}],["specific",{"_index":341,"title":{},"body":{"injectables/AppService.html":{},"injectables/AppService-1.html":{},"contributing.html":{}}}],["standards",{"_index":1969,"title":{},"body":{"contributing.html":{}}}],["start",{"_index":556,"title":{},"body":{"classes/Changed.html":{},"components/FormContainerComponent.html":{},"components/NgxEditorJSBaseComponent.html":{},"components/NgxEditorJSComponent.html":{},"classes/NotReady.html":{},"components/PageContainerComponent.html":{},"classes/Ready.html":{},"classes/SaveEnd.html":{},"classes/SaveStart.html":{},"miscellaneous/enumerations.html":{}}}],["started",{"_index":1844,"title":{"changelog.html":{},"contributing.html":{},"index.html":{},"license.html":{},"todo.html":{}},"body":{}}],["state",{"_index":84,"title":{},"body":{"components/AppContainerComponent.html":{},"injectables/AppService.html":{},"injectables/AppService-1.html":{},"modules/ApplicationDataModule.html":{},"injectables/ApplicationQuery.html":{},"injectables/ApplicationQuery-1.html":{},"interfaces/ApplicationState.html":{},"interfaces/ApplicationState-1.html":{},"injectables/ApplicationStore.html":{},"injectables/ApplicationStore-1.html":{},"interfaces/BlocksMap.html":{},"interfaces/ChangeMap.html":{},"interfaces/DemoData.html":{},"interfaces/DemoData-1.html":{},"interfaces/EditorJSChange.html":{},"interfaces/EditorJSMaterialForm.html":{},"interfaces/EditorMap.html":{},"components/FormContainerComponent.html":{},"components/NgxEditorJSBaseComponent.html":{},"components/NgxEditorJSComponent.html":{},"interfaces/NgxEditorJSDemo.html":{},"interfaces/NgxEditorJSDemo-1.html":{},"interfaces/NgxEditorJSDemoData.html":{},"interfaces/NgxEditorJSDemoData-1.html":{},"components/NgxEditorJSDemoInfoComponent.html":{},"directives/NgxEditorJSDirective.html":{},"injectables/NgxEditorJSInstanceService.html":{},"injectables/NgxEditorJSService.html":{},"modules/NgxTinynodesCoreModule.html":{},"interfaces/ReadyMap.html":{},"interfaces/SavedMap.html":{},"interfaces/TinynodeDemos.html":{},"interfaces/TinynodeDemos-1.html":{},"miscellaneous/enumerations.html":{}}}],["statechanges",{"_index":644,"title":{},"body":{"interfaces/EditorJSMaterialForm.html":{}}}],["states",{"_index":1383,"title":{},"body":{"injectables/NgxEditorJSInstanceService.html":{}}}],["static",{"_index":642,"title":{},"body":{"interfaces/EditorJSMaterialForm.html":{},"modules/NgxEditorJSModule.html":{}}}],["status",{"_index":1129,"title":{},"body":{"components/NgxEditorJSComponent.html":{}}}],["still",{"_index":852,"title":{},"body":{"components/FormContainerComponent.html":{}}}],["stopped",{"_index":1060,"title":{},"body":{"components/NgxEditorJSBaseComponent.html":{},"components/NgxEditorJSComponent.html":{}}}],["store",{"_index":271,"title":{},"body":{"modules/AppModule.html":{},"injectables/AppService.html":{},"injectables/AppService-1.html":{},"injectables/ApplicationQuery.html":{},"injectables/ApplicationQuery-1.html":{},"injectables/ApplicationStore.html":{},"injectables/ApplicationStore-1.html":{},"injectables/NgxEditorJSPluginService.html":{},"modules/NgxEditorjsNgrxModule.html":{},"modules/PageStoreModule.html":{},"injectables/PagesQuery.html":{},"injectables/PagesService.html":{},"dependencies.html":{},"todo.html":{}}}],["store/pages/pages.models",{"_index":809,"title":{},"body":{"components/FormContainerComponent.html":{},"components/PageContainerComponent.html":{}}}],["store/pages/pages.module",{"_index":1594,"title":{},"body":{"modules/NgxEditorjsDemoModule.html":{}}}],["store/pages/pages.service",{"_index":810,"title":{},"body":{"components/FormContainerComponent.html":{},"components/PageContainerComponent.html":{}}}],["storeconfig",{"_index":456,"title":{},"body":{"injectables/ApplicationStore.html":{},"injectables/ApplicationStore-1.html":{},"interfaces/PagesState.html":{},"injectables/PagesStore.html":{}}}],["stored",{"_index":1503,"title":{},"body":{"injectables/NgxEditorJSPluginService.html":{}}}],["stores",{"_index":114,"title":{},"body":{"components/AppContainerComponent.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-readme/ngx-editorjs-changelog.html":{}}}],["stores/app/application.module",{"_index":1651,"title":{},"body":{"modules/NgxTinynodesCoreModule.html":{}}}],["stretch",{"_index":517,"title":{},"body":{"interfaces/Block.html":{},"interfaces/Header.html":{},"interfaces/HeaderBlock.html":{},"interfaces/Image.html":{},"interfaces/ImageBlock.html":{},"interfaces/List.html":{},"interfaces/ListBlock.html":{},"interfaces/Paragraph.html":{},"interfaces/ParagraphBlock.html":{}}}],["stretched",{"_index":518,"title":{},"body":{"interfaces/Block.html":{},"interfaces/Header.html":{},"interfaces/HeaderBlock.html":{},"interfaces/Image.html":{},"interfaces/ImageBlock.html":{},"interfaces/List.html":{},"interfaces/ListBlock.html":{},"interfaces/Paragraph.html":{},"interfaces/ParagraphBlock.html":{}}}],["string",{"_index":338,"title":{},"body":{"injectables/AppService.html":{},"injectables/AppService-1.html":{},"interfaces/ApplicationData.html":{},"interfaces/ApplicationData-1.html":{},"interfaces/ApplicationState.html":{},"interfaces/ApplicationState-1.html":{},"interfaces/BasePlugin.html":{},"interfaces/BasePlugin-1.html":{},"interfaces/Block.html":{},"interfaces/BlocksMap.html":{},"interfaces/ChangeMap.html":{},"classes/Changed.html":{},"interfaces/CreateEditorJSOptions.html":{},"interfaces/DemoData.html":{},"interfaces/DemoData-1.html":{},"interfaces/EditorJSChange.html":{},"interfaces/EditorJSInstanceConfig.html":{},"interfaces/EditorJSMaterialForm.html":{},"interfaces/EditorMap.html":{},"components/FormContainerComponent.html":{},"interfaces/Header.html":{},"interfaces/HeaderBlock.html":{},"interfaces/Image.html":{},"interfaces/ImageBlock.html":{},"interfaces/InjectorApiCallOptions.html":{},"interfaces/InjectorApiCallResponse.html":{},"interfaces/InjectorMethodOption.html":{},"interfaces/List.html":{},"interfaces/ListBlock.html":{},"interfaces/MenuGroup.html":{},"interfaces/MenuGroup-1.html":{},"interfaces/MenuItem.html":{},"interfaces/MenuItem-1.html":{},"classes/MockEditorJS.html":{},"classes/MockPlugin.html":{},"components/NgxEditorJSBaseComponent.html":{},"components/NgxEditorJSComponent.html":{},"interfaces/NgxEditorJSConfig.html":{},"interfaces/NgxEditorJSDemo.html":{},"interfaces/NgxEditorJSDemo-1.html":{},"interfaces/NgxEditorJSDemoData.html":{},"interfaces/NgxEditorJSDemoData-1.html":{},"components/NgxEditorJSDemoInfoComponent.html":{},"directives/NgxEditorJSDirective.html":{},"injectables/NgxEditorJSInstanceService.html":{},"interfaces/NgxEditorJSModuleConfig.html":{},"injectables/NgxEditorJSPluginService.html":{},"classes/NotReady.html":{},"interfaces/Page.html":{},"interfaces/PageBlock.html":{},"components/PageContainerComponent.html":{},"interfaces/Paragraph.html":{},"interfaces/ParagraphBlock.html":{},"interfaces/PluginConfig.html":{},"interfaces/PluginConfig-1.html":{},"injectables/PluginMarker.html":{},"classes/Ready.html":{},"interfaces/ReadyMap.html":{},"classes/SaveEnd.html":{},"classes/SaveStart.html":{},"interfaces/SavedMap.html":{},"interfaces/Tag.html":{},"classes/TestClass.html":{},"interfaces/TinynodeDemos.html":{},"interfaces/TinynodeDemos-1.html":{},"interfaces/ToolSettingsMap.html":{},"interfaces/ToolSettingsMap-1.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-readme/ngx-editorjs-changelog.html":{}}}],["style",{"_index":167,"title":{},"body":{"components/AppContainerComponent.html":{},"interfaces/Block.html":{},"interfaces/Header.html":{},"interfaces/HeaderBlock.html":{},"interfaces/Image.html":{},"interfaces/ImageBlock.html":{},"interfaces/List.html":{},"interfaces/ListBlock.html":{},"components/NavBarComponent.html":{},"interfaces/Paragraph.html":{},"interfaces/ParagraphBlock.html":{}}}],["styles",{"_index":6,"title":{},"body":{"components/AppContainerComponent.html":{},"interfaces/Block.html":{},"components/FormContainerComponent.html":{},"interfaces/Header.html":{},"interfaces/HeaderBlock.html":{},"components/HomePageComponent.html":{},"interfaces/Image.html":{},"interfaces/ImageBlock.html":{},"interfaces/List.html":{},"interfaces/ListBlock.html":{},"components/NavBarComponent.html":{},"components/NgxEditorJSComponent.html":{},"components/NgxEditorJSDemoHomeComponent.html":{},"components/NgxEditorJSDemoInfoComponent.html":{},"components/PageContainerComponent.html":{},"interfaces/Paragraph.html":{},"interfaces/ParagraphBlock.html":{},"components/SidebarComponent.html":{},"miscellaneous/typealiases.html":{}}}],["styleurls",{"_index":24,"title":{},"body":{"components/AppContainerComponent.html":{},"interfaces/EditorJSMaterialForm.html":{},"components/FormContainerComponent.html":{},"components/HomePageComponent.html":{},"components/NavBarComponent.html":{},"components/NgxEditorJSComponent.html":{},"components/NgxEditorJSDemoHomeComponent.html":{},"components/NgxEditorJSDemoInfoComponent.html":{},"components/PageContainerComponent.html":{},"components/SidebarComponent.html":{}}}],["subcription",{"_index":735,"title":{},"body":{"interfaces/EditorJSMaterialForm.html":{}}}],["subject",{"_index":103,"title":{},"body":{"components/AppContainerComponent.html":{},"interfaces/EditorJSMaterialForm.html":{},"components/FormContainerComponent.html":{},"components/NgxEditorJSBaseComponent.html":{},"components/NgxEditorJSComponent.html":{},"directives/NgxEditorJSDirective.html":{},"injectables/NgxEditorJSInstanceService.html":{},"components/PageContainerComponent.html":{},"license.html":{}}}],["subjects",{"_index":1256,"title":{},"body":{"directives/NgxEditorJSDirective.html":{},"injectables/NgxEditorJSInstanceService.html":{}}}],["sublicense",{"_index":2177,"title":{},"body":{"license.html":{}}}],["submission",{"_index":884,"title":{},"body":{"components/FormContainerComponent.html":{}}}],["subscribe",{"_index":719,"title":{},"body":{"interfaces/EditorJSMaterialForm.html":{}}}],["subscribe((data",{"_index":1675,"title":{},"body":{"components/PageContainerComponent.html":{}}}],["subscribe(change",{"_index":1101,"title":{},"body":{"components/NgxEditorJSBaseComponent.html":{},"directives/NgxEditorJSDirective.html":{}}}],["subscribe(data",{"_index":837,"title":{},"body":{"components/FormContainerComponent.html":{}}}],["subscribe(editor",{"_index":1421,"title":{},"body":{"injectables/NgxEditorJSInstanceService.html":{}}}],["subscribe(focused",{"_index":723,"title":{},"body":{"interfaces/EditorJSMaterialForm.html":{},"components/NgxEditorJSComponent.html":{}}}],["subscribe(haschanged",{"_index":822,"title":{},"body":{"components/FormContainerComponent.html":{}}}],["subscribe(hassaved",{"_index":825,"title":{},"body":{"components/FormContainerComponent.html":{}}}],["subscribe(hidden",{"_index":140,"title":{},"body":{"components/AppContainerComponent.html":{}}}],["subscribe(isready",{"_index":844,"title":{},"body":{"components/FormContainerComponent.html":{},"components/NgxEditorJSBaseComponent.html":{},"directives/NgxEditorJSDirective.html":{}}}],["subscribe(saved",{"_index":1102,"title":{},"body":{"components/NgxEditorJSBaseComponent.html":{},"directives/NgxEditorJSDirective.html":{}}}],["subscribed",{"_index":1546,"title":{},"body":{"injectables/NgxEditorJSService.html":{}}}],["subscription",{"_index":1076,"title":{},"body":{"components/NgxEditorJSBaseComponent.html":{},"components/NgxEditorJSComponent.html":{}}}],["subscriptions",{"_index":1356,"title":{},"body":{"injectables/NgxEditorJSInstanceService.html":{}}}],["substantial",{"_index":2190,"title":{},"body":{"license.html":{}}}],["such",{"_index":2004,"title":{},"body":{"contributing.html":{}}}],["sunday",{"_index":1880,"title":{},"body":{"changelog.html":{}}}],["super",{"_index":457,"title":{},"body":{"injectables/ApplicationStore.html":{},"injectables/ApplicationStore-1.html":{},"injectables/MockNgZone.html":{},"interfaces/PagesState.html":{},"injectables/PagesStore.html":{}}}],["super(service",{"_index":708,"title":{},"body":{"interfaces/EditorJSMaterialForm.html":{},"components/NgxEditorJSComponent.html":{}}}],["super(store",{"_index":437,"title":{},"body":{"injectables/ApplicationQuery.html":{},"injectables/ApplicationQuery-1.html":{},"injectables/PagesQuery.html":{}}}],["support",{"_index":1055,"title":{},"body":{"components/NgxEditorJSBaseComponent.html":{},"components/NgxEditorJSComponent.html":{},"modules/PageStoreModule.html":{},"index.html":{},"modules.html":{},"todo.html":{},"miscellaneous/variables.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-readme.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-readme/ngx-editorjs-changelog.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-plugins-readme.html":{}}}],["supports",{"_index":496,"title":{},"body":{"interfaces/Block.html":{},"interfaces/Header.html":{},"interfaces/HeaderBlock.html":{},"interfaces/Image.html":{},"interfaces/ImageBlock.html":{},"interfaces/List.html":{},"interfaces/ListBlock.html":{},"interfaces/Paragraph.html":{},"interfaces/ParagraphBlock.html":{},"miscellaneous/typealiases.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-readme/ngx-editorjs-changelog.html":{}}}],["svg",{"_index":2215,"title":{},"body":{"modules.html":{}}}],["switchmap",{"_index":1324,"title":{},"body":{"injectables/NgxEditorJSEffects.html":{}}}],["t",{"_index":340,"title":{},"body":{"injectables/AppService.html":{},"injectables/AppService-1.html":{},"interfaces/ApplicationState.html":{},"interfaces/ApplicationState-1.html":{},"interfaces/Block.html":{},"interfaces/DemoData.html":{},"interfaces/DemoData-1.html":{},"interfaces/EditorJSInstanceConfig.html":{},"interfaces/Header.html":{},"interfaces/HeaderBlock.html":{},"interfaces/Image.html":{},"interfaces/ImageBlock.html":{},"interfaces/InjectorApiCallOptions.html":{},"interfaces/InjectorApiCallResponse.html":{},"interfaces/InjectorMethodOption.html":{},"interfaces/List.html":{},"interfaces/ListBlock.html":{},"interfaces/NgxEditorJSDemo.html":{},"interfaces/NgxEditorJSDemo-1.html":{},"interfaces/NgxEditorJSDemoData.html":{},"interfaces/NgxEditorJSDemoData-1.html":{},"injectables/NgxEditorJSInstanceService.html":{},"injectables/NgxEditorJSService.html":{},"interfaces/Paragraph.html":{},"interfaces/ParagraphBlock.html":{},"interfaces/TinynodeDemos.html":{},"interfaces/TinynodeDemos-1.html":{}}}],["tag",{"_index":216,"title":{"interfaces/Tag.html":{}},"body":{"components/AppContainerComponent.html":{},"components/FormContainerComponent.html":{},"components/HomePageComponent.html":{},"components/NavBarComponent.html":{},"components/NgxEditorJSBaseComponent.html":{},"components/NgxEditorJSComponent.html":{},"components/NgxEditorJSDemoHomeComponent.html":{},"components/NgxEditorJSDemoInfoComponent.html":{},"interfaces/Page.html":{},"interfaces/PageBlock.html":{},"components/PageContainerComponent.html":{},"components/SidebarComponent.html":{},"interfaces/Tag.html":{},"miscellaneous/variables.html":{}}}],["tag_component_field_control",{"_index":2248,"title":{},"body":{"miscellaneous/variables.html":{}}}],["tag_component_value_accessor",{"_index":2250,"title":{},"body":{"miscellaneous/variables.html":{}}}],["tags",{"_index":855,"title":{},"body":{"components/FormContainerComponent.html":{},"todo.html":{}}}],["take",{"_index":805,"title":{},"body":{"components/FormContainerComponent.html":{},"injectables/NgxEditorJSInstanceService.html":{},"components/PageContainerComponent.html":{},"contributing.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-readme/ngx-editorjs-changelog.html":{}}}],["take(1",{"_index":1409,"title":{},"body":{"injectables/NgxEditorJSInstanceService.html":{},"components/PageContainerComponent.html":{}}}],["takes",{"_index":1467,"title":{},"body":{"modules/NgxEditorJSModule.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-readme.html":{}}}],["takeuntil",{"_index":106,"title":{},"body":{"components/AppContainerComponent.html":{},"interfaces/EditorJSMaterialForm.html":{},"components/FormContainerComponent.html":{},"components/NgxEditorJSBaseComponent.html":{},"components/NgxEditorJSComponent.html":{},"directives/NgxEditorJSDirective.html":{},"injectables/NgxEditorJSInstanceService.html":{},"components/PageContainerComponent.html":{}}}],["takeuntil(this.ondestroy",{"_index":139,"title":{},"body":{"components/AppContainerComponent.html":{},"components/FormContainerComponent.html":{},"components/PageContainerComponent.html":{}}}],["tane",{"_index":2152,"title":{},"body":{"index.html":{},"license.html":{}}}],["tap",{"_index":807,"title":{},"body":{"components/FormContainerComponent.html":{},"components/NgxEditorJSBaseComponent.html":{},"injectables/NgxEditorJSEffects.html":{},"components/PageContainerComponent.html":{}}}],["tap(focused",{"_index":1093,"title":{},"body":{"components/NgxEditorJSBaseComponent.html":{}}}],["team",{"_index":2064,"title":{},"body":{"contributing.html":{}}}],["template",{"_index":5,"title":{},"body":{"components/AppContainerComponent.html":{},"components/FormContainerComponent.html":{},"components/HomePageComponent.html":{},"components/NavBarComponent.html":{},"components/NgxEditorJSBaseComponent.html":{},"components/NgxEditorJSComponent.html":{},"components/NgxEditorJSDemoHomeComponent.html":{},"components/NgxEditorJSDemoInfoComponent.html":{},"components/PageContainerComponent.html":{},"components/SidebarComponent.html":{},"index.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-readme.html":{}}}],["templateref",{"_index":1187,"title":{},"body":{"components/NgxEditorJSDemoInfoComponent.html":{}}}],["templateurl",{"_index":26,"title":{},"body":{"components/AppContainerComponent.html":{},"interfaces/EditorJSMaterialForm.html":{},"components/FormContainerComponent.html":{},"components/HomePageComponent.html":{},"components/NavBarComponent.html":{},"components/NgxEditorJSComponent.html":{},"components/NgxEditorJSDemoHomeComponent.html":{},"components/NgxEditorJSDemoInfoComponent.html":{},"components/PageContainerComponent.html":{},"components/SidebarComponent.html":{}}}],["temporarily",{"_index":2031,"title":{},"body":{"contributing.html":{}}}],["temporary",{"_index":2084,"title":{},"body":{"contributing.html":{}}}],["test",{"_index":937,"title":{},"body":{"classes/MockEditorJS.html":{},"classes/MockPlugin.html":{},"classes/TestClass.html":{}}}],["testclass",{"_index":934,"title":{"classes/TestClass.html":{}},"body":{"classes/MockEditorJS.html":{},"classes/MockPlugin.html":{},"classes/TestClass.html":{}}}],["text",{"_index":156,"title":{},"body":{"components/AppContainerComponent.html":{},"interfaces/Block.html":{},"components/FormContainerComponent.html":{},"interfaces/Header.html":{},"interfaces/HeaderBlock.html":{},"interfaces/Image.html":{},"interfaces/ImageBlock.html":{},"interfaces/List.html":{},"interfaces/ListBlock.html":{},"components/NavBarComponent.html":{},"components/NgxEditorJSBaseComponent.html":{},"components/NgxEditorJSComponent.html":{},"directives/NgxEditorJSDirective.html":{},"interfaces/Paragraph.html":{},"interfaces/ParagraphBlock.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-plugins-readme.html":{}}}],["things",{"_index":1206,"title":{},"body":{"components/NgxEditorJSDemoInfoComponent.html":{}}}],["this._disabled",{"_index":673,"title":{},"body":{"interfaces/EditorJSMaterialForm.html":{}}}],["this._empty",{"_index":678,"title":{},"body":{"interfaces/EditorJSMaterialForm.html":{}}}],["this._focused",{"_index":660,"title":{},"body":{"interfaces/EditorJSMaterialForm.html":{}}}],["this._placeholder",{"_index":655,"title":{},"body":{"interfaces/EditorJSMaterialForm.html":{}}}],["this._required",{"_index":666,"title":{},"body":{"interfaces/EditorJSMaterialForm.html":{}}}],["this._value",{"_index":649,"title":{},"body":{"interfaces/EditorJSMaterialForm.html":{},"components/NgxEditorJSBaseComponent.html":{}}}],["this.actions$.pipe",{"_index":1310,"title":{},"body":{"injectables/NgxEditorJSEffects.html":{}}}],["this.add(key",{"_index":1522,"title":{},"body":{"injectables/NgxEditorJSPluginService.html":{}}}],["this.app",{"_index":834,"title":{},"body":{"components/FormContainerComponent.html":{},"components/PageContainerComponent.html":{}}}],["this.app.getmenu('main",{"_index":147,"title":{},"body":{"components/AppContainerComponent.html":{},"components/HomePageComponent.html":{}}}],["this.app.getmenu('other",{"_index":150,"title":{},"body":{"components/AppContainerComponent.html":{}}}],["this.app.getmenu('tinynode",{"_index":149,"title":{},"body":{"components/AppContainerComponent.html":{}}}],["this.app.hidden.pipe(takeuntil(this.ondestroy$)).subscribe(hidden",{"_index":128,"title":{},"body":{"components/AppContainerComponent.html":{}}}],["this.app.togglesidebar(value",{"_index":136,"title":{},"body":{"components/AppContainerComponent.html":{}}}],["this.autofocus",{"_index":1295,"title":{},"body":{"directives/NgxEditorJSDirective.html":{}}}],["this.autosave",{"_index":1095,"title":{},"body":{"components/NgxEditorJSBaseComponent.html":{},"directives/NgxEditorJSDirective.html":{}}}],["this.autosave$.asobservable",{"_index":818,"title":{},"body":{"components/FormContainerComponent.html":{}}}],["this.autosave$.next(0",{"_index":817,"title":{},"body":{"components/FormContainerComponent.html":{}}}],["this.autosave$.next(autosavetime",{"_index":816,"title":{},"body":{"components/FormContainerComponent.html":{}}}],["this.blockplaceholder",{"_index":1298,"title":{},"body":{"directives/NgxEditorJSDirective.html":{}}}],["this.blocks",{"_index":942,"title":{},"body":{"classes/MockEditorJS.html":{},"classes/MockPlugin.html":{},"directives/NgxEditorJSDirective.html":{},"classes/TestClass.html":{}}}],["this.blocks.length",{"_index":1301,"title":{},"body":{"directives/NgxEditorJSDirective.html":{}}}],["this.blocks.pipe",{"_index":1676,"title":{},"body":{"components/PageContainerComponent.html":{}}}],["this.cd.markforcheck",{"_index":725,"title":{},"body":{"interfaces/EditorJSMaterialForm.html":{},"components/FormContainerComponent.html":{},"components/NgxEditorJSBaseComponent.html":{},"components/NgxEditorJSComponent.html":{},"directives/NgxEditorJSDirective.html":{},"components/PageContainerComponent.html":{}}}],["this.cleanupsubjects",{"_index":1438,"title":{},"body":{"injectables/NgxEditorJSInstanceService.html":{}}}],["this.config.editorjs",{"_index":1554,"title":{},"body":{"injectables/NgxEditorJSService.html":{}}}],["this.createeditor(this.createconfig",{"_index":1288,"title":{},"body":{"directives/NgxEditorJSDirective.html":{}}}],["this.describedby",{"_index":695,"title":{},"body":{"interfaces/EditorJSMaterialForm.html":{}}}],["this.destroy",{"_index":941,"title":{},"body":{"classes/MockEditorJS.html":{},"classes/MockPlugin.html":{},"classes/TestClass.html":{}}}],["this.destroyinstance",{"_index":1458,"title":{},"body":{"injectables/NgxEditorJSInstanceService.html":{}}}],["this.editorform.patchvalue",{"_index":823,"title":{},"body":{"components/FormContainerComponent.html":{}}}],["this.editorjs",{"_index":1394,"title":{},"body":{"injectables/NgxEditorJSInstanceService.html":{}}}],["this.editorjs.version",{"_index":1426,"title":{},"body":{"injectables/NgxEditorJSInstanceService.html":{}}}],["this.editormap[holder",{"_index":1447,"title":{},"body":{"injectables/NgxEditorJSInstanceService.html":{}}}],["this.editormap[holder].next(editor",{"_index":1448,"title":{},"body":{"injectables/NgxEditorJSInstanceService.html":{}}}],["this.editormap[options.holder",{"_index":1429,"title":{},"body":{"injectables/NgxEditorJSInstanceService.html":{}}}],["this.editormap[options.holder].pipe(filter(editor",{"_index":1430,"title":{},"body":{"injectables/NgxEditorJSInstanceService.html":{}}}],["this.editorservice",{"_index":819,"title":{},"body":{"components/FormContainerComponent.html":{},"directives/NgxEditorJSDirective.html":{}}}],["this.editorservice.clear",{"_index":832,"title":{},"body":{"components/FormContainerComponent.html":{},"components/PageContainerComponent.html":{}}}],["this.editorservice.getblocks(action.payload.holder",{"_index":1314,"title":{},"body":{"injectables/NgxEditorJSEffects.html":{}}}],["this.editorservice.haschanged",{"_index":829,"title":{},"body":{"components/FormContainerComponent.html":{},"components/PageContainerComponent.html":{}}}],["this.editorservice.isready",{"_index":843,"title":{},"body":{"components/FormContainerComponent.html":{}}}],["this.editorservice.save",{"_index":831,"title":{},"body":{"components/FormContainerComponent.html":{},"components/PageContainerComponent.html":{}}}],["this.editorservice.save(action.payload.holder",{"_index":1313,"title":{},"body":{"injectables/NgxEditorJSEffects.html":{}}}],["this.editorservice.update",{"_index":833,"title":{},"body":{"components/FormContainerComponent.html":{},"components/PageContainerComponent.html":{}}}],["this.el.nativeelement",{"_index":1275,"title":{},"body":{"directives/NgxEditorJSDirective.html":{}}}],["this.el.nativeelement.id",{"_index":1289,"title":{},"body":{"directives/NgxEditorJSDirective.html":{}}}],["this.empty",{"_index":691,"title":{},"body":{"interfaces/EditorJSMaterialForm.html":{}}}],["this.errorstate",{"_index":728,"title":{},"body":{"interfaces/EditorJSMaterialForm.html":{}}}],["this.fb.group",{"_index":784,"title":{},"body":{"components/FormContainerComponent.html":{}}}],["this.fm.monitor(element",{"_index":1089,"title":{},"body":{"components/NgxEditorJSBaseComponent.html":{}}}],["this.fm.stopmonitoring(this.editorel.element",{"_index":736,"title":{},"body":{"interfaces/EditorJSMaterialForm.html":{},"components/NgxEditorJSComponent.html":{}}}],["this.focused",{"_index":690,"title":{},"body":{"interfaces/EditorJSMaterialForm.html":{}}}],["this.geteditor(options",{"_index":1420,"title":{},"body":{"injectables/NgxEditorJSInstanceService.html":{}}}],["this.geteditor(options).pipe",{"_index":1408,"title":{},"body":{"injectables/NgxEditorJSInstanceService.html":{}}}],["this.getfocusmonitor(this.editorel.element",{"_index":721,"title":{},"body":{"interfaces/EditorJSMaterialForm.html":{},"components/NgxEditorJSComponent.html":{}}}],["this.gettimer(this.autosave",{"_index":1097,"title":{},"body":{"components/NgxEditorJSBaseComponent.html":{}}}],["this.haschanged.emit(change",{"_index":1087,"title":{},"body":{"components/NgxEditorJSBaseComponent.html":{},"directives/NgxEditorJSDirective.html":{}}}],["this.haschangedmap[options.holder",{"_index":1402,"title":{},"body":{"injectables/NgxEditorJSInstanceService.html":{}}}],["this.haschangedmap[options.holder].asobservable",{"_index":1432,"title":{},"body":{"injectables/NgxEditorJSInstanceService.html":{}}}],["this.haschangedmap[options.holder].next",{"_index":1403,"title":{},"body":{"injectables/NgxEditorJSInstanceService.html":{}}}],["this.haschangedmap[options.holder].next(data",{"_index":1424,"title":{},"body":{"injectables/NgxEditorJSInstanceService.html":{}}}],["this.hassaved.emit(false",{"_index":701,"title":{},"body":{"interfaces/EditorJSMaterialForm.html":{},"components/NgxEditorJSBaseComponent.html":{}}}],["this.hassaved.next(hassaved",{"_index":826,"title":{},"body":{"components/FormContainerComponent.html":{}}}],["this.hassaved.next(saved",{"_index":1103,"title":{},"body":{"components/NgxEditorJSBaseComponent.html":{},"directives/NgxEditorJSDirective.html":{}}}],["this.hassavedmap[options.holder",{"_index":1433,"title":{},"body":{"injectables/NgxEditorJSInstanceService.html":{}}}],["this.hassavedmap[options.holder].asobservable",{"_index":1434,"title":{},"body":{"injectables/NgxEditorJSInstanceService.html":{}}}],["this.hassavedmap[options.holder].next(false",{"_index":1428,"title":{},"body":{"injectables/NgxEditorJSInstanceService.html":{}}}],["this.hassavedmap[options.holder].next(true",{"_index":1423,"title":{},"body":{"injectables/NgxEditorJSInstanceService.html":{}}}],["this.hidetoolbar",{"_index":1296,"title":{},"body":{"directives/NgxEditorJSDirective.html":{}}}],["this.holder",{"_index":821,"title":{},"body":{"components/FormContainerComponent.html":{},"components/NgxEditorJSBaseComponent.html":{},"directives/NgxEditorJSDirective.html":{},"components/PageContainerComponent.html":{}}}],["this.http.get('/assets/app",{"_index":365,"title":{},"body":{"injectables/AppService.html":{},"injectables/AppService-1.html":{}}}],["this.id",{"_index":1274,"title":{},"body":{"directives/NgxEditorJSDirective.html":{}}}],["this.includetools",{"_index":1278,"title":{},"body":{"directives/NgxEditorJSDirective.html":{}}}],["this.initialblock",{"_index":1297,"title":{},"body":{"directives/NgxEditorJSDirective.html":{}}}],["this.instanceservice.apicall(options",{"_index":1563,"title":{},"body":{"injectables/NgxEditorJSService.html":{}}}],["this.instanceservice.clear(options",{"_index":1566,"title":{},"body":{"injectables/NgxEditorJSService.html":{}}}],["this.instanceservice.createinstance",{"_index":1557,"title":{},"body":{"injectables/NgxEditorJSService.html":{}}}],["this.instanceservice.destroyinstance(options",{"_index":1567,"title":{},"body":{"injectables/NgxEditorJSService.html":{}}}],["this.instanceservice.geteditor(options).pipe(filter(editor",{"_index":1559,"title":{},"body":{"injectables/NgxEditorJSService.html":{}}}],["this.instanceservice.haschanged(options",{"_index":1561,"title":{},"body":{"injectables/NgxEditorJSService.html":{}}}],["this.instanceservice.hassaved(options",{"_index":1562,"title":{},"body":{"injectables/NgxEditorJSService.html":{}}}],["this.instanceservice.isready(options",{"_index":1560,"title":{},"body":{"injectables/NgxEditorJSService.html":{}}}],["this.instanceservice.save(options",{"_index":1565,"title":{},"body":{"injectables/NgxEditorJSService.html":{}}}],["this.instanceservice.update(options",{"_index":1564,"title":{},"body":{"injectables/NgxEditorJSService.html":{}}}],["this.isfocused.emit(false",{"_index":1094,"title":{},"body":{"components/NgxEditorJSBaseComponent.html":{}}}],["this.isfocused.emit(true",{"_index":1096,"title":{},"body":{"components/NgxEditorJSBaseComponent.html":{}}}],["this.isready",{"_index":939,"title":{},"body":{"classes/MockEditorJS.html":{},"classes/MockPlugin.html":{},"classes/TestClass.html":{}}}],["this.isready.emit(isready",{"_index":1100,"title":{},"body":{"components/NgxEditorJSBaseComponent.html":{},"directives/NgxEditorJSDirective.html":{}}}],["this.isreadymap[holder].next(true",{"_index":1400,"title":{},"body":{"injectables/NgxEditorJSInstanceService.html":{}}}],["this.isreadymap[options.holder",{"_index":1405,"title":{},"body":{"injectables/NgxEditorJSInstanceService.html":{}}}],["this.isreadymap[options.holder].asobservable",{"_index":1431,"title":{},"body":{"injectables/NgxEditorJSInstanceService.html":{}}}],["this.isreadymap[options.holder].next(true",{"_index":1406,"title":{},"body":{"injectables/NgxEditorJSInstanceService.html":{}}}],["this.istouched.emit(true",{"_index":724,"title":{},"body":{"interfaces/EditorJSMaterialForm.html":{},"components/NgxEditorJSBaseComponent.html":{},"components/NgxEditorJSComponent.html":{},"directives/NgxEditorJSDirective.html":{}}}],["this.matcher.matchmedia('(max",{"_index":124,"title":{},"body":{"components/AppContainerComponent.html":{}}}],["this.menu",{"_index":827,"title":{},"body":{"components/FormContainerComponent.html":{},"components/PageContainerComponent.html":{}}}],["this.menu$.next(data.links",{"_index":842,"title":{},"body":{"components/FormContainerComponent.html":{},"components/PageContainerComponent.html":{}}}],["this.minheight",{"_index":1299,"title":{},"body":{"directives/NgxEditorJSDirective.html":{}}}],["this.mobileview",{"_index":123,"title":{},"body":{"components/AppContainerComponent.html":{}}}],["this.mobileview.addlistener(this.matchview.bind(this",{"_index":127,"title":{},"body":{"components/AppContainerComponent.html":{}}}],["this.mobileview.removelistener(this.matchview",{"_index":144,"title":{},"body":{"components/AppContainerComponent.html":{}}}],["this.ngcontrol",{"_index":711,"title":{},"body":{"interfaces/EditorJSMaterialForm.html":{}}}],["this.ngcontrol.invalid",{"_index":729,"title":{},"body":{"interfaces/EditorJSMaterialForm.html":{}}}],["this.ngcontrol.touched",{"_index":730,"title":{},"body":{"interfaces/EditorJSMaterialForm.html":{}}}],["this.ngcontrol.valueaccessor",{"_index":713,"title":{},"body":{"interfaces/EditorJSMaterialForm.html":{}}}],["this.onchange",{"_index":1088,"title":{},"body":{"components/NgxEditorJSBaseComponent.html":{}}}],["this.onchange.bind(this",{"_index":1388,"title":{},"body":{"injectables/NgxEditorJSInstanceService.html":{}}}],["this.ondestroy",{"_index":1073,"title":{},"body":{"components/NgxEditorJSBaseComponent.html":{},"components/NgxEditorJSComponent.html":{}}}],["this.ondestroy$.closed",{"_index":740,"title":{},"body":{"interfaces/EditorJSMaterialForm.html":{},"components/NgxEditorJSBaseComponent.html":{},"components/NgxEditorJSComponent.html":{}}}],["this.ondestroy$.complete",{"_index":146,"title":{},"body":{"components/AppContainerComponent.html":{},"interfaces/EditorJSMaterialForm.html":{},"components/NgxEditorJSBaseComponent.html":{},"components/NgxEditorJSComponent.html":{},"injectables/NgxEditorJSInstanceService.html":{}}}],["this.ondestroy$.next(true",{"_index":145,"title":{},"body":{"components/AppContainerComponent.html":{},"interfaces/EditorJSMaterialForm.html":{},"components/NgxEditorJSBaseComponent.html":{},"components/NgxEditorJSComponent.html":{},"injectables/NgxEditorJSInstanceService.html":{}}}],["this.onready.bind(this",{"_index":1392,"title":{},"body":{"injectables/NgxEditorJSInstanceService.html":{}}}],["this.onstable.emit(null",{"_index":965,"title":{},"body":{"injectables/MockNgZone.html":{}}}],["this.ontouch",{"_index":664,"title":{},"body":{"interfaces/EditorJSMaterialForm.html":{},"components/NgxEditorJSBaseComponent.html":{},"components/NgxEditorJSComponent.html":{}}}],["this.ontouch(event",{"_index":700,"title":{},"body":{"interfaces/EditorJSMaterialForm.html":{}}}],["this.pages",{"_index":1726,"title":{},"body":{"injectables/PagesService.html":{}}}],["this.pagesservice.pages",{"_index":828,"title":{},"body":{"components/FormContainerComponent.html":{},"components/PageContainerComponent.html":{}}}],["this.panelopen",{"_index":1197,"title":{},"body":{"components/NgxEditorJSDemoInfoComponent.html":{}}}],["this.panelopen$.asobservable",{"_index":1199,"title":{},"body":{"components/NgxEditorJSDemoInfoComponent.html":{}}}],["this.panelopen$.next(this.panelopen",{"_index":1198,"title":{},"body":{"components/NgxEditorJSDemoInfoComponent.html":{}}}],["this.panelopen$.next(value",{"_index":1200,"title":{},"body":{"components/NgxEditorJSDemoInfoComponent.html":{}}}],["this.plugins.gettools(options.includetools",{"_index":1556,"title":{},"body":{"injectables/NgxEditorJSService.html":{}}}],["this.pluginsmap",{"_index":1524,"title":{},"body":{"injectables/NgxEditorJSPluginService.html":{}}}],["this.pluginsmap[key",{"_index":1523,"title":{},"body":{"injectables/NgxEditorJSPluginService.html":{}}}],["this.query.select('menus').pipe",{"_index":381,"title":{},"body":{"injectables/AppService.html":{},"injectables/AppService-1.html":{}}}],["this.query.select(applicationstatekeys.demodata).pipe",{"_index":374,"title":{},"body":{"injectables/AppService.html":{},"injectables/AppService-1.html":{}}}],["this.query.select(applicationstatekeys.hidden",{"_index":368,"title":{},"body":{"injectables/AppService.html":{},"injectables/AppService-1.html":{}}}],["this.query.selectall",{"_index":1727,"title":{},"body":{"injectables/PagesService.html":{}}}],["this.ref.tick",{"_index":1401,"title":{},"body":{"injectables/NgxEditorJSInstanceService.html":{}}}],["this.reset",{"_index":846,"title":{},"body":{"components/FormContainerComponent.html":{},"components/PageContainerComponent.html":{}}}],["this.sanitizer",{"_index":1300,"title":{},"body":{"directives/NgxEditorJSDirective.html":{}}}],["this.saver",{"_index":943,"title":{},"body":{"classes/MockEditorJS.html":{},"classes/MockPlugin.html":{},"classes/TestClass.html":{}}}],["this.service",{"_index":1099,"title":{},"body":{"components/NgxEditorJSBaseComponent.html":{},"directives/NgxEditorJSDirective.html":{}}}],["this.service.createeditor",{"_index":1277,"title":{},"body":{"directives/NgxEditorJSDirective.html":{}}}],["this.service.destroy",{"_index":1293,"title":{},"body":{"directives/NgxEditorJSDirective.html":{}}}],["this.service.geteditor",{"_index":1273,"title":{},"body":{"directives/NgxEditorJSDirective.html":{}}}],["this.service.save",{"_index":1086,"title":{},"body":{"components/NgxEditorJSBaseComponent.html":{}}}],["this.service.update",{"_index":1281,"title":{},"body":{"directives/NgxEditorJSDirective.html":{}}}],["this.setupsubjects",{"_index":1399,"title":{},"body":{"injectables/NgxEditorJSInstanceService.html":{}}}],["this.sidebarhidden",{"_index":137,"title":{},"body":{"components/AppContainerComponent.html":{}}}],["this.sidebarhidden$.asobservable",{"_index":131,"title":{},"body":{"components/AppContainerComponent.html":{}}}],["this.sidebarhidden$.next(hidden",{"_index":129,"title":{},"body":{"components/AppContainerComponent.html":{}}}],["this.sidenav.close",{"_index":142,"title":{},"body":{"components/AppContainerComponent.html":{}}}],["this.sidenav.open",{"_index":143,"title":{},"body":{"components/AppContainerComponent.html":{}}}],["this.statechanges.next",{"_index":652,"title":{},"body":{"interfaces/EditorJSMaterialForm.html":{}}}],["this.store._value()[applicationstatekeys.hidden",{"_index":373,"title":{},"body":{"injectables/AppService.html":{},"injectables/AppService-1.html":{}}}],["this.store.add(newpage",{"_index":1729,"title":{},"body":{"injectables/PagesService.html":{}}}],["this.store.remove(pageid",{"_index":1732,"title":{},"body":{"injectables/PagesService.html":{}}}],["this.store.update",{"_index":369,"title":{},"body":{"injectables/AppService.html":{},"injectables/AppService-1.html":{}}}],["this.store.update(appdata",{"_index":367,"title":{},"body":{"injectables/AppService.html":{},"injectables/AppService-1.html":{}}}],["this.store.update(pageid",{"_index":1733,"title":{},"body":{"injectables/PagesService.html":{}}}],["this.store.upsert(page.id",{"_index":1731,"title":{},"body":{"injectables/PagesService.html":{}}}],["this.timersubscription",{"_index":737,"title":{},"body":{"interfaces/EditorJSMaterialForm.html":{},"components/NgxEditorJSBaseComponent.html":{},"components/NgxEditorJSComponent.html":{}}}],["this.timersubscription$.closed",{"_index":738,"title":{},"body":{"interfaces/EditorJSMaterialForm.html":{},"components/NgxEditorJSComponent.html":{}}}],["this.timersubscription$.unsubscribe",{"_index":739,"title":{},"body":{"interfaces/EditorJSMaterialForm.html":{},"components/NgxEditorJSBaseComponent.html":{},"components/NgxEditorJSComponent.html":{}}}],["this.togglesidebar(!event.matches",{"_index":135,"title":{},"body":{"components/AppContainerComponent.html":{}}}],["this.touched$.asobservable",{"_index":1276,"title":{},"body":{"directives/NgxEditorJSDirective.html":{}}}],["this.touched$.next(true",{"_index":1272,"title":{},"body":{"directives/NgxEditorJSDirective.html":{}}}],["this.version",{"_index":938,"title":{},"body":{"classes/MockEditorJS.html":{},"classes/MockPlugin.html":{},"classes/TestClass.html":{}}}],["this.zone.run",{"_index":1417,"title":{},"body":{"injectables/NgxEditorJSInstanceService.html":{}}}],["this.zone.run(async",{"_index":1397,"title":{},"body":{"injectables/NgxEditorJSInstanceService.html":{}}}],["this.zone.runoutsideangular",{"_index":1393,"title":{},"body":{"injectables/NgxEditorJSInstanceService.html":{}}}],["this[mapkey][holder",{"_index":1444,"title":{},"body":{"injectables/NgxEditorJSInstanceService.html":{}}}],["this[mapkey][holder].next(value",{"_index":1446,"title":{},"body":{"injectables/NgxEditorJSInstanceService.html":{}}}],["this[mapkey][options.holder",{"_index":1453,"title":{},"body":{"injectables/NgxEditorJSInstanceService.html":{}}}],["this[mapkey][options.holder].complete",{"_index":1455,"title":{},"body":{"injectables/NgxEditorJSInstanceService.html":{}}}],["this[mapkey][options.holder].next(value",{"_index":1454,"title":{},"body":{"injectables/NgxEditorJSInstanceService.html":{}}}],["threatening",{"_index":2036,"title":{},"body":{"contributing.html":{}}}],["throw",{"_index":1290,"title":{},"body":{"directives/NgxEditorJSDirective.html":{},"injectables/NgxEditorJSInstanceService.html":{},"injectables/NgxEditorJSService.html":{}}}],["tick",{"_index":1338,"title":{},"body":{"injectables/NgxEditorJSInstanceService.html":{}}}],["time",{"_index":537,"title":{},"body":{"interfaces/BlocksMap.html":{},"interfaces/ChangeMap.html":{},"interfaces/EditorJSChange.html":{},"interfaces/EditorJSInstanceConfig.html":{},"interfaces/EditorMap.html":{},"components/FormContainerComponent.html":{},"interfaces/InjectorApiCallOptions.html":{},"interfaces/InjectorApiCallResponse.html":{},"interfaces/InjectorMethodOption.html":{},"classes/MockEditorJS.html":{},"classes/MockPlugin.html":{},"components/NgxEditorJSBaseComponent.html":{},"components/NgxEditorJSComponent.html":{},"directives/NgxEditorJSDirective.html":{},"injectables/NgxEditorJSEffects.html":{},"injectables/NgxEditorJSInstanceService.html":{},"interfaces/ReadyMap.html":{},"interfaces/SavedMap.html":{},"classes/TestClass.html":{},"miscellaneous/variables.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-readme.html":{}}}],["time).pipe",{"_index":1083,"title":{},"body":{"components/NgxEditorJSBaseComponent.html":{}}}],["timeinterval",{"_index":1079,"title":{},"body":{"components/NgxEditorJSBaseComponent.html":{}}}],["timer",{"_index":734,"title":{},"body":{"interfaces/EditorJSMaterialForm.html":{},"components/NgxEditorJSBaseComponent.html":{},"components/NgxEditorJSComponent.html":{},"directives/NgxEditorJSDirective.html":{}}}],["timer(timestart",{"_index":1082,"title":{},"body":{"components/NgxEditorJSBaseComponent.html":{}}}],["timers",{"_index":1050,"title":{},"body":{"components/NgxEditorJSBaseComponent.html":{},"components/NgxEditorJSComponent.html":{}}}],["timersubscription",{"_index":994,"title":{},"body":{"components/NgxEditorJSBaseComponent.html":{},"components/NgxEditorJSComponent.html":{}}}],["timestamp",{"_index":538,"title":{},"body":{"interfaces/BlocksMap.html":{},"interfaces/ChangeMap.html":{},"interfaces/EditorJSChange.html":{},"interfaces/EditorMap.html":{},"injectables/NgxEditorJSService.html":{},"interfaces/ReadyMap.html":{},"interfaces/SavedMap.html":{}}}],["timestart",{"_index":1053,"title":{},"body":{"components/NgxEditorJSBaseComponent.html":{},"components/NgxEditorJSComponent.html":{}}}],["tinynode",{"_index":2139,"title":{},"body":{"index.html":{}}}],["tinynodedemos",{"_index":451,"title":{"interfaces/TinynodeDemos.html":{},"interfaces/TinynodeDemos-1.html":{}},"body":{"interfaces/ApplicationState.html":{},"interfaces/ApplicationState-1.html":{},"interfaces/DemoData.html":{},"interfaces/DemoData-1.html":{},"interfaces/NgxEditorJSDemo.html":{},"interfaces/NgxEditorJSDemo-1.html":{},"interfaces/NgxEditorJSDemoData.html":{},"interfaces/NgxEditorJSDemoData-1.html":{},"interfaces/TinynodeDemos.html":{},"interfaces/TinynodeDemos-1.html":{}}}],["tinynodes",{"_index":23,"title":{"additional-documentation/tinynodes-library-docs.html":{}},"body":{"components/AppContainerComponent.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"interfaces/ApplicationData.html":{},"interfaces/ApplicationData-1.html":{},"modules/ApplicationDataModule.html":{},"injectables/ApplicationQuery.html":{},"interfaces/ApplicationState.html":{},"interfaces/ApplicationState-1.html":{},"injectables/ApplicationStore.html":{},"interfaces/DemoData.html":{},"interfaces/DemoData-1.html":{},"components/FormContainerComponent.html":{},"components/HomePageComponent.html":{},"interfaces/MenuGroup.html":{},"interfaces/MenuGroup-1.html":{},"interfaces/MenuItem.html":{},"interfaces/MenuItem-1.html":{},"components/NavBarComponent.html":{},"components/NgxEditorJSBaseComponent.html":{},"components/NgxEditorJSComponent.html":{},"interfaces/NgxEditorJSDemo.html":{},"interfaces/NgxEditorJSDemo-1.html":{},"interfaces/NgxEditorJSDemoData.html":{},"interfaces/NgxEditorJSDemoData-1.html":{},"components/NgxEditorJSDemoHomeComponent.html":{},"components/NgxEditorJSDemoInfoComponent.html":{},"modules/NgxEditorjsDemoModule.html":{},"modules/NgxTinynodesCoreMaterialModule.html":{},"modules/NgxTinynodesCoreModule.html":{},"components/PageContainerComponent.html":{},"components/SidebarComponent.html":{},"interfaces/TinynodeDemos.html":{},"interfaces/TinynodeDemos-1.html":{},"changelog.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"index.html":{},"license.html":{},"todo.html":{},"miscellaneous/variables.html":{},"additional-documentation/tinynodes-library-docs.html":{}}}],["tinynodes/ngx",{"_index":100,"title":{},"body":{"components/AppContainerComponent.html":{},"modules/AppModule.html":{},"interfaces/ApplicationState.html":{},"interfaces/ApplicationState-1.html":{},"interfaces/DemoData.html":{},"interfaces/DemoData-1.html":{},"components/FormContainerComponent.html":{},"components/HomePageComponent.html":{},"components/NavBarComponent.html":{},"interfaces/NgxEditorJSDemo.html":{},"interfaces/NgxEditorJSDemo-1.html":{},"interfaces/NgxEditorJSDemoData.html":{},"interfaces/NgxEditorJSDemoData-1.html":{},"components/NgxEditorJSDemoHomeComponent.html":{},"injectables/NgxEditorJSEffects.html":{},"modules/NgxEditorJSModule.html":{},"modules/NgxEditorjsDemoModule.html":{},"modules/NgxEditorjsNgrxModule.html":{},"interfaces/Page.html":{},"interfaces/PageBlock.html":{},"components/PageContainerComponent.html":{},"injectables/PagesService.html":{},"components/SidebarComponent.html":{},"interfaces/Tag.html":{},"interfaces/TinynodeDemos.html":{},"interfaces/TinynodeDemos-1.html":{},"changelog.html":{},"index.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-readme.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-readme/ngx-editorjs-changelog.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-plugins-readme.html":{}}}],["tinynodes/src/app/app",{"_index":298,"title":{},"body":{"modules/AppRoutingModule.html":{},"miscellaneous/variables.html":{}}}],["tinynodes/src/app/app.module.ts",{"_index":250,"title":{},"body":{"modules/AppModule.html":{}}}],["tinynodes/src/app/components/nav",{"_index":968,"title":{},"body":{"components/NavBarComponent.html":{}}}],["tinynodes/src/app/components/sidebar",{"_index":1830,"title":{},"body":{"components/SidebarComponent.html":{}}}],["tinynodes/src/app/containers/app/app.component.ts",{"_index":11,"title":{},"body":{"components/AppContainerComponent.html":{}}}],["tinynodes/src/app/containers/app/app.component.ts:103",{"_index":87,"title":{},"body":{"components/AppContainerComponent.html":{}}}],["tinynodes/src/app/containers/app/app.component.ts:110",{"_index":90,"title":{},"body":{"components/AppContainerComponent.html":{}}}],["tinynodes/src/app/containers/app/app.component.ts:117",{"_index":93,"title":{},"body":{"components/AppContainerComponent.html":{}}}],["tinynodes/src/app/containers/app/app.component.ts:21",{"_index":62,"title":{},"body":{"components/AppContainerComponent.html":{}}}],["tinynodes/src/app/containers/app/app.component.ts:26",{"_index":80,"title":{},"body":{"components/AppContainerComponent.html":{}}}],["tinynodes/src/app/containers/app/app.component.ts:41",{"_index":51,"title":{},"body":{"components/AppContainerComponent.html":{}}}],["tinynodes/src/app/containers/app/app.component.ts:59",{"_index":83,"title":{},"body":{"components/AppContainerComponent.html":{}}}],["tinynodes/src/app/containers/app/app.component.ts:75",{"_index":73,"title":{},"body":{"components/AppContainerComponent.html":{}}}],["tinynodes/src/app/containers/app/app.component.ts:82",{"_index":65,"title":{},"body":{"components/AppContainerComponent.html":{}}}],["tinynodes/src/app/containers/app/app.component.ts:94",{"_index":69,"title":{},"body":{"components/AppContainerComponent.html":{}}}],["tinynodes/src/app/core/stores/app/application.model.ts",{"_index":452,"title":{},"body":{"interfaces/ApplicationState-1.html":{},"interfaces/DemoData-1.html":{},"interfaces/NgxEditorJSDemo-1.html":{},"interfaces/NgxEditorJSDemoData-1.html":{},"interfaces/TinynodeDemos-1.html":{},"miscellaneous/enumerations.html":{}}}],["tinynodes/src/app/core/stores/app/application.query.ts",{"_index":438,"title":{},"body":{"injectables/ApplicationQuery-1.html":{}}}],["tinynodes/src/app/core/stores/app/application.query.ts:10",{"_index":439,"title":{},"body":{"injectables/ApplicationQuery-1.html":{}}}],["tinynodes/src/app/core/stores/app/application.service.ts",{"_index":389,"title":{},"body":{"injectables/AppService-1.html":{}}}],["tinynodes/src/app/core/stores/app/application.service.ts:15",{"_index":390,"title":{},"body":{"injectables/AppService-1.html":{}}}],["tinynodes/src/app/core/stores/app/application.service.ts:34",{"_index":394,"title":{},"body":{"injectables/AppService-1.html":{}}}],["tinynodes/src/app/core/stores/app/application.service.ts:41",{"_index":393,"title":{},"body":{"injectables/AppService-1.html":{}}}],["tinynodes/src/app/core/stores/app/application.service.ts:49",{"_index":391,"title":{},"body":{"injectables/AppService-1.html":{}}}],["tinynodes/src/app/core/stores/app/application.service.ts:62",{"_index":392,"title":{},"body":{"injectables/AppService-1.html":{}}}],["tinynodes/src/app/core/stores/app/application.store.ts",{"_index":459,"title":{},"body":{"injectables/ApplicationStore-1.html":{}}}],["tinynodes/src/app/core/stores/app/application.store.ts:10",{"_index":460,"title":{},"body":{"injectables/ApplicationStore-1.html":{}}}],["tinynodes/src/app/core/types/app",{"_index":804,"title":{},"body":{"components/FormContainerComponent.html":{},"components/PageContainerComponent.html":{}}}],["tinynodes/src/app/core/types/app.ts",{"_index":419,"title":{},"body":{"interfaces/ApplicationData-1.html":{},"interfaces/MenuGroup-1.html":{},"interfaces/MenuItem-1.html":{}}}],["tinynodes/src/app/material.module",{"_index":1595,"title":{},"body":{"modules/NgxEditorjsDemoModule.html":{}}}],["tinynodes/src/app/material.module.ts",{"_index":913,"title":{},"body":{"modules/MaterialModule.html":{}}}],["tinynodes/src/app/pages/home/home",{"_index":892,"title":{},"body":{"components/HomePageComponent.html":{}}}],["tinynodes/src/environments/environment.prod.ts",{"_index":2251,"title":{},"body":{"miscellaneous/variables.html":{}}}],["tinynodes/src/environments/environment.ts",{"_index":2253,"title":{},"body":{"miscellaneous/variables.html":{}}}],["title",{"_index":64,"title":{},"body":{"components/AppContainerComponent.html":{},"interfaces/ApplicationData.html":{},"interfaces/ApplicationData-1.html":{},"components/FormContainerComponent.html":{},"interfaces/MenuGroup.html":{},"interfaces/MenuGroup-1.html":{},"interfaces/MenuItem.html":{},"interfaces/MenuItem-1.html":{},"components/NavBarComponent.html":{},"components/NgxEditorJSDemoInfoComponent.html":{}}}],["today",{"_index":1852,"title":{},"body":{"changelog.html":{}}}],["todo",{"_index":446,"title":{"todo.html":{}},"body":{"interfaces/ApplicationState.html":{},"interfaces/ApplicationState-1.html":{},"interfaces/DemoData.html":{},"interfaces/DemoData-1.html":{},"interfaces/NgxEditorJSDemo.html":{},"interfaces/NgxEditorJSDemo-1.html":{},"interfaces/NgxEditorJSDemoData.html":{},"interfaces/NgxEditorJSDemoData-1.html":{},"interfaces/TinynodeDemos.html":{},"interfaces/TinynodeDemos-1.html":{},"todo.html":{}}}],["todos",{"_index":2223,"title":{},"body":{"todo.html":{}}}],["toggle",{"_index":74,"title":{},"body":{"components/AppContainerComponent.html":{},"components/NavBarComponent.html":{}}}],["togglepanel",{"_index":1184,"title":{},"body":{"components/NgxEditorJSDemoInfoComponent.html":{}}}],["togglepanel(value",{"_index":1193,"title":{},"body":{"components/NgxEditorJSDemoInfoComponent.html":{}}}],["toggles",{"_index":351,"title":{},"body":{"injectables/AppService.html":{},"injectables/AppService-1.html":{},"components/NgxEditorJSDemoInfoComponent.html":{}}}],["togglesidebar",{"_index":35,"title":{},"body":{"components/AppContainerComponent.html":{},"injectables/AppService.html":{},"injectables/AppService-1.html":{},"components/NavBarComponent.html":{}}}],["togglesidebar(value",{"_index":71,"title":{},"body":{"components/AppContainerComponent.html":{},"injectables/AppService.html":{}}}],["token",{"_index":483,"title":{},"body":{"interfaces/BasePlugin.html":{},"interfaces/BasePlugin-1.html":{},"interfaces/EditorJSInstanceConfig.html":{},"interfaces/InjectorApiCallOptions.html":{},"interfaces/InjectorApiCallResponse.html":{},"interfaces/InjectorMethodOption.html":{},"interfaces/NgxEditorJSConfig.html":{},"interfaces/NgxEditorJSModuleConfig.html":{},"interfaces/PluginConfig.html":{},"interfaces/PluginConfig-1.html":{},"interfaces/ToolSettingsMap.html":{},"interfaces/ToolSettingsMap-1.html":{},"miscellaneous/variables.html":{}}}],["tool",{"_index":481,"title":{},"body":{"interfaces/BasePlugin.html":{},"interfaces/BasePlugin-1.html":{},"components/FormContainerComponent.html":{},"injectables/NgxEditorJSPluginService.html":{},"components/PageContainerComponent.html":{},"injectables/PluginCode.html":{},"modules/PluginCodeModule.html":{},"interfaces/PluginConfig.html":{},"interfaces/PluginConfig-1.html":{},"injectables/PluginHeader.html":{},"modules/PluginHeaderModule.html":{},"injectables/PluginImage.html":{},"modules/PluginImageModule.html":{},"injectables/PluginLink.html":{},"modules/PluginLinkModule.html":{},"injectables/PluginList.html":{},"modules/PluginListModule.html":{},"injectables/PluginMarker.html":{},"modules/PluginMarkerModule.html":{},"injectables/PluginParagraph.html":{},"modules/PluginParagraphModule.html":{},"injectables/PluginSimpleImage.html":{},"modules/PluginSimpleImageModule.html":{},"interfaces/ToolSettingsMap.html":{},"interfaces/ToolSettingsMap-1.html":{}}}],["toolbar",{"_index":1023,"title":{},"body":{"components/NgxEditorJSBaseComponent.html":{},"components/NgxEditorJSComponent.html":{},"interfaces/NgxEditorJSConfig.html":{},"directives/NgxEditorJSDirective.html":{},"interfaces/NgxEditorJSModuleConfig.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-readme.html":{}}}],["toolconstructable",{"_index":472,"title":{},"body":{"interfaces/BasePlugin.html":{},"interfaces/BasePlugin-1.html":{},"interfaces/PluginConfig.html":{},"interfaces/PluginConfig-1.html":{},"interfaces/ToolSettingsMap.html":{},"interfaces/ToolSettingsMap-1.html":{}}}],["tools",{"_index":478,"title":{},"body":{"interfaces/BasePlugin.html":{},"interfaces/BasePlugin-1.html":{},"interfaces/CreateEditorJSOptions.html":{},"components/NgxEditorJSBaseComponent.html":{},"components/NgxEditorJSComponent.html":{},"directives/NgxEditorJSDirective.html":{},"injectables/NgxEditorJSPluginService.html":{},"injectables/NgxEditorJSService.html":{},"modules/NgxEditorjsPluginsModule.html":{},"interfaces/PluginConfig.html":{},"interfaces/PluginConfig-1.html":{},"modules/PluginSimpleImageModule.html":{},"interfaces/ToolSettingsMap.html":{},"interfaces/ToolSettingsMap-1.html":{},"miscellaneous/functions.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-readme.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-readme/ngx-editorjs-changelog.html":{}}}],["toolsettings",{"_index":473,"title":{},"body":{"interfaces/BasePlugin.html":{},"interfaces/BasePlugin-1.html":{},"classes/MockEditorJS.html":{},"classes/MockPlugin.html":{},"injectables/PluginCode.html":{},"interfaces/PluginConfig.html":{},"interfaces/PluginConfig-1.html":{},"injectables/PluginHeader.html":{},"injectables/PluginImage.html":{},"injectables/PluginLink.html":{},"injectables/PluginList.html":{},"injectables/PluginMarker.html":{},"injectables/PluginParagraph.html":{},"injectables/PluginSimpleImage.html":{},"classes/TestClass.html":{},"interfaces/ToolSettingsMap.html":{},"interfaces/ToolSettingsMap-1.html":{}}}],["toolsettingsmap",{"_index":479,"title":{"interfaces/ToolSettingsMap.html":{},"interfaces/ToolSettingsMap-1.html":{}},"body":{"interfaces/BasePlugin.html":{},"interfaces/BasePlugin-1.html":{},"injectables/NgxEditorJSPluginService.html":{},"interfaces/PluginConfig.html":{},"interfaces/PluginConfig-1.html":{},"interfaces/ToolSettingsMap.html":{},"interfaces/ToolSettingsMap-1.html":{}}}],["topnav",{"_index":415,"title":{},"body":{"interfaces/ApplicationData.html":{},"interfaces/ApplicationData-1.html":{},"interfaces/MenuGroup.html":{},"interfaces/MenuGroup-1.html":{},"interfaces/MenuItem.html":{},"interfaces/MenuItem-1.html":{}}}],["tort",{"_index":2211,"title":{},"body":{"license.html":{}}}],["touch",{"_index":1075,"title":{},"body":{"components/NgxEditorJSBaseComponent.html":{},"components/NgxEditorJSComponent.html":{}}}],["touched",{"_index":1044,"title":{},"body":{"components/NgxEditorJSBaseComponent.html":{},"components/NgxEditorJSComponent.html":{},"directives/NgxEditorJSDirective.html":{},"components/PageContainerComponent.html":{}}}],["towards",{"_index":1988,"title":{},"body":{"contributing.html":{}}}],["tree",{"_index":8,"title":{},"body":{"components/AppContainerComponent.html":{},"components/FormContainerComponent.html":{},"components/HomePageComponent.html":{},"components/NavBarComponent.html":{},"components/NgxEditorJSBaseComponent.html":{},"components/NgxEditorJSComponent.html":{},"components/NgxEditorJSDemoHomeComponent.html":{},"components/NgxEditorJSDemoInfoComponent.html":{},"components/PageContainerComponent.html":{},"components/SidebarComponent.html":{}}}],["trigger",{"_index":718,"title":{},"body":{"interfaces/EditorJSMaterialForm.html":{},"components/NgxEditorJSBaseComponent.html":{},"components/NgxEditorJSComponent.html":{},"injectables/NgxEditorJSInstanceService.html":{}}}],["triggerupdate",{"_index":1378,"title":{},"body":{"injectables/NgxEditorJSInstanceService.html":{},"injectables/NgxEditorJSService.html":{}}}],["trolling",{"_index":1997,"title":{},"body":{"contributing.html":{}}}],["true",{"_index":631,"title":{},"body":{"interfaces/EditorJSMaterialForm.html":{},"components/NgxEditorJSBaseComponent.html":{},"components/NgxEditorJSComponent.html":{},"interfaces/NgxEditorJSConfig.html":{},"directives/NgxEditorJSDirective.html":{},"injectables/NgxEditorJSInstanceService.html":{},"interfaces/NgxEditorJSModuleConfig.html":{},"injectables/NgxEditorJSService.html":{},"miscellaneous/variables.html":{}}}],["two",{"_index":1248,"title":{},"body":{"directives/NgxEditorJSDirective.html":{},"contributing.html":{}}}],["type",{"_index":55,"title":{},"body":{"components/AppContainerComponent.html":{},"injectables/AppService.html":{},"injectables/AppService-1.html":{},"interfaces/ApplicationData.html":{},"interfaces/ApplicationData-1.html":{},"injectables/ApplicationQuery.html":{},"injectables/ApplicationQuery-1.html":{},"interfaces/ApplicationState.html":{},"interfaces/ApplicationState-1.html":{},"interfaces/BasePlugin.html":{},"interfaces/BasePlugin-1.html":{},"interfaces/Block.html":{},"classes/Changed.html":{},"interfaces/CreateEditorJSOptions.html":{},"interfaces/DemoData.html":{},"interfaces/DemoData-1.html":{},"interfaces/EditorJSChange.html":{},"interfaces/EditorJSInstanceConfig.html":{},"interfaces/EditorJSMaterialForm.html":{},"components/FormContainerComponent.html":{},"interfaces/Header.html":{},"interfaces/HeaderBlock.html":{},"components/HomePageComponent.html":{},"interfaces/Image.html":{},"interfaces/ImageBlock.html":{},"interfaces/InjectorApiCallOptions.html":{},"interfaces/InjectorApiCallResponse.html":{},"interfaces/InjectorMethodOption.html":{},"interfaces/List.html":{},"interfaces/ListBlock.html":{},"interfaces/MenuGroup.html":{},"interfaces/MenuGroup-1.html":{},"interfaces/MenuItem.html":{},"interfaces/MenuItem-1.html":{},"classes/MockEditorJS.html":{},"injectables/MockNgZone.html":{},"components/NavBarComponent.html":{},"components/NgxEditorJSBaseComponent.html":{},"components/NgxEditorJSComponent.html":{},"interfaces/NgxEditorJSConfig.html":{},"interfaces/NgxEditorJSDemo.html":{},"interfaces/NgxEditorJSDemo-1.html":{},"components/NgxEditorJSDemoInfoComponent.html":{},"directives/NgxEditorJSDirective.html":{},"injectables/NgxEditorJSEffects.html":{},"injectables/NgxEditorJSInstanceService.html":{},"modules/NgxEditorJSModule.html":{},"interfaces/NgxEditorJSModuleConfig.html":{},"injectables/NgxEditorJSPluginService.html":{},"injectables/NgxEditorJSService.html":{},"classes/NotReady.html":{},"interfaces/Page.html":{},"interfaces/PageBlock.html":{},"components/PageContainerComponent.html":{},"injectables/PagesQuery.html":{},"injectables/PagesService.html":{},"interfaces/Paragraph.html":{},"interfaces/ParagraphBlock.html":{},"classes/Ready.html":{},"classes/SaveEnd.html":{},"classes/SaveStart.html":{},"components/SidebarComponent.html":{},"interfaces/Tag.html":{},"interfaces/TinynodeDemos.html":{},"interfaces/TinynodeDemos-1.html":{},"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-readme.html":{}}}],["typealiases",{"_index":2233,"title":{"miscellaneous/typealiases.html":{}},"body":{}}],["typeof",{"_index":371,"title":{},"body":{"injectables/AppService.html":{},"injectables/AppService-1.html":{},"components/NgxEditorJSDemoInfoComponent.html":{},"injectables/NgxEditorJSInstanceService.html":{},"injectables/NgxEditorJSService.html":{}}}],["types/app",{"_index":359,"title":{},"body":{"injectables/AppService.html":{},"injectables/AppService-1.html":{},"interfaces/ApplicationState.html":{},"interfaces/ApplicationState-1.html":{},"interfaces/DemoData.html":{},"interfaces/DemoData-1.html":{},"interfaces/NgxEditorJSDemo.html":{},"interfaces/NgxEditorJSDemo-1.html":{},"interfaces/NgxEditorJSDemoData.html":{},"interfaces/NgxEditorJSDemoData-1.html":{},"components/NgxEditorJSDemoInfoComponent.html":{},"interfaces/TinynodeDemos.html":{},"interfaces/TinynodeDemos-1.html":{}}}],["types/blocks",{"_index":1080,"title":{},"body":{"components/NgxEditorJSBaseComponent.html":{},"directives/NgxEditorJSDirective.html":{}}}],["types/config",{"_index":1486,"title":{},"body":{"modules/NgxEditorJSModule.html":{},"injectables/NgxEditorJSService.html":{}}}],["types/editorjs",{"_index":1551,"title":{},"body":{"injectables/NgxEditorJSService.html":{}}}],["types/injector",{"_index":1381,"title":{},"body":{"injectables/NgxEditorJSInstanceService.html":{},"modules/NgxEditorJSModule.html":{},"injectables/NgxEditorJSService.html":{}}}],["types/maps",{"_index":1081,"title":{},"body":{"components/NgxEditorJSBaseComponent.html":{},"injectables/NgxEditorJSInstanceService.html":{}}}],["types/plugins",{"_index":1516,"title":{},"body":{"injectables/NgxEditorJSPluginService.html":{},"injectables/PluginCode.html":{},"injectables/PluginHeader.html":{},"injectables/PluginImage.html":{},"injectables/PluginLink.html":{},"injectables/PluginList.html":{},"injectables/PluginMarker.html":{},"injectables/PluginParagraph.html":{},"injectables/PluginSimpleImage.html":{}}}],["typescript",{"_index":901,"title":{},"body":{"components/HomePageComponent.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-readme.html":{}}}],["typing",{"_index":866,"title":{},"body":{"components/FormContainerComponent.html":{},"components/PageContainerComponent.html":{}}}],["ui",{"_index":2142,"title":{},"body":{"index.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-readme.html":{}}}],["unacceptable",{"_index":1990,"title":{},"body":{"contributing.html":{}}}],["undefined",{"_index":372,"title":{},"body":{"injectables/AppService.html":{},"injectables/AppService-1.html":{},"components/NgxEditorJSDemoInfoComponent.html":{},"injectables/NgxEditorJSInstanceService.html":{},"injectables/NgxEditorJSService.html":{}}}],["under",{"_index":906,"title":{},"body":{"components/HomePageComponent.html":{},"changelog.html":{}}}],["underlying",{"_index":681,"title":{},"body":{"interfaces/EditorJSMaterialForm.html":{},"components/NgxEditorJSComponent.html":{},"changelog.html":{},"index.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-readme.html":{}}}],["underneath",{"_index":2146,"title":{},"body":{"index.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-readme.html":{}}}],["unique",{"_index":685,"title":{},"body":{"interfaces/EditorJSMaterialForm.html":{}}}],["unordered",{"_index":498,"title":{},"body":{"interfaces/Block.html":{},"interfaces/Header.html":{},"interfaces/HeaderBlock.html":{},"interfaces/Image.html":{},"interfaces/ImageBlock.html":{},"interfaces/List.html":{},"interfaces/ListBlock.html":{},"interfaces/Paragraph.html":{},"interfaces/ParagraphBlock.html":{},"miscellaneous/typealiases.html":{}}}],["unsubscribe",{"_index":720,"title":{},"body":{"interfaces/EditorJSMaterialForm.html":{}}}],["until",{"_index":1898,"title":{},"body":{"changelog.html":{}}}],["unwelcome",{"_index":1994,"title":{},"body":{"contributing.html":{}}}],["up",{"_index":333,"title":{},"body":{"injectables/AppService.html":{},"injectables/AppService-1.html":{},"interfaces/EditorJSMaterialForm.html":{},"components/FormContainerComponent.html":{},"components/NgxEditorJSBaseComponent.html":{},"components/NgxEditorJSComponent.html":{},"directives/NgxEditorJSDirective.html":{},"injectables/NgxEditorJSInstanceService.html":{},"components/PageContainerComponent.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-readme/ngx-editorjs-changelog.html":{}}}],["update",{"_index":755,"title":{},"body":{"components/FormContainerComponent.html":{},"components/NgxEditorJSBaseComponent.html":{},"components/NgxEditorJSComponent.html":{},"injectables/NgxEditorJSInstanceService.html":{},"injectables/NgxEditorJSService.html":{},"contributing.html":{}}}],["update(blocks",{"_index":782,"title":{},"body":{"components/FormContainerComponent.html":{}}}],["update(options",{"_index":1377,"title":{},"body":{"injectables/NgxEditorJSInstanceService.html":{},"injectables/NgxEditorJSService.html":{}}}],["updated",{"_index":323,"title":{},"body":{"injectables/AppService.html":{},"injectables/AppService-1.html":{},"components/FormContainerComponent.html":{},"directives/NgxEditorJSDirective.html":{},"injectables/NgxEditorJSInstanceService.html":{},"injectables/NgxEditorJSService.html":{},"injectables/PagesService.html":{},"changelog.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-readme/ngx-editorjs-changelog.html":{}}}],["updates",{"_index":1376,"title":{},"body":{"injectables/NgxEditorJSInstanceService.html":{},"injectables/NgxEditorJSService.html":{},"injectables/PagesService.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-plugins-readme/ngx-editorjs-plugins-changelog.html":{}}}],["upgraded",{"_index":1863,"title":{},"body":{"changelog.html":{}}}],["upload",{"_index":2326,"title":{},"body":{"additional-documentation/tinynodes-library-docs/ngx-editorjs-plugins-readme.html":{}}}],["upsert",{"_index":1704,"title":{},"body":{"injectables/PagesService.html":{}}}],["upsert(page",{"_index":1719,"title":{},"body":{"injectables/PagesService.html":{}}}],["url",{"_index":409,"title":{},"body":{"interfaces/ApplicationData.html":{},"interfaces/ApplicationData-1.html":{},"interfaces/Block.html":{},"components/FormContainerComponent.html":{},"interfaces/Header.html":{},"interfaces/HeaderBlock.html":{},"interfaces/Image.html":{},"interfaces/ImageBlock.html":{},"interfaces/List.html":{},"interfaces/ListBlock.html":{},"interfaces/MenuGroup.html":{},"interfaces/MenuGroup-1.html":{},"interfaces/MenuItem.html":{},"interfaces/MenuItem-1.html":{},"components/PageContainerComponent.html":{},"interfaces/Paragraph.html":{},"interfaces/ParagraphBlock.html":{}}}],["usage",{"_index":1202,"title":{},"body":{"components/NgxEditorJSDemoInfoComponent.html":{},"index.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-readme.html":{}}}],["use",{"_index":1177,"title":{},"body":{"components/NgxEditorJSDemoHomeComponent.html":{},"components/NgxEditorJSDemoInfoComponent.html":{},"directives/NgxEditorJSDirective.html":{},"modules/NgxEditorJSModule.html":{},"contributing.html":{},"index.html":{},"license.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-readme.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-readme/ngx-editorjs-changelog.html":{}}}],["used",{"_index":406,"title":{},"body":{"interfaces/ApplicationData.html":{},"interfaces/ApplicationData-1.html":{},"modules/ApplicationDataModule.html":{},"interfaces/CreateEditorJSOptions.html":{},"interfaces/MenuGroup.html":{},"interfaces/MenuGroup-1.html":{},"interfaces/MenuItem.html":{},"interfaces/MenuItem-1.html":{},"components/NgxEditorJSBaseComponent.html":{},"components/NgxEditorJSComponent.html":{},"components/NgxEditorJSDemoHomeComponent.html":{},"directives/NgxEditorJSDirective.html":{},"index.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-readme.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-readme/ngx-editorjs-changelog.html":{}}}],["useexisting",{"_index":629,"title":{},"body":{"interfaces/EditorJSMaterialForm.html":{},"components/NgxEditorJSBaseComponent.html":{},"miscellaneous/variables.html":{}}}],["usefactory",{"_index":1490,"title":{},"body":{"modules/NgxEditorJSModule.html":{},"modules/NgxEditorjsDemoModule.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-readme.html":{}}}],["useful",{"_index":1905,"title":{},"body":{"changelog.html":{},"contributing.html":{}}}],["user",{"_index":1501,"title":{},"body":{"injectables/NgxEditorJSPluginService.html":{}}}],["userplugin",{"_index":2303,"title":{},"body":{"additional-documentation/tinynodes-library-docs/ngx-editorjs-readme/ngx-editorjs-changelog.html":{}}}],["userplugins",{"_index":487,"title":{},"body":{"interfaces/BasePlugin.html":{},"interfaces/BasePlugin-1.html":{},"components/NgxEditorJSBaseComponent.html":{},"components/NgxEditorJSComponent.html":{},"directives/NgxEditorJSDirective.html":{},"injectables/NgxEditorJSPluginService.html":{},"modules/NgxEditorjsDemoModule.html":{},"interfaces/PluginConfig.html":{},"interfaces/PluginConfig-1.html":{},"interfaces/ToolSettingsMap.html":{},"interfaces/ToolSettingsMap-1.html":{},"miscellaneous/variables.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-readme.html":{}}}],["uses",{"_index":2298,"title":{},"body":{"additional-documentation/tinynodes-library-docs/ngx-editorjs-readme/ngx-editorjs-changelog.html":{}}}],["usevalue",{"_index":1489,"title":{},"body":{"modules/NgxEditorJSModule.html":{}}}],["using",{"_index":1105,"title":{},"body":{"components/NgxEditorJSComponent.html":{},"changelog.html":{},"contributing.html":{},"index.html":{}}}],["value",{"_index":59,"title":{},"body":{"components/AppContainerComponent.html":{},"injectables/AppService.html":{},"classes/Changed.html":{},"interfaces/EditorJSMaterialForm.html":{},"components/FormContainerComponent.html":{},"injectables/MockNgZone.html":{},"components/NavBarComponent.html":{},"components/NgxEditorJSBaseComponent.html":{},"components/NgxEditorJSComponent.html":{},"components/NgxEditorJSDemoInfoComponent.html":{},"directives/NgxEditorJSDirective.html":{},"injectables/NgxEditorJSEffects.html":{},"injectables/NgxEditorJSInstanceService.html":{},"injectables/NgxEditorJSPluginService.html":{},"injectables/NgxEditorJSService.html":{},"classes/NotReady.html":{},"components/PageContainerComponent.html":{},"classes/Ready.html":{},"classes/SaveEnd.html":{},"classes/SaveStart.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/variables.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-readme.html":{}}}],["value(value",{"_index":651,"title":{},"body":{"interfaces/EditorJSMaterialForm.html":{}}}],["values",{"_index":530,"title":{},"body":{"interfaces/BlocksMap.html":{},"interfaces/ChangeMap.html":{},"interfaces/EditorJSChange.html":{},"interfaces/EditorJSInstanceConfig.html":{},"interfaces/EditorMap.html":{},"components/FormContainerComponent.html":{},"interfaces/InjectorApiCallOptions.html":{},"interfaces/InjectorApiCallResponse.html":{},"interfaces/InjectorMethodOption.html":{},"directives/NgxEditorJSDirective.html":{},"injectables/NgxEditorJSInstanceService.html":{},"injectables/NgxEditorJSService.html":{},"interfaces/ReadyMap.html":{},"interfaces/SavedMap.html":{},"miscellaneous/variables.html":{}}}],["var",{"_index":193,"title":{},"body":{"components/AppContainerComponent.html":{},"components/FormContainerComponent.html":{},"components/HomePageComponent.html":{},"components/NavBarComponent.html":{},"components/NgxEditorJSBaseComponent.html":{},"components/NgxEditorJSComponent.html":{},"components/NgxEditorJSDemoHomeComponent.html":{},"components/NgxEditorJSDemoInfoComponent.html":{},"components/PageContainerComponent.html":{},"components/SidebarComponent.html":{}}}],["variables",{"_index":1925,"title":{"miscellaneous/variables.html":{}},"body":{"contributing.html":{},"miscellaneous/variables.html":{}}}],["version",{"_index":923,"title":{},"body":{"classes/MockEditorJS.html":{},"classes/MockPlugin.html":{},"directives/NgxEditorJSDirective.html":{},"injectables/NgxEditorJSEffects.html":{},"injectables/NgxEditorJSInstanceService.html":{},"classes/TestClass.html":{},"changelog.html":{},"contributing.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-readme.html":{}}}],["versioning",{"_index":1934,"title":{},"body":{"contributing.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-readme/ngx-editorjs-changelog.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-plugins-readme/ngx-editorjs-plugins-changelog.html":{}}}],["vertical",{"_index":183,"title":{},"body":{"components/AppContainerComponent.html":{},"components/NavBarComponent.html":{}}}],["via",{"_index":486,"title":{},"body":{"interfaces/BasePlugin.html":{},"interfaces/BasePlugin-1.html":{},"components/NgxEditorJSBaseComponent.html":{},"components/NgxEditorJSComponent.html":{},"directives/NgxEditorJSDirective.html":{},"injectables/NgxEditorJSService.html":{},"modules/NgxEditorjsNgrxModule.html":{},"modules/NgxTinynodesCoreModule.html":{},"injectables/PagesService.html":{},"interfaces/PluginConfig.html":{},"interfaces/PluginConfig-1.html":{},"interfaces/ToolSettingsMap.html":{},"interfaces/ToolSettingsMap-1.html":{},"contributing.html":{},"index.html":{},"todo.html":{},"miscellaneous/variables.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-readme.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-readme/ngx-editorjs-changelog.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-plugins-readme.html":{}}}],["view",{"_index":119,"title":{},"body":{"components/AppContainerComponent.html":{},"modules/AppModule.html":{},"components/NgxEditorJSDemoInfoComponent.html":{}}}],["viewchild",{"_index":97,"title":{},"body":{"components/AppContainerComponent.html":{},"interfaces/EditorJSMaterialForm.html":{},"components/NgxEditorJSComponent.html":{},"components/PageContainerComponent.html":{}}}],["viewchild('ngxeditorjs",{"_index":1667,"title":{},"body":{"components/PageContainerComponent.html":{}}}],["viewchild(matsidenav",{"_index":79,"title":{},"body":{"components/AppContainerComponent.html":{}}}],["viewchild(ngxeditorjsdirective",{"_index":682,"title":{},"body":{"interfaces/EditorJSMaterialForm.html":{},"components/NgxEditorJSComponent.html":{}}}],["viewpoints",{"_index":1978,"title":{},"body":{"contributing.html":{}}}],["visit",{"_index":253,"title":{},"body":{"modules/AppModule.html":{},"components/HomePageComponent.html":{},"index.html":{}}}],["void",{"_index":68,"title":{},"body":{"components/AppContainerComponent.html":{},"injectables/AppService.html":{},"injectables/AppService-1.html":{},"interfaces/EditorJSInstanceConfig.html":{},"interfaces/EditorJSMaterialForm.html":{},"components/FormContainerComponent.html":{},"interfaces/InjectorApiCallOptions.html":{},"interfaces/InjectorApiCallResponse.html":{},"interfaces/InjectorMethodOption.html":{},"classes/MockEditorJS.html":{},"injectables/MockNgZone.html":{},"classes/MockPlugin.html":{},"components/NgxEditorJSBaseComponent.html":{},"components/NgxEditorJSComponent.html":{},"components/NgxEditorJSDemoInfoComponent.html":{},"directives/NgxEditorJSDirective.html":{},"injectables/NgxEditorJSInstanceService.html":{},"injectables/NgxEditorJSPluginService.html":{},"injectables/NgxEditorJSService.html":{},"components/PageContainerComponent.html":{},"injectables/PagesService.html":{},"classes/TestClass.html":{}}}],["wait",{"_index":1253,"title":{},"body":{"directives/NgxEditorJSDirective.html":{}}}],["want",{"_index":2148,"title":{},"body":{"index.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-readme.html":{}}}],["warning",{"_index":1607,"title":{},"body":{"modules/NgxEditorjsNgrxModule.html":{},"modules/PageStoreModule.html":{}}}],["warranties",{"_index":2197,"title":{},"body":{"license.html":{}}}],["warranty",{"_index":2192,"title":{},"body":{"license.html":{}}}],["way",{"_index":1176,"title":{},"body":{"components/NgxEditorJSDemoHomeComponent.html":{},"directives/NgxEditorJSDirective.html":{},"modules/NgxEditorjsPluginsModule.html":{},"injectables/PagesService.html":{}}}],["web",{"_index":903,"title":{},"body":{"components/HomePageComponent.html":{}}}],["wednesday",{"_index":1849,"title":{},"body":{"changelog.html":{}}}],["welcome",{"_index":899,"title":{},"body":{"components/HomePageComponent.html":{}}}],["welcoming",{"_index":1945,"title":{},"body":{"contributing.html":{}}}],["whether",{"_index":2209,"title":{},"body":{"license.html":{}}}],["white",{"_index":160,"title":{},"body":{"components/AppContainerComponent.html":{},"components/NavBarComponent.html":{}}}],["width",{"_index":125,"title":{},"body":{"components/AppContainerComponent.html":{},"components/FormContainerComponent.html":{},"components/NavBarComponent.html":{},"components/NgxEditorJSComponent.html":{},"components/NgxEditorJSDemoInfoComponent.html":{},"components/PageContainerComponent.html":{}}}],["wiki",{"_index":2026,"title":{},"body":{"contributing.html":{}}}],["wish",{"_index":1911,"title":{},"body":{"contributing.html":{}}}],["withbackground",{"_index":516,"title":{},"body":{"interfaces/Block.html":{},"interfaces/Header.html":{},"interfaces/HeaderBlock.html":{},"interfaces/Image.html":{},"interfaces/ImageBlock.html":{},"interfaces/List.html":{},"interfaces/ListBlock.html":{},"interfaces/Paragraph.html":{},"interfaces/ParagraphBlock.html":{}}}],["withborder",{"_index":514,"title":{},"body":{"interfaces/Block.html":{},"interfaces/Header.html":{},"interfaces/HeaderBlock.html":{},"interfaces/Image.html":{},"interfaces/ImageBlock.html":{},"interfaces/List.html":{},"interfaces/ListBlock.html":{},"interfaces/Paragraph.html":{},"interfaces/ParagraphBlock.html":{}}}],["within",{"_index":985,"title":{},"body":{"components/NgxEditorJSBaseComponent.html":{},"injectables/NgxEditorJSInstanceService.html":{},"injectables/NgxEditorJSService.html":{},"contributing.html":{},"index.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-readme.html":{}}}],["withlatestfrom",{"_index":808,"title":{},"body":{"components/FormContainerComponent.html":{},"injectables/NgxEditorJSEffects.html":{}}}],["without",{"_index":1107,"title":{},"body":{"components/NgxEditorJSComponent.html":{},"changelog.html":{},"contributing.html":{},"license.html":{}}}],["won't",{"_index":1155,"title":{},"body":{"interfaces/NgxEditorJSConfig.html":{},"injectables/NgxEditorJSInstanceService.html":{},"interfaces/NgxEditorJSModuleConfig.html":{},"injectables/NgxEditorJSService.html":{}}}],["work",{"_index":1864,"title":{},"body":{"changelog.html":{}}}],["writer",{"_index":1067,"title":{},"body":{"components/NgxEditorJSBaseComponent.html":{},"components/NgxEditorJSComponent.html":{}}}],["writevalue",{"_index":999,"title":{},"body":{"components/NgxEditorJSBaseComponent.html":{},"components/NgxEditorJSComponent.html":{}}}],["writevalue(blocks",{"_index":1065,"title":{},"body":{"components/NgxEditorJSBaseComponent.html":{},"components/NgxEditorJSComponent.html":{}}}],["yes",{"_index":76,"title":{},"body":{"components/AppContainerComponent.html":{},"injectables/AppService.html":{},"directives/NgxEditorJSDirective.html":{},"modules/NgxEditorJSModule.html":{},"injectables/PagesService.html":{},"miscellaneous/functions.html":{}}}],["zone",{"_index":948,"title":{},"body":{"injectables/MockNgZone.html":{},"injectables/NgxEditorJSInstanceService.html":{}}}],["zone.js",{"_index":2120,"title":{},"body":{"dependencies.html":{}}}],["zoom",{"_index":247,"title":{},"body":{"modules/AppModule.html":{},"modules/ApplicationDataModule.html":{},"modules/NgxEditorJSModule.html":{},"modules/NgxEditorjsDemoModule.html":{},"modules/NgxEditorjsNgrxModule.html":{},"modules/NgxEditorjsPluginsModule.html":{},"modules/NgxTinynodesCoreModule.html":{},"modules/PageStoreModule.html":{},"modules/PluginCodeModule.html":{},"modules/PluginHeaderModule.html":{},"modules/PluginImageModule.html":{},"modules/PluginLinkModule.html":{},"modules/PluginListModule.html":{},"modules/PluginMarkerModule.html":{},"modules/PluginParagraphModule.html":{},"modules/PluginSimpleImageModule.html":{},"overview.html":{}}}]],"pipeline":["stemmer"]},
    "store": {"components/AppContainerComponent.html":{"url":"components/AppContainerComponent.html","title":"component - AppContainerComponent","body":"\n                   \n\n\n\n\n\n  Components\n  AppContainerComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    apps/ngx-tinynodes/src/app/containers/app/app.component.ts\n\n\n    \n        Description\n    \n    \n        The main application component that provides the root container\n\n    \n\n\n    \n        Implements\n    \n    \n                    AfterContentInit\n                    OnDestroy\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                tinynodes-root\n            \n\n            \n                styleUrls\n                app.component.scss\n            \n\n\n\n            \n                templateUrl\n                app.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                sidenav\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngAfterContentInit\n                            \n                            \n                                ngOnDestroy\n                            \n                            \n                                    Public\n                                toggleSidebar\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                pageTitle\n                            \n                        \n                    \n                \n\n\n\n\n                    \n                        \n                            Accessors\n                        \n                    \n                    \n                        \n                            \n                                \n                                    sidebarHidden\n                                \n                                \n                                    mainMenu\n                                \n                                \n                                    projectsMenu\n                                \n                                \n                                    openSourceMenu\n                                \n                            \n                        \n                    \n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(app: AppService, matcher: MediaMatcher, render: Renderer2)\n                    \n                \n                        \n                            \n                                Defined in apps/ngx-tinynodes/src/app/containers/app/app.component.ts:41\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        app\n                                                  \n                                                        \n                                                                        AppService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        matcher\n                                                  \n                                                        \n                                                                    MediaMatcher\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        render\n                                                  \n                                                        \n                                                                        Renderer2\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        pageTitle\n                    \n                \n                \n                    \n                        Default value : 'Tinynodes Angular Demos'\n                    \n                \n                        \n                            \n                                    Defined in apps/ngx-tinynodes/src/app/containers/app/app.component.ts:21\n                            \n                        \n                \n                    \n                        The page title\n\n                    \n                \n            \n        \n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngAfterContentInit\n                        \n                        \n                    \n                \n            \n            \n                \nngAfterContentInit()\n                \n            \n\n\n            \n                \n                    Defined in apps/ngx-tinynodes/src/app/containers/app/app.component.ts:82\n                \n            \n\n\n            \n                \n                    Component initialized\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngOnDestroy\n                        \n                        \n                    \n                \n            \n            \n                \nngOnDestroy()\n                \n            \n\n\n            \n                \n                    Defined in apps/ngx-tinynodes/src/app/containers/app/app.component.ts:94\n                \n            \n\n\n            \n                \n                    Component destroyed\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            toggleSidebar\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    toggleSidebar(value?: boolean)\n                \n            \n\n\n            \n                \n                    Defined in apps/ngx-tinynodes/src/app/containers/app/app.component.ts:75\n                \n            \n\n\n            \n                \n                    Toggle sidebar\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    value\n                                    \n                                                boolean\n                                    \n\n                                    \n                                        Yes\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            sidenav\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     MatSidenav\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @ViewChild(MatSidenav)\n                            \n                        \n                    \n                        \n                            \n                                    Defined in apps/ngx-tinynodes/src/app/containers/app/app.component.ts:26\n                            \n                        \n\n                \n                    \n                        The Material sidebar\n\n                    \n                \n\n            \n        \n\n\n    \n    \n        Accessors\n    \n        \n            \n                \n                    \n                        \n                        sidebarHidden\n                    \n                \n\n                \n                    \n                        getsidebarHidden()\n                    \n                \n                            \n                                \n                                    Defined in apps/ngx-tinynodes/src/app/containers/app/app.component.ts:59\n                                \n                            \n                    \n                        \n                                Sidebar State\n\n\n                                \n                                    Returns :     Observable\n\n                                \n                        \n                    \n\n            \n        \n        \n            \n                \n                    \n                        \n                        mainMenu\n                    \n                \n\n                \n                    \n                        getmainMenu()\n                    \n                \n                            \n                                \n                                    Defined in apps/ngx-tinynodes/src/app/containers/app/app.component.ts:103\n                                \n                            \n                    \n                        \n                                Get the application main menu\n\n\n                        \n                    \n\n            \n        \n        \n            \n                \n                    \n                        \n                        projectsMenu\n                    \n                \n\n                \n                    \n                        getprojectsMenu()\n                    \n                \n                            \n                                \n                                    Defined in apps/ngx-tinynodes/src/app/containers/app/app.component.ts:110\n                                \n                            \n                    \n                        \n                                Get the projects menu\n\n\n                        \n                    \n\n            \n        \n        \n            \n                \n                    \n                        \n                        openSourceMenu\n                    \n                \n\n                \n                    \n                        getopenSourceMenu()\n                    \n                \n                            \n                                \n                                    Defined in apps/ngx-tinynodes/src/app/containers/app/app.component.ts:117\n                                \n                            \n                    \n                        \n                                Get the open source menu\n\n\n                        \n                    \n\n            \n        \n\n\n\n\n    \n        import { AfterContentInit, Component, Input, OnDestroy, ViewChild, Renderer2 } from '@angular/core';\nimport { MatSidenav } from '@angular/material';\nimport { AppService } from '@tinynodes/ngx-tinynodes-core';\nimport { BehaviorSubject, Observable, Subject } from 'rxjs';\nimport { distinctUntilChanged, takeUntil } from 'rxjs/operators';\nimport { MediaMatcher } from '@angular/cdk/layout';\n\n/**\n * The main application component that provides the root container\n */\n@Component({\n  selector: 'tinynodes-root',\n  templateUrl: 'app.component.html',\n  styleUrls: ['app.component.scss']\n})\nexport class AppContainerComponent implements AfterContentInit, OnDestroy {\n  /**\n   * The page title\n   */\n  @Input()\n  public pageTitle = 'Tinynodes Angular Demos';\n\n  /**\n   * The Material sidebar\n   */\n  @ViewChild(MatSidenav) sidenav: MatSidenav;\n\n  /**\n   * When the component is destroyed\n   */\n  private readonly onDestroy$ = new Subject();\n\n  /**\n   * Stores the current sidebar state\n   */\n  private readonly sidebarHidden$ = new BehaviorSubject(false);\n\n  /**\n   * If it's a mobile view, hide the menu\n   */\n  private mobileView: MediaQueryList;\n\n  constructor(\n    private readonly app: AppService,\n    private readonly matcher: MediaMatcher,\n    private readonly render: Renderer2\n  ) {\n    this.mobileView = this.matcher.matchMedia('(max-width: 768px)');\n    this.mobileView.addListener(this.matchView.bind(this));\n\n    this.app.hidden.pipe(takeUntil(this.onDestroy$)).subscribe(hidden => {\n      this.sidebarHidden$.next(hidden);\n    });\n  }\n\n  /**\n   * Sidebar State\n   */\n  public get sidebarHidden(): Observable {\n    return this.sidebarHidden$.asObservable();\n  }\n\n  /**\n   * View matcher for mobile\n   * @param event\n   */\n  private matchView(event: any) {\n    this.toggleSidebar(!event.matches);\n  }\n\n  /**\n   * Toggle sidebar\n   * @param value\n   */\n  public toggleSidebar(value?: boolean) {\n    this.app.toggleSidebar(value);\n  }\n\n  /**\n   * Component initialized\n   */\n  ngAfterContentInit() {\n    this.sidebarHidden$\n      .pipe(\n        distinctUntilChanged(),\n        takeUntil(this.onDestroy$)\n      )\n      .subscribe(hidden => (hidden ? this.sidenav.close() : this.sidenav.open()));\n  }\n\n  /**\n   * Component destroyed\n   */\n  ngOnDestroy() {\n    this.mobileView.removeListener(this.matchView);\n    this.onDestroy$.next(true);\n    this.onDestroy$.complete();\n  }\n\n  /**\n   * Get the application main menu\n   */\n  public get mainMenu() {\n    return this.app.getMenu('main-links');\n  }\n\n  /**\n   * Get the projects menu\n   */\n  public get projectsMenu() {\n    return this.app.getMenu('tinynode-projects');\n  }\n\n  /**\n   * Get the open source menu\n   */\n  public get openSourceMenu() {\n    return this.app.getMenu('other-projects');\n  }\n}\n\n    \n\n    \n        \n\n  \n    \n  \n  \n    \n      \n    \n  \n\n\n    \n\n    \n                \n                    app.component.scss\n                \n                mat-sidenav-container,\nmat-sidenav-content,\nmat-sidenav {\n  height: 100vh;\n}\n\nmat-sidenav {\n  width: 250px;\n}\n\na {\n  text-decoration: none;\n  color: white;\n}\n\na:hover,\na:active {\n  color: lightgray;\n}\n\n.navigation-items {\n  list-style: none;\n  padding: 0;\n  margin: 0;\n  cursor: pointer;\n}\n\n.icon {\n  display: inline-block;\n  height: 30px;\n  margin: 0 auto;\n  padding-right: 5px;\n  text-align: center;\n  vertical-align: middle;\n  width: 15%;\n}\n\n.label {\n  display: inline-block;\n  line-height: 30px;\n  margin: 0;\n  width: 85%;\n}\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                          '\n    var COMPONENTS = [{'name': 'AppContainerComponent', 'selector': 'tinynodes-root'},{'name': 'FormContainerComponent', 'selector': 'ngx-form-container'},{'name': 'HomePageComponent', 'selector': 'tinynodes-home-page'},{'name': 'NavBarComponent', 'selector': 'tinynodes-nav-bar'},{'name': 'NgxEditorJSBaseComponent', 'selector': ''},{'name': 'NgxEditorJSComponent', 'selector': 'ngx-editorjs'},{'name': 'NgxEditorJSDemoHomeComponent', 'selector': 'ngx-editorjs-demo-home'},{'name': 'NgxEditorJSDemoInfoComponent', 'selector': 'ngx-editorjs-demo-info'},{'name': 'NgxEditorJSDemoTagComponent', 'selector': 'ngx-editorjs-tag-component'},{'name': 'NgxEditorJSMatFieldComponent', 'selector': 'ngx-editorjs-mat-field'},{'name': 'PageContainerComponent', 'selector': 'ngx-page-container'},{'name': 'SidebarComponent', 'selector': 'tinynodes-sidebar'}];\n    var DIRECTIVES = [{'name': 'NgxEditorJSDirective', 'selector': '[ngxEditorJS]'}];\n    var ACTUAL_COMPONENT = {'name': 'AppContainerComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/AppModule.html":{"url":"modules/AppModule.html","title":"module - AppModule","body":"\n                   \n\n\n\n\n    Modules\n    AppModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_AppModule\n\n\n\ncluster_AppModule_declarations\n\n\n\ncluster_AppModule_imports\n\n\n\ncluster_AppModule_bootstrap\n\n\n\n\nAppContainerComponent\n\nAppContainerComponent\n\n\n\nAppModule\n\nAppModule\n\nAppModule -->\n\nAppContainerComponent->AppModule\n\n\n\n\n\nHomePageComponent\n\nHomePageComponent\n\nAppModule -->\n\nHomePageComponent->AppModule\n\n\n\n\n\nNavBarComponent\n\nNavBarComponent\n\nAppModule -->\n\nNavBarComponent->AppModule\n\n\n\n\n\nSidebarComponent\n\nSidebarComponent\n\nAppModule -->\n\nSidebarComponent->AppModule\n\n\n\n\n\nAppContainerComponent \n\nAppContainerComponent \n\nAppContainerComponent  -->\n\nAppModule->AppContainerComponent \n\n\n\n\n\nAppRoutingModule\n\nAppRoutingModule\n\nAppModule -->\n\nAppRoutingModule->AppModule\n\n\n\n\n\nApplicationDataModule\n\nApplicationDataModule\n\nAppModule -->\n\nApplicationDataModule->AppModule\n\n\n\n\n\nMaterialModule\n\nMaterialModule\n\nAppModule -->\n\nMaterialModule->AppModule\n\n\n\n\n\nNgxEditorJSModule\n\nNgxEditorJSModule\n\nAppModule -->\n\nNgxEditorJSModule->AppModule\n\n\n\n\n\nNgxEditorjsDemoModule\n\nNgxEditorjsDemoModule\n\nAppModule -->\n\nNgxEditorjsDemoModule->AppModule\n\n\n\n\n\nNgxTinynodesCoreModule\n\nNgxTinynodesCoreModule\n\nAppModule -->\n\nNgxTinynodesCoreModule->AppModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            apps/ngx-tinynodes/src/app/app.module.ts\n        \n\n\n        \n            Description\n        \n        \n            The main ngx-tinynodes module that builds the core single page application.\nTo view the application visit the demo\n\n        \n\n\n        \n            \n                \n                    Declarations\n                    \n                        \n                            AppContainerComponent\n                        \n                        \n                            HomePageComponent\n                        \n                        \n                            NavBarComponent\n                        \n                        \n                            SidebarComponent\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            AppRoutingModule\n                        \n                        \n                            ApplicationDataModule\n                        \n                        \n                            MaterialModule\n                        \n                        \n                            NgxEditorJSModule\n                        \n                        \n                            NgxEditorjsDemoModule\n                        \n                        \n                            NgxTinynodesCoreModule\n                        \n                    \n                \n                \n                    Bootstrap\n                    \n                        \n                            AppContainerComponent\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { HttpClient, HttpClientModule } from '@angular/common/http';\nimport { NgModule } from '@angular/core';\nimport { FlexLayoutModule } from '@angular/flex-layout';\nimport { BrowserModule } from '@angular/platform-browser';\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\nimport { AkitaNgRouterStoreModule } from '@datorama/akita-ng-router-store';\nimport { AkitaNgDevtools } from '@datorama/akita-ngdevtools';\nimport { NgxEditorJSModule } from '@tinynodes/ngx-editorjs';\nimport { NgxEditorjsDemoModule } from '@tinynodes/ngx-editorjs-demo';\nimport { MarkdownModule } from 'ngx-markdown';\nimport { environment } from '../environments/environment';\nimport { AppRoutingModule } from './app-routing.module';\nimport { AppContainerComponent } from './containers/app/app.component';\nimport { NavBarComponent } from './components/nav-bar/nav-bar.component';\nimport { SidebarComponent } from './components/sidebar-component/sidebar.component';\nimport { MaterialModule } from './material.module';\nimport { HomePageComponent } from './pages/home/home-page.component';\nimport { MatButtonModule } from '@angular/material';\nimport { ApplicationDataModule, NgxTinynodesCoreModule } from '@tinynodes/ngx-tinynodes-core';\nimport { LayoutModule } from '@angular/cdk/layout';\n\n/**\n * The main `ngx-tinynodes` module that builds the core single page application.\n * To view the application visit [the demo](https://tinynodes-ngx.firebaseapp.com/)\n */\n@NgModule({\n  declarations: [AppContainerComponent, NavBarComponent, SidebarComponent, HomePageComponent],\n  imports: [\n    BrowserModule,\n    LayoutModule,\n    HttpClientModule,\n    BrowserAnimationsModule,\n    MaterialModule,\n    FlexLayoutModule,\n    ApplicationDataModule,\n    AppRoutingModule,\n    NgxTinynodesCoreModule,\n    NgxEditorJSModule.forRoot(),\n    NgxEditorjsDemoModule,\n    MarkdownModule.forRoot({ loader: HttpClient }),\n    environment.production ? [] : [AkitaNgDevtools.forRoot(), AkitaNgRouterStoreModule.forRoot()]\n  ],\n  bootstrap: [AppContainerComponent]\n})\nexport class AppModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/AppRoutingModule.html":{"url":"modules/AppRoutingModule.html","title":"module - AppRoutingModule","body":"\n                   \n\n\n\n\n    Modules\n    AppRoutingModule\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            apps/ngx-tinynodes/src/app/app-routing.module.ts\n        \n\n\n        \n            Description\n        \n        \n            The App routing module provides the base roots of the application\n\n        \n\n\n        \n            \n            \n        \n\n\n    \n\n\n    \n        import { Route, RouterModule } from '@angular/router';\nimport { NgModule } from '@angular/core';\nimport { HomePageComponent } from './pages/home/home-page.component';\n\n/**\n * The main application routes\n */\nexport const appRoutes: Route[] = [\n  {\n    path: '',\n    redirectTo: 'home',\n    pathMatch: 'full'\n  },\n  {\n    path: 'home',\n    component: HomePageComponent\n  }\n];\n\n/**\n * The App routing module provides the base roots of the application\n */\n@NgModule({\n  imports: [RouterModule.forRoot(appRoutes)],\n  exports: [RouterModule]\n})\nexport class AppRoutingModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/AppService.html":{"url":"injectables/AppService.html","title":"injectable - AppService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  AppService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            libs/ngx-tinynodes-core/src/lib/stores/app/application.service.ts\n        \n\n            \n                Description\n            \n            \n                The main application service, this loads the initial data and then provides\nit to the store, from here the main state can be updated and queried.\n\n            \n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                getDemoData\n                            \n                            \n                                    Public\n                                getMenu\n                            \n                            \n                                    Public\n                                toggleSidebar\n                            \n                        \n                    \n                \n\n\n\n\n\n                    \n                        \n                            Accessors\n                        \n                    \n                    \n                        \n                            \n                                \n                                    hidden\n                                \n                            \n                        \n                    \n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(query: ApplicationQuery, store: ApplicationStore, http: HttpClient)\n                    \n                \n                        \n                            \n                                Defined in libs/ngx-tinynodes-core/src/lib/stores/app/application.service.ts:15\n                            \n                        \n\n                \n                    \n                            Sets up the providers for service methods\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        query\n                                                  \n                                                        \n                                                                        ApplicationQuery\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                The application query provider\n\n                                                        \n                                                \n                                                \n                                                        store\n                                                  \n                                                        \n                                                                        ApplicationStore\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                The application store provider\n\n                                                        \n                                                \n                                                \n                                                        http\n                                                  \n                                                        \n                                                                        HttpClient\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                The HTTP client provider\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            getDemoData\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    getDemoData(demoName: string)\n                \n            \n\n\n            \n                \n                    Defined in libs/ngx-tinynodes-core/src/lib/stores/app/application.service.ts:52\n                \n            \n\n            \n                \n                    Type parameters :\n                    \n                        T\n                    \n                \n            \n\n            \n                \n                    Returns the demo data for a specific demo \n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    demoName\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        The name of the demo data to load\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Observable\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            getMenu\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    getMenu(key: string)\n                \n            \n\n\n            \n                \n                    Defined in libs/ngx-tinynodes-core/src/lib/stores/app/application.service.ts:65\n                \n            \n\n            \n                \n                    Type parameters :\n                    \n                        T\n                    \n                \n            \n\n            \n                \n                    Gets a {MenuGroup} from the men data\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    key\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        The key of the menu to load\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Observable>\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            toggleSidebar\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    toggleSidebar(value?: boolean)\n                \n            \n\n\n            \n                \n                    Defined in libs/ngx-tinynodes-core/src/lib/stores/app/application.service.ts:41\n                \n            \n\n\n            \n                \n                    Toggles the sidebar state\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    value\n                                    \n                                                boolean\n                                    \n\n                                    \n                                        Yes\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n            \n    \n        Accessors\n    \n        \n            \n                \n                    \n                        \n                        hidden\n                    \n                \n\n                \n                    \n                        gethidden()\n                    \n                \n                            \n                                \n                                    Defined in libs/ngx-tinynodes-core/src/lib/stores/app/application.service.ts:34\n                                \n                            \n                    \n                        \n                                Returns if the side menu hidden state is set\n\n\n                                \n                                    Returns :     Observable\n\n                                \n                        \n                    \n\n            \n        \n\n    \n\n\n    \n        import { HttpClient } from '@angular/common/http';\nimport { Injectable } from '@angular/core';\nimport { Observable } from 'rxjs';\nimport { distinctUntilChanged, filter, map } from 'rxjs/operators';\nimport { ApplicationData, MenuGroup } from '../../types/app';\nimport { ApplicationStateKeys, DemoData } from './application.model';\nimport { ApplicationQuery } from './application.query';\nimport { ApplicationStore } from './application.store';\n\n/**\n * The main application service, this loads the initial data and then provides\n * it to the store, from here the main state can be updated and queried.\n */\n@Injectable()\nexport class AppService {\n  /**\n   * Sets up the providers for service methods\n   * @param query The application query provider\n   * @param store The application store provider\n   * @param http  The HTTP client provider\n   */\n  constructor(\n    private readonly query: ApplicationQuery,\n    private readonly store: ApplicationStore,\n    private readonly http: HttpClient\n  ) {\n    // Load the application data\n    this.http.get('/assets/app-data.json').subscribe((appData: ApplicationData) => this.store.update(appData));\n  }\n\n  /**\n   * Returns if the side menu hidden state is set\n   */\n  get hidden(): Observable {\n    return this.query.select(ApplicationStateKeys.Hidden);\n  }\n\n  /**\n   * Toggles the sidebar state\n   */\n  public toggleSidebar(value?: boolean) {\n    this.store.update({\n      [ApplicationStateKeys.Hidden]:\n        typeof value !== 'undefined' ? value : !this.store._value()[ApplicationStateKeys.Hidden]\n    });\n  }\n\n  /**\n   * Returns the demo data for a specific demo \n   * @param demoName The name of the demo data to load\n   */\n  public getDemoData(demoName: string): Observable {\n    return this.query.select(ApplicationStateKeys.DemoData).pipe(\n      filter((data: DemoData[]) => typeof data !== 'undefined' && (data && data.length > 0)),\n      map((demoData: DemoData[]) => {\n        return demoData.find(demo => demo.name === demoName).data;\n      })\n    ) as Observable;\n  }\n\n  /**\n   * Gets a {MenuGroup} from the men data\n   * @param key The key of the menu to load\n   */\n  public getMenu(key: string): Observable> {\n    return this.query.select('menus').pipe(\n      distinctUntilChanged(),\n      filter(menus => menus !== undefined && menus.length > 0),\n      map(menus => {\n        return menus.find(menu => menu.key == key);\n      })\n    ) as Observable>;\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/AppService-1.html":{"url":"injectables/AppService-1.html","title":"injectable - AppService-1","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  AppService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/ngx-tinynodes/src/app/core/stores/app/application.service.ts\n        \n\n            \n                Description\n            \n            \n                The main application service, this loads the initial data and then provides\nit to the store, from here the main state can be updated and queried.\n\n            \n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                getDemoData\n                            \n                            \n                                    Public\n                                getMenu\n                            \n                            \n                                    Public\n                                toggleSidebar\n                            \n                        \n                    \n                \n\n\n\n\n\n                    \n                        \n                            Accessors\n                        \n                    \n                    \n                        \n                            \n                                \n                                    hidden\n                                \n                            \n                        \n                    \n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(query: ApplicationQuery, store: ApplicationStore, http: HttpClient)\n                    \n                \n                        \n                            \n                                Defined in apps/ngx-tinynodes/src/app/core/stores/app/application.service.ts:15\n                            \n                        \n\n                \n                    \n                            Sets up the providers for service methods\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        query\n                                                  \n                                                        \n                                                                        ApplicationQuery\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                The application query provider\n\n                                                        \n                                                \n                                                \n                                                        store\n                                                  \n                                                        \n                                                                        ApplicationStore\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                The application store provider\n\n                                                        \n                                                \n                                                \n                                                        http\n                                                  \n                                                        \n                                                                        HttpClient\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                The HTTP client provider\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            getDemoData\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    getDemoData(demoName: string)\n                \n            \n\n\n            \n                \n                    Defined in apps/ngx-tinynodes/src/app/core/stores/app/application.service.ts:49\n                \n            \n\n            \n                \n                    Type parameters :\n                    \n                        T\n                    \n                \n            \n\n            \n                \n                    Returns the demo data for a specific demo \n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    demoName\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        The name of the demo data to load\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Observable\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            getMenu\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    getMenu(key: string)\n                \n            \n\n\n            \n                \n                    Defined in apps/ngx-tinynodes/src/app/core/stores/app/application.service.ts:62\n                \n            \n\n            \n                \n                    Type parameters :\n                    \n                        T\n                    \n                \n            \n\n            \n                \n                    Gets a {MenuGroup} from the men data\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    key\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        The key of the menu to load\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Observable>\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            toggleSidebar\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    toggleSidebar()\n                \n            \n\n\n            \n                \n                    Defined in apps/ngx-tinynodes/src/app/core/stores/app/application.service.ts:41\n                \n            \n\n\n            \n                \n                    Toggles the sidebar state\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n\n            \n    \n        Accessors\n    \n        \n            \n                \n                    \n                        \n                        hidden\n                    \n                \n\n                \n                    \n                        gethidden()\n                    \n                \n                            \n                                \n                                    Defined in apps/ngx-tinynodes/src/app/core/stores/app/application.service.ts:34\n                                \n                            \n                    \n                        \n                                Returns if the side menu hidden state is set\n\n\n                                \n                                    Returns :     Observable\n\n                                \n                        \n                    \n\n            \n        \n\n    \n\n\n    \n        import { HttpClient } from '@angular/common/http';\nimport { Injectable } from '@angular/core';\nimport { Observable } from 'rxjs';\nimport { distinctUntilChanged, filter, map } from 'rxjs/operators';\nimport { ApplicationData, MenuGroup } from '../../types/app';\nimport { ApplicationStateKeys, DemoData } from './application.model';\nimport { ApplicationQuery } from './application.query';\nimport { ApplicationStore } from './application.store';\n\n/**\n * The main application service, this loads the initial data and then provides\n * it to the store, from here the main state can be updated and queried.\n */\n@Injectable()\nexport class AppService {\n  /**\n   * Sets up the providers for service methods\n   * @param query The application query provider\n   * @param store The application store provider\n   * @param http  The HTTP client provider\n   */\n  constructor(\n    private readonly query: ApplicationQuery,\n    private readonly store: ApplicationStore,\n    private readonly http: HttpClient\n  ) {\n    // Load the application data\n    this.http.get('/assets/app-data.json').subscribe((appData: ApplicationData) => this.store.update(appData));\n  }\n\n  /**\n   * Returns if the side menu hidden state is set\n   */\n  get hidden(): Observable {\n    return this.query.select(ApplicationStateKeys.Hidden);\n  }\n\n  /**\n   * Toggles the sidebar state\n   */\n  public toggleSidebar() {\n    this.store.update({ [ApplicationStateKeys.Hidden]: !this.store._value()[ApplicationStateKeys.Hidden] });\n  }\n\n  /**\n   * Returns the demo data for a specific demo \n   * @param demoName The name of the demo data to load\n   */\n  public getDemoData(demoName: string): Observable {\n    return this.query.select(ApplicationStateKeys.DemoData).pipe(\n      filter(data => typeof data !== 'undefined'),\n      map((demoData: DemoData[]) => {\n        return demoData.find(demo => demo.name === demoName).data;\n      })\n    ) as Observable;\n  }\n\n  /**\n   * Gets a {MenuGroup} from the men data\n   * @param key The key of the menu to load\n   */\n  public getMenu(key: string): Observable> {\n    return this.query.select('menus').pipe(\n      distinctUntilChanged(),\n      filter(menus => menus !== undefined && menus.length > 0),\n      map(menus => {\n        return menus.find(menu => menu.key === key);\n      })\n    ) as Observable>;\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/ApplicationData.html":{"url":"interfaces/ApplicationData.html","title":"interface - ApplicationData","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  ApplicationData\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            libs/ngx-tinynodes-core/src/lib/types/app.ts\n        \n\n            \n                Description\n            \n            \n                The aggregate application interface\n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        hidden\n                                \n                                \n                                        menus\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        hidden\n                                    \n                                \n                                \n                                    \n                                        hidden:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    If the sidebar menu is hidden\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        menus\n                                    \n                                \n                                \n                                    \n                                        menus:     MenuGroup[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     MenuGroup[]\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    An list of menu groups available in the apps\n\n                                \n                            \n                        \n                    \n            \n    \n\n\n    \n        import { RouterLink } from '@angular/router';\n\n/**\n * A menu item in the Tinynodes app\n */\nexport interface MenuItem {\n  /**\n   * The display label for the app\n   */\n  label: string;\n  /**\n   * Optional icon for the menu item\n   */\n  icon?: string;\n  /**\n   * Description of the item, used for title, aria, etc\n   */\n  description?: string;\n  /**\n   * The {RouterLink} for the menu item or a string url\n   */\n  link?: RouterLink | string;\n\n  /**\n   * Any children to render in the menu\n   */\n  children?: MenuItem[];\n}\n\n/**\n * A menu group describes a set of menu items with a key and optional title\n */\nexport interface MenuGroup {\n  /**\n   * The key of the menu (e.g. `sidebar`, `topnav`, etc)\n   */\n  key: string;\n  /**\n   * Optional title to render in the menu\n   */\n  title?: string;\n\n  /**\n   * The menu items, can contain one or more items with children\n   */\n  items: MenuItem[];\n}\n\n/**\n * The aggregate application interface\n */\nexport interface ApplicationData {\n  /**\n   * If the sidebar menu is hidden\n   */\n  hidden: boolean;\n\n  /**\n   * An list of menu groups available in the apps\n   */\n  menus: MenuGroup[];\n}\n\n    \n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/ApplicationData-1.html":{"url":"interfaces/ApplicationData-1.html","title":"interface - ApplicationData-1","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  ApplicationData\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/ngx-tinynodes/src/app/core/types/app.ts\n        \n\n            \n                Description\n            \n            \n                The aggregate application interface\n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        hidden\n                                \n                                \n                                        menus\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        hidden\n                                    \n                                \n                                \n                                    \n                                        hidden:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    If the sidebar menu is hidden\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        menus\n                                    \n                                \n                                \n                                    \n                                        menus:     MenuGroup[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     MenuGroup[]\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    An list of menu groups available in the apps\n\n                                \n                            \n                        \n                    \n            \n    \n\n\n    \n        import { RouterLink } from '@angular/router';\n\n/**\n * A menu item in the Tinynodes app\n */\nexport interface MenuItem {\n  /**\n   * The display label for the app\n   */\n  label: string;\n  /**\n   * Optional icon for the menu item\n   */\n  icon?: string;\n  /**\n   * Description of the item, used for title, aria, etc\n   */\n  description?: string;\n  /**\n   * The {RouterLink} for the menu item or a string url\n   */\n  link?: RouterLink | string;\n\n  /**\n   * Any children to render in the menu\n   */\n  children?: MenuItem[];\n}\n\n/**\n * A menu group describes a set of menu items with a key and optional title\n */\nexport interface MenuGroup {\n  /**\n   * The key of the menu (e.g. `sidebar`, `topnav`, etc)\n   */\n  key: string;\n  /**\n   * Optional title to render in the menu\n   */\n  title?: string;\n\n  /**\n   * The menu items, can contain one or more items with children\n   */\n  items: MenuItem[];\n}\n\n/**\n * The aggregate application interface\n */\nexport interface ApplicationData {\n  /**\n   * If the sidebar menu is hidden\n   */\n  hidden: boolean;\n\n  /**\n   * An list of menu groups available in the apps\n   */\n  menus: MenuGroup[];\n}\n\n    \n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/ApplicationDataModule.html":{"url":"modules/ApplicationDataModule.html","title":"module - ApplicationDataModule","body":"\n                   \n\n\n\n\n    Modules\n    ApplicationDataModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_ApplicationDataModule\n\n\n\ncluster_ApplicationDataModule_providers\n\n\n\n\nAppService\n\nAppService\n\n\n\nApplicationDataModule\n\nApplicationDataModule\n\nApplicationDataModule -->\n\nAppService->ApplicationDataModule\n\n\n\n\n\nApplicationQuery\n\nApplicationQuery\n\nApplicationDataModule -->\n\nApplicationQuery->ApplicationDataModule\n\n\n\n\n\nApplicationStore\n\nApplicationStore\n\nApplicationDataModule -->\n\nApplicationStore->ApplicationDataModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            libs/ngx-tinynodes-core/src/lib/stores/app/application.module.ts\n        \n\n\n        \n            Description\n        \n        \n            This module provide the Application state and helper functions that\nare used across the Tinynodes site\n\n        \n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            AppService\n                        \n                        \n                            ApplicationQuery\n                        \n                        \n                            ApplicationStore\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { NgModule } from '@angular/core';\nimport { ApplicationQuery } from './application.query';\nimport { AppService } from './application.service';\nimport { ApplicationStore } from './application.store';\n\n/**\n * This module provide the Application state and helper functions that\n * are used across the Tinynodes site\n */\n@NgModule({\n  providers: [AppService, ApplicationQuery, ApplicationStore]\n})\nexport class ApplicationDataModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/ApplicationQuery.html":{"url":"injectables/ApplicationQuery.html","title":"injectable - ApplicationQuery","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  ApplicationQuery\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            libs/ngx-tinynodes-core/src/lib/stores/app/application.query.ts\n        \n\n            \n                Description\n            \n            \n                The {Query} handler for the Application state data\n\n            \n\n            \n                Extends\n            \n            \n                        Query\n            \n\n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(store: ApplicationStore)\n                    \n                \n                        \n                            \n                                Defined in libs/ngx-tinynodes-core/src/lib/stores/app/application.query.ts:10\n                            \n                        \n\n                \n                    \n                            Provide the store for the class instance\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        store\n                                                  \n                                                        \n                                                                        ApplicationStore\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                Store to be provided\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { Query } from '@datorama/akita';\nimport { ApplicationState } from './application.model';\nimport { ApplicationStore } from './application.store';\n\n/**\n * The {Query} handler for the Application state data\n */\n@Injectable()\nexport class ApplicationQuery extends Query {\n  /**\n   * Provide the store for the class instance\n   * @param store Store to be provided\n   */\n  constructor(protected store: ApplicationStore) {\n    super(store);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/ApplicationQuery-1.html":{"url":"injectables/ApplicationQuery-1.html","title":"injectable - ApplicationQuery-1","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  ApplicationQuery\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/ngx-tinynodes/src/app/core/stores/app/application.query.ts\n        \n\n            \n                Description\n            \n            \n                The {Query} handler for the Application state data\n\n            \n\n            \n                Extends\n            \n            \n                        Query\n            \n\n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(store: ApplicationStore)\n                    \n                \n                        \n                            \n                                Defined in apps/ngx-tinynodes/src/app/core/stores/app/application.query.ts:10\n                            \n                        \n\n                \n                    \n                            Provide the store for the class instance\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        store\n                                                  \n                                                        \n                                                                        ApplicationStore\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                Store to be provided\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { Query } from '@datorama/akita';\nimport { ApplicationState } from './application.model';\nimport { ApplicationStore } from './application.store';\n\n/**\n * The {Query} handler for the Application state data\n */\n@Injectable()\nexport class ApplicationQuery extends Query {\n  /**\n   * Provide the store for the class instance\n   * @param store Store to be provided\n   */\n  constructor(protected store: ApplicationStore) {\n    super(store);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/ApplicationState.html":{"url":"interfaces/ApplicationState.html","title":"interface - ApplicationState","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  ApplicationState\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            libs/ngx-tinynodes-core/src/lib/stores/app/application.model.ts\n        \n\n            \n                Description\n            \n            \n                A representation of the application state\n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        demoData\n                                \n                                \n                                        hidden\n                                \n                                \n                                        menus\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        demoData\n                                    \n                                \n                                \n                                    \n                                        demoData:     DemoData[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     DemoData[]\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Data for demos\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        hidden\n                                    \n                                \n                                \n                                    \n                                        hidden:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    If the side menu is hidden\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        menus\n                                    \n                                \n                                \n                                    \n                                        menus:     MenuGroup[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     MenuGroup[]\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    A set of menus loaded from application data\n\n                                \n                            \n                        \n                    \n            \n    \n\n\n    \n        import { Block } from '@tinynodes/ngx-editorjs';\nimport { MenuGroup, MenuItem } from '../../types/app';\n\n/**\n * An Enum of the keys in the application state\n */\nexport enum ApplicationStateKeys {\n  /**\n   * The hidden state key\n   */\n  Hidden = 'hidden',\n\n  /**\n   * The menus key\n   */\n  Menus = 'menus',\n\n  /**\n   * The demo data key\n   */\n  DemoData = 'demoData'\n}\n\n/**\n * Interface for a demo data object\n */\nexport interface DemoData {\n  /**\n   * The name of the demo (e.g. `ngx-editorjs-demo`)\n   */\n  name: string;\n  /**\n   * The data for the demo as ``\n   */\n  data: T;\n}\n\n/**\n * Interface for `ngx-editorjs-demo` data\n * TODO: This should be moved\n */\nexport interface NgxEditorJSDemo {\n  /**\n   * The initial blocks for the demo\n   */\n  blocks: Block[];\n\n  /**\n   * Links for this demo\n   */\n  links: MenuGroup;\n}\n\n/**\n * The demo data for `ngx-editorjs-demo`\n */\nexport interface NgxEditorJSDemoData extends DemoData {}\n\n/**\n * The demos on tinynodes\n */\nexport interface TinynodeDemos {\n  /**\n   * The `ngx-editorjs-demo` data\n   */\n  'ngx-editorjs-demo': NgxEditorJSDemoData;\n}\n\n/**\n * A representation of the application state\n */\nexport interface ApplicationState {\n  /**\n   * If the side menu is hidden\n   */\n  hidden: boolean;\n\n  /**\n   * A set of menus loaded from application data\n   */\n  menus: MenuGroup[];\n\n  /**\n   * Data for demos\n   */\n  demoData: DemoData[];\n}\n\n    \n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/ApplicationState-1.html":{"url":"interfaces/ApplicationState-1.html","title":"interface - ApplicationState-1","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  ApplicationState\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/ngx-tinynodes/src/app/core/stores/app/application.model.ts\n        \n\n            \n                Description\n            \n            \n                A representation of the application state\n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        demoData\n                                \n                                \n                                        hidden\n                                \n                                \n                                        menus\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        demoData\n                                    \n                                \n                                \n                                    \n                                        demoData:     DemoData[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     DemoData[]\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Data for demos\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        hidden\n                                    \n                                \n                                \n                                    \n                                        hidden:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    If the side menu is hidden\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        menus\n                                    \n                                \n                                \n                                    \n                                        menus:     MenuGroup[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     MenuGroup[]\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    A set of menus loaded from application data\n\n                                \n                            \n                        \n                    \n            \n    \n\n\n    \n        import { Block } from '@tinynodes/ngx-editorjs';\nimport { MenuGroup } from '../../types/app';\n\n/**\n * An Enum of the keys in the application state\n */\nexport enum ApplicationStateKeys {\n  /**\n   * The hidden state key\n   */\n  Hidden = 'hidden',\n\n  /**\n   * The menus key\n   */\n  Menus = 'menus',\n\n  /**\n   * The demo data key\n   */\n  DemoData = 'demoData'\n}\n\n/**\n * Interface for a demo data object\n */\nexport interface DemoData {\n  /**\n   * The name of the demo (e.g. `ngx-editorjs-demo`)\n   */\n  name: string;\n  /**\n   * The data for the demo as ``\n   */\n  data: T;\n}\n\n/**\n * Interface for `ngx-editorjs-demo` data\n * TODO: This should be moved\n */\nexport interface NgxEditorJSDemo {\n  /**\n   * The initial blocks for the demo\n   */\n  blocks: Block[];\n}\n\n/**\n * The demo data for `ngx-editorjs-demo`\n */\nexport interface NgxEditorJSDemoData extends DemoData {}\n\n/**\n * The demos on tinynodes\n */\nexport interface TinynodeDemos {\n  /**\n   * The `ngx-editorjs-demo` data\n   */\n  'ngx-editorjs-demo': NgxEditorJSDemoData;\n}\n\n/**\n * A representation of the application state\n */\nexport interface ApplicationState {\n  /**\n   * If the side menu is hidden\n   */\n  hidden: boolean;\n\n  /**\n   * A set of menus loaded from application data\n   */\n  menus: MenuGroup[];\n\n  /**\n   * Data for demos\n   */\n  demoData: DemoData[];\n}\n\n    \n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/ApplicationStore.html":{"url":"injectables/ApplicationStore.html","title":"injectable - ApplicationStore","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  ApplicationStore\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            libs/ngx-tinynodes-core/src/lib/stores/app/application.store.ts\n        \n\n            \n                Description\n            \n            \n                Store for the Application state data\n\n            \n\n            \n                Extends\n            \n            \n                    Store\n            \n\n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in libs/ngx-tinynodes-core/src/lib/stores/app/application.store.ts:10\n                            \n                        \n\n                \n                    \n                            Provide an empty state for the application\n\n                    \n                \n            \n        \n\n\n\n\n    \n\n\n    \n        import { Store, StoreConfig } from '@datorama/akita';\nimport { Injectable } from '@angular/core';\nimport { ApplicationState } from './application.model';\n\n/**\n * Store for the Application state data\n */\n@Injectable()\n@StoreConfig({ name: 'application' })\nexport class ApplicationStore extends Store {\n  /**\n   * Provide an empty state for the application\n   */\n  constructor() {\n    super({\n      hidden: false,\n      menus: [],\n      demoData: []\n    });\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/ApplicationStore-1.html":{"url":"injectables/ApplicationStore-1.html","title":"injectable - ApplicationStore-1","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  ApplicationStore\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/ngx-tinynodes/src/app/core/stores/app/application.store.ts\n        \n\n            \n                Description\n            \n            \n                Store for the Application state data\n\n            \n\n            \n                Extends\n            \n            \n                    Store\n            \n\n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in apps/ngx-tinynodes/src/app/core/stores/app/application.store.ts:10\n                            \n                        \n\n                \n                    \n                            Provide an empty state for the application\n\n                    \n                \n            \n        \n\n\n\n\n    \n\n\n    \n        import { Store, StoreConfig } from '@datorama/akita';\nimport { Injectable } from '@angular/core';\nimport { ApplicationState } from './application.model';\n\n/**\n * Store for the Application state data\n */\n@Injectable()\n@StoreConfig({ name: 'application' })\nexport class ApplicationStore extends Store {\n  /**\n   * Provide an empty state for the application\n   */\n  constructor() {\n    super({\n      hidden: false,\n      menus: [],\n      demoData: []\n    });\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/BasePlugin.html":{"url":"interfaces/BasePlugin.html","title":"interface - BasePlugin","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  BasePlugin\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            libs/ngx-editorjs/src/lib/types/plugins.ts\n        \n\n            \n                Description\n            \n            \n                Defines the interface for required and optional plugin methods.\nThese methods allow a plugin to return a EditorJS plugin and an optional shortcut\n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        plugin\n                                \n                                \n                                            Optional\n                                        shortcut\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        plugin\n                                    \n                                \n                                \n                                    \n                                        plugin:         function\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         function\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    The plugin settings to be returned\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        shortcut\n                                    \n                                \n                                \n                                    \n                                        shortcut:         function\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         function\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    Optional shortcut for the plugin\n\n                                \n                            \n                        \n                    \n            \n    \n\n\n    \n        import { InjectionToken } from '@angular/core';\nimport { ToolConstructable, ToolSettings } from '@editorjs/editorjs';\n\n/**\n * A Module plugin configuration\n */\nexport interface PluginConfig {\n  /**\n   * The key of the plugin and the plugin class extending `BasePlugin`\n   */\n  [key: string]: BasePlugin;\n}\n\n/**\n * A map of all the tools settings\n */\nexport interface ToolSettingsMap {\n  /**\n   * The key of the plugin and the plugin exported tool settings\n   */\n  [key: string]: ToolConstructable | ToolSettings;\n}\n\n/**\n * Defines the interface for required and optional plugin methods.\n * These methods allow a plugin to return a EditorJS plugin and an optional shortcut\n */\nexport interface BasePlugin {\n  /**\n   * The plugin settings to be returned\n   */\n  plugin: () => ToolConstructable | ToolSettings;\n\n  /**\n   * Optional shortcut for the plugin\n   */\n  shortcut?: () => string;\n}\n\n/**\n * The injection token for adding plugins via your own application\n */\nexport const UserPlugins = new InjectionToken('UserPlugins');\n\n    \n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/BasePlugin-1.html":{"url":"interfaces/BasePlugin-1.html","title":"interface - BasePlugin-1","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  BasePlugin\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            libs/ngx-editorjs-plugins/src/lib/types/plugins.ts\n        \n\n            \n                Description\n            \n            \n                Defines the interface for required and optional plugin methods.\nThese methods allow a plugin to return a EditorJS plugin and an optional shortcut\n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        plugin\n                                \n                                \n                                            Optional\n                                        shortcut\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        plugin\n                                    \n                                \n                                \n                                    \n                                        plugin:         function\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         function\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    The plugin settings to be returned\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        shortcut\n                                    \n                                \n                                \n                                    \n                                        shortcut:         function\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         function\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    Optional shortcut for the plugin\n\n                                \n                            \n                        \n                    \n            \n    \n\n\n    \n        import { InjectionToken } from '@angular/core';\nimport { ToolSettings, ToolConstructable } from '@editorjs/editorjs';\n\n/**\n * A Module plugin configuration\n */\nexport interface PluginConfig {\n  /**\n   * The key of the plugin and the plugin class extending `BasePlugin`\n   */\n  [key: string]: BasePlugin;\n}\n\n/**\n * A map of all the tools settings\n */\nexport interface ToolSettingsMap {\n  /**\n   * The key of the plugin and the plugin exported tool settings\n   */\n  [key: string]: ToolConstructable | ToolSettings;\n}\n\n/**\n * Defines the interface for required and optional plugin methods.\n * These methods allow a plugin to return a EditorJS plugin and an optional shortcut\n */\nexport interface BasePlugin {\n  /**\n   * The plugin settings to be returned\n   */\n  plugin: () => ToolConstructable | ToolSettings;\n\n  /**\n   * Optional shortcut for the plugin\n   */\n  shortcut?: () => string;\n}\n\n/**\n * The Injection token for initial plugins as defined in the ngx-editorjs module\n */\nexport const InitialPlugins = new InjectionToken('InitialPlugins');\n\n/**\n * The injection token for adding plugins via your own application\n */\nexport const UserPlugins = new InjectionToken('UserPlugins');\n\n    \n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/Block.html":{"url":"interfaces/Block.html","title":"interface - Block","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  Block\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            libs/ngx-editorjs/src/lib/types/blocks.ts\n        \n\n            \n                Description\n            \n            \n                Base block type for EditorJS\n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        data\n                                \n                                \n                                        type\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n            \n    Indexable\n        \n            \n                \n                    \n                        [key: string]:        any\n\n                    \n                \n                        \n                            \n                                Defined in libs/ngx-editorjs/src/lib/types/blocks.ts:13\n                            \n                        \n                \n                    \n                        Additional properties on the type\n\n                    \n                \n            \n        \n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        data\n                                    \n                                \n                                \n                                    \n                                        data:     T\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     T\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    The data interface for the block type\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        type\n                                    \n                                \n                                \n                                    \n                                        type:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    The EditorJS block type\n\n                                \n                            \n                        \n                    \n            \n    \n\n\n    \n        export interface Block {\n  /**\n   * The EditorJS block type\n   */\n  type: string;\n\n  /**\n   * The data interface for the block type\n   */\n  data: T;\n\n  /**\n   * Additional properties on the type\n   */\n  [key: string]: any;\n}\n\n/**\n * Available list styles, supports `ordered` and `unordered`.\n * A custom string can also be added\n */\nexport type ListStyle = 'ordered' | 'unordered' | string;\n\n/**\n * Default data type for a list block\n */\nexport interface List {\n  /**\n   * The list style\n   */\n  style: ListStyle;\n  /**\n   * List items of type T\n   */\n  items: T[];\n}\n\n/**\n * The default list block is provided by the EditorJS list plugin\n */\nexport interface ListBlock extends Block> {\n  /**\n   * The EditorJS block type\n   */\n  type: 'list';\n}\n\n/**\n * Default data type for a paragraph block\n */\ninterface Paragraph {\n  /**\n   * The paragraph text\n   */\n  text: string;\n}\n\n/**\n * Interface for a paragraph block\n */\nexport interface ParagraphBlock extends Block {\n  /**\n   * The EditorJS block type\n   */\n  type: 'paragraph';\n}\n\n/**\n * Default data type for a header block\n */\ninterface Header {\n  /**\n   * The header text\n   */\n  text: string;\n  /**\n   * The header level from 1-6\n   */\n  level: number;\n}\n\n/**\n * Interface for a header block\n */\nexport interface HeaderBlock extends Block {\n  /**\n   * The EditorJS block type\n   */\n  type: 'header';\n}\n\n/**\n * Default data type for a header block\n */\nexport interface Image {\n  /**\n   * The image URL\n   */\n  url: string;\n  /**\n   * Optional image caption\n   */\n  caption?: string;\n  /**\n   * Optional border property\n   */\n  withBorder?: boolean;\n\n  /**\n   * Optional background property\n   */\n  withBackground?: boolean;\n\n  /**\n   * Optional stretch property\n   */\n  stretched?: boolean;\n}\n\n/**\n * Interface for a image block\n */\nexport interface ImageBlock extends Block {\n  /**\n   * The EditorJS block type\n   */\n  type: 'image';\n}\n\n/**\n * Type of all the basic block type\n */\nexport type BlockTypes = ParagraphBlock | HeaderBlock | ImageBlock | ListBlock | Block;\n\n    \n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/BlocksMap.html":{"url":"interfaces/BlocksMap.html","title":"interface - BlocksMap","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  BlocksMap\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            libs/ngx-editorjs/src/lib/types/maps.ts\n        \n\n            \n                Description\n            \n            \n                A map containing BehaviorSubject of Block elements from EditorJS\n\n            \n\n\n\n\n            \n    Indexable\n        \n            \n                \n                    \n                        [key: string]:        BehaviorSubject\n\n                    \n                \n                        \n                            \n                                Defined in libs/ngx-editorjs/src/lib/types/maps.ts:18\n                            \n                        \n                \n                    \n                        A map key containing a {BehaviorSubject} of {Block[]}\n\n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import EditorJS, { OutputData } from '@editorjs/editorjs';\nimport { BehaviorSubject } from 'rxjs';\nimport { Block } from './blocks';\n\n/**\n * A map containing instances of `EditorJS`\n */\nexport interface EditorMap {\n  /**\n   * A map key containing a {BehaviorSubject} of {EditorJS}\n   */\n  [key: string]: BehaviorSubject;\n}\n\n/**\n * A map containing `BehaviorSubject` of `Block` elements from `EditorJS`\n */\nexport interface BlocksMap {\n  /**\n   * A map key containing a {BehaviorSubject} of {Block[]}\n   */\n  [key: string]: BehaviorSubject;\n}\n\n/**\n * A map containing `BehaviorSubject` of `boolean` values of the ready state of `EditorJS`\n */\nexport interface ReadyMap {\n  /**\n   * A map key containing a {BehaviorSubject} of {boolean}\n   */\n  [key: string]: BehaviorSubject;\n}\n\n/**\n * A map containing `BehaviorSubject` of `boolean` values of the save state of `EditorJS`\n */\nexport interface SavedMap {\n  /**\n   * A map key containing a {BehaviorSubject} of {boolean}\n   */\n  [key: string]: BehaviorSubject;\n}\n\n/**\n * An EditorJS change event\n */\nexport interface EditorJSChange {\n  /**\n   * Time of the change\n   */\n  time: number;\n  /**\n   * Blocks in the change\n   */\n  blocks: Block[];\n}\n\n/**\n * A map containing `BehaviorSubject` of `number` which is the timestamp of the last `EditorJS` change\n */\nexport interface ChangeMap {\n  /**\n   * A map key containing a {BehaviorSubject} of {number}\n   */\n  [key: string]: BehaviorSubject;\n}\n\n    \n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/ChangeMap.html":{"url":"interfaces/ChangeMap.html","title":"interface - ChangeMap","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  ChangeMap\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            libs/ngx-editorjs/src/lib/types/maps.ts\n        \n\n            \n                Description\n            \n            \n                A map containing BehaviorSubject of number which is the timestamp of the last EditorJS change\n\n            \n\n\n\n\n            \n    Indexable\n        \n            \n                \n                    \n                        [key: string]:    BehaviorSubject\n\n                    \n                \n                        \n                            \n                                Defined in libs/ngx-editorjs/src/lib/types/maps.ts:62\n                            \n                        \n                \n                    \n                        A map key containing a {BehaviorSubject} of {number}\n\n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import EditorJS, { OutputData } from '@editorjs/editorjs';\nimport { BehaviorSubject } from 'rxjs';\nimport { Block } from './blocks';\n\n/**\n * A map containing instances of `EditorJS`\n */\nexport interface EditorMap {\n  /**\n   * A map key containing a {BehaviorSubject} of {EditorJS}\n   */\n  [key: string]: BehaviorSubject;\n}\n\n/**\n * A map containing `BehaviorSubject` of `Block` elements from `EditorJS`\n */\nexport interface BlocksMap {\n  /**\n   * A map key containing a {BehaviorSubject} of {Block[]}\n   */\n  [key: string]: BehaviorSubject;\n}\n\n/**\n * A map containing `BehaviorSubject` of `boolean` values of the ready state of `EditorJS`\n */\nexport interface ReadyMap {\n  /**\n   * A map key containing a {BehaviorSubject} of {boolean}\n   */\n  [key: string]: BehaviorSubject;\n}\n\n/**\n * A map containing `BehaviorSubject` of `boolean` values of the save state of `EditorJS`\n */\nexport interface SavedMap {\n  /**\n   * A map key containing a {BehaviorSubject} of {boolean}\n   */\n  [key: string]: BehaviorSubject;\n}\n\n/**\n * An EditorJS change event\n */\nexport interface EditorJSChange {\n  /**\n   * Time of the change\n   */\n  time: number;\n  /**\n   * Blocks in the change\n   */\n  blocks: Block[];\n}\n\n/**\n * A map containing `BehaviorSubject` of `number` which is the timestamp of the last `EditorJS` change\n */\nexport interface ChangeMap {\n  /**\n   * A map key containing a {BehaviorSubject} of {number}\n   */\n  [key: string]: BehaviorSubject;\n}\n\n    \n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/Changed.html":{"url":"classes/Changed.html","title":"class - Changed","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  Changed\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            libs/ngx-editorjs-ngrx/src/lib/actions/ngx-editorjs.actions.ts\n        \n\n\n\n            \n                Implements\n            \n            \n                        Action\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                payload\n                            \n                            \n                                    Readonly\n                                type\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(payload: literal type)\n                    \n                \n                        \n                            \n                                Defined in libs/ngx-editorjs-ngrx/src/lib/actions/ngx-editorjs.actions.ts:33\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        payload\n                                                  \n                                                        \n                                                                    literal type\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            payload\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     literal type\n\n                        \n                    \n                        \n                            \n                                    Defined in libs/ngx-editorjs-ngrx/src/lib/actions/ngx-editorjs.actions.ts:34\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                            type\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : EditorJSActionTypes.Changed\n                        \n                    \n                        \n                            \n                                    Defined in libs/ngx-editorjs-ngrx/src/lib/actions/ngx-editorjs.actions.ts:33\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { Action } from '@ngrx/store';\nimport { OutputData } from '@editorjs/editorjs';\n\nexport enum EditorJSActionTypes {\n  SaveStart = '[ngx-editorjs] Start Save',\n  SaveEnd = '[ngx-editorjs] Start End',\n  NotReady = '[ngx-editorjs] Not Ready',\n  Ready = '[ngx-editorjs] Ready',\n  Changed = '[ngx-editorjs] Changed'\n}\n\nexport class SaveStart implements Action {\n  readonly type = EditorJSActionTypes.SaveStart;\n  constructor(public payload: { holder: string }) {}\n}\n\nexport class SaveEnd implements Action {\n  readonly type = EditorJSActionTypes.SaveEnd;\n  constructor(public payload: { holder: string; data: OutputData }) {}\n}\n\nexport class NotReady implements Action {\n  readonly type = EditorJSActionTypes.NotReady;\n  constructor(public payload: { holder: string }) {}\n}\n\nexport class Ready implements Action {\n  readonly type = EditorJSActionTypes.Ready;\n  constructor(public payload: { holder: string }) {}\n}\n\nexport class Changed implements Action {\n  readonly type = EditorJSActionTypes.Changed;\n  constructor(public payload: { holder: string; data: OutputData }) {}\n}\n\nexport type NgxEditorJSActions = SaveStart | SaveEnd | NotReady | Ready | Changed;\n\n    \n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/CreateEditorJSOptions.html":{"url":"interfaces/CreateEditorJSOptions.html","title":"interface - CreateEditorJSOptions","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  CreateEditorJSOptions\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            libs/ngx-editorjs/src/lib/types/editorjs-service.ts\n        \n\n            \n                Description\n            \n            \n                EditorJS options\n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                            Optional\n                                        autoSave\n                                \n                                \n                                        config\n                                \n                                \n                                            Optional\n                                        includeTools\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        autoSave\n                                    \n                                \n                                \n                                    \n                                        autoSave:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    Autosave on change, is set to false\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        config\n                                    \n                                \n                                \n                                    \n                                        config:     EditorConfig\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     EditorConfig\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Configuration\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        includeTools\n                                    \n                                \n                                \n                                    \n                                        includeTools:     string[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string[]\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    Tools to include, Optional - if not set all tools will be used\n\n                                \n                            \n                        \n                    \n            \n    \n\n\n    \n        import { EditorConfig } from '@editorjs/editorjs';\n\n/**\n * EditorJS options\n */\nexport interface CreateEditorJSOptions {\n  /**\n   * Configuration\n   */\n  config: EditorConfig;\n  /**\n   * Tools to include, Optional - if not set all tools will be used\n   */\n  includeTools?: string[];\n  /**\n   * Autosave on change, is set to false\n   */\n  autoSave?: number;\n}\n\n    \n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/DemoData.html":{"url":"interfaces/DemoData.html","title":"interface - DemoData","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  DemoData\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            libs/ngx-tinynodes-core/src/lib/stores/app/application.model.ts\n        \n\n            \n                Description\n            \n            \n                Interface for a demo data object\n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        data\n                                \n                                \n                                        name\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        data\n                                    \n                                \n                                \n                                    \n                                        data:     T\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     T\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    The data for the demo as \n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        name\n                                    \n                                \n                                \n                                    \n                                        name:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    The name of the demo (e.g. ngx-editorjs-demo)\n\n                                \n                            \n                        \n                    \n            \n    \n\n\n    \n        import { Block } from '@tinynodes/ngx-editorjs';\nimport { MenuGroup, MenuItem } from '../../types/app';\n\n/**\n * An Enum of the keys in the application state\n */\nexport enum ApplicationStateKeys {\n  /**\n   * The hidden state key\n   */\n  Hidden = 'hidden',\n\n  /**\n   * The menus key\n   */\n  Menus = 'menus',\n\n  /**\n   * The demo data key\n   */\n  DemoData = 'demoData'\n}\n\n/**\n * Interface for a demo data object\n */\nexport interface DemoData {\n  /**\n   * The name of the demo (e.g. `ngx-editorjs-demo`)\n   */\n  name: string;\n  /**\n   * The data for the demo as ``\n   */\n  data: T;\n}\n\n/**\n * Interface for `ngx-editorjs-demo` data\n * TODO: This should be moved\n */\nexport interface NgxEditorJSDemo {\n  /**\n   * The initial blocks for the demo\n   */\n  blocks: Block[];\n\n  /**\n   * Links for this demo\n   */\n  links: MenuGroup;\n}\n\n/**\n * The demo data for `ngx-editorjs-demo`\n */\nexport interface NgxEditorJSDemoData extends DemoData {}\n\n/**\n * The demos on tinynodes\n */\nexport interface TinynodeDemos {\n  /**\n   * The `ngx-editorjs-demo` data\n   */\n  'ngx-editorjs-demo': NgxEditorJSDemoData;\n}\n\n/**\n * A representation of the application state\n */\nexport interface ApplicationState {\n  /**\n   * If the side menu is hidden\n   */\n  hidden: boolean;\n\n  /**\n   * A set of menus loaded from application data\n   */\n  menus: MenuGroup[];\n\n  /**\n   * Data for demos\n   */\n  demoData: DemoData[];\n}\n\n    \n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/DemoData-1.html":{"url":"interfaces/DemoData-1.html","title":"interface - DemoData-1","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  DemoData\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/ngx-tinynodes/src/app/core/stores/app/application.model.ts\n        \n\n            \n                Description\n            \n            \n                Interface for a demo data object\n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        data\n                                \n                                \n                                        name\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        data\n                                    \n                                \n                                \n                                    \n                                        data:     T\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     T\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    The data for the demo as \n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        name\n                                    \n                                \n                                \n                                    \n                                        name:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    The name of the demo (e.g. ngx-editorjs-demo)\n\n                                \n                            \n                        \n                    \n            \n    \n\n\n    \n        import { Block } from '@tinynodes/ngx-editorjs';\nimport { MenuGroup } from '../../types/app';\n\n/**\n * An Enum of the keys in the application state\n */\nexport enum ApplicationStateKeys {\n  /**\n   * The hidden state key\n   */\n  Hidden = 'hidden',\n\n  /**\n   * The menus key\n   */\n  Menus = 'menus',\n\n  /**\n   * The demo data key\n   */\n  DemoData = 'demoData'\n}\n\n/**\n * Interface for a demo data object\n */\nexport interface DemoData {\n  /**\n   * The name of the demo (e.g. `ngx-editorjs-demo`)\n   */\n  name: string;\n  /**\n   * The data for the demo as ``\n   */\n  data: T;\n}\n\n/**\n * Interface for `ngx-editorjs-demo` data\n * TODO: This should be moved\n */\nexport interface NgxEditorJSDemo {\n  /**\n   * The initial blocks for the demo\n   */\n  blocks: Block[];\n}\n\n/**\n * The demo data for `ngx-editorjs-demo`\n */\nexport interface NgxEditorJSDemoData extends DemoData {}\n\n/**\n * The demos on tinynodes\n */\nexport interface TinynodeDemos {\n  /**\n   * The `ngx-editorjs-demo` data\n   */\n  'ngx-editorjs-demo': NgxEditorJSDemoData;\n}\n\n/**\n * A representation of the application state\n */\nexport interface ApplicationState {\n  /**\n   * If the side menu is hidden\n   */\n  hidden: boolean;\n\n  /**\n   * A set of menus loaded from application data\n   */\n  menus: MenuGroup[];\n\n  /**\n   * Data for demos\n   */\n  demoData: DemoData[];\n}\n\n    \n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/EditorJSChange.html":{"url":"interfaces/EditorJSChange.html","title":"interface - EditorJSChange","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  EditorJSChange\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            libs/ngx-editorjs/src/lib/types/maps.ts\n        \n\n            \n                Description\n            \n            \n                An EditorJS change event\n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        blocks\n                                \n                                \n                                        time\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        blocks\n                                    \n                                \n                                \n                                    \n                                        blocks:         Block[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         Block[]\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Blocks in the change\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        time\n                                    \n                                \n                                \n                                    \n                                        time:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Time of the change\n\n                                \n                            \n                        \n                    \n            \n    \n\n\n    \n        import EditorJS, { OutputData } from '@editorjs/editorjs';\nimport { BehaviorSubject } from 'rxjs';\nimport { Block } from './blocks';\n\n/**\n * A map containing instances of `EditorJS`\n */\nexport interface EditorMap {\n  /**\n   * A map key containing a {BehaviorSubject} of {EditorJS}\n   */\n  [key: string]: BehaviorSubject;\n}\n\n/**\n * A map containing `BehaviorSubject` of `Block` elements from `EditorJS`\n */\nexport interface BlocksMap {\n  /**\n   * A map key containing a {BehaviorSubject} of {Block[]}\n   */\n  [key: string]: BehaviorSubject;\n}\n\n/**\n * A map containing `BehaviorSubject` of `boolean` values of the ready state of `EditorJS`\n */\nexport interface ReadyMap {\n  /**\n   * A map key containing a {BehaviorSubject} of {boolean}\n   */\n  [key: string]: BehaviorSubject;\n}\n\n/**\n * A map containing `BehaviorSubject` of `boolean` values of the save state of `EditorJS`\n */\nexport interface SavedMap {\n  /**\n   * A map key containing a {BehaviorSubject} of {boolean}\n   */\n  [key: string]: BehaviorSubject;\n}\n\n/**\n * An EditorJS change event\n */\nexport interface EditorJSChange {\n  /**\n   * Time of the change\n   */\n  time: number;\n  /**\n   * Blocks in the change\n   */\n  blocks: Block[];\n}\n\n/**\n * A map containing `BehaviorSubject` of `number` which is the timestamp of the last `EditorJS` change\n */\nexport interface ChangeMap {\n  /**\n   * A map key containing a {BehaviorSubject} of {number}\n   */\n  [key: string]: BehaviorSubject;\n}\n\n    \n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/EditorJSInstanceConfig.html":{"url":"interfaces/EditorJSInstanceConfig.html","title":"interface - EditorJSInstanceConfig","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  EditorJSInstanceConfig\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            libs/ngx-editorjs/src/lib/types/injector.ts\n        \n\n            \n                Description\n            \n            \n                Configuration for creating an EditorJS instance\n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        editorConfig\n                                \n                                \n                                            Optional\n                                        onChange\n                                \n                                \n                                            Optional\n                                        onReady\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        editorConfig\n                                    \n                                \n                                \n                                    \n                                        editorConfig:     EditorConfig\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     EditorConfig\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    The editor configuration, this is required with at least the holder property\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        onChange\n                                    \n                                \n                                \n                                    \n                                        onChange:         function\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         function\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    The method to call when the editor makes a change\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        onReady\n                                    \n                                \n                                \n                                    \n                                        onReady:         function\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         function\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    The method to call with an editor is ready\n\n                                \n                            \n                        \n                    \n            \n    \n\n\n    \n        import { InjectionToken } from '@angular/core';\nimport EditorJS, { EditorConfig } from '@editorjs/editorjs';\nimport { Block } from './blocks';\n/**\n * Configuration for creating an EditorJS instance\n */\nexport interface EditorJSInstanceConfig {\n  /**\n   * The editor configuration, this is required with at least the `holder` property\n   */\n  editorConfig: EditorConfig;\n  /**\n   * The method to call when the editor makes a change\n   */\n  onChange?: (holder?: string) => void;\n\n  /**\n   * The method to call with an editor is ready\n   */\n  onReady?: (holder?: string) => void;\n}\n\n/**\n * Default values for each internal map\n */\nexport const MAP_DEFAULTS = [['hasChangedMap', { time: 0, blocks: [] }], ['isReadyMap', false], ['hasSavedMap', false]];\n\n/**\n * Injection token for the EditorJS class\n */\nexport const EDITORJS_MODULE_IMPORT = new InjectionToken('EDITORJS_MODULE_IMPORT');\n\nexport const EditorJSInstance = new InjectionToken('EditorJSInstance');\n\n/**\n * Options for a Injector method\n */\nexport interface InjectorMethodOption {\n  /**\n   * The holder for the option\n   */\n  holder: string;\n  /**\n   * Optional blocks\n   */\n  blocks?: Block[];\n  /**\n   * Optional editor\n   */\n  editor?: EditorJS;\n}\n\n/**\n * Options to pass when calling the `EditorJS` instance API\n */\nexport interface InjectorApiCallOptions {\n  /**\n   * Holder for the `EditorJS` instance\n   */\n  holder: string;\n\n  /**\n   * The method to call\n   */\n  method: string;\n  /**\n   * The optional namespace for the API call\n   */\n  namespace?: string;\n}\n\n/**\n * A response from the `EditorJS` api\n */\nexport interface InjectorApiCallResponse extends InjectorApiCallOptions {\n  result: T;\n}\n\n    \n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/EditorJSMaterialForm.html":{"url":"interfaces/EditorJSMaterialForm.html","title":"interface - EditorJSMaterialForm","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  EditorJSMaterialForm\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            libs/ngx-editorjs/src/lib/containers/editorjs-mat-field/editorjs-mat-field.component.ts\n        \n\n            \n                Description\n            \n            \n                Single interface for EditorJSMaterialForm\n\n            \n\n            \n                Extends\n            \n            \n                    MatFormFieldControl\n            \n\n\n\n\n    \n\n\n    \n        import { FocusMonitor } from '@angular/cdk/a11y';\nimport { coerceBooleanProperty } from '@angular/cdk/coercion';\nimport {\n  AfterContentInit,\n  ChangeDetectorRef,\n  Component,\n  DoCheck,\n  forwardRef,\n  HostBinding,\n  Input,\n  OnDestroy,\n  OnInit,\n  Optional,\n  Provider,\n  Self,\n  ViewChild\n} from '@angular/core';\nimport { NgControl } from '@angular/forms';\nimport { MatFormFieldControl } from '@angular/material';\nimport { Subject } from 'rxjs';\nimport { takeUntil } from 'rxjs/operators';\nimport { NgxEditorJSDirective } from '../../directives/ngx-editorjs.directive';\nimport { NgxEditorJSService } from '../../services/editorjs.service';\nimport { NgxEditorJSBaseComponent } from '../base/container.class';\n\n/**\n * Provider for the EditorJS Material Field Component\n */\nexport const EDITORJS_MATERIAL_FIELD_CONTROL: Provider = {\n  provide: MatFormFieldControl,\n  useExisting: forwardRef(() => NgxEditorJSMatFieldComponent),\n  multi: true\n};\n\n/**\n * Single interface for EditorJSMaterialForm\n */\nexport interface EditorJSMaterialForm\n  extends MatFormFieldControl,\n    OnInit,\n    AfterContentInit,\n    OnDestroy,\n    DoCheck {}\n\n/**\n * This component provides a [Material](https://material.angular.io) compatible `` component.\n * It provides a full implementation of all the required properties of a Material component\n *\n * @example\n * \n *  \n * \n */\n@Component({\n  selector: 'ngx-editorjs-mat-field',\n  templateUrl: 'editorjs-mat-field.component.html',\n  styleUrls: ['editorjs-mat-field.component.scss'],\n  host: {\n    '[id]': 'id',\n    '[attr.aria-describedby]': 'describedBy'\n  },\n  providers: [EDITORJS_MATERIAL_FIELD_CONTROL]\n})\nexport class NgxEditorJSMatFieldComponent extends NgxEditorJSBaseComponent implements EditorJSMaterialForm {\n  /**\n   * Internal Static ID for Material for each editor instance\n   */\n  static nextId = 0;\n  /**\n   * Material state change subject\n   */\n  public stateChanges = new Subject();\n\n  /**\n   * Material control type\n   */\n  public controlType = 'ngx-editorjs-mat-field';\n\n  /**\n   * Material error state\n   */\n  public errorState = false;\n\n  /**\n   * Get the component value\n   */\n  get value(): any {\n    return this._value;\n  }\n\n  /**\n   * Set the component value\n   * @param value The value to set\n   */\n  @Input('value')\n  set value(value: any) {\n    this._value = value;\n    this.stateChanges.next();\n  }\n\n  /**\n   * Material placeholder value\n   */\n  private _placeholder: string;\n\n  /**\n   * Get the Material placeholder value\n   */\n  get placeholder() {\n    return this._placeholder;\n  }\n  /**\n   * Set the material Placeholder value\n   * @input placeholder The placeholder state to set\n   */\n  @Input('placeholder')\n  set placeholder(placeholder: string) {\n    this._placeholder = placeholder;\n    this.stateChanges.next();\n  }\n\n  /**\n   * Material focused state\n   */\n  private _focused: boolean;\n  /**\n   * Get the Material focused state\n   */\n  get focused() {\n    return this._focused;\n  }\n  /**\n   * Set the Material focused state\n   * @param focused The focused state to set\n   */\n  @Input('focused')\n  set focused(focused: boolean) {\n    this._focused = coerceBooleanProperty(focused);\n    if (this._focused) {\n      this.onTouch();\n    }\n    this.stateChanges.next();\n  }\n\n  /**\n   * Material Required Value\n   */\n  private _required = false;\n\n  /**\n   * Get the Material required state\n   */\n  get required() {\n    return this._required;\n  }\n  /**\n   * Set the Material requied state\n   * @param required The required state to set\n   */\n  @Input('required')\n  set required(required: boolean) {\n    this._required = coerceBooleanProperty(required);\n    this.stateChanges.next();\n  }\n\n  /**\n   * Material disabled state\n   */\n  private _disabled = false;\n\n  /**\n   * Get the Material disabled state\n   */\n  get disabled() {\n    return this._disabled;\n  }\n  /**\n   * Set the Material disabled state\n   * @param disabled The disabled state to set\n   */\n  @Input('disabled')\n  set disabled(disabled: boolean) {\n    this._disabled = coerceBooleanProperty(disabled);\n    this.stateChanges.next();\n  }\n\n  /**\n   * Material empty state\n   */\n  private _empty: boolean;\n  /**\n   * Get the Material empty state\n   */\n  public get empty() {\n    return this._empty;\n  }\n  /**\n   * Set the Material empty state\n   * @param empty The empty value\n   */\n  public set empty(empty: boolean) {\n    this._empty = empty;\n  }\n\n  /**\n   * Access to the underlying {NgxEditorJSDirective}\n   */\n  @ViewChild(NgxEditorJSDirective) public editorEl: NgxEditorJSDirective;\n\n  /**\n   * Host binding to the unique ID for this editor for material\n   */\n  @HostBinding()\n  id = `ngx-editorjs-mat-field-${NgxEditorJSMatFieldComponent.nextId++}`;\n\n  /**\n   * Gets if the Material label should float\n   */\n  @HostBinding('class.floating')\n  get shouldLabelFloat() {\n    return this.focused || !this.empty;\n  }\n\n  /**\n   * Host binding for ARIA label\n   */\n  @HostBinding('attr.aria-describedby') describedBy = '';\n\n  /**\n   *\n   * @param ids The IDs of the Material components\n   */\n  public setDescribedByIds(ids: string[]) {\n    this.describedBy = ids.join(' ');\n  }\n\n  /**\n   * Material on container click\n   * @param event The {MouseEvent} for the container click\n   */\n  public onContainerClick(event: MouseEvent) {\n    this.onTouch(event);\n    this.hasSaved.emit(false);\n    this.stateChanges.next();\n  }\n\n  /**\n   * Creates the Material field\n   * @param service The {NgxEditorJSService} instance\n   * @param fm Focus monitor for the Material element\n   * @param ngControl The Angular control base class\n   */\n  constructor(\n    protected readonly service: NgxEditorJSService,\n    protected fm: FocusMonitor,\n    protected readonly cd: ChangeDetectorRef,\n    @Optional() @Self() public ngControl: NgControl\n  ) {\n    super(service, fm, cd);\n  }\n\n  /**\n   * Called on OnInit\n   */\n  ngOnInit(): void {\n    if (this.ngControl !== null) {\n      this.ngControl.valueAccessor = this;\n    }\n  }\n\n  /**\n   * Inside the AfterContentInit life-cycle we set up a listener for focus\n   * and trigger focus autosave subscribe and unsubscribe\n   */\n  ngAfterContentInit(): void {\n    this.getFocusMonitor(this.editorEl.element)\n      .pipe(takeUntil(this.onDestroy$))\n      .subscribe(focused => {\n        this.focused = focused;\n        this.isTouched.emit(true);\n        this.stateChanges.next();\n        this.cd.markForCheck();\n      });\n  }\n\n  /**\n   * Set the error state based on the underlying control state\n   */\n  ngDoCheck(): void {\n    if (this.ngControl) {\n      this.errorState = this.ngControl.invalid && this.ngControl.touched;\n      this.stateChanges.next();\n      this.cd.markForCheck();\n    }\n  }\n\n  /**\n   * Destroy the focus monitoring and any remaining timer subcription\n   */\n  ngOnDestroy(): void {\n    this.fm.stopMonitoring(this.editorEl.element);\n    if (this.timerSubscription$ && !this.timerSubscription$.closed) {\n      this.timerSubscription$.unsubscribe();\n    }\n    if (!this.onDestroy$.closed) {\n      this.onDestroy$.next(true);\n      this.onDestroy$.complete();\n    }\n  }\n}\n\n    \n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/EditorMap.html":{"url":"interfaces/EditorMap.html","title":"interface - EditorMap","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  EditorMap\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            libs/ngx-editorjs/src/lib/types/maps.ts\n        \n\n            \n                Description\n            \n            \n                A map containing instances of EditorJS\n\n            \n\n\n\n\n            \n    Indexable\n        \n            \n                \n                    \n                        [key: string]:    BehaviorSubject\n\n                    \n                \n                        \n                            \n                                Defined in libs/ngx-editorjs/src/lib/types/maps.ts:8\n                            \n                        \n                \n                    \n                        A map key containing a {BehaviorSubject} of {EditorJS}\n\n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import EditorJS, { OutputData } from '@editorjs/editorjs';\nimport { BehaviorSubject } from 'rxjs';\nimport { Block } from './blocks';\n\n/**\n * A map containing instances of `EditorJS`\n */\nexport interface EditorMap {\n  /**\n   * A map key containing a {BehaviorSubject} of {EditorJS}\n   */\n  [key: string]: BehaviorSubject;\n}\n\n/**\n * A map containing `BehaviorSubject` of `Block` elements from `EditorJS`\n */\nexport interface BlocksMap {\n  /**\n   * A map key containing a {BehaviorSubject} of {Block[]}\n   */\n  [key: string]: BehaviorSubject;\n}\n\n/**\n * A map containing `BehaviorSubject` of `boolean` values of the ready state of `EditorJS`\n */\nexport interface ReadyMap {\n  /**\n   * A map key containing a {BehaviorSubject} of {boolean}\n   */\n  [key: string]: BehaviorSubject;\n}\n\n/**\n * A map containing `BehaviorSubject` of `boolean` values of the save state of `EditorJS`\n */\nexport interface SavedMap {\n  /**\n   * A map key containing a {BehaviorSubject} of {boolean}\n   */\n  [key: string]: BehaviorSubject;\n}\n\n/**\n * An EditorJS change event\n */\nexport interface EditorJSChange {\n  /**\n   * Time of the change\n   */\n  time: number;\n  /**\n   * Blocks in the change\n   */\n  blocks: Block[];\n}\n\n/**\n * A map containing `BehaviorSubject` of `number` which is the timestamp of the last `EditorJS` change\n */\nexport interface ChangeMap {\n  /**\n   * A map key containing a {BehaviorSubject} of {number}\n   */\n  [key: string]: BehaviorSubject;\n}\n\n    \n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/FormContainerComponent.html":{"url":"components/FormContainerComponent.html","title":"component - FormContainerComponent","body":"\n                   \n\n\n\n\n\n  Components\n  FormContainerComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    libs/ngx-editorjs-demo/src/lib/containers/form-container/form-container.component.ts\n\n\n    \n        Description\n    \n    \n        The Page Container component provides the main routable page for loading\nthe ngx-editorjs-demo\n\n    \n\n\n    \n        Implements\n    \n    \n                    AfterContentInit\n    \n\n\n\n    Metadata\n    \n        \n\n            \n                changeDetection\n                ChangeDetectionStrategy.OnPush\n            \n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                ngx-form-container\n            \n\n            \n                styleUrls\n                form-container.component.scss\n            \n\n\n\n            \n                templateUrl\n                form-container.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                editorForm\n                            \n                            \n                                    Public\n                                holder\n                            \n                            \n                                    Public\n                                title\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                clear\n                            \n                            \n                                    Public\n                                disableAutosave\n                            \n                            \n                                    Public\n                                enableAutosave\n                            \n                            \n                                ngAfterContentInit\n                            \n                            \n                                    Public\n                                reset\n                            \n                            \n                                    Public\n                                save\n                            \n                            \n                                    Public\n                                update\n                            \n                        \n                    \n                \n\n\n                \n                    \n                        Outputs\n                    \n                \n                \n                    \n                        \n                            \n                                hasSaved\n                            \n                        \n                    \n                \n\n\n\n                    \n                        \n                            Accessors\n                        \n                    \n                    \n                        \n                            \n                                \n                                    autosave\n                                \n                                \n                                    menu\n                                \n                                \n                                    pages\n                                \n                                \n                                    blocks\n                                \n                            \n                        \n                    \n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(pagesService: PagesService, app: AppService, editorService: NgxEditorJSService, cd: ChangeDetectorRef, fb: FormBuilder)\n                    \n                \n                        \n                            \n                                Defined in libs/ngx-editorjs-demo/src/lib/containers/form-container/form-container.component.ts:86\n                            \n                        \n\n                \n                    \n                            The constructor sets up the blocks to the initial demo data\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        pagesService\n                                                  \n                                                        \n                                                                        PagesService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                The pages service\n\n                                                        \n                                                \n                                                \n                                                        app\n                                                  \n                                                        \n                                                                        AppService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                The application service\n\n                                                        \n                                                \n                                                \n                                                        editorService\n                                                  \n                                                        \n                                                                        NgxEditorJSService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                The Editor service\n\n                                                        \n                                                \n                                                \n                                                        cd\n                                                  \n                                                        \n                                                                        ChangeDetectorRef\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                The change detection ref\n\n                                                        \n                                                \n                                                \n                                                        fb\n                                                  \n                                                        \n                                                                        FormBuilder\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                The form builder\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n    \n    Outputs\n        \n            \n                \n                    \n                        \n                        hasSaved\n                    \n                \n                \n                    \n                        Type :         EventEmitter\n\n                    \n                \n                        \n                            \n                                    Defined in libs/ngx-editorjs-demo/src/lib/containers/form-container/form-container.component.ts:64\n                            \n                        \n                \n                    \n                        Get hasSaved state\n\n                    \n                \n            \n        \n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            clear\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    clear()\n                \n            \n\n\n            \n                \n                    Defined in libs/ngx-editorjs-demo/src/lib/containers/form-container/form-container.component.ts:163\n                \n            \n\n\n            \n                \n                    Clear the editor\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            disableAutosave\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    disableAutosave()\n                \n            \n\n\n            \n                \n                    Defined in libs/ngx-editorjs-demo/src/lib/containers/form-container/form-container.component.ts:77\n                \n            \n\n\n            \n                \n                    Disable autosave\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            enableAutosave\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    enableAutosave(autosaveTime: number)\n                \n            \n\n\n            \n                \n                    Defined in libs/ngx-editorjs-demo/src/lib/containers/form-container/form-container.component.ts:70\n                \n            \n\n\n            \n                \n                    Enable autosave, set the value from the autosaveTime\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    autosaveTime\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        Time to set for autosave\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngAfterContentInit\n                        \n                        \n                    \n                \n            \n            \n                \nngAfterContentInit()\n                \n            \n\n\n            \n                \n                    Defined in libs/ngx-editorjs-demo/src/lib/containers/form-container/form-container.component.ts:233\n                \n            \n\n\n            \n                \n                    After the content has init overide the blocks with blocks from the service\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            reset\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    reset()\n                \n            \n\n\n            \n                \n                    Defined in libs/ngx-editorjs-demo/src/lib/containers/form-container/form-container.component.ts:180\n                \n            \n\n\n            \n                \n                    Reset the editor with demo data\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            save\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    save()\n                \n            \n\n\n            \n                \n                    Defined in libs/ngx-editorjs-demo/src/lib/containers/form-container/form-container.component.ts:155\n                \n            \n\n\n            \n                \n                    Call the editor save method\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            update\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    update(blocks: Block[])\n                \n            \n\n\n            \n                \n                    Defined in libs/ngx-editorjs-demo/src/lib/containers/form-container/form-container.component.ts:172\n                \n            \n\n\n            \n                \n                    Update the component\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    blocks\n                                    \n                                                Block[]\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            editorForm\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : this.fb.group({\n    pageName: [''],\n    pageTags: new FormControl([]),\n    pageEditor: new FormControl([])\n  })\n                        \n                    \n                        \n                            \n                                    Defined in libs/ngx-editorjs-demo/src/lib/containers/form-container/form-container.component.ts:125\n                            \n                        \n\n                \n                    \n                        Editor form group\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            holder\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Default value : 'ngx-editorjs-demo'\n                        \n                    \n                        \n                            \n                                    Defined in libs/ngx-editorjs-demo/src/lib/containers/form-container/form-container.component.ts:43\n                            \n                        \n\n                \n                    \n                        The holder ID for this demo\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            title\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Default value : 'ngx-editorjs Material Field'\n                        \n                    \n                        \n                            \n                                    Defined in libs/ngx-editorjs-demo/src/lib/containers/form-container/form-container.component.ts:34\n                            \n                        \n\n                \n                    \n                        Title of the page\n\n                    \n                \n\n            \n        \n\n\n    \n    \n        Accessors\n    \n        \n            \n                \n                    \n                        \n                        autosave\n                    \n                \n\n                \n                    \n                        getautosave()\n                    \n                \n                            \n                                \n                                    Defined in libs/ngx-editorjs-demo/src/lib/containers/form-container/form-container.component.ts:84\n                                \n                            \n                    \n                        \n                                Get the current autosave value\n\n\n                        \n                    \n\n            \n        \n        \n            \n                \n                    \n                        \n                        menu\n                    \n                \n\n                \n                    \n                        getmenu()\n                    \n                \n                            \n                                \n                                    Defined in libs/ngx-editorjs-demo/src/lib/containers/form-container/form-container.component.ts:134\n                                \n                            \n                    \n                        \n                                Get the page links\n\n\n                        \n                    \n\n            \n        \n        \n            \n                \n                    \n                        \n                        pages\n                    \n                \n\n                \n                    \n                        getpages()\n                    \n                \n                            \n                                \n                                    Defined in libs/ngx-editorjs-demo/src/lib/containers/form-container/form-container.component.ts:141\n                                \n                            \n                    \n                        \n                                Get a list of pages\n\n\n                                \n                                    Returns :         Observable\n\n                                \n                        \n                    \n\n            \n        \n        \n            \n                \n                    \n                        \n                        blocks\n                    \n                \n\n                \n                    \n                        getblocks()\n                    \n                \n                            \n                                \n                                    Defined in libs/ngx-editorjs-demo/src/lib/containers/form-container/form-container.component.ts:145\n                                \n                            \n\n            \n        \n\n\n\n\n    \n        import {\n  AfterContentInit,\n  ChangeDetectionStrategy,\n  ChangeDetectorRef,\n  Component,\n  Output,\n  EventEmitter\n} from '@angular/core';\nimport { FormBuilder, FormControl } from '@angular/forms';\nimport { Block, NgxEditorJSService } from '@tinynodes/ngx-editorjs/src';\nimport { AppService } from '@tinynodes/ngx-tinynodes-core/src';\nimport { NgxEditorJSDemo } from '@tinynodes/ngx-tinynodes-core/src/lib/stores/app/application.model';\nimport { MenuGroup } from 'apps/ngx-tinynodes/src/app/core/types/app';\nimport { BehaviorSubject, Observable, Subject } from 'rxjs';\nimport { distinctUntilChanged, take, takeUntil, pluck, tap, withLatestFrom, filter } from 'rxjs/operators';\nimport { Page } from '../../store/pages/pages.models';\nimport { PagesService } from '../../store/pages/pages.service';\nimport { OutputData } from '@editorjs/editorjs';\n\n/**\n * The Page Container component provides the main routable page for loading\n * the `ngx-editorjs-demo`\n */\n@Component({\n  selector: 'ngx-form-container',\n  templateUrl: 'form-container.component.html',\n  styleUrls: ['form-container.component.scss'],\n  changeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class FormContainerComponent implements AfterContentInit {\n  /**\n   * Title of the page\n   */\n  public title = 'ngx-editorjs Material Field';\n  /**\n   * Internal onDestroy$ subject\n   */\n  private onDestroy$ = new Subject();\n\n  /**\n   * The holder ID for this demo\n   */\n  public holder = 'ngx-editorjs-demo';\n\n  /**\n   * Panel open state\n   */\n  private panelOpen$ = new BehaviorSubject(true);\n\n  /**\n   * Menu state for the component\n   */\n  private menu$ = new BehaviorSubject(undefined);\n\n  /**\n   * Autosave state\n   */\n  private autoSave$ = new BehaviorSubject(0);\n\n  /**\n   * Get `hasSaved` state\n   */\n  @Output()\n  public hasSaved = new EventEmitter();\n\n  /**\n   * Enable autosave, set the value from the autosaveTime\n   * @param autosaveTime Time to set for autosave\n   */\n  public enableAutosave(autosaveTime: number) {\n    this.autoSave$.next(autosaveTime);\n  }\n\n  /**\n   * Disable autosave\n   */\n  public disableAutosave() {\n    this.autoSave$.next(0);\n  }\n\n  /**\n   * Get the current autosave value\n   */\n  public get autosave() {\n    return this.autoSave$.asObservable();\n  }\n\n  /**\n   * The constructor sets up the blocks to the initial demo data\n   * @param pagesService The pages service\n   * @param app The application service\n   * @param editorService The Editor service\n   * @param cd The change detection ref\n   * @param fb The form builder\n   */\n  constructor(\n    private readonly pagesService: PagesService,\n    private app: AppService,\n    private readonly editorService: NgxEditorJSService,\n    private readonly cd: ChangeDetectorRef,\n    private readonly fb: FormBuilder\n  ) {\n    this.editorService\n      .hasChanged({ holder: this.holder })\n      .pipe(takeUntil(this.onDestroy$))\n      .subscribe(hasChanged => {\n        this.editorForm.patchValue({\n          pageEditor: hasChanged.blocks\n        });\n        this.cd.markForCheck();\n      });\n\n    this.editorService\n      .hasSaved({ holder: this.holder })\n      .pipe(takeUntil(this.onDestroy$))\n      .subscribe(hasSaved => {\n        this.hasSaved.next(hasSaved);\n        this.cd.markForCheck();\n      });\n  }\n\n  /**\n   * Editor form group\n   */\n  public editorForm = this.fb.group({\n    pageName: [''],\n    pageTags: new FormControl([]),\n    pageEditor: new FormControl([])\n  });\n\n  /**\n   * Get the page links\n   */\n  public get menu() {\n    return this.menu$;\n  }\n\n  /**\n   * Get a list of pages\n   */\n  get pages(): Observable {\n    return this.pagesService.pages;\n  }\n\n  public get blocks() {\n    return this.editorService.hasChanged({ holder: this.holder }).pipe(\n      pluck('blocks'),\n      takeUntil(this.onDestroy$)\n    );\n  }\n\n  /**\n   * Call the editor save method\n   */\n  public save() {\n    this.editorService.save({ holder: this.holder });\n    this.cd.markForCheck();\n  }\n\n  /**\n   * Clear the editor\n   */\n  public clear() {\n    this.editorService.clear({ holder: this.holder });\n    this.cd.markForCheck();\n  }\n\n  /**\n   * Update the component\n   * @param blocks\n   */\n  public update(blocks: Block[]) {\n    this.editorService.update({ holder: this.holder, blocks });\n    this.cd.markForCheck();\n  }\n\n  /**\n   * Reset the editor with demo data\n   */\n  public reset() {\n    this.app\n      .getDemoData('ngx-editorjs-demo')\n      .pipe(take(1))\n      .subscribe(data => {\n        const blocks = [\n          ...data.blocks,\n          {\n            type: 'header',\n            data: {\n              text: 'Material Form Component',\n              level: 1\n            }\n          },\n          {\n            type: 'paragraph',\n            data: {\n              text:\n                'This component is provided as a Material form component.  Here is the configuration for this field on this page:'\n            }\n          },\n          {\n            type: 'code',\n            data: {\n              code: `\n  \n    \n    \n  \n`\n            }\n          },\n          {\n            type: 'paragraph',\n            data: {\n              text: 'When you save the form, you can see the output below of the form instance values'\n            }\n          }\n        ];\n        this.menu$.next(data.links);\n        this.editorService.update({ holder: this.holder, blocks }, false);\n        this.cd.markForCheck();\n      });\n  }\n\n  /**\n   * After the content has init overide the blocks with blocks from the service\n   */\n  ngAfterContentInit() {\n    this.editorService.isReady({ holder: this.holder }).subscribe(isReady => {\n      if (isReady) {\n        this.reset();\n      }\n    });\n  }\n}\n\n    \n\n    \n        \n  \n    \n      @tinynodes/ngx-editor Material Field Demo\n      A single page demo of the EditorJS Material Field component\n    \n\n    \n      \n    \n\n    \n      Demo\n      Save\n      Clear\n      Reset\n      \n        Enable Autosave\n      \n       0\" (click)=\"disableAutosave()\">Disable Autosave\n      \n        save\n      \n      \n\n      \n        Autosave Time\n        \n        seconds\n         0\">\n          EditorJS Autosave is enabled, now when you focus on the component the reactive form value will be updated - You still need to call\n          save to save all the form data.\n      \n    \n    \n      \n        \n          Page Name\n          \n          Enter the name for this page\n        \n        \n          Page Tags\n          \n          Press Enter or , (comma) to add tags\n        \n        \n          Content Editor for {{ editorForm.value.pageName || 'Page Name' }}\n          Click on the editor to active it\n          \n        \n      \n    \n    \n      \n        \n          Output\n          Data from the EditorJS instance\n        \n        \n          {{ changes | json }}\n        \n      \n    \n     \n  \n\n\n\n  \n    Below is an instance of an {{ title }} EditorJS Materia; component. Click on the area and the block tool will appear, or\n    you can just start typing.\n  \n  \n    The default block is a &lt;p> paragraph, you can also add header &lt;h1> - &lt;h6> blocks, list with\n    &lt;ol> / &lt;li> and &lt;code> blocks.\n  \n\n  \n    You can also paste in an &lt;img> url into the editor and it will start the SimpleImage plugin which provides\n    an &lt;img> tag pointing to the image, and with some additional controls.\n  \n  \n    When saving check the output panel below to see the data results. The Autosave feature enables the `EditorJS` instance to update the\n    form value on a regular basis, but to save the data to a service the form would still need submission.\n  \n\n\n    \n\n    \n                \n                    form-container.component.scss\n                \n                :host {\n  width: 100%;\n  height: 100vh;\n}\n\n.output-card {\n  height: 100vh;\n  flex: 1;\n  width: 100%;\n  overflow: scroll;\n}\n\n.form-content form {\n  display: flex;\n  flex-direction: column;\n}\n\n.form-content > * {\n  width: 100%;\n}\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '            @tinynodes/ngx-editor Material Field Demo      A single page demo of the EditorJS Material Field component                            Demo      Save      Clear      Reset              Enable Autosave             0\" (click)=\"disableAutosave()\">Disable Autosave              save                          Autosave Time                seconds         0\">          EditorJS Autosave is enabled, now when you focus on the component the reactive form value will be updated - You still need to call          save to save all the form data.                                      Page Name                    Enter the name for this page                          Page Tags                    Press Enter or , (comma) to add tags                          Content Editor for {{ editorForm.value.pageName || \\'Page Name\\' }}          Click on the editor to active it                                                        Output          Data from the EditorJS instance                          {{ changes | json }}                               Below is an instance of an {{ title }} EditorJS Materia; component. Click on the area and the block tool will appear, or    you can just start typing.        The default block is a  paragraph, you can also add header  -  blocks, list with     /  and  blocks.        You can also paste in an  url into the editor and it will start the SimpleImage plugin which provides    an  tag pointing to the image, and with some additional controls.        When saving check the output panel below to see the data results. The Autosave feature enables the `EditorJS` instance to update the    form value on a regular basis, but to save the data to a service the form would still need submission.  '\n    var COMPONENTS = [{'name': 'AppContainerComponent', 'selector': 'tinynodes-root'},{'name': 'FormContainerComponent', 'selector': 'ngx-form-container'},{'name': 'HomePageComponent', 'selector': 'tinynodes-home-page'},{'name': 'NavBarComponent', 'selector': 'tinynodes-nav-bar'},{'name': 'NgxEditorJSBaseComponent', 'selector': ''},{'name': 'NgxEditorJSComponent', 'selector': 'ngx-editorjs'},{'name': 'NgxEditorJSDemoHomeComponent', 'selector': 'ngx-editorjs-demo-home'},{'name': 'NgxEditorJSDemoInfoComponent', 'selector': 'ngx-editorjs-demo-info'},{'name': 'NgxEditorJSDemoTagComponent', 'selector': 'ngx-editorjs-tag-component'},{'name': 'NgxEditorJSMatFieldComponent', 'selector': 'ngx-editorjs-mat-field'},{'name': 'PageContainerComponent', 'selector': 'ngx-page-container'},{'name': 'SidebarComponent', 'selector': 'tinynodes-sidebar'}];\n    var DIRECTIVES = [{'name': 'NgxEditorJSDirective', 'selector': '[ngxEditorJS]'}];\n    var ACTUAL_COMPONENT = {'name': 'FormContainerComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/Header.html":{"url":"interfaces/Header.html","title":"interface - Header","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  Header\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            libs/ngx-editorjs/src/lib/types/blocks.ts\n        \n\n            \n                Description\n            \n            \n                Default data type for a header block\n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        level\n                                \n                                \n                                        text\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        level\n                                    \n                                \n                                \n                                    \n                                        level:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    The header level from 1-6\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        text\n                                    \n                                \n                                \n                                    \n                                        text:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    The header text\n\n                                \n                            \n                        \n                    \n            \n    \n\n\n    \n        export interface Block {\n  /**\n   * The EditorJS block type\n   */\n  type: string;\n\n  /**\n   * The data interface for the block type\n   */\n  data: T;\n\n  /**\n   * Additional properties on the type\n   */\n  [key: string]: any;\n}\n\n/**\n * Available list styles, supports `ordered` and `unordered`.\n * A custom string can also be added\n */\nexport type ListStyle = 'ordered' | 'unordered' | string;\n\n/**\n * Default data type for a list block\n */\nexport interface List {\n  /**\n   * The list style\n   */\n  style: ListStyle;\n  /**\n   * List items of type T\n   */\n  items: T[];\n}\n\n/**\n * The default list block is provided by the EditorJS list plugin\n */\nexport interface ListBlock extends Block> {\n  /**\n   * The EditorJS block type\n   */\n  type: 'list';\n}\n\n/**\n * Default data type for a paragraph block\n */\ninterface Paragraph {\n  /**\n   * The paragraph text\n   */\n  text: string;\n}\n\n/**\n * Interface for a paragraph block\n */\nexport interface ParagraphBlock extends Block {\n  /**\n   * The EditorJS block type\n   */\n  type: 'paragraph';\n}\n\n/**\n * Default data type for a header block\n */\ninterface Header {\n  /**\n   * The header text\n   */\n  text: string;\n  /**\n   * The header level from 1-6\n   */\n  level: number;\n}\n\n/**\n * Interface for a header block\n */\nexport interface HeaderBlock extends Block {\n  /**\n   * The EditorJS block type\n   */\n  type: 'header';\n}\n\n/**\n * Default data type for a header block\n */\nexport interface Image {\n  /**\n   * The image URL\n   */\n  url: string;\n  /**\n   * Optional image caption\n   */\n  caption?: string;\n  /**\n   * Optional border property\n   */\n  withBorder?: boolean;\n\n  /**\n   * Optional background property\n   */\n  withBackground?: boolean;\n\n  /**\n   * Optional stretch property\n   */\n  stretched?: boolean;\n}\n\n/**\n * Interface for a image block\n */\nexport interface ImageBlock extends Block {\n  /**\n   * The EditorJS block type\n   */\n  type: 'image';\n}\n\n/**\n * Type of all the basic block type\n */\nexport type BlockTypes = ParagraphBlock | HeaderBlock | ImageBlock | ListBlock | Block;\n\n    \n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/HeaderBlock.html":{"url":"interfaces/HeaderBlock.html","title":"interface - HeaderBlock","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  HeaderBlock\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            libs/ngx-editorjs/src/lib/types/blocks.ts\n        \n\n            \n                Description\n            \n            \n                Interface for a header block\n\n            \n\n            \n                Extends\n            \n            \n                        Block\n            \n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        type\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        type\n                                    \n                                \n                                \n                                    \n                                        type:     \n\n                                    \n                                \n\n\n\n\n\n\n\n                            \n                                \n                                    The EditorJS block type\n\n                                \n                            \n                        \n                    \n            \n    \n\n\n    \n        export interface Block {\n  /**\n   * The EditorJS block type\n   */\n  type: string;\n\n  /**\n   * The data interface for the block type\n   */\n  data: T;\n\n  /**\n   * Additional properties on the type\n   */\n  [key: string]: any;\n}\n\n/**\n * Available list styles, supports `ordered` and `unordered`.\n * A custom string can also be added\n */\nexport type ListStyle = 'ordered' | 'unordered' | string;\n\n/**\n * Default data type for a list block\n */\nexport interface List {\n  /**\n   * The list style\n   */\n  style: ListStyle;\n  /**\n   * List items of type T\n   */\n  items: T[];\n}\n\n/**\n * The default list block is provided by the EditorJS list plugin\n */\nexport interface ListBlock extends Block> {\n  /**\n   * The EditorJS block type\n   */\n  type: 'list';\n}\n\n/**\n * Default data type for a paragraph block\n */\ninterface Paragraph {\n  /**\n   * The paragraph text\n   */\n  text: string;\n}\n\n/**\n * Interface for a paragraph block\n */\nexport interface ParagraphBlock extends Block {\n  /**\n   * The EditorJS block type\n   */\n  type: 'paragraph';\n}\n\n/**\n * Default data type for a header block\n */\ninterface Header {\n  /**\n   * The header text\n   */\n  text: string;\n  /**\n   * The header level from 1-6\n   */\n  level: number;\n}\n\n/**\n * Interface for a header block\n */\nexport interface HeaderBlock extends Block {\n  /**\n   * The EditorJS block type\n   */\n  type: 'header';\n}\n\n/**\n * Default data type for a header block\n */\nexport interface Image {\n  /**\n   * The image URL\n   */\n  url: string;\n  /**\n   * Optional image caption\n   */\n  caption?: string;\n  /**\n   * Optional border property\n   */\n  withBorder?: boolean;\n\n  /**\n   * Optional background property\n   */\n  withBackground?: boolean;\n\n  /**\n   * Optional stretch property\n   */\n  stretched?: boolean;\n}\n\n/**\n * Interface for a image block\n */\nexport interface ImageBlock extends Block {\n  /**\n   * The EditorJS block type\n   */\n  type: 'image';\n}\n\n/**\n * Type of all the basic block type\n */\nexport type BlockTypes = ParagraphBlock | HeaderBlock | ImageBlock | ListBlock | Block;\n\n    \n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/HomePageComponent.html":{"url":"components/HomePageComponent.html","title":"component - HomePageComponent","body":"\n                   \n\n\n\n\n\n  Components\n  HomePageComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    apps/ngx-tinynodes/src/app/pages/home/home-page.component.ts\n\n\n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                tinynodes-home-page\n            \n\n            \n                styleUrls\n                home-page.component.scss\n            \n\n\n\n            \n                templateUrl\n                home-page.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n\n\n\n\n\n\n                    \n                        \n                            Accessors\n                        \n                    \n                    \n                        \n                            \n                                \n                                    menu\n                                \n                            \n                        \n                    \n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(app: AppService)\n                    \n                \n                        \n                            \n                                Defined in apps/ngx-tinynodes/src/app/pages/home/home-page.component.ts:9\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        app\n                                                  \n                                                        \n                                                                        AppService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n\n\n    \n    \n        Accessors\n    \n        \n            \n                \n                    \n                        \n                        menu\n                    \n                \n\n                \n                    \n                        getmenu()\n                    \n                \n                            \n                                \n                                    Defined in apps/ngx-tinynodes/src/app/pages/home/home-page.component.ts:12\n                                \n                            \n\n            \n        \n\n\n\n\n    \n        import { Component } from '@angular/core';\nimport { AppService } from '@tinynodes/ngx-tinynodes-core';\n\n@Component({\n  selector: 'tinynodes-home-page',\n  templateUrl: 'home-page.component.html',\n  styleUrls: ['home-page.component.scss']\n})\nexport class HomePageComponent {\n  constructor(private readonly app: AppService) {}\n\n  public get menu() {\n    return this.app.getMenu('main-links');\n  }\n}\n\n    \n\n    \n        \n  \n    \n      Welcome to the Tinynodes Demo Site\n      A collection of Angular and TypeScript libraries for the web\n    \n    \n      \n        This site contains demos of components released under @tinynodes on npm, you can find a list of them on\n        the menu to the left.\n      \n      You can also visit the sites below for additional documentation and code:\n      \n        \n          \n            {{ menu.label }}\n          \n        \n      \n    \n  \n\n\n    \n\n    \n                \n                    home-page.component.scss\n                \n                \n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '            Welcome to the Tinynodes Demo Site      A collection of Angular and TypeScript libraries for the web                      This site contains demos of components released under @tinynodes on npm, you can find a list of them on        the menu to the left.            You can also visit the sites below for additional documentation and code:                                    {{ menu.label }}                              '\n    var COMPONENTS = [{'name': 'AppContainerComponent', 'selector': 'tinynodes-root'},{'name': 'FormContainerComponent', 'selector': 'ngx-form-container'},{'name': 'HomePageComponent', 'selector': 'tinynodes-home-page'},{'name': 'NavBarComponent', 'selector': 'tinynodes-nav-bar'},{'name': 'NgxEditorJSBaseComponent', 'selector': ''},{'name': 'NgxEditorJSComponent', 'selector': 'ngx-editorjs'},{'name': 'NgxEditorJSDemoHomeComponent', 'selector': 'ngx-editorjs-demo-home'},{'name': 'NgxEditorJSDemoInfoComponent', 'selector': 'ngx-editorjs-demo-info'},{'name': 'NgxEditorJSDemoTagComponent', 'selector': 'ngx-editorjs-tag-component'},{'name': 'NgxEditorJSMatFieldComponent', 'selector': 'ngx-editorjs-mat-field'},{'name': 'PageContainerComponent', 'selector': 'ngx-page-container'},{'name': 'SidebarComponent', 'selector': 'tinynodes-sidebar'}];\n    var DIRECTIVES = [{'name': 'NgxEditorJSDirective', 'selector': '[ngxEditorJS]'}];\n    var ACTUAL_COMPONENT = {'name': 'HomePageComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/Image.html":{"url":"interfaces/Image.html","title":"interface - Image","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  Image\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            libs/ngx-editorjs/src/lib/types/blocks.ts\n        \n\n            \n                Description\n            \n            \n                Default data type for a header block\n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                            Optional\n                                        caption\n                                \n                                \n                                            Optional\n                                        stretched\n                                \n                                \n                                        url\n                                \n                                \n                                            Optional\n                                        withBackground\n                                \n                                \n                                            Optional\n                                        withBorder\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        caption\n                                    \n                                \n                                \n                                    \n                                        caption:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    Optional image caption\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        stretched\n                                    \n                                \n                                \n                                    \n                                        stretched:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    Optional stretch property\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        url\n                                    \n                                \n                                \n                                    \n                                        url:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    The image URL\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        withBackground\n                                    \n                                \n                                \n                                    \n                                        withBackground:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    Optional background property\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        withBorder\n                                    \n                                \n                                \n                                    \n                                        withBorder:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    Optional border property\n\n                                \n                            \n                        \n                    \n            \n    \n\n\n    \n        export interface Block {\n  /**\n   * The EditorJS block type\n   */\n  type: string;\n\n  /**\n   * The data interface for the block type\n   */\n  data: T;\n\n  /**\n   * Additional properties on the type\n   */\n  [key: string]: any;\n}\n\n/**\n * Available list styles, supports `ordered` and `unordered`.\n * A custom string can also be added\n */\nexport type ListStyle = 'ordered' | 'unordered' | string;\n\n/**\n * Default data type for a list block\n */\nexport interface List {\n  /**\n   * The list style\n   */\n  style: ListStyle;\n  /**\n   * List items of type T\n   */\n  items: T[];\n}\n\n/**\n * The default list block is provided by the EditorJS list plugin\n */\nexport interface ListBlock extends Block> {\n  /**\n   * The EditorJS block type\n   */\n  type: 'list';\n}\n\n/**\n * Default data type for a paragraph block\n */\ninterface Paragraph {\n  /**\n   * The paragraph text\n   */\n  text: string;\n}\n\n/**\n * Interface for a paragraph block\n */\nexport interface ParagraphBlock extends Block {\n  /**\n   * The EditorJS block type\n   */\n  type: 'paragraph';\n}\n\n/**\n * Default data type for a header block\n */\ninterface Header {\n  /**\n   * The header text\n   */\n  text: string;\n  /**\n   * The header level from 1-6\n   */\n  level: number;\n}\n\n/**\n * Interface for a header block\n */\nexport interface HeaderBlock extends Block {\n  /**\n   * The EditorJS block type\n   */\n  type: 'header';\n}\n\n/**\n * Default data type for a header block\n */\nexport interface Image {\n  /**\n   * The image URL\n   */\n  url: string;\n  /**\n   * Optional image caption\n   */\n  caption?: string;\n  /**\n   * Optional border property\n   */\n  withBorder?: boolean;\n\n  /**\n   * Optional background property\n   */\n  withBackground?: boolean;\n\n  /**\n   * Optional stretch property\n   */\n  stretched?: boolean;\n}\n\n/**\n * Interface for a image block\n */\nexport interface ImageBlock extends Block {\n  /**\n   * The EditorJS block type\n   */\n  type: 'image';\n}\n\n/**\n * Type of all the basic block type\n */\nexport type BlockTypes = ParagraphBlock | HeaderBlock | ImageBlock | ListBlock | Block;\n\n    \n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/ImageBlock.html":{"url":"interfaces/ImageBlock.html","title":"interface - ImageBlock","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  ImageBlock\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            libs/ngx-editorjs/src/lib/types/blocks.ts\n        \n\n            \n                Description\n            \n            \n                Interface for a image block\n\n            \n\n            \n                Extends\n            \n            \n                        Block\n            \n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        type\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        type\n                                    \n                                \n                                \n                                    \n                                        type:     \n\n                                    \n                                \n\n\n\n\n\n\n\n                            \n                                \n                                    The EditorJS block type\n\n                                \n                            \n                        \n                    \n            \n    \n\n\n    \n        export interface Block {\n  /**\n   * The EditorJS block type\n   */\n  type: string;\n\n  /**\n   * The data interface for the block type\n   */\n  data: T;\n\n  /**\n   * Additional properties on the type\n   */\n  [key: string]: any;\n}\n\n/**\n * Available list styles, supports `ordered` and `unordered`.\n * A custom string can also be added\n */\nexport type ListStyle = 'ordered' | 'unordered' | string;\n\n/**\n * Default data type for a list block\n */\nexport interface List {\n  /**\n   * The list style\n   */\n  style: ListStyle;\n  /**\n   * List items of type T\n   */\n  items: T[];\n}\n\n/**\n * The default list block is provided by the EditorJS list plugin\n */\nexport interface ListBlock extends Block> {\n  /**\n   * The EditorJS block type\n   */\n  type: 'list';\n}\n\n/**\n * Default data type for a paragraph block\n */\ninterface Paragraph {\n  /**\n   * The paragraph text\n   */\n  text: string;\n}\n\n/**\n * Interface for a paragraph block\n */\nexport interface ParagraphBlock extends Block {\n  /**\n   * The EditorJS block type\n   */\n  type: 'paragraph';\n}\n\n/**\n * Default data type for a header block\n */\ninterface Header {\n  /**\n   * The header text\n   */\n  text: string;\n  /**\n   * The header level from 1-6\n   */\n  level: number;\n}\n\n/**\n * Interface for a header block\n */\nexport interface HeaderBlock extends Block {\n  /**\n   * The EditorJS block type\n   */\n  type: 'header';\n}\n\n/**\n * Default data type for a header block\n */\nexport interface Image {\n  /**\n   * The image URL\n   */\n  url: string;\n  /**\n   * Optional image caption\n   */\n  caption?: string;\n  /**\n   * Optional border property\n   */\n  withBorder?: boolean;\n\n  /**\n   * Optional background property\n   */\n  withBackground?: boolean;\n\n  /**\n   * Optional stretch property\n   */\n  stretched?: boolean;\n}\n\n/**\n * Interface for a image block\n */\nexport interface ImageBlock extends Block {\n  /**\n   * The EditorJS block type\n   */\n  type: 'image';\n}\n\n/**\n * Type of all the basic block type\n */\nexport type BlockTypes = ParagraphBlock | HeaderBlock | ImageBlock | ListBlock | Block;\n\n    \n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/InjectorApiCallOptions.html":{"url":"interfaces/InjectorApiCallOptions.html","title":"interface - InjectorApiCallOptions","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  InjectorApiCallOptions\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            libs/ngx-editorjs/src/lib/types/injector.ts\n        \n\n            \n                Description\n            \n            \n                Options to pass when calling the EditorJS instance API\n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        holder\n                                \n                                \n                                        method\n                                \n                                \n                                            Optional\n                                        namespace\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        holder\n                                    \n                                \n                                \n                                    \n                                        holder:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Holder for the EditorJS instance\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        method\n                                    \n                                \n                                \n                                    \n                                        method:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    The method to call\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        namespace\n                                    \n                                \n                                \n                                    \n                                        namespace:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    The optional namespace for the API call\n\n                                \n                            \n                        \n                    \n            \n    \n\n\n    \n        import { InjectionToken } from '@angular/core';\nimport EditorJS, { EditorConfig } from '@editorjs/editorjs';\nimport { Block } from './blocks';\n/**\n * Configuration for creating an EditorJS instance\n */\nexport interface EditorJSInstanceConfig {\n  /**\n   * The editor configuration, this is required with at least the `holder` property\n   */\n  editorConfig: EditorConfig;\n  /**\n   * The method to call when the editor makes a change\n   */\n  onChange?: (holder?: string) => void;\n\n  /**\n   * The method to call with an editor is ready\n   */\n  onReady?: (holder?: string) => void;\n}\n\n/**\n * Default values for each internal map\n */\nexport const MAP_DEFAULTS = [['hasChangedMap', { time: 0, blocks: [] }], ['isReadyMap', false], ['hasSavedMap', false]];\n\n/**\n * Injection token for the EditorJS class\n */\nexport const EDITORJS_MODULE_IMPORT = new InjectionToken('EDITORJS_MODULE_IMPORT');\n\nexport const EditorJSInstance = new InjectionToken('EditorJSInstance');\n\n/**\n * Options for a Injector method\n */\nexport interface InjectorMethodOption {\n  /**\n   * The holder for the option\n   */\n  holder: string;\n  /**\n   * Optional blocks\n   */\n  blocks?: Block[];\n  /**\n   * Optional editor\n   */\n  editor?: EditorJS;\n}\n\n/**\n * Options to pass when calling the `EditorJS` instance API\n */\nexport interface InjectorApiCallOptions {\n  /**\n   * Holder for the `EditorJS` instance\n   */\n  holder: string;\n\n  /**\n   * The method to call\n   */\n  method: string;\n  /**\n   * The optional namespace for the API call\n   */\n  namespace?: string;\n}\n\n/**\n * A response from the `EditorJS` api\n */\nexport interface InjectorApiCallResponse extends InjectorApiCallOptions {\n  result: T;\n}\n\n    \n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/InjectorApiCallResponse.html":{"url":"interfaces/InjectorApiCallResponse.html","title":"interface - InjectorApiCallResponse","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  InjectorApiCallResponse\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            libs/ngx-editorjs/src/lib/types/injector.ts\n        \n\n            \n                Description\n            \n            \n                A response from the EditorJS api\n\n            \n\n            \n                Extends\n            \n            \n                        InjectorApiCallOptions\n            \n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        result\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        result\n                                    \n                                \n                                \n                                    \n                                        result:     T\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     T\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { InjectionToken } from '@angular/core';\nimport EditorJS, { EditorConfig } from '@editorjs/editorjs';\nimport { Block } from './blocks';\n/**\n * Configuration for creating an EditorJS instance\n */\nexport interface EditorJSInstanceConfig {\n  /**\n   * The editor configuration, this is required with at least the `holder` property\n   */\n  editorConfig: EditorConfig;\n  /**\n   * The method to call when the editor makes a change\n   */\n  onChange?: (holder?: string) => void;\n\n  /**\n   * The method to call with an editor is ready\n   */\n  onReady?: (holder?: string) => void;\n}\n\n/**\n * Default values for each internal map\n */\nexport const MAP_DEFAULTS = [['hasChangedMap', { time: 0, blocks: [] }], ['isReadyMap', false], ['hasSavedMap', false]];\n\n/**\n * Injection token for the EditorJS class\n */\nexport const EDITORJS_MODULE_IMPORT = new InjectionToken('EDITORJS_MODULE_IMPORT');\n\nexport const EditorJSInstance = new InjectionToken('EditorJSInstance');\n\n/**\n * Options for a Injector method\n */\nexport interface InjectorMethodOption {\n  /**\n   * The holder for the option\n   */\n  holder: string;\n  /**\n   * Optional blocks\n   */\n  blocks?: Block[];\n  /**\n   * Optional editor\n   */\n  editor?: EditorJS;\n}\n\n/**\n * Options to pass when calling the `EditorJS` instance API\n */\nexport interface InjectorApiCallOptions {\n  /**\n   * Holder for the `EditorJS` instance\n   */\n  holder: string;\n\n  /**\n   * The method to call\n   */\n  method: string;\n  /**\n   * The optional namespace for the API call\n   */\n  namespace?: string;\n}\n\n/**\n * A response from the `EditorJS` api\n */\nexport interface InjectorApiCallResponse extends InjectorApiCallOptions {\n  result: T;\n}\n\n    \n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/InjectorMethodOption.html":{"url":"interfaces/InjectorMethodOption.html","title":"interface - InjectorMethodOption","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  InjectorMethodOption\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            libs/ngx-editorjs/src/lib/types/injector.ts\n        \n\n            \n                Description\n            \n            \n                Options for a Injector method\n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                            Optional\n                                        blocks\n                                \n                                \n                                            Optional\n                                        editor\n                                \n                                \n                                        holder\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        blocks\n                                    \n                                \n                                \n                                    \n                                        blocks:         Block[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         Block[]\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    Optional blocks\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        editor\n                                    \n                                \n                                \n                                    \n                                        editor:     EditorJS\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     EditorJS\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    Optional editor\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        holder\n                                    \n                                \n                                \n                                    \n                                        holder:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    The holder for the option\n\n                                \n                            \n                        \n                    \n            \n    \n\n\n    \n        import { InjectionToken } from '@angular/core';\nimport EditorJS, { EditorConfig } from '@editorjs/editorjs';\nimport { Block } from './blocks';\n/**\n * Configuration for creating an EditorJS instance\n */\nexport interface EditorJSInstanceConfig {\n  /**\n   * The editor configuration, this is required with at least the `holder` property\n   */\n  editorConfig: EditorConfig;\n  /**\n   * The method to call when the editor makes a change\n   */\n  onChange?: (holder?: string) => void;\n\n  /**\n   * The method to call with an editor is ready\n   */\n  onReady?: (holder?: string) => void;\n}\n\n/**\n * Default values for each internal map\n */\nexport const MAP_DEFAULTS = [['hasChangedMap', { time: 0, blocks: [] }], ['isReadyMap', false], ['hasSavedMap', false]];\n\n/**\n * Injection token for the EditorJS class\n */\nexport const EDITORJS_MODULE_IMPORT = new InjectionToken('EDITORJS_MODULE_IMPORT');\n\nexport const EditorJSInstance = new InjectionToken('EditorJSInstance');\n\n/**\n * Options for a Injector method\n */\nexport interface InjectorMethodOption {\n  /**\n   * The holder for the option\n   */\n  holder: string;\n  /**\n   * Optional blocks\n   */\n  blocks?: Block[];\n  /**\n   * Optional editor\n   */\n  editor?: EditorJS;\n}\n\n/**\n * Options to pass when calling the `EditorJS` instance API\n */\nexport interface InjectorApiCallOptions {\n  /**\n   * Holder for the `EditorJS` instance\n   */\n  holder: string;\n\n  /**\n   * The method to call\n   */\n  method: string;\n  /**\n   * The optional namespace for the API call\n   */\n  namespace?: string;\n}\n\n/**\n * A response from the `EditorJS` api\n */\nexport interface InjectorApiCallResponse extends InjectorApiCallOptions {\n  result: T;\n}\n\n    \n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/List.html":{"url":"interfaces/List.html","title":"interface - List","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  List\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            libs/ngx-editorjs/src/lib/types/blocks.ts\n        \n\n            \n                Description\n            \n            \n                Default data type for a list block\n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        items\n                                \n                                \n                                        style\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        items\n                                    \n                                \n                                \n                                    \n                                        items:     T[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     T[]\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    List items of type T\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        style\n                                    \n                                \n                                \n                                    \n                                        style:         ListStyle\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         ListStyle\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    The list style\n\n                                \n                            \n                        \n                    \n            \n    \n\n\n    \n        export interface Block {\n  /**\n   * The EditorJS block type\n   */\n  type: string;\n\n  /**\n   * The data interface for the block type\n   */\n  data: T;\n\n  /**\n   * Additional properties on the type\n   */\n  [key: string]: any;\n}\n\n/**\n * Available list styles, supports `ordered` and `unordered`.\n * A custom string can also be added\n */\nexport type ListStyle = 'ordered' | 'unordered' | string;\n\n/**\n * Default data type for a list block\n */\nexport interface List {\n  /**\n   * The list style\n   */\n  style: ListStyle;\n  /**\n   * List items of type T\n   */\n  items: T[];\n}\n\n/**\n * The default list block is provided by the EditorJS list plugin\n */\nexport interface ListBlock extends Block> {\n  /**\n   * The EditorJS block type\n   */\n  type: 'list';\n}\n\n/**\n * Default data type for a paragraph block\n */\ninterface Paragraph {\n  /**\n   * The paragraph text\n   */\n  text: string;\n}\n\n/**\n * Interface for a paragraph block\n */\nexport interface ParagraphBlock extends Block {\n  /**\n   * The EditorJS block type\n   */\n  type: 'paragraph';\n}\n\n/**\n * Default data type for a header block\n */\ninterface Header {\n  /**\n   * The header text\n   */\n  text: string;\n  /**\n   * The header level from 1-6\n   */\n  level: number;\n}\n\n/**\n * Interface for a header block\n */\nexport interface HeaderBlock extends Block {\n  /**\n   * The EditorJS block type\n   */\n  type: 'header';\n}\n\n/**\n * Default data type for a header block\n */\nexport interface Image {\n  /**\n   * The image URL\n   */\n  url: string;\n  /**\n   * Optional image caption\n   */\n  caption?: string;\n  /**\n   * Optional border property\n   */\n  withBorder?: boolean;\n\n  /**\n   * Optional background property\n   */\n  withBackground?: boolean;\n\n  /**\n   * Optional stretch property\n   */\n  stretched?: boolean;\n}\n\n/**\n * Interface for a image block\n */\nexport interface ImageBlock extends Block {\n  /**\n   * The EditorJS block type\n   */\n  type: 'image';\n}\n\n/**\n * Type of all the basic block type\n */\nexport type BlockTypes = ParagraphBlock | HeaderBlock | ImageBlock | ListBlock | Block;\n\n    \n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/ListBlock.html":{"url":"interfaces/ListBlock.html","title":"interface - ListBlock","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  ListBlock\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            libs/ngx-editorjs/src/lib/types/blocks.ts\n        \n\n            \n                Description\n            \n            \n                The default list block is provided by the EditorJS list plugin\n\n            \n\n            \n                Extends\n            \n            \n                        Block\n            \n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        type\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        type\n                                    \n                                \n                                \n                                    \n                                        type:     \n\n                                    \n                                \n\n\n\n\n\n\n\n                            \n                                \n                                    The EditorJS block type\n\n                                \n                            \n                        \n                    \n            \n    \n\n\n    \n        export interface Block {\n  /**\n   * The EditorJS block type\n   */\n  type: string;\n\n  /**\n   * The data interface for the block type\n   */\n  data: T;\n\n  /**\n   * Additional properties on the type\n   */\n  [key: string]: any;\n}\n\n/**\n * Available list styles, supports `ordered` and `unordered`.\n * A custom string can also be added\n */\nexport type ListStyle = 'ordered' | 'unordered' | string;\n\n/**\n * Default data type for a list block\n */\nexport interface List {\n  /**\n   * The list style\n   */\n  style: ListStyle;\n  /**\n   * List items of type T\n   */\n  items: T[];\n}\n\n/**\n * The default list block is provided by the EditorJS list plugin\n */\nexport interface ListBlock extends Block> {\n  /**\n   * The EditorJS block type\n   */\n  type: 'list';\n}\n\n/**\n * Default data type for a paragraph block\n */\ninterface Paragraph {\n  /**\n   * The paragraph text\n   */\n  text: string;\n}\n\n/**\n * Interface for a paragraph block\n */\nexport interface ParagraphBlock extends Block {\n  /**\n   * The EditorJS block type\n   */\n  type: 'paragraph';\n}\n\n/**\n * Default data type for a header block\n */\ninterface Header {\n  /**\n   * The header text\n   */\n  text: string;\n  /**\n   * The header level from 1-6\n   */\n  level: number;\n}\n\n/**\n * Interface for a header block\n */\nexport interface HeaderBlock extends Block {\n  /**\n   * The EditorJS block type\n   */\n  type: 'header';\n}\n\n/**\n * Default data type for a header block\n */\nexport interface Image {\n  /**\n   * The image URL\n   */\n  url: string;\n  /**\n   * Optional image caption\n   */\n  caption?: string;\n  /**\n   * Optional border property\n   */\n  withBorder?: boolean;\n\n  /**\n   * Optional background property\n   */\n  withBackground?: boolean;\n\n  /**\n   * Optional stretch property\n   */\n  stretched?: boolean;\n}\n\n/**\n * Interface for a image block\n */\nexport interface ImageBlock extends Block {\n  /**\n   * The EditorJS block type\n   */\n  type: 'image';\n}\n\n/**\n * Type of all the basic block type\n */\nexport type BlockTypes = ParagraphBlock | HeaderBlock | ImageBlock | ListBlock | Block;\n\n    \n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/MaterialModule.html":{"url":"modules/MaterialModule.html","title":"module - MaterialModule","body":"\n                   \n\n\n\n\n    Modules\n    MaterialModule\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            apps/ngx-tinynodes/src/app/material.module.ts\n        \n\n\n        \n            Description\n        \n        \n            This internal module loads the required features for Angular Material\n\n        \n\n\n        \n            \n            \n        \n\n\n    \n\n\n    \n        import { NgModule } from '@angular/core';\n\nimport {\n  MatSidenavModule,\n  MatToolbarModule,\n  MatIconModule,\n  MatListModule,\n  MatCardModule,\n  MatButtonModule\n} from '@angular/material';\n\n/**\n * This internal module loads the required features for Angular Material\n */\n@NgModule({\n  imports: [MatSidenavModule, MatToolbarModule, MatIconModule, MatListModule, MatCardModule, MatButtonModule],\n  exports: [MatSidenavModule, MatToolbarModule, MatIconModule, MatListModule, MatCardModule, MatButtonModule]\n})\nexport class MaterialModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/MenuGroup.html":{"url":"interfaces/MenuGroup.html","title":"interface - MenuGroup","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  MenuGroup\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            libs/ngx-tinynodes-core/src/lib/types/app.ts\n        \n\n            \n                Description\n            \n            \n                A menu group describes a set of menu items with a key and optional title\n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        items\n                                \n                                \n                                        key\n                                \n                                \n                                            Optional\n                                        title\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        items\n                                    \n                                \n                                \n                                    \n                                        items:     MenuItem[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     MenuItem[]\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    The menu items, can contain one or more items with children\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        key\n                                    \n                                \n                                \n                                    \n                                        key:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    The key of the menu (e.g. sidebar, topnav, etc)\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        title\n                                    \n                                \n                                \n                                    \n                                        title:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    Optional title to render in the menu\n\n                                \n                            \n                        \n                    \n            \n    \n\n\n    \n        import { RouterLink } from '@angular/router';\n\n/**\n * A menu item in the Tinynodes app\n */\nexport interface MenuItem {\n  /**\n   * The display label for the app\n   */\n  label: string;\n  /**\n   * Optional icon for the menu item\n   */\n  icon?: string;\n  /**\n   * Description of the item, used for title, aria, etc\n   */\n  description?: string;\n  /**\n   * The {RouterLink} for the menu item or a string url\n   */\n  link?: RouterLink | string;\n\n  /**\n   * Any children to render in the menu\n   */\n  children?: MenuItem[];\n}\n\n/**\n * A menu group describes a set of menu items with a key and optional title\n */\nexport interface MenuGroup {\n  /**\n   * The key of the menu (e.g. `sidebar`, `topnav`, etc)\n   */\n  key: string;\n  /**\n   * Optional title to render in the menu\n   */\n  title?: string;\n\n  /**\n   * The menu items, can contain one or more items with children\n   */\n  items: MenuItem[];\n}\n\n/**\n * The aggregate application interface\n */\nexport interface ApplicationData {\n  /**\n   * If the sidebar menu is hidden\n   */\n  hidden: boolean;\n\n  /**\n   * An list of menu groups available in the apps\n   */\n  menus: MenuGroup[];\n}\n\n    \n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/MenuGroup-1.html":{"url":"interfaces/MenuGroup-1.html","title":"interface - MenuGroup-1","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  MenuGroup\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/ngx-tinynodes/src/app/core/types/app.ts\n        \n\n            \n                Description\n            \n            \n                A menu group describes a set of menu items with a key and optional title\n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        items\n                                \n                                \n                                        key\n                                \n                                \n                                            Optional\n                                        title\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        items\n                                    \n                                \n                                \n                                    \n                                        items:     MenuItem[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     MenuItem[]\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    The menu items, can contain one or more items with children\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        key\n                                    \n                                \n                                \n                                    \n                                        key:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    The key of the menu (e.g. sidebar, topnav, etc)\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        title\n                                    \n                                \n                                \n                                    \n                                        title:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    Optional title to render in the menu\n\n                                \n                            \n                        \n                    \n            \n    \n\n\n    \n        import { RouterLink } from '@angular/router';\n\n/**\n * A menu item in the Tinynodes app\n */\nexport interface MenuItem {\n  /**\n   * The display label for the app\n   */\n  label: string;\n  /**\n   * Optional icon for the menu item\n   */\n  icon?: string;\n  /**\n   * Description of the item, used for title, aria, etc\n   */\n  description?: string;\n  /**\n   * The {RouterLink} for the menu item or a string url\n   */\n  link?: RouterLink | string;\n\n  /**\n   * Any children to render in the menu\n   */\n  children?: MenuItem[];\n}\n\n/**\n * A menu group describes a set of menu items with a key and optional title\n */\nexport interface MenuGroup {\n  /**\n   * The key of the menu (e.g. `sidebar`, `topnav`, etc)\n   */\n  key: string;\n  /**\n   * Optional title to render in the menu\n   */\n  title?: string;\n\n  /**\n   * The menu items, can contain one or more items with children\n   */\n  items: MenuItem[];\n}\n\n/**\n * The aggregate application interface\n */\nexport interface ApplicationData {\n  /**\n   * If the sidebar menu is hidden\n   */\n  hidden: boolean;\n\n  /**\n   * An list of menu groups available in the apps\n   */\n  menus: MenuGroup[];\n}\n\n    \n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/MenuItem.html":{"url":"interfaces/MenuItem.html","title":"interface - MenuItem","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  MenuItem\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            libs/ngx-tinynodes-core/src/lib/types/app.ts\n        \n\n            \n                Description\n            \n            \n                A menu item in the Tinynodes app\n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                            Optional\n                                        children\n                                \n                                \n                                            Optional\n                                        description\n                                \n                                \n                                            Optional\n                                        icon\n                                \n                                \n                                        label\n                                \n                                \n                                            Optional\n                                        link\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        children\n                                    \n                                \n                                \n                                    \n                                        children:     MenuItem[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     MenuItem[]\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    Any children to render in the menu\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        description\n                                    \n                                \n                                \n                                    \n                                        description:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    Description of the item, used for title, aria, etc\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        icon\n                                    \n                                \n                                \n                                    \n                                        icon:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    Optional icon for the menu item\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        label\n                                    \n                                \n                                \n                                    \n                                        label:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    The display label for the app\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        link\n                                    \n                                \n                                \n                                    \n                                        link:     RouterLink | string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     RouterLink | string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    The {RouterLink} for the menu item or a string url\n\n                                \n                            \n                        \n                    \n            \n    \n\n\n    \n        import { RouterLink } from '@angular/router';\n\n/**\n * A menu item in the Tinynodes app\n */\nexport interface MenuItem {\n  /**\n   * The display label for the app\n   */\n  label: string;\n  /**\n   * Optional icon for the menu item\n   */\n  icon?: string;\n  /**\n   * Description of the item, used for title, aria, etc\n   */\n  description?: string;\n  /**\n   * The {RouterLink} for the menu item or a string url\n   */\n  link?: RouterLink | string;\n\n  /**\n   * Any children to render in the menu\n   */\n  children?: MenuItem[];\n}\n\n/**\n * A menu group describes a set of menu items with a key and optional title\n */\nexport interface MenuGroup {\n  /**\n   * The key of the menu (e.g. `sidebar`, `topnav`, etc)\n   */\n  key: string;\n  /**\n   * Optional title to render in the menu\n   */\n  title?: string;\n\n  /**\n   * The menu items, can contain one or more items with children\n   */\n  items: MenuItem[];\n}\n\n/**\n * The aggregate application interface\n */\nexport interface ApplicationData {\n  /**\n   * If the sidebar menu is hidden\n   */\n  hidden: boolean;\n\n  /**\n   * An list of menu groups available in the apps\n   */\n  menus: MenuGroup[];\n}\n\n    \n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/MenuItem-1.html":{"url":"interfaces/MenuItem-1.html","title":"interface - MenuItem-1","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  MenuItem\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/ngx-tinynodes/src/app/core/types/app.ts\n        \n\n            \n                Description\n            \n            \n                A menu item in the Tinynodes app\n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                            Optional\n                                        children\n                                \n                                \n                                            Optional\n                                        description\n                                \n                                \n                                            Optional\n                                        icon\n                                \n                                \n                                        label\n                                \n                                \n                                            Optional\n                                        link\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        children\n                                    \n                                \n                                \n                                    \n                                        children:     MenuItem[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     MenuItem[]\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    Any children to render in the menu\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        description\n                                    \n                                \n                                \n                                    \n                                        description:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    Description of the item, used for title, aria, etc\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        icon\n                                    \n                                \n                                \n                                    \n                                        icon:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    Optional icon for the menu item\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        label\n                                    \n                                \n                                \n                                    \n                                        label:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    The display label for the app\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        link\n                                    \n                                \n                                \n                                    \n                                        link:     RouterLink | string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     RouterLink | string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    The {RouterLink} for the menu item or a string url\n\n                                \n                            \n                        \n                    \n            \n    \n\n\n    \n        import { RouterLink } from '@angular/router';\n\n/**\n * A menu item in the Tinynodes app\n */\nexport interface MenuItem {\n  /**\n   * The display label for the app\n   */\n  label: string;\n  /**\n   * Optional icon for the menu item\n   */\n  icon?: string;\n  /**\n   * Description of the item, used for title, aria, etc\n   */\n  description?: string;\n  /**\n   * The {RouterLink} for the menu item or a string url\n   */\n  link?: RouterLink | string;\n\n  /**\n   * Any children to render in the menu\n   */\n  children?: MenuItem[];\n}\n\n/**\n * A menu group describes a set of menu items with a key and optional title\n */\nexport interface MenuGroup {\n  /**\n   * The key of the menu (e.g. `sidebar`, `topnav`, etc)\n   */\n  key: string;\n  /**\n   * Optional title to render in the menu\n   */\n  title?: string;\n\n  /**\n   * The menu items, can contain one or more items with children\n   */\n  items: MenuItem[];\n}\n\n/**\n * The aggregate application interface\n */\nexport interface ApplicationData {\n  /**\n   * If the sidebar menu is hidden\n   */\n  hidden: boolean;\n\n  /**\n   * An list of menu groups available in the apps\n   */\n  menus: MenuGroup[];\n}\n\n    \n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/MockEditorJS.html":{"url":"classes/MockEditorJS.html","title":"class - MockEditorJS","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  MockEditorJS\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            libs/ngx-editorjs/src/testing/shared.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                blocks\n                            \n                            \n                                destroy\n                            \n                            \n                                isReady\n                            \n                            \n                                saver\n                            \n                            \n                                version\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(config: NgxEditorJSModuleConfig)\n                    \n                \n                        \n                            \n                                Defined in libs/ngx-editorjs/src/testing/shared.ts:27\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        config\n                                                  \n                                                        \n                                                                        NgxEditorJSModuleConfig\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            blocks\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         any\n\n                        \n                    \n                        \n                            \n                                    Defined in libs/ngx-editorjs/src/testing/shared.ts:22\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            destroy\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         function\n\n                        \n                    \n                        \n                            \n                                    Defined in libs/ngx-editorjs/src/testing/shared.ts:25\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            isReady\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     Promise\n\n                        \n                    \n                        \n                            \n                                    Defined in libs/ngx-editorjs/src/testing/shared.ts:27\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            saver\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         any\n\n                        \n                    \n                        \n                            \n                                    Defined in libs/ngx-editorjs/src/testing/shared.ts:23\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            version\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in libs/ngx-editorjs/src/testing/shared.ts:24\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { ToolSettings } from '@editorjs/editorjs';\nimport { BasePlugin } from '../lib/types/plugins';\nimport { NgxEditorJSModuleConfig } from '../lib/types/config';\n\nexport class TestClass {\n  constructor() {}\n  render() {\n    return document.createElement('div');\n  }\n}\n\nexport class MockPlugin implements BasePlugin {\n  public plugin(): ToolSettings {\n    return { class: TestClass };\n  }\n  shortcut() {\n    return 'test-shortcut';\n  }\n}\n\nexport class MockEditorJS {\n  blocks: any;\n  saver: any;\n  version: string;\n  destroy: () => void;\n\n  isReady: Promise;\n\n  constructor(private config: NgxEditorJSModuleConfig) {\n    this.version = 'test';\n\n    this.isReady = Promise.resolve();\n\n    this.destroy = () => {};\n\n    this.blocks = {\n      clear: () => {},\n      render: () => {}\n    };\n\n    this.saver = {\n      save: (): Promise => {\n        return Promise.resolve({\n          time: Date.now(),\n          version: 'test',\n          blocks: []\n        });\n      }\n    };\n    (config as any).onReady();\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/MockNgZone.html":{"url":"injectables/MockNgZone.html","title":"injectable - MockNgZone","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  MockNgZone\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            libs/ngx-editorjs/src/testing/ng-zone-mock.ts\n        \n\n            \n                Description\n            \n            \n                A mock implementation of NgZone.\n\n            \n\n            \n                Extends\n            \n            \n                        NgZone\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                onStable\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                run\n                            \n                            \n                                runOutsideAngular\n                            \n                            \n                                simulateZoneExit\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in libs/ngx-editorjs/src/testing/ng-zone-mock.ts:16\n                            \n                        \n\n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            run\n                        \n                        \n                    \n                \n            \n            \n                \nrun(fn: Function)\n                \n            \n\n\n            \n                \n                    Defined in libs/ngx-editorjs/src/testing/ng-zone-mock.ts:22\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    fn\n                                    \n                                                Function\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            runOutsideAngular\n                        \n                        \n                    \n                \n            \n            \n                \nrunOutsideAngular(fn: Function)\n                \n            \n\n\n            \n                \n                    Defined in libs/ngx-editorjs/src/testing/ng-zone-mock.ts:26\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    fn\n                                    \n                                                Function\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            simulateZoneExit\n                        \n                        \n                    \n                \n            \n            \n                \nsimulateZoneExit()\n                \n            \n\n\n            \n                \n                    Defined in libs/ngx-editorjs/src/testing/ng-zone-mock.ts:30\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            onStable\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     EventEmitter\n\n                        \n                    \n                    \n                        \n                            Default value : new EventEmitter(false)\n                        \n                    \n                        \n                            \n                                    Defined in libs/ngx-editorjs/src/testing/ng-zone-mock.ts:16\n                            \n                        \n\n\n            \n        \n\n\n    \n\n\n    \n        import { EventEmitter, Injectable, NgZone } from '@angular/core';\n\n/**\n * A mock implementation of {@link NgZone}.\n */\n@Injectable()\nexport class MockNgZone extends NgZone {\n  onStable: EventEmitter = new EventEmitter(false);\n\n  constructor() {\n    super({ enableLongStackTrace: false });\n  }\n\n  run(fn: Function): any {\n    return fn();\n  }\n\n  runOutsideAngular(fn: Function): any {\n    return fn();\n  }\n\n  simulateZoneExit(): void {\n    this.onStable.emit(null);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/MockPlugin.html":{"url":"classes/MockPlugin.html","title":"class - MockPlugin","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  MockPlugin\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            libs/ngx-editorjs/src/testing/shared.ts\n        \n\n\n\n            \n                Implements\n            \n            \n                            BasePlugin\n            \n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                plugin\n                            \n                            \n                                shortcut\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            plugin\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    plugin()\n                \n            \n\n\n            \n                \n                    Defined in libs/ngx-editorjs/src/testing/shared.ts:13\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :     ToolSettings\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            shortcut\n                        \n                        \n                    \n                \n            \n            \n                \nshortcut()\n                \n            \n\n\n            \n                \n                    Defined in libs/ngx-editorjs/src/testing/shared.ts:16\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         string\n\n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { ToolSettings } from '@editorjs/editorjs';\nimport { BasePlugin } from '../lib/types/plugins';\nimport { NgxEditorJSModuleConfig } from '../lib/types/config';\n\nexport class TestClass {\n  constructor() {}\n  render() {\n    return document.createElement('div');\n  }\n}\n\nexport class MockPlugin implements BasePlugin {\n  public plugin(): ToolSettings {\n    return { class: TestClass };\n  }\n  shortcut() {\n    return 'test-shortcut';\n  }\n}\n\nexport class MockEditorJS {\n  blocks: any;\n  saver: any;\n  version: string;\n  destroy: () => void;\n\n  isReady: Promise;\n\n  constructor(private config: NgxEditorJSModuleConfig) {\n    this.version = 'test';\n\n    this.isReady = Promise.resolve();\n\n    this.destroy = () => {};\n\n    this.blocks = {\n      clear: () => {},\n      render: () => {}\n    };\n\n    this.saver = {\n      save: (): Promise => {\n        return Promise.resolve({\n          time: Date.now(),\n          version: 'test',\n          blocks: []\n        });\n      }\n    };\n    (config as any).onReady();\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/NavBarComponent.html":{"url":"components/NavBarComponent.html","title":"component - NavBarComponent","body":"\n                   \n\n\n\n\n\n  Components\n  NavBarComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    apps/ngx-tinynodes/src/app/components/nav-bar/nav-bar.component.ts\n\n\n    \n        Description\n    \n    \n        Internal NavBar component for the Tinynodes application, provides\ncontrol over the sidebar toggle and displays the main menu\n\n    \n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                tinynodes-nav-bar\n            \n\n            \n                styleUrls\n                nav-bar.component.scss\n            \n\n\n\n            \n                templateUrl\n                nav-bar.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n\n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                menu\n                            \n                            \n                                title\n                            \n                        \n                    \n                \n\n                \n                    \n                        Outputs\n                    \n                \n                \n                    \n                        \n                            \n                                toggleSidebar\n                            \n                        \n                    \n                \n\n\n\n        \n    \n\n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        menu\n                    \n                \n                \n                    \n                        Type :         MenuGroup\n\n                    \n                \n                        \n                            \n                                    Defined in apps/ngx-tinynodes/src/app/components/nav-bar/nav-bar.component.ts:21\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        title\n                    \n                \n                \n                    \n                        Default value : 'Navbar Component'\n                    \n                \n                        \n                            \n                                    Defined in apps/ngx-tinynodes/src/app/components/nav-bar/nav-bar.component.ts:18\n                            \n                        \n                \n                    \n                        Set the title of the component\n\n                    \n                \n            \n        \n\n    \n    Outputs\n        \n            \n                \n                    \n                        \n                        toggleSidebar\n                    \n                \n                \n                    \n                        Type :         EventEmitter\n\n                    \n                \n                        \n                            \n                                    Defined in apps/ngx-tinynodes/src/app/components/nav-bar/nav-bar.component.ts:27\n                            \n                        \n                \n                    \n                        Get an event when the sidebar toggle has been pressed\n\n                    \n                \n            \n        \n\n\n\n\n\n\n\n\n    \n        import { Component, EventEmitter, Input, Output } from '@angular/core';\nimport { MenuGroup } from '@tinynodes/ngx-tinynodes-core';\n\n/**\n * Internal NavBar component for the Tinynodes application, provides\n * control over the sidebar toggle and displays the main menu\n */\n@Component({\n  selector: 'tinynodes-nav-bar',\n  templateUrl: 'nav-bar.component.html',\n  styleUrls: ['nav-bar.component.scss']\n})\nexport class NavBarComponent {\n  /**\n   * Set the title of the component\n   */\n  @Input()\n  title = 'Navbar Component';\n\n  @Input()\n  menu: MenuGroup;\n\n  /**\n   * Get an event when the sidebar toggle has been pressed\n   */\n  @Output()\n  toggleSidebar = new EventEmitter();\n}\n\n    \n\n    \n        \n  \n    menu\n  \n  &nbsp;\n  \n    {{ title }}\n  \n  \n    \n      \n        \n          {{ menuItem.label }}\n        \n      \n    \n  \n\n\n    \n\n    \n                \n                    nav-bar.component.scss\n                \n                a {\n  text-decoration: none;\n  color: white;\n}\n\na:hover,\na:active {\n  color: lightgray;\n}\n\n.navigation-items {\n  list-style: none;\n  padding: 0;\n  margin: 0;\n  cursor: pointer;\n}\n\n.icon {\n  display: inline-block;\n  height: 30px;\n  margin: 0 auto;\n  padding-right: 5px;\n  text-align: center;\n  vertical-align: middle;\n  width: 15%;\n}\n\n.label {\n  display: inline-block;\n  line-height: 30px;\n  margin: 0;\n  width: 85%;\n}\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '      menu           {{ title }}                                {{ menuItem.label }}                    '\n    var COMPONENTS = [{'name': 'AppContainerComponent', 'selector': 'tinynodes-root'},{'name': 'FormContainerComponent', 'selector': 'ngx-form-container'},{'name': 'HomePageComponent', 'selector': 'tinynodes-home-page'},{'name': 'NavBarComponent', 'selector': 'tinynodes-nav-bar'},{'name': 'NgxEditorJSBaseComponent', 'selector': ''},{'name': 'NgxEditorJSComponent', 'selector': 'ngx-editorjs'},{'name': 'NgxEditorJSDemoHomeComponent', 'selector': 'ngx-editorjs-demo-home'},{'name': 'NgxEditorJSDemoInfoComponent', 'selector': 'ngx-editorjs-demo-info'},{'name': 'NgxEditorJSDemoTagComponent', 'selector': 'ngx-editorjs-tag-component'},{'name': 'NgxEditorJSMatFieldComponent', 'selector': 'ngx-editorjs-mat-field'},{'name': 'PageContainerComponent', 'selector': 'ngx-page-container'},{'name': 'SidebarComponent', 'selector': 'tinynodes-sidebar'}];\n    var DIRECTIVES = [{'name': 'NgxEditorJSDirective', 'selector': '[ngxEditorJS]'}];\n    var ACTUAL_COMPONENT = {'name': 'NavBarComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/NgxEditorJSBaseComponent.html":{"url":"components/NgxEditorJSBaseComponent.html","title":"component - NgxEditorJSBaseComponent","body":"\n                   \n\n\n\n\n\n  Components\n  NgxEditorJSBaseComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    libs/ngx-editorjs/src/lib/containers/base/container.class.ts\n\n\n    \n        Description\n    \n    \n        The NgxEditorJSBaseComponent is a fully implemented Angular component for creating EditorJS instances\nwithin an Angular application or Angular Reactive Form.\nThe component provides @Input properties for all the configuration options of\na EditorJS instance and @Output Event Emitters to listen to changes\nThe instance also provides an Autosave feature by providing an autosave time in ms or 0 to disable.\n\n    \n\n\n    \n        Implements\n    \n    \n                    OnDestroy\n                    AfterContentInit\n                    ControlValueAccessor\n    \n\n\n\n    Metadata\n    \n        \n\n            \n                changeDetection\n                ChangeDetectionStrategy.OnPush\n            \n\n\n\n\n\n\n\n\n            \n                providers\n                \n                                EDITORJS_FORM_VALUE_ACCESSOR\n                \n            \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Protected\n                                _value\n                            \n                            \n                                    Public\n                                onChange\n                            \n                            \n                                    Protected\n                                onDestroy$\n                            \n                            \n                                    Public\n                                onTouch\n                            \n                            \n                                    Protected\n                                timerSubscription$\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Protected\n                                getFocusMonitor\n                            \n                            \n                                    Protected\n                                getTimer\n                            \n                            \n                                ngAfterContentInit\n                            \n                            \n                                ngOnDestroy\n                            \n                            \n                                    Public\n                                registerOnChange\n                            \n                            \n                                    Public\n                                registerOnTouched\n                            \n                            \n                                    Public\n                                writeValue\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                autofocus\n                            \n                            \n                                autosave\n                            \n                            \n                                blockPlaceholder\n                            \n                            \n                                blocks\n                            \n                            \n                                hideToolbar\n                            \n                            \n                                holder\n                            \n                            \n                                includeTools\n                            \n                            \n                                initialBlock\n                            \n                            \n                                minHeight\n                            \n                            \n                                sanitizer\n                            \n                        \n                    \n                \n\n                \n                    \n                        Outputs\n                    \n                \n                \n                    \n                        \n                            \n                                hasChanged\n                            \n                            \n                                hasSaved\n                            \n                            \n                                isFocused\n                            \n                            \n                                isReady\n                            \n                            \n                                isTouched\n                            \n                        \n                    \n                \n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(service: NgxEditorJSService, fm: FocusMonitor, cd: ChangeDetectorRef)\n                    \n                \n                        \n                            \n                                Defined in libs/ngx-editorjs/src/lib/containers/base/container.class.ts:152\n                            \n                        \n\n                \n                    \n                            When created an instance of the service is available as\na public interface\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        service\n                                                  \n                                                        \n                                                                        NgxEditorJSService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                The `EditorJS service\n   * @param fm The Focus Monitor\n   * @param cd The Change Detection Ref\n   *\n\n                                                        \n                                                \n                                                \n                                                        fm\n                                                  \n                                                        \n                                                                    FocusMonitor\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                        \n                                                \n                                                \n                                                        cd\n                                                  \n                                                        \n                                                                        ChangeDetectorRef\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        autofocus\n                    \n                \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                        \n                            \n                                    Defined in libs/ngx-editorjs/src/lib/containers/base/container.class.ts:53\n                            \n                        \n                \n                    \n                        Boolean, If set to true the EditorJS instance gets autofocus when initialized\n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        autosave\n                    \n                \n                \n                    \n                        Type :         number\n\n                    \n                \n                        \n                            \n                                    Defined in libs/ngx-editorjs/src/lib/containers/base/container.class.ts:106\n                            \n                        \n                \n                    \n                        Number, Used with Angular Forms this sets an autosave timer active that calls the EditorJS save\nmethod. This patches the FormControl value with every block change and focus and blur, it also autosaves after\na set time\nSet to 0 to disable or pass a value in ms of the autosave time\n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        blockPlaceholder\n                    \n                \n                \n                    \n                        Type :         string\n\n                    \n                \n                        \n                            \n                                    Defined in libs/ngx-editorjs/src/lib/containers/base/container.class.ts:84\n                            \n                        \n                \n                    \n                        String, The text to display as the placeholder text in the first block before content is added\n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        blocks\n                    \n                \n                \n                    \n                        Type :         Block[]\n\n                    \n                \n                        \n                            \n                                    Defined in libs/ngx-editorjs/src/lib/containers/base/container.class.ts:112\n                            \n                        \n                \n                    \n                        Blocks, An initial set of block data to render inside the component\n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        hideToolbar\n                    \n                \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                        \n                            \n                                    Defined in libs/ngx-editorjs/src/lib/containers/base/container.class.ts:59\n                            \n                        \n                \n                    \n                        Boolean, If set to true the toolbar will not show in the EditorJS instance\n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        holder\n                    \n                \n                \n                    \n                        Type :         string\n\n                    \n                \n                        \n                            \n                                    Defined in libs/ngx-editorjs/src/lib/containers/base/container.class.ts:65\n                            \n                        \n                \n                    \n                        String, the ID property of the element that the EditorJS instance will be attached to\n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        includeTools\n                    \n                \n                \n                    \n                        Type :     string[]\n\n                    \n                \n                \n                    \n                        Default value : []\n                    \n                \n                        \n                            \n                                    Defined in libs/ngx-editorjs/src/lib/containers/base/container.class.ts:97\n                            \n                        \n                \n                    \n                        String Array, If empty all tools available via the plugin service will be added.  If a string\narray is set only the tools with the provided keys will be added\n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        initialBlock\n                    \n                \n                \n                    \n                        Type :         string\n\n                    \n                \n                        \n                            \n                                    Defined in libs/ngx-editorjs/src/lib/containers/base/container.class.ts:72\n                            \n                        \n                \n                    \n                        String, The type of block to set as the initial block type. This needs to match a name in the UserPlugins object.\nThe default value is \"paragraph\"\n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        minHeight\n                    \n                \n                \n                    \n                        Type :         number\n\n                    \n                \n                        \n                            \n                                    Defined in libs/ngx-editorjs/src/lib/containers/base/container.class.ts:78\n                            \n                        \n                \n                    \n                        Number, The minimum height of the EditorJS instance bottom after the last block\n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        sanitizer\n                    \n                \n                \n                    \n                        Type :     SanitizerConfig\n\n                    \n                \n                        \n                            \n                                    Defined in libs/ngx-editorjs/src/lib/containers/base/container.class.ts:90\n                            \n                        \n                \n                    \n                        SanitizerConfig, The configuration for the HTML sanitizer\n\n                    \n                \n            \n        \n\n    \n    Outputs\n        \n            \n                \n                    \n                        \n                        hasChanged\n                    \n                \n                \n                    \n                        Type :         EventEmitter\n\n                    \n                \n                        \n                            \n                                    Defined in libs/ngx-editorjs/src/lib/containers/base/container.class.ts:136\n                            \n                        \n                \n                    \n                        Emits if the EditorJS content has changed when save is called\n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        hasSaved\n                    \n                \n                \n                    \n                        Type :         EventEmitter\n\n                    \n                \n                        \n                            \n                                    Defined in libs/ngx-editorjs/src/lib/containers/base/container.class.ts:118\n                            \n                        \n                \n                    \n                        Emits if the content from the EditorJS instance has been saved to the component value\n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        isFocused\n                    \n                \n                \n                    \n                        Type :         EventEmitter\n\n                    \n                \n                        \n                            \n                                    Defined in libs/ngx-editorjs/src/lib/containers/base/container.class.ts:130\n                            \n                        \n                \n                    \n                        Emits if the component is focused\n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        isReady\n                    \n                \n                \n                    \n                        Type :         EventEmitter\n\n                    \n                \n                        \n                            \n                                    Defined in libs/ngx-editorjs/src/lib/containers/base/container.class.ts:142\n                            \n                        \n                \n                    \n                        Emits if the EditorJS component is ready\n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        isTouched\n                    \n                \n                \n                    \n                        Type :         EventEmitter\n\n                    \n                \n                        \n                            \n                                    Defined in libs/ngx-editorjs/src/lib/containers/base/container.class.ts:124\n                            \n                        \n                \n                    \n                        Emits if the component has been touched\n\n                    \n                \n            \n        \n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Protected\n                            getFocusMonitor\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    getFocusMonitor(element: HTMLElement, checkChildren)\n                \n            \n\n\n            \n                \n                    Defined in libs/ngx-editorjs/src/lib/containers/base/container.class.ts:230\n                \n            \n\n\n            \n                \n                    Returns a focus monitor observable with the focus value,\nthe side effect of this monitor is to update the saved state and\nstart any autosave timers\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Default value\n                                    Description\n                                \n                            \n                            \n                                \n                                    element\n                                    \n                                            HTMLElement\n                                    \n\n                                    \n                                        No\n                                    \n\n                                    \n                                    \n\n                                    \n                                        The element to monitor\n\n                                    \n                                \n                                \n                                    checkChildren\n                                    \n                                    \n\n                                    \n                                        No\n                                    \n\n                                    \n                                        true\n                                    \n\n                                    \n                                        If the children should be checked\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Protected\n                            getTimer\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    getTimer(time: number, timeStart: number)\n                \n            \n\n\n            \n                \n                    Defined in libs/ngx-editorjs/src/lib/containers/base/container.class.ts:172\n                \n            \n\n\n            \n                \n                    Internal method to return a new timer for the autosave support\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Default value\n                                    Description\n                                \n                            \n                            \n                                \n                                    time\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n                                    \n                                    \n\n                                    \n                                        Time to do with autosave\n\n                                    \n                                \n                                \n                                    timeStart\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n                                    \n                                        0\n                                    \n\n                                    \n                                        When to trigger the first autosave\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Observable\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngAfterContentInit\n                        \n                        \n                    \n                \n            \n            \n                \nngAfterContentInit()\n                \n            \n\n\n            \n                \n                    Defined in libs/ngx-editorjs/src/lib/containers/base/container.class.ts:260\n                \n            \n\n\n            \n                \n                    Set up listeners for ready and change events\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngOnDestroy\n                        \n                        \n                    \n                \n            \n            \n                \nngOnDestroy()\n                \n            \n\n\n            \n                \n                    Defined in libs/ngx-editorjs/src/lib/containers/base/container.class.ts:289\n                \n            \n\n\n            \n                \n                    If the onDestroy$ subject is not stopped, do it here\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            registerOnChange\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    registerOnChange(fn: (change: EditorJSChange) => void)\n                \n            \n\n\n            \n                \n                    Defined in libs/ngx-editorjs/src/lib/containers/base/container.class.ts:212\n                \n            \n\n\n            \n                \n                    Angular Forms registerOnChange\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    fn\n                                    \n                                                function\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            registerOnTouched\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    registerOnTouched(fn: (event: MouseEvent) => void)\n                \n            \n\n\n            \n                \n                    Defined in libs/ngx-editorjs/src/lib/containers/base/container.class.ts:219\n                \n            \n\n\n            \n                \n                    Angular Forms registerOnTouched\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    fn\n                                    \n                                                function\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            writeValue\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    writeValue(blocks: Block[])\n                \n            \n\n\n            \n                \n                    Defined in libs/ngx-editorjs/src/lib/containers/base/container.class.ts:203\n                \n            \n\n\n            \n                \n                    Angular Forms value writer\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    blocks\n                                    \n                                                Block[]\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Protected\n                            _value\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         any\n\n                        \n                    \n                        \n                            \n                                    Defined in libs/ngx-editorjs/src/lib/containers/base/container.class.ts:147\n                            \n                        \n\n                \n                    \n                        Form field value if used as a field component\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            onChange\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : () => {...}\n                        \n                    \n                        \n                            \n                                    Defined in libs/ngx-editorjs/src/lib/containers/base/container.class.ts:194\n                            \n                        \n\n                \n                    \n                        Field onChange method\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Protected\n                            onDestroy$\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : new Subject()\n                        \n                    \n                        \n                            \n                                    Defined in libs/ngx-editorjs/src/lib/containers/base/container.class.ts:48\n                            \n                        \n\n                \n                    \n                        Component Destroy subject, in your component ngOnDestroy method call .next(true)\nand then .complete() on the this.onDestroy$ subject\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            onTouch\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : () => {...}\n                        \n                    \n                        \n                            \n                                    Defined in libs/ngx-editorjs/src/lib/containers/base/container.class.ts:186\n                            \n                        \n\n                \n                    \n                        Field on touch method\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Protected\n                            timerSubscription$\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     Subscription\n\n                        \n                    \n                        \n                            \n                                    Defined in libs/ngx-editorjs/src/lib/containers/base/container.class.ts:152\n                            \n                        \n\n                \n                    \n                        Subscription holder for the autosave timer subscription\n\n                    \n                \n\n            \n        \n\n\n\n\n\n    \n        import { FocusMonitor } from '@angular/cdk/a11y';\nimport {\n  AfterContentInit,\n  ChangeDetectionStrategy,\n  ChangeDetectorRef,\n  Component,\n  EventEmitter,\n  forwardRef,\n  Input,\n  OnDestroy,\n  Output\n} from '@angular/core';\nimport { Provider } from '@angular/core/src/render3/jit/compiler_facade_interface';\nimport { ControlValueAccessor, NG_VALUE_ACCESSOR } from '@angular/forms';\nimport { OutputData, SanitizerConfig } from '@editorjs/editorjs';\nimport { Observable, Subject, Subscription, timer } from 'rxjs';\nimport { map, takeUntil, tap, timeInterval } from 'rxjs/operators';\nimport { NgxEditorJSService } from '../../services/editorjs.service';\nimport { Block } from '../../types/blocks';\nimport { EditorJSChange } from '../../types/maps';\n\n/**\n * The `NgxEditorJSBaseComponent` Provider for `NG_VALUE_ACCESSOR`\n */\nexport const EDITORJS_FORM_VALUE_ACCESSOR: Provider = {\n  provide: NG_VALUE_ACCESSOR,\n  useExisting: forwardRef(() => NgxEditorJSBaseComponent),\n  multi: true\n};\n\n/**\n * The `NgxEditorJSBaseComponent` is a fully implemented Angular component for creating `EditorJS` instances\n * within an Angular application or Angular Reactive Form.\n * The component provides `@Input` properties for all the configuration options of\n * a `EditorJS` instance and `@Output` Event Emitters to listen to changes\n * The instance also provides an Autosave feature by providing an autosave time in `ms` or `0` to disable.\n */\n@Component({\n  template: '',\n  providers: [EDITORJS_FORM_VALUE_ACCESSOR],\n  changeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class NgxEditorJSBaseComponent implements OnDestroy, AfterContentInit, ControlValueAccessor {\n  /**\n   * Component Destroy subject, in your component `ngOnDestroy` method call `.next(true)`\n   * and then `.complete()` on the `this.onDestroy$` subject\n   */\n  protected onDestroy$ = new Subject();\n  /**\n   * Boolean, If set to true the `EditorJS` instance gets autofocus when initialized\n   */\n  @Input()\n  public autofocus: boolean;\n\n  /**\n   * Boolean, If set to true the toolbar will not show in the `EditorJS` instance\n   */\n  @Input()\n  public hideToolbar: boolean;\n\n  /**\n   * String, the ID property of the element that the `EditorJS` instance will be attached to\n   */\n  @Input()\n  public holder: string;\n\n  /**\n   * String, The type of block to set as the initial block type. This needs to match a name in the `UserPlugins` object.\n   * The default value is \"paragraph\"\n   */\n  @Input()\n  public initialBlock?: string;\n\n  /**\n   * Number, The minimum height of the `EditorJS` instance bottom after the last block\n   */\n  @Input()\n  public minHeight: number;\n\n  /**\n   * String, The text to display as the placeholder text in the first block before content is added\n   */\n  @Input()\n  public blockPlaceholder: string;\n\n  /**\n   * SanitizerConfig, The configuration for the HTML sanitizer\n   */\n  @Input()\n  public sanitizer: SanitizerConfig;\n\n  /**\n   * String Array, If empty all tools available via the plugin service will be added.  If a string\n   * array is set only the tools with the provided keys will be added\n   */\n  @Input()\n  public includeTools: string[] = [];\n\n  /**\n   * Number, Used with Angular Forms this sets an autosave timer active that calls the `EditorJS` save\n   * method. This patches the `FormControl` value with every block change and focus and blur, it also autosaves after\n   * a set time\n   * Set to 0 to disable or pass a value in `ms` of the autosave time\n   */\n  @Input()\n  public autosave: number;\n\n  /**\n   * Blocks, An initial set of block data to render inside the component\n   */\n  @Input()\n  public blocks: Block[];\n\n  /**\n   * Emits if the content from the `EditorJS` instance has been saved to the component value\n   */\n  @Output()\n  public hasSaved = new EventEmitter();\n\n  /**\n   * Emits if the component has been touched\n   */\n  @Output()\n  public isTouched = new EventEmitter();\n\n  /**\n   * Emits if the component is focused\n   */\n  @Output()\n  public isFocused = new EventEmitter();\n\n  /**\n   * Emits if the `EditorJS` content has changed when `save` is called\n   */\n  @Output()\n  public hasChanged = new EventEmitter();\n\n  /**\n   * Emits if the `EditorJS` component is ready\n   */\n  @Output()\n  public isReady = new EventEmitter();\n\n  /**\n   * Form field value if used as a field component\n   */\n  protected _value: any;\n\n  /**\n   * Subscription holder for the autosave timer subscription\n   */\n  protected timerSubscription$: Subscription;\n\n  /**\n   * When created an instance of the service is available as\n   * a public interface\n   * @param service The `EditorJS service\n   * @param fm The Focus Monitor\n   * @param cd The Change Detection Ref\n   */\n  constructor(\n    protected readonly service: NgxEditorJSService,\n    protected readonly fm: FocusMonitor,\n    protected readonly cd: ChangeDetectorRef\n  ) {}\n\n  /**\n   * Internal method to return a new timer for the autosave support\n   * @param time Time to do with autosave\n   * @param timeStart When to trigger the first autosave\n   */\n  protected getTimer(time: number, timeStart = 0): Observable {\n    return timer(timeStart, time).pipe(\n      timeInterval(),\n      map(interval => interval.interval),\n      tap(() => {\n        this.service.save({ holder: this.holder });\n        this.cd.markForCheck();\n      })\n    );\n  }\n\n  /**\n   * Field on touch method\n   */\n  public onTouch = (event?: MouseEvent) => {\n    this.isTouched.emit(true);\n    this.cd.markForCheck();\n  };\n\n  /**\n   * Field onChange method\n   */\n  public onChange = (change: EditorJSChange) => {\n    this.hasChanged.emit(change);\n    this.cd.markForCheck();\n  };\n\n  /**\n   * Angular Forms value writer\n   * @param blocks\n   */\n  public writeValue(blocks: Block[]) {\n    this._value = blocks;\n    this.service.save({ holder: this.holder, blocks });\n    this.cd.markForCheck();\n  }\n\n  /**\n   * Angular Forms registerOnChange\n   */\n  public registerOnChange(fn: (change: EditorJSChange) => void): void {\n    this.onChange = fn;\n  }\n\n  /**\n   * Angular Forms registerOnTouched\n   */\n  public registerOnTouched(fn: (event?: MouseEvent) => void): void {\n    this.onTouch = fn;\n  }\n\n  /**\n   * Returns a focus monitor observable with the focus value,\n   * the side effect of this monitor is to update the saved state and\n   * start any autosave timers\n   * @param element The element to monitor\n   * @param checkChildren If the children should be checked\n   */\n  protected getFocusMonitor(element: HTMLElement, checkChildren = true) {\n    return this.fm.monitor(element, checkChildren).pipe(\n      map(origin => !!origin),\n      tap(focused => {\n        if (!focused) {\n          this.isFocused.emit(false);\n          if (!this.autosave) {\n            this.hasSaved.emit(false);\n          }\n          if (this.timerSubscription$) {\n            this.timerSubscription$.unsubscribe();\n          }\n        } else {\n          this.isFocused.emit(true);\n          this.hasSaved.emit(false);\n          if (this.autosave > 0) {\n            this.timerSubscription$ = this.getTimer(this.autosave, 0).subscribe();\n          }\n        }\n        return focused;\n      }),\n      tap(() => {\n        this.cd.markForCheck();\n      })\n    );\n  }\n\n  /**\n   * Set up listeners for ready and change events\n   */\n  ngAfterContentInit() {\n    this.service\n      .isReady({ holder: this.holder })\n      .pipe(takeUntil(this.onDestroy$))\n      .subscribe(isReady => {\n        this.isReady.emit(isReady);\n        this.cd.markForCheck();\n      });\n\n    this.service\n      .hasChanged({ holder: this.holder })\n      .pipe(takeUntil(this.onDestroy$))\n      .subscribe(change => {\n        this.hasChanged.emit(change);\n        this.cd.markForCheck();\n      });\n\n    this.service\n      .hasSaved({ holder: this.holder })\n      .pipe(takeUntil(this.onDestroy$))\n      .subscribe(saved => {\n        this.hasSaved.next(saved);\n        this.cd.markForCheck();\n      });\n  }\n\n  /**\n   * If the onDestroy$ subject is not stopped, do it here\n   */\n  ngOnDestroy() {\n    if (!this.onDestroy$.closed) {\n      this.onDestroy$.next(true);\n      this.onDestroy$.complete();\n    }\n  }\n}\n\n    \n\n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = ''\n    var COMPONENTS = [{'name': 'AppContainerComponent', 'selector': 'tinynodes-root'},{'name': 'FormContainerComponent', 'selector': 'ngx-form-container'},{'name': 'HomePageComponent', 'selector': 'tinynodes-home-page'},{'name': 'NavBarComponent', 'selector': 'tinynodes-nav-bar'},{'name': 'NgxEditorJSBaseComponent', 'selector': ''},{'name': 'NgxEditorJSComponent', 'selector': 'ngx-editorjs'},{'name': 'NgxEditorJSDemoHomeComponent', 'selector': 'ngx-editorjs-demo-home'},{'name': 'NgxEditorJSDemoInfoComponent', 'selector': 'ngx-editorjs-demo-info'},{'name': 'NgxEditorJSDemoTagComponent', 'selector': 'ngx-editorjs-tag-component'},{'name': 'NgxEditorJSMatFieldComponent', 'selector': 'ngx-editorjs-mat-field'},{'name': 'PageContainerComponent', 'selector': 'ngx-page-container'},{'name': 'SidebarComponent', 'selector': 'tinynodes-sidebar'}];\n    var DIRECTIVES = [{'name': 'NgxEditorJSDirective', 'selector': '[ngxEditorJS]'}];\n    var ACTUAL_COMPONENT = {'name': 'NgxEditorJSBaseComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/NgxEditorJSComponent.html":{"url":"components/NgxEditorJSComponent.html","title":"component - NgxEditorJSComponent","body":"\n                   \n\n\n\n\n\n  Components\n  NgxEditorJSComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    libs/ngx-editorjs/src/lib/containers/editorjs/editorjs.component.ts\n\n\n    \n        Description\n    \n    \n        This component is provided as a shortcut to using EditorJS in your\napplication. The attributes are optional and without a default component\nwill be created\n\n    \n\n    \n        Extends\n    \n    \n                NgxEditorJSBaseComponent\n    \n\n\n    \n        Example\n    \n    \n                \n                    \n                \n    \n\n\n    Metadata\n    \n        \n\n            \n                changeDetection\n                ChangeDetectionStrategy.OnPush\n            \n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                ngx-editorjs\n            \n\n            \n                styleUrls\n                editorjs.component.scss\n            \n\n\n\n            \n                templateUrl\n                editorjs.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                editorEl\n                            \n                            \n                                    Protected\n                                _value\n                            \n                            \n                                    Public\n                                onChange\n                            \n                            \n                                    Protected\n                                onDestroy$\n                            \n                            \n                                    Public\n                                onTouch\n                            \n                            \n                                    Protected\n                                timerSubscription$\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngAfterContentInit\n                            \n                            \n                                ngOnDestroy\n                            \n                            \n                                    Protected\n                                getFocusMonitor\n                            \n                            \n                                    Protected\n                                getTimer\n                            \n                            \n                                ngAfterContentInit\n                            \n                            \n                                ngOnDestroy\n                            \n                            \n                                    Public\n                                registerOnChange\n                            \n                            \n                                    Public\n                                registerOnTouched\n                            \n                            \n                                    Public\n                                writeValue\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                autofocus\n                            \n                            \n                                autosave\n                            \n                            \n                                blockPlaceholder\n                            \n                            \n                                blocks\n                            \n                            \n                                hideToolbar\n                            \n                            \n                                holder\n                            \n                            \n                                includeTools\n                            \n                            \n                                initialBlock\n                            \n                            \n                                minHeight\n                            \n                            \n                                sanitizer\n                            \n                        \n                    \n                \n\n                \n                    \n                        Outputs\n                    \n                \n                \n                    \n                        \n                            \n                                hasChanged\n                            \n                            \n                                hasSaved\n                            \n                            \n                                isFocused\n                            \n                            \n                                isReady\n                            \n                            \n                                isTouched\n                            \n                        \n                    \n                \n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(service: NgxEditorJSService, fm: FocusMonitor, cd: ChangeDetectorRef)\n                    \n                \n                        \n                            \n                                Defined in libs/ngx-editorjs/src/lib/containers/editorjs/editorjs.component.ts:26\n                            \n                        \n\n                \n                    \n                            Constructs the Editor component\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        service\n                                                  \n                                                        \n                                                                        NgxEditorJSService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                The NgxEditorJSService instance\n\n                                                        \n                                                \n                                                \n                                                        fm\n                                                  \n                                                        \n                                                                    FocusMonitor\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                        \n                                                \n                                                \n                                                        cd\n                                                  \n                                                        \n                                                                        ChangeDetectorRef\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        autofocus\n                    \n                \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                            \n                                \n                                    Inherited from         NgxEditorJSBaseComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in         NgxEditorJSBaseComponent:53\n\n                            \n                        \n                \n                    \n                        Boolean, If set to true the EditorJS instance gets autofocus when initialized\n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        autosave\n                    \n                \n                \n                    \n                        Type :         number\n\n                    \n                \n                            \n                                \n                                    Inherited from         NgxEditorJSBaseComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in         NgxEditorJSBaseComponent:106\n\n                            \n                        \n                \n                    \n                        Number, Used with Angular Forms this sets an autosave timer active that calls the EditorJS save\nmethod. This patches the FormControl value with every block change and focus and blur, it also autosaves after\na set time\nSet to 0 to disable or pass a value in ms of the autosave time\n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        blockPlaceholder\n                    \n                \n                \n                    \n                        Type :         string\n\n                    \n                \n                            \n                                \n                                    Inherited from         NgxEditorJSBaseComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in         NgxEditorJSBaseComponent:84\n\n                            \n                        \n                \n                    \n                        String, The text to display as the placeholder text in the first block before content is added\n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        blocks\n                    \n                \n                \n                    \n                        Type :         Block[]\n\n                    \n                \n                            \n                                \n                                    Inherited from         NgxEditorJSBaseComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in         NgxEditorJSBaseComponent:112\n\n                            \n                        \n                \n                    \n                        Blocks, An initial set of block data to render inside the component\n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        hideToolbar\n                    \n                \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                            \n                                \n                                    Inherited from         NgxEditorJSBaseComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in         NgxEditorJSBaseComponent:59\n\n                            \n                        \n                \n                    \n                        Boolean, If set to true the toolbar will not show in the EditorJS instance\n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        holder\n                    \n                \n                \n                    \n                        Type :         string\n\n                    \n                \n                            \n                                \n                                    Inherited from         NgxEditorJSBaseComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in         NgxEditorJSBaseComponent:65\n\n                            \n                        \n                \n                    \n                        String, the ID property of the element that the EditorJS instance will be attached to\n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        includeTools\n                    \n                \n                \n                    \n                        Type :     string[]\n\n                    \n                \n                \n                    \n                        Default value : []\n                    \n                \n                            \n                                \n                                    Inherited from         NgxEditorJSBaseComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in         NgxEditorJSBaseComponent:97\n\n                            \n                        \n                \n                    \n                        String Array, If empty all tools available via the plugin service will be added.  If a string\narray is set only the tools with the provided keys will be added\n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        initialBlock\n                    \n                \n                \n                    \n                        Type :         string\n\n                    \n                \n                            \n                                \n                                    Inherited from         NgxEditorJSBaseComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in         NgxEditorJSBaseComponent:72\n\n                            \n                        \n                \n                    \n                        String, The type of block to set as the initial block type. This needs to match a name in the UserPlugins object.\nThe default value is \"paragraph\"\n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        minHeight\n                    \n                \n                \n                    \n                        Type :         number\n\n                    \n                \n                            \n                                \n                                    Inherited from         NgxEditorJSBaseComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in         NgxEditorJSBaseComponent:78\n\n                            \n                        \n                \n                    \n                        Number, The minimum height of the EditorJS instance bottom after the last block\n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        sanitizer\n                    \n                \n                \n                    \n                        Type :     SanitizerConfig\n\n                    \n                \n                            \n                                \n                                    Inherited from         NgxEditorJSBaseComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in         NgxEditorJSBaseComponent:90\n\n                            \n                        \n                \n                    \n                        SanitizerConfig, The configuration for the HTML sanitizer\n\n                    \n                \n            \n        \n\n    \n    Outputs\n        \n            \n                \n                    \n                        \n                        hasChanged\n                    \n                \n                \n                    \n                        Type :         EventEmitter\n\n                    \n                \n                            \n                                \n                                    Inherited from         NgxEditorJSBaseComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in         NgxEditorJSBaseComponent:136\n\n                            \n                        \n                \n                    \n                        Emits if the EditorJS content has changed when save is called\n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        hasSaved\n                    \n                \n                \n                    \n                        Type :         EventEmitter\n\n                    \n                \n                            \n                                \n                                    Inherited from         NgxEditorJSBaseComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in         NgxEditorJSBaseComponent:118\n\n                            \n                        \n                \n                    \n                        Emits if the content from the EditorJS instance has been saved to the component value\n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        isFocused\n                    \n                \n                \n                    \n                        Type :         EventEmitter\n\n                    \n                \n                            \n                                \n                                    Inherited from         NgxEditorJSBaseComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in         NgxEditorJSBaseComponent:130\n\n                            \n                        \n                \n                    \n                        Emits if the component is focused\n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        isReady\n                    \n                \n                \n                    \n                        Type :         EventEmitter\n\n                    \n                \n                            \n                                \n                                    Inherited from         NgxEditorJSBaseComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in         NgxEditorJSBaseComponent:142\n\n                            \n                        \n                \n                    \n                        Emits if the EditorJS component is ready\n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        isTouched\n                    \n                \n                \n                    \n                        Type :         EventEmitter\n\n                    \n                \n                            \n                                \n                                    Inherited from         NgxEditorJSBaseComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in         NgxEditorJSBaseComponent:124\n\n                            \n                        \n                \n                    \n                        Emits if the component has been touched\n\n                    \n                \n            \n        \n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngAfterContentInit\n                        \n                        \n                    \n                \n            \n            \n                \nngAfterContentInit()\n                \n            \n\n\n            \n                \n                    Defined in libs/ngx-editorjs/src/lib/containers/editorjs/editorjs.component.ts:43\n                \n            \n\n\n            \n                \n                    Set up the focus monitor for the editor touch status\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngOnDestroy\n                        \n                        \n                    \n                \n            \n            \n                \nngOnDestroy()\n                \n            \n\n\n            \n                \n                    Defined in libs/ngx-editorjs/src/lib/containers/editorjs/editorjs.component.ts:56\n                \n            \n\n\n            \n                \n                    Destroy the monitor and subscription and call the onDestroy$ subject\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Protected\n                            getFocusMonitor\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    getFocusMonitor(element: HTMLElement, checkChildren)\n                \n            \n\n\n            \n                \n                    Inherited from         NgxEditorJSBaseComponent\n\n                \n            \n            \n                \n                        Defined in         NgxEditorJSBaseComponent:230\n\n                \n            \n\n\n            \n                \n                    Returns a focus monitor observable with the focus value,\nthe side effect of this monitor is to update the saved state and\nstart any autosave timers\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Default value\n                                    Description\n                                \n                            \n                            \n                                \n                                    element\n                                    \n                                            HTMLElement\n                                    \n\n                                    \n                                        No\n                                    \n\n                                    \n                                    \n\n                                    \n                                        The element to monitor\n\n                                    \n                                \n                                \n                                    checkChildren\n                                    \n                                    \n\n                                    \n                                        No\n                                    \n\n                                    \n                                        true\n                                    \n\n                                    \n                                        If the children should be checked\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Protected\n                            getTimer\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    getTimer(time: number, timeStart: number)\n                \n            \n\n\n            \n                \n                    Inherited from         NgxEditorJSBaseComponent\n\n                \n            \n            \n                \n                        Defined in         NgxEditorJSBaseComponent:172\n\n                \n            \n\n\n            \n                \n                    Internal method to return a new timer for the autosave support\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Default value\n                                    Description\n                                \n                            \n                            \n                                \n                                    time\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n                                    \n                                    \n\n                                    \n                                        Time to do with autosave\n\n                                    \n                                \n                                \n                                    timeStart\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n                                    \n                                        0\n                                    \n\n                                    \n                                        When to trigger the first autosave\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Observable\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngAfterContentInit\n                        \n                        \n                    \n                \n            \n            \n                \nngAfterContentInit()\n                \n            \n\n\n            \n                \n                    Inherited from         NgxEditorJSBaseComponent\n\n                \n            \n            \n                \n                        Defined in         NgxEditorJSBaseComponent:260\n\n                \n            \n\n\n            \n                \n                    Set up listeners for ready and change events\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngOnDestroy\n                        \n                        \n                    \n                \n            \n            \n                \nngOnDestroy()\n                \n            \n\n\n            \n                \n                    Inherited from         NgxEditorJSBaseComponent\n\n                \n            \n            \n                \n                        Defined in         NgxEditorJSBaseComponent:289\n\n                \n            \n\n\n            \n                \n                    If the onDestroy$ subject is not stopped, do it here\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            registerOnChange\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    registerOnChange(fn: (change: EditorJSChange) => void)\n                \n            \n\n\n            \n                \n                    Inherited from         NgxEditorJSBaseComponent\n\n                \n            \n            \n                \n                        Defined in         NgxEditorJSBaseComponent:212\n\n                \n            \n\n\n            \n                \n                    Angular Forms registerOnChange\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    fn\n                                    \n                                                function\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            registerOnTouched\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    registerOnTouched(fn: (event: MouseEvent) => void)\n                \n            \n\n\n            \n                \n                    Inherited from         NgxEditorJSBaseComponent\n\n                \n            \n            \n                \n                        Defined in         NgxEditorJSBaseComponent:219\n\n                \n            \n\n\n            \n                \n                    Angular Forms registerOnTouched\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    fn\n                                    \n                                                function\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            writeValue\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    writeValue(blocks: Block[])\n                \n            \n\n\n            \n                \n                    Inherited from         NgxEditorJSBaseComponent\n\n                \n            \n            \n                \n                        Defined in         NgxEditorJSBaseComponent:203\n\n                \n            \n\n\n            \n                \n                    Angular Forms value writer\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    blocks\n                                    \n                                                Block[]\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            editorEl\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     NgxEditorJSDirective\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @ViewChild(NgxEditorJSDirective)\n                            \n                        \n                    \n                        \n                            \n                                    Defined in libs/ngx-editorjs/src/lib/containers/editorjs/editorjs.component.ts:26\n                            \n                        \n\n                \n                    \n                        Access to the underlying editor directive\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Protected\n                            _value\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         any\n\n                        \n                    \n                            \n                                \n                                    Inherited from         NgxEditorJSBaseComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in         NgxEditorJSBaseComponent:147\n\n                            \n                        \n\n                \n                    \n                        Form field value if used as a field component\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            onChange\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : () => {...}\n                        \n                    \n                            \n                                \n                                    Inherited from         NgxEditorJSBaseComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in         NgxEditorJSBaseComponent:194\n\n                            \n                        \n\n                \n                    \n                        Field onChange method\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Protected\n                            onDestroy$\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : new Subject()\n                        \n                    \n                            \n                                \n                                    Inherited from         NgxEditorJSBaseComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in         NgxEditorJSBaseComponent:48\n\n                            \n                        \n\n                \n                    \n                        Component Destroy subject, in your component ngOnDestroy method call .next(true)\nand then .complete() on the this.onDestroy$ subject\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            onTouch\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : () => {...}\n                        \n                    \n                            \n                                \n                                    Inherited from         NgxEditorJSBaseComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in         NgxEditorJSBaseComponent:186\n\n                            \n                        \n\n                \n                    \n                        Field on touch method\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Protected\n                            timerSubscription$\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     Subscription\n\n                        \n                    \n                            \n                                \n                                    Inherited from         NgxEditorJSBaseComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in         NgxEditorJSBaseComponent:152\n\n                            \n                        \n\n                \n                    \n                        Subscription holder for the autosave timer subscription\n\n                    \n                \n\n            \n        \n\n\n\n\n\n    \n        import { FocusMonitor } from '@angular/cdk/a11y';\nimport { Component, ViewChild, ChangeDetectionStrategy, ChangeDetectorRef } from '@angular/core';\nimport { takeUntil } from 'rxjs/operators';\nimport { NgxEditorJSDirective } from '../../directives/ngx-editorjs.directive';\nimport { NgxEditorJSService } from '../../services/editorjs.service';\nimport { NgxEditorJSBaseComponent } from '../base/container.class';\n\n/**\n * This component is provided as a shortcut to using EditorJS in your\n * application. The attributes are optional and without a default component\n * will be created\n *\n * @example\n * \n */\n@Component({\n  selector: 'ngx-editorjs',\n  templateUrl: 'editorjs.component.html',\n  styleUrls: ['editorjs.component.scss'],\n  changeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class NgxEditorJSComponent extends NgxEditorJSBaseComponent {\n  /**\n   * Access to the underlying editor directive\n   */\n  @ViewChild(NgxEditorJSDirective) public editorEl: NgxEditorJSDirective;\n\n  /**\n   * Constructs the Editor component\n   * @param service The NgxEditorJSService instance\n   */\n  constructor(\n    protected readonly service: NgxEditorJSService,\n    protected readonly fm: FocusMonitor,\n    protected readonly cd: ChangeDetectorRef\n  ) {\n    super(service, fm, cd);\n  }\n\n  /**\n   * Set up the focus monitor for the editor touch status\n   */\n  ngAfterContentInit() {\n    this.getFocusMonitor(this.editorEl.element)\n      .pipe(takeUntil(this.onDestroy$))\n      .subscribe(focused => {\n        this.isTouched.emit(true);\n        this.onTouch();\n        this.cd.markForCheck();\n      });\n  }\n\n  /**\n   * Destroy the monitor and subscription and call the onDestroy$ subject\n   */\n  ngOnDestroy(): void {\n    this.fm.stopMonitoring(this.editorEl.element);\n    if (this.timerSubscription$ && !this.timerSubscription$.closed) {\n      this.timerSubscription$.unsubscribe();\n    }\n    if (!this.onDestroy$.closed) {\n      this.onDestroy$.next(true);\n      this.onDestroy$.complete();\n    }\n  }\n}\n\n    \n\n    \n        \n\n    \n\n    \n                \n                    editorjs.component.scss\n                \n                :host {\n  position: relative;\n  width: 100%;\n  height: 100%;\n  display: flex;\n  flex-direction: row;\n}\n\n.editor {\n  flex: 1;\n  position: relative;\n  width: 100%;\n  height: 100%;\n  border: 2px solid darkgray;\n  border-radius: 1em;\n  text-align: left;\n}\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = ''\n    var COMPONENTS = [{'name': 'AppContainerComponent', 'selector': 'tinynodes-root'},{'name': 'FormContainerComponent', 'selector': 'ngx-form-container'},{'name': 'HomePageComponent', 'selector': 'tinynodes-home-page'},{'name': 'NavBarComponent', 'selector': 'tinynodes-nav-bar'},{'name': 'NgxEditorJSBaseComponent', 'selector': ''},{'name': 'NgxEditorJSComponent', 'selector': 'ngx-editorjs'},{'name': 'NgxEditorJSDemoHomeComponent', 'selector': 'ngx-editorjs-demo-home'},{'name': 'NgxEditorJSDemoInfoComponent', 'selector': 'ngx-editorjs-demo-info'},{'name': 'NgxEditorJSDemoTagComponent', 'selector': 'ngx-editorjs-tag-component'},{'name': 'NgxEditorJSMatFieldComponent', 'selector': 'ngx-editorjs-mat-field'},{'name': 'PageContainerComponent', 'selector': 'ngx-page-container'},{'name': 'SidebarComponent', 'selector': 'tinynodes-sidebar'}];\n    var DIRECTIVES = [{'name': 'NgxEditorJSDirective', 'selector': '[ngxEditorJS]'}];\n    var ACTUAL_COMPONENT = {'name': 'NgxEditorJSComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/NgxEditorJSConfig.html":{"url":"interfaces/NgxEditorJSConfig.html","title":"interface - NgxEditorJSConfig","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  NgxEditorJSConfig\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            libs/ngx-editorjs/src/lib/types/config.ts\n        \n\n            \n                Description\n            \n            \n                Configuration for the EditorJS instance\n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                            Optional\n                                        autofocus\n                                \n                                \n                                            Optional\n                                        blockPlaceholder\n                                \n                                \n                                            Optional\n                                        data\n                                \n                                \n                                            Optional\n                                        hideToolbar\n                                \n                                \n                                            Optional\n                                        holder\n                                \n                                \n                                            Optional\n                                        initialBlock\n                                \n                                \n                                            Optional\n                                        minHeight\n                                \n                                \n                                            Optional\n                                        sanitizer\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        autofocus\n                                    \n                                \n                                \n                                    \n                                        autofocus:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    If the EditorJS is autofocused on creation (default: false)\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        blockPlaceholder\n                                    \n                                \n                                \n                                    \n                                        blockPlaceholder:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    First Block placeholder\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        data\n                                    \n                                \n                                \n                                    \n                                        data:     OutputData\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     OutputData\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    Any initial output data to render\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        hideToolbar\n                                    \n                                \n                                \n                                    \n                                        hideToolbar:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    If true, toolbar won't be shown\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        holder\n                                    \n                                \n                                \n                                    \n                                        holder:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    ID of the element to hold the config\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        initialBlock\n                                    \n                                \n                                \n                                    \n                                        initialBlock:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    The name of the initial block (default \"paragraph\")\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        minHeight\n                                    \n                                \n                                \n                                    \n                                        minHeight:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    Height of Editor's bottom area that allows to set focus on the last Block\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        sanitizer\n                                    \n                                \n                                \n                                    \n                                        sanitizer:     SanitizerConfig\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     SanitizerConfig\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    Define default sanitizer configuration\n\n                                \n                            \n                        \n                    \n            \n    \n\n\n    \n        import { InjectionToken } from '@angular/core';\nimport EditorJS, { OutputData, SanitizerConfig, EditorConfig } from '@editorjs/editorjs';\n\n/**\n * Configuration for the EditorJS instance\n */\nexport interface NgxEditorJSConfig {\n  /**\n   * If the EditorJS is autofocused on creation (default: false)\n   */\n  autofocus?: boolean;\n\n  /**\n   * Any initial output data to render\n   */\n  data?: OutputData;\n\n  /**\n   * If true, toolbar won't be shown\n   */\n  hideToolbar?: boolean;\n\n  /**\n   * ID of the element to hold the config\n   */\n  holder?: string;\n\n  /**\n   * The name of the initial block (default \"paragraph\")\n   */\n  initialBlock?: string;\n\n  /**\n   * Height of Editor's bottom area that allows to set focus on the last Block\n   */\n  minHeight?: number;\n\n  /**\n   * First Block placeholder\n   */\n  blockPlaceholder?: string;\n\n  /**\n   * Define default sanitizer configuration\n   */\n  sanitizer?: SanitizerConfig;\n}\n\n/**\n * The configuration option that can be passed to the `NgxEditorJSModule.forRoot` method\n */\nexport interface NgxEditorJSModuleConfig {\n  /**\n   * Configuration options for `EditorJS`\n   */\n  editorjs?: EditorConfig;\n}\n\n/**\n * Injection token provied for `NgxEditorJSConfig`\n */\nexport const NGX_EDITORJS_CONFIG = new InjectionToken('NGX_EDITORJS_CONFIG');\n\n/**\n * Internal token for injecting the `NgxEditorJSConfig` into the config factory\n */\nexport const FOR_ROOT_OPTIONS_TOKEN = new InjectionToken('FOR_ROOT_OPTIONS_TOKEN');\n\n/**\n * Get the EditorJS instance injected into the app\n */\nexport const EDITIOR_JS_INSTANCE = new InjectionToken('EDITIOR_JS_INSTANCE');\n\n    \n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/NgxEditorJSDemo.html":{"url":"interfaces/NgxEditorJSDemo.html","title":"interface - NgxEditorJSDemo","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  NgxEditorJSDemo\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            libs/ngx-tinynodes-core/src/lib/stores/app/application.model.ts\n        \n\n            \n                Description\n            \n            \n                Interface for ngx-editorjs-demo data\nTODO: This should be moved\n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        blocks\n                                \n                                \n                                        links\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        blocks\n                                    \n                                \n                                \n                                    \n                                        blocks:         Block[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         Block[]\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    The initial blocks for the demo\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        links\n                                    \n                                \n                                \n                                    \n                                        links:         MenuGroup\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         MenuGroup\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Links for this demo\n\n                                \n                            \n                        \n                    \n            \n    \n\n\n    \n        import { Block } from '@tinynodes/ngx-editorjs';\nimport { MenuGroup, MenuItem } from '../../types/app';\n\n/**\n * An Enum of the keys in the application state\n */\nexport enum ApplicationStateKeys {\n  /**\n   * The hidden state key\n   */\n  Hidden = 'hidden',\n\n  /**\n   * The menus key\n   */\n  Menus = 'menus',\n\n  /**\n   * The demo data key\n   */\n  DemoData = 'demoData'\n}\n\n/**\n * Interface for a demo data object\n */\nexport interface DemoData {\n  /**\n   * The name of the demo (e.g. `ngx-editorjs-demo`)\n   */\n  name: string;\n  /**\n   * The data for the demo as ``\n   */\n  data: T;\n}\n\n/**\n * Interface for `ngx-editorjs-demo` data\n * TODO: This should be moved\n */\nexport interface NgxEditorJSDemo {\n  /**\n   * The initial blocks for the demo\n   */\n  blocks: Block[];\n\n  /**\n   * Links for this demo\n   */\n  links: MenuGroup;\n}\n\n/**\n * The demo data for `ngx-editorjs-demo`\n */\nexport interface NgxEditorJSDemoData extends DemoData {}\n\n/**\n * The demos on tinynodes\n */\nexport interface TinynodeDemos {\n  /**\n   * The `ngx-editorjs-demo` data\n   */\n  'ngx-editorjs-demo': NgxEditorJSDemoData;\n}\n\n/**\n * A representation of the application state\n */\nexport interface ApplicationState {\n  /**\n   * If the side menu is hidden\n   */\n  hidden: boolean;\n\n  /**\n   * A set of menus loaded from application data\n   */\n  menus: MenuGroup[];\n\n  /**\n   * Data for demos\n   */\n  demoData: DemoData[];\n}\n\n    \n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/NgxEditorJSDemo-1.html":{"url":"interfaces/NgxEditorJSDemo-1.html","title":"interface - NgxEditorJSDemo-1","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  NgxEditorJSDemo\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/ngx-tinynodes/src/app/core/stores/app/application.model.ts\n        \n\n            \n                Description\n            \n            \n                Interface for ngx-editorjs-demo data\nTODO: This should be moved\n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        blocks\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        blocks\n                                    \n                                \n                                \n                                    \n                                        blocks:         Block[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         Block[]\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    The initial blocks for the demo\n\n                                \n                            \n                        \n                    \n            \n    \n\n\n    \n        import { Block } from '@tinynodes/ngx-editorjs';\nimport { MenuGroup } from '../../types/app';\n\n/**\n * An Enum of the keys in the application state\n */\nexport enum ApplicationStateKeys {\n  /**\n   * The hidden state key\n   */\n  Hidden = 'hidden',\n\n  /**\n   * The menus key\n   */\n  Menus = 'menus',\n\n  /**\n   * The demo data key\n   */\n  DemoData = 'demoData'\n}\n\n/**\n * Interface for a demo data object\n */\nexport interface DemoData {\n  /**\n   * The name of the demo (e.g. `ngx-editorjs-demo`)\n   */\n  name: string;\n  /**\n   * The data for the demo as ``\n   */\n  data: T;\n}\n\n/**\n * Interface for `ngx-editorjs-demo` data\n * TODO: This should be moved\n */\nexport interface NgxEditorJSDemo {\n  /**\n   * The initial blocks for the demo\n   */\n  blocks: Block[];\n}\n\n/**\n * The demo data for `ngx-editorjs-demo`\n */\nexport interface NgxEditorJSDemoData extends DemoData {}\n\n/**\n * The demos on tinynodes\n */\nexport interface TinynodeDemos {\n  /**\n   * The `ngx-editorjs-demo` data\n   */\n  'ngx-editorjs-demo': NgxEditorJSDemoData;\n}\n\n/**\n * A representation of the application state\n */\nexport interface ApplicationState {\n  /**\n   * If the side menu is hidden\n   */\n  hidden: boolean;\n\n  /**\n   * A set of menus loaded from application data\n   */\n  menus: MenuGroup[];\n\n  /**\n   * Data for demos\n   */\n  demoData: DemoData[];\n}\n\n    \n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/NgxEditorJSDemoData.html":{"url":"interfaces/NgxEditorJSDemoData.html","title":"interface - NgxEditorJSDemoData","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  NgxEditorJSDemoData\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            libs/ngx-tinynodes-core/src/lib/stores/app/application.model.ts\n        \n\n            \n                Description\n            \n            \n                The demo data for ngx-editorjs-demo\n\n            \n\n            \n                Extends\n            \n            \n                        DemoData\n            \n\n\n\n\n    \n\n\n    \n        import { Block } from '@tinynodes/ngx-editorjs';\nimport { MenuGroup, MenuItem } from '../../types/app';\n\n/**\n * An Enum of the keys in the application state\n */\nexport enum ApplicationStateKeys {\n  /**\n   * The hidden state key\n   */\n  Hidden = 'hidden',\n\n  /**\n   * The menus key\n   */\n  Menus = 'menus',\n\n  /**\n   * The demo data key\n   */\n  DemoData = 'demoData'\n}\n\n/**\n * Interface for a demo data object\n */\nexport interface DemoData {\n  /**\n   * The name of the demo (e.g. `ngx-editorjs-demo`)\n   */\n  name: string;\n  /**\n   * The data for the demo as ``\n   */\n  data: T;\n}\n\n/**\n * Interface for `ngx-editorjs-demo` data\n * TODO: This should be moved\n */\nexport interface NgxEditorJSDemo {\n  /**\n   * The initial blocks for the demo\n   */\n  blocks: Block[];\n\n  /**\n   * Links for this demo\n   */\n  links: MenuGroup;\n}\n\n/**\n * The demo data for `ngx-editorjs-demo`\n */\nexport interface NgxEditorJSDemoData extends DemoData {}\n\n/**\n * The demos on tinynodes\n */\nexport interface TinynodeDemos {\n  /**\n   * The `ngx-editorjs-demo` data\n   */\n  'ngx-editorjs-demo': NgxEditorJSDemoData;\n}\n\n/**\n * A representation of the application state\n */\nexport interface ApplicationState {\n  /**\n   * If the side menu is hidden\n   */\n  hidden: boolean;\n\n  /**\n   * A set of menus loaded from application data\n   */\n  menus: MenuGroup[];\n\n  /**\n   * Data for demos\n   */\n  demoData: DemoData[];\n}\n\n    \n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/NgxEditorJSDemoData-1.html":{"url":"interfaces/NgxEditorJSDemoData-1.html","title":"interface - NgxEditorJSDemoData-1","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  NgxEditorJSDemoData\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/ngx-tinynodes/src/app/core/stores/app/application.model.ts\n        \n\n            \n                Description\n            \n            \n                The demo data for ngx-editorjs-demo\n\n            \n\n            \n                Extends\n            \n            \n                        DemoData\n            \n\n\n\n\n    \n\n\n    \n        import { Block } from '@tinynodes/ngx-editorjs';\nimport { MenuGroup } from '../../types/app';\n\n/**\n * An Enum of the keys in the application state\n */\nexport enum ApplicationStateKeys {\n  /**\n   * The hidden state key\n   */\n  Hidden = 'hidden',\n\n  /**\n   * The menus key\n   */\n  Menus = 'menus',\n\n  /**\n   * The demo data key\n   */\n  DemoData = 'demoData'\n}\n\n/**\n * Interface for a demo data object\n */\nexport interface DemoData {\n  /**\n   * The name of the demo (e.g. `ngx-editorjs-demo`)\n   */\n  name: string;\n  /**\n   * The data for the demo as ``\n   */\n  data: T;\n}\n\n/**\n * Interface for `ngx-editorjs-demo` data\n * TODO: This should be moved\n */\nexport interface NgxEditorJSDemo {\n  /**\n   * The initial blocks for the demo\n   */\n  blocks: Block[];\n}\n\n/**\n * The demo data for `ngx-editorjs-demo`\n */\nexport interface NgxEditorJSDemoData extends DemoData {}\n\n/**\n * The demos on tinynodes\n */\nexport interface TinynodeDemos {\n  /**\n   * The `ngx-editorjs-demo` data\n   */\n  'ngx-editorjs-demo': NgxEditorJSDemoData;\n}\n\n/**\n * A representation of the application state\n */\nexport interface ApplicationState {\n  /**\n   * If the side menu is hidden\n   */\n  hidden: boolean;\n\n  /**\n   * A set of menus loaded from application data\n   */\n  menus: MenuGroup[];\n\n  /**\n   * Data for demos\n   */\n  demoData: DemoData[];\n}\n\n    \n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/NgxEditorJSDemoHomeComponent.html":{"url":"components/NgxEditorJSDemoHomeComponent.html","title":"component - NgxEditorJSDemoHomeComponent","body":"\n                   \n\n\n\n\n\n  Components\n  NgxEditorJSDemoHomeComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    libs/ngx-editorjs-demo/src/lib/containers/home-container/home-container.component.ts\n\n\n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                ngx-editorjs-demo-home\n            \n\n            \n                styleUrls\n                home-container.component.scss\n            \n\n\n\n            \n                templateUrl\n                home-container.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        import { Component } from '@angular/core';\n\n@Component({\n  selector: 'ngx-editorjs-demo-home',\n  templateUrl: 'home-container.component.html',\n  styleUrls: ['home-container.component.scss']\n})\nexport class NgxEditorJSDemoHomeComponent {}\n\n    \n\n    \n        \n  \n    \n      @tinynodes/ngx-editor Demo\n      A collection of demos for the @tinynodes/ngx-editor module with example code and links to API docs.\n    \n    \n      \n        The demos in this section are for the\n        @tinynodes/ngx-editorjs module.\n      \n      \n        Each demo provides a way to use the component in an application or form in Angular. It can be used as a basic component, used with\n        Angular forms or Material forms.\n      \n      Each demo shows the components providing a EditorJS instance.\n    \n    \n      Angular Component Demo\n      Angular Material Form Demo\n    \n  \n\n\n    \n\n    \n                \n                    home-container.component.scss\n                \n                \n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '            @tinynodes/ngx-editor Demo      A collection of demos for the @tinynodes/ngx-editor module with example code and links to API docs.                      The demos in this section are for the        @tinynodes/ngx-editorjs module.                    Each demo provides a way to use the component in an application or form in Angular. It can be used as a basic component, used with        Angular forms or Material forms.            Each demo shows the components providing a EditorJS instance.              Angular Component Demo      Angular Material Form Demo      '\n    var COMPONENTS = [{'name': 'AppContainerComponent', 'selector': 'tinynodes-root'},{'name': 'FormContainerComponent', 'selector': 'ngx-form-container'},{'name': 'HomePageComponent', 'selector': 'tinynodes-home-page'},{'name': 'NavBarComponent', 'selector': 'tinynodes-nav-bar'},{'name': 'NgxEditorJSBaseComponent', 'selector': ''},{'name': 'NgxEditorJSComponent', 'selector': 'ngx-editorjs'},{'name': 'NgxEditorJSDemoHomeComponent', 'selector': 'ngx-editorjs-demo-home'},{'name': 'NgxEditorJSDemoInfoComponent', 'selector': 'ngx-editorjs-demo-info'},{'name': 'NgxEditorJSDemoTagComponent', 'selector': 'ngx-editorjs-tag-component'},{'name': 'NgxEditorJSMatFieldComponent', 'selector': 'ngx-editorjs-mat-field'},{'name': 'PageContainerComponent', 'selector': 'ngx-page-container'},{'name': 'SidebarComponent', 'selector': 'tinynodes-sidebar'}];\n    var DIRECTIVES = [{'name': 'NgxEditorJSDirective', 'selector': '[ngxEditorJS]'}];\n    var ACTUAL_COMPONENT = {'name': 'NgxEditorJSDemoHomeComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/NgxEditorJSDemoInfoComponent.html":{"url":"components/NgxEditorJSDemoInfoComponent.html","title":"component - NgxEditorJSDemoInfoComponent","body":"\n                   \n\n\n\n\n\n  Components\n  NgxEditorJSDemoInfoComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    libs/ngx-tinynodes-core/src/lib/components/demo-info/demo-info.component.ts\n\n\n\n\n    \n        Implements\n    \n    \n                    OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                ngx-editorjs-demo-info\n            \n\n            \n                styleUrls\n                demo-info.component.scss\n            \n\n\n\n            \n                templateUrl\n                demo-info.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngOnInit\n                            \n                            \n                                    Public\n                                togglePanel\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                body\n                            \n                            \n                                menu\n                            \n                            \n                                panelOpen\n                            \n                            \n                                title\n                            \n                        \n                    \n                \n\n\n\n\n                    \n                        \n                            Accessors\n                        \n                    \n                    \n                        \n                            \n                                \n                                    isPanelOpen\n                                \n                            \n                        \n                    \n        \n    \n\n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        body\n                    \n                \n                \n                    \n                        Type :     TemplateRef\n\n                    \n                \n                        \n                            \n                                    Defined in libs/ngx-tinynodes-core/src/lib/components/demo-info/demo-info.component.ts:35\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        menu\n                    \n                \n                \n                    \n                        Type :         MenuGroup\n\n                    \n                \n                        \n                            \n                                    Defined in libs/ngx-tinynodes-core/src/lib/components/demo-info/demo-info.component.ts:26\n                            \n                        \n                \n                    \n                        The menu group for the component\n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        panelOpen\n                    \n                \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                        \n                            \n                                    Defined in libs/ngx-tinynodes-core/src/lib/components/demo-info/demo-info.component.ts:20\n                            \n                        \n                \n                    \n                        Sets the panel open state\n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        title\n                    \n                \n                \n                    \n                        Type :         string\n\n                    \n                \n                        \n                            \n                                    Defined in libs/ngx-tinynodes-core/src/lib/components/demo-info/demo-info.component.ts:32\n                            \n                        \n                \n                    \n                        The title of the component\n\n                    \n                \n            \n        \n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngOnInit\n                        \n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in libs/ngx-tinynodes-core/src/lib/components/demo-info/demo-info.component.ts:37\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            togglePanel\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    togglePanel(value: boolean)\n                \n            \n\n\n            \n                \n                    Defined in libs/ngx-tinynodes-core/src/lib/components/demo-info/demo-info.component.ts:53\n                \n            \n\n\n            \n                \n                    Toggles the panel state\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    value\n                                    \n                                                boolean\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n    \n        Accessors\n    \n        \n            \n                \n                    \n                        \n                        isPanelOpen\n                    \n                \n\n                \n                    \n                        getisPanelOpen()\n                    \n                \n                            \n                                \n                                    Defined in libs/ngx-tinynodes-core/src/lib/components/demo-info/demo-info.component.ts:46\n                                \n                            \n                    \n                        \n                                Gets if the panel is open or not\n\n\n                                \n                                    Returns :     Observable\n\n                                \n                        \n                    \n\n            \n        \n\n\n\n\n    \n        import { Component, Input, OnInit, TemplateRef } from '@angular/core';\nimport { BehaviorSubject, Observable } from 'rxjs';\nimport { MenuGroup } from '../../types/app';\n\n@Component({\n  selector: 'ngx-editorjs-demo-info',\n  templateUrl: 'demo-info.component.html',\n  styleUrls: ['demo-info.component.scss']\n})\nexport class NgxEditorJSDemoInfoComponent implements OnInit {\n  /**\n   * If the panel is open or not\n   */\n  private panelOpen$ = new BehaviorSubject(true);\n\n  /**\n   * Sets the panel open state\n   */\n  @Input()\n  panelOpen: boolean;\n\n  /**\n   * The menu group for the component\n   */\n  @Input()\n  menu: MenuGroup;\n\n  /**\n   * The title of the component\n   */\n  @Input()\n  title: string;\n\n  @Input()\n  body: TemplateRef;\n\n  ngOnInit() {\n    if (typeof this.panelOpen !== 'undefined') {\n      this.panelOpen$.next(this.panelOpen);\n    }\n  }\n\n  /**\n   * Gets if the panel is open or not\n   */\n  public get isPanelOpen(): Observable {\n    return this.panelOpen$.asObservable();\n  }\n\n  /**\n   * Toggles the panel state\n   */\n  public togglePanel(value: boolean): void {\n    this.panelOpen$.next(value);\n  }\n}\n\n    \n\n    \n        \n  \n    {{ title }}\n    Details on usage and links - {{ (isPanelOpen | async) ? 'Click To Close' : 'Click To View' }}\n  \n  \n    \n      \n        \n          How To Use...\n          Instructions on the demo below\n        \n        \n          \n        \n      \n    \n    \n      \n        \n          Links\n          Links for all things related to @tinynodes/{{ title }}\n        \n        \n          \n            \n              {{ link.label }}\n            \n          \n        \n      \n    \n  \n\n\n\n  This is where some demo information goes\n\n\n    \n\n    \n                \n                    demo-info.component.scss\n                \n                :host {\n  width: 100%;\n  height: 100vh;\n}\n\n.demo-info {\n  width: 100%;\n  height: calc(300px);\n  overflow: scroll;\n}\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '      {{ title }}    Details on usage and links - {{ (isPanelOpen | async) ? \\'Click To Close\\' : \\'Click To View\\' }}                                How To Use...          Instructions on the demo below                                                                        Links          Links for all things related to @tinynodes/{{ title }}                                                    {{ link.label }}                                            This is where some demo information goes'\n    var COMPONENTS = [{'name': 'AppContainerComponent', 'selector': 'tinynodes-root'},{'name': 'FormContainerComponent', 'selector': 'ngx-form-container'},{'name': 'HomePageComponent', 'selector': 'tinynodes-home-page'},{'name': 'NavBarComponent', 'selector': 'tinynodes-nav-bar'},{'name': 'NgxEditorJSBaseComponent', 'selector': ''},{'name': 'NgxEditorJSComponent', 'selector': 'ngx-editorjs'},{'name': 'NgxEditorJSDemoHomeComponent', 'selector': 'ngx-editorjs-demo-home'},{'name': 'NgxEditorJSDemoInfoComponent', 'selector': 'ngx-editorjs-demo-info'},{'name': 'NgxEditorJSDemoTagComponent', 'selector': 'ngx-editorjs-tag-component'},{'name': 'NgxEditorJSMatFieldComponent', 'selector': 'ngx-editorjs-mat-field'},{'name': 'PageContainerComponent', 'selector': 'ngx-page-container'},{'name': 'SidebarComponent', 'selector': 'tinynodes-sidebar'}];\n    var DIRECTIVES = [{'name': 'NgxEditorJSDirective', 'selector': '[ngxEditorJS]'}];\n    var ACTUAL_COMPONENT = {'name': 'NgxEditorJSDemoInfoComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"directives/NgxEditorJSDirective.html":{"url":"directives/NgxEditorJSDirective.html","title":"directive - NgxEditorJSDirective","body":"\n                   \n\n\n\n\n\n\n\n  Directives\n  NgxEditorJSDirective\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            libs/ngx-editorjs/src/lib/directives/ngx-editorjs.directive.ts\n        \n\n            \n                Description\n            \n            \n                The main directive of ngx-editorjs provides a way to attach\nan EditorJS instance to any element and control it via\nAngular services and components\nTo use attach to any element with an id property\n\n            \n\n            \n                Implements\n            \n            \n                            OnDestroy\n                            OnChanges\n                            AfterContentInit\n            \n\n            \n                Example\n            \n            \n                        \n                            \n                        \n            \n\n        \n            Metadata\n            \n                \n\n                    \n                        Selector\n                        [ngxEditorJS]\n                    \n\n                \n            \n        \n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                createEditor\n                            \n                            \n                                ngAfterContentInit\n                            \n                            \n                                ngOnChanges\n                            \n                            \n                                ngOnDestroy\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                autofocus\n                            \n                            \n                                autosave\n                            \n                            \n                                blockPlaceholder\n                            \n                            \n                                blocks\n                            \n                            \n                                hideToolbar\n                            \n                            \n                                holder\n                            \n                            \n                                includeTools\n                            \n                            \n                                initialBlock\n                            \n                            \n                                minHeight\n                            \n                            \n                                sanitizer\n                            \n                        \n                    \n                \n\n                \n                    \n                        Outputs\n                    \n                \n                \n                    \n                        \n                            \n                                hasChanged\n                            \n                            \n                                hasSaved\n                            \n                            \n                                isFocused\n                            \n                            \n                                isReady\n                            \n                            \n                                isTouched\n                            \n                        \n                    \n                \n\n\n                \n                    \n                        HostListeners\n                    \n                \n                \n                    \n                        \n                            \n                                click\n                            \n                        \n                    \n                \n\n                    \n                        \n                            Accessors\n                        \n                    \n                    \n                        \n                            \n                                \n                                    editor\n                                \n                                \n                                    element\n                                \n                                \n                                    service\n                                \n                                \n                                    touched\n                                \n                            \n                        \n                    \n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(el: ElementRef, editorService: NgxEditorJSService, cd: ChangeDetectorRef)\n                    \n                \n                        \n                            \n                                Defined in libs/ngx-editorjs/src/lib/directives/ngx-editorjs.directive.ts:152\n                            \n                        \n\n                \n                    \n                            Creates the directive instance\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        el\n                                                  \n                                                        \n                                                                        ElementRef\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                The element the directive is attached to\n\n                                                        \n                                                \n                                                \n                                                        editorService\n                                                  \n                                                        \n                                                                        NgxEditorJSService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                The editor service\n\n                                                        \n                                                \n                                                \n                                                        cd\n                                                  \n                                                        \n                                                                        ChangeDetectorRef\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    Inputs\n        \n            \n                \n                    \n                        \n                        autofocus\n                    \n                \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                        \n                            \n                                    Defined in libs/ngx-editorjs/src/lib/directives/ngx-editorjs.directive.ts:53\n                            \n                        \n                \n                    \n                        Boolean, If set to true the EditorJS instance gets autofocus when initialized\n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        autosave\n                    \n                \n                \n                    \n                        Type :         number\n\n                    \n                \n                        \n                            \n                                    Defined in libs/ngx-editorjs/src/lib/directives/ngx-editorjs.directive.ts:106\n                            \n                        \n                \n                    \n                        Number, Used with Angular Forms this sets an autosave timer active that calls the EditorJS save\nmethod. This patches the FormControl value with every block change and focus and blur, it also autosaves after\na set time\nSet to 0 to disable or pass a value in ms of the autosave time\n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        blockPlaceholder\n                    \n                \n                \n                    \n                        Type :         string\n\n                    \n                \n                        \n                            \n                                    Defined in libs/ngx-editorjs/src/lib/directives/ngx-editorjs.directive.ts:84\n                            \n                        \n                \n                    \n                        String, The text to display as the placeholder text in the first block before content is added\n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        blocks\n                    \n                \n                \n                    \n                        Type :         Block[]\n\n                    \n                \n                        \n                            \n                                    Defined in libs/ngx-editorjs/src/lib/directives/ngx-editorjs.directive.ts:112\n                            \n                        \n                \n                    \n                        Blocks, An initial set of block data to render inside the component\n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        hideToolbar\n                    \n                \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                        \n                            \n                                    Defined in libs/ngx-editorjs/src/lib/directives/ngx-editorjs.directive.ts:59\n                            \n                        \n                \n                    \n                        Boolean, If set to true the toolbar will not show in the EditorJS instance\n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        holder\n                    \n                \n                \n                    \n                        Type :         string\n\n                    \n                \n                        \n                            \n                                    Defined in libs/ngx-editorjs/src/lib/directives/ngx-editorjs.directive.ts:65\n                            \n                        \n                \n                    \n                        String, the ID property of the element that the EditorJS instance will be attached to\n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        includeTools\n                    \n                \n                \n                    \n                        Type :     string[]\n\n                    \n                \n                \n                    \n                        Default value : []\n                    \n                \n                        \n                            \n                                    Defined in libs/ngx-editorjs/src/lib/directives/ngx-editorjs.directive.ts:97\n                            \n                        \n                \n                    \n                        String Array, If empty all tools available via the plugin service will be added.  If a string\narray is set only the tools with the provided keys will be added\n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        initialBlock\n                    \n                \n                \n                    \n                        Type :         string\n\n                    \n                \n                        \n                            \n                                    Defined in libs/ngx-editorjs/src/lib/directives/ngx-editorjs.directive.ts:72\n                            \n                        \n                \n                    \n                        String, The type of block to set as the initial block type. This needs to match a name in the UserPlugins object.\nThe default value is \"paragraph\"\n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        minHeight\n                    \n                \n                \n                    \n                        Type :         number\n\n                    \n                \n                        \n                            \n                                    Defined in libs/ngx-editorjs/src/lib/directives/ngx-editorjs.directive.ts:78\n                            \n                        \n                \n                    \n                        Number, The minimum height of the EditorJS instance bottom after the last block\n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        sanitizer\n                    \n                \n                \n                    \n                        Type :     SanitizerConfig\n\n                    \n                \n                        \n                            \n                                    Defined in libs/ngx-editorjs/src/lib/directives/ngx-editorjs.directive.ts:90\n                            \n                        \n                \n                    \n                        SanitizerConfig, The configuration for the HTML sanitizer\n\n                    \n                \n            \n        \n\n            \n    Outputs\n        \n            \n                \n                    \n                        \n                        hasChanged\n                    \n                \n                \n                    \n                        Type :         EventEmitter\n\n                    \n                \n                        \n                            \n                                    Defined in libs/ngx-editorjs/src/lib/directives/ngx-editorjs.directive.ts:136\n                            \n                        \n                \n                    \n                        Emits if the EditorJS content has changed when save is called\n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        hasSaved\n                    \n                \n                \n                    \n                        Type :         EventEmitter\n\n                    \n                \n                        \n                            \n                                    Defined in libs/ngx-editorjs/src/lib/directives/ngx-editorjs.directive.ts:118\n                            \n                        \n                \n                    \n                        Emits if the content from the EditorJS instance has been saved to the component value\n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        isFocused\n                    \n                \n                \n                    \n                        Type :         EventEmitter\n\n                    \n                \n                        \n                            \n                                    Defined in libs/ngx-editorjs/src/lib/directives/ngx-editorjs.directive.ts:130\n                            \n                        \n                \n                    \n                        Emits if the component is focused\n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        isReady\n                    \n                \n                \n                    \n                        Type :         EventEmitter\n\n                    \n                \n                        \n                            \n                                    Defined in libs/ngx-editorjs/src/lib/directives/ngx-editorjs.directive.ts:142\n                            \n                        \n                \n                    \n                        Emits if the EditorJS component is ready\n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        isTouched\n                    \n                \n                \n                    \n                        Type :         EventEmitter\n\n                    \n                \n                        \n                            \n                                    Defined in libs/ngx-editorjs/src/lib/directives/ngx-editorjs.directive.ts:124\n                            \n                        \n                \n                    \n                        Emits if the component has been touched\n\n                    \n                \n            \n        \n\n\n            \n    HostListeners    \n        \n            \n                \n                    \n                    \n                        \n                            click\n                        \n                        \n                    \n                \n            \n            \n                \nclick()\n                \n            \n\n\n            \n                \n                    Defined in libs/ngx-editorjs/src/lib/directives/ngx-editorjs.directive.ts:148\n                \n            \n\n\n            \n                \n                    Host click listener\n\n\n                \n            \n        \n    \n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            createEditor\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    createEditor(config?: EditorConfig)\n                \n            \n\n\n            \n                \n                    Defined in libs/ngx-editorjs/src/lib/directives/ngx-editorjs.directive.ts:197\n                \n            \n\n\n            \n                \n                    Creates an EditorJS instance for this directive\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    config\n                                    \n                                            EditorConfig\n                                    \n\n                                    \n                                        Yes\n                                    \n\n\n                                    \n                                        Configuration for this instance\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngAfterContentInit\n                        \n                        \n                    \n                \n            \n            \n                \nngAfterContentInit()\n                \n            \n\n\n            \n                \n                    Defined in libs/ngx-editorjs/src/lib/directives/ngx-editorjs.directive.ts:245\n                \n            \n\n\n            \n                \n                    After content is created, we create the editor instance and set up listners\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngOnChanges\n                        \n                        \n                    \n                \n            \n            \n                \nngOnChanges(changes: SimpleChanges)\n                \n            \n\n\n            \n                \n                    Defined in libs/ngx-editorjs/src/lib/directives/ngx-editorjs.directive.ts:214\n                \n            \n\n\n            \n                \n                    When ngOnChanges are called, there are two paths\nIf it's just blocks, then the service is updated with the blocks\nIf it's any other property it means we create a new editor, as this\nis a destructive process we also need to wait for an existing editor\nto be ready\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    changes\n                                    \n                                                SimpleChanges\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        Changes on the component\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngOnDestroy\n                        \n                        \n                    \n                \n            \n            \n                \nngOnDestroy()\n                \n            \n\n\n            \n                \n                    Defined in libs/ngx-editorjs/src/lib/directives/ngx-editorjs.directive.ts:281\n                \n            \n\n\n            \n                \n                    Destroy the editor and subjects for this service\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n\n            \n    \n        Accessors\n    \n        \n            \n                \n                    \n                        \n                        editor\n                    \n                \n\n                \n                    \n                        geteditor()\n                    \n                \n                            \n                                \n                                    Defined in libs/ngx-editorjs/src/lib/directives/ngx-editorjs.directive.ts:168\n                                \n                            \n                    \n                        \n                                Get the EditorJS instance for this directive\n\n\n                                \n                                    Returns :     Observable\n\n                                \n                        \n                    \n\n            \n        \n        \n            \n                \n                    \n                        \n                        element\n                    \n                \n\n                \n                    \n                        getelement()\n                    \n                \n                            \n                                \n                                    Defined in libs/ngx-editorjs/src/lib/directives/ngx-editorjs.directive.ts:175\n                                \n                            \n                    \n                        \n                                Get the element for the directive\n\n\n                        \n                    \n\n            \n        \n        \n            \n                \n                    \n                        \n                        service\n                    \n                \n\n                \n                    \n                        getservice()\n                    \n                \n                            \n                                \n                                    Defined in libs/ngx-editorjs/src/lib/directives/ngx-editorjs.directive.ts:182\n                                \n                            \n                    \n                        \n                                Get the NgxEditorJSService for this directive\n\n\n                                \n                                    Returns :         NgxEditorJSService\n\n                                \n                        \n                    \n\n            \n        \n        \n            \n                \n                    \n                        \n                        touched\n                    \n                \n\n                \n                    \n                        gettouched()\n                    \n                \n                            \n                                \n                                    Defined in libs/ngx-editorjs/src/lib/directives/ngx-editorjs.directive.ts:189\n                                \n                            \n                    \n                        \n                                Get the touched state\n\n\n                        \n                    \n\n            \n        \n\n\n    \n\n\n    \n        import {\n  AfterContentInit,\n  ChangeDetectorRef,\n  Directive,\n  ElementRef,\n  EventEmitter,\n  HostListener,\n  Input,\n  OnChanges,\n  OnDestroy,\n  Output,\n  SimpleChanges\n} from '@angular/core';\nimport EditorJS, { EditorConfig, OutputData, SanitizerConfig } from '@editorjs/editorjs';\nimport { BehaviorSubject, Observable, Subject } from 'rxjs';\nimport { takeUntil } from 'rxjs/operators';\nimport { createEditorJSConfig } from '../config/editor-config';\nimport { NgxEditorJSService } from '../services/editorjs.service';\nimport { Block } from '../types/blocks';\n\n/**\n * The main directive of `ngx-editorjs` provides a way to attach\n * an EditorJS instance to any element and control it via\n * Angular services and components\n *\n * To use attach to any element with an `id` property\n *\n * @example\n * \n */\n@Directive({\n  selector: '[ngxEditorJS]'\n})\nexport class NgxEditorJSDirective implements OnDestroy, OnChanges, AfterContentInit {\n  /**\n   * On Destroyed subject\n   */\n  private readonly onDestroy$ = new Subject();\n  /**\n   * Form touched state\n   */\n  private touched$ = new BehaviorSubject(false);\n\n  /**\n   * The DOM element ID, it will use the Directive DOM element ID or falls back to the provided `holder` property\n   */\n  private id: string;\n\n  /**\n   * Boolean, If set to true the `EditorJS` instance gets autofocus when initialized\n   */\n  @Input()\n  public autofocus: boolean;\n\n  /**\n   * Boolean, If set to true the toolbar will not show in the `EditorJS` instance\n   */\n  @Input()\n  public hideToolbar: boolean;\n\n  /**\n   * String, the ID property of the element that the `EditorJS` instance will be attached to\n   */\n  @Input()\n  public holder: string;\n\n  /**\n   * String, The type of block to set as the initial block type. This needs to match a name in the `UserPlugins` object.\n   * The default value is \"paragraph\"\n   */\n  @Input()\n  public initialBlock?: string;\n\n  /**\n   * Number, The minimum height of the `EditorJS` instance bottom after the last block\n   */\n  @Input()\n  public minHeight: number;\n\n  /**\n   * String, The text to display as the placeholder text in the first block before content is added\n   */\n  @Input()\n  public blockPlaceholder: string;\n\n  /**\n   * SanitizerConfig, The configuration for the HTML sanitizer\n   */\n  @Input()\n  public sanitizer: SanitizerConfig;\n\n  /**\n   * String Array, If empty all tools available via the plugin service will be added.  If a string\n   * array is set only the tools with the provided keys will be added\n   */\n  @Input()\n  public includeTools: string[] = [];\n\n  /**\n   * Number, Used with Angular Forms this sets an autosave timer active that calls the `EditorJS` save\n   * method. This patches the `FormControl` value with every block change and focus and blur, it also autosaves after\n   * a set time\n   * Set to 0 to disable or pass a value in `ms` of the autosave time\n   */\n  @Input()\n  public autosave: number;\n\n  /**\n   * Blocks, An initial set of block data to render inside the component\n   */\n  @Input()\n  public blocks: Block[];\n\n  /**\n   * Emits if the content from the `EditorJS` instance has been saved to the component value\n   */\n  @Output()\n  public hasSaved = new EventEmitter();\n\n  /**\n   * Emits if the component has been touched\n   */\n  @Output()\n  public isTouched = new EventEmitter();\n\n  /**\n   * Emits if the component is focused\n   */\n  @Output()\n  public isFocused = new EventEmitter();\n\n  /**\n   * Emits if the `EditorJS` content has changed when `save` is called\n   */\n  @Output()\n  public hasChanged = new EventEmitter();\n\n  /**\n   * Emits if the `EditorJS` component is ready\n   */\n  @Output()\n  public isReady = new EventEmitter();\n\n  /**\n   * Host click listener\n   */\n  @HostListener('click')\n  onclick() {\n    this.touched$.next(true);\n    this.isTouched.emit(true);\n    this.cd.markForCheck();\n  }\n\n  /**\n   * Creates the directive instance\n   * @param el The element the directive is attached to\n   * @param editorService The editor service\n   */\n  constructor(\n    protected readonly el: ElementRef,\n    protected readonly editorService: NgxEditorJSService,\n    protected readonly cd: ChangeDetectorRef\n  ) {}\n\n  /**\n   * Get the `EditorJS` instance for this directive\n   */\n  public get editor(): Observable {\n    return this.service.getEditor({ holder: this.id });\n  }\n\n  /**\n   * Get the element for the directive\n   */\n  public get element() {\n    return this.el.nativeElement;\n  }\n\n  /**\n   * Get the `NgxEditorJSService` for this directive\n   */\n  public get service(): NgxEditorJSService {\n    return this.editorService;\n  }\n\n  /**\n   * Get the touched state\n   */\n  public get touched() {\n    return this.touched$.asObservable();\n  }\n\n  /**\n   * Creates an `EditorJS` instance for this directive\n   * @param config Configuration for this instance\n   */\n  public createEditor(config?: EditorConfig): void {\n    this.service.createEditor({\n      config,\n      includeTools: this.includeTools,\n      autoSave: this.autosave || 0\n    });\n    this.cd.markForCheck();\n  }\n\n  /**\n   * When ngOnChanges are called, there are two paths\n   * If it's just blocks, then the service is updated with the blocks\n   * If it's any other property it means we create a new editor, as this\n   * is a destructive process we also need to wait for an existing editor\n   * to be ready\n   * @param changes Changes on the component\n   */\n  ngOnChanges(changes: SimpleChanges): void {\n    if (changes.blocks && !changes.blocks.firstChange) {\n      this.service.update({ holder: this.id, blocks: changes.blocks.currentValue });\n      this.cd.markForCheck();\n      return;\n    }\n    const changesKeys = Object.keys(changes);\n    if (\n      this.id &&\n      // Ignore changes for values not related to `EditorJS`\n      [\n        'autofocus',\n        'holder',\n        'hideToolbar',\n        'initialBlock',\n        'minHeight',\n        'blockPlaceholder',\n        'sanitizer',\n        'includeTools'\n      ].find(key => {\n        return changesKeys.includes(key);\n      })\n    ) {\n      this.createEditor(this.createConfig());\n      this.cd.markForCheck();\n    }\n  }\n\n  /**\n   * After content is created, we create the editor instance and set up listners\n   */\n  ngAfterContentInit() {\n    this.id = this.el.nativeElement.id || this.holder;\n\n    if (!this.id) {\n      throw new Error('Error in NgxEditorJSDirective::ngAfterContentInit - Directive element has no ID');\n    }\n    this.createEditor(this.createConfig());\n\n    this.service\n      .isReady({ holder: this.holder })\n      .pipe(takeUntil(this.onDestroy$))\n      .subscribe(isReady => {\n        this.isReady.emit(isReady);\n        this.cd.markForCheck();\n      });\n\n    this.service\n      .hasChanged({ holder: this.holder })\n      .pipe(takeUntil(this.onDestroy$))\n      .subscribe(change => {\n        this.hasChanged.emit(change);\n        this.cd.markForCheck();\n      });\n\n    this.service\n      .hasSaved({ holder: this.holder })\n      .pipe(takeUntil(this.onDestroy$))\n      .subscribe(saved => {\n        this.hasSaved.next(saved);\n        this.cd.markForCheck();\n      });\n  }\n\n  /**\n   * Destroy the editor and subjects for this service\n   */\n  ngOnDestroy() {\n    this.service.destroy({ holder: this.id });\n  }\n\n  /**\n   * Create a configuration for EditorJS\n   */\n  private createConfig(): EditorConfig {\n    const config: EditorConfig = createEditorJSConfig({\n      holder: this.id,\n      autofocus: this.autofocus,\n      hideToolbar: this.hideToolbar,\n      initialBlock: this.initialBlock,\n      placeholder: this.blockPlaceholder,\n      minHeight: this.minHeight,\n      sanitizer: this.sanitizer\n    });\n    if (this.blocks && this.blocks.length > 0) {\n      config.data = {\n        time: Date.now(),\n        version: EditorJS.version,\n        blocks: this.blocks\n      };\n    }\n    return config;\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/NgxEditorJSEffects.html":{"url":"injectables/NgxEditorJSEffects.html","title":"injectable - NgxEditorJSEffects","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  NgxEditorJSEffects\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            libs/ngx-editorjs-ngrx/src/lib/effects/ngx-editorjs.effects.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                $save\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(actions$: Actions, editorService: NgxEditorJSService)\n                    \n                \n                        \n                            \n                                Defined in libs/ngx-editorjs-ngrx/src/lib/effects/ngx-editorjs.effects.ts:10\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        actions$\n                                                  \n                                                        \n                                                                    Actions\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        editorService\n                                                  \n                                                        \n                                                                        NgxEditorJSService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            $save\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : this.actions$.pipe(\n    ofType(EditorJSActionTypes.SaveStart),\n    map((action: SaveStart) => {\n      this.editorService.save(action.payload.holder);\n      return action;\n    }),\n    withLatestFrom([\n      map((action: SaveStart) => action),\n      (action: SaveStart): Observable => this.editorService.getBlocks(action.payload.holder)\n    ]),\n    mergeMap(([action, blocks]) => {\n      blocks.subscribe();\n      return new SaveEnd({\n        holder: action.payload.holder,\n        data: {\n          time: Date.now(),\n          version: EditorJS.version,\n          blocks: blocks\n        }\n      });\n    })\n  )\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Effect({dispatch: false})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in libs/ngx-editorjs-ngrx/src/lib/effects/ngx-editorjs.effects.ts:14\n                            \n                        \n\n\n            \n        \n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { Effect, Actions, ofType } from '@ngrx/effects';\nimport { NgxEditorJSService, Block } from '@tinynodes/ngx-editorjs';\nimport { EditorJSActionTypes, SaveStart, SaveEnd } from '../actions/ngx-editorjs.actions';\nimport { switchMap, map, withLatestFrom, tap, mergeMap } from 'rxjs/operators';\nimport { Observable } from 'rxjs';\nimport EditorJS from '@editorjs/editorjs';\n\n@Injectable()\nexport class NgxEditorJSEffects {\n  constructor(private readonly actions$: Actions, private readonly editorService: NgxEditorJSService) {}\n\n  @Effect({ dispatch: false })\n  $save = this.actions$.pipe(\n    ofType(EditorJSActionTypes.SaveStart),\n    map((action: SaveStart) => {\n      this.editorService.save(action.payload.holder);\n      return action;\n    }),\n    withLatestFrom([\n      map((action: SaveStart) => action),\n      (action: SaveStart): Observable => this.editorService.getBlocks(action.payload.holder)\n    ]),\n    mergeMap(([action, blocks]) => {\n      blocks.subscribe();\n      return new SaveEnd({\n        holder: action.payload.holder,\n        data: {\n          time: Date.now(),\n          version: EditorJS.version,\n          blocks: blocks\n        }\n      });\n    })\n  );\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/NgxEditorJSInstanceService.html":{"url":"injectables/NgxEditorJSInstanceService.html","title":"injectable - NgxEditorJSInstanceService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  NgxEditorJSInstanceService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            libs/ngx-editorjs/src/lib/services/editorjs-injector.ts\n        \n\n            \n                Description\n            \n            \n                The NgxEditorJSInstanceService handles the creation and life cycle events of an EditorJS instance,\nand provides methods to call the instance. The service also provides state observables for ready, change and\nsaved state\n\n            \n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                apiCall\n                            \n                            \n                                    Public\n                                clear\n                            \n                            \n                                    Public\n                                    Async\n                                createInstance\n                            \n                            \n                                    Public\n                                destroy\n                            \n                            \n                                    Public\n                                destroyInstance\n                            \n                            \n                                    Public\n                                getEditor\n                            \n                            \n                                    Public\n                                hasChanged\n                            \n                            \n                                    Public\n                                hasSaved\n                            \n                            \n                                    Public\n                                isReady\n                            \n                            \n                                    Protected\n                                onChange\n                            \n                            \n                                    Protected\n                                onReady\n                            \n                            \n                                    Public\n                                save\n                            \n                            \n                                    Public\n                                update\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(editorJs: any, zone: NgZone, ref: ApplicationRef)\n                    \n                \n                        \n                            \n                                Defined in libs/ngx-editorjs/src/lib/services/editorjs-injector.ts:47\n                            \n                        \n\n                \n                    \n                            Constructs the Injector service for EditorJS\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        editorJs\n                                                  \n                                                        \n                                                                        any\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                The EditorJS class\n\n                                                        \n                                                \n                                                \n                                                        zone\n                                                  \n                                                        \n                                                                        NgZone\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                Angular zone to run\n\n                                                        \n                                                \n                                                \n                                                        ref\n                                                  \n                                                        \n                                                                        ApplicationRef\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                The ApplicationRef to trigger a tick\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            apiCall\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    apiCall(options: InjectorApiCallOptions, ...args: any[])\n                \n            \n\n\n            \n                \n                    Defined in libs/ngx-editorjs/src/lib/services/editorjs-injector.ts:129\n                \n            \n\n            \n                \n                    Type parameters :\n                    \n                        T\n                    \n                \n            \n\n            \n                \n                    A helper method to make calls to any EditorJS API (see API Docs)\nThe first argument should container the holder and method name, and namespace if required\nThe second argument is any additional arguments as required by the API.\nThe response of this method if a Observable> which contains\nthe options passed and an extra result property. If the result is a Promise it will\nresolve the value\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    options\n                                    \n                                                InjectorApiCallOptions\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        Options to pass to the API request\n\n                                    \n                                \n                                \n                                    args\n                                    \n                                            any[]\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        Additional arguments to pass to the API request\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Observable>\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            clear\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    clear(options: InjectorMethodOption)\n                \n            \n\n\n            \n                \n                    Defined in libs/ngx-editorjs/src/lib/services/editorjs-injector.ts:181\n                \n            \n\n\n            \n                \n                    Calls a clear method on an editor\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    options\n                                    \n                                                InjectorMethodOption\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            Async\n                            createInstance\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    createInstance(config: EditorJSInstanceConfig)\n                \n            \n\n\n            \n                \n                    Defined in libs/ngx-editorjs/src/lib/services/editorjs-injector.ts:66\n                \n            \n\n\n            \n                \n                    Creates a new EditorJS instance outside of the Angular zone and\nthen adds it to the editor instances\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    config\n                                    \n                                                EditorJSInstanceConfig\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        The {EditorConfig} configuration to create\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            destroy\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    destroy()\n                \n            \n\n\n            \n                \n                    Defined in libs/ngx-editorjs/src/lib/services/editorjs-injector.ts:331\n                \n            \n\n\n            \n                \n                    Call this to destroy all subscriptions within the service\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            destroyInstance\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    destroyInstance(options: InjectorMethodOption)\n                \n            \n\n\n            \n                \n                    Defined in libs/ngx-editorjs/src/lib/services/editorjs-injector.ts:274\n                \n            \n\n\n            \n                \n                    Destroys an instance of an editor and cleans up all Observable values\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    options\n                                    \n                                                InjectorMethodOption\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            getEditor\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    getEditor(options: InjectorMethodOption)\n                \n            \n\n\n            \n                \n                    Defined in libs/ngx-editorjs/src/lib/services/editorjs-injector.ts:230\n                \n            \n\n\n            \n                \n                    Returns an Observable value of an EditorJS instance\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    options\n                                    \n                                                InjectorMethodOption\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Observable\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            hasChanged\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    hasChanged(options: InjectorMethodOption)\n                \n            \n\n\n            \n                \n                    Defined in libs/ngx-editorjs/src/lib/services/editorjs-injector.ts:252\n                \n            \n\n\n            \n                \n                    Returns an Observable value of when an EditorJS changes\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    options\n                                    \n                                                InjectorMethodOption\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Observable\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            hasSaved\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    hasSaved(options: InjectorMethodOption)\n                \n            \n\n\n            \n                \n                    Defined in libs/ngx-editorjs/src/lib/services/editorjs-injector.ts:263\n                \n            \n\n\n            \n                \n                    Returns an Observable value of an EditorJS saves\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    options\n                                    \n                                                InjectorMethodOption\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Observable\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            isReady\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    isReady(options: InjectorMethodOption)\n                \n            \n\n\n            \n                \n                    Defined in libs/ngx-editorjs/src/lib/services/editorjs-injector.ts:241\n                \n            \n\n\n            \n                \n                    Returns an Observable value of an EditorJS instance\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    options\n                                    \n                                                InjectorMethodOption\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Observable\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Protected\n                            onChange\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    onChange(options: InjectorMethodOption)\n                \n            \n\n\n            \n                \n                    Defined in libs/ngx-editorjs/src/lib/services/editorjs-injector.ts:94\n                \n            \n\n\n            \n                \n                    Default onChange method for the EditorJS instance\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    options\n                                    \n                                                InjectorMethodOption\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        The InjectorMethodOption for this request\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Protected\n                            onReady\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    onReady(options: InjectorMethodOption)\n                \n            \n\n\n            \n                \n                    Defined in libs/ngx-editorjs/src/lib/services/editorjs-injector.ts:110\n                \n            \n\n\n            \n                \n                    The default onReady method for the EditorJS instance\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    options\n                                    \n                                                InjectorMethodOption\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            save\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    save(options: InjectorMethodOption)\n                \n            \n\n\n            \n                \n                    Defined in libs/ngx-editorjs/src/lib/services/editorjs-injector.ts:162\n                \n            \n\n\n            \n                \n                    Calls the save method on the EditorJS instance and updates the blocks map\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    options\n                                    \n                                                InjectorMethodOption\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            update\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    update(options: InjectorMethodOption, triggerUpdate)\n                \n            \n\n\n            \n                \n                    Defined in libs/ngx-editorjs/src/lib/services/editorjs-injector.ts:200\n                \n            \n\n\n            \n                \n                    Updates the editor with new blocks\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Default value\n                                    Description\n                                \n                            \n                            \n                                \n                                    options\n                                    \n                                                InjectorMethodOption\n                                    \n\n                                    \n                                        No\n                                    \n\n                                    \n                                    \n\n                                    \n                                        The options to update\n\n                                    \n                                \n                                \n                                    triggerUpdate\n                                    \n                                    \n\n                                    \n                                        No\n                                    \n\n                                    \n                                        true\n                                    \n\n                                    \n                                        If set to false the hasChanged observable won't be updated\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { ApplicationRef, Inject, Injectable, NgZone } from '@angular/core';\nimport EditorJS, { OutputData } from '@editorjs/editorjs';\nimport { BehaviorSubject, Observable, Subject } from 'rxjs';\nimport { filter, map, take, takeUntil } from 'rxjs/operators';\nimport {\n  EditorJSInstance,\n  EditorJSInstanceConfig,\n  InjectorApiCallOptions,\n  InjectorApiCallResponse,\n  InjectorMethodOption,\n  MAP_DEFAULTS\n} from '../types/injector';\nimport { ChangeMap, EditorJSChange, EditorMap, ReadyMap, SavedMap } from '../types/maps';\n\n/**\n * The NgxEditorJSInstanceService handles the creation and life cycle events of an `EditorJS` instance,\n * and provides methods to call the instance. The service also provides state observables for ready, change and\n * saved state\n */\n@Injectable({\n  providedIn: 'root'\n})\nexport class NgxEditorJSInstanceService {\n  /**\n   * Internal destroy method for the service\n   */\n  private onDestroy$ = new Subject();\n\n  /**\n   * Internal map of all EditorJS instances\n   */\n  private editorMap: EditorMap = {};\n\n  /**\n   * Internal map of all EditorJS ready states\n   */\n  private isReadyMap: ReadyMap = {};\n\n  /**\n   * Internal map of when `EditorJS` save is called\n   */\n  private hasSavedMap: SavedMap = {};\n\n  /**\n   * Internal map of all EditorJS change states\n   */\n  private hasChangedMap: ChangeMap = {};\n\n  /**\n   * Constructs the Injector service for `EditorJS`\n   * @param editorJs The `EditorJS` class\n   * @param zone Angular zone to run\n   * @param ref The ApplicationRef to trigger a tick\n   */\n  constructor(\n    @Inject(EditorJSInstance) private editorJs: any,\n    private readonly zone: NgZone,\n    private readonly ref: ApplicationRef\n  ) {}\n\n  /**\n   * Creates a new `EditorJS` instance outside of the Angular zone and\n   * then adds it to the editor instances\n   * @param config The {EditorConfig} configuration to create\n   */\n  public async createInstance(config: EditorJSInstanceConfig): Promise {\n    const editorConfig = {\n      ...config.editorConfig\n    };\n    editorConfig.onChange = (config.onChange && typeof config.onChange === 'function'\n      ? config.onChange\n      : this.onChange.bind(this, { holder: editorConfig.holder as string })) as any;\n    editorConfig.onReady = (config.onReady && typeof config.onReady === 'function'\n      ? config.onReady\n      : this.onReady.bind(this, { holder: editorConfig.holder as string })) as any;\n\n    return this.zone.runOutsideAngular(() => {\n      const editor = new (this.editorJs as any)(editorConfig);\n      const holder = editorConfig.holder as string;\n      return editor.isReady.then(() => {\n        return this.zone.run(async () => {\n          await this.setupSubjects({ holder, editor });\n          this.isReadyMap[holder].next(true);\n          this.ref.tick();\n        });\n      });\n    });\n  }\n\n  /**\n   * Default onChange method for the `EditorJS` instance\n   * @param options The InjectorMethodOption for this request\n   */\n  protected onChange(options: InjectorMethodOption): () => void {\n    return () => {\n      if (!this.hasChangedMap[options.holder]) {\n        this.hasChangedMap[options.holder] = new BehaviorSubject({ time: 0, blocks: [] });\n      }\n      this.hasChangedMap[options.holder].next({\n        time: Date.now(),\n        blocks: options.blocks || []\n      });\n    };\n  }\n\n  /**\n   * The default onReady method for the `EditorJS` instance\n   * @param Options The InjectorMethodOption for this request\n   */\n  protected onReady(options: InjectorMethodOption): () => void {\n    return () => {\n      if (!this.isReadyMap[options.holder]) {\n        this.isReadyMap[options.holder] = new BehaviorSubject(false);\n      }\n      this.isReadyMap[options.holder].next(true);\n    };\n  }\n\n  /**\n   * A helper method to make calls to any `EditorJS` API (see [API Docs](https://editorjs.io/api))\n   * The first argument should container the holder and method name, and namespace if required\n   * The second argument is any additional arguments as required by the API.\n   * The response of this method if a `Observable>` which contains\n   * the options passed and an extra `result` property. If the result is a Promise it will\n   * resolve the value\n   * @param options Options to pass to the API request\n   * @param args Additional arguments to pass to the API request\n   */\n  public apiCall(options: InjectorApiCallOptions, ...args): Observable> {\n    return this.getEditor(options).pipe(\n      take(1),\n      map(editor => {\n        return this.zone.runOutsideAngular(() => {\n          let method: any;\n          if (!options.namespace) {\n            method = editor[options.method];\n          } else {\n            method = editor[options.namespace][options.method];\n          }\n          if (!method) {\n            throw new Error(`No method ${options.method} ${options.namespace ? 'in' + options.namespace : ''}`);\n          }\n          const result = method.call(editor, ...args);\n          return this.zone.run(() => {\n            if (!result || (result && !result.then)) {\n              return {\n                ...options,\n                result\n              };\n            }\n            return result.then(result => ({ ...options, result }));\n          });\n        });\n      })\n    );\n  }\n\n  /**\n   * Calls the save method on the `EditorJS` instance and updates the blocks map\n   * @param holder The holder ID of the `EditorJS` instance\n   */\n  public save(options: InjectorMethodOption) {\n    this.getEditor(options)\n      .pipe(take(1))\n      .subscribe(editor => {\n        this.zone.runOutsideAngular(() => {\n          editor.saver.save().then(data => {\n            this.zone.run(() => {\n              this.hasSavedMap[options.holder].next(true);\n              this.hasChangedMap[options.holder].next(data);\n            });\n          });\n        });\n      });\n  }\n\n  /**\n   * Calls a clear method on an editor\n   * @param holder The holder ID of the `EditorJS` instance\n   */\n  public clear(options: InjectorMethodOption) {\n    this.getEditor(options)\n      .pipe(take(1))\n      .subscribe(editor => {\n        this.zone.runOutsideAngular(() => {\n          editor.blocks.clear();\n          this.zone.run(() => {\n            this.hasSavedMap[options.holder].next(true);\n            this.hasChangedMap[options.holder].next({ time: Date.now(), blocks: [] });\n          });\n        });\n      });\n  }\n\n  /**\n   * Updates the editor with new blocks\n   * @param options The options to update\n   * @param triggerUpdate If set to false the hasChanged observable won't be updated\n   */\n  public update(options: InjectorMethodOption, triggerUpdate = true) {\n    if (!options.blocks) {\n      return;\n    }\n    this.getEditor(options)\n      .pipe(take(1))\n      .subscribe(editor => {\n        this.zone.runOutsideAngular(() => {\n          const time = Date.now();\n          const data = {\n            time,\n            version: this.editorJs.version,\n            blocks: options.blocks\n          };\n          editor.blocks.render(data);\n\n          this.zone.run(() => {\n            this.hasSavedMap[options.holder].next(false);\n            if (triggerUpdate) {\n              this.hasChangedMap[options.holder].next(data);\n            }\n          });\n        });\n      });\n  }\n\n  /**\n   * Returns an Observable value of an `EditorJS` instance\n   * @param holder The holder ID of the `EditorJS` instance\n   */\n  public getEditor(options: InjectorMethodOption): Observable {\n    if (!this.editorMap[options.holder]) {\n      this.editorMap[options.holder] = new BehaviorSubject(undefined);\n    }\n    return this.editorMap[options.holder].pipe(filter(editor => typeof editor !== 'undefined'));\n  }\n\n  /**\n   * Returns an Observable value of an `EditorJS` instance\n   * @param holder The holder ID of the `EditorJS` instance\n   */\n  public isReady(options: InjectorMethodOption): Observable {\n    if (!this.isReadyMap[options.holder]) {\n      this.isReadyMap[options.holder] = new BehaviorSubject(false);\n    }\n    return this.isReadyMap[options.holder].asObservable();\n  }\n\n  /**\n   * Returns an Observable value of when an `EditorJS` changes\n   * @param holder The holder ID of the `EditorJS` instance\n   */\n  public hasChanged(options: InjectorMethodOption): Observable {\n    if (!this.hasChangedMap[options.holder]) {\n      this.hasChangedMap[options.holder] = new BehaviorSubject({ time: 0, blocks: [] });\n    }\n    return this.hasChangedMap[options.holder].asObservable();\n  }\n\n  /**\n   * Returns an Observable value of an `EditorJS` saves\n   * @param holder The holder ID of the `EditorJS` instance\n   */\n  public hasSaved(options: InjectorMethodOption): Observable {\n    if (!this.hasSavedMap[options.holder]) {\n      this.hasSavedMap[options.holder] = new BehaviorSubject(false);\n    }\n    return this.hasSavedMap[options.holder].asObservable();\n  }\n\n  /**\n   * Destroys an instance of an editor and cleans up all Observable values\n   * @param holder The holder ID of the `EditorJS` instance\n   */\n  public destroyInstance(options: InjectorMethodOption): void {\n    const instanceDestroyed = new Subject();\n    this.getEditor(options)\n      .pipe(takeUntil(instanceDestroyed))\n      .subscribe(editor => {\n        this.zone.runOutsideAngular(() => {\n          editor.destroy();\n          this.zone.run(() => {\n            this.cleanupSubjects({ holder: options.holder });\n            instanceDestroyed.next(true);\n            instanceDestroyed.complete();\n            this.ref.tick();\n          });\n        });\n      });\n  }\n\n  /**\n   * Sets up the Subjects provided by this service\n   * @param holder The holder to set up the subjects for\n   * @param editor The Editor instance created outside of Angular\n   */\n  private async setupSubjects({ holder, editor }: InjectorMethodOption): Promise {\n    MAP_DEFAULTS.forEach(([mapKey, value]: [string, typeof value]) => {\n      if (!this[mapKey][holder]) {\n        this[mapKey][holder] = new BehaviorSubject(value);\n      }\n      this[mapKey][holder].next(value);\n    });\n    if (this.editorMap[holder]) {\n      this.editorMap[holder].next(editor);\n    } else {\n      this.editorMap[holder] = new BehaviorSubject(editor);\n    }\n  }\n\n  /**\n   * Handles cleaning up all the subjects once an `EditorJS` instance has been\n   * destroyed\n   * @param holder The holder ID for the `EditorJS` instance\n   */\n  private cleanupSubjects(options: InjectorMethodOption) {\n    MAP_DEFAULTS.forEach(([mapKey, value]: [string, any]) => {\n      if (this[mapKey][options.holder]) {\n        this[mapKey][options.holder].next(value);\n        this[mapKey][options.holder].complete();\n        this[mapKey][options.holder] = null;\n        delete this[mapKey][options.holder];\n      }\n    });\n    this.editorMap[options.holder] = null;\n    delete this.editorMap[options.holder];\n  }\n\n  /**\n   * Call this to destroy all subscriptions within the service\n   */\n  public destroy() {\n    Object.keys(this.editorMap).forEach(holder => {\n      this.destroyInstance({ holder });\n    });\n    this.onDestroy$.next(true);\n    this.onDestroy$.complete();\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/NgxEditorJSModule.html":{"url":"modules/NgxEditorJSModule.html","title":"module - NgxEditorJSModule","body":"\n                   \n\n\n\n\n    Modules\n    NgxEditorJSModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_NgxEditorJSModule\n\n\n\ncluster_NgxEditorJSModule_declarations\n\n\n\ncluster_NgxEditorJSModule_exports\n\n\n\ncluster_NgxEditorJSModule_providers\n\n\n\n\nNgxEditorJSBaseComponent\n\nNgxEditorJSBaseComponent\n\n\n\nNgxEditorJSModule\n\nNgxEditorJSModule\n\nNgxEditorJSModule -->\n\nNgxEditorJSBaseComponent->NgxEditorJSModule\n\n\n\n\n\nNgxEditorJSComponent\n\nNgxEditorJSComponent\n\nNgxEditorJSModule -->\n\nNgxEditorJSComponent->NgxEditorJSModule\n\n\n\n\n\nNgxEditorJSDirective\n\nNgxEditorJSDirective\n\nNgxEditorJSModule -->\n\nNgxEditorJSDirective->NgxEditorJSModule\n\n\n\n\n\nNgxEditorJSMatFieldComponent\n\nNgxEditorJSMatFieldComponent\n\nNgxEditorJSModule -->\n\nNgxEditorJSMatFieldComponent->NgxEditorJSModule\n\n\n\n\n\nNgxEditorJSBaseComponent \n\nNgxEditorJSBaseComponent \n\nNgxEditorJSBaseComponent  -->\n\nNgxEditorJSModule->NgxEditorJSBaseComponent \n\n\n\n\n\nNgxEditorJSComponent \n\nNgxEditorJSComponent \n\nNgxEditorJSComponent  -->\n\nNgxEditorJSModule->NgxEditorJSComponent \n\n\n\n\n\nNgxEditorJSDirective \n\nNgxEditorJSDirective \n\nNgxEditorJSDirective  -->\n\nNgxEditorJSModule->NgxEditorJSDirective \n\n\n\n\n\nNgxEditorJSMatFieldComponent \n\nNgxEditorJSMatFieldComponent \n\nNgxEditorJSMatFieldComponent  -->\n\nNgxEditorJSModule->NgxEditorJSMatFieldComponent \n\n\n\n\n\nNgxEditorJSInstanceService\n\nNgxEditorJSInstanceService\n\nNgxEditorJSModule -->\n\nNgxEditorJSInstanceService->NgxEditorJSModule\n\n\n\n\n\nNgxEditorJSPluginService\n\nNgxEditorJSPluginService\n\nNgxEditorJSModule -->\n\nNgxEditorJSPluginService->NgxEditorJSModule\n\n\n\n\n\nNgxEditorJSService\n\nNgxEditorJSService\n\nNgxEditorJSModule -->\n\nNgxEditorJSService->NgxEditorJSModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            libs/ngx-editorjs/src/lib/ngx-editorjs.module.ts\n        \n\n\n        \n            Description\n        \n        \n            The @tinynodes/ngx-editorjs module provides a collection of features to allow\nany Angular app to use and control an EditorJS instance\nTo use import the module NgxEditorJSModule.forRoot() into the root of your application.\nThe forRoot method takes an optional NgxEditorJSModuleConfig config, this will provide a\ndefault instance.\n\n        \n\n\n        \n            \n                \n                    Declarations\n                    \n                        \n                            NgxEditorJSBaseComponent\n                        \n                        \n                            NgxEditorJSComponent\n                        \n                        \n                            NgxEditorJSDirective\n                        \n                        \n                            NgxEditorJSMatFieldComponent\n                        \n                    \n                \n                \n                    Providers\n                    \n                        \n                            NgxEditorJSInstanceService\n                        \n                        \n                            NgxEditorJSPluginService\n                        \n                        \n                            NgxEditorJSService\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            NgxEditorJSBaseComponent\n                        \n                        \n                            NgxEditorJSComponent\n                        \n                        \n                            NgxEditorJSDirective\n                        \n                        \n                            NgxEditorJSMatFieldComponent\n                        \n                    \n                \n            \n        \n\n        \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Static\n                            forRoot\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    forRoot(config?: NgxEditorJSModuleConfig)\n                \n            \n\n\n            \n                \n                    Defined in libs/ngx-editorjs/src/lib/ngx-editorjs.module.ts:63\n                \n            \n\n\n            \n                \n                    Use this method in the root of the application.  You can pass an optional configuration\nwhich sets some defaults, or use the provided defaults.\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    config\n                                    \n                                                NgxEditorJSModuleConfig\n                                    \n\n                                    \n                                        Yes\n                                    \n\n\n                                    \n                                        The optional configuration to pass\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         ModuleWithProviders\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n    \n\n\n    \n        import { CommonModule } from '@angular/common';\nimport { ModuleWithProviders, NgModule, Optional, SkipSelf } from '@angular/core';\nimport { FormsModule } from '@angular/forms';\nimport { MatFormFieldModule, MatInputModule } from '@angular/material';\nimport EditorJS from '@editorjs/editorjs';\nimport { createModuleConfig } from './config/module-config';\nimport { NgxEditorJSBaseComponent } from './containers/base/container.class';\nimport { NgxEditorJSMatFieldComponent } from './containers/editorjs-mat-field/editorjs-mat-field.component';\nimport { NgxEditorJSComponent } from './containers/editorjs/editorjs.component';\nimport { NgxEditorJSDirective } from './directives/ngx-editorjs.directive';\nimport { NgxEditorJSInstanceService } from './services/editorjs-injector';\nimport { NgxEditorJSService } from './services/editorjs.service';\nimport { NgxEditorJSPluginService } from './services/plugins.service';\nimport { FOR_ROOT_OPTIONS_TOKEN, NgxEditorJSModuleConfig, NGX_EDITORJS_CONFIG } from './types/config';\nimport { EditorJSInstance, EDITORJS_MODULE_IMPORT } from './types/injector';\n\n/**\n * Factory function to return the EditorJS base class\n */\nexport function createEditorJSInstance(editorjs: any) {\n  return editorjs;\n}\n\n/**\n * The `@tinynodes/ngx-editorjs` module provides a collection of features to allow\n * any Angular app to use and control an [EditorJS](http://editorjs.io) instance\n *\n * To use import the module `NgxEditorJSModule.forRoot()` into the root of your application.\n * The `forRoot` method takes an optional `NgxEditorJSModuleConfig` config, this will provide a\n * default instance.\n */\n@NgModule({\n  imports: [CommonModule, FormsModule, MatInputModule, MatFormFieldModule],\n  declarations: [NgxEditorJSComponent, NgxEditorJSMatFieldComponent, NgxEditorJSDirective, NgxEditorJSBaseComponent],\n  exports: [NgxEditorJSComponent, NgxEditorJSMatFieldComponent, NgxEditorJSDirective, NgxEditorJSBaseComponent],\n  providers: [\n    NgxEditorJSService,\n    NgxEditorJSPluginService,\n    NgxEditorJSInstanceService,\n    {\n      provide: EDITORJS_MODULE_IMPORT,\n      useValue: EditorJS\n    },\n    {\n      provide: EditorJSInstance,\n      useFactory: createEditorJSInstance,\n      deps: [EDITORJS_MODULE_IMPORT]\n    }\n  ]\n})\nexport class NgxEditorJSModule {\n  constructor(\n    @Optional()\n    @SkipSelf()\n    parentModule: NgxEditorJSModule\n  ) {}\n\n  /**\n   * Use this method in the root of the application.  You can pass an optional configuration\n   * which sets some defaults, or use the provided defaults.\n   * @param config The optional configuration to pass\n   */\n  static forRoot(@Optional() config?: NgxEditorJSModuleConfig): ModuleWithProviders {\n    return {\n      ngModule: NgxEditorJSModule,\n      providers: [\n        {\n          provide: FOR_ROOT_OPTIONS_TOKEN,\n          useValue: config\n        },\n        {\n          provide: NGX_EDITORJS_CONFIG,\n          useFactory: createModuleConfig,\n          deps: [FOR_ROOT_OPTIONS_TOKEN]\n        }\n      ]\n    };\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/NgxEditorJSModuleConfig.html":{"url":"interfaces/NgxEditorJSModuleConfig.html","title":"interface - NgxEditorJSModuleConfig","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  NgxEditorJSModuleConfig\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            libs/ngx-editorjs/src/lib/types/config.ts\n        \n\n            \n                Description\n            \n            \n                The configuration option that can be passed to the NgxEditorJSModule.forRoot method\n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                            Optional\n                                        editorjs\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        editorjs\n                                    \n                                \n                                \n                                    \n                                        editorjs:     EditorConfig\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     EditorConfig\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    Configuration options for EditorJS\n\n                                \n                            \n                        \n                    \n            \n    \n\n\n    \n        import { InjectionToken } from '@angular/core';\nimport EditorJS, { OutputData, SanitizerConfig, EditorConfig } from '@editorjs/editorjs';\n\n/**\n * Configuration for the EditorJS instance\n */\nexport interface NgxEditorJSConfig {\n  /**\n   * If the EditorJS is autofocused on creation (default: false)\n   */\n  autofocus?: boolean;\n\n  /**\n   * Any initial output data to render\n   */\n  data?: OutputData;\n\n  /**\n   * If true, toolbar won't be shown\n   */\n  hideToolbar?: boolean;\n\n  /**\n   * ID of the element to hold the config\n   */\n  holder?: string;\n\n  /**\n   * The name of the initial block (default \"paragraph\")\n   */\n  initialBlock?: string;\n\n  /**\n   * Height of Editor's bottom area that allows to set focus on the last Block\n   */\n  minHeight?: number;\n\n  /**\n   * First Block placeholder\n   */\n  blockPlaceholder?: string;\n\n  /**\n   * Define default sanitizer configuration\n   */\n  sanitizer?: SanitizerConfig;\n}\n\n/**\n * The configuration option that can be passed to the `NgxEditorJSModule.forRoot` method\n */\nexport interface NgxEditorJSModuleConfig {\n  /**\n   * Configuration options for `EditorJS`\n   */\n  editorjs?: EditorConfig;\n}\n\n/**\n * Injection token provied for `NgxEditorJSConfig`\n */\nexport const NGX_EDITORJS_CONFIG = new InjectionToken('NGX_EDITORJS_CONFIG');\n\n/**\n * Internal token for injecting the `NgxEditorJSConfig` into the config factory\n */\nexport const FOR_ROOT_OPTIONS_TOKEN = new InjectionToken('FOR_ROOT_OPTIONS_TOKEN');\n\n/**\n * Get the EditorJS instance injected into the app\n */\nexport const EDITIOR_JS_INSTANCE = new InjectionToken('EDITIOR_JS_INSTANCE');\n\n    \n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/NgxEditorJSPluginService.html":{"url":"injectables/NgxEditorJSPluginService.html","title":"injectable - NgxEditorJSPluginService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  NgxEditorJSPluginService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            libs/ngx-editorjs/src/lib/services/plugins.service.ts\n        \n\n            \n                Description\n            \n            \n                The plugin service provides a singleton to store all plugins injected into the application\nand makes them available for all instances of EditorJS\n\n            \n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                add\n                            \n                            \n                                    Public\n                                get\n                            \n                            \n                                    Public\n                                getTools\n                            \n                            \n                                    Public\n                                remove\n                            \n                        \n                    \n                \n\n\n\n\n\n                    \n                        \n                            Accessors\n                        \n                    \n                    \n                        \n                            \n                                \n                                    plugins\n                                \n                            \n                        \n                    \n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(userPlugins: PluginConfig)\n                    \n                \n                        \n                            \n                                Defined in libs/ngx-editorjs/src/lib/services/plugins.service.ts:15\n                            \n                        \n\n                \n                    \n                            When the class is initialized the initial plugins and any user plugins\nwill be passed in and merged and stored in the config map\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        userPlugins\n                                                  \n                                                        \n                                                                        PluginConfig\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                User plugins injected into the application\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            add\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    add(key: string, plugin: BasePlugin)\n                \n            \n\n\n            \n                \n                    Defined in libs/ngx-editorjs/src/lib/services/plugins.service.ts:31\n                \n            \n\n\n            \n                \n                    Add a plugin to the store\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    key\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        The key for the map to store the plugin\n\n                                    \n                                \n                                \n                                    plugin\n                                    \n                                                BasePlugin\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        The plugin instance to add to the service\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            get\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    get(key: string)\n                \n            \n\n\n            \n                \n                    Defined in libs/ngx-editorjs/src/lib/services/plugins.service.ts:48\n                \n            \n\n\n            \n                \n                    Get a single plugin from the map\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    key\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         BasePlugin\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            getTools\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    getTools(exclude: string[])\n                \n            \n\n\n            \n                \n                    Defined in libs/ngx-editorjs/src/lib/services/plugins.service.ts:63\n                \n            \n\n\n            \n                \n                    Returns a map of tools to be initialized by the editor\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Default value\n                                    Description\n                                \n                            \n                            \n                                \n                                    exclude\n                                    \n                                            string[]\n                                    \n\n                                    \n                                        No\n                                    \n\n                                    \n                                        []\n                                    \n\n                                    \n                                        Optional array of keys to exclude from the map\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         ToolSettingsMap\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            remove\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    remove(key: string)\n                \n            \n\n\n            \n                \n                    Defined in libs/ngx-editorjs/src/lib/services/plugins.service.ts:39\n                \n            \n\n\n            \n                \n                    Remove a plugin from the store\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    key\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n            \n    \n        Accessors\n    \n        \n            \n                \n                    \n                        \n                        plugins\n                    \n                \n\n                \n                    \n                        getplugins()\n                    \n                \n                            \n                                \n                                    Defined in libs/ngx-editorjs/src/lib/services/plugins.service.ts:55\n                                \n                            \n                    \n                        \n                                Returns a map of all the plugins registered with this service\n\n\n                                \n                                    Returns :         PluginConfig\n\n                                \n                        \n                    \n\n            \n        \n\n    \n\n\n    \n        import { Inject, Injectable } from '@angular/core';\nimport { BasePlugin, PluginConfig, ToolSettingsMap, UserPlugins } from '../types/plugins';\n\n/**\n * The plugin service provides a singleton to store all plugins injected into the application\n * and makes them available for all instances of `EditorJS`\n */\n@Injectable({\n  providedIn: 'root'\n})\nexport class NgxEditorJSPluginService {\n  /**\n   * Object map of the plugin configurations\n   */\n  private pluginsMap: PluginConfig = {};\n\n  /**\n   * When the class is initialized the initial plugins and any user plugins\n   * will be passed in and merged and stored in the config map\n   * @param userPlugins User plugins injected into the application\n   */\n  constructor(@Inject(UserPlugins) userPlugins: PluginConfig) {\n    Object.entries({ ...userPlugins }).forEach(([key, tool]) => this.add(key, tool));\n  }\n\n  /**\n   * Add a plugin to the store\n   * @param key The key for the map to store the plugin\n   * @param plugin The plugin instance to add to the service\n   */\n  public add(key: string, plugin: BasePlugin) {\n    this.pluginsMap[key] = plugin;\n  }\n\n  /**\n   * Remove a plugin from the store\n   * @param key\n   */\n  public remove(key: string) {\n    this.pluginsMap[key] = null;\n    delete this.pluginsMap[key];\n  }\n\n  /**\n   * Get a single plugin from the map\n   * @param name\n   */\n  public get(key: string): BasePlugin {\n    return this.pluginsMap[key];\n  }\n\n  /**\n   * Returns a map of all the plugins registered with this service\n   */\n  public get plugins(): PluginConfig {\n    return this.pluginsMap;\n  }\n\n  /**\n   * Returns a map of tools to be initialized by the editor\n   * @param exclude Optional array of keys to exclude from the map\n   */\n  public getTools(exclude: string[] = []): ToolSettingsMap {\n    return Object.entries(this.pluginsMap)\n      .filter(([key]) => {\n        return !exclude.includes(key);\n      })\n      .reduce((finalTools, [key, plugin]) => {\n        if (plugin.shortcut) {\n          return {\n            [key]: {\n              class: plugin.plugin(),\n              shortcut: plugin.shortcut()\n            },\n            ...finalTools\n          };\n        } else {\n          return { [key]: plugin.plugin(), ...finalTools };\n        }\n      }, {});\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/NgxEditorJSService.html":{"url":"injectables/NgxEditorJSService.html","title":"injectable - NgxEditorJSService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  NgxEditorJSService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            libs/ngx-editorjs/src/lib/services/editorjs.service.ts\n        \n\n            \n                Description\n            \n            \n                The NgxEditorJSService provides control EditorJS instances via Angular.\n\n            \n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                apiCall\n                            \n                            \n                                    Public\n                                clear\n                            \n                            \n                                    Public\n                                    Async\n                                createEditor\n                            \n                            \n                                    Public\n                                destroy\n                            \n                            \n                                    Public\n                                getEditor\n                            \n                            \n                                    Public\n                                hasChanged\n                            \n                            \n                                    Public\n                                hasSaved\n                            \n                            \n                                    Public\n                                isReady\n                            \n                            \n                                    Public\n                                save\n                            \n                            \n                                    Public\n                                update\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(config: NgxEditorJSModuleConfig, instanceService: NgxEditorJSInstanceService, plugins: NgxEditorJSPluginService)\n                    \n                \n                        \n                            \n                                Defined in libs/ngx-editorjs/src/lib/services/editorjs.service.ts:17\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        config\n                                                  \n                                                        \n                                                                        NgxEditorJSModuleConfig\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        instanceService\n                                                  \n                                                        \n                                                                        NgxEditorJSInstanceService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        plugins\n                                                  \n                                                        \n                                                                        NgxEditorJSPluginService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            apiCall\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    apiCall(options: InjectorApiCallOptions, ...args: any[])\n                \n            \n\n\n            \n                \n                    Defined in libs/ngx-editorjs/src/lib/services/editorjs.service.ts:84\n                \n            \n\n            \n                \n                    Type parameters :\n                    \n                        T\n                    \n                \n            \n\n            \n                \n                    A helper method to make calls to any EditorJS API (see API Docs)\nThe first argument should container the holder and method name, and namespace if required\nThe second argument is any additional arguments as required by the API.\nThe response of this method if a Observable> which contains\nthe options passed and an extra result property. If the result is a Promise it will\nresolve the value\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    options\n                                    \n                                                InjectorApiCallOptions\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        Options to pass to the API request\n\n                                    \n                                \n                                \n                                    args\n                                    \n                                            any[]\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        Additional arguments to pass to the API request\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Observable>\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            clear\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    clear(options: InjectorMethodOption)\n                \n            \n\n\n            \n                \n                    Defined in libs/ngx-editorjs/src/lib/services/editorjs.service.ts:112\n                \n            \n\n\n            \n                \n                    Clears all blocks from an EditorJS instance\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    options\n                                    \n                                                InjectorMethodOption\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            Async\n                            createEditor\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    createEditor(options: CreateEditorJSOptions)\n                \n            \n\n\n            \n                \n                    Defined in libs/ngx-editorjs/src/lib/services/editorjs.service.ts:28\n                \n            \n\n\n            \n                \n                    This method creates a new EditorJS instance\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    options\n                                    \n                                                CreateEditorJSOptions\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        The instance options\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            destroy\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    destroy(options: InjectorMethodOption)\n                \n            \n\n\n            \n                \n                    Defined in libs/ngx-editorjs/src/lib/services/editorjs.service.ts:122\n                \n            \n\n\n            \n                \n                    Destroy the EditorJS instance\nIt also calls the maps and sets their values back to their defaults and then\ncompletes and destroys them\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    options\n                                    \n                                                InjectorMethodOption\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            getEditor\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    getEditor(options: InjectorMethodOption)\n                \n            \n\n\n            \n                \n                    Defined in libs/ngx-editorjs/src/lib/services/editorjs.service.ts:43\n                \n            \n\n\n            \n                \n                    Get an EditorJS instance\nSee the EditorJS API docs for more details\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    options\n                                    \n                                                InjectorMethodOption\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Observable\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            hasChanged\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    hasChanged(options: InjectorMethodOption)\n                \n            \n\n\n            \n                \n                    Defined in libs/ngx-editorjs/src/lib/services/editorjs.service.ts:61\n                \n            \n\n\n            \n                \n                    Returns an Observable of the current timestamp of the last change\nthis can be subscribed to before calling the createEditor method\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    options\n                                    \n                                                InjectorMethodOption\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Observable\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            hasSaved\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    hasSaved(options: InjectorMethodOption)\n                \n            \n\n\n            \n                \n                    Defined in libs/ngx-editorjs/src/lib/services/editorjs.service.ts:70\n                \n            \n\n\n            \n                \n                    Returns an Observable of the current timestamp of the last change\nthis can be subscribed to before calling the createEditor method\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    options\n                                    \n                                                InjectorMethodOption\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Observable\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            isReady\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    isReady(options: InjectorMethodOption)\n                \n            \n\n\n            \n                \n                    Defined in libs/ngx-editorjs/src/lib/services/editorjs.service.ts:52\n                \n            \n\n\n            \n                \n                    Returns an Observable of the current ready state, this can be subscribed to before calling\nthe createEditor method\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    options\n                                    \n                                                InjectorMethodOption\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Observable\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            save\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    save(options: InjectorMethodOption)\n                \n            \n\n\n            \n                \n                    Defined in libs/ngx-editorjs/src/lib/services/editorjs.service.ts:104\n                \n            \n\n\n            \n                \n                    Calls the EditorJS save method which returns an OutputData object.\nFrom this the service updates the blocks map and change map values\nIf there is no instance of that name it will throw an error.\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    options\n                                    \n                                                InjectorMethodOption\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            update\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    update(options: InjectorMethodOption, triggerUpdate)\n                \n            \n\n\n            \n                \n                    Defined in libs/ngx-editorjs/src/lib/services/editorjs.service.ts:94\n                \n            \n\n\n            \n                \n                    This method updates the blocks within the EditorJS instance.\nIf there is no instance of that name it will throw an error.\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Default value\n                                    Description\n                                \n                            \n                            \n                                \n                                    options\n                                    \n                                                InjectorMethodOption\n                                    \n\n                                    \n                                        No\n                                    \n\n                                    \n                                    \n\n                                    \n                                        The options to update\n\n                                    \n                                \n                                \n                                    triggerUpdate\n                                    \n                                    \n\n                                    \n                                        No\n                                    \n\n                                    \n                                        true\n                                    \n\n                                    \n                                        If set to false the hasChanged observable won't be updated\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Inject, Injectable } from '@angular/core';\nimport EditorJS, { EditorConfig, OutputData } from '@editorjs/editorjs';\nimport { Observable } from 'rxjs';\nimport { filter } from 'rxjs/operators';\nimport { NgxEditorJSModuleConfig, NGX_EDITORJS_CONFIG } from '../types/config';\nimport { CreateEditorJSOptions } from '../types/editorjs-service';\nimport { InjectorApiCallOptions, InjectorApiCallResponse, InjectorMethodOption } from '../types/injector';\nimport { NgxEditorJSInstanceService } from './editorjs-injector';\nimport { NgxEditorJSPluginService } from './plugins.service';\n\n/**\n * The NgxEditorJSService provides control EditorJS instances via Angular.\n */\n@Injectable({\n  providedIn: 'root'\n})\nexport class NgxEditorJSService {\n  constructor(\n    @Inject(NGX_EDITORJS_CONFIG) private config: NgxEditorJSModuleConfig,\n    private readonly instanceService: NgxEditorJSInstanceService,\n    private readonly plugins: NgxEditorJSPluginService\n  ) {}\n\n  /**\n   * This method creates a new EditorJS instance\n   * @param options The instance options\n   */\n  public async createEditor(options: CreateEditorJSOptions): Promise {\n    const editorConfig: EditorConfig = {\n      ...this.config.editorjs,\n      ...options.config,\n      tools: this.plugins.getTools(options.includeTools)\n    };\n\n    await this.instanceService.createInstance({ editorConfig });\n  }\n\n  /**\n   * Get an `EditorJS` instance\n   * See the [EditorJS API](https://editorjs.io/api) docs for more details\n   * @param holder The ID of the holder of the instance\n   */\n  public getEditor(options: InjectorMethodOption): Observable {\n    return this.instanceService.getEditor(options).pipe(filter(editor => typeof editor !== 'undefined'));\n  }\n\n  /**\n   * Returns an `Observable` of the current ready state, this can be subscribed to before calling\n   * the `createEditor` method\n   * @param holder\n   */\n  public isReady(options: InjectorMethodOption): Observable {\n    return this.instanceService.isReady(options);\n  }\n\n  /**\n   * Returns an `Observable` of the current timestamp of the last change\n   * this can be subscribed to before calling the `createEditor` method\n   * @param holder\n   */\n  public hasChanged(options: InjectorMethodOption): Observable {\n    return this.instanceService.hasChanged(options);\n  }\n\n  /**\n   * Returns an `Observable` of the current timestamp of the last change\n   * this can be subscribed to before calling the `createEditor` method\n   * @param holder\n   */\n  public hasSaved(options: InjectorMethodOption): Observable {\n    return this.instanceService.hasSaved(options);\n  }\n\n  /**\n   * A helper method to make calls to any `EditorJS` API (see [API Docs](https://editorjs.io/api))\n   * The first argument should container the holder and method name, and namespace if required\n   * The second argument is any additional arguments as required by the API.\n   * The response of this method if a `Observable>` which contains\n   * the options passed and an extra `result` property. If the result is a Promise it will\n   * resolve the value\n   * @param options Options to pass to the API request\n   * @param args Additional arguments to pass to the API request\n   */\n  public apiCall(options: InjectorApiCallOptions, ...args): Observable> {\n    return this.instanceService.apiCall(options, ...args);\n  }\n\n  /**\n   * This method updates the blocks within the `EditorJS` instance.\n   * If there is no instance of that name it will throw an error.\n   * @param options The options to update\n   * @param triggerUpdate If set to false the hasChanged observable won't be updated\n   */\n  public update(options: InjectorMethodOption, triggerUpdate = true) {\n    this.instanceService.update(options, triggerUpdate);\n  }\n\n  /**\n   * Calls the `EditorJS` save method which returns an `OutputData` object.\n   * From this the service updates the blocks map and change map values\n   * If there is no instance of that name it will throw an error.\n   * @param holder The ID of the holder of the instance\n   */\n  public save(options: InjectorMethodOption): void {\n    this.instanceService.save(options);\n  }\n\n  /**\n   * Clears all blocks from an `EditorJS instance`\n   * @param holder The ID of the holder of the instance\n   */\n  public clear(options: InjectorMethodOption): void {\n    this.instanceService.clear(options);\n  }\n\n  /**\n   * Destroy the `EditorJS` instance\n   * It also calls the maps and sets their values back to their defaults and then\n   * completes and destroys them\n   * @param holder The ID of the holder of the instance\n   */\n  public destroy(options: InjectorMethodOption): void {\n    this.instanceService.destroyInstance(options);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/NgxEditorjsDemoModule.html":{"url":"modules/NgxEditorjsDemoModule.html","title":"module - NgxEditorjsDemoModule","body":"\n                   \n\n\n\n\n    Modules\n    NgxEditorjsDemoModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_NgxEditorjsDemoModule\n\n\n\ncluster_NgxEditorjsDemoModule_declarations\n\n\n\ncluster_NgxEditorjsDemoModule_imports\n\n\n\ncluster_NgxEditorjsDemoModule_exports\n\n\n\n\nFormContainerComponent\n\nFormContainerComponent\n\n\n\nNgxEditorjsDemoModule\n\nNgxEditorjsDemoModule\n\nNgxEditorjsDemoModule -->\n\nFormContainerComponent->NgxEditorjsDemoModule\n\n\n\n\n\nNgxEditorJSDemoHomeComponent\n\nNgxEditorJSDemoHomeComponent\n\nNgxEditorjsDemoModule -->\n\nNgxEditorJSDemoHomeComponent->NgxEditorjsDemoModule\n\n\n\n\n\nNgxEditorJSDemoTagComponent\n\nNgxEditorJSDemoTagComponent\n\nNgxEditorjsDemoModule -->\n\nNgxEditorJSDemoTagComponent->NgxEditorjsDemoModule\n\n\n\n\n\nPageContainerComponent\n\nPageContainerComponent\n\nNgxEditorjsDemoModule -->\n\nPageContainerComponent->NgxEditorjsDemoModule\n\n\n\n\n\nFormContainerComponent \n\nFormContainerComponent \n\nFormContainerComponent  -->\n\nNgxEditorjsDemoModule->FormContainerComponent \n\n\n\n\n\nPageContainerComponent \n\nPageContainerComponent \n\nPageContainerComponent  -->\n\nNgxEditorjsDemoModule->PageContainerComponent \n\n\n\n\n\nPageStoreModule \n\nPageStoreModule \n\nPageStoreModule  -->\n\nNgxEditorjsDemoModule->PageStoreModule \n\n\n\n\n\nMaterialModule\n\nMaterialModule\n\nNgxEditorjsDemoModule -->\n\nMaterialModule->NgxEditorjsDemoModule\n\n\n\n\n\nNgxEditorJSModule\n\nNgxEditorJSModule\n\nNgxEditorjsDemoModule -->\n\nNgxEditorJSModule->NgxEditorjsDemoModule\n\n\n\n\n\nNgxTinynodesCoreModule\n\nNgxTinynodesCoreModule\n\nNgxEditorjsDemoModule -->\n\nNgxTinynodesCoreModule->NgxEditorjsDemoModule\n\n\n\n\n\nPageStoreModule\n\nPageStoreModule\n\nNgxEditorjsDemoModule -->\n\nPageStoreModule->NgxEditorjsDemoModule\n\n\n\n\n\nPluginCodeModule\n\nPluginCodeModule\n\nNgxEditorjsDemoModule -->\n\nPluginCodeModule->NgxEditorjsDemoModule\n\n\n\n\n\nPluginHeaderModule\n\nPluginHeaderModule\n\nNgxEditorjsDemoModule -->\n\nPluginHeaderModule->NgxEditorjsDemoModule\n\n\n\n\n\nPluginLinkModule\n\nPluginLinkModule\n\nNgxEditorjsDemoModule -->\n\nPluginLinkModule->NgxEditorjsDemoModule\n\n\n\n\n\nPluginListModule\n\nPluginListModule\n\nNgxEditorjsDemoModule -->\n\nPluginListModule->NgxEditorjsDemoModule\n\n\n\n\n\nPluginMarkerModule\n\nPluginMarkerModule\n\nNgxEditorjsDemoModule -->\n\nPluginMarkerModule->NgxEditorjsDemoModule\n\n\n\n\n\nPluginParagraphModule\n\nPluginParagraphModule\n\nNgxEditorjsDemoModule -->\n\nPluginParagraphModule->NgxEditorjsDemoModule\n\n\n\n\n\nPluginSimpleImageModule\n\nPluginSimpleImageModule\n\nNgxEditorjsDemoModule -->\n\nPluginSimpleImageModule->NgxEditorjsDemoModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            libs/ngx-editorjs-demo/src/lib/ngx-editorjs-demo.module.ts\n        \n\n\n\n\n        \n            \n                \n                    Declarations\n                    \n                        \n                            FormContainerComponent\n                        \n                        \n                            NgxEditorJSDemoHomeComponent\n                        \n                        \n                            NgxEditorJSDemoTagComponent\n                        \n                        \n                            PageContainerComponent\n                        \n                    \n                \n                \n                    EntryComponents\n                    \n                        \n                            FormContainerComponent\n                        \n                        \n                            PageContainerComponent\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            MaterialModule\n                        \n                        \n                            NgxEditorJSModule\n                        \n                        \n                            NgxTinynodesCoreModule\n                        \n                        \n                            PageStoreModule\n                        \n                        \n                            PluginCodeModule\n                        \n                        \n                            PluginHeaderModule\n                        \n                        \n                            PluginLinkModule\n                        \n                        \n                            PluginListModule\n                        \n                        \n                            PluginMarkerModule\n                        \n                        \n                            PluginParagraphModule\n                        \n                        \n                            PluginSimpleImageModule\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            FormContainerComponent\n                        \n                        \n                            PageContainerComponent\n                        \n                        \n                            PageStoreModule\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\nimport { ReactiveFormsModule } from '@angular/forms';\nimport {\n  MatButtonModule,\n  MatCardModule,\n  MatGridListModule,\n  MatExpansionModule,\n  MatInputModule,\n  MatFormFieldModule,\n  MatChipsModule,\n  MatBadgeModule,\n  MatIconModule\n} from '@angular/material';\nimport { RouterModule } from '@angular/router';\nimport { NgxEditorJSModule, UserPlugins } from '@tinynodes/ngx-editorjs';\nimport {\n  PluginCodeModule,\n  PluginHeaderModule,\n  PluginLinkModule,\n  PluginListModule,\n  PluginMarkerModule,\n  PluginParagraphModule,\n  PluginSimpleImageModule\n} from '@tinynodes/ngx-editorjs-plugins';\nimport { MarkdownModule } from 'ngx-markdown';\nimport { createNgxEditorJSDemoTools } from './config';\nimport { PageContainerComponent } from './containers/page-container/page-container.component';\nimport { ngxEditorjsDemoRoutes } from './ngx-editorjs-demo.routes';\nimport { PageStoreModule } from './store/pages/pages.module';\nimport { MaterialModule } from 'apps/ngx-tinynodes/src/app/material.module';\nimport { NgxTinynodesCoreModule } from '@tinynodes/ngx-tinynodes-core/src';\nimport { FormContainerComponent } from './containers/form-container/form-container.component';\nimport { NgxEditorJSDemoHomeComponent } from './containers/home-container/home-container.component';\nimport { NgxEditorJSDemoTagComponent } from './components/tag-component/tag.component';\n\n@NgModule({\n  imports: [\n    CommonModule,\n    RouterModule.forChild(ngxEditorjsDemoRoutes),\n    MarkdownModule.forChild(),\n    ReactiveFormsModule,\n    PageStoreModule,\n    NgxEditorJSModule,\n    PluginHeaderModule,\n    PluginParagraphModule,\n    PluginListModule,\n    PluginCodeModule,\n    PluginSimpleImageModule,\n    PluginLinkModule,\n    PluginMarkerModule,\n    MaterialModule,\n    MatCardModule,\n    MatButtonModule,\n    NgxTinynodesCoreModule,\n    MatGridListModule,\n    MatExpansionModule,\n    MatInputModule,\n    MatFormFieldModule,\n    MatChipsModule,\n    MatBadgeModule,\n    MatIconModule\n  ],\n  providers: [\n    {\n      provide: UserPlugins,\n      useFactory: createNgxEditorJSDemoTools\n    }\n  ],\n  declarations: [\n    PageContainerComponent,\n    FormContainerComponent,\n    NgxEditorJSDemoHomeComponent,\n    NgxEditorJSDemoTagComponent\n  ],\n  exports: [PageStoreModule, PageContainerComponent, FormContainerComponent],\n  entryComponents: [PageContainerComponent, FormContainerComponent]\n})\nexport class NgxEditorjsDemoModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/NgxEditorjsNgrxModule.html":{"url":"modules/NgxEditorjsNgrxModule.html","title":"module - NgxEditorjsNgrxModule","body":"\n                   \n\n\n\n\n    Modules\n    NgxEditorjsNgrxModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_NgxEditorjsNgrxModule\n\n\n\ncluster_NgxEditorjsNgrxModule_imports\n\n\n\n\nNgxEditorJSModule\n\nNgxEditorJSModule\n\n\n\nNgxEditorjsNgrxModule\n\nNgxEditorjsNgrxModule\n\nNgxEditorjsNgrxModule -->\n\nNgxEditorJSModule->NgxEditorjsNgrxModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            libs/ngx-editorjs-ngrx/src/lib/ngx-editorjs-ngrx.module.ts\n        \n\n\n        \n            Description\n        \n        \n            Warning: This module is current in development and not yet published\nThis module provides a set of NGRX Effects that allow you to control\nan EditorJS instance via store actions.\n\n        \n\n\n        \n            \n                \n                    Imports\n                    \n                        \n                            NgxEditorJSModule\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { EffectsModule } from '@ngrx/effects';\nimport { NgxEditorJSModule } from '@tinynodes/ngx-editorjs';\n\n/**\n * **Warning**: This module is current in development and not yet published\n *\n * This module provides a set of [NGRX Effects](https://ngrx.io/guide/effects) that allow you to control\n * an `EditorJS` instance via store actions.\n */\n@NgModule({\n  imports: [CommonModule, NgxEditorJSModule, EffectsModule.forFeature([])]\n})\nexport class NgxEditorjsNgrxModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/NgxEditorjsPluginsModule.html":{"url":"modules/NgxEditorjsPluginsModule.html","title":"module - NgxEditorjsPluginsModule","body":"\n                   \n\n\n\n\n    Modules\n    NgxEditorjsPluginsModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_NgxEditorjsPluginsModule\n\n\n\ncluster_NgxEditorjsPluginsModule_imports\n\n\n\ncluster_NgxEditorjsPluginsModule_exports\n\n\n\n\nPluginCodeModule\n\nPluginCodeModule\n\n\n\nNgxEditorjsPluginsModule\n\nNgxEditorjsPluginsModule\n\nNgxEditorjsPluginsModule -->\n\nPluginCodeModule->NgxEditorjsPluginsModule\n\n\n\n\n\nPluginHeaderModule\n\nPluginHeaderModule\n\nNgxEditorjsPluginsModule -->\n\nPluginHeaderModule->NgxEditorjsPluginsModule\n\n\n\n\n\nPluginImageModule\n\nPluginImageModule\n\nNgxEditorjsPluginsModule -->\n\nPluginImageModule->NgxEditorjsPluginsModule\n\n\n\n\n\nPluginLinkModule\n\nPluginLinkModule\n\nNgxEditorjsPluginsModule -->\n\nPluginLinkModule->NgxEditorjsPluginsModule\n\n\n\n\n\nPluginListModule\n\nPluginListModule\n\nNgxEditorjsPluginsModule -->\n\nPluginListModule->NgxEditorjsPluginsModule\n\n\n\n\n\nPluginMarkerModule\n\nPluginMarkerModule\n\nNgxEditorjsPluginsModule -->\n\nPluginMarkerModule->NgxEditorjsPluginsModule\n\n\n\n\n\nPluginParagraphModule\n\nPluginParagraphModule\n\nNgxEditorjsPluginsModule -->\n\nPluginParagraphModule->NgxEditorjsPluginsModule\n\n\n\n\n\nPluginSimpleImageModule\n\nPluginSimpleImageModule\n\nNgxEditorjsPluginsModule -->\n\nPluginSimpleImageModule->NgxEditorjsPluginsModule\n\n\n\n\n\nPluginCodeModule \n\nPluginCodeModule \n\nPluginCodeModule  -->\n\nNgxEditorjsPluginsModule->PluginCodeModule \n\n\n\n\n\nPluginHeaderModule \n\nPluginHeaderModule \n\nPluginHeaderModule  -->\n\nNgxEditorjsPluginsModule->PluginHeaderModule \n\n\n\n\n\nPluginImageModule \n\nPluginImageModule \n\nPluginImageModule  -->\n\nNgxEditorjsPluginsModule->PluginImageModule \n\n\n\n\n\nPluginLinkModule \n\nPluginLinkModule \n\nPluginLinkModule  -->\n\nNgxEditorjsPluginsModule->PluginLinkModule \n\n\n\n\n\nPluginListModule \n\nPluginListModule \n\nPluginListModule  -->\n\nNgxEditorjsPluginsModule->PluginListModule \n\n\n\n\n\nPluginMarkerModule \n\nPluginMarkerModule \n\nPluginMarkerModule  -->\n\nNgxEditorjsPluginsModule->PluginMarkerModule \n\n\n\n\n\nPluginParagraphModule \n\nPluginParagraphModule \n\nPluginParagraphModule  -->\n\nNgxEditorjsPluginsModule->PluginParagraphModule \n\n\n\n\n\nPluginSimpleImageModule \n\nPluginSimpleImageModule \n\nPluginSimpleImageModule  -->\n\nNgxEditorjsPluginsModule->PluginSimpleImageModule \n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            libs/ngx-editorjs-plugins/src/lib/ngx-editorjs-plugins.module.ts\n        \n\n\n        \n            Description\n        \n        \n            The NgxEditorjsPluginsModule provides several additional modules\nthat provide a way to easily plug in block and inline tools for EditorJS.\nImporting NgxEditorjsPluginsModule will include all modules, while it\nis also possible to import each individual module as required.\n\n        \n\n\n        \n            \n                \n                    Imports\n                    \n                        \n                            PluginCodeModule\n                        \n                        \n                            PluginHeaderModule\n                        \n                        \n                            PluginImageModule\n                        \n                        \n                            PluginLinkModule\n                        \n                        \n                            PluginListModule\n                        \n                        \n                            PluginMarkerModule\n                        \n                        \n                            PluginParagraphModule\n                        \n                        \n                            PluginSimpleImageModule\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            PluginCodeModule\n                        \n                        \n                            PluginHeaderModule\n                        \n                        \n                            PluginImageModule\n                        \n                        \n                            PluginLinkModule\n                        \n                        \n                            PluginListModule\n                        \n                        \n                            PluginMarkerModule\n                        \n                        \n                            PluginParagraphModule\n                        \n                        \n                            PluginSimpleImageModule\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\nimport { PluginCodeModule } from './plugins/code/code.module';\nimport { PluginHeaderModule } from './plugins/header/header.module';\nimport { PluginImageModule } from './plugins/image/image.module';\nimport { PluginLinkModule } from './plugins/link/link.module';\nimport { PluginListModule } from './plugins/list/list.module';\nimport { PluginMarkerModule } from './plugins/marker/marker.module';\nimport { PluginParagraphModule } from './plugins/paragraph/paragraph.module';\nimport { PluginSimpleImageModule } from './plugins/simple-image/simple-image.module';\n\n/**\n * The `NgxEditorjsPluginsModule` provides several additional modules\n * that provide a way to easily plug in block and inline tools for `EditorJS`.\n *\n * Importing `NgxEditorjsPluginsModule` will include all modules, while it\n * is also possible to import each individual module as required.\n */\n@NgModule({\n  imports: [\n    CommonModule,\n    PluginCodeModule,\n    PluginHeaderModule,\n    PluginImageModule,\n    PluginLinkModule,\n    PluginListModule,\n    PluginMarkerModule,\n    PluginParagraphModule,\n    PluginSimpleImageModule\n  ],\n  exports: [\n    PluginCodeModule,\n    PluginHeaderModule,\n    PluginImageModule,\n    PluginLinkModule,\n    PluginListModule,\n    PluginMarkerModule,\n    PluginParagraphModule,\n    PluginSimpleImageModule\n  ]\n})\nexport class NgxEditorjsPluginsModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/NgxHideableHeaderDemoModule.html":{"url":"modules/NgxHideableHeaderDemoModule.html","title":"module - NgxHideableHeaderDemoModule","body":"\n                   \n\n\n\n\n    Modules\n    NgxHideableHeaderDemoModule\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            libs/ngx-hideable-header-demo/src/lib/ngx-hideable-header-demo.module.ts\n        \n\n\n\n\n        \n            \n            \n        \n\n\n    \n\n\n    \n        import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { RouterModule, Route } from '@angular/router';\n\nexport const ngxHideableHeaderDemoRoutes: Route[] = [];\n\n@NgModule({\n  imports: [CommonModule, RouterModule]\n})\nexport class NgxHideableHeaderDemoModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/NgxTinynodesCoreMaterialModule.html":{"url":"modules/NgxTinynodesCoreMaterialModule.html","title":"module - NgxTinynodesCoreMaterialModule","body":"\n                   \n\n\n\n\n    Modules\n    NgxTinynodesCoreMaterialModule\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            libs/ngx-tinynodes-core/src/lib/ngx-tinynodes-core-material.module.ts\n        \n\n\n\n\n        \n            \n            \n        \n\n\n    \n\n\n    \n        import { NgModule } from '@angular/core';\nimport {\n  MatGridListModule,\n  MatCardModule,\n  MatExpansionModule,\n  MatListModule,\n  MatButtonModule\n} from '@angular/material';\nimport { CommonModule } from '@angular/common';\n\n@NgModule({\n  imports: [CommonModule, MatGridListModule, MatCardModule, MatExpansionModule, MatListModule, MatButtonModule],\n  exports: [CommonModule, MatGridListModule, MatCardModule, MatExpansionModule, MatListModule, MatButtonModule]\n})\nexport class NgxTinynodesCoreMaterialModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/NgxTinynodesCoreModule.html":{"url":"modules/NgxTinynodesCoreModule.html","title":"module - NgxTinynodesCoreModule","body":"\n                   \n\n\n\n\n    Modules\n    NgxTinynodesCoreModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_NgxTinynodesCoreModule\n\n\n\ncluster_NgxTinynodesCoreModule_declarations\n\n\n\ncluster_NgxTinynodesCoreModule_imports\n\n\n\ncluster_NgxTinynodesCoreModule_exports\n\n\n\n\nNgxEditorJSDemoInfoComponent\n\nNgxEditorJSDemoInfoComponent\n\n\n\nNgxTinynodesCoreModule\n\nNgxTinynodesCoreModule\n\nNgxTinynodesCoreModule -->\n\nNgxEditorJSDemoInfoComponent->NgxTinynodesCoreModule\n\n\n\n\n\nApplicationDataModule \n\nApplicationDataModule \n\nApplicationDataModule  -->\n\nNgxTinynodesCoreModule->ApplicationDataModule \n\n\n\n\n\nNgxEditorJSDemoInfoComponent \n\nNgxEditorJSDemoInfoComponent \n\nNgxEditorJSDemoInfoComponent  -->\n\nNgxTinynodesCoreModule->NgxEditorJSDemoInfoComponent \n\n\n\n\n\nNgxTinynodesCoreMaterialModule \n\nNgxTinynodesCoreMaterialModule \n\nNgxTinynodesCoreMaterialModule  -->\n\nNgxTinynodesCoreModule->NgxTinynodesCoreMaterialModule \n\n\n\n\n\nApplicationDataModule\n\nApplicationDataModule\n\nNgxTinynodesCoreModule -->\n\nApplicationDataModule->NgxTinynodesCoreModule\n\n\n\n\n\nNgxTinynodesCoreMaterialModule\n\nNgxTinynodesCoreMaterialModule\n\nNgxTinynodesCoreModule -->\n\nNgxTinynodesCoreMaterialModule->NgxTinynodesCoreModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            libs/ngx-tinynodes-core/src/lib/ngx-tinynodes-core.module.ts\n        \n\n\n        \n            Description\n        \n        \n            This module provides all the core features across the Tinynodes site\nthat need shared.\nThis includes the ApplicationDataModule which provides state and data loading via\nthe AppService\n\n        \n\n\n        \n            \n                \n                    Declarations\n                    \n                        \n                            NgxEditorJSDemoInfoComponent\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            ApplicationDataModule\n                        \n                        \n                            NgxTinynodesCoreMaterialModule\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            ApplicationDataModule\n                        \n                        \n                            NgxEditorJSDemoInfoComponent\n                        \n                        \n                            NgxTinynodesCoreMaterialModule\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { NgModule } from '@angular/core';\nimport { ApplicationDataModule } from './stores/app/application.module';\nimport { NgxEditorJSDemoInfoComponent } from './components/demo-info/demo-info.component';\nimport { NgxTinynodesCoreMaterialModule } from './ngx-tinynodes-core-material.module';\n/**\n * This module provides all the core features across the Tinynodes site\n * that need shared.\n *\n * This includes the `ApplicationDataModule` which provides state and data loading via\n * the `AppService`\n */\n@NgModule({\n  imports: [ApplicationDataModule, NgxTinynodesCoreMaterialModule],\n  declarations: [NgxEditorJSDemoInfoComponent],\n  exports: [ApplicationDataModule, NgxEditorJSDemoInfoComponent, NgxTinynodesCoreMaterialModule]\n})\nexport class NgxTinynodesCoreModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/NotReady.html":{"url":"classes/NotReady.html","title":"class - NotReady","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  NotReady\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            libs/ngx-editorjs-ngrx/src/lib/actions/ngx-editorjs.actions.ts\n        \n\n\n\n            \n                Implements\n            \n            \n                        Action\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                payload\n                            \n                            \n                                    Readonly\n                                type\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(payload: literal type)\n                    \n                \n                        \n                            \n                                Defined in libs/ngx-editorjs-ngrx/src/lib/actions/ngx-editorjs.actions.ts:23\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        payload\n                                                  \n                                                        \n                                                                    literal type\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            payload\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     literal type\n\n                        \n                    \n                        \n                            \n                                    Defined in libs/ngx-editorjs-ngrx/src/lib/actions/ngx-editorjs.actions.ts:24\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                            type\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : EditorJSActionTypes.NotReady\n                        \n                    \n                        \n                            \n                                    Defined in libs/ngx-editorjs-ngrx/src/lib/actions/ngx-editorjs.actions.ts:23\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { Action } from '@ngrx/store';\nimport { OutputData } from '@editorjs/editorjs';\n\nexport enum EditorJSActionTypes {\n  SaveStart = '[ngx-editorjs] Start Save',\n  SaveEnd = '[ngx-editorjs] Start End',\n  NotReady = '[ngx-editorjs] Not Ready',\n  Ready = '[ngx-editorjs] Ready',\n  Changed = '[ngx-editorjs] Changed'\n}\n\nexport class SaveStart implements Action {\n  readonly type = EditorJSActionTypes.SaveStart;\n  constructor(public payload: { holder: string }) {}\n}\n\nexport class SaveEnd implements Action {\n  readonly type = EditorJSActionTypes.SaveEnd;\n  constructor(public payload: { holder: string; data: OutputData }) {}\n}\n\nexport class NotReady implements Action {\n  readonly type = EditorJSActionTypes.NotReady;\n  constructor(public payload: { holder: string }) {}\n}\n\nexport class Ready implements Action {\n  readonly type = EditorJSActionTypes.Ready;\n  constructor(public payload: { holder: string }) {}\n}\n\nexport class Changed implements Action {\n  readonly type = EditorJSActionTypes.Changed;\n  constructor(public payload: { holder: string; data: OutputData }) {}\n}\n\nexport type NgxEditorJSActions = SaveStart | SaveEnd | NotReady | Ready | Changed;\n\n    \n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/Page.html":{"url":"interfaces/Page.html","title":"interface - Page","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  Page\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            libs/ngx-editorjs-demo/src/lib/store/pages/pages.models.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        blocks\n                                \n                                \n                                        id\n                                \n                                \n                                        pageTags\n                                \n                                \n                                        pageTitle\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        blocks\n                                    \n                                \n                                \n                                    \n                                        blocks:     PageBlock[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     PageBlock[]\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        id\n                                    \n                                \n                                \n                                    \n                                        id:     ID\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     ID\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        pageTags\n                                    \n                                \n                                \n                                    \n                                        pageTags:         Tag[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         Tag[]\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        pageTitle\n                                    \n                                \n                                \n                                    \n                                        pageTitle:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { ID } from '@datorama/akita';\nimport { Block } from '@tinynodes/ngx-editorjs';\n\nexport interface Tag {\n  key: string;\n}\n\nexport interface PageBlock extends Block {\n  id: ID;\n}\n\nexport interface Page {\n  id: ID;\n  pageTitle: string;\n  pageTags: Tag[];\n  blocks: PageBlock[];\n}\n\n    \n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/PageBlock.html":{"url":"interfaces/PageBlock.html","title":"interface - PageBlock","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  PageBlock\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            libs/ngx-editorjs-demo/src/lib/store/pages/pages.models.ts\n        \n\n\n            \n                Extends\n            \n            \n                        Block\n            \n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        id\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        id\n                                    \n                                \n                                \n                                    \n                                        id:     ID\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     ID\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { ID } from '@datorama/akita';\nimport { Block } from '@tinynodes/ngx-editorjs';\n\nexport interface Tag {\n  key: string;\n}\n\nexport interface PageBlock extends Block {\n  id: ID;\n}\n\nexport interface Page {\n  id: ID;\n  pageTitle: string;\n  pageTags: Tag[];\n  blocks: PageBlock[];\n}\n\n    \n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/PageContainerComponent.html":{"url":"components/PageContainerComponent.html","title":"component - PageContainerComponent","body":"\n                   \n\n\n\n\n\n  Components\n  PageContainerComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    libs/ngx-editorjs-demo/src/lib/containers/page-container/page-container.component.ts\n\n\n    \n        Description\n    \n    \n        The Page Container component provides the main routable page for loading\nthe ngx-editorjs-demo\n\n    \n\n\n    \n        Implements\n    \n    \n                    AfterContentInit\n    \n\n\n\n    Metadata\n    \n        \n\n            \n                changeDetection\n                ChangeDetectionStrategy.OnPush\n            \n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                ngx-page-container\n            \n\n            \n                styleUrls\n                page-container.component.scss\n            \n\n\n\n            \n                templateUrl\n                page-container.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                holder\n                            \n                            \n                                ngxEditorJS\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                clear\n                            \n                            \n                                ngAfterContentInit\n                            \n                            \n                                    Public\n                                reset\n                            \n                            \n                                    Public\n                                save\n                            \n                        \n                    \n                \n\n\n\n\n\n                    \n                        \n                            Accessors\n                        \n                    \n                    \n                        \n                            \n                                \n                                    blocks\n                                \n                                \n                                    menu\n                                \n                                \n                                    pages\n                                \n                                \n                                    asJSON\n                                \n                            \n                        \n                    \n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(pagesService: PagesService, app: AppService, editorService: NgxEditorJSService, cd: ChangeDetectorRef)\n                    \n                \n                        \n                            \n                                Defined in libs/ngx-editorjs-demo/src/lib/containers/page-container/page-container.component.ts:38\n                            \n                        \n\n                \n                    \n                            The constructor sets up the blocks to the initial demo data\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        pagesService\n                                                  \n                                                        \n                                                                        PagesService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                The pages service\n\n                                                        \n                                                \n                                                \n                                                        app\n                                                  \n                                                        \n                                                                        AppService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                The application service\n\n                                                        \n                                                \n                                                \n                                                        editorService\n                                                  \n                                                        \n                                                                        NgxEditorJSService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                The Editor service\n\n                                                        \n                                                \n                                                \n                                                        cd\n                                                  \n                                                        \n                                                                        ChangeDetectorRef\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                The change detection ref\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            clear\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    clear()\n                \n            \n\n\n            \n                \n                    Defined in libs/ngx-editorjs-demo/src/lib/containers/page-container/page-container.component.ts:88\n                \n            \n\n\n            \n                \n                    Clear the editor\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngAfterContentInit\n                        \n                        \n                    \n                \n            \n            \n                \nngAfterContentInit()\n                \n            \n\n\n            \n                \n                    Defined in libs/ngx-editorjs-demo/src/lib/containers/page-container/page-container.component.ts:121\n                \n            \n\n\n            \n                \n                    After the content has init override the blocks with blocks from the service\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            reset\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    reset()\n                \n            \n\n\n            \n                \n                    Defined in libs/ngx-editorjs-demo/src/lib/containers/page-container/page-container.component.ts:95\n                \n            \n\n\n            \n                \n                    Reset the editor with demo data\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            save\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    save()\n                \n            \n\n\n            \n                \n                    Defined in libs/ngx-editorjs-demo/src/lib/containers/page-container/page-container.component.ts:81\n                \n            \n\n\n            \n                \n                    Call the editor save method\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            holder\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Default value : 'ngx-editorjs-demo'\n                        \n                    \n                        \n                            \n                                    Defined in libs/ngx-editorjs-demo/src/lib/containers/page-container/page-container.component.ts:31\n                            \n                        \n\n                \n                    \n                        The holder ID for this demo\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            ngxEditorJS\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         NgxEditorJSComponent\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @ViewChild('ngxEditorJS', {read: NgxEditorJSComponent})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in libs/ngx-editorjs-demo/src/lib/containers/page-container/page-container.component.ts:38\n                            \n                        \n\n\n            \n        \n\n\n    \n    \n        Accessors\n    \n        \n            \n                \n                    \n                        \n                        blocks\n                    \n                \n\n                \n                    \n                        getblocks()\n                    \n                \n                            \n                                \n                                    Defined in libs/ngx-editorjs-demo/src/lib/containers/page-container/page-container.component.ts:57\n                                \n                            \n                    \n                        \n                                Get the blocks from the last change\n\n\n                        \n                    \n\n            \n        \n        \n            \n                \n                    \n                        \n                        menu\n                    \n                \n\n                \n                    \n                        getmenu()\n                    \n                \n                            \n                                \n                                    Defined in libs/ngx-editorjs-demo/src/lib/containers/page-container/page-container.component.ts:67\n                                \n                            \n                    \n                        \n                                Get the page links\n\n\n                        \n                    \n\n            \n        \n        \n            \n                \n                    \n                        \n                        pages\n                    \n                \n\n                \n                    \n                        getpages()\n                    \n                \n                            \n                                \n                                    Defined in libs/ngx-editorjs-demo/src/lib/containers/page-container/page-container.component.ts:74\n                                \n                            \n                    \n                        \n                                Get a list of pages\n\n\n                                \n                                    Returns :         Observable\n\n                                \n                        \n                    \n\n            \n        \n        \n            \n                \n                    \n                        \n                        asJSON\n                    \n                \n\n                \n                    \n                        getasJSON()\n                    \n                \n                            \n                                \n                                    Defined in libs/ngx-editorjs-demo/src/lib/containers/page-container/page-container.component.ts:108\n                                \n                            \n                    \n                        \n                                Get the blocks data as formatted JSON\n\n\n                        \n                    \n\n            \n        \n\n\n\n\n    \n        import { AfterContentInit, ChangeDetectionStrategy, ChangeDetectorRef, Component, ViewChild } from '@angular/core';\nimport { Block, NgxEditorJSService, NgxEditorJSComponent } from '@tinynodes/ngx-editorjs/src';\nimport { AppService } from '@tinynodes/ngx-tinynodes-core/src';\nimport { BehaviorSubject, Observable, Subject } from 'rxjs';\nimport { distinctUntilChanged, map, takeUntil, tap, pluck, filter, take } from 'rxjs/operators';\nimport { Page } from '../../store/pages/pages.models';\nimport { PagesService } from '../../store/pages/pages.service';\nimport { MenuGroup } from 'apps/ngx-tinynodes/src/app/core/types/app';\nimport { NgxEditorJSDemo } from '@tinynodes/ngx-tinynodes-core/src/lib/stores/app/application.model';\nimport { OutputData } from '@editorjs/editorjs';\n\n/**\n * The Page Container component provides the main routable page for loading\n * the `ngx-editorjs-demo`\n */\n@Component({\n  selector: 'ngx-page-container',\n  templateUrl: 'page-container.component.html',\n  styleUrls: ['page-container.component.scss'],\n  changeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class PageContainerComponent implements AfterContentInit {\n  /**\n   * Internal onDestroy$ subject\n   */\n  private onDestroy$ = new Subject();\n\n  /**\n   * The holder ID for this demo\n   */\n  public holder = 'ngx-editorjs-demo';\n\n  /**\n   * Links for the page\n   */\n  private menu$ = new BehaviorSubject(undefined);\n\n  @ViewChild('ngxEditorJS', { read: NgxEditorJSComponent }) ngxEditorJS: NgxEditorJSComponent;\n\n  /**\n   * The constructor sets up the blocks to the initial demo data\n   * @param pagesService The pages service\n   * @param app The application service\n   * @param editorService The Editor service\n   * @param cd The change detection ref\n   */\n  constructor(\n    private readonly pagesService: PagesService,\n    private app: AppService,\n    private readonly editorService: NgxEditorJSService,\n    private readonly cd: ChangeDetectorRef\n  ) {}\n\n  /**\n   * Get the blocks from the last change\n   */\n  public get blocks() {\n    return this.editorService.hasChanged({ holder: this.holder }).pipe(\n      pluck('blocks'),\n      takeUntil(this.onDestroy$)\n    );\n  }\n\n  /**\n   * Get the page links\n   */\n  public get menu() {\n    return this.menu$;\n  }\n\n  /**\n   * Get a list of pages\n   */\n  get pages(): Observable {\n    return this.pagesService.pages;\n  }\n\n  /**\n   * Call the editor save method\n   */\n  public save() {\n    this.editorService.save({ holder: this.holder });\n  }\n\n  /**\n   * Clear the editor\n   */\n  public clear() {\n    this.editorService.clear({ holder: this.holder });\n  }\n\n  /**\n   * Reset the editor with demo data\n   */\n  public reset() {\n    this.app\n      .getDemoData('ngx-editorjs-demo')\n      .pipe(take(1))\n      .subscribe((data: NgxEditorJSDemo) => {\n        this.menu$.next(data.links);\n        this.editorService.update({ holder: this.holder, blocks: data.blocks });\n      });\n  }\n\n  /**\n   * Get the blocks data as formatted JSON\n   */\n  public get asJSON() {\n    return this.blocks.pipe(\n      take(1),\n      map(blocks => {\n        return JSON.stringify(blocks, null, 4);\n      }),\n      tap(() => this.cd.markForCheck())\n    );\n  }\n\n  /**\n   * After the content has init override the blocks with blocks from the service\n   */\n  ngAfterContentInit() {\n    this.reset();\n  }\n}\n\n    \n\n    \n        \n  \n    \n      @tinynodes/ngx-editor Demo\n      A single page demo of the EditorJS component\n    \n    \n      \n    \n\n    \n      \n        Demo\n        Save\n        Clear\n        Reset\n      \n      \n        \n          Ready: {{ ngxEditorJS.isReady | async }}\n          Has Changed:\n            {{ change.time }}\n            0\n          \n          Touched: {{ ngxEditorJS.isTouched | async }}\n          Focused: {{ ngxEditorJS.isFocused | async }}\n          Saved: {{ ngxEditorJS.hasSaved | async }}\n        \n      \n      \n    \n    \n      \n        \n          Output\n          Data from the EditorJS instance\n        \n        \n          {{ asJSON | async }}\n        \n      \n    \n     \n  \n\n\n\n  \n    Below is an instance of an EditorJS block editor. Click on the area and the block tool will appear, or you can just start\n    typing.\n  \n  \n    The default block is a &lt;p> paragraph, you can also add header &lt;h1> - &lt;h6> blocks, list with\n    &lt;ol> / &lt;li> and &lt;code> blocks.\n  \n\n  \n    You can also paste in an &lt;img> url into the editor and it will start the SimpleImage plugin which provides\n    an &lt;img> tag pointing to the image, and with some additional controls.\n  \n  \n    When saving check the output panel below to see the data results.\n  \n\n\n    \n\n    \n                \n                    page-container.component.scss\n                \n                :host {\n  width: 100%;\n  height: 100vh;\n}\n\n.output-card {\n  height: 100vh;\n  flex: 1;\n  width: 100%;\n  overflow: scroll;\n}\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '            @tinynodes/ngx-editor Demo      A single page demo of the EditorJS component                                    Demo        Save        Clear        Reset                              Ready: {{ ngxEditorJS.isReady | async }}          Has Changed:            {{ change.time }}            0                    Touched: {{ ngxEditorJS.isTouched | async }}          Focused: {{ ngxEditorJS.isFocused | async }}          Saved: {{ ngxEditorJS.hasSaved | async }}                                                    Output          Data from the EditorJS instance                          {{ asJSON | async }}                               Below is an instance of an EditorJS block editor. Click on the area and the block tool will appear, or you can just start    typing.        The default block is a  paragraph, you can also add header  -  blocks, list with     /  and  blocks.        You can also paste in an  url into the editor and it will start the SimpleImage plugin which provides    an  tag pointing to the image, and with some additional controls.        When saving check the output panel below to see the data results.  '\n    var COMPONENTS = [{'name': 'AppContainerComponent', 'selector': 'tinynodes-root'},{'name': 'FormContainerComponent', 'selector': 'ngx-form-container'},{'name': 'HomePageComponent', 'selector': 'tinynodes-home-page'},{'name': 'NavBarComponent', 'selector': 'tinynodes-nav-bar'},{'name': 'NgxEditorJSBaseComponent', 'selector': ''},{'name': 'NgxEditorJSComponent', 'selector': 'ngx-editorjs'},{'name': 'NgxEditorJSDemoHomeComponent', 'selector': 'ngx-editorjs-demo-home'},{'name': 'NgxEditorJSDemoInfoComponent', 'selector': 'ngx-editorjs-demo-info'},{'name': 'NgxEditorJSDemoTagComponent', 'selector': 'ngx-editorjs-tag-component'},{'name': 'NgxEditorJSMatFieldComponent', 'selector': 'ngx-editorjs-mat-field'},{'name': 'PageContainerComponent', 'selector': 'ngx-page-container'},{'name': 'SidebarComponent', 'selector': 'tinynodes-sidebar'}];\n    var DIRECTIVES = [{'name': 'NgxEditorJSDirective', 'selector': '[ngxEditorJS]'}];\n    var ACTUAL_COMPONENT = {'name': 'PageContainerComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/PageStoreModule.html":{"url":"modules/PageStoreModule.html","title":"module - PageStoreModule","body":"\n                   \n\n\n\n\n    Modules\n    PageStoreModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_PageStoreModule\n\n\n\ncluster_PageStoreModule_providers\n\n\n\n\nPagesQuery\n\nPagesQuery\n\n\n\nPageStoreModule\n\nPageStoreModule\n\nPageStoreModule -->\n\nPagesQuery->PageStoreModule\n\n\n\n\n\nPagesService\n\nPagesService\n\nPageStoreModule -->\n\nPagesService->PageStoreModule\n\n\n\n\n\nPagesStore\n\nPagesStore\n\nPageStoreModule -->\n\nPagesStore->PageStoreModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            libs/ngx-editorjs-demo/src/lib/store/pages/pages.module.ts\n        \n\n\n        \n            Description\n        \n        \n            WARNING: This module is currently in development\nInternal page store module, this will allow the ngx-editorjs-demo to support the creation of multiple pages\n\n        \n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            PagesQuery\n                        \n                        \n                            PagesService\n                        \n                        \n                            PagesStore\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { NgModule } from '@angular/core';\nimport { PagesQuery } from './pages.query';\nimport { PagesService } from './pages.service';\nimport { PagesStore } from './pages.store';\n\n/**\n *\n * **WARNING**: This module is currently in development\n *\n * Internal page store module, this will allow the `ngx-editorjs-demo` to support the creation of multiple pages\n */\n@NgModule({\n  providers: [PagesStore, PagesQuery, PagesService]\n})\nexport class PageStoreModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/PagesQuery.html":{"url":"injectables/PagesQuery.html","title":"injectable - PagesQuery","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  PagesQuery\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            libs/ngx-editorjs-demo/src/lib/store/pages/pages.query.ts\n        \n\n\n            \n                Extends\n            \n            \n                    QueryEntity\n            \n\n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(store: PagesStore)\n                    \n                \n                        \n                            \n                                Defined in libs/ngx-editorjs-demo/src/lib/store/pages/pages.query.ts:7\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        store\n                                                  \n                                                        \n                                                                        PagesStore\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { QueryEntity } from '@datorama/akita';\nimport { Page } from './pages.models';\nimport { PagesState, PagesStore } from './pages.store';\n\n@Injectable()\nexport class PagesQuery extends QueryEntity {\n  constructor(protected store: PagesStore) {\n    super(store);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/PagesService.html":{"url":"injectables/PagesService.html","title":"injectable - PagesService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  PagesService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            libs/ngx-editorjs-demo/src/lib/store/pages/pages.service.ts\n        \n\n            \n                Description\n            \n            \n                This page service provides a way to save and render pages\nvia the store\n\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                    Readonly\n                                query\n                            \n                            \n                                    Public\n                                    Readonly\n                                store\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                add\n                            \n                            \n                                addBlock\n                            \n                            \n                                delete\n                            \n                            \n                                removeBlock\n                            \n                            \n                                setBlocks\n                            \n                            \n                                upsert\n                            \n                        \n                    \n                \n\n\n\n\n\n                    \n                        \n                            Accessors\n                        \n                    \n                    \n                        \n                            \n                                \n                                    pages\n                                \n                            \n                        \n                    \n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(query: PagesQuery, store: PagesStore)\n                    \n                \n                        \n                            \n                                Defined in libs/ngx-editorjs-demo/src/lib/store/pages/pages.service.ts:15\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        query\n                                                  \n                                                        \n                                                                        PagesQuery\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        store\n                                                  \n                                                        \n                                                                        PagesStore\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            add\n                        \n                        \n                    \n                \n            \n            \n                \nadd(page?: Page)\n                \n            \n\n\n            \n                \n                    Defined in libs/ngx-editorjs-demo/src/lib/store/pages/pages.service.ts:32\n                \n            \n\n\n            \n                \n                    Add a page to the store\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    page\n                                    \n                                                Page\n                                    \n\n                                    \n                                        Yes\n                                    \n\n\n                                    \n                                        An optional page to be added\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            addBlock\n                        \n                        \n                    \n                \n            \n            \n                \naddBlock(pageId: ID, block: Block)\n                \n            \n\n\n            \n                \n                    Defined in libs/ngx-editorjs-demo/src/lib/store/pages/pages.service.ts:64\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    pageId\n                                    \n                                            ID\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    block\n                                    \n                                                Block\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            delete\n                        \n                        \n                    \n                \n            \n            \n                \ndelete(pageId: ID)\n                \n            \n\n\n            \n                \n                    Defined in libs/ngx-editorjs-demo/src/lib/store/pages/pages.service.ts:56\n                \n            \n\n\n            \n                \n                    Removes a page\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    pageId\n                                    \n                                            ID\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        The ID of the page to be removed\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            removeBlock\n                        \n                        \n                    \n                \n            \n            \n                \nremoveBlock(pageId: ID, block: PageBlock)\n                \n            \n\n\n            \n                \n                    Defined in libs/ngx-editorjs-demo/src/lib/store/pages/pages.service.ts:70\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    pageId\n                                    \n                                            ID\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    block\n                                    \n                                                PageBlock\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            setBlocks\n                        \n                        \n                    \n                \n            \n            \n                \nsetBlocks(pageId: ID | any, blocks: PageBlock[])\n                \n            \n\n\n            \n                \n                    Defined in libs/ngx-editorjs-demo/src/lib/store/pages/pages.service.ts:60\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    pageId\n                                    \n                                            ID | any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    blocks\n                                    \n                                            PageBlock[]\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            upsert\n                        \n                        \n                    \n                \n            \n            \n                \nupsert(page: Page)\n                \n            \n\n\n            \n                \n                    Defined in libs/ngx-editorjs-demo/src/lib/store/pages/pages.service.ts:47\n                \n            \n\n\n            \n                \n                    Updates or creates a page\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    page\n                                    \n                                                Page\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        The page to be updated, if not available it will be created\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                                Readonly\n                            query\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         PagesQuery\n\n                        \n                    \n                        \n                            \n                                    Defined in libs/ngx-editorjs-demo/src/lib/store/pages/pages.service.ts:17\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                                Readonly\n                            store\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         PagesStore\n\n                        \n                    \n                        \n                            \n                                    Defined in libs/ngx-editorjs-demo/src/lib/store/pages/pages.service.ts:17\n                            \n                        \n\n\n            \n        \n\n\n            \n    \n        Accessors\n    \n        \n            \n                \n                    \n                        \n                        pages\n                    \n                \n\n                \n                    \n                        getpages()\n                    \n                \n                            \n                                \n                                    Defined in libs/ngx-editorjs-demo/src/lib/store/pages/pages.service.ts:24\n                                \n                            \n                    \n                        \n                                Get an observable of all the pages in the store\n\n\n                                \n                                    Returns :         Observable\n\n                                \n                        \n                    \n\n            \n        \n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { arrayAdd, arrayRemove, guid, ID } from '@datorama/akita';\nimport { Block } from '@tinynodes/ngx-editorjs';\nimport { Observable } from 'rxjs';\nimport { Page, PageBlock } from './pages.models';\nimport { PagesQuery } from './pages.query';\nimport { PagesStore } from './pages.store';\n\n/**\n * This page service provides a way to save and render pages\n * via the store\n */\n@Injectable()\nexport class PagesService {\n  private pages$: Observable;\n\n  constructor(public readonly query: PagesQuery, public readonly store: PagesStore) {\n    this.pages$ = this.query.selectAll();\n  }\n\n  /**\n   * Get an observable of all the pages in the store\n   */\n  get pages(): Observable {\n    return this.pages$;\n  }\n\n  /**\n   * Add a page to the store\n   * @param page An optional page to be added\n   */\n  add(page?: Page) {\n    const newPage: Page = {\n      id: guid(),\n      pageTitle: 'New Page',\n      pageTags: [],\n      blocks: [],\n      ...page\n    };\n    this.store.add(newPage);\n  }\n\n  /**\n   * Updates or creates a page\n   * @param page The page to be updated, if not available it will be created\n   */\n  upsert(page: Page) {\n    if (!page.id) page.id = guid();\n    this.store.upsert(page.id, page);\n  }\n\n  /**\n   * Removes a page\n   * @param pageId The ID of the page to be removed\n   */\n  delete(pageId: ID) {\n    this.store.remove(pageId);\n  }\n\n  setBlocks(pageId: ID | any, blocks: PageBlock[]) {\n    this.store.update(pageId, { blocks });\n  }\n\n  addBlock(pageId: ID, block: Block) {\n    this.store.update(pageId, (entity: Page) => ({\n      blocks: arrayAdd(entity.blocks, { id: guid(), ...block })\n    }));\n  }\n\n  removeBlock(pageId: ID, block: PageBlock) {\n    this.store.update(pageId, (entity: Page) => ({\n      blocks: arrayRemove(entity.blocks, block.id)\n    }));\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/PagesState.html":{"url":"interfaces/PagesState.html","title":"interface - PagesState","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  PagesState\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            libs/ngx-editorjs-demo/src/lib/store/pages/pages.store.ts\n        \n\n\n            \n                Extends\n            \n            \n                    EntityState\n            \n\n\n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { EntityState, EntityStore, StoreConfig } from '@datorama/akita';\nimport { Page } from './pages.models';\n\nexport interface PagesState extends EntityState {}\n\n@Injectable()\n@StoreConfig({ name: 'pages' })\nexport class PagesStore extends EntityStore {\n  constructor() {\n    super();\n  }\n}\n\n    \n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/PagesStore.html":{"url":"injectables/PagesStore.html","title":"injectable - PagesStore","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  PagesStore\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            libs/ngx-editorjs-demo/src/lib/store/pages/pages.store.ts\n        \n\n\n            \n                Extends\n            \n            \n                    EntityStore\n            \n\n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in libs/ngx-editorjs-demo/src/lib/store/pages/pages.store.ts:9\n                            \n                        \n\n            \n        \n\n\n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { EntityState, EntityStore, StoreConfig } from '@datorama/akita';\nimport { Page } from './pages.models';\n\nexport interface PagesState extends EntityState {}\n\n@Injectable()\n@StoreConfig({ name: 'pages' })\nexport class PagesStore extends EntityStore {\n  constructor() {\n    super();\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/Paragraph.html":{"url":"interfaces/Paragraph.html","title":"interface - Paragraph","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  Paragraph\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            libs/ngx-editorjs/src/lib/types/blocks.ts\n        \n\n            \n                Description\n            \n            \n                Default data type for a paragraph block\n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        text\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        text\n                                    \n                                \n                                \n                                    \n                                        text:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    The paragraph text\n\n                                \n                            \n                        \n                    \n            \n    \n\n\n    \n        export interface Block {\n  /**\n   * The EditorJS block type\n   */\n  type: string;\n\n  /**\n   * The data interface for the block type\n   */\n  data: T;\n\n  /**\n   * Additional properties on the type\n   */\n  [key: string]: any;\n}\n\n/**\n * Available list styles, supports `ordered` and `unordered`.\n * A custom string can also be added\n */\nexport type ListStyle = 'ordered' | 'unordered' | string;\n\n/**\n * Default data type for a list block\n */\nexport interface List {\n  /**\n   * The list style\n   */\n  style: ListStyle;\n  /**\n   * List items of type T\n   */\n  items: T[];\n}\n\n/**\n * The default list block is provided by the EditorJS list plugin\n */\nexport interface ListBlock extends Block> {\n  /**\n   * The EditorJS block type\n   */\n  type: 'list';\n}\n\n/**\n * Default data type for a paragraph block\n */\ninterface Paragraph {\n  /**\n   * The paragraph text\n   */\n  text: string;\n}\n\n/**\n * Interface for a paragraph block\n */\nexport interface ParagraphBlock extends Block {\n  /**\n   * The EditorJS block type\n   */\n  type: 'paragraph';\n}\n\n/**\n * Default data type for a header block\n */\ninterface Header {\n  /**\n   * The header text\n   */\n  text: string;\n  /**\n   * The header level from 1-6\n   */\n  level: number;\n}\n\n/**\n * Interface for a header block\n */\nexport interface HeaderBlock extends Block {\n  /**\n   * The EditorJS block type\n   */\n  type: 'header';\n}\n\n/**\n * Default data type for a header block\n */\nexport interface Image {\n  /**\n   * The image URL\n   */\n  url: string;\n  /**\n   * Optional image caption\n   */\n  caption?: string;\n  /**\n   * Optional border property\n   */\n  withBorder?: boolean;\n\n  /**\n   * Optional background property\n   */\n  withBackground?: boolean;\n\n  /**\n   * Optional stretch property\n   */\n  stretched?: boolean;\n}\n\n/**\n * Interface for a image block\n */\nexport interface ImageBlock extends Block {\n  /**\n   * The EditorJS block type\n   */\n  type: 'image';\n}\n\n/**\n * Type of all the basic block type\n */\nexport type BlockTypes = ParagraphBlock | HeaderBlock | ImageBlock | ListBlock | Block;\n\n    \n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/ParagraphBlock.html":{"url":"interfaces/ParagraphBlock.html","title":"interface - ParagraphBlock","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  ParagraphBlock\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            libs/ngx-editorjs/src/lib/types/blocks.ts\n        \n\n            \n                Description\n            \n            \n                Interface for a paragraph block\n\n            \n\n            \n                Extends\n            \n            \n                        Block\n            \n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        type\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        type\n                                    \n                                \n                                \n                                    \n                                        type:     \n\n                                    \n                                \n\n\n\n\n\n\n\n                            \n                                \n                                    The EditorJS block type\n\n                                \n                            \n                        \n                    \n            \n    \n\n\n    \n        export interface Block {\n  /**\n   * The EditorJS block type\n   */\n  type: string;\n\n  /**\n   * The data interface for the block type\n   */\n  data: T;\n\n  /**\n   * Additional properties on the type\n   */\n  [key: string]: any;\n}\n\n/**\n * Available list styles, supports `ordered` and `unordered`.\n * A custom string can also be added\n */\nexport type ListStyle = 'ordered' | 'unordered' | string;\n\n/**\n * Default data type for a list block\n */\nexport interface List {\n  /**\n   * The list style\n   */\n  style: ListStyle;\n  /**\n   * List items of type T\n   */\n  items: T[];\n}\n\n/**\n * The default list block is provided by the EditorJS list plugin\n */\nexport interface ListBlock extends Block> {\n  /**\n   * The EditorJS block type\n   */\n  type: 'list';\n}\n\n/**\n * Default data type for a paragraph block\n */\ninterface Paragraph {\n  /**\n   * The paragraph text\n   */\n  text: string;\n}\n\n/**\n * Interface for a paragraph block\n */\nexport interface ParagraphBlock extends Block {\n  /**\n   * The EditorJS block type\n   */\n  type: 'paragraph';\n}\n\n/**\n * Default data type for a header block\n */\ninterface Header {\n  /**\n   * The header text\n   */\n  text: string;\n  /**\n   * The header level from 1-6\n   */\n  level: number;\n}\n\n/**\n * Interface for a header block\n */\nexport interface HeaderBlock extends Block {\n  /**\n   * The EditorJS block type\n   */\n  type: 'header';\n}\n\n/**\n * Default data type for a header block\n */\nexport interface Image {\n  /**\n   * The image URL\n   */\n  url: string;\n  /**\n   * Optional image caption\n   */\n  caption?: string;\n  /**\n   * Optional border property\n   */\n  withBorder?: boolean;\n\n  /**\n   * Optional background property\n   */\n  withBackground?: boolean;\n\n  /**\n   * Optional stretch property\n   */\n  stretched?: boolean;\n}\n\n/**\n * Interface for a image block\n */\nexport interface ImageBlock extends Block {\n  /**\n   * The EditorJS block type\n   */\n  type: 'image';\n}\n\n/**\n * Type of all the basic block type\n */\nexport type BlockTypes = ParagraphBlock | HeaderBlock | ImageBlock | ListBlock | Block;\n\n    \n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/PluginCode.html":{"url":"injectables/PluginCode.html","title":"injectable - PluginCode","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  PluginCode\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            libs/ngx-editorjs-plugins/src/lib/plugins/code/code.plugin.ts\n        \n\n            \n                Description\n            \n            \n                This plugin returns the tool settings for a  block tool for EditorJS\n\n            \n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                plugin\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            plugin\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    plugin()\n                \n            \n\n\n            \n                \n                    Defined in libs/ngx-editorjs-plugins/src/lib/plugins/code/code.plugin.ts:14\n                \n            \n\n\n            \n                \n                    Returns the ToolSettings for this plugin\n\n\n                    \n                        Returns :     ToolSettings\n\n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport Code from '@editorjs/code';\nimport { ToolSettings } from '@editorjs/editorjs';\nimport { BasePlugin } from '../../types/plugins';\n\n/**\n * This plugin returns the tool settings for a `` block tool for `EditorJS`\n */\n@Injectable()\nexport class PluginCode implements BasePlugin {\n  /**\n   * Returns the `ToolSettings` for this plugin\n   */\n  public plugin(): ToolSettings {\n    return Code;\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/PluginCodeModule.html":{"url":"modules/PluginCodeModule.html","title":"module - PluginCodeModule","body":"\n                   \n\n\n\n\n    Modules\n    PluginCodeModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_PluginCodeModule\n\n\n\ncluster_PluginCodeModule_providers\n\n\n\n\nPluginCode\n\nPluginCode\n\n\n\nPluginCodeModule\n\nPluginCodeModule\n\nPluginCodeModule -->\n\nPluginCode->PluginCodeModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            libs/ngx-editorjs-plugins/src/lib/plugins/code/code.module.ts\n        \n\n\n        \n            Description\n        \n        \n            A module that provides the default EditorJS  block tool.\nSee the GitHub repo for API details\n\n        \n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            PluginCode\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { NgModule } from '@angular/core';\nimport { PluginCode } from './code.plugin';\n\n/**\n * A module that provides the default `EditorJS` `` block tool.\n * See [the GitHub repo](https://github.com/editor-js/code) for API details\n */\n@NgModule({\n  providers: [PluginCode]\n})\nexport class PluginCodeModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/PluginConfig.html":{"url":"interfaces/PluginConfig.html","title":"interface - PluginConfig","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  PluginConfig\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            libs/ngx-editorjs/src/lib/types/plugins.ts\n        \n\n            \n                Description\n            \n            \n                A Module plugin configuration\n\n            \n\n\n\n\n            \n    Indexable\n        \n            \n                \n                    \n                        [key: string]:        BasePlugin\n\n                    \n                \n                        \n                            \n                                Defined in libs/ngx-editorjs/src/lib/types/plugins.ts:7\n                            \n                        \n                \n                    \n                        The key of the plugin and the plugin class extending BasePlugin\n\n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { InjectionToken } from '@angular/core';\nimport { ToolConstructable, ToolSettings } from '@editorjs/editorjs';\n\n/**\n * A Module plugin configuration\n */\nexport interface PluginConfig {\n  /**\n   * The key of the plugin and the plugin class extending `BasePlugin`\n   */\n  [key: string]: BasePlugin;\n}\n\n/**\n * A map of all the tools settings\n */\nexport interface ToolSettingsMap {\n  /**\n   * The key of the plugin and the plugin exported tool settings\n   */\n  [key: string]: ToolConstructable | ToolSettings;\n}\n\n/**\n * Defines the interface for required and optional plugin methods.\n * These methods allow a plugin to return a EditorJS plugin and an optional shortcut\n */\nexport interface BasePlugin {\n  /**\n   * The plugin settings to be returned\n   */\n  plugin: () => ToolConstructable | ToolSettings;\n\n  /**\n   * Optional shortcut for the plugin\n   */\n  shortcut?: () => string;\n}\n\n/**\n * The injection token for adding plugins via your own application\n */\nexport const UserPlugins = new InjectionToken('UserPlugins');\n\n    \n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/PluginConfig-1.html":{"url":"interfaces/PluginConfig-1.html","title":"interface - PluginConfig-1","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  PluginConfig\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            libs/ngx-editorjs-plugins/src/lib/types/plugins.ts\n        \n\n            \n                Description\n            \n            \n                A Module plugin configuration\n\n            \n\n\n\n\n            \n    Indexable\n        \n            \n                \n                    \n                        [key: string]:        BasePlugin\n\n                    \n                \n                        \n                            \n                                Defined in libs/ngx-editorjs-plugins/src/lib/types/plugins.ts:7\n                            \n                        \n                \n                    \n                        The key of the plugin and the plugin class extending BasePlugin\n\n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { InjectionToken } from '@angular/core';\nimport { ToolSettings, ToolConstructable } from '@editorjs/editorjs';\n\n/**\n * A Module plugin configuration\n */\nexport interface PluginConfig {\n  /**\n   * The key of the plugin and the plugin class extending `BasePlugin`\n   */\n  [key: string]: BasePlugin;\n}\n\n/**\n * A map of all the tools settings\n */\nexport interface ToolSettingsMap {\n  /**\n   * The key of the plugin and the plugin exported tool settings\n   */\n  [key: string]: ToolConstructable | ToolSettings;\n}\n\n/**\n * Defines the interface for required and optional plugin methods.\n * These methods allow a plugin to return a EditorJS plugin and an optional shortcut\n */\nexport interface BasePlugin {\n  /**\n   * The plugin settings to be returned\n   */\n  plugin: () => ToolConstructable | ToolSettings;\n\n  /**\n   * Optional shortcut for the plugin\n   */\n  shortcut?: () => string;\n}\n\n/**\n * The Injection token for initial plugins as defined in the ngx-editorjs module\n */\nexport const InitialPlugins = new InjectionToken('InitialPlugins');\n\n/**\n * The injection token for adding plugins via your own application\n */\nexport const UserPlugins = new InjectionToken('UserPlugins');\n\n    \n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/PluginHeader.html":{"url":"injectables/PluginHeader.html","title":"injectable - PluginHeader","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  PluginHeader\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            libs/ngx-editorjs-plugins/src/lib/plugins/header/header.plugin.ts\n        \n\n            \n                Description\n            \n            \n                This plugin returns the tool settings for a  -  block tool for EditorJS\n\n            \n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                plugin\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            plugin\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    plugin()\n                \n            \n\n\n            \n                \n                    Defined in libs/ngx-editorjs-plugins/src/lib/plugins/header/header.plugin.ts:14\n                \n            \n\n\n            \n                \n                    Returns the plugin settings\n\n\n                    \n                        Returns :     ToolSettings\n\n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { ToolSettings } from '@editorjs/editorjs';\nimport Header from '@editorjs/header';\nimport { BasePlugin } from '../../types/plugins';\n\n/**\n * This plugin returns the tool settings for a ` - ` block tool for `EditorJS`\n */\n@Injectable()\nexport class PluginHeader implements BasePlugin {\n  /**\n   * Returns the plugin settings\n   */\n  public plugin(): ToolSettings {\n    return Header;\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/PluginHeaderModule.html":{"url":"modules/PluginHeaderModule.html","title":"module - PluginHeaderModule","body":"\n                   \n\n\n\n\n    Modules\n    PluginHeaderModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_PluginHeaderModule\n\n\n\ncluster_PluginHeaderModule_providers\n\n\n\n\nPluginHeader\n\nPluginHeader\n\n\n\nPluginHeaderModule\n\nPluginHeaderModule\n\nPluginHeaderModule -->\n\nPluginHeader->PluginHeaderModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            libs/ngx-editorjs-plugins/src/lib/plugins/header/header.module.ts\n        \n\n\n        \n            Description\n        \n        \n            A module that provides the default EditorJS header block tool.\nSee the GitHub repo for API details\n\n        \n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            PluginHeader\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { NgModule } from '@angular/core';\nimport { PluginHeader } from './header.plugin';\n\n/**\n * A module that provides the default `EditorJS` header block tool.\n * See [the GitHub repo](https://github.com/editor-js/header) for API details\n */\n@NgModule({\n  providers: [PluginHeader]\n})\nexport class PluginHeaderModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/PluginImage.html":{"url":"injectables/PluginImage.html","title":"injectable - PluginImage","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  PluginImage\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            libs/ngx-editorjs-plugins/src/lib/plugins/image/image.plugin.ts\n        \n\n            \n                Description\n            \n            \n                This plugin returns the tool settings for a  -  block tool for EditorJS\n\n            \n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                plugin\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            plugin\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    plugin()\n                \n            \n\n\n            \n                \n                    Defined in libs/ngx-editorjs-plugins/src/lib/plugins/image/image.plugin.ts:14\n                \n            \n\n\n            \n                \n                    Returns the plugin settings\n\n\n                    \n                        Returns :     ToolSettings\n\n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { ToolSettings } from '@editorjs/editorjs';\nimport Image from '@editorjs/image';\nimport { BasePlugin } from '../../types/plugins';\n\n/**\n * This plugin returns the tool settings for a ` - ` block tool for `EditorJS`\n */\n@Injectable()\nexport class PluginImage implements BasePlugin {\n  /**\n   * Returns the plugin settings\n   */\n  public plugin(): ToolSettings {\n    return Image;\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/PluginImageModule.html":{"url":"modules/PluginImageModule.html","title":"module - PluginImageModule","body":"\n                   \n\n\n\n\n    Modules\n    PluginImageModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_PluginImageModule\n\n\n\ncluster_PluginImageModule_providers\n\n\n\n\nPluginImage\n\nPluginImage\n\n\n\nPluginImageModule\n\nPluginImageModule\n\nPluginImageModule -->\n\nPluginImage->PluginImageModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            libs/ngx-editorjs-plugins/src/lib/plugins/image/image.module.ts\n        \n\n\n        \n            Description\n        \n        \n            A module that provides the default EditorJS  block tool.\nSee the GitHub repo for API details\n\n        \n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            PluginImage\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { NgModule } from '@angular/core';\nimport { PluginImage } from './image.plugin';\n\n/**\n * A module that provides the default `EditorJS` `` block tool.\n * See [the GitHub repo](https://github.com/editor-js/image) for API details\n */\n@NgModule({\n  providers: [PluginImage]\n})\nexport class PluginImageModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/PluginLink.html":{"url":"injectables/PluginLink.html","title":"injectable - PluginLink","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  PluginLink\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            libs/ngx-editorjs-plugins/src/lib/plugins/link/link.plugin.ts\n        \n\n            \n                Description\n            \n            \n                This plugin returns the tool settings for a  block tool for EditorJS\n\n            \n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                plugin\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            plugin\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    plugin()\n                \n            \n\n\n            \n                \n                    Defined in libs/ngx-editorjs-plugins/src/lib/plugins/link/link.plugin.ts:14\n                \n            \n\n\n            \n                \n                    Returns the plugin settings\n\n\n                    \n                        Returns :     ToolSettings\n\n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { ToolSettings } from '@editorjs/editorjs';\nimport Link from '@editorjs/link';\nimport { BasePlugin } from '../../types/plugins';\n\n/**\n * This plugin returns the tool settings for a `` block tool for `EditorJS`\n */\n@Injectable()\nexport class PluginLink implements BasePlugin {\n  /**\n   * Returns the plugin settings\n   */\n  public plugin(): ToolSettings {\n    return Link;\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/PluginLinkModule.html":{"url":"modules/PluginLinkModule.html","title":"module - PluginLinkModule","body":"\n                   \n\n\n\n\n    Modules\n    PluginLinkModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_PluginLinkModule\n\n\n\ncluster_PluginLinkModule_providers\n\n\n\n\nPluginLink\n\nPluginLink\n\n\n\nPluginLinkModule\n\nPluginLinkModule\n\nPluginLinkModule -->\n\nPluginLink->PluginLinkModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            libs/ngx-editorjs-plugins/src/lib/plugins/link/link.module.ts\n        \n\n\n        \n            Description\n        \n        \n            A module that provides the default EditorJS  block tool.\nSee the GitHub repo for API details\n\n        \n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            PluginLink\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { NgModule } from '@angular/core';\nimport { PluginLink } from './link.plugin';\n\n/**\n * A module that provides the default `EditorJS` `` block tool.\n * See [the GitHub repo](https://github.com/editor-js/link) for API details\n */\n@NgModule({\n  providers: [PluginLink]\n})\nexport class PluginLinkModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/PluginList.html":{"url":"injectables/PluginList.html","title":"injectable - PluginList","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  PluginList\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            libs/ngx-editorjs-plugins/src/lib/plugins/list/list.plugin.ts\n        \n\n            \n                Description\n            \n            \n                This plugin returns the tool settings for a  and  block tool for EditorJS\n\n            \n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                plugin\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            plugin\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    plugin()\n                \n            \n\n\n            \n                \n                    Defined in libs/ngx-editorjs-plugins/src/lib/plugins/list/list.plugin.ts:14\n                \n            \n\n\n            \n                \n                    Returns the plugin settings\n\n\n                    \n                        Returns :     ToolSettings\n\n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { ToolSettings } from '@editorjs/editorjs';\nimport List from '@editorjs/list';\nimport { BasePlugin } from '../../types/plugins';\n\n/**\n * This plugin returns the tool settings for a `` and `` block tool for `EditorJS`\n */\n@Injectable()\nexport class PluginList implements BasePlugin {\n  /**\n   * Returns the plugin settings\n   */\n  public plugin(): ToolSettings {\n    return List;\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/PluginListModule.html":{"url":"modules/PluginListModule.html","title":"module - PluginListModule","body":"\n                   \n\n\n\n\n    Modules\n    PluginListModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_PluginListModule\n\n\n\ncluster_PluginListModule_providers\n\n\n\n\nPluginList\n\nPluginList\n\n\n\nPluginListModule\n\nPluginListModule\n\nPluginListModule -->\n\nPluginList->PluginListModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            libs/ngx-editorjs-plugins/src/lib/plugins/list/list.module.ts\n        \n\n\n        \n            Description\n        \n        \n            A module that provides the default EditorJS  and  block tool.\nSee the GitHub repo for API details\n\n        \n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            PluginList\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { NgModule } from '@angular/core';\nimport { PluginList } from './list.plugin';\n\n/**\n * A module that provides the default `EditorJS` `` and `` block tool.\n * See [the GitHub repo](https://github.com/editor-js/list) for API details\n */\n@NgModule({\n  providers: [PluginList]\n})\nexport class PluginListModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/PluginMarker.html":{"url":"injectables/PluginMarker.html","title":"injectable - PluginMarker","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  PluginMarker\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            libs/ngx-editorjs-plugins/src/lib/plugins/marker/marker.plugin.ts\n        \n\n            \n                Description\n            \n            \n                This plugin returns the tool settings for a inline marker tool for EditorJS\n\n            \n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                plugin\n                            \n                            \n                                    Public\n                                shortcut\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            plugin\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    plugin()\n                \n            \n\n\n            \n                \n                    Defined in libs/ngx-editorjs-plugins/src/lib/plugins/marker/marker.plugin.ts:14\n                \n            \n\n\n            \n                \n                    Returns the plugin settings\n\n\n                    \n                        Returns :     ToolSettings\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            shortcut\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    shortcut()\n                \n            \n\n\n            \n                \n                    Defined in libs/ngx-editorjs-plugins/src/lib/plugins/marker/marker.plugin.ts:20\n                \n            \n\n\n            \n                \n                    Returns the plugin shortcut\n\n\n                    \n                        Returns :         string\n\n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { ToolSettings } from '@editorjs/editorjs';\nimport Marker from '@editorjs/marker';\nimport { BasePlugin } from '../../types/plugins';\n\n/**\n * This plugin returns the tool settings for a inline marker tool for `EditorJS`\n */\n@Injectable()\nexport class PluginMarker implements BasePlugin {\n  /**\n   * Returns the plugin settings\n   */\n  public plugin(): ToolSettings {\n    return Marker;\n  }\n  /**\n   * Returns the plugin shortcut\n   */\n  public shortcut() {\n    return 'CMD+SHIFT+M';\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/PluginMarkerModule.html":{"url":"modules/PluginMarkerModule.html","title":"module - PluginMarkerModule","body":"\n                   \n\n\n\n\n    Modules\n    PluginMarkerModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_PluginMarkerModule\n\n\n\ncluster_PluginMarkerModule_providers\n\n\n\n\nPluginMarker\n\nPluginMarker\n\n\n\nPluginMarkerModule\n\nPluginMarkerModule\n\nPluginMarkerModule -->\n\nPluginMarker->PluginMarkerModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            libs/ngx-editorjs-plugins/src/lib/plugins/marker/marker.module.ts\n        \n\n\n        \n            Description\n        \n        \n            A module that provides the default EditorJS inline marker tool.\nSee the GitHub repo for API details\n\n        \n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            PluginMarker\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { NgModule } from '@angular/core';\nimport { PluginMarker } from './marker.plugin';\n\n/**\n * A module that provides the default `EditorJS` inline marker tool.\n * See [the GitHub repo](https://github.com/editor-js/marker) for API details\n */\n@NgModule({\n  providers: [PluginMarker]\n})\nexport class PluginMarkerModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/PluginParagraph.html":{"url":"injectables/PluginParagraph.html","title":"injectable - PluginParagraph","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  PluginParagraph\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            libs/ngx-editorjs-plugins/src/lib/plugins/paragraph/paragraph.plugin.ts\n        \n\n            \n                Description\n            \n            \n                This plugin returns the tool settings for a  block tool for EditorJS\n\n            \n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                plugin\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            plugin\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    plugin()\n                \n            \n\n\n            \n                \n                    Defined in libs/ngx-editorjs-plugins/src/lib/plugins/paragraph/paragraph.plugin.ts:14\n                \n            \n\n\n            \n                \n                    Returns the plugin settings\n\n\n                    \n                        Returns :     ToolSettings\n\n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport Paragraph from '@editorjs/paragraph';\nimport { ToolSettings } from '@editorjs/editorjs';\nimport { BasePlugin } from '../../types/plugins';\n\n/**\n * This plugin returns the tool settings for a `` block tool for `EditorJS`\n */\n@Injectable()\nexport class PluginParagraph implements BasePlugin {\n  /**\n   * Returns the plugin settings\n   */\n  public plugin(): ToolSettings {\n    return Paragraph;\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/PluginParagraphModule.html":{"url":"modules/PluginParagraphModule.html","title":"module - PluginParagraphModule","body":"\n                   \n\n\n\n\n    Modules\n    PluginParagraphModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_PluginParagraphModule\n\n\n\ncluster_PluginParagraphModule_providers\n\n\n\n\nPluginParagraph\n\nPluginParagraph\n\n\n\nPluginParagraphModule\n\nPluginParagraphModule\n\nPluginParagraphModule -->\n\nPluginParagraph->PluginParagraphModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            libs/ngx-editorjs-plugins/src/lib/plugins/paragraph/paragraph.module.ts\n        \n\n\n        \n            Description\n        \n        \n            A module that provides the default EditorJS  block tool.\nSee the GitHub repo for API details\n\n        \n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            PluginParagraph\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { NgModule } from '@angular/core';\nimport { PluginParagraph } from './paragraph.plugin';\n\n/**\n * A module that provides the default `EditorJS` `` block tool.\n * See [the GitHub repo](https://github.com/editor-js/paragraph) for API details\n */\n@NgModule({\n  providers: [PluginParagraph]\n})\nexport class PluginParagraphModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/PluginSimpleImage.html":{"url":"injectables/PluginSimpleImage.html","title":"injectable - PluginSimpleImage","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  PluginSimpleImage\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            libs/ngx-editorjs-plugins/src/lib/plugins/simple-image/simple-image.plugin.ts\n        \n\n            \n                Description\n            \n            \n                This plugin returns the simple image tool for  block editor EditorJS\n\n            \n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                plugin\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            plugin\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    plugin()\n                \n            \n\n\n            \n                \n                    Defined in libs/ngx-editorjs-plugins/src/lib/plugins/simple-image/simple-image.plugin.ts:14\n                \n            \n\n\n            \n                \n                    Returns the plugin settings\n\n\n                    \n                        Returns :     ToolSettings\n\n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { ToolSettings } from '@editorjs/editorjs';\nimport SimpleImage from '@editorjs/simple-image';\nimport { BasePlugin } from '../../types/plugins';\n\n/**\n * This plugin returns the simple image tool for `` block editor `EditorJS`\n */\n@Injectable()\nexport class PluginSimpleImage implements BasePlugin {\n  /**\n   * Returns the plugin settings\n   */\n  public plugin(): ToolSettings {\n    return SimpleImage;\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/PluginSimpleImageModule.html":{"url":"modules/PluginSimpleImageModule.html","title":"module - PluginSimpleImageModule","body":"\n                   \n\n\n\n\n    Modules\n    PluginSimpleImageModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_PluginSimpleImageModule\n\n\n\ncluster_PluginSimpleImageModule_providers\n\n\n\n\nPluginSimpleImage\n\nPluginSimpleImage\n\n\n\nPluginSimpleImageModule\n\nPluginSimpleImageModule\n\nPluginSimpleImageModule -->\n\nPluginSimpleImage->PluginSimpleImageModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            libs/ngx-editorjs-plugins/src/lib/plugins/simple-image/simple-image.module.ts\n        \n\n\n        \n            Description\n        \n        \n            A module that provides the simple image tools for EditorJS  block tool.\nSee the GitHub repo for API details\n\n        \n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            PluginSimpleImage\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { NgModule } from '@angular/core';\nimport { PluginSimpleImage } from './simple-image.plugin';\n\n/**\n * A module that provides the simple image tools for `EditorJS` `` block tool.\n * See [the GitHub repo](https://github.com/editor-js/image) for API details\n */\n@NgModule({\n  providers: [PluginSimpleImage]\n})\nexport class PluginSimpleImageModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/Ready.html":{"url":"classes/Ready.html","title":"class - Ready","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  Ready\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            libs/ngx-editorjs-ngrx/src/lib/actions/ngx-editorjs.actions.ts\n        \n\n\n\n            \n                Implements\n            \n            \n                        Action\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                payload\n                            \n                            \n                                    Readonly\n                                type\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(payload: literal type)\n                    \n                \n                        \n                            \n                                Defined in libs/ngx-editorjs-ngrx/src/lib/actions/ngx-editorjs.actions.ts:28\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        payload\n                                                  \n                                                        \n                                                                    literal type\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            payload\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     literal type\n\n                        \n                    \n                        \n                            \n                                    Defined in libs/ngx-editorjs-ngrx/src/lib/actions/ngx-editorjs.actions.ts:29\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                            type\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : EditorJSActionTypes.Ready\n                        \n                    \n                        \n                            \n                                    Defined in libs/ngx-editorjs-ngrx/src/lib/actions/ngx-editorjs.actions.ts:28\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { Action } from '@ngrx/store';\nimport { OutputData } from '@editorjs/editorjs';\n\nexport enum EditorJSActionTypes {\n  SaveStart = '[ngx-editorjs] Start Save',\n  SaveEnd = '[ngx-editorjs] Start End',\n  NotReady = '[ngx-editorjs] Not Ready',\n  Ready = '[ngx-editorjs] Ready',\n  Changed = '[ngx-editorjs] Changed'\n}\n\nexport class SaveStart implements Action {\n  readonly type = EditorJSActionTypes.SaveStart;\n  constructor(public payload: { holder: string }) {}\n}\n\nexport class SaveEnd implements Action {\n  readonly type = EditorJSActionTypes.SaveEnd;\n  constructor(public payload: { holder: string; data: OutputData }) {}\n}\n\nexport class NotReady implements Action {\n  readonly type = EditorJSActionTypes.NotReady;\n  constructor(public payload: { holder: string }) {}\n}\n\nexport class Ready implements Action {\n  readonly type = EditorJSActionTypes.Ready;\n  constructor(public payload: { holder: string }) {}\n}\n\nexport class Changed implements Action {\n  readonly type = EditorJSActionTypes.Changed;\n  constructor(public payload: { holder: string; data: OutputData }) {}\n}\n\nexport type NgxEditorJSActions = SaveStart | SaveEnd | NotReady | Ready | Changed;\n\n    \n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/ReadyMap.html":{"url":"interfaces/ReadyMap.html","title":"interface - ReadyMap","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  ReadyMap\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            libs/ngx-editorjs/src/lib/types/maps.ts\n        \n\n            \n                Description\n            \n            \n                A map containing BehaviorSubject of boolean values of the ready state of EditorJS\n\n            \n\n\n\n\n            \n    Indexable\n        \n            \n                \n                    \n                        [key: string]:    BehaviorSubject\n\n                    \n                \n                        \n                            \n                                Defined in libs/ngx-editorjs/src/lib/types/maps.ts:28\n                            \n                        \n                \n                    \n                        A map key containing a {BehaviorSubject} of {boolean}\n\n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import EditorJS, { OutputData } from '@editorjs/editorjs';\nimport { BehaviorSubject } from 'rxjs';\nimport { Block } from './blocks';\n\n/**\n * A map containing instances of `EditorJS`\n */\nexport interface EditorMap {\n  /**\n   * A map key containing a {BehaviorSubject} of {EditorJS}\n   */\n  [key: string]: BehaviorSubject;\n}\n\n/**\n * A map containing `BehaviorSubject` of `Block` elements from `EditorJS`\n */\nexport interface BlocksMap {\n  /**\n   * A map key containing a {BehaviorSubject} of {Block[]}\n   */\n  [key: string]: BehaviorSubject;\n}\n\n/**\n * A map containing `BehaviorSubject` of `boolean` values of the ready state of `EditorJS`\n */\nexport interface ReadyMap {\n  /**\n   * A map key containing a {BehaviorSubject} of {boolean}\n   */\n  [key: string]: BehaviorSubject;\n}\n\n/**\n * A map containing `BehaviorSubject` of `boolean` values of the save state of `EditorJS`\n */\nexport interface SavedMap {\n  /**\n   * A map key containing a {BehaviorSubject} of {boolean}\n   */\n  [key: string]: BehaviorSubject;\n}\n\n/**\n * An EditorJS change event\n */\nexport interface EditorJSChange {\n  /**\n   * Time of the change\n   */\n  time: number;\n  /**\n   * Blocks in the change\n   */\n  blocks: Block[];\n}\n\n/**\n * A map containing `BehaviorSubject` of `number` which is the timestamp of the last `EditorJS` change\n */\nexport interface ChangeMap {\n  /**\n   * A map key containing a {BehaviorSubject} of {number}\n   */\n  [key: string]: BehaviorSubject;\n}\n\n    \n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/SaveEnd.html":{"url":"classes/SaveEnd.html","title":"class - SaveEnd","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  SaveEnd\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            libs/ngx-editorjs-ngrx/src/lib/actions/ngx-editorjs.actions.ts\n        \n\n\n\n            \n                Implements\n            \n            \n                        Action\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                payload\n                            \n                            \n                                    Readonly\n                                type\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(payload: literal type)\n                    \n                \n                        \n                            \n                                Defined in libs/ngx-editorjs-ngrx/src/lib/actions/ngx-editorjs.actions.ts:18\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        payload\n                                                  \n                                                        \n                                                                    literal type\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            payload\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     literal type\n\n                        \n                    \n                        \n                            \n                                    Defined in libs/ngx-editorjs-ngrx/src/lib/actions/ngx-editorjs.actions.ts:19\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                            type\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : EditorJSActionTypes.SaveEnd\n                        \n                    \n                        \n                            \n                                    Defined in libs/ngx-editorjs-ngrx/src/lib/actions/ngx-editorjs.actions.ts:18\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { Action } from '@ngrx/store';\nimport { OutputData } from '@editorjs/editorjs';\n\nexport enum EditorJSActionTypes {\n  SaveStart = '[ngx-editorjs] Start Save',\n  SaveEnd = '[ngx-editorjs] Start End',\n  NotReady = '[ngx-editorjs] Not Ready',\n  Ready = '[ngx-editorjs] Ready',\n  Changed = '[ngx-editorjs] Changed'\n}\n\nexport class SaveStart implements Action {\n  readonly type = EditorJSActionTypes.SaveStart;\n  constructor(public payload: { holder: string }) {}\n}\n\nexport class SaveEnd implements Action {\n  readonly type = EditorJSActionTypes.SaveEnd;\n  constructor(public payload: { holder: string; data: OutputData }) {}\n}\n\nexport class NotReady implements Action {\n  readonly type = EditorJSActionTypes.NotReady;\n  constructor(public payload: { holder: string }) {}\n}\n\nexport class Ready implements Action {\n  readonly type = EditorJSActionTypes.Ready;\n  constructor(public payload: { holder: string }) {}\n}\n\nexport class Changed implements Action {\n  readonly type = EditorJSActionTypes.Changed;\n  constructor(public payload: { holder: string; data: OutputData }) {}\n}\n\nexport type NgxEditorJSActions = SaveStart | SaveEnd | NotReady | Ready | Changed;\n\n    \n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/SaveStart.html":{"url":"classes/SaveStart.html","title":"class - SaveStart","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  SaveStart\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            libs/ngx-editorjs-ngrx/src/lib/actions/ngx-editorjs.actions.ts\n        \n\n\n\n            \n                Implements\n            \n            \n                        Action\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                payload\n                            \n                            \n                                    Readonly\n                                type\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(payload: literal type)\n                    \n                \n                        \n                            \n                                Defined in libs/ngx-editorjs-ngrx/src/lib/actions/ngx-editorjs.actions.ts:13\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        payload\n                                                  \n                                                        \n                                                                    literal type\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            payload\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     literal type\n\n                        \n                    \n                        \n                            \n                                    Defined in libs/ngx-editorjs-ngrx/src/lib/actions/ngx-editorjs.actions.ts:14\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                            type\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : EditorJSActionTypes.SaveStart\n                        \n                    \n                        \n                            \n                                    Defined in libs/ngx-editorjs-ngrx/src/lib/actions/ngx-editorjs.actions.ts:13\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { Action } from '@ngrx/store';\nimport { OutputData } from '@editorjs/editorjs';\n\nexport enum EditorJSActionTypes {\n  SaveStart = '[ngx-editorjs] Start Save',\n  SaveEnd = '[ngx-editorjs] Start End',\n  NotReady = '[ngx-editorjs] Not Ready',\n  Ready = '[ngx-editorjs] Ready',\n  Changed = '[ngx-editorjs] Changed'\n}\n\nexport class SaveStart implements Action {\n  readonly type = EditorJSActionTypes.SaveStart;\n  constructor(public payload: { holder: string }) {}\n}\n\nexport class SaveEnd implements Action {\n  readonly type = EditorJSActionTypes.SaveEnd;\n  constructor(public payload: { holder: string; data: OutputData }) {}\n}\n\nexport class NotReady implements Action {\n  readonly type = EditorJSActionTypes.NotReady;\n  constructor(public payload: { holder: string }) {}\n}\n\nexport class Ready implements Action {\n  readonly type = EditorJSActionTypes.Ready;\n  constructor(public payload: { holder: string }) {}\n}\n\nexport class Changed implements Action {\n  readonly type = EditorJSActionTypes.Changed;\n  constructor(public payload: { holder: string; data: OutputData }) {}\n}\n\nexport type NgxEditorJSActions = SaveStart | SaveEnd | NotReady | Ready | Changed;\n\n    \n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/SavedMap.html":{"url":"interfaces/SavedMap.html","title":"interface - SavedMap","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  SavedMap\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            libs/ngx-editorjs/src/lib/types/maps.ts\n        \n\n            \n                Description\n            \n            \n                A map containing BehaviorSubject of boolean values of the save state of EditorJS\n\n            \n\n\n\n\n            \n    Indexable\n        \n            \n                \n                    \n                        [key: string]:    BehaviorSubject\n\n                    \n                \n                        \n                            \n                                Defined in libs/ngx-editorjs/src/lib/types/maps.ts:38\n                            \n                        \n                \n                    \n                        A map key containing a {BehaviorSubject} of {boolean}\n\n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import EditorJS, { OutputData } from '@editorjs/editorjs';\nimport { BehaviorSubject } from 'rxjs';\nimport { Block } from './blocks';\n\n/**\n * A map containing instances of `EditorJS`\n */\nexport interface EditorMap {\n  /**\n   * A map key containing a {BehaviorSubject} of {EditorJS}\n   */\n  [key: string]: BehaviorSubject;\n}\n\n/**\n * A map containing `BehaviorSubject` of `Block` elements from `EditorJS`\n */\nexport interface BlocksMap {\n  /**\n   * A map key containing a {BehaviorSubject} of {Block[]}\n   */\n  [key: string]: BehaviorSubject;\n}\n\n/**\n * A map containing `BehaviorSubject` of `boolean` values of the ready state of `EditorJS`\n */\nexport interface ReadyMap {\n  /**\n   * A map key containing a {BehaviorSubject} of {boolean}\n   */\n  [key: string]: BehaviorSubject;\n}\n\n/**\n * A map containing `BehaviorSubject` of `boolean` values of the save state of `EditorJS`\n */\nexport interface SavedMap {\n  /**\n   * A map key containing a {BehaviorSubject} of {boolean}\n   */\n  [key: string]: BehaviorSubject;\n}\n\n/**\n * An EditorJS change event\n */\nexport interface EditorJSChange {\n  /**\n   * Time of the change\n   */\n  time: number;\n  /**\n   * Blocks in the change\n   */\n  blocks: Block[];\n}\n\n/**\n * A map containing `BehaviorSubject` of `number` which is the timestamp of the last `EditorJS` change\n */\nexport interface ChangeMap {\n  /**\n   * A map key containing a {BehaviorSubject} of {number}\n   */\n  [key: string]: BehaviorSubject;\n}\n\n    \n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/SidebarComponent.html":{"url":"components/SidebarComponent.html","title":"component - SidebarComponent","body":"\n                   \n\n\n\n\n\n  Components\n  SidebarComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    apps/ngx-tinynodes/src/app/components/sidebar-component/sidebar.component.ts\n\n\n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                tinynodes-sidebar\n            \n\n            \n                styleUrls\n                sidebar.component.scss\n            \n\n\n\n            \n                templateUrl\n                sidebar.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n\n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                openSourceMenu\n                            \n                            \n                                projectsMenu\n                            \n                        \n                    \n                \n\n\n\n\n        \n    \n\n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        openSourceMenu\n                    \n                \n                \n                    \n                        Type :         MenuGroup\n\n                    \n                \n                        \n                            \n                                    Defined in apps/ngx-tinynodes/src/app/components/sidebar-component/sidebar.component.ts:14\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        projectsMenu\n                    \n                \n                \n                    \n                        Type :         MenuGroup\n\n                    \n                \n                        \n                            \n                                    Defined in apps/ngx-tinynodes/src/app/components/sidebar-component/sidebar.component.ts:11\n                            \n                        \n            \n        \n\n\n\n\n\n\n\n\n\n    \n        import { Component, Input } from '@angular/core';\nimport { MenuGroup } from '@tinynodes/ngx-tinynodes-core';\n\n@Component({\n  selector: 'tinynodes-sidebar',\n  templateUrl: 'sidebar.component.html',\n  styleUrls: ['sidebar.component.scss']\n})\nexport class SidebarComponent {\n  @Input()\n  projectsMenu: MenuGroup;\n\n  @Input()\n  openSourceMenu: MenuGroup;\n}\n\n    \n\n    \n        \n  {{ projectsMenu.title }}\n\n  {{ child.label }}\n\n\n\n  {{ openSourceMenu.title }}\n\n  {{ child.label }}\n -->\n\n    \n\n    \n                \n                    sidebar.component.scss\n                \n                \n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '  {{ projectsMenu.title }}  {{ child.label }}  {{ openSourceMenu.title }}  {{ child.label }} -->'\n    var COMPONENTS = [{'name': 'AppContainerComponent', 'selector': 'tinynodes-root'},{'name': 'FormContainerComponent', 'selector': 'ngx-form-container'},{'name': 'HomePageComponent', 'selector': 'tinynodes-home-page'},{'name': 'NavBarComponent', 'selector': 'tinynodes-nav-bar'},{'name': 'NgxEditorJSBaseComponent', 'selector': ''},{'name': 'NgxEditorJSComponent', 'selector': 'ngx-editorjs'},{'name': 'NgxEditorJSDemoHomeComponent', 'selector': 'ngx-editorjs-demo-home'},{'name': 'NgxEditorJSDemoInfoComponent', 'selector': 'ngx-editorjs-demo-info'},{'name': 'NgxEditorJSDemoTagComponent', 'selector': 'ngx-editorjs-tag-component'},{'name': 'NgxEditorJSMatFieldComponent', 'selector': 'ngx-editorjs-mat-field'},{'name': 'PageContainerComponent', 'selector': 'ngx-page-container'},{'name': 'SidebarComponent', 'selector': 'tinynodes-sidebar'}];\n    var DIRECTIVES = [{'name': 'NgxEditorJSDirective', 'selector': '[ngxEditorJS]'}];\n    var ACTUAL_COMPONENT = {'name': 'SidebarComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/Tag.html":{"url":"interfaces/Tag.html","title":"interface - Tag","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  Tag\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            libs/ngx-editorjs-demo/src/lib/store/pages/pages.models.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        key\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        key\n                                    \n                                \n                                \n                                    \n                                        key:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { ID } from '@datorama/akita';\nimport { Block } from '@tinynodes/ngx-editorjs';\n\nexport interface Tag {\n  key: string;\n}\n\nexport interface PageBlock extends Block {\n  id: ID;\n}\n\nexport interface Page {\n  id: ID;\n  pageTitle: string;\n  pageTags: Tag[];\n  blocks: PageBlock[];\n}\n\n    \n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/TestClass.html":{"url":"classes/TestClass.html","title":"class - TestClass","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  TestClass\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            libs/ngx-editorjs/src/testing/shared.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                render\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in libs/ngx-editorjs/src/testing/shared.ts:5\n                            \n                        \n\n            \n        \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            render\n                        \n                        \n                    \n                \n            \n            \n                \nrender()\n                \n            \n\n\n            \n                \n                    Defined in libs/ngx-editorjs/src/testing/shared.ts:7\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         any\n\n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { ToolSettings } from '@editorjs/editorjs';\nimport { BasePlugin } from '../lib/types/plugins';\nimport { NgxEditorJSModuleConfig } from '../lib/types/config';\n\nexport class TestClass {\n  constructor() {}\n  render() {\n    return document.createElement('div');\n  }\n}\n\nexport class MockPlugin implements BasePlugin {\n  public plugin(): ToolSettings {\n    return { class: TestClass };\n  }\n  shortcut() {\n    return 'test-shortcut';\n  }\n}\n\nexport class MockEditorJS {\n  blocks: any;\n  saver: any;\n  version: string;\n  destroy: () => void;\n\n  isReady: Promise;\n\n  constructor(private config: NgxEditorJSModuleConfig) {\n    this.version = 'test';\n\n    this.isReady = Promise.resolve();\n\n    this.destroy = () => {};\n\n    this.blocks = {\n      clear: () => {},\n      render: () => {}\n    };\n\n    this.saver = {\n      save: (): Promise => {\n        return Promise.resolve({\n          time: Date.now(),\n          version: 'test',\n          blocks: []\n        });\n      }\n    };\n    (config as any).onReady();\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/TinynodeDemos.html":{"url":"interfaces/TinynodeDemos.html","title":"interface - TinynodeDemos","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  TinynodeDemos\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            libs/ngx-tinynodes-core/src/lib/stores/app/application.model.ts\n        \n\n            \n                Description\n            \n            \n                The demos on tinynodes\n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        ngx-editorjs-demo\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        ngx-editorjs-demo\n                                    \n                                \n                                \n                                    \n                                        ngx-editorjs-demo:         NgxEditorJSDemoData\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         NgxEditorJSDemoData\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    The ngx-editorjs-demo data\n\n                                \n                            \n                        \n                    \n            \n    \n\n\n    \n        import { Block } from '@tinynodes/ngx-editorjs';\nimport { MenuGroup, MenuItem } from '../../types/app';\n\n/**\n * An Enum of the keys in the application state\n */\nexport enum ApplicationStateKeys {\n  /**\n   * The hidden state key\n   */\n  Hidden = 'hidden',\n\n  /**\n   * The menus key\n   */\n  Menus = 'menus',\n\n  /**\n   * The demo data key\n   */\n  DemoData = 'demoData'\n}\n\n/**\n * Interface for a demo data object\n */\nexport interface DemoData {\n  /**\n   * The name of the demo (e.g. `ngx-editorjs-demo`)\n   */\n  name: string;\n  /**\n   * The data for the demo as ``\n   */\n  data: T;\n}\n\n/**\n * Interface for `ngx-editorjs-demo` data\n * TODO: This should be moved\n */\nexport interface NgxEditorJSDemo {\n  /**\n   * The initial blocks for the demo\n   */\n  blocks: Block[];\n\n  /**\n   * Links for this demo\n   */\n  links: MenuGroup;\n}\n\n/**\n * The demo data for `ngx-editorjs-demo`\n */\nexport interface NgxEditorJSDemoData extends DemoData {}\n\n/**\n * The demos on tinynodes\n */\nexport interface TinynodeDemos {\n  /**\n   * The `ngx-editorjs-demo` data\n   */\n  'ngx-editorjs-demo': NgxEditorJSDemoData;\n}\n\n/**\n * A representation of the application state\n */\nexport interface ApplicationState {\n  /**\n   * If the side menu is hidden\n   */\n  hidden: boolean;\n\n  /**\n   * A set of menus loaded from application data\n   */\n  menus: MenuGroup[];\n\n  /**\n   * Data for demos\n   */\n  demoData: DemoData[];\n}\n\n    \n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/TinynodeDemos-1.html":{"url":"interfaces/TinynodeDemos-1.html","title":"interface - TinynodeDemos-1","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  TinynodeDemos\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/ngx-tinynodes/src/app/core/stores/app/application.model.ts\n        \n\n            \n                Description\n            \n            \n                The demos on tinynodes\n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        ngx-editorjs-demo\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        ngx-editorjs-demo\n                                    \n                                \n                                \n                                    \n                                        ngx-editorjs-demo:         NgxEditorJSDemoData\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         NgxEditorJSDemoData\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    The ngx-editorjs-demo data\n\n                                \n                            \n                        \n                    \n            \n    \n\n\n    \n        import { Block } from '@tinynodes/ngx-editorjs';\nimport { MenuGroup } from '../../types/app';\n\n/**\n * An Enum of the keys in the application state\n */\nexport enum ApplicationStateKeys {\n  /**\n   * The hidden state key\n   */\n  Hidden = 'hidden',\n\n  /**\n   * The menus key\n   */\n  Menus = 'menus',\n\n  /**\n   * The demo data key\n   */\n  DemoData = 'demoData'\n}\n\n/**\n * Interface for a demo data object\n */\nexport interface DemoData {\n  /**\n   * The name of the demo (e.g. `ngx-editorjs-demo`)\n   */\n  name: string;\n  /**\n   * The data for the demo as ``\n   */\n  data: T;\n}\n\n/**\n * Interface for `ngx-editorjs-demo` data\n * TODO: This should be moved\n */\nexport interface NgxEditorJSDemo {\n  /**\n   * The initial blocks for the demo\n   */\n  blocks: Block[];\n}\n\n/**\n * The demo data for `ngx-editorjs-demo`\n */\nexport interface NgxEditorJSDemoData extends DemoData {}\n\n/**\n * The demos on tinynodes\n */\nexport interface TinynodeDemos {\n  /**\n   * The `ngx-editorjs-demo` data\n   */\n  'ngx-editorjs-demo': NgxEditorJSDemoData;\n}\n\n/**\n * A representation of the application state\n */\nexport interface ApplicationState {\n  /**\n   * If the side menu is hidden\n   */\n  hidden: boolean;\n\n  /**\n   * A set of menus loaded from application data\n   */\n  menus: MenuGroup[];\n\n  /**\n   * Data for demos\n   */\n  demoData: DemoData[];\n}\n\n    \n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/ToolSettingsMap.html":{"url":"interfaces/ToolSettingsMap.html","title":"interface - ToolSettingsMap","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  ToolSettingsMap\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            libs/ngx-editorjs/src/lib/types/plugins.ts\n        \n\n            \n                Description\n            \n            \n                A map of all the tools settings\n\n            \n\n\n\n\n            \n    Indexable\n        \n            \n                \n                    \n                        [key: string]:    ToolConstructable | ToolSettings\n\n                    \n                \n                        \n                            \n                                Defined in libs/ngx-editorjs/src/lib/types/plugins.ts:17\n                            \n                        \n                \n                    \n                        The key of the plugin and the plugin exported tool settings\n\n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { InjectionToken } from '@angular/core';\nimport { ToolConstructable, ToolSettings } from '@editorjs/editorjs';\n\n/**\n * A Module plugin configuration\n */\nexport interface PluginConfig {\n  /**\n   * The key of the plugin and the plugin class extending `BasePlugin`\n   */\n  [key: string]: BasePlugin;\n}\n\n/**\n * A map of all the tools settings\n */\nexport interface ToolSettingsMap {\n  /**\n   * The key of the plugin and the plugin exported tool settings\n   */\n  [key: string]: ToolConstructable | ToolSettings;\n}\n\n/**\n * Defines the interface for required and optional plugin methods.\n * These methods allow a plugin to return a EditorJS plugin and an optional shortcut\n */\nexport interface BasePlugin {\n  /**\n   * The plugin settings to be returned\n   */\n  plugin: () => ToolConstructable | ToolSettings;\n\n  /**\n   * Optional shortcut for the plugin\n   */\n  shortcut?: () => string;\n}\n\n/**\n * The injection token for adding plugins via your own application\n */\nexport const UserPlugins = new InjectionToken('UserPlugins');\n\n    \n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/ToolSettingsMap-1.html":{"url":"interfaces/ToolSettingsMap-1.html","title":"interface - ToolSettingsMap-1","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  ToolSettingsMap\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            libs/ngx-editorjs-plugins/src/lib/types/plugins.ts\n        \n\n            \n                Description\n            \n            \n                A map of all the tools settings\n\n            \n\n\n\n\n            \n    Indexable\n        \n            \n                \n                    \n                        [key: string]:    ToolConstructable | ToolSettings\n\n                    \n                \n                        \n                            \n                                Defined in libs/ngx-editorjs-plugins/src/lib/types/plugins.ts:17\n                            \n                        \n                \n                    \n                        The key of the plugin and the plugin exported tool settings\n\n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { InjectionToken } from '@angular/core';\nimport { ToolSettings, ToolConstructable } from '@editorjs/editorjs';\n\n/**\n * A Module plugin configuration\n */\nexport interface PluginConfig {\n  /**\n   * The key of the plugin and the plugin class extending `BasePlugin`\n   */\n  [key: string]: BasePlugin;\n}\n\n/**\n * A map of all the tools settings\n */\nexport interface ToolSettingsMap {\n  /**\n   * The key of the plugin and the plugin exported tool settings\n   */\n  [key: string]: ToolConstructable | ToolSettings;\n}\n\n/**\n * Defines the interface for required and optional plugin methods.\n * These methods allow a plugin to return a EditorJS plugin and an optional shortcut\n */\nexport interface BasePlugin {\n  /**\n   * The plugin settings to be returned\n   */\n  plugin: () => ToolConstructable | ToolSettings;\n\n  /**\n   * Optional shortcut for the plugin\n   */\n  shortcut?: () => string;\n}\n\n/**\n * The Injection token for initial plugins as defined in the ngx-editorjs module\n */\nexport const InitialPlugins = new InjectionToken('InitialPlugins');\n\n/**\n * The injection token for adding plugins via your own application\n */\nexport const UserPlugins = new InjectionToken('UserPlugins');\n\n    \n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"changelog.html":{"url":"changelog.html","title":"getting-started - changelog","body":"\n                   \n\nTinynodes Changelog\n\nThis changelog is related to the overall site. You can also find changelogs for libraries under the library docs\n\n\nWednesday, 22nd May 2019\nToday @tinynodes/ngx-editorjs@2.0.0 has been released. The major bump is due to underlying changes that may be breaking - the entire service has been improved with better control over the EditorJS interface. Also in this release the exiting component has been upgraded to work with Angular Forms, and there is a new Material Form Field component provided too.\nThe demo has also been updated to reflect the new features of this, and a new demo added for the Material component.\nWednesday, 15th May 2019\nToday I have released @tinynodes/ngx-editorjs@1.3.2. This will be without a Forms component. In this release the main change is internally I'm using a new EditorJS Injector module I've created to handle managing the underlying instance. There are also a lot of documentation improvements and a completly new updated demo site.\nMonday, 13th May 2019\nToday I have released @tinynodes/ngx-editorjs@1.2.0. For now I've removed any default plugins from core package, now all plugins must be added at the application level - this can be see in the demo app.\nSunday, 12th May 2019\nThe first devlog is to report that currently version 1.2 has been delayed due to current build issues.\nA bug report has been filed on @nrwl/nx project.\nIn 1.2 there is a new @tinynodes/ngx-editorjs-plugins module that provides exports for several common EditorJS plugins and will be expanded to cover all the officially released plugins.\nWith this change the current build scripts break, and until it is resolved this will block the release.\nIn the meantime I'll continue to work on this small demo site, making it more useful as a good example of an Angular app.\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"contributing.html":{"url":"contributing.html","title":"getting-started - contributing","body":"\n                   \n\nContributing\nWhen contributing to this repository, please first discuss the change you wish to make via issue,\nemail, or any other method with the owners of this repository before making a change.\nPlease note we have a code of conduct, please follow it in all your interactions with the project.\nPull Request Process\n\nEnsure any install or build dependencies are removed before the end of the layer when doing a\nbuild.\nUpdate the README.md with details of changes to the interface, this includes new environment\nvariables, exposed ports, useful file locations and container parameters.\nIncrease the version numbers in any examples files and the README.md to the new version that this\nPull Request would represent. The versioning scheme we use is SemVer.\nYou may merge the Pull Request in once you have the sign-off of two other developers, or if you\ndo not have permission to do that, you may request the second reviewer to merge it for you.\n\nCode of Conduct\nOur Pledge\nIn the interest of fostering an open and welcoming environment, we as\ncontributors and maintainers pledge to making participation in our project and\nour community a harassment-free experience for everyone, regardless of age, body\nsize, disability, ethnicity, gender identity and expression, level of experience,\nnationality, personal appearance, race, religion, or sexual identity and\norientation.\nOur Standards\nExamples of behavior that contributes to creating a positive environment\ninclude:\n\nUsing welcoming and inclusive language\nBeing respectful of differing viewpoints and experiences\nGracefully accepting constructive criticism\nFocusing on what is best for the community\nShowing empathy towards other community members\n\nExamples of unacceptable behavior by participants include:\n\nThe use of sexualized language or imagery and unwelcome sexual attention or\nadvances\nTrolling, insulting/derogatory comments, and personal or political attacks\nPublic or private harassment\nPublishing others' private information, such as a physical or electronic\naddress, without explicit permission\nOther conduct which could reasonably be considered inappropriate in a\nprofessional setting\n\nOur Responsibilities\nProject maintainers are responsible for clarifying the standards of acceptable\nbehavior and are expected to take appropriate and fair corrective action in\nresponse to any instances of unacceptable behavior.\nProject maintainers have the right and responsibility to remove, edit, or\nreject comments, commits, code, wiki edits, issues, and other contributions\nthat are not aligned to this Code of Conduct, or to ban temporarily or\npermanently any contributor for other behaviors that they deem inappropriate,\nthreatening, offensive, or harmful.\nScope\nThis Code of Conduct applies both within project spaces and in public spaces\nwhen an individual is representing the project or its community. Examples of\nrepresenting a project or community include using an official project e-mail\naddress, posting via an official social media account, or acting as an appointed\nrepresentative at an online or offline event. Representation of a project may be\nfurther defined and clarified by project maintainers.\nEnforcement\nInstances of abusive, harassing, or otherwise unacceptable behavior may be\nreported by contacting the project team at me@tane.dev. All\ncomplaints will be reviewed and investigated and will result in a response that\nis deemed necessary and appropriate to the circumstances. The project team is\nobligated to maintain confidentiality with regard to the reporter of an incident.\nFurther details of specific enforcement policies may be posted separately.\nProject maintainers who do not follow or enforce the Code of Conduct in good\nfaith may face temporary or permanent repercussions as determined by other\nmembers of the project's leadership.\nAttribution\nThis Code of Conduct is adapted from the Contributor Covenant, version 1.4,\navailable at http://contributor-covenant.org/version/1/4\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"dependencies.html":{"url":"dependencies.html","title":"package-dependencies - dependencies","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        Dependencies\n    \n    \n        \n            @angular/animations : ~7.2.15\n        \n            @angular/cdk : ^7.3.7\n        \n            @angular/common : ~7.2.15\n        \n            @angular/compiler : ~7.2.15\n        \n            @angular/core : ~7.2.15\n        \n            @angular/flex-layout : ^7.0.0-beta.24\n        \n            @angular/forms : ~7.2.15\n        \n            @angular/material : ^7.3.7\n        \n            @angular/platform-browser : ~7.2.15\n        \n            @angular/platform-browser-dynamic : ~7.2.15\n        \n            @angular/router : ~7.2.15\n        \n            @datorama/akita-ng-router-store : ^3.0.2\n        \n            @datorama/akita-ngdevtools : ^1.0.4\n        \n            @editorjs/editorjs : ^2.13.0\n        \n            @editorjs/header : ^2.2.3\n        \n            @editorjs/list : ^1.3.4\n        \n            @editorjs/paragraph : ^2.5.0\n        \n            @ngrx/effects : ^7.4.0\n        \n            @ngrx/store : ^7.4.0\n        \n            core-js : ^2.5.4\n        \n            hammerjs : ^2.0.8\n        \n            install : ^0.12.2\n        \n            ngx-hideable-header : 0.0.5\n        \n            ngx-markdown : ^7.1.5\n        \n            npm : ^6.9.0\n        \n            rxjs : 6.3.3\n        \n            zone.js : ^0.8.26\n    \n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/enumerations.html":{"url":"miscellaneous/enumerations.html","title":"miscellaneous-enumerations - enumerations","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous\n  Enumerations\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            ApplicationStateKeys   (libs/.../application.model.ts)\n                        \n                        \n                            ApplicationStateKeys   (apps/.../application.model.ts)\n                        \n                        \n                            EditorJSActionTypes   (libs/.../ngx-editorjs.actions.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    libs/ngx-tinynodes-core/src/lib/stores/app/application.model.ts\n    \n        \n            \n                \n                    \n                        \n                        ApplicationStateKeys\n                    \n                \n                    \n                        \n                            An Enum of the keys in the application state\n\n                        \n                    \n                        \n                            \n                                 Hidden\n                            \n                        \n                        \n                            \n                                Value : hidden\n                            \n                        \n                        \n                            \n                                 Menus\n                            \n                        \n                        \n                            \n                                Value : menus\n                            \n                        \n                        \n                            \n                                 DemoData\n                            \n                        \n                        \n                            \n                                Value : demoData\n                            \n                        \n            \n        \n\n    apps/ngx-tinynodes/src/app/core/stores/app/application.model.ts\n    \n        \n            \n                \n                    \n                        \n                        ApplicationStateKeys\n                    \n                \n                    \n                        \n                            An Enum of the keys in the application state\n\n                        \n                    \n                        \n                            \n                                 Hidden\n                            \n                        \n                        \n                            \n                                Value : hidden\n                            \n                        \n                        \n                            \n                                 Menus\n                            \n                        \n                        \n                            \n                                Value : menus\n                            \n                        \n                        \n                            \n                                 DemoData\n                            \n                        \n                        \n                            \n                                Value : demoData\n                            \n                        \n            \n        \n\n    libs/ngx-editorjs-ngrx/src/lib/actions/ngx-editorjs.actions.ts\n    \n        \n            \n                \n                    \n                        \n                        EditorJSActionTypes\n                    \n                \n                        \n                            \n                                 SaveStart\n                            \n                        \n                        \n                            \n                                Value : [ngx-editorjs] Start Save\n                            \n                        \n                        \n                            \n                                 SaveEnd\n                            \n                        \n                        \n                            \n                                Value : [ngx-editorjs] Start End\n                            \n                        \n                        \n                            \n                                 NotReady\n                            \n                        \n                        \n                            \n                                Value : [ngx-editorjs] Not Ready\n                            \n                        \n                        \n                            \n                                 Ready\n                            \n                        \n                        \n                            \n                                Value : [ngx-editorjs] Ready\n                            \n                        \n                        \n                            \n                                 Changed\n                            \n                        \n                        \n                            \n                                Value : [ngx-editorjs] Changed\n                            \n                        \n            \n        \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/functions.html":{"url":"miscellaneous/functions.html","title":"miscellaneous-functions - functions","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous\n  Functions\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            createEditorJSConfig   (libs/.../editor-config.ts)\n                        \n                        \n                            createEditorJSInstance   (libs/.../ngx-editorjs.module.ts)\n                        \n                        \n                            createModuleConfig   (libs/.../module-config.ts)\n                        \n                        \n                            createNgxEditorJSDemoTools   (libs/.../index.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    libs/ngx-editorjs/src/lib/config/editor-config.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        \n                            createEditorJSConfig\n                        \n                        \n                    \n                \n            \n            \n                \ncreateEditorJSConfig(inputConfig?)\n                \n            \n\n\n\n\n            \n                \n                    Creates an EditorJS config\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    inputConfig\n\n                                    \n                                        Yes\n                                    \n\n\n                                    \n                                        The config to merge\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     EditorConfig\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    libs/ngx-editorjs/src/lib/ngx-editorjs.module.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        \n                            createEditorJSInstance\n                        \n                        \n                    \n                \n            \n            \n                \ncreateEditorJSInstance(editorjs: any)\n                \n            \n\n\n\n\n            \n                \n                    Factory function to return the EditorJS base class\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    editorjs\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                \n            \n        \n    \n    libs/ngx-editorjs/src/lib/config/module-config.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        \n                            createModuleConfig\n                        \n                        \n                    \n                \n            \n            \n                \ncreateModuleConfig(config?)\n                \n            \n\n\n\n\n            \n                \n                    Creates the configuration from the module config\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    config\n\n                                    \n                                        Yes\n                                    \n\n\n                                    \n                                        Optional module configurations\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         NgxEditorJSModuleConfig\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    libs/ngx-editorjs-demo/src/lib/config/index.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        \n                            createNgxEditorJSDemoTools\n                        \n                        \n                    \n                \n            \n            \n                \ncreateNgxEditorJSDemoTools()\n                \n            \n\n\n\n\n            \n                \n                    Creates the tools for the ngx-tinynodes demo application\n\n\n                    \n                        Returns :         PluginConfig\n\n                    \n                \n            \n        \n    \n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"index.html":{"url":"index.html","title":"getting-started - index","body":"\n                   \n\nNgx-Tinynodes\nThis repository is a collection of Angular components and demos with full documentation.\nSee the Changelog for the development diary of this site, or visit the documentation of libraries.\nYou can also find a fully searchable API documentation for all @tinynode components.\nLinks\n\nRepository\nDocumentation\nDemo Application Site\nNPM Collection\n\nLibraries\nngx-editorjs\nThis library provides Angular support for EditorJS. Inside the module you will find:\n\nNgxEditorJSDirective - An Angular Directive used to attach an EditorJS instance to any block DOM element\nNgxEditorJSComponent - An out-of-the-box Angular component that is Reactive Forms compatible\nNgxEditorJSMaterialFieldComponent An Angular Material Form Field component that provides all the required properties and life-cycle events required. See the Form Demo on an example usage\nNgxEditorJSBaseComponent - A base Angular component that is Reactive form compatible but with no template, can be used to create custom UI framework containers\nNgxEditorJSService - A Service that can be injected into an application to provide a interface to interact with EditorJS instances. Underneath are the private NgxEditorJSPluginService and NgxEditorJSInstanceService services. These are private but can be imported via ɵNgxEditorJSPluginService and ɵNgxEditorJSInstanceService from the library if you want to use them.\n\nWithin these components you will be able to access the underlying EditorJS instance, for use see the EditorJS API Docs\nBelow are the dependencies to use the features.\n@tinynodes/ngx-editorjs\nThis project provides a set of features for using EditorJS within Angular 7+\n\nReadme\nChangelog\nDemo\nProject Folder\n\n@tinynodes/ngx-editorjs-plugins\nThis project provides a module that exports a set of default plugins for @tinynodes/ngx-editorjs.\n\nReadme\nChangelog\nProject Folder\n\nDevelopment Information\nThis repository is run by Tane Piper and was generated using Nx.\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"license.html":{"url":"license.html","title":"getting-started - license","body":"\n                   \n\nTinynodes General MIT Licence\nCopyright 2019 Tane Piper me@tane.dev\nPermission is hereby granted, free of charge, to any person obtaining a copy of this software and associated documentation files (the \"Software\"), to deal in the Software without restriction, including without limitation the rights to use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of the Software, and to permit persons to whom the Software is furnished to do so, subject to the following conditions:\nThe above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software.\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules.html":{"url":"modules.html","title":"modules - modules","body":"\n                   \n\n\n\n\n    Modules\n\n\n    \n            \n                \n                    \n                        ApplicationDataModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        ApplicationDataModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        AppModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        AppRoutingModule\n                    \n                    \n                                \n                                    No graph available.\n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        MaterialModule\n                    \n                    \n                                \n                                    No graph available.\n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        NgxEditorjsDemoModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        NgxEditorJSModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        NgxEditorjsNgrxModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        NgxEditorjsPluginsModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        NgxHideableHeaderDemoModule\n                    \n                    \n                                \n                                    No graph available.\n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        NgxTinynodesCoreMaterialModule\n                    \n                    \n                                \n                                    No graph available.\n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        NgxTinynodesCoreModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        NgxTinynodesCoreModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        PageStoreModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        PluginCodeModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        PluginHeaderModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        PluginImageModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        PluginLinkModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        PluginListModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        PluginMarkerModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        PluginParagraphModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        PluginSimpleImageModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"overview.html":{"url":"overview.html","title":"overview - overview","body":"\n                   \n\n\n\n    Overview\n\n  \n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_ApplicationDataModule\n\n\n\ncluster_ApplicationDataModule_providers\n\n\n\ncluster_AppModule\n\n\n\ncluster_AppModule_declarations\n\n\n\ncluster_AppModule_imports\n\n\n\ncluster_AppModule_bootstrap\n\n\n\ncluster_NgxEditorjsDemoModule\n\n\n\ncluster_NgxEditorjsDemoModule_declarations\n\n\n\ncluster_NgxEditorjsDemoModule_imports\n\n\n\ncluster_NgxEditorjsDemoModule_exports\n\n\n\ncluster_NgxEditorJSModule\n\n\n\ncluster_NgxEditorJSModule_declarations\n\n\n\ncluster_NgxEditorJSModule_exports\n\n\n\ncluster_NgxEditorJSModule_providers\n\n\n\ncluster_NgxEditorjsNgrxModule\n\n\n\ncluster_NgxEditorjsPluginsModule\n\n\n\ncluster_NgxEditorjsPluginsModule_imports\n\n\n\ncluster_NgxEditorjsPluginsModule_exports\n\n\n\ncluster_NgxTinynodesCoreModule\n\n\n\ncluster_NgxTinynodesCoreModule_declarations\n\n\n\ncluster_NgxTinynodesCoreModule_imports\n\n\n\ncluster_NgxTinynodesCoreModule_exports\n\n\n\ncluster_PageStoreModule\n\n\n\ncluster_PageStoreModule_providers\n\n\n\ncluster_PluginCodeModule\n\n\n\ncluster_PluginCodeModule_providers\n\n\n\ncluster_PluginHeaderModule\n\n\n\ncluster_PluginHeaderModule_providers\n\n\n\ncluster_PluginImageModule\n\n\n\ncluster_PluginImageModule_providers\n\n\n\ncluster_PluginLinkModule\n\n\n\ncluster_PluginLinkModule_providers\n\n\n\ncluster_PluginListModule\n\n\n\ncluster_PluginListModule_providers\n\n\n\ncluster_PluginMarkerModule\n\n\n\ncluster_PluginMarkerModule_providers\n\n\n\ncluster_PluginParagraphModule\n\n\n\ncluster_PluginParagraphModule_providers\n\n\n\ncluster_PluginSimpleImageModule\n\n\n\ncluster_PluginSimpleImageModule_providers\n\n\n\n\nAppService\n\nAppService\n\n\n\nApplicationDataModule\n\nApplicationDataModule\n\nApplicationDataModule -->\n\nAppService->ApplicationDataModule\n\n\n\nApplicationDataModule -->\n\nAppService->ApplicationDataModule\n\n\n\n\n\nApplicationQuery\n\nApplicationQuery\n\nApplicationDataModule -->\n\nApplicationQuery->ApplicationDataModule\n\n\n\nApplicationDataModule -->\n\nApplicationQuery->ApplicationDataModule\n\n\n\n\n\nApplicationStore\n\nApplicationStore\n\nApplicationDataModule -->\n\nApplicationStore->ApplicationDataModule\n\n\n\nApplicationDataModule -->\n\nApplicationStore->ApplicationDataModule\n\n\n\n\n\nAppModule\n\nAppModule\n\nAppModule -->\n\nApplicationDataModule->AppModule\n\n\n\n\n\nNgxTinynodesCoreModule\n\nNgxTinynodesCoreModule\n\nNgxTinynodesCoreModule -->\n\nApplicationDataModule->NgxTinynodesCoreModule\n\n\n\nNgxTinynodesCoreModule -->\n\nApplicationDataModule->NgxTinynodesCoreModule\n\n\n\n\n\nAppContainerComponent\n\nAppContainerComponent\n\nAppModule -->\n\nAppContainerComponent->AppModule\n\n\n\n\n\nHomePageComponent\n\nHomePageComponent\n\nAppModule -->\n\nHomePageComponent->AppModule\n\n\n\n\n\nNavBarComponent\n\nNavBarComponent\n\nAppModule -->\n\nNavBarComponent->AppModule\n\n\n\n\n\nSidebarComponent\n\nSidebarComponent\n\nAppModule -->\n\nSidebarComponent->AppModule\n\n\n\n\n\nAppContainerComponent \n\nAppContainerComponent \n\nAppContainerComponent  -->\n\nAppModule->AppContainerComponent \n\n\n\n\n\nAppRoutingModule\n\nAppRoutingModule\n\nAppModule -->\n\nAppRoutingModule->AppModule\n\n\n\n\n\nMaterialModule\n\nMaterialModule\n\nAppModule -->\n\nMaterialModule->AppModule\n\n\n\n\n\nNgxEditorjsDemoModule\n\nNgxEditorjsDemoModule\n\nNgxEditorjsDemoModule -->\n\nMaterialModule->NgxEditorjsDemoModule\n\n\n\n\n\nNgxEditorJSModule\n\nNgxEditorJSModule\n\nAppModule -->\n\nNgxEditorJSModule->AppModule\n\n\n\nNgxEditorjsDemoModule -->\n\nNgxEditorJSModule->NgxEditorjsDemoModule\n\n\n\n\n\nNgxEditorJSBaseComponent \n\nNgxEditorJSBaseComponent \n\nNgxEditorJSBaseComponent  -->\n\nNgxEditorJSModule->NgxEditorJSBaseComponent \n\n\n\n\n\nNgxEditorJSComponent \n\nNgxEditorJSComponent \n\nNgxEditorJSComponent  -->\n\nNgxEditorJSModule->NgxEditorJSComponent \n\n\n\n\n\nNgxEditorJSDirective \n\nNgxEditorJSDirective \n\nNgxEditorJSDirective  -->\n\nNgxEditorJSModule->NgxEditorJSDirective \n\n\n\n\n\nNgxEditorJSMatFieldComponent \n\nNgxEditorJSMatFieldComponent \n\nNgxEditorJSMatFieldComponent  -->\n\nNgxEditorJSModule->NgxEditorJSMatFieldComponent \n\n\n\n\n\nNgxEditorjsNgrxModule\n\nNgxEditorjsNgrxModule\n\nNgxEditorjsNgrxModule -->\n\nNgxEditorJSModule->NgxEditorjsNgrxModule\n\n\n\nAppModule -->\n\nNgxEditorjsDemoModule->AppModule\n\n\n\n\n\nFormContainerComponent \n\nFormContainerComponent \n\nFormContainerComponent  -->\n\nNgxEditorjsDemoModule->FormContainerComponent \n\n\n\n\n\nPageContainerComponent \n\nPageContainerComponent \n\nPageContainerComponent  -->\n\nNgxEditorjsDemoModule->PageContainerComponent \n\n\n\n\n\nPageStoreModule \n\nPageStoreModule \n\nPageStoreModule  -->\n\nNgxEditorjsDemoModule->PageStoreModule \n\n\n\nAppModule -->\n\nNgxTinynodesCoreModule->AppModule\n\n\n\nNgxEditorjsDemoModule -->\n\nNgxTinynodesCoreModule->NgxEditorjsDemoModule\n\n\n\n\n\nApplicationDataModule \n\nApplicationDataModule \n\nApplicationDataModule  -->\n\nNgxTinynodesCoreModule->ApplicationDataModule \n\n\n\nApplicationDataModule  -->\n\nNgxTinynodesCoreModule->ApplicationDataModule \n\n\n\n\n\nNgxEditorJSDemoInfoComponent \n\nNgxEditorJSDemoInfoComponent \n\nNgxEditorJSDemoInfoComponent  -->\n\nNgxTinynodesCoreModule->NgxEditorJSDemoInfoComponent \n\n\n\n\n\nNgxTinynodesCoreMaterialModule \n\nNgxTinynodesCoreMaterialModule \n\nNgxTinynodesCoreMaterialModule  -->\n\nNgxTinynodesCoreModule->NgxTinynodesCoreMaterialModule \n\n\n\n\n\nFormContainerComponent\n\nFormContainerComponent\n\nNgxEditorjsDemoModule -->\n\nFormContainerComponent->NgxEditorjsDemoModule\n\n\n\n\n\nNgxEditorJSDemoHomeComponent\n\nNgxEditorJSDemoHomeComponent\n\nNgxEditorjsDemoModule -->\n\nNgxEditorJSDemoHomeComponent->NgxEditorjsDemoModule\n\n\n\n\n\nNgxEditorJSDemoTagComponent\n\nNgxEditorJSDemoTagComponent\n\nNgxEditorjsDemoModule -->\n\nNgxEditorJSDemoTagComponent->NgxEditorjsDemoModule\n\n\n\n\n\nPageContainerComponent\n\nPageContainerComponent\n\nNgxEditorjsDemoModule -->\n\nPageContainerComponent->NgxEditorjsDemoModule\n\n\n\n\n\nPageStoreModule\n\nPageStoreModule\n\nNgxEditorjsDemoModule -->\n\nPageStoreModule->NgxEditorjsDemoModule\n\n\n\n\n\nPluginCodeModule\n\nPluginCodeModule\n\nNgxEditorjsDemoModule -->\n\nPluginCodeModule->NgxEditorjsDemoModule\n\n\n\n\n\nNgxEditorjsPluginsModule\n\nNgxEditorjsPluginsModule\n\nNgxEditorjsPluginsModule -->\n\nPluginCodeModule->NgxEditorjsPluginsModule\n\n\n\n\n\nPluginHeaderModule\n\nPluginHeaderModule\n\nNgxEditorjsDemoModule -->\n\nPluginHeaderModule->NgxEditorjsDemoModule\n\n\n\nNgxEditorjsPluginsModule -->\n\nPluginHeaderModule->NgxEditorjsPluginsModule\n\n\n\n\n\nPluginLinkModule\n\nPluginLinkModule\n\nNgxEditorjsDemoModule -->\n\nPluginLinkModule->NgxEditorjsDemoModule\n\n\n\nNgxEditorjsPluginsModule -->\n\nPluginLinkModule->NgxEditorjsPluginsModule\n\n\n\n\n\nPluginListModule\n\nPluginListModule\n\nNgxEditorjsDemoModule -->\n\nPluginListModule->NgxEditorjsDemoModule\n\n\n\nNgxEditorjsPluginsModule -->\n\nPluginListModule->NgxEditorjsPluginsModule\n\n\n\n\n\nPluginMarkerModule\n\nPluginMarkerModule\n\nNgxEditorjsDemoModule -->\n\nPluginMarkerModule->NgxEditorjsDemoModule\n\n\n\nNgxEditorjsPluginsModule -->\n\nPluginMarkerModule->NgxEditorjsPluginsModule\n\n\n\n\n\nPluginParagraphModule\n\nPluginParagraphModule\n\nNgxEditorjsDemoModule -->\n\nPluginParagraphModule->NgxEditorjsDemoModule\n\n\n\nNgxEditorjsPluginsModule -->\n\nPluginParagraphModule->NgxEditorjsPluginsModule\n\n\n\n\n\nPluginSimpleImageModule\n\nPluginSimpleImageModule\n\nNgxEditorjsDemoModule -->\n\nPluginSimpleImageModule->NgxEditorjsDemoModule\n\n\n\nNgxEditorjsPluginsModule -->\n\nPluginSimpleImageModule->NgxEditorjsPluginsModule\n\n\n\n\n\nNgxEditorJSBaseComponent\n\nNgxEditorJSBaseComponent\n\nNgxEditorJSModule -->\n\nNgxEditorJSBaseComponent->NgxEditorJSModule\n\n\n\n\n\nNgxEditorJSComponent\n\nNgxEditorJSComponent\n\nNgxEditorJSModule -->\n\nNgxEditorJSComponent->NgxEditorJSModule\n\n\n\n\n\nNgxEditorJSDirective\n\nNgxEditorJSDirective\n\nNgxEditorJSModule -->\n\nNgxEditorJSDirective->NgxEditorJSModule\n\n\n\n\n\nNgxEditorJSMatFieldComponent\n\nNgxEditorJSMatFieldComponent\n\nNgxEditorJSModule -->\n\nNgxEditorJSMatFieldComponent->NgxEditorJSModule\n\n\n\n\n\nNgxEditorJSInstanceService\n\nNgxEditorJSInstanceService\n\nNgxEditorJSModule -->\n\nNgxEditorJSInstanceService->NgxEditorJSModule\n\n\n\n\n\nNgxEditorJSPluginService\n\nNgxEditorJSPluginService\n\nNgxEditorJSModule -->\n\nNgxEditorJSPluginService->NgxEditorJSModule\n\n\n\n\n\nNgxEditorJSService\n\nNgxEditorJSService\n\nNgxEditorJSModule -->\n\nNgxEditorJSService->NgxEditorJSModule\n\n\n\n\n\nPluginImageModule\n\nPluginImageModule\n\nNgxEditorjsPluginsModule -->\n\nPluginImageModule->NgxEditorjsPluginsModule\n\n\n\n\n\nPluginCodeModule \n\nPluginCodeModule \n\nPluginCodeModule  -->\n\nNgxEditorjsPluginsModule->PluginCodeModule \n\n\n\n\n\nPluginHeaderModule \n\nPluginHeaderModule \n\nPluginHeaderModule  -->\n\nNgxEditorjsPluginsModule->PluginHeaderModule \n\n\n\n\n\nPluginImageModule \n\nPluginImageModule \n\nPluginImageModule  -->\n\nNgxEditorjsPluginsModule->PluginImageModule \n\n\n\n\n\nPluginLinkModule \n\nPluginLinkModule \n\nPluginLinkModule  -->\n\nNgxEditorjsPluginsModule->PluginLinkModule \n\n\n\n\n\nPluginListModule \n\nPluginListModule \n\nPluginListModule  -->\n\nNgxEditorjsPluginsModule->PluginListModule \n\n\n\n\n\nPluginMarkerModule \n\nPluginMarkerModule \n\nPluginMarkerModule  -->\n\nNgxEditorjsPluginsModule->PluginMarkerModule \n\n\n\n\n\nPluginParagraphModule \n\nPluginParagraphModule \n\nPluginParagraphModule  -->\n\nNgxEditorjsPluginsModule->PluginParagraphModule \n\n\n\n\n\nPluginSimpleImageModule \n\nPluginSimpleImageModule \n\nPluginSimpleImageModule  -->\n\nNgxEditorjsPluginsModule->PluginSimpleImageModule \n\n\n\n\n\nNgxEditorJSDemoInfoComponent\n\nNgxEditorJSDemoInfoComponent\n\nNgxTinynodesCoreModule -->\n\nNgxEditorJSDemoInfoComponent->NgxTinynodesCoreModule\n\n\n\n\n\nNgxTinynodesCoreMaterialModule\n\nNgxTinynodesCoreMaterialModule\n\nNgxTinynodesCoreModule -->\n\nNgxTinynodesCoreMaterialModule->NgxTinynodesCoreModule\n\n\n\n\n\nPagesQuery\n\nPagesQuery\n\nPageStoreModule -->\n\nPagesQuery->PageStoreModule\n\n\n\n\n\nPagesService\n\nPagesService\n\nPageStoreModule -->\n\nPagesService->PageStoreModule\n\n\n\n\n\nPagesStore\n\nPagesStore\n\nPageStoreModule -->\n\nPagesStore->PageStoreModule\n\n\n\n\n\nPluginCode\n\nPluginCode\n\nPluginCodeModule -->\n\nPluginCode->PluginCodeModule\n\n\n\n\n\nPluginHeader\n\nPluginHeader\n\nPluginHeaderModule -->\n\nPluginHeader->PluginHeaderModule\n\n\n\n\n\nPluginImage\n\nPluginImage\n\nPluginImageModule -->\n\nPluginImage->PluginImageModule\n\n\n\n\n\nPluginLink\n\nPluginLink\n\nPluginLinkModule -->\n\nPluginLink->PluginLinkModule\n\n\n\n\n\nPluginList\n\nPluginList\n\nPluginListModule -->\n\nPluginList->PluginListModule\n\n\n\n\n\nPluginMarker\n\nPluginMarker\n\nPluginMarkerModule -->\n\nPluginMarker->PluginMarkerModule\n\n\n\n\n\nPluginParagraph\n\nPluginParagraph\n\nPluginParagraphModule -->\n\nPluginParagraph->PluginParagraphModule\n\n\n\n\n\nPluginSimpleImage\n\nPluginSimpleImage\n\nPluginSimpleImageModule -->\n\nPluginSimpleImage->PluginSimpleImageModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n  \n\n    \n        \n            \n                \n                    \n                    \n                        22 Modules\n                    \n                \n            \n        \n        \n            \n                \n                    \n                    12 Components\n                \n            \n        \n        \n            \n                \n                    \n                    1 Directive\n                \n            \n        \n        \n            \n                \n                    \n                    22 Injectables\n                \n            \n        \n        \n            \n                \n                    \n                    8 Classes\n                \n            \n        \n        \n            \n                \n                    \n                    49 Interfaces\n                \n            \n        \n    \n\n\n \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"todo.html":{"url":"todo.html","title":"getting-started - todo","body":"\n                   \n\nngx-tinynodes Todo\nGeneral Todos\n\n Add CI pipeline for publishing modules\n Publish doc changes and tags back to repo\n\nngx-editorjs\n\n Add full EditorJS config support\n Add config options as @Input on component and directive\n Add autosave option support to module config\n Expose EditorJS CoreAPI via service helpers (e.g. blocks, selection, etc)\n Provide peer-dependency ngrx/effects via library to control service\n\nngx-editorjs-demo\n\n Add store for page\n Add controls for setting editor\n Add Save feature\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/typealiases.html":{"url":"miscellaneous/typealiases.html","title":"miscellaneous-typealiases - typealiases","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous\n  Type aliases\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            BlockTypes   (libs/.../blocks.ts)\n                        \n                        \n                            ListStyle   (libs/.../blocks.ts)\n                        \n                        \n                            NgxEditorJSActions   (libs/.../ngx-editorjs.actions.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    libs/ngx-editorjs/src/lib/types/blocks.ts\n    \n    \n        \n            \n                \n                    \n                    BlockTypes\n                \n            \n            \n                \n                    Type of all the basic block type\n\n                \n            \n            \n                \n                        ParagraphBlock | HeaderBlock | ImageBlock | ListBlock | Block\n\n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    ListStyle\n                \n            \n            \n                \n                    Available list styles, supports ordered and unordered.\nA custom string can also be added\n\n                \n            \n            \n                \n                        \"ordered\" | \"unordered\" | string\n\n                \n            \n        \n    \n    libs/ngx-editorjs-ngrx/src/lib/actions/ngx-editorjs.actions.ts\n    \n    \n        \n            \n                \n                    \n                    NgxEditorJSActions\n                \n            \n            \n                \n                        SaveStart | SaveEnd | NotReady | Ready | Changed\n\n                \n            \n        \n    \n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/variables.html":{"url":"miscellaneous/variables.html","title":"miscellaneous-variables - variables","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous\n  Variables\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            appRoutes   (apps/.../app-routing.module.ts)\n                        \n                        \n                            DEFAULT_HOLDER_ID   (libs/.../editor-config.ts)\n                        \n                        \n                            EDITIOR_JS_INSTANCE   (libs/.../config.ts)\n                        \n                        \n                            EDITORJS_FORM_VALUE_ACCESSOR   (libs/.../container.class.ts)\n                        \n                        \n                            EDITORJS_MATERIAL_FIELD_CONTROL   (libs/.../editorjs-mat-field.component.ts)\n                        \n                        \n                            EDITORJS_MODULE_IMPORT   (libs/.../injector.ts)\n                        \n                        \n                            EditorJSInstance   (libs/.../injector.ts)\n                        \n                        \n                            environment   (apps/.../environment.prod.ts)\n                        \n                        \n                            environment   (apps/.../environment.ts)\n                        \n                        \n                            FOR_ROOT_OPTIONS_TOKEN   (libs/.../config.ts)\n                        \n                        \n                            getGreeting   (apps/.../app.po.ts)\n                        \n                        \n                            InitialPlugins   (libs/.../plugins.ts)\n                        \n                        \n                            MAP_DEFAULTS   (libs/.../injector.ts)\n                        \n                        \n                            NGX_EDITORJS_CONFIG   (libs/.../config.ts)\n                        \n                        \n                            ngxEditorjsDemoRoutes   (libs/.../ngx-editorjs-demo.routes.ts)\n                        \n                        \n                            ngxHideableHeaderDemoRoutes   (libs/.../ngx-hideable-header-demo.module.ts)\n                        \n                        \n                            TAG_COMPONENT_FIELD_CONTROL   (libs/.../tag.component.ts)\n                        \n                        \n                            TAG_COMPONENT_VALUE_ACCESSOR   (libs/.../tag.component.ts)\n                        \n                        \n                            UserPlugins   (libs/.../plugins.ts)\n                        \n                        \n                            UserPlugins   (libs/.../plugins.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    apps/ngx-tinynodes/src/app/app-routing.module.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            appRoutes\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     Route[]\n\n                        \n                    \n                    \n                        \n                            Default value : [\n  {\n    path: '',\n    redirectTo: 'home',\n    pathMatch: 'full'\n  },\n  {\n    path: 'home',\n    component: HomePageComponent\n  }\n]\n                        \n                    \n\n                \n                    \n                        The main application routes\n\n                    \n                \n\n            \n        \n\n    libs/ngx-editorjs/src/lib/config/editor-config.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            DEFAULT_HOLDER_ID\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Default value : 'editor-js'\n                        \n                    \n\n                \n                    \n                        The default holder ID to attach EditorJS to\n\n                    \n                \n\n            \n        \n\n    libs/ngx-editorjs/src/lib/types/config.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            EDITIOR_JS_INSTANCE\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : new InjectionToken('EDITIOR_JS_INSTANCE')\n                        \n                    \n\n                \n                    \n                        Get the EditorJS instance injected into the app\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            FOR_ROOT_OPTIONS_TOKEN\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : new InjectionToken('FOR_ROOT_OPTIONS_TOKEN')\n                        \n                    \n\n                \n                    \n                        Internal token for injecting the NgxEditorJSConfig into the config factory\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            NGX_EDITORJS_CONFIG\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : new InjectionToken('NGX_EDITORJS_CONFIG')\n                        \n                    \n\n                \n                    \n                        Injection token provied for NgxEditorJSConfig\n\n                    \n                \n\n            \n        \n\n    libs/ngx-editorjs/src/lib/containers/base/container.class.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            EDITORJS_FORM_VALUE_ACCESSOR\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Provider\n\n                        \n                    \n                    \n                        \n                            Default value : {\n  provide: NG_VALUE_ACCESSOR,\n  useExisting: forwardRef(() => NgxEditorJSBaseComponent),\n  multi: true\n}\n                        \n                    \n\n                \n                    \n                        The NgxEditorJSBaseComponent Provider for NG_VALUE_ACCESSOR\n\n                    \n                \n\n            \n        \n\n    libs/ngx-editorjs/src/lib/containers/editorjs-mat-field/editorjs-mat-field.component.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            EDITORJS_MATERIAL_FIELD_CONTROL\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Provider\n\n                        \n                    \n                    \n                        \n                            Default value : {\n  provide: MatFormFieldControl,\n  useExisting: forwardRef(() => NgxEditorJSMatFieldComponent),\n  multi: true\n}\n                        \n                    \n\n                \n                    \n                        Provider for the EditorJS Material Field Component\n\n                    \n                \n\n            \n        \n\n    libs/ngx-editorjs/src/lib/types/injector.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            EDITORJS_MODULE_IMPORT\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : new InjectionToken('EDITORJS_MODULE_IMPORT')\n                        \n                    \n\n                \n                    \n                        Injection token for the EditorJS class\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            EditorJSInstance\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : new InjectionToken('EditorJSInstance')\n                        \n                    \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            MAP_DEFAULTS\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     []\n\n                        \n                    \n                    \n                        \n                            Default value : [['hasChangedMap', { time: 0, blocks: [] }], ['isReadyMap', false], ['hasSavedMap', false]]\n                        \n                    \n\n                \n                    \n                        Default values for each internal map\n\n                    \n                \n\n            \n        \n\n    apps/ngx-tinynodes/src/environments/environment.prod.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            environment\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         object\n\n                        \n                    \n                    \n                        \n                            Default value : {\n  production: true\n}\n                        \n                    \n\n\n            \n        \n\n    apps/ngx-tinynodes/src/environments/environment.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            environment\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         object\n\n                        \n                    \n                    \n                        \n                            Default value : {\n  production: false\n}\n                        \n                    \n\n\n            \n        \n\n    apps/ngx-tinynodes-e2e/src/support/app.po.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            getGreeting\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : () => cy.get('h1')\n                        \n                    \n\n\n            \n        \n\n    libs/ngx-editorjs-plugins/src/lib/types/plugins.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            InitialPlugins\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : new InjectionToken('InitialPlugins')\n                        \n                    \n\n                \n                    \n                        The Injection token for initial plugins as defined in the ngx-editorjs module\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            UserPlugins\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : new InjectionToken('UserPlugins')\n                        \n                    \n\n                \n                    \n                        The injection token for adding plugins via your own application\n\n                    \n                \n\n            \n        \n\n    libs/ngx-editorjs-demo/src/lib/ngx-editorjs-demo.routes.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            ngxEditorjsDemoRoutes\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     Route[]\n\n                        \n                    \n                    \n                        \n                            Default value : [\n  {\n    path: 'ngx-editorjs-demo',\n    component: NgxEditorJSDemoHomeComponent\n  },\n  {\n    path: 'ngx-editorjs-demo/angular-component',\n    component: PageContainerComponent\n  },\n  {\n    path: 'ngx-editorjs-demo/angular-form',\n    component: FormContainerComponent\n  }\n]\n                        \n                    \n\n\n            \n        \n\n    libs/ngx-hideable-header-demo/src/lib/ngx-hideable-header-demo.module.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            ngxHideableHeaderDemoRoutes\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     Route[]\n\n                        \n                    \n                    \n                        \n                            Default value : []\n                        \n                    \n\n\n            \n        \n\n    libs/ngx-editorjs-demo/src/lib/components/tag-component/tag.component.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            TAG_COMPONENT_FIELD_CONTROL\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Provider\n\n                        \n                    \n                    \n                        \n                            Default value : {\n  provide: MatFormFieldControl,\n  useExisting: forwardRef(() => NgxEditorJSDemoTagComponent),\n  multi: true\n}\n                        \n                    \n\n                \n                    \n                        Provider for Material field support\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            TAG_COMPONENT_VALUE_ACCESSOR\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Provider\n\n                        \n                    \n                    \n                        \n                            Default value : {\n  provide: NG_VALUE_ACCESSOR,\n  useExisting: forwardRef(() => NgxEditorJSDemoTagComponent),\n  multi: true\n}\n                        \n                    \n\n                \n                    \n                        Tag Value Accessor\n\n                    \n                \n\n            \n        \n\n    libs/ngx-editorjs/src/lib/types/plugins.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            UserPlugins\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : new InjectionToken('UserPlugins')\n                        \n                    \n\n                \n                    \n                        The injection token for adding plugins via your own application\n\n                    \n                \n\n            \n        \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"additional-documentation/tinynodes-library-docs.html":{"url":"additional-documentation/tinynodes-library-docs.html","title":"additional-page - Tinynodes Library Docs","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nNgx-Tinynodes Libraries\nHere you can find all the README and CHANGELOG details of all projects released to NPM\n\nPlease note due to a bug in CompoDoc the `README.md` files are currently not generated correctly - these are rendered correctly on GitHub and NPM.\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"additional-documentation/tinynodes-library-docs/ngx-editorjs-readme.html":{"url":"additional-documentation/tinynodes-library-docs/ngx-editorjs-readme.html","title":"additional-page - ngx-editorjs Readme","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nNgx-EditorJS\nThis library provides Angular support for EditorJS. Inside the module you will find:\n\nNgxEditorJSDirective - An Angular Directive used to attach an EditorJS instance to any block DOM element\nNgxEditorJSComponent - An out-of-the-box Angular component that is Reactive Forms compatible\nNgxEditorJSMaterialFieldComponent An Angular Material Form Field component that provides all the required properties and life-cycle events required. See the Form Demo on an example usage\nNgxEditorJSBaseComponent - A base Angular component that is Reactive form compatible but with no template, can be used to create custom UI framework containers\nNgxEditorJSService - A Service that can be injected into an application to provide a interface to interact with EditorJS instances. Underneath are the private NgxEditorJSPluginService and NgxEditorJSInstanceService services. These are private but can be imported via ɵNgxEditorJSPluginService and ɵNgxEditorJSInstanceService from the library if you want to use them.\n\nWithin these components you will be able to access the underlying EditorJS instance, for use see the EditorJS API Docs\nYou can see a demo in action or download it\non GitHub to see how it was implemented.\nFor changes see the CHANGELOG\nInstalling and usage\nInstall the library via npm along with the plugins module and EditorJS module. For each plugin you want to use you also need to install it's dependency - see the Plugin Docs for more information.\n```bash\n\nnpm install @tinynodes/ngx-editorjs @tinynodes/ngx-editorjs-plugins @editorjs/editorjs @editorjs/paragraph....\n```\n\nOnce installed, include the NgxEditorJSModule module in your project with the forRoot method. The forRoot takes an optional configuration.\nYou also need to pass a provider for UserPlugins with a factory function that returns an options map tools to provide to the EditorJS instance. An example of this is shows in the demo application\n```typescript\nimport { NgModule } from '@angular/core';\nimport { BrowserModule } from '@angular/platform-browser';\nimport { NgxEditorJSModule } from '@tinynodes/ngx-editorjs';\nimport { AppComponent } from './app.component';\nimport EditorJS from '@editorjs/editorjs';\nimport {\n  PluginParagraphModule,\n  PluginParagraph,\n  PluginHeaderModule,\n  PluginHeader,\n  PluginListModule,\n  PluginList\n} from '@tinynodes/ngx-editorjs-plugins';\nexport function createTools() {\n  return {\n    paragraph: new PluginParagraph(),\n    header: new PluginHeader(),\n    list: new PluginList()\n  };\n}\n@NgModule({\n  declarations: [AppComponent],\n  imports: [\n    BrowserModule,\n    NgxEditorJSModule.forRoot({\n      editorjs: {\n        autofocus: false,\n        holder: 'editor',\n        initialBlock: 'paragraph',\n        data: {\n          time: Date.now(),\n          version: EditorJS.version,\n          blocks: []\n        }\n      }\n    })\n  ],\n  providers: [\n    {\n      provide: UserPlugins,\n      useFactory: createTools\n    }\n  ],\n  bootstrap: [AppComponent]\n})\nexport class AppModule {}\n```\nConfiguration\nEditorJS Config\nThe configuration is deigned to be extendable in the future, so each potential feature has a key. For configuring EditorJS pass the options below into a editorjs key in the config.\nThe module configuration allows EditorJS to be provided with a set of options for use. See the EditorJS docs for more details.\n| Configuration Key  | Description                                                                                                                                                     |\n| ------------------ | --------------------------------------------------------------------------------------------------------------------------------------------------------------- |\n| autofocus        | Sets the EditorJS instance to autofocus on load                                                                                                                 |\n| autosave         | Value of time for the the autosave of EditorJS content to the service when the component when focused, this is used for Reactive forms. Default is 0 to disable |\n| data             | Initial data to load into the editor, this is an OutputData object from EditorJS                                                                              |\n| hideToolbar      | Hides the toolbar by default                                                                                                                                    |\n| holder           | The element ID of the holder, this will set all instances in this module to use this as a default                                                               |\n| initialBlock     | The default block type to use in the editor                                                                                                                     |\n| minHeight        | Height of Editor's bottom area that allows to set focus on the last Block                                                                                       |\n| blockPlaceholder | Placeholder of the first block                                                                                                                                  |\n| sanitizer        | Content sanitizer configurations                                                                                                                                |\nAdding custom tools\nSee Adding Custom Tools\nLinks\n\nDocumentation\nGitHub\nNPM\nAngular Demo\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"additional-documentation/tinynodes-library-docs/ngx-editorjs-readme/ngx-editorjs-changelog.html":{"url":"additional-documentation/tinynodes-library-docs/ngx-editorjs-readme/ngx-editorjs-changelog.html","title":"additional-page - ngx-editorjs Changelog","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nChangelog\nAll notable changes to this project will be documented in this file.\nThe format is based on Keep a Changelog,\nand this project adheres to Semantic Versioning.\n[2.0.0] - 2019-05-22\nThis release is the first big changes to the module and also includes new Material component.\nAdded\n\nNgxEditorJSComponent can be used in Angular Forms via it's ControlValueAccessor\nEditorJSBaseComponent exported and can be used to create custom components\nNgxEditorJSMatFieldComponent provided as a Material field component.\nautosave support now added to both components\napiCall method for calling any EditorJS API method\n\nChanged\n\nplaceholder property of EditorJS config is now blockPlaceholder so it does not clash with the Material property\nEditorJS instance service refactored, available as a private import\nAll public methods now take a InjectorMethodOption object as it's parameter\n\n[1.3.2] - 2019-05-15\nChanged\n\nFixed bug with passing data to EditorJS instance service.\nRemoved rogue console.log\n\n[1.3.0] - 2019-05-15\nAdded\n\n@Input properties on the component and directive for providing EditorJS instance configuration\ncreateEditorJSConfig function available to generate EditorJS configurations\nLots more doc improvements and updated demo\n\nChanged\n\nInternal service now uses an EditorJS injector module and service, provides more robust control and creation of EditorJS instances and controlling them.\n\n[1.2.0] - 2019-05-13\nAdded\n\nAdded all configuration options for EditorJS to the module configuration\n\nChanged\n\nRemoved all plugins from the ngx-editorjs project. All plugins are now provided by the @tinynodes/ngx-editorjs-plugins module and a default set of tools must be provided in an application.\nAdded NgxEditorJSPluginService back to core, all plugins must now be provided with a UserPlugin provider.\n\n[1.1.2] - 2019-05-11\nAdded\n\nImproved internal documentation for generated docs.\n\nRemoved\n\nGenerated docs no longer included in this module - all docs are now available via the generated docs site\n\n[1.1.1] - 2019-05-10\nAdded\n\nGenerated docs via CompoDoc in npm package\nInclude CHANGELOG.md in npm package\n\n[1.1.0] - 2019-05-10\nAdded\n\nEditorJS default paragraph plugin is now included in the default tools, fixes issue where the regenerated component failed to use the default plugin.\n\nChanged\n\nNgxEditorJSService is now provided in the root and now stores multiple editor instances. Getters removed and replaced with methods that take the holder parameter which is the ID of the DOM element the editor should be attached to.\nPlugins are now instances of an Injectable class for AOT and have an instance method of plugin. Also supports shortcut as an optional method that returns the string to set up as the shortcut.\nEditorJSPlugin now renamed BasePlugin and changed from class to interface.\nImproved documentation\n\n[1.0.0] - 2019-05-10\nAdded\n\nInitial release\nReadme, Changelog\nNgxEditorJSModule: That can be imported into the root of a project\nNgxEditorJSDirective: A directive that can attach an EditorJS instance to an element\nNgxEditorJSComponent: A component that is pre-configured to use the directive in any Angular project\nNgxEditorJSService: An Angular service for controlling an EditorJS instance\nDefault plugins for Header and List plugins, documentation on how to add plugins with AOT support\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"additional-documentation/tinynodes-library-docs/ngx-editorjs-plugins-readme.html":{"url":"additional-documentation/tinynodes-library-docs/ngx-editorjs-plugins-readme.html","title":"additional-page - ngx-editorjs-plugins Readme","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nNgx-EditorJS Plugins\nThis module provides a default set of EditorJS plugins for @tinynodes/ngx-editorjs via Angular modules.\nPeer Dependencies\nAll EditorJS plugins are listed as peerDependencies of the project - this is because Angular requires these modules to be in the root. You must manually install these are the root of your Angular application.\n```bash\n\nnpm install @editorjs/paragraph @editorjs/header ....\n```\n\nPlugin List\n| Plugin Name             | Description                                            | Links                                                                                               |\n| ----------------------- | ------------------------------------------------------ | --------------------------------------------------------------------------------------------------- |\n| PluginCodeModule        | Provides a  block editor                       | README GitHub              |\n| PluginHeaderModule      | Provides a  -  block editor                  | README GitHub          |\n| PluginImageModule       | Provides an  block editor + file upload support | README GitHub            |\n| PluginLinkModule        | Provides an  block editor                         | README GitHub              |\n| PluginIListModule       | Provides an / block editor                   | README GitHub              |\n| PluginMarkerModule      | Provides inline text marking                           | README GitHub          |\n| PluginParagraphModule   | Provides an  block editor                         | README GitHub    |\n| PluginSimpleImageModule | Provides an  block editor with paste support    | README GitHub |\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"additional-documentation/tinynodes-library-docs/ngx-editorjs-plugins-readme/ngx-editorjs-plugins-changelog.html":{"url":"additional-documentation/tinynodes-library-docs/ngx-editorjs-plugins-readme/ngx-editorjs-plugins-changelog.html","title":"additional-page - ngx-editorjs-plugins Changelog","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nChangelog\nAll notable changes to this project will be documented in this file.\nThe format is based on Keep a Changelog,\nand this project adheres to Semantic Versioning.\n[1.1.1] - 2019-05-15\nChanged\n\nDocumentation updates\n\n[1.1.0] - 2019-05-13\nRemoved\n\nRemoved the NgxEditorJSPluginService from this module back to core\n\n[1.0.0] - 2019-05-11\nAdded\n\nInitial release of module with default plugins - see README.md for details.\nMoved the internal PluginService to public NgxEditorJSPluginService provided by this module\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"}}
}
