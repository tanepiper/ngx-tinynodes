var COMPODOC_SEARCH_INDEX = {
    "index": {"version":"2.3.6","fields":["title","body"],"fieldVectors":[["title/interfaces/Block.html",[0,0.159,1,0.472]],["body/interfaces/Block.html",[0,0.309,1,0.956,2,0.779,3,0.152,4,0.152,5,0.139,6,0.143,7,0.235,8,1.818,9,0.412,10,2.577,11,0.884,12,0.316,13,0.678,14,1.609,15,2.122,16,2.007,17,1.07,18,1.421,19,1.06,20,3.561,21,2.265,22,2.796,23,0.014,24,0.322,25,1.529,26,2.938,27,1.593,28,1.818,29,2.585,30,2.585,31,1.529,32,1.529,33,2.585,34,1.038,35,2.712,36,2.712,37,1.414,38,1.024,39,2.469,40,1.975,41,2.589,42,3.275,43,2.469,44,3.11,45,2.469,46,1.662,47,1.818,48,1.264,49,2.469,50,2.909,51,2.469,52,1.356,53,2.712,54,1.908,55,2.016,56,1.908,57,1.878,58,1.908,59,1.908,60,1.908,61,1.908,62,2.469,63,1.662,64,1.818,65,0.006,66,0.008,67,0.006]],["title/interfaces/BlockData.html",[0,0.159,68,2.744]],["body/interfaces/BlockData.html",[0,0.277,1,0.877,2,0.803,3,0.157,4,0.157,5,0.143,6,0.146,7,0.24,9,0.692,11,0.774,12,0.312,15,1.805,16,2.067,17,1.577,18,1.307,19,1.538,23,0.014,24,0.332,31,2.219,34,0.562,38,2.352,52,1.374,55,1.769,57,1.17,65,0.006,66,0.008,67,0.006,68,4.374,69,2.183,70,3.667,71,0.407,72,1.789,73,0.461,74,3.479,75,3.479,76,1.17,77,3.262,78,2.57,79,3.262,80,2.183,81,3.862,82,2.654,83,1.401,84,1.789,85,2.469,86,1.513,87,2.183,88,4.785,89,2.147,90,4.029,91,4.029,92,2.049,93,1.965,94,2.183,95,2.654,96,2.203,97,2.315,98,3.262,99,2.654,100,2.315,101,1.712,102,2.469,103,2.654,104,1.212,105,1.456,106,3.262,107,2.067,108,2.654,109,1.712,110,2.682,111,1.641,112,0.985,113,2.469,114,1.965,115,2.183,116,2.769,117,2.315,118,1.35,119,2.315,120,2.793,121,2.793,122,1.873,123,1.35,124,0.354,125,2.203,126,1.35,127,1.909,128,2.469,129,1.35,130,2.469,131,2.654,132,2.315,133,2.654,134,1.641,135,2.469]],["title/interfaces/ChangeMap.html",[0,0.159,136,2.426]],["body/interfaces/ChangeMap.html",[0,0.29,1,0.702,2,1.017,3,0.198,4,0.198,5,0.181,6,0.171,7,0.282,9,0.537,12,0.326,16,2.619,17,1.7,18,1.367,19,1.382,23,0.014,24,0.318,48,1.649,65,0.007,66,0.01,67,0.007,71,0.532,76,1.482,92,2.752,136,3.612,137,3.127,138,5.412,139,4.442,140,3.251,141,2.488,142,1.869,143,4.644,144,1.844,145,2.168,146,2.156,147,2.489,148,2.765,149,2.606,150,2.078,151,3.251,152,2.765,153,2.765,154,2.488,155,2.619,156,2.932,157,2.409]],["title/interfaces/CreateEditorJSOptions.html",[0,0.159,158,3.207]],["body/interfaces/CreateEditorJSOptions.html",[0,0.209,2,1.173,3,0.229,4,0.229,5,0.209,6,0.151,7,0.249,9,0.62,11,0.765,12,0.284,13,1.021,14,1.667,18,1.329,23,0.013,24,0.229,48,2.565,52,1.674,65,0.008,66,0.01,67,0.008,71,0.422,76,1.709,93,4.048,96,2.447,110,3.118,111,3.38,116,3.561,154,2.447,158,5.23,159,5.359,160,5.359,161,3.242,162,5.328,163,5.467,164,2.974,165,3.685,166,4.81]],["title/interfaces/EditorJSChange.html",[0,0.159,156,2.573]],["body/interfaces/EditorJSChange.html",[0,0.289,1,0.826,2,1.008,3,0.197,4,0.197,5,0.18,6,0.13,7,0.214,9,0.533,11,0.639,12,0.325,13,0.877,14,1.513,17,1.663,18,1.313,23,0.014,24,0.317,48,2.389,65,0.007,66,0.01,67,0.007,71,0.53,76,1.468,92,2.692,136,2.74,137,3.099,138,5.294,139,4.384,140,2.466,141,2.221,142,1.418,144,1.827,145,2.149,146,2.473,147,2.466,148,2.74,149,2.591,150,2.06,151,3.232,152,2.74,153,2.74,154,2.801,155,3.401,156,3.808,157,3.02]],["title/interfaces/EditorJSClass.html",[0,0.159,167,2.426]],["body/interfaces/EditorJSClass.html",[0,0.288,1,0.442,2,0.836,3,0.163,4,0.163,5,0.149,6,0.108,7,0.177,9,0.442,11,0.648,12,0.342,13,0.728,14,1.334,15,1.061,18,1.407,22,2.194,23,0.014,24,0.322,34,0.585,40,1.884,52,1.294,55,1.308,57,1.218,65,0.008,66,0.008,67,0.006,71,0.481,72,1.863,73,0.481,76,1.218,92,1.308,96,1.958,109,1.783,118,2.56,120,1.783,121,1.783,125,2.252,127,1.951,141,1.406,142,2.142,144,2.111,146,1.951,149,1.64,150,1.709,154,1.406,157,1.516,161,2.593,164,2.379,165,2.984,167,3.165,168,2.411,169,2.593,170,0.982,171,2.111,172,2.998,173,3.572,174,2.849,175,1.38,176,3.356,177,3.58,178,2.998,179,2.715,180,2.411,181,2.411,182,2.046,183,3.448,184,2.87,185,3.726,186,2.571,187,2.411,188,2.194,189,2.411,190,2.046,191,1.709,192,2.273,193,2.273,194,1.863,195,2.273,196,2.273,197,2.273,198,2.273,199,2.411,200,3.165,201,2.153,202,2.411,203,2.273,204,2.153,205,2.571,206,2.411,207,2.571,208,2.021,209,3.165,210,3.356,211,2.273,212,2.273,213,2.411]],["title/interfaces/EditorJSInstanceConfig.html",[0,0.159,181,2.573]],["body/interfaces/EditorJSInstanceConfig.html",[0,0.279,1,0.432,2,0.817,3,0.159,4,0.159,5,0.146,6,0.105,7,0.173,9,0.432,11,0.693,12,0.336,13,0.711,14,1.312,15,1.037,18,1.35,22,2.159,23,0.014,24,0.32,34,0.572,40,1.611,52,1.552,55,1.791,57,1.19,65,0.008,66,0.008,67,0.006,71,0.475,72,1.82,73,0.469,76,1.19,92,1.277,96,2.411,109,1.741,118,2.758,120,1.741,121,1.741,125,2.224,127,1.927,141,1.374,142,2.124,144,2.077,146,1.927,149,1.602,150,2.34,154,1.926,157,1.481,161,2.551,164,2.34,165,3.653,167,2.221,168,2.355,169,1.82,170,0.893,171,1.481,172,2.103,173,3.056,174,1.999,175,0.968,176,2.355,177,2.512,178,2.103,179,3.52,180,3.302,181,3.302,182,2.803,183,3.496,184,3.029,185,3.932,186,3.522,187,4.133,188,2.159,189,4.133,190,1.999,191,1.669,192,2.221,193,2.221,194,1.82,195,2.221,196,2.221,197,2.221,198,2.221,199,2.355,200,3.114,201,2.103,202,2.355,203,2.221,204,2.103,205,2.512,206,2.355,207,2.512,208,1.996,209,3.114,210,3.302,211,2.221,212,2.221,213,2.355]],["title/interfaces/EditorJSMaterialForm.html",[0,0.159,214,3.552]],["body/interfaces/EditorJSMaterialForm.html",[0,0.233,2,0.507,3,0.099,4,0.099,5,0.09,6,0.065,7,0.108,9,0.268,10,1.676,11,0.245,12,0.256,14,0.919,18,0.836,23,0.014,24,0.194,40,1.591,52,0.775,57,1.908,65,0.004,66,0.006,67,0.004,71,0.539,73,0.292,100,2.868,102,2.466,111,3.415,112,0.984,118,1.349,123,1.673,125,0.853,127,0.739,142,1.128,145,1.081,151,4.09,154,1.349,155,1.306,162,1.559,164,2.033,170,0.5,172,2.561,175,0.951,182,3.204,185,1.241,188,1.875,190,1.241,191,1.036,194,1.13,214,4.902,215,2.019,216,3.356,217,1.823,218,1.823,219,2.651,220,4.063,221,5.625,222,2.316,223,2.316,224,2.316,225,3.059,226,1.676,227,2.466,228,2.826,229,3.192,230,3.192,231,3.663,232,2.466,233,2.312,234,3.959,235,3.663,236,2.019,237,5.164,238,1.306,239,1.823,240,3.054,241,2.868,242,1.676,243,1.559,244,2.637,245,2.019,246,2.019,247,2.434,248,1.823,249,2.434,250,2.316,251,5.007,252,3.192,253,0.765,254,2.019,255,2.065,256,0.92,257,2.316,258,2.019,259,1.823,260,2.019,261,1.559,262,1.462,263,1.559,264,2.019,265,1.676,266,2.019,267,0.666,268,3.737,269,1.676,270,1.559,271,2.121,272,2.316,273,3.743,274,2.316,275,3.059,276,2.316,277,3.663,278,2.316,279,3.567,280,2.803,281,3.663,282,3.938,283,2.316,284,2.316,285,6.494,286,4.533,287,3.014,288,2.316,289,3.663,290,2.316,291,2.316,292,4.929,293,2.316,294,4.543,295,2.316,296,2.316,297,2.316,298,3.663,299,2.316,300,3.663,301,2.316,302,2.316,303,2.316,304,2.316,305,5.98,306,2.316,307,3.663,308,2.316,309,2.316,310,2.316,311,5.459,312,2.316,313,3.663,314,2.316,315,2.019,316,2.651,317,2.316,318,2.019,319,2.561,320,2.316,321,2.651,322,3.663,323,2.316,324,2.316,325,1.823,326,2.316,327,2.316,328,2.316,329,3.663,330,2.316,331,2.316,332,2.316,333,3.663,334,3.663,335,1.183,336,2.316,337,2.316,338,2.316,339,2.18,340,2.651,341,3.663,342,2.316,343,2.316,344,1.512,345,1.676,346,2.651,347,3.059,348,2.316,349,1.241,350,1.676,351,1.676,352,1.306,353,3.959,354,2.316,355,1.676,356,4.543,357,4.543,358,4.543,359,3.959,360,2.316,361,3.663,362,1.676,363,2.316,364,1.823,365,2.019,366,2.019,367,1.462,368,2.019,369,2.019,370,1.559,371,2.316,372,1.676,373,2.316,374,2.316,375,2.019,376,2.316,377,2.316,378,2.316,379,2.316,380,2.316,381,2.316]],["title/interfaces/EditorMap.html",[0,0.159,148,2.426]],["body/interfaces/EditorMap.html",[0,0.291,1,0.704,2,1.022,3,0.2,4,0.2,5,0.182,6,0.172,7,0.283,9,0.54,12,0.318,16,2.633,17,1.702,18,1.37,19,1.39,23,0.014,24,0.318,48,1.658,65,0.007,66,0.01,67,0.007,71,0.533,76,1.49,92,2.755,136,2.78,137,3.144,138,5.417,139,4.445,140,2.502,141,2.242,142,1.439,144,1.854,145,2.18,146,2.161,147,3.263,148,3.625,149,2.615,150,2.089,151,3.263,152,2.78,153,2.78,154,2.495,155,2.633,156,2.948,157,2.417,382,4.67]],["title/interfaces/Header.html",[0,0.159,44,1.751]],["body/interfaces/Header.html",[0,0.308,1,0.951,2,0.79,3,0.154,4,0.154,5,0.141,6,0.102,7,0.168,8,1.844,9,0.418,11,0.875,12,0.302,13,0.688,14,1.489,15,2.02,17,0.764,18,1.409,21,1.615,22,2.449,23,0.014,24,0.323,25,1.551,26,2.949,27,1.615,28,1.844,29,2.61,30,2.61,31,1.551,32,1.551,33,2.61,34,1.083,35,2.739,36,2.739,37,1.433,38,1.038,39,2.493,40,1.988,41,2.603,42,3.793,43,2.493,44,3.327,45,3.449,46,2.386,47,2.61,48,2.106,49,2.493,50,2.925,51,2.493,52,1.365,53,2.739,54,1.935,55,2.032,56,1.935,57,1.893,58,1.935,59,1.935,60,1.935,61,1.935,62,2.493,63,1.685,64,1.844,65,0.006,66,0.008,67,0.006]],["title/interfaces/HeaderBlock.html",[0,0.159,49,1.988]],["body/interfaces/HeaderBlock.html",[0,0.311,1,0.957,2,0.806,3,0.157,4,0.157,5,0.144,6,0.104,7,0.171,8,1.881,9,0.426,11,0.878,12,0.312,13,0.702,14,1.505,15,1.977,17,0.779,18,1.373,21,1.648,22,2.475,23,0.014,24,0.324,25,1.582,26,2.963,27,1.648,28,1.881,29,2.647,30,2.647,31,1.582,32,1.582,33,2.647,34,1.051,35,2.777,36,2.777,37,1.462,38,1.059,39,2.528,40,2.114,41,2.622,42,3.324,43,2.528,44,3.206,45,2.528,46,1.719,47,1.881,48,1.307,49,2.926,50,2.947,51,2.528,52,1.377,53,2.777,54,1.973,55,2.054,56,1.973,57,1.913,58,1.973,59,1.973,60,1.973,61,1.973,62,2.528,63,1.719,64,1.881,65,0.006,66,0.008,67,0.006]],["title/interfaces/Image.html",[0,0.159,50,1.751]],["body/interfaces/Image.html",[0,0.305,1,0.946,2,0.751,3,0.147,4,0.147,5,0.134,6,0.097,7,0.16,8,1.753,9,0.397,11,0.876,12,0.297,13,0.654,14,1.448,15,1.99,17,0.726,18,1.425,21,1.536,22,2.381,23,0.014,24,0.319,25,1.474,26,2.91,27,1.536,28,1.753,29,2.518,30,2.518,31,1.474,32,1.474,33,2.518,34,1.065,35,2.642,36,2.642,37,1.363,38,0.987,39,2.405,40,1.943,41,2.553,42,3.221,43,2.405,44,3.148,45,2.405,46,1.602,47,1.753,48,1.218,49,2.405,50,3.148,51,3.392,52,1.687,53,3.726,54,2.642,55,2.381,56,3.379,57,2.381,58,2.642,59,3.379,60,2.642,61,3.379,62,2.405,63,1.602,64,1.753,65,0.005,66,0.008,67,0.005]],["title/interfaces/ImageBlock.html",[0,0.159,62,1.988]],["body/interfaces/ImageBlock.html",[0,0.311,1,0.957,2,0.806,3,0.157,4,0.157,5,0.144,6,0.104,7,0.171,8,1.881,9,0.426,11,0.878,12,0.312,13,0.702,14,1.505,15,1.977,17,0.779,18,1.373,21,1.648,22,2.475,23,0.014,24,0.324,25,1.582,26,2.963,27,1.648,28,1.881,29,2.647,30,2.647,31,1.582,32,1.582,33,2.647,34,1.051,35,2.777,36,2.777,37,1.462,38,1.059,39,2.528,40,2.114,41,2.622,42,3.324,43,2.528,44,3.14,45,2.528,46,1.719,47,1.881,48,1.307,49,2.528,50,3.057,51,2.528,52,1.377,53,2.777,54,1.973,55,2.054,56,1.973,57,1.913,58,1.973,59,1.973,60,1.973,61,1.973,62,2.926,63,1.719,64,1.881,65,0.006,66,0.008,67,0.006]],["title/interfaces/InjectorApiCallOptions.html",[0,0.159,209,2.426]],["body/interfaces/InjectorApiCallOptions.html",[0,0.28,1,0.435,2,0.823,3,0.161,4,0.161,5,0.147,6,0.106,7,0.175,9,0.435,11,0.696,12,0.339,13,0.716,14,1.319,15,1.044,18,1.46,22,2.17,23,0.014,24,0.321,34,0.576,40,1.62,52,1.515,55,1.287,57,1.199,65,0.008,66,0.008,67,0.006,71,0.477,72,1.833,73,0.473,76,1.199,92,1.287,96,1.936,109,2.454,118,2.545,120,1.754,121,1.754,125,2.233,127,1.934,141,1.384,142,2.207,144,2.087,146,1.934,149,1.614,150,1.681,154,1.384,157,1.492,161,2.958,164,2.352,165,2.958,167,2.237,168,2.372,169,1.833,170,0.896,171,1.492,172,2.119,173,3.066,174,2.013,175,0.975,176,2.372,177,2.53,178,2.119,179,1.919,180,2.372,181,2.372,182,2.013,183,3.644,184,3.146,185,3.94,186,2.53,187,2.372,188,2.17,189,2.372,190,2.013,191,1.681,192,2.237,193,2.237,194,1.833,195,2.237,196,2.237,197,2.237,198,2.237,199,2.372,200,3.129,201,2.119,202,2.372,203,2.237,204,2.119,205,2.53,206,2.372,207,3.54,208,2.284,209,3.61,210,4.522,211,2.237,212,2.237,213,2.372]],["title/interfaces/InjectorApiCallResponse.html",[0,0.159,212,2.426]],["body/interfaces/InjectorApiCallResponse.html",[0,0.283,1,0.452,2,0.855,3,0.167,4,0.167,5,0.152,6,0.11,7,0.182,9,0.452,11,0.572,12,0.339,13,0.744,14,1.355,15,1.085,18,1.367,22,2.756,23,0.014,24,0.324,34,0.598,40,1.907,52,1.309,55,1.337,57,1.246,65,0.011,66,0.009,67,0.006,71,0.487,72,1.905,73,0.492,76,1.246,92,1.337,96,1.989,109,1.823,118,2.581,120,1.823,121,1.823,125,2.279,127,1.975,141,1.438,142,2.057,144,2.144,146,1.975,149,1.677,150,1.748,154,1.438,157,1.551,161,2.634,164,2.416,165,3.019,167,2.325,168,2.466,169,1.905,170,0.911,171,1.551,172,2.202,173,3.118,174,2.093,175,1.014,176,2.466,177,2.63,178,2.202,179,1.994,180,2.466,181,2.466,182,2.093,183,3.469,184,2.893,185,3.756,186,2.63,187,2.466,188,2.229,189,2.466,190,2.093,191,1.748,192,2.325,193,2.325,194,1.905,195,2.325,196,2.325,197,2.325,198,2.325,199,2.466,200,3.215,201,2.202,202,2.466,203,2.325,204,2.202,205,2.63,206,2.466,207,2.63,208,2.207,209,3.685,210,3.409,211,3.215,212,3.215,213,2.466]],["title/interfaces/InjectorMethodOption.html",[0,0.159,203,2.426]],["body/interfaces/InjectorMethodOption.html",[0,0.279,1,0.43,2,0.813,3,0.159,4,0.159,5,0.145,6,0.105,7,0.173,9,0.43,11,0.729,12,0.338,13,0.708,14,1.308,15,1.816,18,1.398,22,2.152,23,0.014,24,0.32,34,0.569,40,1.606,52,1.647,55,1.272,57,1.922,65,0.008,66,0.008,67,0.006,71,0.474,72,1.812,73,0.467,76,1.185,92,1.272,96,1.92,109,1.734,118,2.8,120,1.734,121,1.734,125,2.219,127,1.922,141,1.92,142,2.013,144,2.594,146,2.084,149,1.595,150,1.662,154,1.368,157,1.475,161,2.939,164,2.333,165,2.939,167,2.211,168,2.345,169,1.812,170,0.892,171,1.475,172,2.094,173,3.05,174,1.99,175,0.964,176,2.345,177,2.501,178,2.094,179,1.897,180,2.345,181,2.345,182,1.99,183,3.636,184,2.945,185,3.824,186,2.501,187,2.345,188,2.152,189,2.345,190,1.99,191,1.662,192,2.211,193,2.211,194,1.812,195,2.211,196,2.211,197,2.211,198,2.211,199,2.345,200,3.587,201,2.094,202,2.345,203,3.104,204,2.94,205,3.511,206,4.125,207,2.501,208,1.991,209,3.104,210,3.292,211,2.211,212,2.211,213,2.345]],["title/interfaces/List.html",[0,0.159,26,1.618]],["body/interfaces/List.html",[0,0.308,1,0.951,2,0.79,3,0.154,4,0.154,5,0.141,6,0.102,7,0.168,8,1.844,9,0.418,11,0.877,12,0.302,13,0.688,14,1.489,15,2.02,17,0.764,18,1.366,21,1.615,22,2.918,23,0.014,24,0.323,25,1.551,26,3.105,27,1.615,28,1.844,29,2.61,30,2.61,31,1.551,32,1.551,33,3.295,34,1.083,35,3.789,36,3.789,37,1.433,38,1.038,39,2.493,40,1.988,41,2.603,42,3.295,43,2.493,44,3.123,45,2.493,46,1.685,47,1.844,48,1.282,49,2.493,50,2.925,51,2.493,52,1.365,53,2.739,54,1.935,55,2.032,56,1.935,57,1.893,58,1.935,59,1.935,60,1.935,61,1.935,62,2.493,63,1.685,64,1.844,65,0.006,66,0.008,67,0.006]],["title/interfaces/ListBlock.html",[0,0.159,39,1.988]],["body/interfaces/ListBlock.html",[0,0.308,1,0.957,2,0.802,3,0.156,4,0.156,5,0.143,6,0.103,7,0.17,8,1.87,9,0.424,11,0.878,12,0.318,13,0.698,14,1.5,15,1.974,17,0.774,18,1.371,21,1.638,22,2.468,23,0.014,24,0.324,25,1.573,26,3.049,27,1.638,28,1.87,29,2.636,30,2.636,31,1.573,32,1.573,33,2.636,34,1.088,35,2.766,36,2.766,37,2.049,38,1.484,39,2.917,40,2.109,41,2.617,42,3.316,43,2.518,44,3.135,45,2.518,46,1.709,47,1.87,48,1.3,49,2.518,50,2.94,51,2.518,52,1.373,53,2.766,54,1.962,55,2.047,56,1.962,57,1.907,58,1.962,59,1.962,60,1.962,61,1.962,62,2.518,63,1.709,64,1.87,65,0.006,66,0.008,67,0.006]],["title/classes/MockEditorJS.html",[170,0.556,383,3.207]],["body/classes/MockEditorJS.html",[3,0.205,4,0.205,5,0.187,6,0.221,7,0.364,11,0.815,13,0.913,14,1.553,18,1.139,19,2.288,23,0.014,24,0.265,52,1.013,65,0.008,66,0.01,67,0.008,71,0.377,104,1.583,110,2.831,141,1.764,146,2.313,157,1.902,170,0.845,173,3.385,179,2.447,188,1.977,280,2.77,344,2.555,383,4.872,384,3.468,385,4.176,386,4.965,387,4.965,388,5.398,389,4.791,390,4.088,391,6.192,392,2.144,393,4.791,394,4.791,395,4.965,396,4.791,397,4.791,398,4.176,399,3.77,400,3.491,401,4.176,402,3.77,403,4.176,404,4.872,405,4.176,406,5.396,407,4.176,408,3.77,409,3.226,410,4.176,411,3.226,412,4.176]],["title/injectables/MockNgZone.html",[413,1.824,414,3.552]],["body/injectables/MockNgZone.html",[3,0.206,4,0.206,5,0.188,6,0.218,7,0.358,9,0.557,11,0.729,13,0.918,14,1.559,19,2.238,23,0.013,24,0.206,34,0.738,40,1.914,52,1.314,65,0.008,66,0.01,67,0.008,71,0.379,73,0.606,104,2.053,107,2.716,127,1.982,164,2.156,170,0.657,171,2.731,179,3.933,188,2.565,260,5.416,279,2.46,280,2.78,344,2.839,345,3.487,392,2.78,413,2.78,414,5.416,415,2.868,416,7.701,417,6.712,418,4.818,419,6.214,420,6.555,421,6.878,422,3.031,423,4.89,424,6.214,425,7.267,426,6.214,427,6.214,428,4.818,429,7.267,430,6.214,431,4.818,432,4.818,433,5.995,434,6.214,435,4.818,436,4.818]],["title/classes/MockPlugin.html",[170,0.556,399,3.207]],["body/classes/MockPlugin.html",[3,0.222,4,0.222,5,0.203,6,0.201,7,0.331,13,0.99,18,0.956,19,1.94,23,0.014,24,0.279,65,0.008,66,0.01,67,0.008,71,0.409,110,2.691,141,1.914,146,2.08,157,2.063,170,0.89,171,2.063,173,3.044,188,2.145,280,2.918,344,2.941,383,4.09,384,3.761,385,4.529,386,3.761,387,3.761,388,4.09,390,3.676,395,4.719,398,4.529,399,5.131,400,4.339,401,4.529,402,4.09,403,4.529,404,5.131,405,4.529,406,5.683,407,4.529,408,4.09,409,3.499,410,4.529,411,3.499,412,4.529,422,3.18,437,5.197,438,5.197]],["title/interfaces/NgxEditorJSConfig.html",[0,0.159,439,2.95]],["body/interfaces/NgxEditorJSConfig.html",[0,0.207,1,0.832,2,0.832,3,0.162,4,0.162,5,0.148,6,0.107,7,0.177,9,0.44,11,0.797,12,0.321,13,0.724,14,1.33,15,1.998,18,1.406,23,0.014,24,0.297,34,1.102,41,2.026,48,2.166,52,1.711,57,2.293,65,0.006,66,0.008,67,0.006,71,0.417,72,1.855,73,0.479,76,1.213,96,2.647,104,1.751,110,2.518,111,2.372,112,1.423,117,3.346,120,1.775,121,2.474,122,3.371,125,2.247,127,1.947,140,2.84,142,1.88,144,2.621,161,1.855,164,2.372,165,2.585,169,1.855,183,3.082,184,1.569,191,1.701,204,2.144,271,2.474,286,3.836,347,3.569,349,2.84,390,2.144,400,2.988,439,4.778,440,2.992,441,5.195,442,5.195,443,5.195,444,5.195,445,5.195,446,5.658,447,4.62,448,3.836,449,3.346,450,3.346,451,4.171,452,4.171,453,4.62,454,4.62,455,3.569,456,4.62,457,3.836,458,3.836,459,4.171,460,5.195,461,2.56,462,2.752,463,2.992,464,2.56,465,2.992,466,2.752,467,2.56,468,2.752,469,2.992,470,2.263,471,2.992,472,2.992]],["title/components/NgxEditorJSDemoHomeComponent.html",[228,1.682,473,2.298]],["body/components/NgxEditorJSDemoHomeComponent.html",[3,0.181,4,0.181,5,0.165,6,0.12,7,0.197,12,0.334,23,0.013,24,0.181,27,1.894,63,2.663,65,0.007,66,0.009,67,0.007,71,0.333,73,0.533,101,2.663,104,2.132,116,3.701,118,2.543,123,2.88,124,0.667,142,1.758,170,0.578,175,1.481,190,3.701,208,1.885,216,3.701,228,3.228,240,2.161,244,2.161,249,2.268,251,4.36,255,2.386,261,3.841,262,4.99,263,3.841,265,4.129,335,3.527,339,2.52,349,3.057,352,4.352,473,3.894,474,3.063,475,2.52,476,3.063,477,4.233,478,3.689,479,3.689,480,2.85,481,4.332,482,7.591,483,5.624,484,4.972,485,3.324,486,4.49,487,5.435,488,4.129,489,4.129,490,4.49,491,5.705,492,4.129,493,3.217,494,3.863,495,4.998,496,5.705,497,5.705,498,1.818,499,3.841,500,2.268,501,4.998,502,3.063,503,3.063,504,3.063,505,3.063,506,2.52,507,2.663,508,3.063,509,2.52,510,2.268,511,3.063,512,2.52,513,2.065,514,3.063,515,2.386,516,1.818,517,2.85,518,2.85,519,3.063]],["title/modules/NgxEditorJSDemoMaterialModule.html",[124,0.393,520,2.573]],["body/modules/NgxEditorJSDemoMaterialModule.html",[3,0.225,4,0.225,5,0.206,6,0.149,7,0.245,12,0.281,23,0.013,24,0.225,26,2.093,65,0.008,66,0.01,67,0.008,71,0.65,73,0.663,170,0.719,239,4.148,240,2.692,520,4.153,521,1.465,522,4.148,523,5.271,524,1.958,525,7.171,526,5.271,527,6.25,528,5.271,529,6.25,530,5.271,531,6.25,532,5.271,533,7.171,534,5.271,535,6.25,536,7.171,537,5.271,538,6.25,539,5.271,540,6.25,541,4.594,542,7.171,543,5.271,544,2.972,545,2.359]],["title/directives/NgxEditorJSDirective.html",[244,2.081,500,2.184]],["body/directives/NgxEditorJSDirective.html",[1,0.769,3,0.065,4,0.065,5,0.059,6,0.209,7,0.344,9,0.463,11,0.762,12,0.318,13,0.29,15,0.721,18,1.288,19,2.189,23,0.014,24,0.065,25,1.115,32,2.099,34,0.614,37,1.346,38,0.747,41,0.992,42,2.045,48,1.95,52,0.717,55,1.786,57,1.753,65,0.002,66,0.004,67,0.002,71,0.411,73,0.192,76,0.486,84,1.953,93,2.146,96,1.654,97,1.639,101,1.583,104,1.484,109,1.212,110,2.017,111,3.02,112,1.075,116,1.391,118,2.361,122,2.045,123,0.956,125,0.956,127,1.894,139,0.817,140,1.391,141,1.475,142,2.217,144,0.605,145,0.712,146,1.894,149,0.655,150,1.792,151,1.817,154,0.956,157,1.783,162,3.699,163,4.148,165,2.384,170,0.208,171,1.941,173,0.712,174,2.146,175,0.674,183,2.928,184,1.072,188,0.629,194,1.953,195,0.908,225,2.283,227,2.696,228,2.589,232,4.117,233,2.528,241,2.141,242,1.103,243,1.026,244,1.326,247,2.944,248,1.2,261,1.748,262,1.639,270,1.748,271,2.565,273,3.857,275,1.748,279,3.031,280,2.187,282,2.532,286,2.455,287,2.146,292,2.043,311,2.263,319,2.258,321,1.879,325,2.043,335,1.326,340,3.251,344,1.072,346,2.898,347,1.748,349,3.617,352,2.258,353,2.956,355,2.898,362,1.103,364,2.043,367,1.639,368,2.263,370,1.026,372,2.898,375,2.956,386,1.879,387,2.898,392,1.518,395,2.898,400,1.464,408,2.043,411,1.026,422,1.267,433,5.329,441,4.105,442,3.151,443,3.535,444,3.535,445,3.535,446,4.105,449,1.639,450,3.086,451,2.043,455,1.748,457,1.879,460,3.535,475,1.546,480,1.026,492,1.879,494,0.817,495,1.879,499,1.748,500,3.711,517,1.026,518,1.748,546,7.4,547,1.525,548,2.043,549,3.151,550,2.263,551,2.956,552,4.51,553,2.597,554,3.49,555,4.005,556,2.043,557,2.597,558,2.669,559,3.49,560,3.392,561,3.392,562,2.597,563,1.879,564,3.122,565,4.995,566,1.525,567,4.005,568,2.455,569,1.525,570,3.392,571,4.005,572,1.525,573,2.043,574,1.525,575,1.748,576,2.597,577,2.263,578,2.043,579,2.597,580,2.263,581,2.597,582,2.597,583,2.043,584,2.597,585,1.525,586,2.263,587,2.263,588,4.324,589,1.525,590,1.525,591,2.898,592,2.263,593,1.525,594,2.597,595,1.525,596,1.525,597,2.597,598,2.597,599,2.597,600,1.525,601,2.597,602,1.525,603,1.525,604,5.936,605,2.263,606,1.525,607,2.263,608,1.525,609,1.525,610,1.525,611,1.525,612,2.597,613,1.525,614,1.103,615,1.525,616,1.879,617,3.535,618,2.597,619,2.597,620,4.005,621,1.525,622,2.263,623,2.597,624,3.151,625,1.879,626,2.263,627,2.597,628,2.263,629,2.263,630,2.597,631,2.597,632,3.024,633,1.525,634,2.263,635,1.329,636,1.525,637,2.455,638,1.525,639,1.525,640,1.525,641,1.525,642,1.525,643,1.525,644,1.525,645,2.263,646,1.525,647,1.525,648,1.329,649,1.329,650,1.525,651,1.329,652,1.525,653,1.525,654,1.525,655,1.525,656,2.898,657,1.525,658,4.888,659,1.525,660,1.329,661,1.525,662,2.956,663,1.525,664,1.525,665,1.525,666,1.525,667,1.525,668,1.525,669,1.525,670,1.525,671,1.525,672,3.535,673,1.525,674,1.525,675,1.525,676,1.329,677,1.525,678,1.525,679,1.525,680,2.597,681,1.525,682,1.329,683,1.525,684,1.525,685,3.392,686,1.525,687,1.525,688,1.2,689,1.525,690,1.525,691,1.525,692,1.525,693,1.329,694,1.329,695,1.525,696,1.525,697,1.525,698,1.525,699,1.525,700,1.525,701,1.525,702,1.525,703,1.525,704,1.525]],["title/modules/NgxEditorJSModule.html",[124,0.393,705,2.573]],["body/modules/NgxEditorJSModule.html",[3,0.143,4,0.143,5,0.13,6,0.137,7,0.225,9,0.56,10,2.42,11,0.354,12,0.304,19,0.995,23,0.014,24,0.207,34,0.741,37,1.921,52,1.569,65,0.005,66,0.008,67,0.005,71,0.622,73,0.421,76,1.067,96,2.294,101,3.397,104,1.105,109,2.908,110,2.933,124,0.638,142,1.919,170,0.66,171,1.327,172,2.728,175,1.256,179,2.471,184,2.571,198,3.384,201,2.728,216,2.592,217,2.631,238,1.885,239,2.631,240,1.707,244,3.937,245,2.914,246,2.914,247,3.693,248,2.631,249,4.131,253,2.405,255,4.347,267,1.791,275,3.257,280,2.544,282,1.885,344,1.38,352,2.728,390,3.885,392,1.496,422,1.631,462,3.501,464,3.828,467,2.251,468,4.785,470,2.88,485,2.165,486,3.807,487,3.807,493,3.513,498,1.436,521,0.929,524,1.692,535,4.217,540,4.217,541,2.914,544,1.885,545,2.544,575,3.257,614,2.42,705,5.043,706,1.436,707,2.903,708,1.707,709,2.914,710,2.914,711,2.914,712,2.914,713,2.471,714,1.561,715,1.561,716,4.217,717,2.914,718,4.217,719,4.903,720,5.685,721,4.838,722,3.344,723,3.344,724,6.23,725,5.685,726,3.054,727,1.99,728,4.838,729,4.217,730,4.955,731,3.344,732,3.344,733,2.914,734,3.344,735,2.914,736,2.914,737,2.914,738,3.344,739,2.442,740,4.955,741,4.955,742,2.914,743,3.344,744,3.344]],["title/interfaces/NgxEditorJSModuleConfig.html",[0,0.159,390,2.298]],["body/interfaces/NgxEditorJSModuleConfig.html",[0,0.23,1,0.764,2,0.97,3,0.189,4,0.189,5,0.173,6,0.125,7,0.206,9,0.512,11,0.469,12,0.341,13,0.844,14,1.475,15,1.634,18,1.214,23,0.014,24,0.313,34,1.012,41,1.693,48,1.572,52,1.244,57,1.876,65,0.007,66,0.009,67,0.007,71,0.463,72,2.16,73,0.557,76,1.413,96,2.771,104,1.463,110,2.427,111,1.982,112,1.189,117,2.796,120,2.068,121,2.745,122,3.003,125,2.431,127,2.106,140,2.373,142,1.812,144,2.335,161,2.869,164,1.982,165,3.431,169,2.16,183,2.068,184,2.427,191,1.982,204,3.316,271,2.068,286,3.205,347,2.982,349,2.373,390,3.316,400,2.497,439,4.778,440,3.485,441,3.485,442,3.485,443,3.485,444,3.485,445,3.485,446,4.628,447,3.86,448,3.205,449,2.796,450,2.796,451,3.485,452,3.485,453,3.86,454,3.86,455,2.982,456,3.86,457,3.205,458,3.205,459,3.485,460,4.628,461,3.959,462,4.256,463,3.485,464,2.982,465,3.485,466,3.205,467,2.982,468,3.205,469,3.485,470,2.636,471,3.485,472,3.485]],["title/injectables/NgxEditorJSPluginService.html",[413,1.824,745,2.426]],["body/injectables/NgxEditorJSPluginService.html",[3,0.127,4,0.127,5,0.116,6,0.194,7,0.319,9,0.682,11,0.668,12,0.318,13,0.568,17,1.626,18,1.4,19,1.968,23,0.014,24,0.127,26,2.796,34,0.815,37,2.341,38,2.283,52,1.45,65,0.005,66,0.007,67,0.005,71,0.35,73,0.375,78,3.301,81,1.68,84,2.169,89,1.469,92,2.412,93,3.544,94,3.165,96,2.436,98,4.176,104,2.084,107,3.324,112,0.8,118,1.637,125,1.097,132,4.807,134,1.334,163,3.218,166,3.218,169,2.876,170,0.607,171,2.858,267,1.278,273,4.152,279,2.715,280,3.28,282,3.556,287,1.597,319,1.68,344,1.23,392,2.822,413,1.989,415,1.774,422,2.169,461,3.969,493,2.507,524,1.323,564,2.27,573,3.499,591,3.218,624,3.499,719,4.185,745,3.51,746,5.973,747,2.98,748,3.875,749,3.969,750,4.635,751,4.446,752,5.896,753,4.446,754,4.446,755,4.446,756,2.98,757,2.98,758,4.446,759,2.98,760,2.98,761,3.875,762,4.446,763,2.98,764,5.896,765,5.138,766,4.446,767,4.446,768,2.98,769,4.446,770,3.875,771,2.98,772,1.28,773,2.98,774,2.345,775,2.98,776,2.98,777,2.597,778,2.98,779,2.98,780,2.98,781,4.446,782,4.446,783,2.98,784,4.446,785,4.446,786,2.98,787,2.597,788,2.98,789,4.446,790,2.98,791,4.446,792,2.98,793,2.98,794,2.98,795,2.98,796,4.446,797,2.98]],["title/modules/NgxEditorJSPluginServiceModule.html",[124,0.393,798,2.744]],["body/modules/NgxEditorJSPluginServiceModule.html",[3,0.229,4,0.229,5,0.21,6,0.152,7,0.25,12,0.229,23,0.013,24,0.229,38,1.544,65,0.008,66,0.01,67,0.008,71,0.595,73,0.676,112,1.787,119,4.201,124,0.518,126,2.663,129,2.663,134,2.978,170,0.733,253,2.39,256,2.642,267,2.079,498,2.306,521,1.492,524,1.98,545,2.403,706,2.306,707,2.742,708,2.742,713,3.398,714,2.507,715,2.507,739,2.858,740,4.68,741,4.68,745,4.713,746,4.68,772,2.306,798,5.331,799,4.68,800,4.68,801,5.37,802,3.752,803,3.197,804,5.37]],["title/injectables/NgxEditorJSService.html",[247,2.184,413,1.824]],["body/injectables/NgxEditorJSService.html",[3,0.048,4,0.048,5,0.043,6,0.162,7,0.266,9,0.644,11,0.59,12,0.333,13,0.212,15,0.74,18,0.751,19,1.657,21,0.884,22,0.46,23,0.014,24,0.048,32,0.849,34,0.408,37,1.621,38,0.568,52,1.242,65,0.009,66,0.003,67,0.002,71,0.391,73,0.14,76,0.355,78,1.899,92,1.264,93,1.728,94,1.177,96,1.187,97,1.248,101,0.923,104,1.893,107,3.934,109,1.244,110,1.686,111,2.412,112,0.531,113,1.331,116,2.188,118,2.549,119,2.036,125,1.504,127,1.916,136,1.177,139,1.978,141,2.05,142,2.076,144,1.465,145,0.52,146,1.584,147,2.661,148,1.586,149,2.024,150,1.443,151,2.369,152,1.177,153,1.177,154,2.211,157,0.785,158,2.538,161,3.762,163,0.806,164,0.499,165,1.299,167,1.919,169,1.573,170,0.363,171,2.432,173,0.923,174,1.059,175,0.513,178,0.628,179,1.009,182,1.059,183,2.803,184,3.175,185,3.766,187,1.248,188,1.523,189,1.248,191,1.978,192,0.663,193,0.663,194,0.964,196,0.663,197,0.663,201,0.628,203,4.265,208,2.353,209,1.919,210,2.33,211,1.177,212,1.586,213,2.33,219,1.43,233,0.703,241,2.33,243,0.75,247,1.059,253,0.368,271,0.923,273,3.882,279,2.086,280,2.492,282,3.719,287,3.282,316,1.43,319,2.927,325,2.538,339,1.177,344,0.816,350,1.43,351,2.334,352,3.14,355,1.928,359,1.723,362,1.43,367,2.33,369,1.723,370,2.976,386,3.2,387,3.757,388,0.877,390,1.818,392,2.492,395,2.956,400,1.502,409,3.173,411,0.75,413,0.884,415,0.663,417,4.107,420,3.56,422,2.156,423,1.555,449,2.036,459,2.538,461,4.198,462,1.43,464,0.75,475,1.177,485,0.499,493,2.303,552,2.538,558,0.877,559,3.853,564,2.651,573,0.877,575,1.794,578,3.708,583,1.555,591,0.806,616,3.757,617,3.214,624,1.555,634,1.723,635,1.723,637,4.828,648,0.971,649,2.322,662,3.853,682,0.971,688,3.909,693,0.971,694,0.971,719,0.877,735,0.971,736,0.971,745,1.919,749,1.331,750,0.971,765,0.971,770,0.971,777,0.971,787,5.434,805,1.114,806,2.322,807,1.977,808,4.084,809,1.555,810,1.977,811,2.538,812,1.555,813,1.977,814,1.977,815,2.538,816,3.479,817,3.691,818,3.691,819,1.977,820,1.977,821,1.977,822,1.114,823,4.084,824,1.114,825,1.977,826,1.977,827,1.114,828,1.977,829,1.723,830,3.225,831,2.81,832,1.977,833,1.723,834,1.723,835,3.225,836,1.977,837,1.114,838,6.005,839,6.005,840,3.575,841,1.977,842,1.114,843,1.977,844,1.114,845,1.977,846,1.977,847,1.114,848,1.977,849,1.977,850,1.114,851,1.977,852,1.114,853,1.977,854,1.114,855,1.977,856,1.114,857,1.977,858,1.114,859,1.555,860,1.977,861,1.114,862,1.977,863,1.555,864,1.723,865,1.977,866,1.977,867,0.971,868,0.971,869,0.877,870,0.806,871,0.971,872,1.114,873,1.114,874,1.114,875,1.114,876,1.977,877,1.114,878,1.114,879,1.114,880,1.114,881,1.114,882,0.971,883,1.114,884,1.114,885,1.114,886,1.977,887,1.555,888,1.977,889,1.114,890,3.225,891,4.084,892,1.114,893,2.664,894,1.114,895,3.225,896,1.114,897,1.977,898,1.114,899,1.114,900,1.977,901,1.114,902,1.977,903,1.114,904,1.114,905,1.114,906,1.977,907,1.114,908,1.114,909,0.971,910,1.114,911,2.81,912,1.114,913,2.664,914,1.114,915,1.114,916,1.114,917,1.114,918,4.084,919,1.114,920,1.114,921,1.977,922,2.664,923,3.225,924,1.555,925,1.114,926,1.114,927,1.114,928,1.977,929,1.977,930,1.977,931,1.977,932,1.977,933,1.114,934,1.114,935,1.977,936,1.114,937,1.114,938,3.225,939,0.877,940,1.114,941,3.225,942,1.114,943,3.225,944,1.114,945,1.114,946,2.664,947,2.664,948,1.977,949,1.114,950,1.977,951,1.114,952,1.114,953,0.877,954,1.114,955,1.114,956,1.114,957,1.114,958,1.114,959,1.114,960,1.114,961,1.723,962,1.114,963,1.114,964,1.114,965,1.114,966,1.114,967,1.114,968,1.977,969,3.691,970,1.114,971,1.114,972,1.114,973,1.114,974,1.114,975,1.114,976,1.723,977,1.114,978,1.114]],["title/modules/NgxEditorjsDemoModule.html",[124,0.393,979,2.95]],["body/modules/NgxEditorjsDemoModule.html",[3,0.189,4,0.189,5,0.172,6,0.125,7,0.205,12,0.321,23,0.013,24,0.189,65,0.007,66,0.009,67,0.007,71,0.64,73,0.556,78,1.896,123,2.427,124,0.426,170,0.602,238,2.489,267,1.269,473,4.239,478,3.847,485,2.949,498,1.896,507,1.822,510,2.365,515,4.609,520,4.746,521,1.226,522,3.473,524,1.746,544,3.308,545,2.949,705,4.746,706,1.896,707,3.366,708,2.254,713,2.996,714,2.06,715,2.06,726,3.704,727,2.627,840,2.627,979,6.004,980,3.847,981,3.847,982,3.847,983,3.847,984,5.105,985,5.062,986,4.414,987,5.114,988,5.114,989,3.847,990,3.473,991,4.414,992,3.847,993,5.867,994,3.847,995,4.414,996,3.847,997,5.114,998,4.414,999,3.847,1000,4.617,1001,3.194,1002,4.414]],["title/modules/NgxEditorjsPluginsModule.html",[124,0.393,985,2.744]],["body/modules/NgxEditorjsPluginsModule.html",[1,0.559,3,0.142,4,0.142,5,0.13,6,0.094,7,0.155,9,0.386,12,0.266,21,2.161,23,0.013,24,0.142,65,0.005,66,0.008,67,0.005,71,0.629,73,0.42,81,2.723,93,2.587,124,0.548,166,3.495,170,0.455,175,1.253,182,2.587,190,2.587,253,1.596,267,0.959,492,3.495,498,1.432,521,1.835,524,1.437,544,2.723,545,2.54,706,1.432,707,1.703,708,1.703,713,2.466,714,1.557,715,1.557,726,3.048,727,1.985,798,5.188,812,3.8,985,5.693,1003,2.906,1004,2.906,1005,2.906,1006,4.864,1007,5.188,1008,4.864,1009,5.188,1010,5.188,1011,4.864,1012,4.864,1013,4.864,1014,4.864,1015,5.188,1016,4.864,1017,5.188,1018,3.335,1019,3.335,1020,4.209,1021,4.829,1022,4.829,1023,4.829,1024,4.209,1025,3.335,1026,3.335,1027,3.335,1028,3.335,1029,3.335,1030,2.906,1031,3.335,1032,3.335,1033,3.335,1034,3.335,1035,3.335,1036,3.335,1037,3.335,1038,2.906,1039,3.335,1040,3.335,1041,3.335,1042,3.335]],["title/modules/NgxTinynodesComponentsModule.html",[124,0.393,1043,2.744]],["body/modules/NgxTinynodesComponentsModule.html",[3,0.227,4,0.227,5,0.207,6,0.15,23,0.013,24,0.227,65,0.008,66,0.01,67,0.008,71,0.567,73,0.669,124,0.513,170,0.725,267,1.528,498,2.283,507,2.729,510,3.543,513,3.225,521,1.477,524,1.968,544,3.728,545,3.221,706,2.283,707,2.714,708,2.714,713,3.377,714,2.481,715,2.481,1043,5.533,1044,4.632,1045,4.632,1046,4.632,1047,5.589,1048,5.589,1049,5.315,1050,5.315,1051,6.612,1052,4.182,1053,5.315,1054,4.182,1055,5.315]],["title/interfaces/NgxTinynodesMatFieldComponent.html",[0,0.159,1056,3.552]],["body/interfaces/NgxTinynodesMatFieldComponent.html",[0,0.234,2,1.315,3,0.257,4,0.257,5,0.234,6,0.17,23,0.013,24,0.257,40,2.195,65,0.009,66,0.011,67,0.009,71,0.598,73,0.756,220,5.606,225,4.796,229,6.209,233,4.497,234,6.209,238,3.387,507,2.48,1056,6.209,1057,6.008,1058,7.594,1059,4.348]],["title/components/NgxTinynodesMatJsonOutputComponent.html",[228,1.682,509,2.426]],["body/components/NgxTinynodesMatJsonOutputComponent.html",[3,0.171,4,0.171,5,0.156,6,0.206,11,0.581,12,0.288,13,0.761,15,1.524,19,2.103,23,0.013,24,0.171,34,0.612,52,0.845,65,0.006,66,0.009,67,0.006,71,0.315,73,0.503,104,2.228,112,1.473,123,2.845,142,1.69,170,0.545,171,2.178,188,2.586,216,4.081,226,2.892,227,4.54,228,2.586,232,4.218,240,2.041,244,2.041,249,2.141,255,2.253,262,4.936,263,3.694,268,3.971,269,3.971,270,3.694,273,3.357,279,2.041,319,2.253,335,2.802,339,2.379,344,1.649,349,2.94,392,1.788,402,3.145,422,2.676,450,4.257,473,2.253,474,2.892,475,2.379,476,2.892,480,2.691,481,2.141,494,2.141,498,1.716,499,3.694,500,2.141,501,4.881,502,2.892,503,2.892,504,2.892,505,2.892,506,2.379,507,3.258,508,2.892,509,4.014,510,4.466,511,2.892,512,2.379,513,1.949,514,2.892,515,2.253,516,1.716,517,2.691,518,2.691,519,2.892,551,5.46,554,5.878,556,4.318,568,3.971,656,2.892,1054,5.746,1060,5.284,1061,3.997,1062,5.487,1063,6.744,1064,7.478,1065,3.997,1066,5.487,1067,3.997,1068,3.997,1069,3.997,1070,5.487,1071,5.487]],["title/modules/NgxTinynodesMatJsonOutputModule.html",[124,0.393,1047,2.744]],["body/modules/NgxTinynodesMatJsonOutputModule.html",[3,0.228,4,0.228,5,0.208,6,0.151,23,0.013,24,0.228,65,0.008,66,0.01,67,0.008,71,0.611,73,0.672,123,1.965,124,0.515,170,0.728,216,2.859,267,1.534,498,2.292,507,2.203,509,4.944,510,4.042,521,1.483,524,1.973,527,5.778,529,5.778,544,3.009,545,3.227,706,2.292,707,3.683,708,2.725,713,3.385,714,2.491,715,2.491,726,4.185,727,3.177,1000,5.217,1001,3.862,1047,5.397,1054,4.2,1059,3.862,1060,3.862,1072,4.651,1073,4.651,1074,4.651,1075,5.337,1076,5.337]],["title/modules/NgxTinynodesMatTagInputModule.html",[124,0.393,1048,2.744]],["body/modules/NgxTinynodesMatTagInputModule.html",[3,0.223,4,0.223,5,0.204,6,0.148,23,0.013,24,0.223,65,0.008,66,0.01,67,0.008,71,0.607,73,0.658,124,0.505,170,0.713,216,2.802,238,2.948,267,1.503,498,2.246,507,2.158,512,4.997,513,3.485,521,1.453,524,1.948,531,5.704,538,5.704,544,2.948,545,3.197,706,2.246,707,3.649,708,2.67,713,3.342,714,2.441,715,2.441,726,3.3,727,3.112,729,4.557,1048,5.373,1052,4.114,1059,3.784,1060,3.784,1077,4.557,1078,4.557,1079,4.557,1080,4.557,1081,5.623,1082,5.623,1083,5.228,1084,5.228,1085,5.228]],["title/modules/NgxTinynodesMaterialFormFieldDemo.html",[124,0.393,1086,2.95]],["body/modules/NgxTinynodesMaterialFormFieldDemo.html",[3,0.176,4,0.176,5,0.16,6,0.116,7,0.191,12,0.292,23,0.014,24,0.176,65,0.006,66,0.009,67,0.006,71,0.629,73,0.517,78,1.766,123,2.06,124,0.397,125,1.514,170,0.561,228,1.697,238,2.318,267,1.182,335,2.099,485,3.054,494,3.657,498,1.766,506,4.628,507,2.309,510,2.203,520,4.649,521,1.142,524,1.665,544,3.154,545,1.84,705,4.649,706,1.766,707,3.247,708,2.099,713,2.856,714,1.919,715,1.919,726,3.531,727,2.447,733,3.583,840,2.447,984,4.649,987,4.875,988,4.875,989,3.583,990,3.235,996,3.583,997,4.875,999,3.583,1000,4.402,1001,2.975,1006,4.649,1008,4.649,1011,4.649,1012,4.649,1013,4.649,1014,4.649,1016,4.649,1043,3.766,1086,6.068,1087,3.583,1088,3.583,1089,4.111,1090,3.583,1091,4.402,1092,4.111,1093,4.111,1094,6.358,1095,3.583,1096,4.111]],["title/components/NgxTinynodesMaterialFormFieldDemoComponent.html",[228,1.682,506,2.426]],["body/components/NgxTinynodesMaterialFormFieldDemoComponent.html",[1,0.521,3,0.065,4,0.111,5,0.06,6,0.185,7,0.304,9,0.521,11,0.36,12,0.327,13,0.292,14,0.654,15,1.784,19,1.911,21,1.166,23,0.013,24,0.065,26,1.034,27,0.685,34,0.801,38,0.749,41,1.535,44,1.119,46,0.715,48,1.208,50,1.119,51,1.271,52,1.164,65,0.002,66,0.004,67,0.005,71,0.433,73,0.193,76,0.488,89,0.861,104,2.121,111,2.463,112,1.078,118,2.653,122,1.331,123,2.451,127,1.668,139,0.82,141,2.607,142,1.237,144,1.594,145,0.715,146,1.953,151,2.152,154,0.96,157,1.788,162,4.956,164,1.797,170,0.209,171,2.075,175,1.042,176,0.966,183,2.68,184,2.022,185,2.625,188,2.158,191,0.685,194,1.959,206,3.475,216,2.801,218,1.205,219,1.886,225,2.291,226,1.108,227,2.704,228,2.747,232,2.291,233,1.645,238,0.863,240,3.127,241,2.148,242,1.108,243,1.031,244,0.782,247,2.152,249,0.82,251,4.202,255,0.863,262,3.753,263,1.754,264,2.271,265,1.886,266,2.965,268,1.886,269,1.886,270,1.754,271,1.216,273,3.944,279,3.278,280,1.166,282,3.237,287,2.949,319,2.264,321,1.108,335,1.331,339,2.025,340,2.906,344,1.657,346,2.906,347,1.754,349,1.396,350,1.886,351,1.886,352,0.863,355,2.906,367,1.645,370,2.291,372,2.906,392,1.797,400,1.469,404,1.205,409,3.865,411,1.031,422,1.271,450,2.148,452,3.16,455,1.754,457,1.108,458,1.886,470,2.39,473,0.863,474,1.108,475,0.911,476,1.108,480,1.031,481,3.715,485,1.797,489,1.886,493,2.264,494,4.396,498,0.658,499,1.754,500,0.82,501,2.906,502,1.108,503,1.108,504,1.108,505,1.108,506,2.39,507,2.022,508,1.108,509,0.911,510,0.82,511,1.108,512,0.911,513,1.659,514,1.108,515,0.863,516,3.041,517,1.031,518,1.031,519,1.108,548,2.051,556,2.051,558,1.205,563,1.886,564,2.811,568,2.906,575,1.754,577,2.271,580,3.924,583,2.051,586,1.334,588,4.332,625,1.886,629,3.5,632,1.754,656,2.906,660,2.965,672,3.16,688,1.205,714,2.775,809,2.051,816,4.518,840,0.911,859,2.051,867,1.334,868,1.334,869,1.205,870,1.108,924,1.205,939,1.205,953,2.677,1090,5.704,1091,5.15,1097,6.545,1098,2.606,1099,2.606,1100,3.402,1101,4.016,1102,2.606,1103,5.228,1104,3.924,1105,1.334,1106,3.3,1107,3.5,1108,4.016,1109,4.016,1110,1.531,1111,1.645,1112,2.606,1113,1.531,1114,1.531,1115,2.606,1116,1.531,1117,4.016,1118,1.531,1119,2.606,1120,1.531,1121,4.016,1122,4.016,1123,1.531,1124,2.271,1125,2.051,1126,1.531,1127,1.531,1128,2.606,1129,1.531,1130,2.606,1131,4.016,1132,2.704,1133,3.402,1134,1.531,1135,2.606,1136,1.531,1137,1.531,1138,1.334,1139,1.531,1140,1.334,1141,1.334,1142,1.334,1143,1.334,1144,1.531,1145,1.334,1146,1.531,1147,2.606,1148,2.606,1149,1.531,1150,1.334,1151,1.531,1152,1.531,1153,1.334,1154,1.531,1155,1.334,1156,1.531,1157,1.531,1158,1.334,1159,1.334,1160,1.531,1161,1.334,1162,1.334,1163,2.606,1164,2.606,1165,2.606,1166,2.271,1167,2.271,1168,2.606,1169,2.606,1170,2.271,1171,2.606,1172,3.16,1173,2.271,1174,3.5,1175,2.271,1176,1.334,1177,1.754,1178,1.334,1179,1.334,1180,1.334,1181,1.334,1182,1.334,1183,2.271,1184,2.271,1185,2.051,1186,2.271,1187,2.051,1188,2.271,1189,2.271,1190,2.271,1191,1.034,1192,2.606,1193,2.271,1194,2.271,1195,2.271,1196,2.606,1197,2.271,1198,2.606,1199,2.606,1200,2.965,1201,2.965,1202,2.271,1203,1.334,1204,2.965,1205,1.334,1206,1.334,1207,1.531,1208,1.531,1209,1.531,1210,1.531]],["title/interfaces/Page.html",[0,0.159,516,1.751]],["body/interfaces/Page.html",[0,0.285,1,0.781,2,1.203,3,0.235,4,0.235,5,0.214,6,0.155,7,0.255,11,0.807,12,0.288,13,1.047,14,1.694,17,1.162,18,1.402,23,0.013,24,0.312,40,1.693,65,0.009,66,0.011,67,0.009,71,0.531,146,2.431,271,3.856,485,2.459,513,3.717,516,2.899,1132,5.131,1211,4.325,1212,5.515,1213,5.131,1214,3.272]],["title/interfaces/PageBlock.html",[0,0.159,1213,2.744]],["body/interfaces/PageBlock.html",[0,0.29,1,0.861,2,1.254,3,0.245,4,0.245,5,0.224,6,0.162,7,0.266,11,0.607,12,0.296,13,1.091,14,1.737,17,1.211,18,1.273,23,0.013,24,0.318,40,2.133,65,0.009,66,0.011,67,0.009,71,0.545,146,1.827,271,3.879,485,2.563,513,3.377,516,2.46,1132,3.856,1211,4.507,1212,4.145,1213,5.009,1214,3.41]],["title/components/PageContainerComponent.html",[228,1.682,515,2.298]],["body/components/PageContainerComponent.html",[1,0.69,3,0.087,4,0.087,5,0.08,6,0.194,7,0.319,9,0.384,11,0.443,12,0.332,13,0.39,14,0.833,15,1.873,18,0.377,19,2.006,21,1.485,23,0.014,24,0.087,26,1.91,27,0.916,34,0.641,37,1.317,38,0.954,41,1.268,44,1.425,46,0.956,50,1.425,51,1.619,52,0.433,63,1.549,65,0.003,66,0.005,67,0.007,71,0.489,73,0.258,76,0.653,89,1.097,92,0.701,104,1.59,112,0.891,118,2.611,122,1.695,123,2.574,127,1.059,139,1.097,140,1.778,141,2.286,142,1.482,144,0.813,145,0.956,146,2.361,150,1.485,154,1.772,170,0.279,171,2.099,172,1.871,175,0.861,183,2.995,184,1.37,185,1.778,188,1.986,191,0.916,194,1.619,216,2.578,219,2.402,225,2.817,226,1.482,227,3.24,228,2.46,233,2.095,236,1.785,240,1.046,241,2.641,242,1.482,243,1.379,244,1.046,247,2.578,249,3.033,255,1.154,262,4.161,263,2.234,265,2.402,268,2.402,269,2.402,270,2.234,271,1.549,273,3.848,279,1.046,280,2.533,282,2.713,287,3.033,292,2.611,318,2.892,319,2.981,321,1.482,335,1.695,339,3.148,340,2.402,344,1.986,346,3.482,349,1.778,350,2.402,351,2.402,362,1.482,367,2.095,370,1.379,372,3.482,392,0.916,409,4.18,422,1.619,450,3.338,455,2.234,458,2.402,470,2.864,473,1.154,474,1.482,475,1.219,476,1.482,479,1.785,480,1.379,481,3.967,483,3.647,484,2.892,485,2.153,489,3.028,493,1.871,494,1.097,498,0.879,499,2.234,500,1.097,501,3.482,502,1.482,503,1.482,504,1.482,505,1.482,506,1.219,507,1.986,508,1.482,509,1.219,510,2.242,511,1.482,512,1.219,513,2.041,514,1.482,515,2.713,516,3.119,517,1.379,518,3.24,519,1.482,552,5.187,563,2.402,564,3.171,565,2.892,568,3.482,575,2.234,588,2.611,605,2.892,607,2.892,637,3.028,656,1.482,672,3.787,714,2.898,840,1.219,869,1.611,870,1.482,871,2.892,911,1.785,924,1.611,939,1.611,953,2.611,992,5.991,1104,4.194,1105,1.785,1106,3.763,1107,4.194,1111,3.763,1124,2.892,1125,2.611,1138,1.785,1140,1.785,1141,2.892,1142,1.785,1143,1.785,1145,1.785,1150,1.785,1153,1.785,1155,1.785,1158,1.785,1161,1.785,1162,1.785,1172,3.787,1173,2.892,1174,4.194,1175,2.892,1176,1.785,1177,2.234,1178,1.785,1179,1.785,1180,1.785,1181,1.785,1182,1.785,1183,2.892,1184,2.892,1185,2.611,1186,2.892,1187,2.611,1188,2.892,1189,2.892,1190,2.892,1191,1.317,1200,2.892,1201,2.892,1202,2.892,1203,1.785,1204,1.785,1205,1.785,1206,1.785,1215,6.874,1216,5.288,1217,3.319,1218,2.048,1219,2.048,1220,2.048,1221,2.048,1222,2.048,1223,2.048,1224,3.319,1225,2.048,1226,2.048,1227,2.048,1228,1.785,1229,2.048,1230,2.048,1231,2.048,1232,3.319,1233,2.048,1234,2.048,1235,2.048,1236,2.048,1237,2.048,1238,2.048,1239,2.048,1240,2.048,1241,2.048,1242,2.048,1243,2.048,1244,2.048,1245,3.319,1246,3.319,1247,3.319,1248,3.319,1249,3.319]],["title/modules/PageStoreModule.html",[124,0.393,984,2.573]],["body/modules/PageStoreModule.html",[3,0.219,4,0.219,5,0.2,6,0.144,7,0.238,9,0.592,12,0.302,23,0.013,24,0.219,65,0.008,66,0.01,67,0.008,71,0.585,73,0.644,80,3.842,114,3.459,123,2.377,124,0.739,170,0.698,191,2.888,267,2.034,448,4.672,481,3.459,498,2.197,516,2.772,521,1.421,524,1.921,545,2.288,706,2.197,707,2.612,708,2.612,713,3.296,714,2.387,715,2.387,718,5.626,984,5.156,1106,4.938,1111,4.075,1250,4.457,1251,4.457,1252,5.266,1253,4.656,1254,5.114,1255,5.626,1256,5.626,1257,4.672,1258,6.455,1259,4.457,1260,5.114,1261,4.025]],["title/injectables/PagesQuery.html",[413,1.824,1252,2.744]],["body/injectables/PagesQuery.html",[3,0.245,4,0.245,5,0.224,6,0.196,7,0.322,11,0.607,12,0.296,19,1.705,23,0.013,24,0.245,40,2.133,52,1.211,65,0.009,66,0.011,67,0.009,71,0.608,73,0.721,104,1.893,170,0.782,344,2.364,392,2.563,413,3.098,415,3.41,516,2.46,1214,3.41,1252,4.661,1253,4.601,1257,5.01,1261,4.507,1262,5.728,1263,7.441,1264,5.728,1265,5.728,1266,4.145,1267,4.145,1268,5.728,1269,5.728]],["title/injectables/PagesService.html",[413,1.824,1106,2.573]],["body/injectables/PagesService.html",[1,0.869,3,0.133,4,0.133,5,0.121,6,0.212,7,0.349,9,0.696,11,0.771,12,0.325,13,0.592,14,1.15,19,2.203,23,0.014,24,0.133,25,1.969,32,1.969,52,1.54,65,0.005,66,0.007,67,0.005,71,0.547,73,0.391,84,2.236,104,2.295,125,1.144,127,0.991,141,1.688,145,1.45,146,2.216,170,0.424,171,2.757,174,2.456,175,1.19,188,2.771,271,3.69,273,3.438,280,1.39,282,3.072,287,1.664,319,3.786,344,1.282,392,3.108,400,2.585,413,2.051,415,1.849,422,2.236,485,1.39,492,3.318,516,3.549,563,3.318,564,2.341,614,2.248,616,3.318,625,3.318,637,4.86,976,3.995,1106,2.894,1111,4.5,1132,2.091,1177,4.05,1197,3.995,1212,2.248,1213,4.676,1214,1.849,1228,2.707,1252,4.32,1253,3.82,1257,5.434,1259,2.707,1261,2.444,1266,2.248,1270,3.106,1271,6.016,1272,4.584,1273,4.584,1274,4.584,1275,4.584,1276,3.106,1277,3.106,1278,4.584,1279,3.106,1280,4.584,1281,3.106,1282,6.417,1283,4.584,1284,3.106,1285,4.584,1286,3.607,1287,4.584,1288,3.106,1289,4.584,1290,3.106,1291,4.584,1292,3.106,1293,4.584,1294,3.106,1295,3.106,1296,3.106,1297,6.016,1298,3.106,1299,4.584,1300,3.106,1301,3.106,1302,3.106,1303,4.584,1304,3.106,1305,3.106,1306,5.449,1307,4.584,1308,3.106,1309,3.106,1310,3.106]],["title/interfaces/PagesState.html",[0,0.159,1267,2.95]],["body/interfaces/PagesState.html",[0,0.229,2,1.285,3,0.251,4,0.251,5,0.229,6,0.166,7,0.273,12,0.251,23,0.013,24,0.3,40,2.317,65,0.009,66,0.011,67,0.009,71,0.592,73,0.739,104,1.94,170,0.801,344,2.423,345,4.249,413,3.144,516,2.522,1111,3.706,1214,3.495,1253,3.495,1266,4.249,1267,5.085,1311,5.117,1312,6.554,1313,6.124,1314,6.124]],["title/injectables/PagesStore.html",[413,1.824,1253,2.426]],["body/injectables/PagesStore.html",[0,0.226,3,0.247,4,0.247,5,0.226,6,0.197,7,0.324,12,0.297,19,1.72,23,0.013,24,0.297,40,2.301,65,0.009,66,0.011,67,0.009,71,0.588,73,0.727,104,1.91,170,0.789,344,3.083,345,4.183,413,3.114,415,3.44,516,2.482,1111,3.648,1214,3.44,1253,4.143,1266,4.183,1267,4.183,1311,5.037,1312,6.066,1313,6.51,1314,6.066,1315,5.779]],["title/interfaces/Paragraph.html",[0,0.159,41,1.558]],["body/interfaces/Paragraph.html",[0,0.309,1,0.952,2,0.803,3,0.157,4,0.157,5,0.143,6,0.104,7,0.17,8,1.873,9,0.424,11,0.874,12,0.304,13,0.699,14,1.501,15,2.029,17,0.776,18,1.413,21,1.641,22,2.47,23,0.014,24,0.324,25,1.575,26,2.96,27,1.641,28,1.873,29,2.639,30,2.639,31,1.575,32,1.575,33,2.639,34,1.089,35,2.769,36,2.769,37,1.456,38,1.054,39,2.521,40,2.002,41,2.85,42,3.808,43,2.521,44,3.136,45,2.521,46,1.712,47,1.873,48,1.302,49,2.521,50,2.942,51,2.521,52,1.374,53,2.769,54,1.965,55,2.049,56,1.965,57,1.909,58,1.965,59,1.965,60,1.965,61,1.965,62,2.521,63,1.712,64,1.873,65,0.006,66,0.008,67,0.006]],["title/interfaces/ParagraphBlock.html",[0,0.159,43,1.988]],["body/interfaces/ParagraphBlock.html",[0,0.311,1,0.957,2,0.806,3,0.157,4,0.157,5,0.144,6,0.104,7,0.171,8,1.881,9,0.426,11,0.878,12,0.312,13,0.702,14,1.505,15,1.977,17,0.779,18,1.373,21,1.648,22,2.475,23,0.014,24,0.324,25,1.582,26,2.963,27,1.648,28,1.881,29,2.647,30,2.647,31,1.582,32,1.582,33,2.647,34,1.051,35,2.777,36,2.777,37,1.462,38,1.059,39,2.528,40,2.114,41,2.72,42,3.324,43,2.926,44,3.14,45,2.528,46,1.719,47,1.881,48,1.307,49,2.528,50,2.947,51,2.528,52,1.377,53,2.777,54,1.973,55,2.054,56,1.973,57,1.913,58,1.973,59,1.973,60,1.973,61,1.973,62,2.528,63,1.719,64,1.881,65,0.006,66,0.008,67,0.006]],["title/modules/PluginCodeModule.html",[124,0.393,1006,2.573]],["body/modules/PluginCodeModule.html",[1,0.769,3,0.229,4,0.229,5,0.209,6,0.151,7,0.249,9,0.62,11,0.568,12,0.323,17,1.133,23,0.013,24,0.229,34,1.018,65,0.008,66,0.01,67,0.008,71,0.595,73,0.674,83,2.048,86,2.212,89,2.196,105,2.127,112,1.785,124,0.642,126,2.447,129,2.447,134,2.398,170,0.731,175,1.725,208,2.196,253,2.196,256,2.639,267,1.541,488,5.467,521,1.489,524,1.978,739,2.855,772,2.302,802,3.021,803,3.19,1006,4.196,1191,2.639,1316,5.359,1317,3.103,1318,2.398,1319,2.974,1320,5.359,1321,2.502,1322,5.359]],["title/interfaces/PluginConfig.html",[0,0.159,98,2.573]],["body/interfaces/PluginConfig.html",[0,0.252,1,0.872,2,0.692,3,0.135,4,0.135,5,0.123,6,0.089,7,0.147,9,0.808,11,0.855,12,0.298,13,0.602,14,1.165,15,1.795,17,1.594,18,1.188,19,0.94,23,0.014,24,0.322,31,2.363,34,0.711,38,2.38,52,1.685,55,1.589,57,1.755,65,0.005,66,0.007,67,0.005,68,4.823,69,1.881,71,0.365,72,1.541,73,0.398,74,3.125,75,3.125,76,1.008,77,2.93,78,2.363,79,2.93,80,1.881,81,3.809,82,2.286,83,1.207,84,1.541,85,2.127,86,1.304,87,1.881,88,5.304,89,2.232,90,3.705,91,4.351,92,1.884,93,1.693,94,1.881,95,2.286,96,2.379,97,2.93,98,3.474,99,3.36,100,2.93,101,2.167,102,3.125,103,3.36,104,1.534,105,2.408,106,4.265,107,1.781,108,2.286,109,2.167,110,2.882,111,2.077,112,1.247,113,3.125,114,2.487,115,3.611,116,3.25,117,2.93,118,1.709,119,3.474,120,2.569,121,2.569,122,1.613,123,1.163,124,0.305,125,2.026,126,1.163,127,1.755,128,2.127,129,1.163,130,2.127,131,2.286,132,1.994,133,2.286,134,1.414,135,2.127]],["title/interfaces/PluginConfigMap.html",[0,0.159,132,2.573]],["body/interfaces/PluginConfigMap.html",[0,0.267,1,0.861,2,0.797,3,0.156,4,0.156,5,0.142,6,0.145,7,0.239,9,0.69,11,0.772,12,0.311,15,1.656,16,2.053,17,1.601,18,1.304,19,1.53,23,0.014,24,0.332,31,2.208,34,0.558,38,2.365,52,1.37,55,1.761,57,1.161,65,0.006,66,0.008,67,0.006,68,4.013,69,2.167,71,0.405,72,1.776,73,0.458,74,3.462,75,3.462,76,1.161,77,3.246,78,2.56,79,3.246,80,2.167,81,3.852,82,2.635,83,1.392,84,1.776,85,2.451,86,1.503,87,2.167,88,4.774,89,2.14,90,4.013,91,4.013,92,2.218,93,1.951,94,2.167,95,2.635,96,2.195,97,2.298,98,3.763,99,2.635,100,2.298,101,1.7,102,2.451,103,2.635,104,1.203,105,1.445,106,3.246,107,2.053,108,2.635,109,1.7,110,2.82,111,1.629,112,0.978,113,2.451,114,1.951,115,2.167,116,2.755,117,2.298,118,1.341,119,2.298,120,2.783,121,2.783,122,1.859,123,1.341,124,0.351,125,2.195,126,1.341,127,1.902,128,2.451,129,1.341,130,2.451,131,3.721,132,3.246,133,3.721,134,1.629,135,2.451,1323,3.641]],["title/modules/PluginEmbedModule.html",[124,0.393,1007,2.744]],["body/modules/PluginEmbedModule.html",[1,0.838,3,0.23,4,0.23,5,0.21,6,0.152,7,0.251,9,0.624,11,0.571,12,0.323,17,1.141,23,0.013,24,0.23,34,1.022,65,0.009,66,0.011,67,0.009,71,0.57,73,0.679,83,2.061,86,2.226,89,2.205,105,2.141,112,1.946,115,3.21,124,0.644,126,2.457,129,2.457,170,0.736,175,1.732,208,2.205,253,2.205,256,2.649,267,1.55,521,1.498,524,1.986,739,2.866,772,2.316,1007,4.492,1191,2.649,1317,3.115,1318,2.413,1319,2.986,1321,2.517,1324,5.392,1325,7.571,1326,5.392,1327,3.404]],["title/modules/PluginHeaderModule.html",[124,0.393,1008,2.573]],["body/modules/PluginHeaderModule.html",[1,0.738,3,0.215,4,0.215,5,0.196,6,0.142,7,0.234,9,0.581,11,0.532,12,0.315,15,1.396,17,1.063,23,0.014,24,0.215,34,0.978,38,1.445,44,3.398,65,0.008,66,0.01,67,0.008,71,0.552,73,0.632,83,1.92,86,2.074,89,2.109,105,1.995,112,1.714,124,0.616,125,1.85,126,2.35,129,2.35,170,0.686,175,1.657,184,2.074,208,2.109,253,2.109,256,2.534,267,1.445,280,2.248,521,1.396,524,1.9,739,2.741,772,2.158,811,3.954,1008,4.029,1125,3.954,1191,2.534,1317,2.98,1318,2.248,1319,2.856,1321,2.346,1328,5.025,1329,5.025,1330,3.954,1331,4.379,1332,5.025,1333,5.025,1334,5.025,1335,6.383,1336,5.025,1337,5.025,1338,5.025,1339,5.025,1340,5.025,1341,5.025,1342,5.025]],["title/modules/PluginImageModule.html",[124,0.393,1009,2.744]],["body/modules/PluginImageModule.html",[1,0.769,3,0.229,4,0.229,5,0.209,6,0.151,7,0.249,9,0.62,11,0.568,12,0.323,17,1.133,23,0.013,24,0.229,34,1.018,50,3.244,65,0.008,66,0.01,67,0.008,71,0.595,73,0.674,83,2.048,86,2.212,89,2.196,105,2.127,112,1.785,124,0.642,126,2.447,129,2.447,134,2.398,170,0.731,175,1.725,208,2.196,253,2.196,256,2.639,267,1.541,521,1.489,524,1.978,739,2.855,772,2.302,802,3.021,803,3.19,1009,4.475,1191,2.639,1317,3.103,1318,2.398,1319,2.974,1321,2.502,1343,5.359,1344,5.359,1345,3.878]],["title/modules/PluginInlineCodeModule.html",[124,0.393,1010,2.744]],["body/modules/PluginInlineCodeModule.html",[1,0.767,3,0.228,4,0.228,5,0.208,6,0.151,7,0.248,9,0.617,11,0.565,12,0.322,17,1.129,23,0.013,24,0.228,34,1.016,65,0.008,66,0.01,67,0.008,71,0.568,73,0.672,81,3.738,83,2.04,87,3.177,89,2.191,105,2.119,106,3.369,112,1.78,124,0.64,126,2.441,129,2.441,170,0.728,175,1.721,208,2.191,253,2.191,256,2.632,267,1.534,488,5.219,521,1.483,524,1.973,739,2.847,772,2.292,1010,4.463,1030,4.651,1191,2.632,1317,3.095,1318,2.388,1319,2.966,1321,2.491,1327,3.369,1346,5.337,1347,5.337,1348,6.629,1349,5.337,1350,5.337]],["title/modules/PluginLinkModule.html",[124,0.393,1011,2.573]],["body/modules/PluginLinkModule.html",[1,0.769,3,0.229,4,0.229,5,0.209,6,0.151,7,0.249,9,0.62,11,0.568,12,0.323,17,1.133,23,0.013,24,0.229,34,1.018,65,0.008,66,0.01,67,0.008,71,0.595,73,0.674,83,2.048,86,2.212,89,2.196,105,2.127,107,4.259,112,1.785,124,0.642,126,2.447,129,2.447,134,2.398,170,0.731,175,1.725,208,2.196,253,2.196,256,2.639,267,1.541,521,1.489,524,1.978,739,2.855,772,2.302,802,3.021,803,3.19,1011,4.196,1191,2.639,1317,3.103,1318,2.398,1319,2.974,1321,2.502,1345,3.878,1351,5.359,1352,5.359]],["title/modules/PluginListModule.html",[124,0.393,1012,2.573]],["body/modules/PluginListModule.html",[1,0.769,3,0.229,4,0.229,5,0.209,6,0.151,7,0.249,9,0.62,11,0.568,12,0.323,17,1.133,23,0.013,24,0.229,26,2.999,34,1.018,65,0.008,66,0.01,67,0.008,71,0.595,73,0.674,83,2.048,86,2.212,89,2.196,105,2.127,112,1.785,124,0.642,126,2.447,129,2.447,134,2.398,170,0.731,175,1.725,208,2.196,253,2.196,256,2.639,267,1.541,521,1.489,524,1.978,739,2.855,772,2.302,802,3.021,803,3.19,1012,4.196,1191,2.639,1317,3.103,1318,2.398,1319,2.974,1321,2.502,1345,3.878,1353,5.359,1354,5.359]],["title/modules/PluginMarkerModule.html",[124,0.393,1013,2.573]],["body/modules/PluginMarkerModule.html",[1,0.767,3,0.228,4,0.228,5,0.208,6,0.151,7,0.248,9,0.617,11,0.565,12,0.322,17,1.129,23,0.013,24,0.228,34,1.016,41,2.04,65,0.008,66,0.01,67,0.008,71,0.594,73,0.672,83,2.04,87,3.177,89,2.191,105,2.119,106,3.369,112,1.78,124,0.64,126,2.441,129,2.441,134,2.388,170,0.728,175,1.721,208,2.191,253,2.191,256,2.632,267,1.534,521,1.483,524,1.973,739,2.847,772,2.292,802,3.009,803,3.177,1013,4.185,1191,2.632,1317,3.095,1318,2.388,1319,2.966,1321,2.491,1327,3.369,1355,5.337,1356,7.212,1357,4.651,1358,5.337]],["title/modules/PluginParagraphModule.html",[124,0.393,1014,2.573]],["body/modules/PluginParagraphModule.html",[1,0.775,3,0.232,4,0.232,5,0.212,6,0.153,7,0.252,9,0.628,11,0.575,12,0.324,17,1.148,23,0.013,24,0.232,34,1.026,41,2.9,65,0.009,66,0.011,67,0.009,71,0.572,73,0.683,83,2.074,86,2.24,89,2.213,105,2.154,112,1.799,124,0.647,126,2.466,129,2.466,170,0.74,175,1.739,208,2.213,253,2.213,256,2.659,267,1.56,521,1.508,524,1.993,739,2.877,772,2.331,1014,4.228,1191,2.659,1317,3.127,1318,2.428,1319,2.997,1321,2.533,1327,3.426,1357,4.729,1359,5.426]],["title/modules/PluginQuoteModule.html",[124,0.393,1015,2.744]],["body/modules/PluginQuoteModule.html",[1,0.772,3,0.23,4,0.23,5,0.21,6,0.152,7,0.251,9,0.624,11,0.571,12,0.323,17,1.141,23,0.013,24,0.23,34,1.022,65,0.009,66,0.011,67,0.009,71,0.57,73,0.679,83,2.061,86,2.226,89,2.394,105,2.141,112,1.946,115,3.21,124,0.644,126,2.457,129,2.457,170,0.736,175,1.732,208,2.205,253,2.205,256,2.649,267,1.55,521,1.498,524,1.986,739,2.866,772,2.316,1015,4.492,1191,2.649,1317,3.115,1318,2.413,1319,2.986,1321,2.517,1327,3.404,1360,5.392,1361,7.571,1362,5.392]],["title/modules/PluginSimpleImageModule.html",[124,0.393,1016,2.573]],["body/modules/PluginSimpleImageModule.html",[1,0.765,3,0.227,4,0.227,5,0.207,6,0.15,7,0.247,9,0.615,11,0.563,12,0.322,17,1.124,23,0.013,24,0.227,34,1.013,50,2.84,65,0.008,66,0.01,67,0.008,71,0.593,73,0.669,83,2.031,86,2.193,89,2.185,105,2.11,112,1.776,124,0.638,126,2.435,129,2.435,134,2.378,170,0.725,175,1.716,208,2.185,253,2.185,256,2.625,267,1.528,521,1.477,524,1.968,739,2.84,772,2.283,802,2.996,803,3.164,1016,4.174,1038,4.632,1185,5.664,1191,2.625,1317,3.087,1318,2.378,1319,2.959,1321,2.481,1345,3.846,1363,5.315,1364,5.315,1365,5.315,1366,5.315]],["title/modules/PluginWarningModule.html",[124,0.393,1017,2.744]],["body/modules/PluginWarningModule.html",[1,0.838,3,0.23,4,0.23,5,0.21,6,0.152,7,0.251,9,0.624,11,0.571,12,0.323,17,1.141,23,0.013,24,0.23,34,1.022,65,0.009,66,0.011,67,0.009,71,0.57,73,0.679,83,2.061,86,2.226,89,2.205,105,2.141,112,1.946,115,3.21,124,0.644,126,2.457,129,2.457,170,0.736,175,1.732,208,2.205,253,2.205,256,2.649,267,1.55,521,1.498,524,1.986,739,2.866,772,2.316,1017,4.492,1191,2.649,1255,6.598,1317,3.115,1318,2.413,1319,2.986,1321,2.517,1327,3.404,1367,5.392,1368,5.392]],["title/interfaces/ReadyMap.html",[0,0.159,152,2.426]],["body/interfaces/ReadyMap.html",[0,0.29,1,0.702,2,1.017,3,0.198,4,0.198,5,0.181,6,0.171,7,0.282,9,0.537,12,0.326,16,2.619,17,1.7,18,1.367,19,1.382,23,0.014,24,0.318,48,1.649,65,0.007,66,0.01,67,0.007,71,0.532,76,1.482,92,2.752,136,2.765,137,3.127,138,5.412,139,4.442,140,2.489,141,2.234,142,1.431,144,1.844,145,2.168,146,2.156,147,2.489,148,2.765,149,2.902,150,2.715,151,3.621,152,3.612,153,2.765,154,2.488,155,2.619,156,2.932,157,2.409,1369,4.644]],["title/interfaces/SavedMap.html",[0,0.159,153,2.426]],["body/interfaces/SavedMap.html",[0,0.29,1,0.702,2,1.017,3,0.198,4,0.198,5,0.181,6,0.171,7,0.282,9,0.537,12,0.326,16,2.619,17,1.7,18,1.367,19,1.382,23,0.014,24,0.318,48,1.649,65,0.007,66,0.01,67,0.007,71,0.532,76,1.482,92,2.752,136,2.765,137,3.127,138,5.412,139,4.442,140,2.489,141,2.488,142,1.431,144,1.844,145,2.168,146,2.156,147,2.489,148,2.765,149,2.902,150,2.078,151,3.621,152,2.765,153,3.612,154,2.488,155,2.619,156,2.932,157,2.409,1370,4.644]],["title/interfaces/Tag.html",[0,0.159,513,1.988]],["body/interfaces/Tag.html",[0,0.291,1,0.803,2,1.259,3,0.246,4,0.246,5,0.225,6,0.163,7,0.267,11,0.609,12,0.297,13,1.096,14,1.742,17,1.637,18,1.424,23,0.013,24,0.319,40,1.772,65,0.009,66,0.011,67,0.009,71,0.546,146,1.835,271,3.699,485,2.574,513,3.636,516,2.471,1132,3.874,1211,4.528,1212,4.164,1213,4.674,1214,3.425]],["title/interfaces/ToolSettingsMap.html",[0,0.159,94,2.426]],["body/interfaces/ToolSettingsMap.html",[0,0.266,1,0.861,2,0.795,3,0.155,4,0.155,5,0.142,6,0.145,7,0.239,9,0.689,11,0.771,12,0.311,15,1.654,16,2.047,17,1.6,18,1.303,19,1.527,23,0.014,24,0.331,31,2.204,34,0.556,38,2.364,52,1.368,55,1.757,57,1.158,65,0.006,66,0.008,67,0.006,68,4.007,69,2.161,71,0.404,72,1.771,73,0.457,74,3.455,75,3.455,76,1.158,77,3.239,78,2.556,79,3.239,80,2.161,81,3.848,82,2.628,83,1.388,84,1.771,85,2.444,86,1.498,87,2.161,88,4.77,89,2.255,90,4.595,91,4.355,92,2.215,93,2.75,94,3.055,95,3.714,96,2.192,97,2.292,98,3.239,99,2.628,100,2.292,101,1.695,102,2.444,103,2.628,104,1.2,105,1.441,106,3.239,107,2.047,108,2.628,109,1.695,110,2.67,111,1.625,112,0.975,113,2.444,114,1.945,115,2.161,116,2.75,117,2.292,118,1.337,119,2.292,120,2.778,121,2.778,122,1.854,123,1.337,124,0.35,125,2.192,126,1.337,127,1.899,128,2.444,129,1.337,130,2.444,131,2.628,132,2.292,133,2.628,134,1.625,135,2.444,1371,3.631]],["title/changelog.html",[1372,2.149,1373,2.292,1374,2.679]],["body/changelog.html",[0,0.162,1,0.481,12,0.306,23,0.009,32,2.421,34,0.637,37,1.651,38,1.621,45,2.028,65,0.007,66,0.009,67,0.007,78,3.245,80,2.475,89,1.374,92,1.424,96,1.531,124,0.617,127,2.357,142,1.736,147,2.228,154,2.076,161,2.028,173,1.941,175,1.66,200,2.475,208,1.374,228,2.957,240,2.123,251,4.037,253,1.374,256,1.651,261,2.799,267,1.195,275,2.799,316,4.079,335,2.123,352,3.178,367,2.625,384,3.009,422,2.028,448,3.009,449,2.625,466,3.009,470,3.355,481,3.959,485,3.306,490,3.272,493,3.178,494,2.228,495,4.079,507,1.716,524,1.237,545,1.86,548,3.272,564,2.123,578,3.272,616,3.009,625,4.628,626,3.624,632,2.799,676,4.912,745,2.475,748,3.624,749,3.795,812,3.272,840,2.475,859,4.436,863,3.272,882,3.624,909,3.624,1166,5.975,1191,1.651,1193,4.912,1194,3.624,1286,3.272,1372,2.625,1374,4.436,1375,4.158,1376,5.573,1377,3.624,1378,4.158,1379,3.624,1380,4.158,1381,3.272,1382,4.158,1383,6.856,1384,4.158,1385,7.166,1386,5.637,1387,4.158,1388,4.158,1389,4.158,1390,4.158,1391,4.158,1392,3.624,1393,4.436,1394,5.637,1395,4.158,1396,5.637,1397,4.158,1398,5.637,1399,5.637,1400,4.158,1401,5.975,1402,4.158,1403,4.158,1404,4.158,1405,5.637,1406,4.158,1407,4.158,1408,4.158,1409,6.395,1410,4.158,1411,4.158,1412,4.158,1413,3.624,1414,4.158,1415,4.158,1416,3.272,1417,4.158,1418,5.637,1419,4.158,1420,4.158,1421,4.158,1422,3.272,1423,4.158,1424,4.158,1425,4.158,1426,4.158,1427,3.624,1428,4.158,1429,4.158,1430,4.158,1431,5.637,1432,5.637,1433,4.158,1434,4.912,1435,3.624,1436,4.158,1437,4.158,1438,4.158,1439,4.158,1440,4.158,1441,4.158,1442,4.158,1443,4.158,1444,4.158,1445,4.158,1446,4.158,1447,4.158,1448,4.158,1449,4.158,1450,3.624,1451,4.158,1452,3.624]],["title/contributing.html",[1372,2.149,1373,2.292,1453,2.967]],["body/contributing.html",[0,0.138,5,0.138,19,1.052,23,0.008,25,1.519,45,1.725,65,0.008,66,0.008,67,0.006,84,2.457,101,2.351,127,1.607,147,2.699,154,1.855,155,1.994,166,4.245,173,2.738,178,1.994,180,2.232,184,1.459,211,2.998,273,2.699,287,2.699,339,2.105,392,1.582,449,2.232,488,5.23,587,4.389,622,3.082,628,3.082,632,2.381,706,1.519,749,3.391,809,2.783,811,2.783,815,2.783,816,2.783,829,3.082,831,3.082,834,3.082,863,2.783,864,3.082,870,2.559,887,2.783,961,5.571,1024,3.082,1159,3.082,1286,2.783,1319,2.254,1331,3.082,1393,6.183,1416,2.783,1434,4.389,1435,3.082,1450,4.389,1452,3.082,1453,4.389,1454,4.389,1455,5.866,1456,3.536,1457,3.536,1458,3.536,1459,3.536,1460,3.536,1461,3.536,1462,7.227,1463,5.036,1464,3.536,1465,5.866,1466,3.082,1467,3.536,1468,3.536,1469,5.036,1470,3.536,1471,5.866,1472,2.783,1473,3.536,1474,3.536,1475,3.536,1476,3.536,1477,3.536,1478,6.393,1479,3.082,1480,3.536,1481,3.536,1482,3.536,1483,3.536,1484,4.389,1485,3.536,1486,3.536,1487,4.389,1488,3.536,1489,5.036,1490,3.536,1491,3.536,1492,5.036,1493,3.536,1494,6.757,1495,3.536,1496,6.757,1497,5.036,1498,3.082,1499,5.036,1500,3.536,1501,3.536,1502,3.536,1503,3.536,1504,3.536,1505,3.536,1506,3.536,1507,3.536,1508,5.036,1509,3.536,1510,3.536,1511,5.036,1512,3.536,1513,3.536,1514,3.536,1515,5.036,1516,3.536,1517,5.036,1518,6.757,1519,3.536,1520,3.536,1521,3.536,1522,5.036,1523,3.536,1524,3.536,1525,3.536,1526,3.536,1527,3.536,1528,3.536,1529,3.536,1530,3.536,1531,3.536,1532,3.536,1533,3.536,1534,3.536,1535,3.536,1536,3.536,1537,5.036,1538,5.866,1539,3.536,1540,3.536,1541,3.536,1542,3.536,1543,3.536,1544,3.536,1545,3.536,1546,3.536,1547,5.036,1548,3.536,1549,3.536,1550,3.082,1551,3.536,1552,3.536,1553,3.536,1554,5.036,1555,3.536,1556,3.536,1557,3.536,1558,5.036,1559,3.536,1560,3.082,1561,3.536,1562,3.536,1563,3.536,1564,3.536,1565,3.536,1566,5.036,1567,3.536,1568,3.536,1569,3.082,1570,3.536,1571,3.536,1572,3.536,1573,3.536,1574,3.536,1575,3.536,1576,3.536,1577,3.536,1578,3.536,1579,3.536,1580,3.536,1581,3.536,1582,5.036,1583,3.536,1584,3.536,1585,3.536,1586,3.536,1587,3.536,1588,3.536,1589,3.536,1590,3.536,1591,5.036,1592,5.036,1593,5.036,1594,3.536,1595,3.536,1596,3.536,1597,3.536,1598,3.536,1599,3.536,1600,3.536,1601,3.536,1602,3.536,1603,3.536,1604,3.536,1605,3.536,1606,5.036,1607,3.536,1608,5.036,1609,3.536,1610,3.536,1611,3.536,1612,3.536,1613,5.036,1614,3.082,1615,3.536,1616,3.536,1617,3.536,1618,3.536,1619,3.536,1620,3.536,1621,3.536,1622,3.536,1623,3.536,1624,3.536,1625,3.536,1626,3.536,1627,3.536,1628,3.536,1629,3.536,1630,3.536,1631,3.536,1632,3.536,1633,3.536,1634,3.536,1635,3.536,1636,3.536,1637,3.536,1638,3.536,1639,3.536,1640,3.536,1641,3.536,1642,3.536,1643,3.536,1644,3.536,1645,3.536]],["title/dependencies.html",[706,2.105,1427,2.967]],["body/dependencies.html",[23,0.013,44,2.391,65,0.009,66,0.011,67,0.009,73,0.701,123,2.505,145,2.599,238,3.139,510,2.983,706,2.391,727,3.314,774,4.381,840,3.314,990,4.381,1001,4.029,1059,4.029,1466,4.852,1646,5.567,1647,8.226,1648,5.567,1649,7.655,1650,5.567,1651,5.567,1652,5.567,1653,5.567,1654,6.804,1655,5.93,1656,5.567,1657,4.852,1658,5.567,1659,5.567,1660,5.567,1661,5.567,1662,5.567,1663,5.567,1664,5.567,1665,5.567,1666,4.852,1667,5.567,1668,5.567,1669,5.567,1670,5.567]],["title/miscellaneous/enumerations.html",[1671,1.919,1672,4.272]],["body/miscellaneous/enumerations.html",[1,0.893,6,0.176,7,0.29,12,0.267,13,1.189,23,0.013,65,0.01,66,0.011,67,0.01,69,3.715,77,3.94,78,2.68,79,3.94,80,3.715,81,4.35,83,2.784,279,3.72,1671,3.519,1672,5.439,1673,4.911]],["title/miscellaneous/functions.html",[1671,1.919,1674,4.272]],["body/miscellaneous/functions.html",[6,0.21,7,0.345,9,0.818,10,3.701,11,0.542,12,0.327,13,0.974,23,0.013,38,2.034,52,1.654,65,0.008,66,0.01,67,0.008,78,3.038,92,1.751,96,2.604,101,2.387,104,2.455,110,2.919,111,2.888,124,0.623,149,2.197,165,2.495,170,0.698,171,2.563,174,2.74,179,3.296,184,2.111,280,2.888,390,2.883,392,3.324,461,4.346,467,5.002,564,2.612,591,4.672,592,4.457,614,4.672,617,4.025,645,5.626,716,4.457,717,5.626,730,5.626,737,4.457,742,5.626,761,4.457,802,3.639,1671,2.883,1674,4.457,1675,4.457,1676,6.474,1677,4.457,1678,5.114,1679,5.114,1680,4.457,1681,5.114,1682,5.114,1683,5.114,1684,5.114,1685,5.114,1686,5.114,1687,5.114,1688,5.114,1689,5.114]],["title/index.html",[13,0.649,1372,2.149,1373,2.292]],["body/index.html",[0,0.181,1,0.535,12,0.343,14,1.161,23,0.01,34,0.709,38,1.331,65,0.007,66,0.01,67,0.007,78,2.897,84,2.257,101,3.149,111,2.709,114,2.48,116,2.48,123,2.229,124,0.651,127,1.476,142,1.865,147,2.48,169,2.257,175,1.857,178,2.609,182,3.244,208,2,228,2.498,240,2.363,244,2.363,247,2.48,249,2.48,251,2.921,253,1.529,258,4.033,259,3.642,261,3.116,287,3.244,315,4.033,316,3.349,335,3.445,349,2.48,352,4.295,364,3.642,365,4.033,366,4.033,423,3.642,475,2.755,481,3.615,485,3.019,486,4.764,487,3.642,489,3.349,490,3.642,493,3.413,494,3.244,495,3.349,500,2.48,507,1.91,545,2.071,549,3.642,550,4.033,564,3.091,706,1.988,715,2.16,745,3.603,749,4.076,806,4.033,815,4.764,1020,4.033,1167,4.033,1172,3.642,1177,3.116,1191,2.678,1256,5.276,1374,5.309,1376,5.276,1377,5.276,1379,5.276,1381,4.764,1393,5.631,1413,5.276,1422,5.844,1454,5.88,1666,4.033,1690,4.628,1691,4.628,1692,4.628,1693,4.628,1694,4.628,1695,4.628,1696,4.628,1697,4.628,1698,4.628,1699,4.628,1700,4.628,1701,6.053,1702,4.628,1703,4.628,1704,4.033,1705,6.053,1706,6.053,1707,4.628,1708,4.628,1709,4.033,1710,4.033,1711,4.628,1712,4.628]],["title/license.html",[1372,2.149,1373,2.292,1713,3.405]],["body/license.html",[23,0.01,37,2.114,65,0.008,66,0.01,67,0.008,101,3.091,155,3.003,241,3.362,507,2.198,715,2.486,887,4.191,1401,4.641,1416,5.67,1422,4.191,1479,4.641,1484,4.641,1487,5.77,1498,4.641,1569,4.641,1614,4.641,1709,4.641,1710,4.641,1714,4.641,1715,5.326,1716,5.326,1717,7.205,1718,5.326,1719,5.326,1720,5.326,1721,5.326,1722,5.326,1723,6.621,1724,8.165,1725,5.326,1726,5.326,1727,5.326,1728,6.621,1729,5.326,1730,5.326,1731,5.326,1732,4.641,1733,5.326,1734,5.326,1735,5.326,1736,5.326,1737,6.621,1738,5.326,1739,5.326,1740,5.326,1741,5.326,1742,5.326,1743,5.326,1744,6.621,1745,6.621,1746,5.326,1747,5.326,1748,5.326,1749,5.326,1750,5.326,1751,5.326,1752,5.326,1753,5.326,1754,5.326,1755,5.326,1756,5.326,1757,5.326,1758,5.326,1759,5.326,1760,5.326,1761,5.326,1762,5.326,1763,5.326,1764,5.326,1765,5.326,1766,5.326,1767,5.326,1768,5.326,1769,5.326,1770,5.326,1771,5.326]],["title/modules.html",[521,1.545]],["body/modules.html",[23,0.01,25,3.594,65,0.008,66,0.01,67,0.008,114,4.358,520,4.121,521,1.447,705,3.287,798,3.506,979,3.769,984,3.287,985,3.506,1006,3.287,1007,4.395,1008,3.287,1009,3.506,1010,3.506,1011,3.287,1012,3.287,1013,3.287,1014,3.287,1015,3.506,1016,3.287,1017,3.506,1043,3.506,1047,3.506,1048,3.506,1086,3.769,1655,7.089,1772,8.369,1773,8.507,1774,8.134]],["title/overview.html",[1775,4.847]],["body/overview.html",[2,0.687,23,0.013,46,1.464,47,1.601,65,0.005,66,0.007,67,0.005,124,0.303,244,3.558,247,2.936,249,3.733,255,3.928,267,0.902,335,1.601,384,2.27,415,1.867,473,3.089,498,1.347,500,1.68,506,3.262,509,4.147,512,4.479,515,3.928,520,3.815,521,0.871,545,1.403,705,4.934,706,1.347,707,1.601,708,1.601,709,2.733,710,2.733,711,2.733,712,2.733,713,2.358,714,1.464,715,1.464,745,3.262,798,4.913,799,2.733,800,2.733,979,5.695,980,2.733,981,2.733,982,2.733,983,2.733,984,4.897,985,5.649,1003,2.733,1004,2.733,1005,2.733,1006,4.513,1007,4.691,1008,4.513,1009,4.691,1010,4.691,1011,4.513,1012,4.513,1013,4.513,1014,4.513,1015,4.691,1016,4.513,1017,4.691,1043,4.813,1044,2.733,1045,2.733,1046,2.733,1047,4.996,1048,4.996,1072,2.733,1073,2.733,1074,2.733,1077,2.733,1078,2.733,1079,2.733,1080,2.733,1081,4.312,1082,4.312,1086,5.892,1087,2.733,1088,2.733,1106,3.459,1250,2.733,1251,2.733,1252,3.689,1253,3.262,1704,2.733,1775,2.733,1776,3.136,1777,3.136,1778,3.136]],["title/todo.html",[1330,2.679,1372,2.149,1373,2.292]],["body/todo.html",[12,0.329,23,0.011,65,0.009,66,0.011,67,0.009,84,3.354,110,3.056,114,3.685,118,2.086,123,2.727,124,0.547,141,2.086,146,1.807,161,2.763,162,3.814,204,3.194,228,2.338,232,3.814,253,1.872,259,4.458,275,3.814,481,3.035,500,3.035,507,2.338,516,2.433,521,1.574,564,3.512,632,3.814,651,4.937,833,4.937,1170,4.937,1177,5.465,1187,4.458,1195,4.937,1257,4.1,1318,2.535,1330,4.458,1381,4.458,1392,4.937,1550,4.937,1560,4.937,1657,4.937,1714,4.937,1732,4.937,1779,5.665,1780,5.665,1781,5.665,1782,5.665,1783,5.665,1784,5.665,1785,5.665,1786,5.665,1787,5.665,1788,5.665]],["title/miscellaneous/typealiases.html",[1671,1.919,1789,4.902]],["body/miscellaneous/typealiases.html",[1,0.786,6,0.192,7,0.316,8,2.837,11,0.81,12,0.29,13,1.058,18,1.407,23,0.013,25,2.386,26,2.205,27,2.486,28,2.837,29,3.47,30,3.47,31,2.386,32,2.386,33,3.47,38,2.111,39,2.71,43,2.71,49,2.71,55,2.327,62,2.71,63,2.593,64,3.47,65,0.009,66,0.011,67,0.009,69,3.307,74,3.74,75,3.74,77,3.507,78,2.386,79,3.507,84,2.71,85,4.575,86,2.293,87,3.307,88,4.575,89,1.836,90,3.74,91,4.575,1671,3.132,1673,5.777,1790,5.555,1791,6.795]],["title/miscellaneous/variables.html",[1472,3.857,1671,1.919]],["body/miscellaneous/variables.html",[6,0.212,7,0.335,11,0.78,12,0.335,13,0.666,18,0.642,19,1.039,23,0.013,34,1.237,38,1.435,65,0.006,66,0.008,67,0.006,69,2.079,78,1.5,92,1.709,100,4.545,110,2.405,112,1.806,114,1.872,118,1.286,120,3.139,121,3.265,122,1.784,123,2.341,124,0.337,126,1.838,127,2.349,128,2.352,129,1.838,130,2.352,134,2.234,135,2.352,142,1.076,146,1.114,149,1.5,157,1.387,164,2.234,168,2.205,169,1.704,170,0.681,173,1.631,183,1.631,190,1.872,191,2.234,192,2.972,193,2.079,194,1.704,195,2.079,196,2.079,197,2.079,198,2.972,199,2.205,200,2.079,201,2.815,202,2.205,215,3.044,216,3.122,217,2.749,218,3.929,220,3.929,228,2.624,230,5.541,240,2.549,249,1.872,251,3.152,252,4.351,253,2.101,254,5.541,255,1.969,256,2.524,271,1.631,279,4.104,439,3.613,440,2.749,463,2.749,464,3.361,465,2.749,466,2.528,467,2.352,468,3.613,469,2.749,470,2.079,471,3.929,472,2.749,473,1.969,481,1.872,494,3.122,507,2.061,512,2.972,513,3.28,515,1.969,522,2.749,549,2.749,774,2.749,994,4.351,1052,2.749,1060,2.528,1081,3.929,1082,3.929,1091,2.749,1095,5.078,1472,2.749,1671,1.969,1673,4.585,1675,3.044,1676,4.351,1677,3.044,1680,3.044,1792,4.993,1793,4.993,1794,4.993,1795,5.826,1796,4.993,1797,3.493,1798,3.493,1799,5.826,1800,4.993,1801,4.993,1802,4.993,1803,5.826,1804,3.493,1805,3.493,1806,3.493,1807,3.493,1808,5.826,1809,3.493,1810,3.493,1811,4.993,1812,3.493,1813,3.493,1814,3.493,1815,3.493,1816,3.493]]],"invertedIndex":[["",{"_index":23,"title":{},"body":{"interfaces/Block.html":{},"interfaces/BlockData.html":{},"interfaces/ChangeMap.html":{},"interfaces/CreateEditorJSOptions.html":{},"interfaces/EditorJSChange.html":{},"interfaces/EditorJSClass.html":{},"interfaces/EditorJSInstanceConfig.html":{},"interfaces/EditorJSMaterialForm.html":{},"interfaces/EditorMap.html":{},"interfaces/Header.html":{},"interfaces/HeaderBlock.html":{},"interfaces/Image.html":{},"interfaces/ImageBlock.html":{},"interfaces/InjectorApiCallOptions.html":{},"interfaces/InjectorApiCallResponse.html":{},"interfaces/InjectorMethodOption.html":{},"interfaces/List.html":{},"interfaces/ListBlock.html":{},"classes/MockEditorJS.html":{},"injectables/MockNgZone.html":{},"classes/MockPlugin.html":{},"interfaces/NgxEditorJSConfig.html":{},"components/NgxEditorJSDemoHomeComponent.html":{},"modules/NgxEditorJSDemoMaterialModule.html":{},"directives/NgxEditorJSDirective.html":{},"modules/NgxEditorJSModule.html":{},"interfaces/NgxEditorJSModuleConfig.html":{},"injectables/NgxEditorJSPluginService.html":{},"modules/NgxEditorJSPluginServiceModule.html":{},"injectables/NgxEditorJSService.html":{},"modules/NgxEditorjsDemoModule.html":{},"modules/NgxEditorjsPluginsModule.html":{},"modules/NgxTinynodesComponentsModule.html":{},"interfaces/NgxTinynodesMatFieldComponent.html":{},"components/NgxTinynodesMatJsonOutputComponent.html":{},"modules/NgxTinynodesMatJsonOutputModule.html":{},"modules/NgxTinynodesMatTagInputModule.html":{},"modules/NgxTinynodesMaterialFormFieldDemo.html":{},"components/NgxTinynodesMaterialFormFieldDemoComponent.html":{},"interfaces/Page.html":{},"interfaces/PageBlock.html":{},"components/PageContainerComponent.html":{},"modules/PageStoreModule.html":{},"injectables/PagesQuery.html":{},"injectables/PagesService.html":{},"interfaces/PagesState.html":{},"injectables/PagesStore.html":{},"interfaces/Paragraph.html":{},"interfaces/ParagraphBlock.html":{},"modules/PluginCodeModule.html":{},"interfaces/PluginConfig.html":{},"interfaces/PluginConfigMap.html":{},"modules/PluginEmbedModule.html":{},"modules/PluginHeaderModule.html":{},"modules/PluginImageModule.html":{},"modules/PluginInlineCodeModule.html":{},"modules/PluginLinkModule.html":{},"modules/PluginListModule.html":{},"modules/PluginMarkerModule.html":{},"modules/PluginParagraphModule.html":{},"modules/PluginQuoteModule.html":{},"modules/PluginSimpleImageModule.html":{},"modules/PluginWarningModule.html":{},"interfaces/ReadyMap.html":{},"interfaces/SavedMap.html":{},"interfaces/Tag.html":{},"interfaces/ToolSettingsMap.html":{},"changelog.html":{},"contributing.html":{},"dependencies.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"index.html":{},"license.html":{},"modules.html":{},"overview.html":{},"todo.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["0",{"_index":194,"title":{},"body":{"interfaces/EditorJSClass.html":{},"interfaces/EditorJSInstanceConfig.html":{},"interfaces/EditorJSMaterialForm.html":{},"interfaces/InjectorApiCallOptions.html":{},"interfaces/InjectorApiCallResponse.html":{},"interfaces/InjectorMethodOption.html":{},"directives/NgxEditorJSDirective.html":{},"injectables/NgxEditorJSService.html":{},"components/NgxTinynodesMaterialFormFieldDemoComponent.html":{},"components/PageContainerComponent.html":{},"miscellaneous/variables.html":{}}}],["0.0.5",{"_index":1664,"title":{},"body":{"dependencies.html":{}}}],["0.12.2",{"_index":1662,"title":{},"body":{"dependencies.html":{}}}],["0.9.1",{"_index":1670,"title":{},"body":{"dependencies.html":{}}}],["1",{"_index":46,"title":{},"body":{"interfaces/Block.html":{},"interfaces/Header.html":{},"interfaces/HeaderBlock.html":{},"interfaces/Image.html":{},"interfaces/ImageBlock.html":{},"interfaces/List.html":{},"interfaces/ListBlock.html":{},"components/NgxTinynodesMaterialFormFieldDemoComponent.html":{},"components/PageContainerComponent.html":{},"interfaces/Paragraph.html":{},"interfaces/ParagraphBlock.html":{},"overview.html":{}}}],["1.2",{"_index":1432,"title":{},"body":{"changelog.html":{}}}],["1.4",{"_index":1643,"title":{},"body":{"contributing.html":{}}}],["10",{"_index":1340,"title":{},"body":{"modules/PluginHeaderModule.html":{}}}],["100",{"_index":1201,"title":{},"body":{"components/NgxTinynodesMaterialFormFieldDemoComponent.html":{},"components/PageContainerComponent.html":{}}}],["100vh",{"_index":1202,"title":{},"body":{"components/NgxTinynodesMaterialFormFieldDemoComponent.html":{},"components/PageContainerComponent.html":{}}}],["12th",{"_index":1429,"title":{},"body":{"changelog.html":{}}}],["13th",{"_index":1425,"title":{},"body":{"changelog.html":{}}}],["15px",{"_index":1210,"title":{},"body":{"components/NgxTinynodesMaterialFormFieldDemoComponent.html":{}}}],["15th",{"_index":1414,"title":{},"body":{"changelog.html":{}}}],["2",{"_index":1777,"title":{},"body":{"overview.html":{}}}],["2.0.8",{"_index":1661,"title":{},"body":{"dependencies.html":{}}}],["2.4.0",{"_index":1665,"title":{},"body":{"dependencies.html":{}}}],["2019",{"_index":1401,"title":{},"body":{"changelog.html":{},"license.html":{}}}],["22nd",{"_index":1400,"title":{},"body":{"changelog.html":{}}}],["24",{"_index":1776,"title":{},"body":{"overview.html":{}}}],["3.1.3",{"_index":1659,"title":{},"body":{"dependencies.html":{}}}],["32",{"_index":1778,"title":{},"body":{"overview.html":{}}}],["4",{"_index":1244,"title":{},"body":{"components/PageContainerComponent.html":{}}}],["6",{"_index":47,"title":{},"body":{"interfaces/Block.html":{},"interfaces/Header.html":{},"interfaces/HeaderBlock.html":{},"interfaces/Image.html":{},"interfaces/ImageBlock.html":{},"interfaces/List.html":{},"interfaces/ListBlock.html":{},"interfaces/Paragraph.html":{},"interfaces/ParagraphBlock.html":{},"overview.html":{}}}],["6.5.2",{"_index":1668,"title":{},"body":{"dependencies.html":{}}}],["6.9.0",{"_index":1667,"title":{},"body":{"dependencies.html":{}}}],["7",{"_index":1704,"title":{},"body":{"index.html":{},"overview.html":{}}}],["8.0.0",{"_index":1647,"title":{},"body":{"dependencies.html":{}}}],["8.0.1",{"_index":1649,"title":{},"body":{"dependencies.html":{}}}],["_disabled",{"_index":306,"title":{},"body":{"interfaces/EditorJSMaterialForm.html":{}}}],["_empty",{"_index":312,"title":{},"body":{"interfaces/EditorJSMaterialForm.html":{}}}],["_focused",{"_index":293,"title":{},"body":{"interfaces/EditorJSMaterialForm.html":{}}}],["_placeholder",{"_index":288,"title":{},"body":{"interfaces/EditorJSMaterialForm.html":{}}}],["_required",{"_index":299,"title":{},"body":{"interfaces/EditorJSMaterialForm.html":{}}}],["a.time",{"_index":948,"title":{},"body":{"injectables/NgxEditorJSService.html":{}}}],["above",{"_index":1743,"title":{},"body":{"license.html":{}}}],["abusive",{"_index":1609,"title":{},"body":{"contributing.html":{}}}],["acceptable",{"_index":1564,"title":{},"body":{"contributing.html":{}}}],["accepting",{"_index":1529,"title":{},"body":{"contributing.html":{}}}],["access",{"_index":315,"title":{},"body":{"interfaces/EditorJSMaterialForm.html":{},"index.html":{}}}],["accessor",{"_index":1816,"title":{},"body":{"miscellaneous/variables.html":{}}}],["accessors",{"_index":563,"title":{},"body":{"directives/NgxEditorJSDirective.html":{},"components/NgxTinynodesMaterialFormFieldDemoComponent.html":{},"components/PageContainerComponent.html":{},"injectables/PagesService.html":{}}}],["account",{"_index":1599,"title":{},"body":{"contributing.html":{}}}],["acting",{"_index":1600,"title":{},"body":{"contributing.html":{}}}],["action",{"_index":1569,"title":{},"body":{"contributing.html":{},"license.html":{}}}],["actions",{"_index":865,"title":{},"body":{"injectables/NgxEditorJSService.html":{}}}],["active",{"_index":577,"title":{},"body":{"directives/NgxEditorJSDirective.html":{},"components/NgxTinynodesMaterialFormFieldDemoComponent.html":{}}}],["actual_component",{"_index":519,"title":{},"body":{"components/NgxEditorJSDemoHomeComponent.html":{},"components/NgxTinynodesMatJsonOutputComponent.html":{},"components/NgxTinynodesMaterialFormFieldDemoComponent.html":{},"components/PageContainerComponent.html":{}}}],["adapted",{"_index":1641,"title":{},"body":{"contributing.html":{}}}],["add",{"_index":1177,"title":{},"body":{"components/NgxTinynodesMaterialFormFieldDemoComponent.html":{},"components/PageContainerComponent.html":{},"injectables/PagesService.html":{},"index.html":{},"todo.html":{}}}],["add(page",{"_index":1278,"title":{},"body":{"injectables/PagesService.html":{}}}],["addblock",{"_index":1272,"title":{},"body":{"injectables/PagesService.html":{}}}],["addblock(pageid",{"_index":1280,"title":{},"body":{"injectables/PagesService.html":{}}}],["added",{"_index":32,"title":{},"body":{"interfaces/Block.html":{},"interfaces/Header.html":{},"interfaces/HeaderBlock.html":{},"interfaces/Image.html":{},"interfaces/ImageBlock.html":{},"interfaces/List.html":{},"interfaces/ListBlock.html":{},"directives/NgxEditorJSDirective.html":{},"injectables/NgxEditorJSService.html":{},"injectables/PagesService.html":{},"interfaces/Paragraph.html":{},"interfaces/ParagraphBlock.html":{},"changelog.html":{},"miscellaneous/typealiases.html":{}}}],["additional",{"_index":21,"title":{},"body":{"interfaces/Block.html":{},"interfaces/Header.html":{},"interfaces/HeaderBlock.html":{},"interfaces/Image.html":{},"interfaces/ImageBlock.html":{},"interfaces/List.html":{},"interfaces/ListBlock.html":{},"injectables/NgxEditorJSService.html":{},"modules/NgxEditorjsPluginsModule.html":{},"components/NgxTinynodesMaterialFormFieldDemoComponent.html":{},"components/PageContainerComponent.html":{},"interfaces/Paragraph.html":{},"interfaces/ParagraphBlock.html":{}}}],["address",{"_index":1554,"title":{},"body":{"contributing.html":{}}}],["adds",{"_index":843,"title":{},"body":{"injectables/NgxEditorJSService.html":{}}}],["advances",{"_index":1544,"title":{},"body":{"contributing.html":{}}}],["aftercontentinit",{"_index":225,"title":{},"body":{"interfaces/EditorJSMaterialForm.html":{},"directives/NgxEditorJSDirective.html":{},"interfaces/NgxTinynodesMatFieldComponent.html":{},"components/NgxTinynodesMaterialFormFieldDemoComponent.html":{},"components/PageContainerComponent.html":{}}}],["against",{"_index":839,"title":{},"body":{"injectables/NgxEditorJSService.html":{}}}],["age",{"_index":1502,"title":{},"body":{"contributing.html":{}}}],["aliases",{"_index":1790,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["aligned",{"_index":1578,"title":{},"body":{"contributing.html":{}}}],["allow",{"_index":718,"title":{},"body":{"modules/NgxEditorJSModule.html":{},"modules/PageStoreModule.html":{}}}],["allows",{"_index":459,"title":{},"body":{"interfaces/NgxEditorJSConfig.html":{},"interfaces/NgxEditorJSModuleConfig.html":{},"injectables/NgxEditorJSService.html":{}}}],["along",{"_index":1386,"title":{},"body":{"changelog.html":{}}}],["and/or",{"_index":1735,"title":{},"body":{"license.html":{}}}],["angular",{"_index":352,"title":{},"body":{"interfaces/EditorJSMaterialForm.html":{},"components/NgxEditorJSDemoHomeComponent.html":{},"directives/NgxEditorJSDirective.html":{},"modules/NgxEditorJSModule.html":{},"injectables/NgxEditorJSService.html":{},"components/NgxTinynodesMaterialFormFieldDemoComponent.html":{},"changelog.html":{},"index.html":{}}}],["angular/animations",{"_index":1646,"title":{},"body":{"dependencies.html":{}}}],["angular/cdk",{"_index":1648,"title":{},"body":{"dependencies.html":{}}}],["angular/cdk/a11y",{"_index":222,"title":{},"body":{"interfaces/EditorJSMaterialForm.html":{}}}],["angular/cdk/coercion",{"_index":224,"title":{},"body":{"interfaces/EditorJSMaterialForm.html":{}}}],["angular/common",{"_index":727,"title":{},"body":{"modules/NgxEditorJSModule.html":{},"modules/NgxEditorjsDemoModule.html":{},"modules/NgxEditorjsPluginsModule.html":{},"modules/NgxTinynodesMatJsonOutputModule.html":{},"modules/NgxTinynodesMatTagInputModule.html":{},"modules/NgxTinynodesMaterialFormFieldDemo.html":{},"dependencies.html":{}}}],["angular/compiler",{"_index":1650,"title":{},"body":{"dependencies.html":{}}}],["angular/core",{"_index":73,"title":{},"body":{"interfaces/BlockData.html":{},"interfaces/EditorJSClass.html":{},"interfaces/EditorJSInstanceConfig.html":{},"interfaces/EditorJSMaterialForm.html":{},"interfaces/InjectorApiCallOptions.html":{},"interfaces/InjectorApiCallResponse.html":{},"interfaces/InjectorMethodOption.html":{},"injectables/MockNgZone.html":{},"interfaces/NgxEditorJSConfig.html":{},"components/NgxEditorJSDemoHomeComponent.html":{},"modules/NgxEditorJSDemoMaterialModule.html":{},"directives/NgxEditorJSDirective.html":{},"modules/NgxEditorJSModule.html":{},"interfaces/NgxEditorJSModuleConfig.html":{},"injectables/NgxEditorJSPluginService.html":{},"modules/NgxEditorJSPluginServiceModule.html":{},"injectables/NgxEditorJSService.html":{},"modules/NgxEditorjsDemoModule.html":{},"modules/NgxEditorjsPluginsModule.html":{},"modules/NgxTinynodesComponentsModule.html":{},"interfaces/NgxTinynodesMatFieldComponent.html":{},"components/NgxTinynodesMatJsonOutputComponent.html":{},"modules/NgxTinynodesMatJsonOutputModule.html":{},"modules/NgxTinynodesMatTagInputModule.html":{},"modules/NgxTinynodesMaterialFormFieldDemo.html":{},"components/NgxTinynodesMaterialFormFieldDemoComponent.html":{},"components/PageContainerComponent.html":{},"modules/PageStoreModule.html":{},"injectables/PagesQuery.html":{},"injectables/PagesService.html":{},"interfaces/PagesState.html":{},"injectables/PagesStore.html":{},"modules/PluginCodeModule.html":{},"interfaces/PluginConfig.html":{},"interfaces/PluginConfigMap.html":{},"modules/PluginEmbedModule.html":{},"modules/PluginHeaderModule.html":{},"modules/PluginImageModule.html":{},"modules/PluginInlineCodeModule.html":{},"modules/PluginLinkModule.html":{},"modules/PluginListModule.html":{},"modules/PluginMarkerModule.html":{},"modules/PluginParagraphModule.html":{},"modules/PluginQuoteModule.html":{},"modules/PluginSimpleImageModule.html":{},"modules/PluginWarningModule.html":{},"interfaces/ToolSettingsMap.html":{},"dependencies.html":{}}}],["angular/flex",{"_index":1651,"title":{},"body":{"dependencies.html":{}}}],["angular/forms",{"_index":238,"title":{},"body":{"interfaces/EditorJSMaterialForm.html":{},"modules/NgxEditorJSModule.html":{},"modules/NgxEditorjsDemoModule.html":{},"interfaces/NgxTinynodesMatFieldComponent.html":{},"modules/NgxTinynodesMatTagInputModule.html":{},"modules/NgxTinynodesMaterialFormFieldDemo.html":{},"components/NgxTinynodesMaterialFormFieldDemoComponent.html":{},"dependencies.html":{}}}],["angular/material",{"_index":1059,"title":{},"body":{"interfaces/NgxTinynodesMatFieldComponent.html":{},"modules/NgxTinynodesMatJsonOutputModule.html":{},"modules/NgxTinynodesMatTagInputModule.html":{},"dependencies.html":{}}}],["angular/material/badge",{"_index":526,"title":{},"body":{"modules/NgxEditorJSDemoMaterialModule.html":{}}}],["angular/material/button",{"_index":528,"title":{},"body":{"modules/NgxEditorJSDemoMaterialModule.html":{}}}],["angular/material/card",{"_index":530,"title":{},"body":{"modules/NgxEditorJSDemoMaterialModule.html":{}}}],["angular/material/chips",{"_index":532,"title":{},"body":{"modules/NgxEditorJSDemoMaterialModule.html":{}}}],["angular/material/expansion",{"_index":534,"title":{},"body":{"modules/NgxEditorJSDemoMaterialModule.html":{}}}],["angular/material/form",{"_index":239,"title":{},"body":{"interfaces/EditorJSMaterialForm.html":{},"modules/NgxEditorJSDemoMaterialModule.html":{},"modules/NgxEditorJSModule.html":{}}}],["angular/material/grid",{"_index":537,"title":{},"body":{"modules/NgxEditorJSDemoMaterialModule.html":{}}}],["angular/material/icon",{"_index":539,"title":{},"body":{"modules/NgxEditorJSDemoMaterialModule.html":{}}}],["angular/material/input",{"_index":541,"title":{},"body":{"modules/NgxEditorJSDemoMaterialModule.html":{},"modules/NgxEditorJSModule.html":{}}}],["angular/material/list",{"_index":543,"title":{},"body":{"modules/NgxEditorJSDemoMaterialModule.html":{}}}],["angular/platform",{"_index":1654,"title":{},"body":{"dependencies.html":{}}}],["angular/router",{"_index":990,"title":{},"body":{"modules/NgxEditorjsDemoModule.html":{},"modules/NgxTinynodesMaterialFormFieldDemo.html":{},"dependencies.html":{}}}],["any).defaultlevel.number",{"_index":1341,"title":{},"body":{"modules/PluginHeaderModule.html":{}}}],["any).onready",{"_index":412,"title":{},"body":{"classes/MockEditorJS.html":{},"classes/MockPlugin.html":{}}}],["api",{"_index":208,"title":{},"body":{"interfaces/EditorJSClass.html":{},"interfaces/EditorJSInstanceConfig.html":{},"interfaces/InjectorApiCallOptions.html":{},"interfaces/InjectorApiCallResponse.html":{},"interfaces/InjectorMethodOption.html":{},"components/NgxEditorJSDemoHomeComponent.html":{},"injectables/NgxEditorJSService.html":{},"modules/PluginCodeModule.html":{},"modules/PluginEmbedModule.html":{},"modules/PluginHeaderModule.html":{},"modules/PluginImageModule.html":{},"modules/PluginInlineCodeModule.html":{},"modules/PluginLinkModule.html":{},"modules/PluginListModule.html":{},"modules/PluginMarkerModule.html":{},"modules/PluginParagraphModule.html":{},"modules/PluginQuoteModule.html":{},"modules/PluginSimpleImageModule.html":{},"modules/PluginWarningModule.html":{},"changelog.html":{},"index.html":{}}}],["apicall",{"_index":817,"title":{},"body":{"injectables/NgxEditorJSService.html":{}}}],["apicall(options",{"_index":826,"title":{},"body":{"injectables/NgxEditorJSService.html":{}}}],["app",{"_index":470,"title":{},"body":{"interfaces/NgxEditorJSConfig.html":{},"modules/NgxEditorJSModule.html":{},"interfaces/NgxEditorJSModuleConfig.html":{},"components/NgxTinynodesMaterialFormFieldDemoComponent.html":{},"components/PageContainerComponent.html":{},"changelog.html":{},"miscellaneous/variables.html":{}}}],["appear",{"_index":1173,"title":{},"body":{"components/NgxTinynodesMaterialFormFieldDemoComponent.html":{},"components/PageContainerComponent.html":{}}}],["appearance",{"_index":1512,"title":{},"body":{"contributing.html":{}}}],["application",{"_index":493,"title":{},"body":{"components/NgxEditorJSDemoHomeComponent.html":{},"modules/NgxEditorJSModule.html":{},"injectables/NgxEditorJSPluginService.html":{},"injectables/NgxEditorJSService.html":{},"components/NgxTinynodesMaterialFormFieldDemoComponent.html":{},"components/PageContainerComponent.html":{},"changelog.html":{},"index.html":{}}}],["applicationref",{"_index":823,"title":{},"body":{"injectables/NgxEditorJSService.html":{}}}],["applies",{"_index":1589,"title":{},"body":{"contributing.html":{}}}],["appointed",{"_index":1601,"title":{},"body":{"contributing.html":{}}}],["appropriate",{"_index":1566,"title":{},"body":{"contributing.html":{}}}],["appservice",{"_index":1107,"title":{},"body":{"components/NgxTinynodesMaterialFormFieldDemoComponent.html":{},"components/PageContainerComponent.html":{}}}],["architecture",{"_index":1388,"title":{},"body":{"changelog.html":{}}}],["area",{"_index":458,"title":{},"body":{"interfaces/NgxEditorJSConfig.html":{},"interfaces/NgxEditorJSModuleConfig.html":{},"components/NgxTinynodesMaterialFormFieldDemoComponent.html":{},"components/PageContainerComponent.html":{}}}],["args",{"_index":213,"title":{},"body":{"interfaces/EditorJSClass.html":{},"interfaces/EditorJSInstanceConfig.html":{},"interfaces/InjectorApiCallOptions.html":{},"interfaces/InjectorApiCallResponse.html":{},"interfaces/InjectorMethodOption.html":{},"injectables/NgxEditorJSService.html":{}}}],["argument",{"_index":830,"title":{},"body":{"injectables/NgxEditorJSService.html":{}}}],["arguments",{"_index":835,"title":{},"body":{"injectables/NgxEditorJSService.html":{}}}],["aria",{"_index":331,"title":{},"body":{"interfaces/EditorJSMaterialForm.html":{}}}],["arising",{"_index":1769,"title":{},"body":{"license.html":{}}}],["array",{"_index":591,"title":{},"body":{"directives/NgxEditorJSDirective.html":{},"injectables/NgxEditorJSPluginService.html":{},"injectables/NgxEditorJSService.html":{},"miscellaneous/functions.html":{}}}],["arrayadd",{"_index":1295,"title":{},"body":{"injectables/PagesService.html":{}}}],["arrayadd(entity.blocks",{"_index":1308,"title":{},"body":{"injectables/PagesService.html":{}}}],["arrayremove",{"_index":1296,"title":{},"body":{"injectables/PagesService.html":{}}}],["arrayremove(entity.blocks",{"_index":1309,"title":{},"body":{"injectables/PagesService.html":{}}}],["asjson",{"_index":1216,"title":{},"body":{"components/PageContainerComponent.html":{}}}],["associated",{"_index":1725,"title":{},"body":{"license.html":{}}}],["async",{"_index":552,"title":{},"body":{"directives/NgxEditorJSDirective.html":{},"injectables/NgxEditorJSService.html":{},"components/PageContainerComponent.html":{}}}],["async/await",{"_index":882,"title":{},"body":{"injectables/NgxEditorJSService.html":{},"changelog.html":{}}}],["attach",{"_index":549,"title":{},"body":{"directives/NgxEditorJSDirective.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["attached",{"_index":571,"title":{},"body":{"directives/NgxEditorJSDirective.html":{}}}],["attacks",{"_index":1549,"title":{},"body":{"contributing.html":{}}}],["attention",{"_index":1543,"title":{},"body":{"contributing.html":{}}}],["attribution",{"_index":1640,"title":{},"body":{"contributing.html":{}}}],["authors",{"_index":1760,"title":{},"body":{"license.html":{}}}],["autofocus",{"_index":441,"title":{},"body":{"interfaces/NgxEditorJSConfig.html":{},"directives/NgxEditorJSDirective.html":{},"interfaces/NgxEditorJSModuleConfig.html":{}}}],["autofocused",{"_index":447,"title":{},"body":{"interfaces/NgxEditorJSConfig.html":{},"interfaces/NgxEditorJSModuleConfig.html":{}}}],["autosave",{"_index":162,"title":{},"body":{"interfaces/CreateEditorJSOptions.html":{},"interfaces/EditorJSMaterialForm.html":{},"directives/NgxEditorJSDirective.html":{},"components/NgxTinynodesMaterialFormFieldDemoComponent.html":{},"todo.html":{}}}],["autosaves",{"_index":582,"title":{},"body":{"directives/NgxEditorJSDirective.html":{}}}],["autosavetime",{"_index":1122,"title":{},"body":{"components/NgxTinynodesMaterialFormFieldDemoComponent.html":{}}}],["available",{"_index":25,"title":{},"body":{"interfaces/Block.html":{},"interfaces/Header.html":{},"interfaces/HeaderBlock.html":{},"interfaces/Image.html":{},"interfaces/ImageBlock.html":{},"interfaces/List.html":{},"interfaces/ListBlock.html":{},"directives/NgxEditorJSDirective.html":{},"injectables/PagesService.html":{},"interfaces/Paragraph.html":{},"interfaces/ParagraphBlock.html":{},"contributing.html":{},"modules.html":{},"miscellaneous/typealiases.html":{}}}],["await",{"_index":662,"title":{},"body":{"directives/NgxEditorJSDirective.html":{},"injectables/NgxEditorJSService.html":{}}}],["b",{"_index":946,"title":{},"body":{"injectables/NgxEditorJSService.html":{}}}],["b.time",{"_index":947,"title":{},"body":{"injectables/NgxEditorJSService.html":{}}}],["back",{"_index":651,"title":{},"body":{"directives/NgxEditorJSDirective.html":{},"todo.html":{}}}],["background",{"_index":58,"title":{},"body":{"interfaces/Block.html":{},"interfaces/Header.html":{},"interfaces/HeaderBlock.html":{},"interfaces/Image.html":{},"interfaces/ImageBlock.html":{},"interfaces/List.html":{},"interfaces/ListBlock.html":{},"interfaces/Paragraph.html":{},"interfaces/ParagraphBlock.html":{}}}],["ban",{"_index":1579,"title":{},"body":{"contributing.html":{}}}],["base",{"_index":10,"title":{},"body":{"interfaces/Block.html":{},"interfaces/EditorJSMaterialForm.html":{},"modules/NgxEditorJSModule.html":{},"miscellaneous/functions.html":{}}}],["based",{"_index":377,"title":{},"body":{"interfaces/EditorJSMaterialForm.html":{}}}],["basic",{"_index":63,"title":{},"body":{"interfaces/Block.html":{},"interfaces/Header.html":{},"interfaces/HeaderBlock.html":{},"interfaces/Image.html":{},"interfaces/ImageBlock.html":{},"interfaces/List.html":{},"interfaces/ListBlock.html":{},"components/NgxEditorJSDemoHomeComponent.html":{},"components/PageContainerComponent.html":{},"interfaces/Paragraph.html":{},"interfaces/ParagraphBlock.html":{},"miscellaneous/typealiases.html":{}}}],["basis",{"_index":1199,"title":{},"body":{"components/NgxTinynodesMaterialFormFieldDemoComponent.html":{}}}],["before",{"_index":587,"title":{},"body":{"directives/NgxEditorJSDirective.html":{},"contributing.html":{}}}],["behavior",{"_index":1518,"title":{},"body":{"contributing.html":{}}}],["behaviors",{"_index":1583,"title":{},"body":{"contributing.html":{}}}],["behaviorsubject",{"_index":139,"title":{},"body":{"interfaces/ChangeMap.html":{},"interfaces/EditorJSChange.html":{},"interfaces/EditorMap.html":{},"directives/NgxEditorJSDirective.html":{},"injectables/NgxEditorJSService.html":{},"components/NgxTinynodesMaterialFormFieldDemoComponent.html":{},"components/PageContainerComponent.html":{},"interfaces/ReadyMap.html":{},"interfaces/SavedMap.html":{}}}],["behaviorsubject(0",{"_index":1144,"title":{},"body":{"components/NgxTinynodesMaterialFormFieldDemoComponent.html":{}}}],["behaviorsubject(editor",{"_index":904,"title":{},"body":{"injectables/NgxEditorJSService.html":{}}}],["behaviorsubject(false",{"_index":649,"title":{},"body":{"directives/NgxEditorJSDirective.html":{},"injectables/NgxEditorJSService.html":{}}}],["behaviorsubject(undefined",{"_index":939,"title":{},"body":{"injectables/NgxEditorJSService.html":{},"components/NgxTinynodesMaterialFormFieldDemoComponent.html":{},"components/PageContainerComponent.html":{}}}],["behaviorsubject(value",{"_index":970,"title":{},"body":{"injectables/NgxEditorJSService.html":{}}}],["being",{"_index":1523,"title":{},"body":{"contributing.html":{}}}],["below",{"_index":1172,"title":{},"body":{"components/NgxTinynodesMaterialFormFieldDemoComponent.html":{},"components/PageContainerComponent.html":{},"index.html":{}}}],["best",{"_index":1533,"title":{},"body":{"contributing.html":{}}}],["beta.26",{"_index":1653,"title":{},"body":{"dependencies.html":{}}}],["better",{"_index":1396,"title":{},"body":{"changelog.html":{}}}],["bind",{"_index":886,"title":{},"body":{"injectables/NgxEditorJSService.html":{}}}],["binding",{"_index":322,"title":{},"body":{"interfaces/EditorJSMaterialForm.html":{}}}],["block",{"_index":1,"title":{"interfaces/Block.html":{}},"body":{"interfaces/Block.html":{},"interfaces/BlockData.html":{},"interfaces/ChangeMap.html":{},"interfaces/EditorJSChange.html":{},"interfaces/EditorJSClass.html":{},"interfaces/EditorJSInstanceConfig.html":{},"interfaces/EditorMap.html":{},"interfaces/Header.html":{},"interfaces/HeaderBlock.html":{},"interfaces/Image.html":{},"interfaces/ImageBlock.html":{},"interfaces/InjectorApiCallOptions.html":{},"interfaces/InjectorApiCallResponse.html":{},"interfaces/InjectorMethodOption.html":{},"interfaces/List.html":{},"interfaces/ListBlock.html":{},"interfaces/NgxEditorJSConfig.html":{},"directives/NgxEditorJSDirective.html":{},"interfaces/NgxEditorJSModuleConfig.html":{},"modules/NgxEditorjsPluginsModule.html":{},"components/NgxTinynodesMaterialFormFieldDemoComponent.html":{},"interfaces/Page.html":{},"interfaces/PageBlock.html":{},"components/PageContainerComponent.html":{},"injectables/PagesService.html":{},"interfaces/Paragraph.html":{},"interfaces/ParagraphBlock.html":{},"modules/PluginCodeModule.html":{},"interfaces/PluginConfig.html":{},"interfaces/PluginConfigMap.html":{},"modules/PluginEmbedModule.html":{},"modules/PluginHeaderModule.html":{},"modules/PluginImageModule.html":{},"modules/PluginInlineCodeModule.html":{},"modules/PluginLinkModule.html":{},"modules/PluginListModule.html":{},"modules/PluginMarkerModule.html":{},"modules/PluginParagraphModule.html":{},"modules/PluginQuoteModule.html":{},"modules/PluginSimpleImageModule.html":{},"modules/PluginWarningModule.html":{},"interfaces/ReadyMap.html":{},"interfaces/SavedMap.html":{},"interfaces/Tag.html":{},"interfaces/ToolSettingsMap.html":{},"changelog.html":{},"miscellaneous/enumerations.html":{},"index.html":{},"miscellaneous/typealiases.html":{}}}],["block.id",{"_index":1310,"title":{},"body":{"injectables/PagesService.html":{}}}],["blockdata",{"_index":68,"title":{"interfaces/BlockData.html":{}},"body":{"interfaces/BlockData.html":{},"interfaces/PluginConfig.html":{},"interfaces/PluginConfigMap.html":{},"interfaces/ToolSettingsMap.html":{}}}],["blockplaceholder",{"_index":442,"title":{},"body":{"interfaces/NgxEditorJSConfig.html":{},"directives/NgxEditorJSDirective.html":{},"interfaces/NgxEditorJSModuleConfig.html":{}}}],["blocks",{"_index":146,"title":{},"body":{"interfaces/ChangeMap.html":{},"interfaces/EditorJSChange.html":{},"interfaces/EditorJSClass.html":{},"interfaces/EditorJSInstanceConfig.html":{},"interfaces/EditorMap.html":{},"interfaces/InjectorApiCallOptions.html":{},"interfaces/InjectorApiCallResponse.html":{},"interfaces/InjectorMethodOption.html":{},"classes/MockEditorJS.html":{},"classes/MockPlugin.html":{},"directives/NgxEditorJSDirective.html":{},"injectables/NgxEditorJSService.html":{},"components/NgxTinynodesMaterialFormFieldDemoComponent.html":{},"interfaces/Page.html":{},"interfaces/PageBlock.html":{},"components/PageContainerComponent.html":{},"injectables/PagesService.html":{},"interfaces/ReadyMap.html":{},"interfaces/SavedMap.html":{},"interfaces/Tag.html":{},"todo.html":{},"miscellaneous/variables.html":{}}}],["blocktypes",{"_index":64,"title":{},"body":{"interfaces/Block.html":{},"interfaces/Header.html":{},"interfaces/HeaderBlock.html":{},"interfaces/Image.html":{},"interfaces/ImageBlock.html":{},"interfaces/List.html":{},"interfaces/ListBlock.html":{},"interfaces/Paragraph.html":{},"interfaces/ParagraphBlock.html":{},"miscellaneous/typealiases.html":{}}}],["blur",{"_index":581,"title":{},"body":{"directives/NgxEditorJSDirective.html":{}}}],["body",{"_index":1503,"title":{},"body":{"contributing.html":{}}}],["boolean",{"_index":57,"title":{},"body":{"interfaces/Block.html":{},"interfaces/BlockData.html":{},"interfaces/EditorJSClass.html":{},"interfaces/EditorJSInstanceConfig.html":{},"interfaces/EditorJSMaterialForm.html":{},"interfaces/Header.html":{},"interfaces/HeaderBlock.html":{},"interfaces/Image.html":{},"interfaces/ImageBlock.html":{},"interfaces/InjectorApiCallOptions.html":{},"interfaces/InjectorApiCallResponse.html":{},"interfaces/InjectorMethodOption.html":{},"interfaces/List.html":{},"interfaces/ListBlock.html":{},"interfaces/NgxEditorJSConfig.html":{},"directives/NgxEditorJSDirective.html":{},"interfaces/NgxEditorJSModuleConfig.html":{},"interfaces/Paragraph.html":{},"interfaces/ParagraphBlock.html":{},"interfaces/PluginConfig.html":{},"interfaces/PluginConfigMap.html":{},"interfaces/ToolSettingsMap.html":{}}}],["bootstrap",{"_index":708,"title":{},"body":{"modules/NgxEditorJSModule.html":{},"modules/NgxEditorJSPluginServiceModule.html":{},"modules/NgxEditorjsDemoModule.html":{},"modules/NgxEditorjsPluginsModule.html":{},"modules/NgxTinynodesComponentsModule.html":{},"modules/NgxTinynodesMatJsonOutputModule.html":{},"modules/NgxTinynodesMatTagInputModule.html":{},"modules/NgxTinynodesMaterialFormFieldDemo.html":{},"modules/PageStoreModule.html":{},"overview.html":{}}}],["border",{"_index":54,"title":{},"body":{"interfaces/Block.html":{},"interfaces/Header.html":{},"interfaces/HeaderBlock.html":{},"interfaces/Image.html":{},"interfaces/ImageBlock.html":{},"interfaces/List.html":{},"interfaces/ListBlock.html":{},"interfaces/Paragraph.html":{},"interfaces/ParagraphBlock.html":{}}}],["both",{"_index":1590,"title":{},"body":{"contributing.html":{}}}],["bottom",{"_index":457,"title":{},"body":{"interfaces/NgxEditorJSConfig.html":{},"directives/NgxEditorJSDirective.html":{},"interfaces/NgxEditorJSModuleConfig.html":{},"components/NgxTinynodesMaterialFormFieldDemoComponent.html":{}}}],["box",{"_index":1695,"title":{},"body":{"index.html":{}}}],["break",{"_index":1444,"title":{},"body":{"changelog.html":{}}}],["breaking",{"_index":1406,"title":{},"body":{"changelog.html":{}}}],["browse",{"_index":1773,"title":{},"body":{"modules.html":{}}}],["browser",{"_index":1655,"title":{},"body":{"dependencies.html":{},"modules.html":{}}}],["bug",{"_index":1436,"title":{},"body":{"changelog.html":{}}}],["build",{"_index":1434,"title":{},"body":{"changelog.html":{},"contributing.html":{}}}],["builder",{"_index":1112,"title":{},"body":{"components/NgxTinynodesMaterialFormFieldDemoComponent.html":{}}}],["bump",{"_index":1404,"title":{},"body":{"changelog.html":{}}}],["buttons",{"_index":1192,"title":{},"body":{"components/NgxTinynodesMaterialFormFieldDemoComponent.html":{}}}],["call",{"_index":185,"title":{},"body":{"interfaces/EditorJSClass.html":{},"interfaces/EditorJSInstanceConfig.html":{},"interfaces/EditorJSMaterialForm.html":{},"interfaces/InjectorApiCallOptions.html":{},"interfaces/InjectorApiCallResponse.html":{},"interfaces/InjectorMethodOption.html":{},"injectables/NgxEditorJSService.html":{},"components/NgxTinynodesMaterialFormFieldDemoComponent.html":{},"components/PageContainerComponent.html":{}}}],["called",{"_index":355,"title":{},"body":{"interfaces/EditorJSMaterialForm.html":{},"directives/NgxEditorJSDirective.html":{},"injectables/NgxEditorJSService.html":{},"components/NgxTinynodesMaterialFormFieldDemoComponent.html":{}}}],["calling",{"_index":207,"title":{},"body":{"interfaces/EditorJSClass.html":{},"interfaces/EditorJSInstanceConfig.html":{},"interfaces/InjectorApiCallOptions.html":{},"interfaces/InjectorApiCallResponse.html":{},"interfaces/InjectorMethodOption.html":{}}}],["calls",{"_index":578,"title":{},"body":{"directives/NgxEditorJSDirective.html":{},"injectables/NgxEditorJSService.html":{},"changelog.html":{}}}],["caption",{"_index":53,"title":{},"body":{"interfaces/Block.html":{},"interfaces/Header.html":{},"interfaces/HeaderBlock.html":{},"interfaces/Image.html":{},"interfaces/ImageBlock.html":{},"interfaces/List.html":{},"interfaces/ListBlock.html":{},"interfaces/Paragraph.html":{},"interfaces/ParagraphBlock.html":{}}}],["card",{"_index":1203,"title":{},"body":{"components/NgxTinynodesMaterialFormFieldDemoComponent.html":{},"components/PageContainerComponent.html":{}}}],["caret",{"_index":832,"title":{},"body":{"injectables/NgxEditorJSService.html":{}}}],["cd",{"_index":568,"title":{},"body":{"directives/NgxEditorJSDirective.html":{},"components/NgxTinynodesMatJsonOutputComponent.html":{},"components/NgxTinynodesMaterialFormFieldDemoComponent.html":{},"components/PageContainerComponent.html":{}}}],["change",{"_index":154,"title":{},"body":{"interfaces/ChangeMap.html":{},"interfaces/CreateEditorJSOptions.html":{},"interfaces/EditorJSChange.html":{},"interfaces/EditorJSClass.html":{},"interfaces/EditorJSInstanceConfig.html":{},"interfaces/EditorJSMaterialForm.html":{},"interfaces/EditorMap.html":{},"interfaces/InjectorApiCallOptions.html":{},"interfaces/InjectorApiCallResponse.html":{},"interfaces/InjectorMethodOption.html":{},"directives/NgxEditorJSDirective.html":{},"injectables/NgxEditorJSService.html":{},"components/NgxTinynodesMaterialFormFieldDemoComponent.html":{},"components/PageContainerComponent.html":{},"interfaces/ReadyMap.html":{},"interfaces/SavedMap.html":{},"changelog.html":{},"contributing.html":{}}}],["change.time",{"_index":1246,"title":{},"body":{"components/PageContainerComponent.html":{}}}],["changed",{"_index":605,"title":{},"body":{"directives/NgxEditorJSDirective.html":{},"components/PageContainerComponent.html":{}}}],["changedetection",{"_index":268,"title":{},"body":{"interfaces/EditorJSMaterialForm.html":{},"components/NgxTinynodesMatJsonOutputComponent.html":{},"components/NgxTinynodesMaterialFormFieldDemoComponent.html":{},"components/PageContainerComponent.html":{}}}],["changedetectionstrategy",{"_index":226,"title":{},"body":{"interfaces/EditorJSMaterialForm.html":{},"components/NgxTinynodesMatJsonOutputComponent.html":{},"components/NgxTinynodesMaterialFormFieldDemoComponent.html":{},"components/PageContainerComponent.html":{}}}],["changedetectionstrategy.onpush",{"_index":269,"title":{},"body":{"interfaces/EditorJSMaterialForm.html":{},"components/NgxTinynodesMatJsonOutputComponent.html":{},"components/NgxTinynodesMaterialFormFieldDemoComponent.html":{},"components/PageContainerComponent.html":{}}}],["changedetectorref",{"_index":227,"title":{},"body":{"interfaces/EditorJSMaterialForm.html":{},"directives/NgxEditorJSDirective.html":{},"components/NgxTinynodesMatJsonOutputComponent.html":{},"components/NgxTinynodesMaterialFormFieldDemoComponent.html":{},"components/PageContainerComponent.html":{}}}],["changelog",{"_index":1374,"title":{"changelog.html":{}},"body":{"changelog.html":{},"index.html":{}}}],["changelogs",{"_index":1378,"title":{},"body":{"changelog.html":{}}}],["changemap",{"_index":136,"title":{"interfaces/ChangeMap.html":{}},"body":{"interfaces/ChangeMap.html":{},"interfaces/EditorJSChange.html":{},"interfaces/EditorMap.html":{},"injectables/NgxEditorJSService.html":{},"interfaces/ReadyMap.html":{},"interfaces/SavedMap.html":{}}}],["changes",{"_index":632,"title":{},"body":{"directives/NgxEditorJSDirective.html":{},"components/NgxTinynodesMaterialFormFieldDemoComponent.html":{},"changelog.html":{},"contributing.html":{},"todo.html":{}}}],["changes.blocks",{"_index":666,"title":{},"body":{"directives/NgxEditorJSDirective.html":{}}}],["changes.blocks.firstchange",{"_index":668,"title":{},"body":{"directives/NgxEditorJSDirective.html":{}}}],["changes.blocks.previousvalue",{"_index":667,"title":{},"body":{"directives/NgxEditorJSDirective.html":{}}}],["changeskeys",{"_index":673,"title":{},"body":{"directives/NgxEditorJSDirective.html":{}}}],["changeskeys.includes(key",{"_index":679,"title":{},"body":{"directives/NgxEditorJSDirective.html":{}}}],["charge",{"_index":1720,"title":{},"body":{"license.html":{}}}],["check",{"_index":1189,"title":{},"body":{"components/NgxTinynodesMaterialFormFieldDemoComponent.html":{},"components/PageContainerComponent.html":{}}}],["ci",{"_index":1780,"title":{},"body":{"todo.html":{}}}],["circumstances",{"_index":1620,"title":{},"body":{"contributing.html":{}}}],["claim",{"_index":1763,"title":{},"body":{"license.html":{}}}],["clarified",{"_index":1607,"title":{},"body":{"contributing.html":{}}}],["clarifying",{"_index":1563,"title":{},"body":{"contributing.html":{}}}],["class",{"_index":170,"title":{"classes/MockEditorJS.html":{},"classes/MockPlugin.html":{}},"body":{"interfaces/EditorJSClass.html":{},"interfaces/EditorJSInstanceConfig.html":{},"interfaces/EditorJSMaterialForm.html":{},"interfaces/InjectorApiCallOptions.html":{},"interfaces/InjectorApiCallResponse.html":{},"interfaces/InjectorMethodOption.html":{},"classes/MockEditorJS.html":{},"injectables/MockNgZone.html":{},"classes/MockPlugin.html":{},"components/NgxEditorJSDemoHomeComponent.html":{},"modules/NgxEditorJSDemoMaterialModule.html":{},"directives/NgxEditorJSDirective.html":{},"modules/NgxEditorJSModule.html":{},"injectables/NgxEditorJSPluginService.html":{},"modules/NgxEditorJSPluginServiceModule.html":{},"injectables/NgxEditorJSService.html":{},"modules/NgxEditorjsDemoModule.html":{},"modules/NgxEditorjsPluginsModule.html":{},"modules/NgxTinynodesComponentsModule.html":{},"components/NgxTinynodesMatJsonOutputComponent.html":{},"modules/NgxTinynodesMatJsonOutputModule.html":{},"modules/NgxTinynodesMatTagInputModule.html":{},"modules/NgxTinynodesMaterialFormFieldDemo.html":{},"components/NgxTinynodesMaterialFormFieldDemoComponent.html":{},"components/PageContainerComponent.html":{},"modules/PageStoreModule.html":{},"injectables/PagesQuery.html":{},"injectables/PagesService.html":{},"interfaces/PagesState.html":{},"injectables/PagesStore.html":{},"modules/PluginCodeModule.html":{},"modules/PluginEmbedModule.html":{},"modules/PluginHeaderModule.html":{},"modules/PluginImageModule.html":{},"modules/PluginInlineCodeModule.html":{},"modules/PluginLinkModule.html":{},"modules/PluginListModule.html":{},"modules/PluginMarkerModule.html":{},"modules/PluginParagraphModule.html":{},"modules/PluginQuoteModule.html":{},"modules/PluginSimpleImageModule.html":{},"modules/PluginWarningModule.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["classes",{"_index":384,"title":{},"body":{"classes/MockEditorJS.html":{},"classes/MockPlugin.html":{},"changelog.html":{},"overview.html":{}}}],["clean",{"_index":973,"title":{},"body":{"injectables/NgxEditorJSService.html":{}}}],["cleaning",{"_index":972,"title":{},"body":{"injectables/NgxEditorJSService.html":{}}}],["cleanupsubjects(options",{"_index":974,"title":{},"body":{"injectables/NgxEditorJSService.html":{}}}],["clear",{"_index":409,"title":{},"body":{"classes/MockEditorJS.html":{},"classes/MockPlugin.html":{},"injectables/NgxEditorJSService.html":{},"components/NgxTinynodesMaterialFormFieldDemoComponent.html":{},"components/PageContainerComponent.html":{}}}],["clear(options",{"_index":836,"title":{},"body":{"injectables/NgxEditorJSService.html":{}}}],["clear(skipsave",{"_index":1115,"title":{},"body":{"components/NgxTinynodesMaterialFormFieldDemoComponent.html":{}}}],["click",{"_index":340,"title":{},"body":{"interfaces/EditorJSMaterialForm.html":{},"directives/NgxEditorJSDirective.html":{},"components/NgxTinynodesMaterialFormFieldDemoComponent.html":{},"components/PageContainerComponent.html":{}}}],["click)=\"disableautosave()\">disable",{"_index":1163,"title":{},"body":{"components/NgxTinynodesMaterialFormFieldDemoComponent.html":{}}}],["cluster_ngxeditorjsdemomodule",{"_index":980,"title":{},"body":{"modules/NgxEditorjsDemoModule.html":{},"overview.html":{}}}],["cluster_ngxeditorjsdemomodule_declarations",{"_index":981,"title":{},"body":{"modules/NgxEditorjsDemoModule.html":{},"overview.html":{}}}],["cluster_ngxeditorjsdemomodule_exports",{"_index":983,"title":{},"body":{"modules/NgxEditorjsDemoModule.html":{},"overview.html":{}}}],["cluster_ngxeditorjsdemomodule_imports",{"_index":982,"title":{},"body":{"modules/NgxEditorjsDemoModule.html":{},"overview.html":{}}}],["cluster_ngxeditorjsmodule",{"_index":709,"title":{},"body":{"modules/NgxEditorJSModule.html":{},"overview.html":{}}}],["cluster_ngxeditorjsmodule_declarations",{"_index":710,"title":{},"body":{"modules/NgxEditorJSModule.html":{},"overview.html":{}}}],["cluster_ngxeditorjsmodule_exports",{"_index":711,"title":{},"body":{"modules/NgxEditorJSModule.html":{},"overview.html":{}}}],["cluster_ngxeditorjsmodule_providers",{"_index":712,"title":{},"body":{"modules/NgxEditorJSModule.html":{},"overview.html":{}}}],["cluster_ngxeditorjspluginservicemodule",{"_index":799,"title":{},"body":{"modules/NgxEditorJSPluginServiceModule.html":{},"overview.html":{}}}],["cluster_ngxeditorjspluginservicemodule_providers",{"_index":800,"title":{},"body":{"modules/NgxEditorJSPluginServiceModule.html":{},"overview.html":{}}}],["cluster_ngxeditorjspluginsmodule",{"_index":1003,"title":{},"body":{"modules/NgxEditorjsPluginsModule.html":{},"overview.html":{}}}],["cluster_ngxeditorjspluginsmodule_exports",{"_index":1005,"title":{},"body":{"modules/NgxEditorjsPluginsModule.html":{},"overview.html":{}}}],["cluster_ngxeditorjspluginsmodule_imports",{"_index":1004,"title":{},"body":{"modules/NgxEditorjsPluginsModule.html":{},"overview.html":{}}}],["cluster_ngxtinynodescomponentsmodule",{"_index":1044,"title":{},"body":{"modules/NgxTinynodesComponentsModule.html":{},"overview.html":{}}}],["cluster_ngxtinynodescomponentsmodule_exports",{"_index":1046,"title":{},"body":{"modules/NgxTinynodesComponentsModule.html":{},"overview.html":{}}}],["cluster_ngxtinynodescomponentsmodule_imports",{"_index":1045,"title":{},"body":{"modules/NgxTinynodesComponentsModule.html":{},"overview.html":{}}}],["cluster_ngxtinynodesmaterialformfielddemo",{"_index":1087,"title":{},"body":{"modules/NgxTinynodesMaterialFormFieldDemo.html":{},"overview.html":{}}}],["cluster_ngxtinynodesmaterialformfielddemo_declarations",{"_index":1088,"title":{},"body":{"modules/NgxTinynodesMaterialFormFieldDemo.html":{},"overview.html":{}}}],["cluster_ngxtinynodesmaterialformfielddemo_imports",{"_index":1089,"title":{},"body":{"modules/NgxTinynodesMaterialFormFieldDemo.html":{}}}],["cluster_ngxtinynodesmatjsonoutputmodule",{"_index":1072,"title":{},"body":{"modules/NgxTinynodesMatJsonOutputModule.html":{},"overview.html":{}}}],["cluster_ngxtinynodesmatjsonoutputmodule_declarations",{"_index":1073,"title":{},"body":{"modules/NgxTinynodesMatJsonOutputModule.html":{},"overview.html":{}}}],["cluster_ngxtinynodesmatjsonoutputmodule_exports",{"_index":1074,"title":{},"body":{"modules/NgxTinynodesMatJsonOutputModule.html":{},"overview.html":{}}}],["cluster_ngxtinynodesmattaginputmodule",{"_index":1077,"title":{},"body":{"modules/NgxTinynodesMatTagInputModule.html":{},"overview.html":{}}}],["cluster_ngxtinynodesmattaginputmodule_declarations",{"_index":1078,"title":{},"body":{"modules/NgxTinynodesMatTagInputModule.html":{},"overview.html":{}}}],["cluster_ngxtinynodesmattaginputmodule_exports",{"_index":1080,"title":{},"body":{"modules/NgxTinynodesMatTagInputModule.html":{},"overview.html":{}}}],["cluster_ngxtinynodesmattaginputmodule_ngxtinynodesmattaginputcomponent_providers",{"_index":1079,"title":{},"body":{"modules/NgxTinynodesMatTagInputModule.html":{},"overview.html":{}}}],["cluster_pagestoremodule",{"_index":1250,"title":{},"body":{"modules/PageStoreModule.html":{},"overview.html":{}}}],["cluster_pagestoremodule_providers",{"_index":1251,"title":{},"body":{"modules/PageStoreModule.html":{},"overview.html":{}}}],["code",{"_index":488,"title":{},"body":{"components/NgxEditorJSDemoHomeComponent.html":{},"modules/PluginCodeModule.html":{},"modules/PluginInlineCodeModule.html":{},"contributing.html":{}}}],["code.module",{"_index":1031,"title":{},"body":{"modules/NgxEditorjsPluginsModule.html":{}}}],["code.module.ts",{"_index":1347,"title":{},"body":{"modules/PluginInlineCodeModule.html":{}}}],["code/inline",{"_index":1030,"title":{},"body":{"modules/NgxEditorjsPluginsModule.html":{},"modules/PluginInlineCodeModule.html":{}}}],["coercebooleanproperty",{"_index":223,"title":{},"body":{"interfaces/EditorJSMaterialForm.html":{}}}],["coercebooleanproperty(disabled",{"_index":310,"title":{},"body":{"interfaces/EditorJSMaterialForm.html":{}}}],["coercebooleanproperty(focused",{"_index":297,"title":{},"body":{"interfaces/EditorJSMaterialForm.html":{}}}],["coercebooleanproperty(required",{"_index":304,"title":{},"body":{"interfaces/EditorJSMaterialForm.html":{}}}],["collapse",{"_index":1071,"title":{},"body":{"components/NgxTinynodesMatJsonOutputComponent.html":{}}}],["collection",{"_index":486,"title":{},"body":{"components/NgxEditorJSDemoHomeComponent.html":{},"modules/NgxEditorJSModule.html":{},"index.html":{}}}],["column",{"_index":1208,"title":{},"body":{"components/NgxTinynodesMaterialFormFieldDemoComponent.html":{}}}],["comments",{"_index":1547,"title":{},"body":{"contributing.html":{}}}],["commits",{"_index":1574,"title":{},"body":{"contributing.html":{}}}],["common",{"_index":1439,"title":{},"body":{"changelog.html":{}}}],["commonmodule",{"_index":726,"title":{},"body":{"modules/NgxEditorJSModule.html":{},"modules/NgxEditorjsDemoModule.html":{},"modules/NgxEditorjsPluginsModule.html":{},"modules/NgxTinynodesMatJsonOutputModule.html":{},"modules/NgxTinynodesMatTagInputModule.html":{},"modules/NgxTinynodesMaterialFormFieldDemo.html":{}}}],["community",{"_index":1496,"title":{},"body":{"contributing.html":{}}}],["compatible",{"_index":258,"title":{},"body":{"interfaces/EditorJSMaterialForm.html":{},"index.html":{}}}],["complaints",{"_index":1615,"title":{},"body":{"contributing.html":{}}}],["completly",{"_index":1423,"title":{},"body":{"changelog.html":{}}}],["component",{"_index":228,"title":{"components/NgxEditorJSDemoHomeComponent.html":{},"components/NgxTinynodesMatJsonOutputComponent.html":{},"components/NgxTinynodesMaterialFormFieldDemoComponent.html":{},"components/PageContainerComponent.html":{}},"body":{"interfaces/EditorJSMaterialForm.html":{},"components/NgxEditorJSDemoHomeComponent.html":{},"directives/NgxEditorJSDirective.html":{},"components/NgxTinynodesMatJsonOutputComponent.html":{},"modules/NgxTinynodesMaterialFormFieldDemo.html":{},"components/NgxTinynodesMaterialFormFieldDemoComponent.html":{},"components/PageContainerComponent.html":{},"changelog.html":{},"index.html":{},"todo.html":{},"miscellaneous/variables.html":{}}}],["component_template",{"_index":502,"title":{},"body":{"components/NgxEditorJSDemoHomeComponent.html":{},"components/NgxTinynodesMatJsonOutputComponent.html":{},"components/NgxTinynodesMaterialFormFieldDemoComponent.html":{},"components/PageContainerComponent.html":{}}}],["components",{"_index":335,"title":{},"body":{"interfaces/EditorJSMaterialForm.html":{},"components/NgxEditorJSDemoHomeComponent.html":{},"directives/NgxEditorJSDirective.html":{},"components/NgxTinynodesMatJsonOutputComponent.html":{},"modules/NgxTinynodesMaterialFormFieldDemo.html":{},"components/NgxTinynodesMaterialFormFieldDemoComponent.html":{},"components/PageContainerComponent.html":{},"changelog.html":{},"index.html":{},"overview.html":{}}}],["components.module.ts",{"_index":1050,"title":{},"body":{"modules/NgxTinynodesComponentsModule.html":{}}}],["components/mat",{"_index":1051,"title":{},"body":{"modules/NgxTinynodesComponentsModule.html":{}}}],["components/src/lib/components/mat",{"_index":1060,"title":{},"body":{"components/NgxTinynodesMatJsonOutputComponent.html":{},"modules/NgxTinynodesMatJsonOutputModule.html":{},"modules/NgxTinynodesMatTagInputModule.html":{},"miscellaneous/variables.html":{}}}],["components/src/lib/ngx",{"_index":1049,"title":{},"body":{"modules/NgxTinynodesComponentsModule.html":{}}}],["components/src/lib/types/components.ts",{"_index":1057,"title":{},"body":{"interfaces/NgxTinynodesMatFieldComponent.html":{}}}],["components/src/test.ts",{"_index":1804,"title":{},"body":{"miscellaneous/variables.html":{}}}],["conditions",{"_index":1742,"title":{},"body":{"license.html":{}}}],["conduct",{"_index":1462,"title":{},"body":{"contributing.html":{}}}],["confidentiality",{"_index":1623,"title":{},"body":{"contributing.html":{}}}],["config",{"_index":110,"title":{},"body":{"interfaces/BlockData.html":{},"interfaces/CreateEditorJSOptions.html":{},"classes/MockEditorJS.html":{},"classes/MockPlugin.html":{},"interfaces/NgxEditorJSConfig.html":{},"directives/NgxEditorJSDirective.html":{},"modules/NgxEditorJSModule.html":{},"interfaces/NgxEditorJSModuleConfig.html":{},"injectables/NgxEditorJSService.html":{},"interfaces/PluginConfig.html":{},"interfaces/PluginConfigMap.html":{},"interfaces/ToolSettingsMap.html":{},"miscellaneous/functions.html":{},"todo.html":{},"miscellaneous/variables.html":{}}}],["config.data",{"_index":704,"title":{},"body":{"directives/NgxEditorJSDirective.html":{}}}],["config.ts",{"_index":1676,"title":{},"body":{"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["config/editor",{"_index":646,"title":{},"body":{"directives/NgxEditorJSDirective.html":{}}}],["config/module",{"_index":731,"title":{},"body":{"modules/NgxEditorJSModule.html":{}}}],["configs",{"_index":131,"title":{},"body":{"interfaces/BlockData.html":{},"interfaces/PluginConfig.html":{},"interfaces/PluginConfigMap.html":{},"interfaces/ToolSettingsMap.html":{}}}],["configuration",{"_index":96,"title":{},"body":{"interfaces/BlockData.html":{},"interfaces/CreateEditorJSOptions.html":{},"interfaces/EditorJSClass.html":{},"interfaces/EditorJSInstanceConfig.html":{},"interfaces/InjectorApiCallOptions.html":{},"interfaces/InjectorApiCallResponse.html":{},"interfaces/InjectorMethodOption.html":{},"interfaces/NgxEditorJSConfig.html":{},"directives/NgxEditorJSDirective.html":{},"modules/NgxEditorJSModule.html":{},"interfaces/NgxEditorJSModuleConfig.html":{},"injectables/NgxEditorJSPluginService.html":{},"injectables/NgxEditorJSService.html":{},"interfaces/PluginConfig.html":{},"interfaces/PluginConfigMap.html":{},"interfaces/ToolSettingsMap.html":{},"changelog.html":{},"miscellaneous/functions.html":{}}}],["configurations",{"_index":761,"title":{},"body":{"injectables/NgxEditorJSPluginService.html":{},"miscellaneous/functions.html":{}}}],["configure",{"_index":838,"title":{},"body":{"injectables/NgxEditorJSService.html":{}}}],["connection",{"_index":1770,"title":{},"body":{"license.html":{}}}],["considered",{"_index":1557,"title":{},"body":{"contributing.html":{}}}],["const",{"_index":125,"title":{},"body":{"interfaces/BlockData.html":{},"interfaces/EditorJSClass.html":{},"interfaces/EditorJSInstanceConfig.html":{},"interfaces/EditorJSMaterialForm.html":{},"interfaces/InjectorApiCallOptions.html":{},"interfaces/InjectorApiCallResponse.html":{},"interfaces/InjectorMethodOption.html":{},"interfaces/NgxEditorJSConfig.html":{},"directives/NgxEditorJSDirective.html":{},"interfaces/NgxEditorJSModuleConfig.html":{},"injectables/NgxEditorJSPluginService.html":{},"injectables/NgxEditorJSService.html":{},"modules/NgxTinynodesMaterialFormFieldDemo.html":{},"injectables/PagesService.html":{},"interfaces/PluginConfig.html":{},"interfaces/PluginConfigMap.html":{},"modules/PluginHeaderModule.html":{},"interfaces/ToolSettingsMap.html":{}}}],["constructive",{"_index":1530,"title":{},"body":{"contributing.html":{}}}],["constructor",{"_index":344,"title":{},"body":{"interfaces/EditorJSMaterialForm.html":{},"classes/MockEditorJS.html":{},"injectables/MockNgZone.html":{},"classes/MockPlugin.html":{},"directives/NgxEditorJSDirective.html":{},"modules/NgxEditorJSModule.html":{},"injectables/NgxEditorJSPluginService.html":{},"injectables/NgxEditorJSService.html":{},"components/NgxTinynodesMatJsonOutputComponent.html":{},"components/NgxTinynodesMaterialFormFieldDemoComponent.html":{},"components/PageContainerComponent.html":{},"injectables/PagesQuery.html":{},"injectables/PagesService.html":{},"interfaces/PagesState.html":{},"injectables/PagesStore.html":{}}}],["constructor(@inject(pluginclasses",{"_index":778,"title":{},"body":{"injectables/NgxEditorJSPluginService.html":{}}}],["constructor(cd",{"_index":1065,"title":{},"body":{"components/NgxTinynodesMatJsonOutputComponent.html":{}}}],["constructor(config",{"_index":389,"title":{},"body":{"classes/MockEditorJS.html":{}}}],["constructor(editorjs",{"_index":822,"title":{},"body":{"injectables/NgxEditorJSService.html":{}}}],["constructor(el",{"_index":566,"title":{},"body":{"directives/NgxEditorJSDirective.html":{}}}],["constructor(pagesservice",{"_index":1105,"title":{},"body":{"components/NgxTinynodesMaterialFormFieldDemoComponent.html":{},"components/PageContainerComponent.html":{}}}],["constructor(pluginconfigmap",{"_index":756,"title":{},"body":{"injectables/NgxEditorJSPluginService.html":{}}}],["constructor(private",{"_index":402,"title":{},"body":{"classes/MockEditorJS.html":{},"classes/MockPlugin.html":{},"components/NgxTinynodesMatJsonOutputComponent.html":{}}}],["constructor(protected",{"_index":1268,"title":{},"body":{"injectables/PagesQuery.html":{}}}],["constructor(public",{"_index":1298,"title":{},"body":{"injectables/PagesService.html":{}}}],["constructor(query",{"_index":1276,"title":{},"body":{"injectables/PagesService.html":{}}}],["constructor(store",{"_index":1264,"title":{},"body":{"injectables/PagesQuery.html":{}}}],["contacting",{"_index":1612,"title":{},"body":{"contributing.html":{}}}],["container",{"_index":339,"title":{},"body":{"interfaces/EditorJSMaterialForm.html":{},"components/NgxEditorJSDemoHomeComponent.html":{},"injectables/NgxEditorJSService.html":{},"components/NgxTinynodesMatJsonOutputComponent.html":{},"components/NgxTinynodesMaterialFormFieldDemoComponent.html":{},"components/PageContainerComponent.html":{},"contributing.html":{}}}],["container.component",{"_index":993,"title":{},"body":{"modules/NgxEditorjsDemoModule.html":{}}}],["container.component.html",{"_index":484,"title":{},"body":{"components/NgxEditorJSDemoHomeComponent.html":{},"components/PageContainerComponent.html":{}}}],["container.component.scss",{"_index":483,"title":{},"body":{"components/NgxEditorJSDemoHomeComponent.html":{},"components/PageContainerComponent.html":{}}}],["container.component.ts",{"_index":479,"title":{},"body":{"components/NgxEditorJSDemoHomeComponent.html":{},"components/PageContainerComponent.html":{}}}],["container.component.ts:106",{"_index":1231,"title":{},"body":{"components/PageContainerComponent.html":{}}}],["container.component.ts:119",{"_index":1219,"title":{},"body":{"components/PageContainerComponent.html":{}}}],["container.component.ts:28",{"_index":1222,"title":{},"body":{"components/PageContainerComponent.html":{}}}],["container.component.ts:35",{"_index":1217,"title":{},"body":{"components/PageContainerComponent.html":{}}}],["container.component.ts:55",{"_index":1226,"title":{},"body":{"components/PageContainerComponent.html":{}}}],["container.component.ts:65",{"_index":1227,"title":{},"body":{"components/PageContainerComponent.html":{}}}],["container.component.ts:72",{"_index":1229,"title":{},"body":{"components/PageContainerComponent.html":{}}}],["container.component.ts:79",{"_index":1221,"title":{},"body":{"components/PageContainerComponent.html":{}}}],["container.component.ts:86",{"_index":1218,"title":{},"body":{"components/PageContainerComponent.html":{}}}],["container.component.ts:93",{"_index":1220,"title":{},"body":{"components/PageContainerComponent.html":{}}}],["container/home",{"_index":478,"title":{},"body":{"components/NgxEditorJSDemoHomeComponent.html":{},"modules/NgxEditorjsDemoModule.html":{}}}],["container/page",{"_index":992,"title":{},"body":{"modules/NgxEditorjsDemoModule.html":{},"components/PageContainerComponent.html":{}}}],["containers/editorjs",{"_index":732,"title":{},"body":{"modules/NgxEditorJSModule.html":{}}}],["containers/editorjs/editorjs.component",{"_index":734,"title":{},"body":{"modules/NgxEditorJSModule.html":{}}}],["containers/home",{"_index":998,"title":{},"body":{"modules/NgxEditorjsDemoModule.html":{}}}],["containers/material",{"_index":1093,"title":{},"body":{"modules/NgxTinynodesMaterialFormFieldDemo.html":{}}}],["containers/page",{"_index":991,"title":{},"body":{"modules/NgxEditorjsDemoModule.html":{}}}],["containing",{"_index":138,"title":{},"body":{"interfaces/ChangeMap.html":{},"interfaces/EditorJSChange.html":{},"interfaces/EditorMap.html":{},"interfaces/ReadyMap.html":{},"interfaces/SavedMap.html":{}}}],["contains",{"_index":113,"title":{},"body":{"interfaces/BlockData.html":{},"injectables/NgxEditorJSService.html":{},"interfaces/PluginConfig.html":{},"interfaces/PluginConfigMap.html":{},"interfaces/ToolSettingsMap.html":{}}}],["content",{"_index":588,"title":{},"body":{"directives/NgxEditorJSDirective.html":{},"components/NgxTinynodesMaterialFormFieldDemoComponent.html":{},"components/PageContainerComponent.html":{}}}],["context",{"_index":1792,"title":{},"body":{"miscellaneous/variables.html":{}}}],["continue",{"_index":1448,"title":{},"body":{"changelog.html":{}}}],["contract",{"_index":1767,"title":{},"body":{"license.html":{}}}],["contributes",{"_index":1519,"title":{},"body":{"contributing.html":{}}}],["contributing",{"_index":1453,"title":{"contributing.html":{}},"body":{"contributing.html":{}}}],["contributions",{"_index":1577,"title":{},"body":{"contributing.html":{}}}],["contributor",{"_index":1582,"title":{},"body":{"contributing.html":{}}}],["contributors",{"_index":1493,"title":{},"body":{"contributing.html":{}}}],["control",{"_index":275,"title":{},"body":{"interfaces/EditorJSMaterialForm.html":{},"directives/NgxEditorJSDirective.html":{},"modules/NgxEditorJSModule.html":{},"changelog.html":{},"todo.html":{}}}],["controls",{"_index":1187,"title":{},"body":{"components/NgxTinynodesMaterialFormFieldDemoComponent.html":{},"components/PageContainerComponent.html":{},"todo.html":{}}}],["controltype",{"_index":276,"title":{},"body":{"interfaces/EditorJSMaterialForm.html":{}}}],["controlvalueaccessor",{"_index":1058,"title":{},"body":{"interfaces/NgxTinynodesMatFieldComponent.html":{}}}],["copies",{"_index":1737,"title":{},"body":{"license.html":{}}}],["copy",{"_index":1723,"title":{},"body":{"license.html":{}}}],["copyright",{"_index":1717,"title":{},"body":{"license.html":{}}}],["core",{"_index":840,"title":{},"body":{"injectables/NgxEditorJSService.html":{},"modules/NgxEditorjsDemoModule.html":{},"modules/NgxTinynodesMaterialFormFieldDemo.html":{},"components/NgxTinynodesMaterialFormFieldDemoComponent.html":{},"components/PageContainerComponent.html":{},"changelog.html":{},"dependencies.html":{}}}],["coreapi",{"_index":1784,"title":{},"body":{"todo.html":{}}}],["corrective",{"_index":1568,"title":{},"body":{"contributing.html":{}}}],["covenant",{"_index":1642,"title":{},"body":{"contributing.html":{}}}],["covenant.org/version/1/4",{"_index":1645,"title":{},"body":{"contributing.html":{}}}],["cover",{"_index":1441,"title":{},"body":{"changelog.html":{}}}],["create",{"_index":617,"title":{},"body":{"directives/NgxEditorJSDirective.html":{},"injectables/NgxEditorJSService.html":{},"miscellaneous/functions.html":{}}}],["createconfig",{"_index":696,"title":{},"body":{"directives/NgxEditorJSDirective.html":{}}}],["created",{"_index":616,"title":{},"body":{"directives/NgxEditorJSDirective.html":{},"injectables/NgxEditorJSService.html":{},"injectables/PagesService.html":{},"changelog.html":{}}}],["createeditor",{"_index":553,"title":{},"body":{"directives/NgxEditorJSDirective.html":{}}}],["createeditor(config",{"_index":612,"title":{},"body":{"directives/NgxEditorJSDirective.html":{}}}],["createeditorjsconfig",{"_index":645,"title":{},"body":{"directives/NgxEditorJSDirective.html":{},"miscellaneous/functions.html":{}}}],["createeditorjsconfig(inputconfig",{"_index":1681,"title":{},"body":{"miscellaneous/functions.html":{}}}],["createeditorjsinstance",{"_index":742,"title":{},"body":{"modules/NgxEditorJSModule.html":{},"miscellaneous/functions.html":{}}}],["createeditorjsinstance(editorjs",{"_index":737,"title":{},"body":{"modules/NgxEditorJSModule.html":{},"miscellaneous/functions.html":{}}}],["createeditorjsoptions",{"_index":158,"title":{"interfaces/CreateEditorJSOptions.html":{}},"body":{"interfaces/CreateEditorJSOptions.html":{},"injectables/NgxEditorJSService.html":{}}}],["createinstance",{"_index":820,"title":{},"body":{"injectables/NgxEditorJSService.html":{}}}],["createinstance(options",{"_index":841,"title":{},"body":{"injectables/NgxEditorJSService.html":{}}}],["createmoduleconfig",{"_index":730,"title":{},"body":{"modules/NgxEditorJSModule.html":{},"miscellaneous/functions.html":{}}}],["createmoduleconfig(config",{"_index":1685,"title":{},"body":{"miscellaneous/functions.html":{}}}],["createonchange",{"_index":889,"title":{},"body":{"injectables/NgxEditorJSService.html":{}}}],["createonchange(options",{"_index":962,"title":{},"body":{"injectables/NgxEditorJSService.html":{}}}],["createonready",{"_index":894,"title":{},"body":{"injectables/NgxEditorJSService.html":{}}}],["createonready(options",{"_index":964,"title":{},"body":{"injectables/NgxEditorJSService.html":{}}}],["createpluginconfig",{"_index":802,"title":{},"body":{"modules/NgxEditorJSPluginServiceModule.html":{},"modules/PluginCodeModule.html":{},"modules/PluginImageModule.html":{},"modules/PluginLinkModule.html":{},"modules/PluginListModule.html":{},"modules/PluginMarkerModule.html":{},"modules/PluginSimpleImageModule.html":{},"miscellaneous/functions.html":{}}}],["createpluginconfig(pluginconfigs",{"_index":1687,"title":{},"body":{"miscellaneous/functions.html":{}}}],["creates",{"_index":174,"title":{},"body":{"interfaces/EditorJSClass.html":{},"interfaces/EditorJSInstanceConfig.html":{},"interfaces/InjectorApiCallOptions.html":{},"interfaces/InjectorApiCallResponse.html":{},"interfaces/InjectorMethodOption.html":{},"directives/NgxEditorJSDirective.html":{},"injectables/NgxEditorJSService.html":{},"injectables/PagesService.html":{},"miscellaneous/functions.html":{}}}],["creating",{"_index":180,"title":{},"body":{"interfaces/EditorJSClass.html":{},"interfaces/EditorJSInstanceConfig.html":{},"interfaces/InjectorApiCallOptions.html":{},"interfaces/InjectorApiCallResponse.html":{},"interfaces/InjectorMethodOption.html":{},"contributing.html":{}}}],["creation",{"_index":448,"title":{},"body":{"interfaces/NgxEditorJSConfig.html":{},"interfaces/NgxEditorJSModuleConfig.html":{},"modules/PageStoreModule.html":{},"changelog.html":{}}}],["criticism",{"_index":1531,"title":{},"body":{"contributing.html":{}}}],["ctrl+shift+c",{"_index":1350,"title":{},"body":{"modules/PluginInlineCodeModule.html":{}}}],["ctrl+shift+m",{"_index":1358,"title":{},"body":{"modules/PluginMarkerModule.html":{}}}],["current",{"_index":859,"title":{},"body":{"injectables/NgxEditorJSService.html":{},"components/NgxTinynodesMaterialFormFieldDemoComponent.html":{},"changelog.html":{}}}],["currently",{"_index":80,"title":{},"body":{"interfaces/BlockData.html":{},"modules/PageStoreModule.html":{},"interfaces/PluginConfig.html":{},"interfaces/PluginConfigMap.html":{},"interfaces/ToolSettingsMap.html":{},"changelog.html":{},"miscellaneous/enumerations.html":{}}}],["custom",{"_index":31,"title":{},"body":{"interfaces/Block.html":{},"interfaces/BlockData.html":{},"interfaces/Header.html":{},"interfaces/HeaderBlock.html":{},"interfaces/Image.html":{},"interfaces/ImageBlock.html":{},"interfaces/List.html":{},"interfaces/ListBlock.html":{},"interfaces/Paragraph.html":{},"interfaces/ParagraphBlock.html":{},"interfaces/PluginConfig.html":{},"interfaces/PluginConfigMap.html":{},"interfaces/ToolSettingsMap.html":{},"miscellaneous/typealiases.html":{}}}],["cycle",{"_index":366,"title":{},"body":{"interfaces/EditorJSMaterialForm.html":{},"index.html":{}}}],["damages",{"_index":1764,"title":{},"body":{"license.html":{}}}],["data",{"_index":15,"title":{},"body":{"interfaces/Block.html":{},"interfaces/BlockData.html":{},"interfaces/EditorJSClass.html":{},"interfaces/EditorJSInstanceConfig.html":{},"interfaces/Header.html":{},"interfaces/HeaderBlock.html":{},"interfaces/Image.html":{},"interfaces/ImageBlock.html":{},"interfaces/InjectorApiCallOptions.html":{},"interfaces/InjectorApiCallResponse.html":{},"interfaces/InjectorMethodOption.html":{},"interfaces/List.html":{},"interfaces/ListBlock.html":{},"interfaces/NgxEditorJSConfig.html":{},"directives/NgxEditorJSDirective.html":{},"interfaces/NgxEditorJSModuleConfig.html":{},"injectables/NgxEditorJSService.html":{},"components/NgxTinynodesMatJsonOutputComponent.html":{},"components/NgxTinynodesMaterialFormFieldDemoComponent.html":{},"components/PageContainerComponent.html":{},"interfaces/Paragraph.html":{},"interfaces/ParagraphBlock.html":{},"interfaces/PluginConfig.html":{},"interfaces/PluginConfigMap.html":{},"modules/PluginHeaderModule.html":{},"interfaces/ToolSettingsMap.html":{}}}],["data).pipe",{"_index":937,"title":{},"body":{"injectables/NgxEditorJSService.html":{}}}],["data.blocks",{"_index":1161,"title":{},"body":{"components/NgxTinynodesMaterialFormFieldDemoComponent.html":{},"components/PageContainerComponent.html":{}}}],["data.text",{"_index":1337,"title":{},"body":{"modules/PluginHeaderModule.html":{}}}],["date.now",{"_index":411,"title":{},"body":{"classes/MockEditorJS.html":{},"classes/MockPlugin.html":{},"directives/NgxEditorJSDirective.html":{},"injectables/NgxEditorJSService.html":{},"components/NgxTinynodesMaterialFormFieldDemoComponent.html":{}}}],["datorama/akita",{"_index":1214,"title":{},"body":{"interfaces/Page.html":{},"interfaces/PageBlock.html":{},"injectables/PagesQuery.html":{},"injectables/PagesService.html":{},"interfaces/PagesState.html":{},"injectables/PagesStore.html":{},"interfaces/Tag.html":{}}}],["deal",{"_index":1726,"title":{},"body":{"license.html":{}}}],["dealings",{"_index":1771,"title":{},"body":{"license.html":{}}}],["declarations",{"_index":707,"title":{},"body":{"modules/NgxEditorJSModule.html":{},"modules/NgxEditorJSPluginServiceModule.html":{},"modules/NgxEditorjsDemoModule.html":{},"modules/NgxEditorjsPluginsModule.html":{},"modules/NgxTinynodesComponentsModule.html":{},"modules/NgxTinynodesMatJsonOutputModule.html":{},"modules/NgxTinynodesMatTagInputModule.html":{},"modules/NgxTinynodesMaterialFormFieldDemo.html":{},"modules/PageStoreModule.html":{},"overview.html":{}}}],["decorators",{"_index":1223,"title":{},"body":{"components/PageContainerComponent.html":{}}}],["deem",{"_index":1584,"title":{},"body":{"contributing.html":{}}}],["deemed",{"_index":1618,"title":{},"body":{"contributing.html":{}}}],["default",{"_index":34,"title":{},"body":{"interfaces/Block.html":{},"interfaces/BlockData.html":{},"interfaces/EditorJSClass.html":{},"interfaces/EditorJSInstanceConfig.html":{},"interfaces/Header.html":{},"interfaces/HeaderBlock.html":{},"interfaces/Image.html":{},"interfaces/ImageBlock.html":{},"interfaces/InjectorApiCallOptions.html":{},"interfaces/InjectorApiCallResponse.html":{},"interfaces/InjectorMethodOption.html":{},"interfaces/List.html":{},"interfaces/ListBlock.html":{},"injectables/MockNgZone.html":{},"interfaces/NgxEditorJSConfig.html":{},"directives/NgxEditorJSDirective.html":{},"modules/NgxEditorJSModule.html":{},"interfaces/NgxEditorJSModuleConfig.html":{},"injectables/NgxEditorJSPluginService.html":{},"injectables/NgxEditorJSService.html":{},"components/NgxTinynodesMatJsonOutputComponent.html":{},"components/NgxTinynodesMaterialFormFieldDemoComponent.html":{},"components/PageContainerComponent.html":{},"interfaces/Paragraph.html":{},"interfaces/ParagraphBlock.html":{},"modules/PluginCodeModule.html":{},"interfaces/PluginConfig.html":{},"interfaces/PluginConfigMap.html":{},"modules/PluginEmbedModule.html":{},"modules/PluginHeaderModule.html":{},"modules/PluginImageModule.html":{},"modules/PluginInlineCodeModule.html":{},"modules/PluginLinkModule.html":{},"modules/PluginListModule.html":{},"modules/PluginMarkerModule.html":{},"modules/PluginParagraphModule.html":{},"modules/PluginQuoteModule.html":{},"modules/PluginSimpleImageModule.html":{},"modules/PluginWarningModule.html":{},"interfaces/ToolSettingsMap.html":{},"changelog.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["default_holder_id",{"_index":1794,"title":{},"body":{"miscellaneous/variables.html":{}}}],["defaults",{"_index":724,"title":{},"body":{"modules/NgxEditorJSModule.html":{}}}],["define",{"_index":117,"title":{},"body":{"interfaces/BlockData.html":{},"interfaces/NgxEditorJSConfig.html":{},"interfaces/NgxEditorJSModuleConfig.html":{},"interfaces/PluginConfig.html":{},"interfaces/PluginConfigMap.html":{},"interfaces/ToolSettingsMap.html":{}}}],["defined",{"_index":19,"title":{},"body":{"interfaces/Block.html":{},"interfaces/BlockData.html":{},"interfaces/ChangeMap.html":{},"interfaces/EditorMap.html":{},"classes/MockEditorJS.html":{},"injectables/MockNgZone.html":{},"classes/MockPlugin.html":{},"directives/NgxEditorJSDirective.html":{},"modules/NgxEditorJSModule.html":{},"injectables/NgxEditorJSPluginService.html":{},"injectables/NgxEditorJSService.html":{},"components/NgxTinynodesMatJsonOutputComponent.html":{},"components/NgxTinynodesMaterialFormFieldDemoComponent.html":{},"components/PageContainerComponent.html":{},"injectables/PagesQuery.html":{},"injectables/PagesService.html":{},"injectables/PagesStore.html":{},"interfaces/PluginConfig.html":{},"interfaces/PluginConfigMap.html":{},"interfaces/ReadyMap.html":{},"interfaces/SavedMap.html":{},"interfaces/ToolSettingsMap.html":{},"contributing.html":{},"miscellaneous/variables.html":{}}}],["delayed",{"_index":1433,"title":{},"body":{"changelog.html":{}}}],["delete",{"_index":976,"title":{},"body":{"injectables/NgxEditorJSService.html":{},"injectables/PagesService.html":{}}}],["delete(pageid",{"_index":1283,"title":{},"body":{"injectables/PagesService.html":{}}}],["demo",{"_index":481,"title":{},"body":{"components/NgxEditorJSDemoHomeComponent.html":{},"components/NgxTinynodesMatJsonOutputComponent.html":{},"components/NgxTinynodesMaterialFormFieldDemoComponent.html":{},"components/PageContainerComponent.html":{},"modules/PageStoreModule.html":{},"changelog.html":{},"index.html":{},"todo.html":{},"miscellaneous/variables.html":{}}}],["demo'},{'name",{"_index":508,"title":{},"body":{"components/NgxEditorJSDemoHomeComponent.html":{},"components/NgxTinynodesMatJsonOutputComponent.html":{},"components/NgxTinynodesMaterialFormFieldDemoComponent.html":{},"components/PageContainerComponent.html":{}}}],["demo.material.module",{"_index":999,"title":{},"body":{"modules/NgxEditorjsDemoModule.html":{},"modules/NgxTinynodesMaterialFormFieldDemo.html":{}}}],["demo.material.module.ts",{"_index":523,"title":{},"body":{"modules/NgxEditorJSDemoMaterialModule.html":{}}}],["demo.module.ts",{"_index":986,"title":{},"body":{"modules/NgxEditorjsDemoModule.html":{}}}],["demo.routes",{"_index":995,"title":{},"body":{"modules/NgxEditorjsDemoModule.html":{}}}],["demo.routes.ts",{"_index":1800,"title":{},"body":{"miscellaneous/variables.html":{}}}],["demo/angular",{"_index":1811,"title":{},"body":{"miscellaneous/variables.html":{}}}],["demo/src/lib/containers/home",{"_index":477,"title":{},"body":{"components/NgxEditorJSDemoHomeComponent.html":{}}}],["demo/src/lib/containers/page",{"_index":1215,"title":{},"body":{"components/PageContainerComponent.html":{}}}],["demo/src/lib/demos/material",{"_index":1090,"title":{},"body":{"modules/NgxTinynodesMaterialFormFieldDemo.html":{},"components/NgxTinynodesMaterialFormFieldDemoComponent.html":{}}}],["demo/src/lib/ngx",{"_index":522,"title":{},"body":{"modules/NgxEditorJSDemoMaterialModule.html":{},"modules/NgxEditorjsDemoModule.html":{},"miscellaneous/variables.html":{}}}],["demo/src/lib/store/pages/pages.models.ts",{"_index":1211,"title":{},"body":{"interfaces/Page.html":{},"interfaces/PageBlock.html":{},"interfaces/Tag.html":{}}}],["demo/src/lib/store/pages/pages.module.ts",{"_index":1254,"title":{},"body":{"modules/PageStoreModule.html":{}}}],["demo/src/lib/store/pages/pages.query.ts",{"_index":1262,"title":{},"body":{"injectables/PagesQuery.html":{}}}],["demo/src/lib/store/pages/pages.query.ts:7",{"_index":1265,"title":{},"body":{"injectables/PagesQuery.html":{}}}],["demo/src/lib/store/pages/pages.service.ts",{"_index":1270,"title":{},"body":{"injectables/PagesService.html":{}}}],["demo/src/lib/store/pages/pages.service.ts:15",{"_index":1277,"title":{},"body":{"injectables/PagesService.html":{}}}],["demo/src/lib/store/pages/pages.service.ts:17",{"_index":1293,"title":{},"body":{"injectables/PagesService.html":{}}}],["demo/src/lib/store/pages/pages.service.ts:24",{"_index":1294,"title":{},"body":{"injectables/PagesService.html":{}}}],["demo/src/lib/store/pages/pages.service.ts:32",{"_index":1279,"title":{},"body":{"injectables/PagesService.html":{}}}],["demo/src/lib/store/pages/pages.service.ts:47",{"_index":1292,"title":{},"body":{"injectables/PagesService.html":{}}}],["demo/src/lib/store/pages/pages.service.ts:56",{"_index":1284,"title":{},"body":{"injectables/PagesService.html":{}}}],["demo/src/lib/store/pages/pages.service.ts:60",{"_index":1290,"title":{},"body":{"injectables/PagesService.html":{}}}],["demo/src/lib/store/pages/pages.service.ts:64",{"_index":1281,"title":{},"body":{"injectables/PagesService.html":{}}}],["demo/src/lib/store/pages/pages.service.ts:70",{"_index":1288,"title":{},"body":{"injectables/PagesService.html":{}}}],["demo/src/lib/store/pages/pages.store.ts",{"_index":1311,"title":{},"body":{"interfaces/PagesState.html":{},"injectables/PagesStore.html":{}}}],["demo/src/lib/store/pages/pages.store.ts:9",{"_index":1315,"title":{},"body":{"injectables/PagesStore.html":{}}}],["demos",{"_index":487,"title":{},"body":{"components/NgxEditorJSDemoHomeComponent.html":{},"modules/NgxEditorJSModule.html":{},"index.html":{}}}],["dependencies",{"_index":706,"title":{"dependencies.html":{}},"body":{"modules/NgxEditorJSModule.html":{},"modules/NgxEditorJSPluginServiceModule.html":{},"modules/NgxEditorjsDemoModule.html":{},"modules/NgxEditorjsPluginsModule.html":{},"modules/NgxTinynodesComponentsModule.html":{},"modules/NgxTinynodesMatJsonOutputModule.html":{},"modules/NgxTinynodesMatTagInputModule.html":{},"modules/NgxTinynodesMaterialFormFieldDemo.html":{},"modules/PageStoreModule.html":{},"contributing.html":{},"dependencies.html":{},"index.html":{},"overview.html":{}}}],["dependency",{"_index":1392,"title":{},"body":{"changelog.html":{},"todo.html":{}}}],["deps",{"_index":741,"title":{},"body":{"modules/NgxEditorJSModule.html":{},"modules/NgxEditorJSPluginServiceModule.html":{}}}],["describedby",{"_index":333,"title":{},"body":{"interfaces/EditorJSMaterialForm.html":{}}}],["description",{"_index":9,"title":{},"body":{"interfaces/Block.html":{},"interfaces/BlockData.html":{},"interfaces/ChangeMap.html":{},"interfaces/CreateEditorJSOptions.html":{},"interfaces/EditorJSChange.html":{},"interfaces/EditorJSClass.html":{},"interfaces/EditorJSInstanceConfig.html":{},"interfaces/EditorJSMaterialForm.html":{},"interfaces/EditorMap.html":{},"interfaces/Header.html":{},"interfaces/HeaderBlock.html":{},"interfaces/Image.html":{},"interfaces/ImageBlock.html":{},"interfaces/InjectorApiCallOptions.html":{},"interfaces/InjectorApiCallResponse.html":{},"interfaces/InjectorMethodOption.html":{},"interfaces/List.html":{},"interfaces/ListBlock.html":{},"injectables/MockNgZone.html":{},"interfaces/NgxEditorJSConfig.html":{},"directives/NgxEditorJSDirective.html":{},"modules/NgxEditorJSModule.html":{},"interfaces/NgxEditorJSModuleConfig.html":{},"injectables/NgxEditorJSPluginService.html":{},"injectables/NgxEditorJSService.html":{},"modules/NgxEditorjsPluginsModule.html":{},"components/NgxTinynodesMaterialFormFieldDemoComponent.html":{},"components/PageContainerComponent.html":{},"modules/PageStoreModule.html":{},"injectables/PagesService.html":{},"interfaces/Paragraph.html":{},"interfaces/ParagraphBlock.html":{},"modules/PluginCodeModule.html":{},"interfaces/PluginConfig.html":{},"interfaces/PluginConfigMap.html":{},"modules/PluginEmbedModule.html":{},"modules/PluginHeaderModule.html":{},"modules/PluginImageModule.html":{},"modules/PluginInlineCodeModule.html":{},"modules/PluginLinkModule.html":{},"modules/PluginListModule.html":{},"modules/PluginMarkerModule.html":{},"modules/PluginParagraphModule.html":{},"modules/PluginQuoteModule.html":{},"modules/PluginSimpleImageModule.html":{},"modules/PluginWarningModule.html":{},"interfaces/ReadyMap.html":{},"interfaces/SavedMap.html":{},"interfaces/ToolSettingsMap.html":{},"miscellaneous/functions.html":{}}}],["destroy",{"_index":386,"title":{},"body":{"classes/MockEditorJS.html":{},"classes/MockPlugin.html":{},"directives/NgxEditorJSDirective.html":{},"injectables/NgxEditorJSService.html":{}}}],["destroyed",{"_index":648,"title":{},"body":{"directives/NgxEditorJSDirective.html":{},"injectables/NgxEditorJSService.html":{}}}],["destroyinstance",{"_index":821,"title":{},"body":{"injectables/NgxEditorJSService.html":{}}}],["destroyinstance(options",{"_index":846,"title":{},"body":{"injectables/NgxEditorJSService.html":{}}}],["destroys",{"_index":848,"title":{},"body":{"injectables/NgxEditorJSService.html":{}}}],["destructive",{"_index":627,"title":{},"body":{"directives/NgxEditorJSDirective.html":{}}}],["details",{"_index":1319,"title":{},"body":{"modules/PluginCodeModule.html":{},"modules/PluginEmbedModule.html":{},"modules/PluginHeaderModule.html":{},"modules/PluginImageModule.html":{},"modules/PluginInlineCodeModule.html":{},"modules/PluginLinkModule.html":{},"modules/PluginListModule.html":{},"modules/PluginMarkerModule.html":{},"modules/PluginParagraphModule.html":{},"modules/PluginQuoteModule.html":{},"modules/PluginSimpleImageModule.html":{},"modules/PluginWarningModule.html":{},"contributing.html":{}}}],["detection",{"_index":350,"title":{},"body":{"interfaces/EditorJSMaterialForm.html":{},"injectables/NgxEditorJSService.html":{},"components/NgxTinynodesMaterialFormFieldDemoComponent.html":{},"components/PageContainerComponent.html":{}}}],["determined",{"_index":1637,"title":{},"body":{"contributing.html":{}}}],["developers",{"_index":1486,"title":{},"body":{"contributing.html":{}}}],["development",{"_index":1256,"title":{},"body":{"modules/PageStoreModule.html":{},"index.html":{}}}],["devlog",{"_index":1430,"title":{},"body":{"changelog.html":{}}}],["diary",{"_index":1690,"title":{},"body":{"index.html":{}}}],["differing",{"_index":1525,"title":{},"body":{"contributing.html":{}}}],["direction",{"_index":1207,"title":{},"body":{"components/NgxTinynodesMaterialFormFieldDemoComponent.html":{}}}],["directive",{"_index":500,"title":{"directives/NgxEditorJSDirective.html":{}},"body":{"components/NgxEditorJSDemoHomeComponent.html":{},"directives/NgxEditorJSDirective.html":{},"components/NgxTinynodesMatJsonOutputComponent.html":{},"components/NgxTinynodesMaterialFormFieldDemoComponent.html":{},"components/PageContainerComponent.html":{},"index.html":{},"overview.html":{},"todo.html":{}}}],["directives",{"_index":517,"title":{},"body":{"components/NgxEditorJSDemoHomeComponent.html":{},"directives/NgxEditorJSDirective.html":{},"components/NgxTinynodesMatJsonOutputComponent.html":{},"components/NgxTinynodesMaterialFormFieldDemoComponent.html":{},"components/PageContainerComponent.html":{}}}],["directives/ngx",{"_index":245,"title":{},"body":{"interfaces/EditorJSMaterialForm.html":{},"modules/NgxEditorJSModule.html":{}}}],["disability",{"_index":1505,"title":{},"body":{"contributing.html":{}}}],["disable",{"_index":583,"title":{},"body":{"directives/NgxEditorJSDirective.html":{},"injectables/NgxEditorJSService.html":{},"components/NgxTinynodesMaterialFormFieldDemoComponent.html":{}}}],["disableautosave",{"_index":1101,"title":{},"body":{"components/NgxTinynodesMaterialFormFieldDemoComponent.html":{}}}],["disabled",{"_index":305,"title":{},"body":{"interfaces/EditorJSMaterialForm.html":{}}}],["disabled(disabled",{"_index":309,"title":{},"body":{"interfaces/EditorJSMaterialForm.html":{}}}],["discuss",{"_index":1456,"title":{},"body":{"contributing.html":{}}}],["display",{"_index":586,"title":{},"body":{"directives/NgxEditorJSDirective.html":{},"components/NgxTinynodesMaterialFormFieldDemoComponent.html":{}}}],["displaying",{"_index":103,"title":{},"body":{"interfaces/BlockData.html":{},"interfaces/PluginConfig.html":{},"interfaces/PluginConfigMap.html":{},"interfaces/ToolSettingsMap.html":{}}}],["distinctuntilchanged",{"_index":867,"title":{},"body":{"injectables/NgxEditorJSService.html":{},"components/NgxTinynodesMaterialFormFieldDemoComponent.html":{}}}],["distinctuntilchanged((a",{"_index":945,"title":{},"body":{"injectables/NgxEditorJSService.html":{}}}],["distribute",{"_index":1733,"title":{},"body":{"license.html":{}}}],["doc",{"_index":1782,"title":{},"body":{"todo.html":{}}}],["docheck",{"_index":229,"title":{},"body":{"interfaces/EditorJSMaterialForm.html":{},"interfaces/NgxTinynodesMatFieldComponent.html":{}}}],["docs",{"_index":490,"title":{},"body":{"components/NgxEditorJSDemoHomeComponent.html":{},"changelog.html":{},"index.html":{}}}],["document.createelement('div",{"_index":401,"title":{},"body":{"classes/MockEditorJS.html":{},"classes/MockPlugin.html":{}}}],["documentation",{"_index":1422,"title":{},"body":{"changelog.html":{},"index.html":{},"license.html":{}}}],["doing",{"_index":864,"title":{},"body":{"injectables/NgxEditorJSService.html":{},"contributing.html":{}}}],["dom",{"_index":475,"title":{},"body":{"components/NgxEditorJSDemoHomeComponent.html":{},"directives/NgxEditorJSDirective.html":{},"injectables/NgxEditorJSService.html":{},"components/NgxTinynodesMatJsonOutputComponent.html":{},"components/NgxTinynodesMaterialFormFieldDemoComponent.html":{},"components/PageContainerComponent.html":{},"index.html":{}}}],["don't",{"_index":205,"title":{},"body":{"interfaces/EditorJSClass.html":{},"interfaces/EditorJSInstanceConfig.html":{},"interfaces/InjectorApiCallOptions.html":{},"interfaces/InjectorApiCallResponse.html":{},"interfaces/InjectorMethodOption.html":{}}}],["due",{"_index":1405,"title":{},"body":{"changelog.html":{}}}],["dynamic",{"_index":1656,"title":{},"body":{"dependencies.html":{}}}],["e",{"_index":1594,"title":{},"body":{"contributing.html":{}}}],["e.g",{"_index":1786,"title":{},"body":{"todo.html":{}}}],["each",{"_index":190,"title":{},"body":{"interfaces/EditorJSClass.html":{},"interfaces/EditorJSInstanceConfig.html":{},"interfaces/EditorJSMaterialForm.html":{},"interfaces/InjectorApiCallOptions.html":{},"interfaces/InjectorApiCallResponse.html":{},"interfaces/InjectorMethodOption.html":{},"components/NgxEditorJSDemoHomeComponent.html":{},"modules/NgxEditorjsPluginsModule.html":{},"miscellaneous/variables.html":{}}}],["easily",{"_index":1020,"title":{},"body":{"modules/NgxEditorjsPluginsModule.html":{},"index.html":{}}}],["edit",{"_index":1572,"title":{},"body":{"contributing.html":{}}}],["editior_js_instance",{"_index":471,"title":{},"body":{"interfaces/NgxEditorJSConfig.html":{},"interfaces/NgxEditorJSModuleConfig.html":{},"miscellaneous/variables.html":{}}}],["editor",{"_index":118,"title":{},"body":{"interfaces/BlockData.html":{},"interfaces/EditorJSClass.html":{},"interfaces/EditorJSInstanceConfig.html":{},"interfaces/EditorJSMaterialForm.html":{},"interfaces/InjectorApiCallOptions.html":{},"interfaces/InjectorApiCallResponse.html":{},"interfaces/InjectorMethodOption.html":{},"components/NgxEditorJSDemoHomeComponent.html":{},"directives/NgxEditorJSDirective.html":{},"injectables/NgxEditorJSPluginService.html":{},"injectables/NgxEditorJSService.html":{},"components/NgxTinynodesMaterialFormFieldDemoComponent.html":{},"components/PageContainerComponent.html":{},"interfaces/PluginConfig.html":{},"interfaces/PluginConfigMap.html":{},"interfaces/ToolSettingsMap.html":{},"todo.html":{},"miscellaneous/variables.html":{}}}],["editor's",{"_index":456,"title":{},"body":{"interfaces/NgxEditorJSConfig.html":{},"interfaces/NgxEditorJSModuleConfig.html":{}}}],["editor.destroy",{"_index":956,"title":{},"body":{"injectables/NgxEditorJSService.html":{}}}],["editor.isready",{"_index":899,"title":{},"body":{"injectables/NgxEditorJSService.html":{}}}],["editor[options.method",{"_index":914,"title":{},"body":{"injectables/NgxEditorJSService.html":{}}}],["editor[options.namespace][options.method",{"_index":915,"title":{},"body":{"injectables/NgxEditorJSService.html":{}}}],["editor_js_tool_injector",{"_index":126,"title":{},"body":{"interfaces/BlockData.html":{},"modules/NgxEditorJSPluginServiceModule.html":{},"modules/PluginCodeModule.html":{},"interfaces/PluginConfig.html":{},"interfaces/PluginConfigMap.html":{},"modules/PluginEmbedModule.html":{},"modules/PluginHeaderModule.html":{},"modules/PluginImageModule.html":{},"modules/PluginInlineCodeModule.html":{},"modules/PluginLinkModule.html":{},"modules/PluginListModule.html":{},"modules/PluginMarkerModule.html":{},"modules/PluginParagraphModule.html":{},"modules/PluginQuoteModule.html":{},"modules/PluginSimpleImageModule.html":{},"modules/PluginWarningModule.html":{},"interfaces/ToolSettingsMap.html":{},"miscellaneous/variables.html":{}}}],["editorconfig",{"_index":165,"title":{},"body":{"interfaces/CreateEditorJSOptions.html":{},"interfaces/EditorJSClass.html":{},"interfaces/EditorJSInstanceConfig.html":{},"interfaces/InjectorApiCallOptions.html":{},"interfaces/InjectorApiCallResponse.html":{},"interfaces/InjectorMethodOption.html":{},"interfaces/NgxEditorJSConfig.html":{},"directives/NgxEditorJSDirective.html":{},"interfaces/NgxEditorJSModuleConfig.html":{},"injectables/NgxEditorJSService.html":{},"miscellaneous/functions.html":{}}}],["editorconfig.holder",{"_index":893,"title":{},"body":{"injectables/NgxEditorJSService.html":{}}}],["editorconfig.onchange",{"_index":890,"title":{},"body":{"injectables/NgxEditorJSService.html":{}}}],["editorconfig.onready",{"_index":895,"title":{},"body":{"injectables/NgxEditorJSService.html":{}}}],["editorform",{"_index":1100,"title":{},"body":{"components/NgxTinynodesMaterialFormFieldDemoComponent.html":{}}}],["editorform.value.pagename",{"_index":1171,"title":{},"body":{"components/NgxTinynodesMaterialFormFieldDemoComponent.html":{}}}],["editorinstance",{"_index":320,"title":{},"body":{"interfaces/EditorJSMaterialForm.html":{}}}],["editorjs",{"_index":12,"title":{},"body":{"interfaces/Block.html":{},"interfaces/BlockData.html":{},"interfaces/ChangeMap.html":{},"interfaces/CreateEditorJSOptions.html":{},"interfaces/EditorJSChange.html":{},"interfaces/EditorJSClass.html":{},"interfaces/EditorJSInstanceConfig.html":{},"interfaces/EditorJSMaterialForm.html":{},"interfaces/EditorMap.html":{},"interfaces/Header.html":{},"interfaces/HeaderBlock.html":{},"interfaces/Image.html":{},"interfaces/ImageBlock.html":{},"interfaces/InjectorApiCallOptions.html":{},"interfaces/InjectorApiCallResponse.html":{},"interfaces/InjectorMethodOption.html":{},"interfaces/List.html":{},"interfaces/ListBlock.html":{},"interfaces/NgxEditorJSConfig.html":{},"components/NgxEditorJSDemoHomeComponent.html":{},"modules/NgxEditorJSDemoMaterialModule.html":{},"directives/NgxEditorJSDirective.html":{},"modules/NgxEditorJSModule.html":{},"interfaces/NgxEditorJSModuleConfig.html":{},"injectables/NgxEditorJSPluginService.html":{},"modules/NgxEditorJSPluginServiceModule.html":{},"injectables/NgxEditorJSService.html":{},"modules/NgxEditorjsDemoModule.html":{},"modules/NgxEditorjsPluginsModule.html":{},"components/NgxTinynodesMatJsonOutputComponent.html":{},"modules/NgxTinynodesMaterialFormFieldDemo.html":{},"components/NgxTinynodesMaterialFormFieldDemoComponent.html":{},"interfaces/Page.html":{},"interfaces/PageBlock.html":{},"components/PageContainerComponent.html":{},"modules/PageStoreModule.html":{},"injectables/PagesQuery.html":{},"injectables/PagesService.html":{},"interfaces/PagesState.html":{},"injectables/PagesStore.html":{},"interfaces/Paragraph.html":{},"interfaces/ParagraphBlock.html":{},"modules/PluginCodeModule.html":{},"interfaces/PluginConfig.html":{},"interfaces/PluginConfigMap.html":{},"modules/PluginEmbedModule.html":{},"modules/PluginHeaderModule.html":{},"modules/PluginImageModule.html":{},"modules/PluginInlineCodeModule.html":{},"modules/PluginLinkModule.html":{},"modules/PluginListModule.html":{},"modules/PluginMarkerModule.html":{},"modules/PluginParagraphModule.html":{},"modules/PluginQuoteModule.html":{},"modules/PluginSimpleImageModule.html":{},"modules/PluginWarningModule.html":{},"interfaces/ReadyMap.html":{},"interfaces/SavedMap.html":{},"interfaces/Tag.html":{},"interfaces/ToolSettingsMap.html":{},"changelog.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"index.html":{},"todo.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["editorjs'},{'name",{"_index":503,"title":{},"body":{"components/NgxEditorJSDemoHomeComponent.html":{},"components/NgxTinynodesMatJsonOutputComponent.html":{},"components/NgxTinynodesMaterialFormFieldDemoComponent.html":{},"components/PageContainerComponent.html":{}}}],["editorjs.directive",{"_index":246,"title":{},"body":{"interfaces/EditorJSMaterialForm.html":{},"modules/NgxEditorJSModule.html":{}}}],["editorjs.directive.ts",{"_index":547,"title":{},"body":{"directives/NgxEditorJSDirective.html":{}}}],["editorjs.directive.ts:106",{"_index":574,"title":{},"body":{"directives/NgxEditorJSDirective.html":{}}}],["editorjs.directive.ts:112",{"_index":589,"title":{},"body":{"directives/NgxEditorJSDirective.html":{}}}],["editorjs.directive.ts:118",{"_index":606,"title":{},"body":{"directives/NgxEditorJSDirective.html":{}}}],["editorjs.directive.ts:124",{"_index":610,"title":{},"body":{"directives/NgxEditorJSDirective.html":{}}}],["editorjs.directive.ts:130",{"_index":608,"title":{},"body":{"directives/NgxEditorJSDirective.html":{}}}],["editorjs.directive.ts:136",{"_index":603,"title":{},"body":{"directives/NgxEditorJSDirective.html":{}}}],["editorjs.directive.ts:142",{"_index":609,"title":{},"body":{"directives/NgxEditorJSDirective.html":{}}}],["editorjs.directive.ts:148",{"_index":611,"title":{},"body":{"directives/NgxEditorJSDirective.html":{}}}],["editorjs.directive.ts:152",{"_index":569,"title":{},"body":{"directives/NgxEditorJSDirective.html":{}}}],["editorjs.directive.ts:168",{"_index":636,"title":{},"body":{"directives/NgxEditorJSDirective.html":{}}}],["editorjs.directive.ts:175",{"_index":639,"title":{},"body":{"directives/NgxEditorJSDirective.html":{}}}],["editorjs.directive.ts:182",{"_index":641,"title":{},"body":{"directives/NgxEditorJSDirective.html":{}}}],["editorjs.directive.ts:189",{"_index":643,"title":{},"body":{"directives/NgxEditorJSDirective.html":{}}}],["editorjs.directive.ts:198",{"_index":613,"title":{},"body":{"directives/NgxEditorJSDirective.html":{}}}],["editorjs.directive.ts:215",{"_index":621,"title":{},"body":{"directives/NgxEditorJSDirective.html":{}}}],["editorjs.directive.ts:251",{"_index":615,"title":{},"body":{"directives/NgxEditorJSDirective.html":{}}}],["editorjs.directive.ts:284",{"_index":633,"title":{},"body":{"directives/NgxEditorJSDirective.html":{}}}],["editorjs.directive.ts:53",{"_index":572,"title":{},"body":{"directives/NgxEditorJSDirective.html":{}}}],["editorjs.directive.ts:59",{"_index":593,"title":{},"body":{"directives/NgxEditorJSDirective.html":{}}}],["editorjs.directive.ts:65",{"_index":595,"title":{},"body":{"directives/NgxEditorJSDirective.html":{}}}],["editorjs.directive.ts:72",{"_index":596,"title":{},"body":{"directives/NgxEditorJSDirective.html":{}}}],["editorjs.directive.ts:78",{"_index":600,"title":{},"body":{"directives/NgxEditorJSDirective.html":{}}}],["editorjs.directive.ts:84",{"_index":585,"title":{},"body":{"directives/NgxEditorJSDirective.html":{}}}],["editorjs.directive.ts:90",{"_index":602,"title":{},"body":{"directives/NgxEditorJSDirective.html":{}}}],["editorjs.directive.ts:97",{"_index":590,"title":{},"body":{"directives/NgxEditorJSDirective.html":{}}}],["editorjs.module.ts",{"_index":717,"title":{},"body":{"modules/NgxEditorJSModule.html":{},"miscellaneous/functions.html":{}}}],["editorjs.module.ts:68",{"_index":723,"title":{},"body":{"modules/NgxEditorJSModule.html":{}}}],["editorjs.version",{"_index":195,"title":{},"body":{"interfaces/EditorJSClass.html":{},"interfaces/EditorJSInstanceConfig.html":{},"interfaces/InjectorApiCallOptions.html":{},"interfaces/InjectorApiCallResponse.html":{},"interfaces/InjectorMethodOption.html":{},"directives/NgxEditorJSDirective.html":{},"miscellaneous/variables.html":{}}}],["editorjs/code",{"_index":1320,"title":{},"body":{"modules/PluginCodeModule.html":{}}}],["editorjs/editorjs",{"_index":76,"title":{},"body":{"interfaces/BlockData.html":{},"interfaces/ChangeMap.html":{},"interfaces/CreateEditorJSOptions.html":{},"interfaces/EditorJSChange.html":{},"interfaces/EditorJSClass.html":{},"interfaces/EditorJSInstanceConfig.html":{},"interfaces/EditorMap.html":{},"interfaces/InjectorApiCallOptions.html":{},"interfaces/InjectorApiCallResponse.html":{},"interfaces/InjectorMethodOption.html":{},"interfaces/NgxEditorJSConfig.html":{},"directives/NgxEditorJSDirective.html":{},"modules/NgxEditorJSModule.html":{},"interfaces/NgxEditorJSModuleConfig.html":{},"injectables/NgxEditorJSService.html":{},"components/NgxTinynodesMaterialFormFieldDemoComponent.html":{},"components/PageContainerComponent.html":{},"interfaces/PluginConfig.html":{},"interfaces/PluginConfigMap.html":{},"interfaces/ReadyMap.html":{},"interfaces/SavedMap.html":{},"interfaces/ToolSettingsMap.html":{}}}],["editorjs/editorjs.component",{"_index":250,"title":{},"body":{"interfaces/EditorJSMaterialForm.html":{}}}],["editorjs/embed",{"_index":1326,"title":{},"body":{"modules/PluginEmbedModule.html":{}}}],["editorjs/header",{"_index":1329,"title":{},"body":{"modules/PluginHeaderModule.html":{}}}],["editorjs/image",{"_index":1344,"title":{},"body":{"modules/PluginImageModule.html":{}}}],["editorjs/inline",{"_index":1349,"title":{},"body":{"modules/PluginInlineCodeModule.html":{}}}],["editorjs/link",{"_index":1352,"title":{},"body":{"modules/PluginLinkModule.html":{}}}],["editorjs/list",{"_index":1354,"title":{},"body":{"modules/PluginListModule.html":{}}}],["editorjs/ngx",{"_index":7,"title":{},"body":{"interfaces/Block.html":{},"interfaces/BlockData.html":{},"interfaces/ChangeMap.html":{},"interfaces/CreateEditorJSOptions.html":{},"interfaces/EditorJSChange.html":{},"interfaces/EditorJSClass.html":{},"interfaces/EditorJSInstanceConfig.html":{},"interfaces/EditorJSMaterialForm.html":{},"interfaces/EditorMap.html":{},"interfaces/Header.html":{},"interfaces/HeaderBlock.html":{},"interfaces/Image.html":{},"interfaces/ImageBlock.html":{},"interfaces/InjectorApiCallOptions.html":{},"interfaces/InjectorApiCallResponse.html":{},"interfaces/InjectorMethodOption.html":{},"interfaces/List.html":{},"interfaces/ListBlock.html":{},"classes/MockEditorJS.html":{},"injectables/MockNgZone.html":{},"classes/MockPlugin.html":{},"interfaces/NgxEditorJSConfig.html":{},"components/NgxEditorJSDemoHomeComponent.html":{},"modules/NgxEditorJSDemoMaterialModule.html":{},"directives/NgxEditorJSDirective.html":{},"modules/NgxEditorJSModule.html":{},"interfaces/NgxEditorJSModuleConfig.html":{},"injectables/NgxEditorJSPluginService.html":{},"modules/NgxEditorJSPluginServiceModule.html":{},"injectables/NgxEditorJSService.html":{},"modules/NgxEditorjsDemoModule.html":{},"modules/NgxEditorjsPluginsModule.html":{},"modules/NgxTinynodesMaterialFormFieldDemo.html":{},"components/NgxTinynodesMaterialFormFieldDemoComponent.html":{},"interfaces/Page.html":{},"interfaces/PageBlock.html":{},"components/PageContainerComponent.html":{},"modules/PageStoreModule.html":{},"injectables/PagesQuery.html":{},"injectables/PagesService.html":{},"interfaces/PagesState.html":{},"injectables/PagesStore.html":{},"interfaces/Paragraph.html":{},"interfaces/ParagraphBlock.html":{},"modules/PluginCodeModule.html":{},"interfaces/PluginConfig.html":{},"interfaces/PluginConfigMap.html":{},"modules/PluginEmbedModule.html":{},"modules/PluginHeaderModule.html":{},"modules/PluginImageModule.html":{},"modules/PluginInlineCodeModule.html":{},"modules/PluginLinkModule.html":{},"modules/PluginListModule.html":{},"modules/PluginMarkerModule.html":{},"modules/PluginParagraphModule.html":{},"modules/PluginQuoteModule.html":{},"modules/PluginSimpleImageModule.html":{},"modules/PluginWarningModule.html":{},"interfaces/ReadyMap.html":{},"interfaces/SavedMap.html":{},"interfaces/Tag.html":{},"interfaces/ToolSettingsMap.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["editorjs/paragraph",{"_index":1357,"title":{},"body":{"modules/PluginMarkerModule.html":{},"modules/PluginParagraphModule.html":{}}}],["editorjs/quote",{"_index":1362,"title":{},"body":{"modules/PluginQuoteModule.html":{}}}],["editorjs/simple",{"_index":1365,"title":{},"body":{"modules/PluginSimpleImageModule.html":{}}}],["editorjs/src/lib/config/editor",{"_index":1680,"title":{},"body":{"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["editorjs/src/lib/config/module",{"_index":1684,"title":{},"body":{"miscellaneous/functions.html":{}}}],["editorjs/src/lib/containers/editorjs",{"_index":215,"title":{},"body":{"interfaces/EditorJSMaterialForm.html":{},"miscellaneous/variables.html":{}}}],["editorjs/src/lib/containers/editorjs/editorjs.component.ts",{"_index":1807,"title":{},"body":{"miscellaneous/variables.html":{}}}],["editorjs/src/lib/directives/ngx",{"_index":546,"title":{},"body":{"directives/NgxEditorJSDirective.html":{}}}],["editorjs/src/lib/ngx",{"_index":716,"title":{},"body":{"modules/NgxEditorJSModule.html":{},"miscellaneous/functions.html":{}}}],["editorjs/src/lib/services/editorjs.service.ts",{"_index":805,"title":{},"body":{"injectables/NgxEditorJSService.html":{}}}],["editorjs/src/lib/services/editorjs.service.ts:138",{"_index":827,"title":{},"body":{"injectables/NgxEditorJSService.html":{}}}],["editorjs/src/lib/services/editorjs.service.ts:177",{"_index":858,"title":{},"body":{"injectables/NgxEditorJSService.html":{}}}],["editorjs/src/lib/services/editorjs.service.ts:191",{"_index":837,"title":{},"body":{"injectables/NgxEditorJSService.html":{}}}],["editorjs/src/lib/services/editorjs.service.ts:204",{"_index":861,"title":{},"body":{"injectables/NgxEditorJSService.html":{}}}],["editorjs/src/lib/services/editorjs.service.ts:220",{"_index":850,"title":{},"body":{"injectables/NgxEditorJSService.html":{}}}],["editorjs/src/lib/services/editorjs.service.ts:231",{"_index":854,"title":{},"body":{"injectables/NgxEditorJSService.html":{}}}],["editorjs/src/lib/services/editorjs.service.ts:242",{"_index":856,"title":{},"body":{"injectables/NgxEditorJSService.html":{}}}],["editorjs/src/lib/services/editorjs.service.ts:260",{"_index":852,"title":{},"body":{"injectables/NgxEditorJSService.html":{}}}],["editorjs/src/lib/services/editorjs.service.ts:271",{"_index":847,"title":{},"body":{"injectables/NgxEditorJSService.html":{}}}],["editorjs/src/lib/services/editorjs.service.ts:288",{"_index":844,"title":{},"body":{"injectables/NgxEditorJSService.html":{}}}],["editorjs/src/lib/services/editorjs.service.ts:61",{"_index":824,"title":{},"body":{"injectables/NgxEditorJSService.html":{}}}],["editorjs/src/lib/services/editorjs.service.ts:87",{"_index":842,"title":{},"body":{"injectables/NgxEditorJSService.html":{}}}],["editorjs/src/lib/types/blocks.ts",{"_index":8,"title":{},"body":{"interfaces/Block.html":{},"interfaces/Header.html":{},"interfaces/HeaderBlock.html":{},"interfaces/Image.html":{},"interfaces/ImageBlock.html":{},"interfaces/List.html":{},"interfaces/ListBlock.html":{},"interfaces/Paragraph.html":{},"interfaces/ParagraphBlock.html":{},"miscellaneous/typealiases.html":{}}}],["editorjs/src/lib/types/blocks.ts:13",{"_index":20,"title":{},"body":{"interfaces/Block.html":{}}}],["editorjs/src/lib/types/config.ts",{"_index":440,"title":{},"body":{"interfaces/NgxEditorJSConfig.html":{},"interfaces/NgxEditorJSModuleConfig.html":{},"miscellaneous/variables.html":{}}}],["editorjs/src/lib/types/editorjs",{"_index":159,"title":{},"body":{"interfaces/CreateEditorJSOptions.html":{}}}],["editorjs/src/lib/types/injector.ts",{"_index":168,"title":{},"body":{"interfaces/EditorJSClass.html":{},"interfaces/EditorJSInstanceConfig.html":{},"interfaces/InjectorApiCallOptions.html":{},"interfaces/InjectorApiCallResponse.html":{},"interfaces/InjectorMethodOption.html":{},"miscellaneous/variables.html":{}}}],["editorjs/src/lib/types/maps.ts",{"_index":137,"title":{},"body":{"interfaces/ChangeMap.html":{},"interfaces/EditorJSChange.html":{},"interfaces/EditorMap.html":{},"interfaces/ReadyMap.html":{},"interfaces/SavedMap.html":{}}}],["editorjs/src/lib/types/maps.ts:18",{"_index":1369,"title":{},"body":{"interfaces/ReadyMap.html":{}}}],["editorjs/src/lib/types/maps.ts:28",{"_index":1370,"title":{},"body":{"interfaces/SavedMap.html":{}}}],["editorjs/src/lib/types/maps.ts:52",{"_index":143,"title":{},"body":{"interfaces/ChangeMap.html":{}}}],["editorjs/src/lib/types/maps.ts:8",{"_index":382,"title":{},"body":{"interfaces/EditorMap.html":{}}}],["editorjs/src/testing/ng",{"_index":416,"title":{},"body":{"injectables/MockNgZone.html":{}}}],["editorjs/src/testing/shared.ts",{"_index":385,"title":{},"body":{"classes/MockEditorJS.html":{},"classes/MockPlugin.html":{}}}],["editorjs/src/testing/shared.ts:11",{"_index":393,"title":{},"body":{"classes/MockEditorJS.html":{}}}],["editorjs/src/testing/shared.ts:12",{"_index":396,"title":{},"body":{"classes/MockEditorJS.html":{}}}],["editorjs/src/testing/shared.ts:13",{"_index":397,"title":{},"body":{"classes/MockEditorJS.html":{}}}],["editorjs/src/testing/shared.ts:14",{"_index":394,"title":{},"body":{"classes/MockEditorJS.html":{}}}],["editorjs/src/testing/shared.ts:16",{"_index":391,"title":{},"body":{"classes/MockEditorJS.html":{}}}],["editorjs/src/testing/shared.ts:3",{"_index":437,"title":{},"body":{"classes/MockPlugin.html":{}}}],["editorjs/src/testing/shared.ts:5",{"_index":438,"title":{},"body":{"classes/MockPlugin.html":{}}}],["editorjs/warning",{"_index":1368,"title":{},"body":{"modules/PluginWarningModule.html":{}}}],["editorjs@1.2.0",{"_index":1426,"title":{},"body":{"changelog.html":{}}}],["editorjs@1.3.2",{"_index":1415,"title":{},"body":{"changelog.html":{}}}],["editorjs@2.0.0",{"_index":1402,"title":{},"body":{"changelog.html":{}}}],["editorjs@3.0.0",{"_index":1384,"title":{},"body":{"changelog.html":{}}}],["editorjs](http://editorjs.io",{"_index":738,"title":{},"body":{"modules/NgxEditorJSModule.html":{}}}],["editorjs_form_value_accessor",{"_index":1796,"title":{},"body":{"miscellaneous/variables.html":{}}}],["editorjs_material_field_control",{"_index":252,"title":{},"body":{"interfaces/EditorJSMaterialForm.html":{},"miscellaneous/variables.html":{}}}],["editorjs_module_import",{"_index":198,"title":{},"body":{"interfaces/EditorJSClass.html":{},"interfaces/EditorJSInstanceConfig.html":{},"interfaces/InjectorApiCallOptions.html":{},"interfaces/InjectorApiCallResponse.html":{},"interfaces/InjectorMethodOption.html":{},"modules/NgxEditorJSModule.html":{},"miscellaneous/variables.html":{}}}],["editorjschange",{"_index":156,"title":{"interfaces/EditorJSChange.html":{}},"body":{"interfaces/ChangeMap.html":{},"interfaces/EditorJSChange.html":{},"interfaces/EditorMap.html":{},"interfaces/ReadyMap.html":{},"interfaces/SavedMap.html":{}}}],["editorjsclass",{"_index":167,"title":{"interfaces/EditorJSClass.html":{}},"body":{"interfaces/EditorJSClass.html":{},"interfaces/EditorJSInstanceConfig.html":{},"interfaces/InjectorApiCallOptions.html":{},"interfaces/InjectorApiCallResponse.html":{},"interfaces/InjectorMethodOption.html":{},"injectables/NgxEditorJSService.html":{}}}],["editorjsinstance",{"_index":201,"title":{},"body":{"interfaces/EditorJSClass.html":{},"interfaces/EditorJSInstanceConfig.html":{},"interfaces/InjectorApiCallOptions.html":{},"interfaces/InjectorApiCallResponse.html":{},"interfaces/InjectorMethodOption.html":{},"modules/NgxEditorJSModule.html":{},"injectables/NgxEditorJSService.html":{},"miscellaneous/variables.html":{}}}],["editorjsinstanceconfig",{"_index":181,"title":{"interfaces/EditorJSInstanceConfig.html":{}},"body":{"interfaces/EditorJSClass.html":{},"interfaces/EditorJSInstanceConfig.html":{},"interfaces/InjectorApiCallOptions.html":{},"interfaces/InjectorApiCallResponse.html":{},"interfaces/InjectorMethodOption.html":{}}}],["editorjsmaterialform",{"_index":214,"title":{"interfaces/EditorJSMaterialForm.html":{}},"body":{"interfaces/EditorJSMaterialForm.html":{}}}],["editorjsplugin",{"_index":91,"title":{},"body":{"interfaces/BlockData.html":{},"interfaces/PluginConfig.html":{},"interfaces/PluginConfigMap.html":{},"interfaces/ToolSettingsMap.html":{},"miscellaneous/typealiases.html":{}}}],["editormap",{"_index":148,"title":{"interfaces/EditorMap.html":{}},"body":{"interfaces/ChangeMap.html":{},"interfaces/EditorJSChange.html":{},"interfaces/EditorMap.html":{},"injectables/NgxEditorJSService.html":{},"interfaces/ReadyMap.html":{},"interfaces/SavedMap.html":{}}}],["editorservice",{"_index":346,"title":{},"body":{"interfaces/EditorJSMaterialForm.html":{},"directives/NgxEditorJSDirective.html":{},"components/NgxTinynodesMaterialFormFieldDemoComponent.html":{},"components/PageContainerComponent.html":{}}}],["edits",{"_index":1576,"title":{},"body":{"contributing.html":{}}}],["el",{"_index":570,"title":{},"body":{"directives/NgxEditorJSDirective.html":{}}}],["electronic",{"_index":1553,"title":{},"body":{"contributing.html":{}}}],["element",{"_index":349,"title":{},"body":{"interfaces/EditorJSMaterialForm.html":{},"interfaces/NgxEditorJSConfig.html":{},"components/NgxEditorJSDemoHomeComponent.html":{},"directives/NgxEditorJSDirective.html":{},"interfaces/NgxEditorJSModuleConfig.html":{},"components/NgxTinynodesMatJsonOutputComponent.html":{},"components/NgxTinynodesMaterialFormFieldDemoComponent.html":{},"components/PageContainerComponent.html":{},"index.html":{}}}],["elementref",{"_index":567,"title":{},"body":{"directives/NgxEditorJSDirective.html":{}}}],["email",{"_index":1459,"title":{},"body":{"contributing.html":{}}}],["embed",{"_index":1325,"title":{},"body":{"modules/PluginEmbedModule.html":{}}}],["emits",{"_index":604,"title":{},"body":{"directives/NgxEditorJSDirective.html":{}}}],["empathy",{"_index":1535,"title":{},"body":{"contributing.html":{}}}],["empty",{"_index":311,"title":{},"body":{"interfaces/EditorJSMaterialForm.html":{},"directives/NgxEditorJSDirective.html":{}}}],["empty(empty",{"_index":314,"title":{},"body":{"interfaces/EditorJSMaterialForm.html":{}}}],["enable",{"_index":1121,"title":{},"body":{"components/NgxTinynodesMaterialFormFieldDemoComponent.html":{}}}],["enableautosave",{"_index":1102,"title":{},"body":{"components/NgxTinynodesMaterialFormFieldDemoComponent.html":{}}}],["enableautosave(autosavetime",{"_index":1119,"title":{},"body":{"components/NgxTinynodesMaterialFormFieldDemoComponent.html":{}}}],["enabled",{"_index":1165,"title":{},"body":{"components/NgxTinynodesMaterialFormFieldDemoComponent.html":{}}}],["enablelongstacktrace",{"_index":435,"title":{},"body":{"injectables/MockNgZone.html":{}}}],["enables",{"_index":1196,"title":{},"body":{"components/NgxTinynodesMaterialFormFieldDemoComponent.html":{}}}],["end",{"_index":1467,"title":{},"body":{"contributing.html":{}}}],["enforce",{"_index":1631,"title":{},"body":{"contributing.html":{}}}],["enforcement",{"_index":1608,"title":{},"body":{"contributing.html":{}}}],["ensure",{"_index":809,"title":{},"body":{"injectables/NgxEditorJSService.html":{},"components/NgxTinynodesMaterialFormFieldDemoComponent.html":{},"contributing.html":{}}}],["enter",{"_index":1169,"title":{},"body":{"components/NgxTinynodesMaterialFormFieldDemoComponent.html":{}}}],["entire",{"_index":1194,"title":{},"body":{"components/NgxTinynodesMaterialFormFieldDemoComponent.html":{},"changelog.html":{}}}],["entity",{"_index":1307,"title":{},"body":{"injectables/PagesService.html":{}}}],["entitystate",{"_index":1312,"title":{},"body":{"interfaces/PagesState.html":{},"injectables/PagesStore.html":{}}}],["entitystore",{"_index":1313,"title":{},"body":{"interfaces/PagesState.html":{},"injectables/PagesStore.html":{}}}],["entrycomponents",{"_index":987,"title":{},"body":{"modules/NgxEditorjsDemoModule.html":{},"modules/NgxTinynodesMaterialFormFieldDemo.html":{}}}],["enum",{"_index":82,"title":{},"body":{"interfaces/BlockData.html":{},"interfaces/PluginConfig.html":{},"interfaces/PluginConfigMap.html":{},"interfaces/ToolSettingsMap.html":{}}}],["enumerations",{"_index":1672,"title":{"miscellaneous/enumerations.html":{}},"body":{"miscellaneous/enumerations.html":{}}}],["environment",{"_index":1471,"title":{},"body":{"contributing.html":{}}}],["error",{"_index":277,"title":{},"body":{"interfaces/EditorJSMaterialForm.html":{}}}],["error('error",{"_index":683,"title":{},"body":{"directives/NgxEditorJSDirective.html":{}}}],["error(`no",{"_index":916,"title":{},"body":{"injectables/NgxEditorJSService.html":{}}}],["errorstate",{"_index":278,"title":{},"body":{"interfaces/EditorJSMaterialForm.html":{}}}],["etc",{"_index":833,"title":{},"body":{"injectables/NgxEditorJSService.html":{},"todo.html":{}}}],["ethnicity",{"_index":1506,"title":{},"body":{"contributing.html":{}}}],["event",{"_index":155,"title":{},"body":{"interfaces/ChangeMap.html":{},"interfaces/EditorJSChange.html":{},"interfaces/EditorJSMaterialForm.html":{},"interfaces/EditorMap.html":{},"interfaces/ReadyMap.html":{},"interfaces/SavedMap.html":{},"contributing.html":{},"license.html":{}}}],["eventemitter",{"_index":433,"title":{},"body":{"injectables/MockNgZone.html":{},"directives/NgxEditorJSDirective.html":{}}}],["eventemitter(false",{"_index":434,"title":{},"body":{"injectables/MockNgZone.html":{}}}],["events",{"_index":1697,"title":{},"body":{"index.html":{}}}],["everyone",{"_index":1500,"title":{},"body":{"contributing.html":{}}}],["example",{"_index":261,"title":{},"body":{"interfaces/EditorJSMaterialForm.html":{},"components/NgxEditorJSDemoHomeComponent.html":{},"directives/NgxEditorJSDirective.html":{},"changelog.html":{},"index.html":{}}}],["examples",{"_index":1478,"title":{},"body":{"contributing.html":{}}}],["exclude",{"_index":765,"title":{},"body":{"injectables/NgxEditorJSPluginService.html":{},"injectables/NgxEditorJSService.html":{}}}],["excludelist",{"_index":766,"title":{},"body":{"injectables/NgxEditorJSPluginService.html":{}}}],["excludelist.includes(key",{"_index":783,"title":{},"body":{"injectables/NgxEditorJSPluginService.html":{}}}],["excludetools",{"_index":163,"title":{},"body":{"interfaces/CreateEditorJSOptions.html":{},"directives/NgxEditorJSDirective.html":{},"injectables/NgxEditorJSPluginService.html":{},"injectables/NgxEditorJSService.html":{}}}],["existing",{"_index":631,"title":{},"body":{"directives/NgxEditorJSDirective.html":{}}}],["exiting",{"_index":1410,"title":{},"body":{"changelog.html":{}}}],["expand",{"_index":1064,"title":{},"body":{"components/NgxTinynodesMatJsonOutputComponent.html":{}}}],["expanded",{"_index":1440,"title":{},"body":{"changelog.html":{}}}],["expected",{"_index":1565,"title":{},"body":{"contributing.html":{}}}],["experience",{"_index":1499,"title":{},"body":{"contributing.html":{}}}],["experiences",{"_index":1527,"title":{},"body":{"contributing.html":{}}}],["explicit",{"_index":1555,"title":{},"body":{"contributing.html":{}}}],["export",{"_index":24,"title":{},"body":{"interfaces/Block.html":{},"interfaces/BlockData.html":{},"interfaces/ChangeMap.html":{},"interfaces/CreateEditorJSOptions.html":{},"interfaces/EditorJSChange.html":{},"interfaces/EditorJSClass.html":{},"interfaces/EditorJSInstanceConfig.html":{},"interfaces/EditorJSMaterialForm.html":{},"interfaces/EditorMap.html":{},"interfaces/Header.html":{},"interfaces/HeaderBlock.html":{},"interfaces/Image.html":{},"interfaces/ImageBlock.html":{},"interfaces/InjectorApiCallOptions.html":{},"interfaces/InjectorApiCallResponse.html":{},"interfaces/InjectorMethodOption.html":{},"interfaces/List.html":{},"interfaces/ListBlock.html":{},"classes/MockEditorJS.html":{},"injectables/MockNgZone.html":{},"classes/MockPlugin.html":{},"interfaces/NgxEditorJSConfig.html":{},"components/NgxEditorJSDemoHomeComponent.html":{},"modules/NgxEditorJSDemoMaterialModule.html":{},"directives/NgxEditorJSDirective.html":{},"modules/NgxEditorJSModule.html":{},"interfaces/NgxEditorJSModuleConfig.html":{},"injectables/NgxEditorJSPluginService.html":{},"modules/NgxEditorJSPluginServiceModule.html":{},"injectables/NgxEditorJSService.html":{},"modules/NgxEditorjsDemoModule.html":{},"modules/NgxEditorjsPluginsModule.html":{},"modules/NgxTinynodesComponentsModule.html":{},"interfaces/NgxTinynodesMatFieldComponent.html":{},"components/NgxTinynodesMatJsonOutputComponent.html":{},"modules/NgxTinynodesMatJsonOutputModule.html":{},"modules/NgxTinynodesMatTagInputModule.html":{},"modules/NgxTinynodesMaterialFormFieldDemo.html":{},"components/NgxTinynodesMaterialFormFieldDemoComponent.html":{},"interfaces/Page.html":{},"interfaces/PageBlock.html":{},"components/PageContainerComponent.html":{},"modules/PageStoreModule.html":{},"injectables/PagesQuery.html":{},"injectables/PagesService.html":{},"interfaces/PagesState.html":{},"injectables/PagesStore.html":{},"interfaces/Paragraph.html":{},"interfaces/ParagraphBlock.html":{},"modules/PluginCodeModule.html":{},"interfaces/PluginConfig.html":{},"interfaces/PluginConfigMap.html":{},"modules/PluginEmbedModule.html":{},"modules/PluginHeaderModule.html":{},"modules/PluginImageModule.html":{},"modules/PluginInlineCodeModule.html":{},"modules/PluginLinkModule.html":{},"modules/PluginListModule.html":{},"modules/PluginMarkerModule.html":{},"modules/PluginParagraphModule.html":{},"modules/PluginQuoteModule.html":{},"modules/PluginSimpleImageModule.html":{},"modules/PluginWarningModule.html":{},"interfaces/ReadyMap.html":{},"interfaces/SavedMap.html":{},"interfaces/Tag.html":{},"interfaces/ToolSettingsMap.html":{}}}],["exported",{"_index":95,"title":{},"body":{"interfaces/BlockData.html":{},"interfaces/PluginConfig.html":{},"interfaces/PluginConfigMap.html":{},"interfaces/ToolSettingsMap.html":{}}}],["exports",{"_index":545,"title":{},"body":{"modules/NgxEditorJSDemoMaterialModule.html":{},"modules/NgxEditorJSModule.html":{},"modules/NgxEditorJSPluginServiceModule.html":{},"modules/NgxEditorjsDemoModule.html":{},"modules/NgxEditorjsPluginsModule.html":{},"modules/NgxTinynodesComponentsModule.html":{},"modules/NgxTinynodesMatJsonOutputModule.html":{},"modules/NgxTinynodesMatTagInputModule.html":{},"modules/NgxTinynodesMaterialFormFieldDemo.html":{},"modules/PageStoreModule.html":{},"changelog.html":{},"index.html":{},"overview.html":{}}}],["expose",{"_index":1783,"title":{},"body":{"todo.html":{}}}],["exposed",{"_index":1473,"title":{},"body":{"contributing.html":{}}}],["express",{"_index":1751,"title":{},"body":{"license.html":{}}}],["expression",{"_index":1509,"title":{},"body":{"contributing.html":{}}}],["extends",{"_index":40,"title":{},"body":{"interfaces/Block.html":{},"interfaces/EditorJSClass.html":{},"interfaces/EditorJSInstanceConfig.html":{},"interfaces/EditorJSMaterialForm.html":{},"interfaces/Header.html":{},"interfaces/HeaderBlock.html":{},"interfaces/Image.html":{},"interfaces/ImageBlock.html":{},"interfaces/InjectorApiCallOptions.html":{},"interfaces/InjectorApiCallResponse.html":{},"interfaces/InjectorMethodOption.html":{},"interfaces/List.html":{},"interfaces/ListBlock.html":{},"injectables/MockNgZone.html":{},"interfaces/NgxTinynodesMatFieldComponent.html":{},"interfaces/Page.html":{},"interfaces/PageBlock.html":{},"injectables/PagesQuery.html":{},"interfaces/PagesState.html":{},"injectables/PagesStore.html":{},"interfaces/Paragraph.html":{},"interfaces/ParagraphBlock.html":{},"interfaces/Tag.html":{}}}],["face",{"_index":1633,"title":{},"body":{"contributing.html":{}}}],["factory",{"_index":467,"title":{},"body":{"interfaces/NgxEditorJSConfig.html":{},"modules/NgxEditorJSModule.html":{},"interfaces/NgxEditorJSModuleConfig.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["fair",{"_index":1567,"title":{},"body":{"contributing.html":{}}}],["faith",{"_index":1632,"title":{},"body":{"contributing.html":{}}}],["falls",{"_index":650,"title":{},"body":{"directives/NgxEditorJSDirective.html":{}}}],["false",{"_index":164,"title":{},"body":{"interfaces/CreateEditorJSOptions.html":{},"interfaces/EditorJSClass.html":{},"interfaces/EditorJSInstanceConfig.html":{},"interfaces/EditorJSMaterialForm.html":{},"interfaces/InjectorApiCallOptions.html":{},"interfaces/InjectorApiCallResponse.html":{},"interfaces/InjectorMethodOption.html":{},"injectables/MockNgZone.html":{},"interfaces/NgxEditorJSConfig.html":{},"interfaces/NgxEditorJSModuleConfig.html":{},"injectables/NgxEditorJSService.html":{},"components/NgxTinynodesMaterialFormFieldDemoComponent.html":{},"miscellaneous/variables.html":{}}}],["fb",{"_index":1108,"title":{},"body":{"components/NgxTinynodesMaterialFormFieldDemoComponent.html":{}}}],["feature",{"_index":1195,"title":{},"body":{"components/NgxTinynodesMaterialFormFieldDemoComponent.html":{},"todo.html":{}}}],["features",{"_index":1413,"title":{},"body":{"changelog.html":{},"index.html":{}}}],["field",{"_index":240,"title":{},"body":{"interfaces/EditorJSMaterialForm.html":{},"components/NgxEditorJSDemoHomeComponent.html":{},"modules/NgxEditorJSDemoMaterialModule.html":{},"modules/NgxEditorJSModule.html":{},"components/NgxTinynodesMatJsonOutputComponent.html":{},"components/NgxTinynodesMaterialFormFieldDemoComponent.html":{},"components/PageContainerComponent.html":{},"changelog.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["field'},{'name",{"_index":505,"title":{},"body":{"components/NgxEditorJSDemoHomeComponent.html":{},"components/NgxTinynodesMatJsonOutputComponent.html":{},"components/NgxTinynodesMaterialFormFieldDemoComponent.html":{},"components/PageContainerComponent.html":{}}}],["field.component",{"_index":733,"title":{},"body":{"modules/NgxEditorJSModule.html":{},"modules/NgxTinynodesMaterialFormFieldDemo.html":{}}}],["field.component.html",{"_index":264,"title":{},"body":{"interfaces/EditorJSMaterialForm.html":{},"components/NgxTinynodesMaterialFormFieldDemoComponent.html":{}}}],["field.component.scss",{"_index":266,"title":{},"body":{"interfaces/EditorJSMaterialForm.html":{},"components/NgxTinynodesMaterialFormFieldDemoComponent.html":{}}}],["field.component.ts",{"_index":218,"title":{},"body":{"interfaces/EditorJSMaterialForm.html":{},"components/NgxTinynodesMaterialFormFieldDemoComponent.html":{},"miscellaneous/variables.html":{}}}],["field.component.ts:102",{"_index":1120,"title":{},"body":{"components/NgxTinynodesMaterialFormFieldDemoComponent.html":{}}}],["field.component.ts:109",{"_index":1118,"title":{},"body":{"components/NgxTinynodesMaterialFormFieldDemoComponent.html":{}}}],["field.component.ts:116",{"_index":1127,"title":{},"body":{"components/NgxTinynodesMaterialFormFieldDemoComponent.html":{}}}],["field.component.ts:125",{"_index":1116,"title":{},"body":{"components/NgxTinynodesMaterialFormFieldDemoComponent.html":{}}}],["field.component.ts:144",{"_index":1129,"title":{},"body":{"components/NgxTinynodesMaterialFormFieldDemoComponent.html":{}}}],["field.component.ts:155",{"_index":1126,"title":{},"body":{"components/NgxTinynodesMaterialFormFieldDemoComponent.html":{}}}],["field.component.ts:172",{"_index":1123,"title":{},"body":{"components/NgxTinynodesMaterialFormFieldDemoComponent.html":{}}}],["field.component.ts:25",{"_index":1114,"title":{},"body":{"components/NgxTinynodesMaterialFormFieldDemoComponent.html":{}}}],["field.component.ts:30",{"_index":1113,"title":{},"body":{"components/NgxTinynodesMaterialFormFieldDemoComponent.html":{}}}],["field.component.ts:34",{"_index":1134,"title":{},"body":{"components/NgxTinynodesMaterialFormFieldDemoComponent.html":{}}}],["field.component.ts:51",{"_index":1110,"title":{},"body":{"components/NgxTinynodesMaterialFormFieldDemoComponent.html":{}}}],["field.component.ts:86",{"_index":1137,"title":{},"body":{"components/NgxTinynodesMaterialFormFieldDemoComponent.html":{}}}],["field.component.ts:93",{"_index":1139,"title":{},"body":{"components/NgxTinynodesMaterialFormFieldDemoComponent.html":{}}}],["field.module').then(m",{"_index":1814,"title":{},"body":{"miscellaneous/variables.html":{}}}],["field.module.ts",{"_index":1092,"title":{},"body":{"modules/NgxTinynodesMaterialFormFieldDemo.html":{}}}],["field/containers/material",{"_index":1097,"title":{},"body":{"components/NgxTinynodesMaterialFormFieldDemoComponent.html":{}}}],["field/editorjs",{"_index":217,"title":{},"body":{"interfaces/EditorJSMaterialForm.html":{},"modules/NgxEditorJSModule.html":{},"miscellaneous/variables.html":{}}}],["field/material",{"_index":1091,"title":{},"body":{"modules/NgxTinynodesMaterialFormFieldDemo.html":{},"components/NgxTinynodesMaterialFormFieldDemoComponent.html":{},"miscellaneous/variables.html":{}}}],["file",{"_index":5,"title":{},"body":{"interfaces/Block.html":{},"interfaces/BlockData.html":{},"interfaces/ChangeMap.html":{},"interfaces/CreateEditorJSOptions.html":{},"interfaces/EditorJSChange.html":{},"interfaces/EditorJSClass.html":{},"interfaces/EditorJSInstanceConfig.html":{},"interfaces/EditorJSMaterialForm.html":{},"interfaces/EditorMap.html":{},"interfaces/Header.html":{},"interfaces/HeaderBlock.html":{},"interfaces/Image.html":{},"interfaces/ImageBlock.html":{},"interfaces/InjectorApiCallOptions.html":{},"interfaces/InjectorApiCallResponse.html":{},"interfaces/InjectorMethodOption.html":{},"interfaces/List.html":{},"interfaces/ListBlock.html":{},"classes/MockEditorJS.html":{},"injectables/MockNgZone.html":{},"classes/MockPlugin.html":{},"interfaces/NgxEditorJSConfig.html":{},"components/NgxEditorJSDemoHomeComponent.html":{},"modules/NgxEditorJSDemoMaterialModule.html":{},"directives/NgxEditorJSDirective.html":{},"modules/NgxEditorJSModule.html":{},"interfaces/NgxEditorJSModuleConfig.html":{},"injectables/NgxEditorJSPluginService.html":{},"modules/NgxEditorJSPluginServiceModule.html":{},"injectables/NgxEditorJSService.html":{},"modules/NgxEditorjsDemoModule.html":{},"modules/NgxEditorjsPluginsModule.html":{},"modules/NgxTinynodesComponentsModule.html":{},"interfaces/NgxTinynodesMatFieldComponent.html":{},"components/NgxTinynodesMatJsonOutputComponent.html":{},"modules/NgxTinynodesMatJsonOutputModule.html":{},"modules/NgxTinynodesMatTagInputModule.html":{},"modules/NgxTinynodesMaterialFormFieldDemo.html":{},"components/NgxTinynodesMaterialFormFieldDemoComponent.html":{},"interfaces/Page.html":{},"interfaces/PageBlock.html":{},"components/PageContainerComponent.html":{},"modules/PageStoreModule.html":{},"injectables/PagesQuery.html":{},"injectables/PagesService.html":{},"interfaces/PagesState.html":{},"injectables/PagesStore.html":{},"interfaces/Paragraph.html":{},"interfaces/ParagraphBlock.html":{},"modules/PluginCodeModule.html":{},"interfaces/PluginConfig.html":{},"interfaces/PluginConfigMap.html":{},"modules/PluginEmbedModule.html":{},"modules/PluginHeaderModule.html":{},"modules/PluginImageModule.html":{},"modules/PluginInlineCodeModule.html":{},"modules/PluginLinkModule.html":{},"modules/PluginListModule.html":{},"modules/PluginMarkerModule.html":{},"modules/PluginParagraphModule.html":{},"modules/PluginQuoteModule.html":{},"modules/PluginSimpleImageModule.html":{},"modules/PluginWarningModule.html":{},"interfaces/ReadyMap.html":{},"interfaces/SavedMap.html":{},"interfaces/Tag.html":{},"interfaces/ToolSettingsMap.html":{},"contributing.html":{}}}],["filed",{"_index":1437,"title":{},"body":{"changelog.html":{}}}],["files",{"_index":1479,"title":{},"body":{"contributing.html":{},"license.html":{}}}],["filter",{"_index":868,"title":{},"body":{"injectables/NgxEditorJSService.html":{},"components/NgxTinynodesMaterialFormFieldDemoComponent.html":{}}}],["filter(([key",{"_index":782,"title":{},"body":{"injectables/NgxEditorJSPluginService.html":{}}}],["filter(haschanged",{"_index":949,"title":{},"body":{"injectables/NgxEditorJSService.html":{}}}],["filtering",{"_index":764,"title":{},"body":{"injectables/NgxEditorJSPluginService.html":{}}}],["finaltools",{"_index":789,"title":{},"body":{"injectables/NgxEditorJSPluginService.html":{}}}],["find",{"_index":1377,"title":{},"body":{"changelog.html":{},"index.html":{}}}],["find(key",{"_index":678,"title":{},"body":{"directives/NgxEditorJSDirective.html":{}}}],["first",{"_index":449,"title":{},"body":{"interfaces/NgxEditorJSConfig.html":{},"directives/NgxEditorJSDirective.html":{},"interfaces/NgxEditorJSModuleConfig.html":{},"injectables/NgxEditorJSService.html":{},"changelog.html":{},"contributing.html":{}}}],["fitness",{"_index":1756,"title":{},"body":{"license.html":{}}}],["fixed",{"_index":1332,"title":{},"body":{"modules/PluginHeaderModule.html":{}}}],["flex",{"_index":1204,"title":{},"body":{"components/NgxTinynodesMaterialFormFieldDemoComponent.html":{},"components/PageContainerComponent.html":{}}}],["float",{"_index":326,"title":{},"body":{"interfaces/EditorJSMaterialForm.html":{}}}],["fn",{"_index":429,"title":{},"body":{"injectables/MockNgZone.html":{}}}],["focus",{"_index":347,"title":{},"body":{"interfaces/EditorJSMaterialForm.html":{},"interfaces/NgxEditorJSConfig.html":{},"directives/NgxEditorJSDirective.html":{},"interfaces/NgxEditorJSModuleConfig.html":{},"components/NgxTinynodesMaterialFormFieldDemoComponent.html":{}}}],["focused",{"_index":292,"title":{},"body":{"interfaces/EditorJSMaterialForm.html":{},"directives/NgxEditorJSDirective.html":{},"components/PageContainerComponent.html":{}}}],["focused(focused",{"_index":296,"title":{},"body":{"interfaces/EditorJSMaterialForm.html":{}}}],["focusing",{"_index":1532,"title":{},"body":{"contributing.html":{}}}],["focusmonitor",{"_index":221,"title":{},"body":{"interfaces/EditorJSMaterialForm.html":{}}}],["folder",{"_index":1706,"title":{},"body":{"index.html":{}}}],["follow",{"_index":1463,"title":{},"body":{"contributing.html":{}}}],["following",{"_index":1741,"title":{},"body":{"license.html":{}}}],["for_root_options_token",{"_index":468,"title":{},"body":{"interfaces/NgxEditorJSConfig.html":{},"modules/NgxEditorJSModule.html":{},"interfaces/NgxEditorJSModuleConfig.html":{},"miscellaneous/variables.html":{}}}],["form",{"_index":494,"title":{},"body":{"components/NgxEditorJSDemoHomeComponent.html":{},"directives/NgxEditorJSDirective.html":{},"components/NgxTinynodesMatJsonOutputComponent.html":{},"modules/NgxTinynodesMaterialFormFieldDemo.html":{},"components/NgxTinynodesMaterialFormFieldDemoComponent.html":{},"components/PageContainerComponent.html":{},"changelog.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["formatted",{"_index":1232,"title":{},"body":{"components/PageContainerComponent.html":{}}}],["formbuilder",{"_index":1109,"title":{},"body":{"components/NgxTinynodesMaterialFormFieldDemoComponent.html":{}}}],["formcontrol",{"_index":580,"title":{},"body":{"directives/NgxEditorJSDirective.html":{},"components/NgxTinynodesMaterialFormFieldDemoComponent.html":{}}}],["forms",{"_index":495,"title":{},"body":{"components/NgxEditorJSDemoHomeComponent.html":{},"directives/NgxEditorJSDirective.html":{},"changelog.html":{},"index.html":{}}}],["formsmodule",{"_index":729,"title":{},"body":{"modules/NgxEditorJSModule.html":{},"modules/NgxTinynodesMatTagInputModule.html":{}}}],["formsmodule,commonmodule",{"_index":1085,"title":{},"body":{"modules/NgxTinynodesMatTagInputModule.html":{}}}],["forroot",{"_index":720,"title":{},"body":{"modules/NgxEditorJSModule.html":{}}}],["forroot(@optional",{"_index":744,"title":{},"body":{"modules/NgxEditorJSModule.html":{}}}],["forroot(config",{"_index":722,"title":{},"body":{"modules/NgxEditorJSModule.html":{}}}],["forwardref",{"_index":230,"title":{},"body":{"interfaces/EditorJSMaterialForm.html":{},"miscellaneous/variables.html":{}}}],["fostering",{"_index":1491,"title":{},"body":{"contributing.html":{}}}],["free",{"_index":1498,"title":{},"body":{"contributing.html":{},"license.html":{}}}],["full",{"_index":259,"title":{},"body":{"interfaces/EditorJSMaterialForm.html":{},"index.html":{},"todo.html":{}}}],["fully",{"_index":1692,"title":{},"body":{"index.html":{}}}],["function",{"_index":179,"title":{},"body":{"interfaces/EditorJSClass.html":{},"interfaces/EditorJSInstanceConfig.html":{},"interfaces/InjectorApiCallOptions.html":{},"interfaces/InjectorApiCallResponse.html":{},"interfaces/InjectorMethodOption.html":{},"classes/MockEditorJS.html":{},"injectables/MockNgZone.html":{},"modules/NgxEditorJSModule.html":{},"injectables/NgxEditorJSService.html":{},"miscellaneous/functions.html":{}}}],["functions",{"_index":1674,"title":{"miscellaneous/functions.html":{}},"body":{"miscellaneous/functions.html":{}}}],["furnished",{"_index":1740,"title":{},"body":{"license.html":{}}}],["further",{"_index":1606,"title":{},"body":{"contributing.html":{}}}],["gender",{"_index":1507,"title":{},"body":{"contributing.html":{}}}],["general",{"_index":1714,"title":{},"body":{"license.html":{},"todo.html":{}}}],["generated",{"_index":1711,"title":{},"body":{"index.html":{}}}],["getasjson",{"_index":1230,"title":{},"body":{"components/PageContainerComponent.html":{}}}],["getautosave",{"_index":1136,"title":{},"body":{"components/NgxTinynodesMaterialFormFieldDemoComponent.html":{}}}],["getblocks",{"_index":1225,"title":{},"body":{"components/PageContainerComponent.html":{}}}],["getdemodata('material",{"_index":1156,"title":{},"body":{"components/NgxTinynodesMaterialFormFieldDemoComponent.html":{}}}],["getdemodata('ngx",{"_index":1238,"title":{},"body":{"components/PageContainerComponent.html":{}}}],["geteditor",{"_index":635,"title":{},"body":{"directives/NgxEditorJSDirective.html":{},"injectables/NgxEditorJSService.html":{}}}],["geteditor(options",{"_index":849,"title":{},"body":{"injectables/NgxEditorJSService.html":{}}}],["getelement",{"_index":638,"title":{},"body":{"directives/NgxEditorJSDirective.html":{}}}],["getmenu",{"_index":1138,"title":{},"body":{"components/NgxTinynodesMaterialFormFieldDemoComponent.html":{},"components/PageContainerComponent.html":{}}}],["getpages",{"_index":1228,"title":{},"body":{"components/PageContainerComponent.html":{},"injectables/PagesService.html":{}}}],["getplugin",{"_index":751,"title":{},"body":{"injectables/NgxEditorJSPluginService.html":{}}}],["getplugin(key",{"_index":758,"title":{},"body":{"injectables/NgxEditorJSPluginService.html":{}}}],["getplugins",{"_index":752,"title":{},"body":{"injectables/NgxEditorJSPluginService.html":{}}}],["getpluginswithexclude",{"_index":753,"title":{},"body":{"injectables/NgxEditorJSPluginService.html":{}}}],["getpluginswithexclude(excludelist",{"_index":762,"title":{},"body":{"injectables/NgxEditorJSPluginService.html":{}}}],["getpluginswithinclude",{"_index":754,"title":{},"body":{"injectables/NgxEditorJSPluginService.html":{}}}],["getpluginswithinclude(includelist",{"_index":767,"title":{},"body":{"injectables/NgxEditorJSPluginService.html":{}}}],["gets",{"_index":325,"title":{},"body":{"interfaces/EditorJSMaterialForm.html":{},"directives/NgxEditorJSDirective.html":{},"injectables/NgxEditorJSService.html":{}}}],["getservice",{"_index":640,"title":{},"body":{"directives/NgxEditorJSDirective.html":{}}}],["getting",{"_index":1372,"title":{"changelog.html":{},"contributing.html":{},"index.html":{},"license.html":{},"todo.html":{}},"body":{"changelog.html":{}}}],["gettools",{"_index":755,"title":{},"body":{"injectables/NgxEditorJSPluginService.html":{}}}],["gettools(excludetools",{"_index":770,"title":{},"body":{"injectables/NgxEditorJSPluginService.html":{},"injectables/NgxEditorJSService.html":{}}}],["gettouched",{"_index":642,"title":{},"body":{"directives/NgxEditorJSDirective.html":{}}}],["github",{"_index":1317,"title":{},"body":{"modules/PluginCodeModule.html":{},"modules/PluginEmbedModule.html":{},"modules/PluginHeaderModule.html":{},"modules/PluginImageModule.html":{},"modules/PluginInlineCodeModule.html":{},"modules/PluginLinkModule.html":{},"modules/PluginListModule.html":{},"modules/PluginMarkerModule.html":{},"modules/PluginParagraphModule.html":{},"modules/PluginQuoteModule.html":{},"modules/PluginSimpleImageModule.html":{},"modules/PluginWarningModule.html":{}}}],["good",{"_index":1452,"title":{},"body":{"changelog.html":{},"contributing.html":{}}}],["gracefully",{"_index":1528,"title":{},"body":{"contributing.html":{}}}],["granted",{"_index":1719,"title":{},"body":{"license.html":{}}}],["graph",{"_index":1772,"title":{},"body":{"modules.html":{}}}],["group",{"_index":1135,"title":{},"body":{"components/NgxTinynodesMaterialFormFieldDemoComponent.html":{}}}],["guid",{"_index":1297,"title":{},"body":{"injectables/PagesService.html":{}}}],["hammerjs",{"_index":1660,"title":{},"body":{"dependencies.html":{}}}],["handle",{"_index":1419,"title":{},"body":{"changelog.html":{}}}],["handles",{"_index":806,"title":{},"body":{"injectables/NgxEditorJSService.html":{},"index.html":{}}}],["handling",{"_index":748,"title":{},"body":{"injectables/NgxEditorJSPluginService.html":{},"changelog.html":{}}}],["happens",{"_index":813,"title":{},"body":{"injectables/NgxEditorJSService.html":{}}}],["harassing",{"_index":1610,"title":{},"body":{"contributing.html":{}}}],["harassment",{"_index":1497,"title":{},"body":{"contributing.html":{}}}],["harmful",{"_index":1587,"title":{},"body":{"contributing.html":{}}}],["haschanged",{"_index":558,"title":{},"body":{"directives/NgxEditorJSDirective.html":{},"injectables/NgxEditorJSService.html":{},"components/NgxTinynodesMaterialFormFieldDemoComponent.html":{}}}],["haschanged.blocks",{"_index":1147,"title":{},"body":{"components/NgxTinynodesMaterialFormFieldDemoComponent.html":{}}}],["hassaved",{"_index":559,"title":{},"body":{"directives/NgxEditorJSDirective.html":{},"injectables/NgxEditorJSService.html":{}}}],["hassaved(options",{"_index":851,"title":{},"body":{"injectables/NgxEditorJSService.html":{}}}],["hassavedmap",{"_index":197,"title":{},"body":{"interfaces/EditorJSClass.html":{},"interfaces/EditorJSInstanceConfig.html":{},"interfaces/InjectorApiCallOptions.html":{},"interfaces/InjectorApiCallResponse.html":{},"interfaces/InjectorMethodOption.html":{},"injectables/NgxEditorJSService.html":{},"miscellaneous/variables.html":{}}}],["header",{"_index":44,"title":{"interfaces/Header.html":{}},"body":{"interfaces/Block.html":{},"interfaces/Header.html":{},"interfaces/HeaderBlock.html":{},"interfaces/Image.html":{},"interfaces/ImageBlock.html":{},"interfaces/List.html":{},"interfaces/ListBlock.html":{},"components/NgxTinynodesMaterialFormFieldDemoComponent.html":{},"components/PageContainerComponent.html":{},"interfaces/Paragraph.html":{},"interfaces/ParagraphBlock.html":{},"modules/PluginHeaderModule.html":{},"dependencies.html":{}}}],["header.normalizedata",{"_index":1334,"title":{},"body":{"modules/PluginHeaderModule.html":{}}}],["headerblock",{"_index":49,"title":{"interfaces/HeaderBlock.html":{}},"body":{"interfaces/Block.html":{},"interfaces/Header.html":{},"interfaces/HeaderBlock.html":{},"interfaces/Image.html":{},"interfaces/ImageBlock.html":{},"interfaces/List.html":{},"interfaces/ListBlock.html":{},"interfaces/Paragraph.html":{},"interfaces/ParagraphBlock.html":{},"miscellaneous/typealiases.html":{}}}],["height",{"_index":455,"title":{},"body":{"interfaces/NgxEditorJSConfig.html":{},"directives/NgxEditorJSDirective.html":{},"interfaces/NgxEditorJSModuleConfig.html":{},"components/NgxTinynodesMaterialFormFieldDemoComponent.html":{},"components/PageContainerComponent.html":{}}}],["helper",{"_index":828,"title":{},"body":{"injectables/NgxEditorJSService.html":{}}}],["helpers",{"_index":1785,"title":{},"body":{"todo.html":{}}}],["hereby",{"_index":1718,"title":{},"body":{"license.html":{}}}],["hideable",{"_index":1663,"title":{},"body":{"dependencies.html":{}}}],["hidetoolbar",{"_index":443,"title":{},"body":{"interfaces/NgxEditorJSConfig.html":{},"directives/NgxEditorJSDirective.html":{},"interfaces/NgxEditorJSModuleConfig.html":{}}}],["hold",{"_index":454,"title":{},"body":{"interfaces/NgxEditorJSConfig.html":{},"interfaces/NgxEditorJSModuleConfig.html":{}}}],["holder",{"_index":183,"title":{},"body":{"interfaces/EditorJSClass.html":{},"interfaces/EditorJSInstanceConfig.html":{},"interfaces/InjectorApiCallOptions.html":{},"interfaces/InjectorApiCallResponse.html":{},"interfaces/InjectorMethodOption.html":{},"interfaces/NgxEditorJSConfig.html":{},"directives/NgxEditorJSDirective.html":{},"interfaces/NgxEditorJSModuleConfig.html":{},"injectables/NgxEditorJSService.html":{},"components/NgxTinynodesMaterialFormFieldDemoComponent.html":{},"components/PageContainerComponent.html":{},"miscellaneous/variables.html":{}}}],["holders",{"_index":1761,"title":{},"body":{"license.html":{}}}],["home",{"_index":482,"title":{},"body":{"components/NgxEditorJSDemoHomeComponent.html":{}}}],["home'},{'name",{"_index":504,"title":{},"body":{"components/NgxEditorJSDemoHomeComponent.html":{},"components/NgxTinynodesMatJsonOutputComponent.html":{},"components/NgxTinynodesMaterialFormFieldDemoComponent.html":{},"components/PageContainerComponent.html":{}}}],["host",{"_index":321,"title":{},"body":{"interfaces/EditorJSMaterialForm.html":{},"directives/NgxEditorJSDirective.html":{},"components/NgxTinynodesMaterialFormFieldDemoComponent.html":{},"components/PageContainerComponent.html":{}}}],["hostbinding",{"_index":231,"title":{},"body":{"interfaces/EditorJSMaterialForm.html":{}}}],["hostbinding('attr.aria",{"_index":332,"title":{},"body":{"interfaces/EditorJSMaterialForm.html":{}}}],["hostbinding('class.floating",{"_index":327,"title":{},"body":{"interfaces/EditorJSMaterialForm.html":{}}}],["hostlistener",{"_index":644,"title":{},"body":{"directives/NgxEditorJSDirective.html":{}}}],["hostlistener('click",{"_index":652,"title":{},"body":{"directives/NgxEditorJSDirective.html":{}}}],["hostlisteners",{"_index":562,"title":{},"body":{"directives/NgxEditorJSDirective.html":{}}}],["html",{"_index":499,"title":{},"body":{"components/NgxEditorJSDemoHomeComponent.html":{},"directives/NgxEditorJSDirective.html":{},"components/NgxTinynodesMatJsonOutputComponent.html":{},"components/NgxTinynodesMaterialFormFieldDemoComponent.html":{},"components/PageContainerComponent.html":{}}}],["http://contributor",{"_index":1644,"title":{},"body":{"contributing.html":{}}}],["https://angular.io/api/core/ngmodule",{"_index":775,"title":{},"body":{"injectables/NgxEditorJSPluginService.html":{}}}],["https://angular.io/api/core/ngzone",{"_index":874,"title":{},"body":{"injectables/NgxEditorJSService.html":{}}}],["https://angular.io/guide/observables",{"_index":875,"title":{},"body":{"injectables/NgxEditorJSService.html":{}}}],["https://editorjs.io/api",{"_index":787,"title":{},"body":{"injectables/NgxEditorJSPluginService.html":{},"injectables/NgxEditorJSService.html":{}}}],["https://editorjs.io/provide",{"_index":108,"title":{},"body":{"interfaces/BlockData.html":{},"interfaces/PluginConfig.html":{},"interfaces/PluginConfigMap.html":{},"interfaces/ToolSettingsMap.html":{}}}],["https://github.com/editor",{"_index":773,"title":{},"body":{"injectables/NgxEditorJSPluginService.html":{}}}],["i'll",{"_index":1447,"title":{},"body":{"changelog.html":{}}}],["i'm",{"_index":1417,"title":{},"body":{"changelog.html":{}}}],["i've",{"_index":1418,"title":{},"body":{"changelog.html":{}}}],["id",{"_index":271,"title":{},"body":{"interfaces/EditorJSMaterialForm.html":{},"interfaces/NgxEditorJSConfig.html":{},"directives/NgxEditorJSDirective.html":{},"interfaces/NgxEditorJSModuleConfig.html":{},"injectables/NgxEditorJSService.html":{},"components/NgxTinynodesMaterialFormFieldDemoComponent.html":{},"interfaces/Page.html":{},"interfaces/PageBlock.html":{},"components/PageContainerComponent.html":{},"injectables/PagesService.html":{},"interfaces/Tag.html":{},"miscellaneous/variables.html":{}}}],["identity",{"_index":1508,"title":{},"body":{"contributing.html":{}}}],["ids",{"_index":334,"title":{},"body":{"interfaces/EditorJSMaterialForm.html":{}}}],["ids.join",{"_index":338,"title":{},"body":{"interfaces/EditorJSMaterialForm.html":{}}}],["ignore",{"_index":675,"title":{},"body":{"directives/NgxEditorJSDirective.html":{}}}],["image",{"_index":50,"title":{"interfaces/Image.html":{}},"body":{"interfaces/Block.html":{},"interfaces/Header.html":{},"interfaces/HeaderBlock.html":{},"interfaces/Image.html":{},"interfaces/ImageBlock.html":{},"interfaces/List.html":{},"interfaces/ListBlock.html":{},"components/NgxTinynodesMaterialFormFieldDemoComponent.html":{},"components/PageContainerComponent.html":{},"interfaces/Paragraph.html":{},"interfaces/ParagraphBlock.html":{},"modules/PluginImageModule.html":{},"modules/PluginSimpleImageModule.html":{}}}],["image.module",{"_index":1039,"title":{},"body":{"modules/NgxEditorjsPluginsModule.html":{}}}],["image.module.ts",{"_index":1364,"title":{},"body":{"modules/PluginSimpleImageModule.html":{}}}],["image/simple",{"_index":1038,"title":{},"body":{"modules/NgxEditorjsPluginsModule.html":{},"modules/PluginSimpleImageModule.html":{}}}],["imageblock",{"_index":62,"title":{"interfaces/ImageBlock.html":{}},"body":{"interfaces/Block.html":{},"interfaces/Header.html":{},"interfaces/HeaderBlock.html":{},"interfaces/Image.html":{},"interfaces/ImageBlock.html":{},"interfaces/List.html":{},"interfaces/ListBlock.html":{},"interfaces/Paragraph.html":{},"interfaces/ParagraphBlock.html":{},"miscellaneous/typealiases.html":{}}}],["imagery",{"_index":1541,"title":{},"body":{"contributing.html":{}}}],["implementation",{"_index":260,"title":{},"body":{"interfaces/EditorJSMaterialForm.html":{},"injectables/MockNgZone.html":{}}}],["implements",{"_index":270,"title":{},"body":{"interfaces/EditorJSMaterialForm.html":{},"directives/NgxEditorJSDirective.html":{},"components/NgxTinynodesMatJsonOutputComponent.html":{},"components/NgxTinynodesMaterialFormFieldDemoComponent.html":{},"components/PageContainerComponent.html":{}}}],["implied",{"_index":1752,"title":{},"body":{"license.html":{}}}],["import",{"_index":71,"title":{},"body":{"interfaces/BlockData.html":{},"interfaces/ChangeMap.html":{},"interfaces/CreateEditorJSOptions.html":{},"interfaces/EditorJSChange.html":{},"interfaces/EditorJSClass.html":{},"interfaces/EditorJSInstanceConfig.html":{},"interfaces/EditorJSMaterialForm.html":{},"interfaces/EditorMap.html":{},"interfaces/InjectorApiCallOptions.html":{},"interfaces/InjectorApiCallResponse.html":{},"interfaces/InjectorMethodOption.html":{},"classes/MockEditorJS.html":{},"injectables/MockNgZone.html":{},"classes/MockPlugin.html":{},"interfaces/NgxEditorJSConfig.html":{},"components/NgxEditorJSDemoHomeComponent.html":{},"modules/NgxEditorJSDemoMaterialModule.html":{},"directives/NgxEditorJSDirective.html":{},"modules/NgxEditorJSModule.html":{},"interfaces/NgxEditorJSModuleConfig.html":{},"injectables/NgxEditorJSPluginService.html":{},"modules/NgxEditorJSPluginServiceModule.html":{},"injectables/NgxEditorJSService.html":{},"modules/NgxEditorjsDemoModule.html":{},"modules/NgxEditorjsPluginsModule.html":{},"modules/NgxTinynodesComponentsModule.html":{},"interfaces/NgxTinynodesMatFieldComponent.html":{},"components/NgxTinynodesMatJsonOutputComponent.html":{},"modules/NgxTinynodesMatJsonOutputModule.html":{},"modules/NgxTinynodesMatTagInputModule.html":{},"modules/NgxTinynodesMaterialFormFieldDemo.html":{},"components/NgxTinynodesMaterialFormFieldDemoComponent.html":{},"interfaces/Page.html":{},"interfaces/PageBlock.html":{},"components/PageContainerComponent.html":{},"modules/PageStoreModule.html":{},"injectables/PagesQuery.html":{},"injectables/PagesService.html":{},"interfaces/PagesState.html":{},"injectables/PagesStore.html":{},"modules/PluginCodeModule.html":{},"interfaces/PluginConfig.html":{},"interfaces/PluginConfigMap.html":{},"modules/PluginEmbedModule.html":{},"modules/PluginHeaderModule.html":{},"modules/PluginImageModule.html":{},"modules/PluginInlineCodeModule.html":{},"modules/PluginLinkModule.html":{},"modules/PluginListModule.html":{},"modules/PluginMarkerModule.html":{},"modules/PluginParagraphModule.html":{},"modules/PluginQuoteModule.html":{},"modules/PluginSimpleImageModule.html":{},"modules/PluginWarningModule.html":{},"interfaces/ReadyMap.html":{},"interfaces/SavedMap.html":{},"interfaces/Tag.html":{},"interfaces/ToolSettingsMap.html":{}}}],["import('./demos/material",{"_index":1813,"title":{},"body":{"miscellaneous/variables.html":{}}}],["imported",{"_index":1702,"title":{},"body":{"index.html":{}}}],["importing",{"_index":1022,"title":{},"body":{"modules/NgxEditorjsPluginsModule.html":{}}}],["imports",{"_index":544,"title":{},"body":{"modules/NgxEditorJSDemoMaterialModule.html":{},"modules/NgxEditorJSModule.html":{},"modules/NgxEditorjsDemoModule.html":{},"modules/NgxEditorjsPluginsModule.html":{},"modules/NgxTinynodesComponentsModule.html":{},"modules/NgxTinynodesMatJsonOutputModule.html":{},"modules/NgxTinynodesMatTagInputModule.html":{},"modules/NgxTinynodesMaterialFormFieldDemo.html":{}}}],["improved",{"_index":1407,"title":{},"body":{"changelog.html":{}}}],["improvements",{"_index":1398,"title":{},"body":{"changelog.html":{}}}],["inappropriate",{"_index":1558,"title":{},"body":{"contributing.html":{}}}],["incident",{"_index":1626,"title":{},"body":{"contributing.html":{}}}],["include",{"_index":166,"title":{},"body":{"interfaces/CreateEditorJSOptions.html":{},"injectables/NgxEditorJSPluginService.html":{},"modules/NgxEditorjsPluginsModule.html":{},"contributing.html":{}}}],["included",{"_index":1746,"title":{},"body":{"license.html":{}}}],["includelist",{"_index":769,"title":{},"body":{"injectables/NgxEditorJSPluginService.html":{}}}],["includelist.includes(key",{"_index":786,"title":{},"body":{"injectables/NgxEditorJSPluginService.html":{}}}],["includes",{"_index":1470,"title":{},"body":{"contributing.html":{}}}],["includetools",{"_index":677,"title":{},"body":{"directives/NgxEditorJSDirective.html":{}}}],["including",{"_index":1728,"title":{},"body":{"license.html":{}}}],["inclusive",{"_index":1521,"title":{},"body":{"contributing.html":{}}}],["increase",{"_index":1476,"title":{},"body":{"contributing.html":{}}}],["index",{"_index":13,"title":{"index.html":{}},"body":{"interfaces/Block.html":{},"interfaces/CreateEditorJSOptions.html":{},"interfaces/EditorJSChange.html":{},"interfaces/EditorJSClass.html":{},"interfaces/EditorJSInstanceConfig.html":{},"interfaces/Header.html":{},"interfaces/HeaderBlock.html":{},"interfaces/Image.html":{},"interfaces/ImageBlock.html":{},"interfaces/InjectorApiCallOptions.html":{},"interfaces/InjectorApiCallResponse.html":{},"interfaces/InjectorMethodOption.html":{},"interfaces/List.html":{},"interfaces/ListBlock.html":{},"classes/MockEditorJS.html":{},"injectables/MockNgZone.html":{},"classes/MockPlugin.html":{},"interfaces/NgxEditorJSConfig.html":{},"directives/NgxEditorJSDirective.html":{},"interfaces/NgxEditorJSModuleConfig.html":{},"injectables/NgxEditorJSPluginService.html":{},"injectables/NgxEditorJSService.html":{},"components/NgxTinynodesMatJsonOutputComponent.html":{},"components/NgxTinynodesMaterialFormFieldDemoComponent.html":{},"interfaces/Page.html":{},"interfaces/PageBlock.html":{},"components/PageContainerComponent.html":{},"injectables/PagesService.html":{},"interfaces/Paragraph.html":{},"interfaces/ParagraphBlock.html":{},"interfaces/PluginConfig.html":{},"interfaces/Tag.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["indexable",{"_index":16,"title":{},"body":{"interfaces/Block.html":{},"interfaces/BlockData.html":{},"interfaces/ChangeMap.html":{},"interfaces/EditorMap.html":{},"interfaces/PluginConfigMap.html":{},"interfaces/ReadyMap.html":{},"interfaces/SavedMap.html":{},"interfaces/ToolSettingsMap.html":{}}}],["individual",{"_index":1024,"title":{},"body":{"modules/NgxEditorjsPluginsModule.html":{},"contributing.html":{}}}],["info",{"_index":3,"title":{},"body":{"interfaces/Block.html":{},"interfaces/BlockData.html":{},"interfaces/ChangeMap.html":{},"interfaces/CreateEditorJSOptions.html":{},"interfaces/EditorJSChange.html":{},"interfaces/EditorJSClass.html":{},"interfaces/EditorJSInstanceConfig.html":{},"interfaces/EditorJSMaterialForm.html":{},"interfaces/EditorMap.html":{},"interfaces/Header.html":{},"interfaces/HeaderBlock.html":{},"interfaces/Image.html":{},"interfaces/ImageBlock.html":{},"interfaces/InjectorApiCallOptions.html":{},"interfaces/InjectorApiCallResponse.html":{},"interfaces/InjectorMethodOption.html":{},"interfaces/List.html":{},"interfaces/ListBlock.html":{},"classes/MockEditorJS.html":{},"injectables/MockNgZone.html":{},"classes/MockPlugin.html":{},"interfaces/NgxEditorJSConfig.html":{},"components/NgxEditorJSDemoHomeComponent.html":{},"modules/NgxEditorJSDemoMaterialModule.html":{},"directives/NgxEditorJSDirective.html":{},"modules/NgxEditorJSModule.html":{},"interfaces/NgxEditorJSModuleConfig.html":{},"injectables/NgxEditorJSPluginService.html":{},"modules/NgxEditorJSPluginServiceModule.html":{},"injectables/NgxEditorJSService.html":{},"modules/NgxEditorjsDemoModule.html":{},"modules/NgxEditorjsPluginsModule.html":{},"modules/NgxTinynodesComponentsModule.html":{},"interfaces/NgxTinynodesMatFieldComponent.html":{},"components/NgxTinynodesMatJsonOutputComponent.html":{},"modules/NgxTinynodesMatJsonOutputModule.html":{},"modules/NgxTinynodesMatTagInputModule.html":{},"modules/NgxTinynodesMaterialFormFieldDemo.html":{},"components/NgxTinynodesMaterialFormFieldDemoComponent.html":{},"interfaces/Page.html":{},"interfaces/PageBlock.html":{},"components/PageContainerComponent.html":{},"modules/PageStoreModule.html":{},"injectables/PagesQuery.html":{},"injectables/PagesService.html":{},"interfaces/PagesState.html":{},"injectables/PagesStore.html":{},"interfaces/Paragraph.html":{},"interfaces/ParagraphBlock.html":{},"modules/PluginCodeModule.html":{},"interfaces/PluginConfig.html":{},"interfaces/PluginConfigMap.html":{},"modules/PluginEmbedModule.html":{},"modules/PluginHeaderModule.html":{},"modules/PluginImageModule.html":{},"modules/PluginInlineCodeModule.html":{},"modules/PluginLinkModule.html":{},"modules/PluginListModule.html":{},"modules/PluginMarkerModule.html":{},"modules/PluginParagraphModule.html":{},"modules/PluginQuoteModule.html":{},"modules/PluginSimpleImageModule.html":{},"modules/PluginWarningModule.html":{},"interfaces/ReadyMap.html":{},"interfaces/SavedMap.html":{},"interfaces/Tag.html":{},"interfaces/ToolSettingsMap.html":{}}}],["information",{"_index":178,"title":{},"body":{"interfaces/EditorJSClass.html":{},"interfaces/EditorJSInstanceConfig.html":{},"interfaces/InjectorApiCallOptions.html":{},"interfaces/InjectorApiCallResponse.html":{},"interfaces/InjectorMethodOption.html":{},"injectables/NgxEditorJSService.html":{},"contributing.html":{},"index.html":{}}}],["init",{"_index":1124,"title":{},"body":{"components/NgxTinynodesMaterialFormFieldDemoComponent.html":{},"components/PageContainerComponent.html":{}}}],["initial",{"_index":122,"title":{},"body":{"interfaces/BlockData.html":{},"interfaces/NgxEditorJSConfig.html":{},"directives/NgxEditorJSDirective.html":{},"interfaces/NgxEditorJSModuleConfig.html":{},"components/NgxTinynodesMaterialFormFieldDemoComponent.html":{},"components/PageContainerComponent.html":{},"interfaces/PluginConfig.html":{},"interfaces/PluginConfigMap.html":{},"interfaces/ToolSettingsMap.html":{},"miscellaneous/variables.html":{}}}],["initialblock",{"_index":444,"title":{},"body":{"interfaces/NgxEditorJSConfig.html":{},"directives/NgxEditorJSDirective.html":{},"interfaces/NgxEditorJSModuleConfig.html":{}}}],["initialized",{"_index":573,"title":{},"body":{"directives/NgxEditorJSDirective.html":{},"injectables/NgxEditorJSPluginService.html":{},"injectables/NgxEditorJSService.html":{}}}],["inject",{"_index":750,"title":{},"body":{"injectables/NgxEditorJSPluginService.html":{},"injectables/NgxEditorJSService.html":{}}}],["inject(editorjsinstance",{"_index":878,"title":{},"body":{"injectables/NgxEditorJSService.html":{}}}],["inject(ngx_editorjs_config",{"_index":879,"title":{},"body":{"injectables/NgxEditorJSService.html":{}}}],["injectable",{"_index":413,"title":{"injectables/MockNgZone.html":{},"injectables/NgxEditorJSPluginService.html":{},"injectables/NgxEditorJSService.html":{},"injectables/PagesQuery.html":{},"injectables/PagesService.html":{},"injectables/PagesStore.html":{}},"body":{"injectables/MockNgZone.html":{},"injectables/NgxEditorJSPluginService.html":{},"injectables/NgxEditorJSService.html":{},"injectables/PagesQuery.html":{},"injectables/PagesService.html":{},"interfaces/PagesState.html":{},"injectables/PagesStore.html":{}}}],["injectables",{"_index":415,"title":{},"body":{"injectables/MockNgZone.html":{},"injectables/NgxEditorJSPluginService.html":{},"injectables/NgxEditorJSService.html":{},"injectables/PagesQuery.html":{},"injectables/PagesService.html":{},"injectables/PagesStore.html":{},"overview.html":{}}}],["injected",{"_index":169,"title":{},"body":{"interfaces/EditorJSClass.html":{},"interfaces/EditorJSInstanceConfig.html":{},"interfaces/InjectorApiCallOptions.html":{},"interfaces/InjectorApiCallResponse.html":{},"interfaces/InjectorMethodOption.html":{},"interfaces/NgxEditorJSConfig.html":{},"interfaces/NgxEditorJSModuleConfig.html":{},"injectables/NgxEditorJSPluginService.html":{},"injectables/NgxEditorJSService.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["injecting",{"_index":466,"title":{},"body":{"interfaces/NgxEditorJSConfig.html":{},"interfaces/NgxEditorJSModuleConfig.html":{},"changelog.html":{},"miscellaneous/variables.html":{}}}],["injection",{"_index":120,"title":{},"body":{"interfaces/BlockData.html":{},"interfaces/EditorJSClass.html":{},"interfaces/EditorJSInstanceConfig.html":{},"interfaces/InjectorApiCallOptions.html":{},"interfaces/InjectorApiCallResponse.html":{},"interfaces/InjectorMethodOption.html":{},"interfaces/NgxEditorJSConfig.html":{},"interfaces/NgxEditorJSModuleConfig.html":{},"interfaces/PluginConfig.html":{},"interfaces/PluginConfigMap.html":{},"interfaces/ToolSettingsMap.html":{},"miscellaneous/variables.html":{}}}],["injectiontoken",{"_index":72,"title":{},"body":{"interfaces/BlockData.html":{},"interfaces/EditorJSClass.html":{},"interfaces/EditorJSInstanceConfig.html":{},"interfaces/InjectorApiCallOptions.html":{},"interfaces/InjectorApiCallResponse.html":{},"interfaces/InjectorMethodOption.html":{},"interfaces/NgxEditorJSConfig.html":{},"interfaces/NgxEditorJSModuleConfig.html":{},"interfaces/PluginConfig.html":{},"interfaces/PluginConfigMap.html":{},"interfaces/ToolSettingsMap.html":{}}}],["injectiontoken('editior_js_instance",{"_index":472,"title":{},"body":{"interfaces/NgxEditorJSConfig.html":{},"interfaces/NgxEditorJSModuleConfig.html":{},"miscellaneous/variables.html":{}}}],["injectiontoken('editor_js_tool_injector",{"_index":128,"title":{},"body":{"interfaces/BlockData.html":{},"interfaces/PluginConfig.html":{},"interfaces/PluginConfigMap.html":{},"interfaces/ToolSettingsMap.html":{},"miscellaneous/variables.html":{}}}],["injectiontoken('editorjs_module_import",{"_index":199,"title":{},"body":{"interfaces/EditorJSClass.html":{},"interfaces/EditorJSInstanceConfig.html":{},"interfaces/InjectorApiCallOptions.html":{},"interfaces/InjectorApiCallResponse.html":{},"interfaces/InjectorMethodOption.html":{},"miscellaneous/variables.html":{}}}],["injectiontoken('editorjsinstance",{"_index":202,"title":{},"body":{"interfaces/EditorJSClass.html":{},"interfaces/EditorJSInstanceConfig.html":{},"interfaces/InjectorApiCallOptions.html":{},"interfaces/InjectorApiCallResponse.html":{},"interfaces/InjectorMethodOption.html":{},"miscellaneous/variables.html":{}}}],["injectiontoken('for_root_options_token",{"_index":469,"title":{},"body":{"interfaces/NgxEditorJSConfig.html":{},"interfaces/NgxEditorJSModuleConfig.html":{},"miscellaneous/variables.html":{}}}],["injectiontoken('ngx_editorjs_config",{"_index":465,"title":{},"body":{"interfaces/NgxEditorJSConfig.html":{},"interfaces/NgxEditorJSModuleConfig.html":{},"miscellaneous/variables.html":{}}}],["injectiontoken('plugin_config",{"_index":130,"title":{},"body":{"interfaces/BlockData.html":{},"interfaces/PluginConfig.html":{},"interfaces/PluginConfigMap.html":{},"interfaces/ToolSettingsMap.html":{},"miscellaneous/variables.html":{}}}],["injectiontoken('pluginclasses",{"_index":135,"title":{},"body":{"interfaces/BlockData.html":{},"interfaces/PluginConfig.html":{},"interfaces/PluginConfigMap.html":{},"interfaces/ToolSettingsMap.html":{},"miscellaneous/variables.html":{}}}],["injector",{"_index":200,"title":{},"body":{"interfaces/EditorJSClass.html":{},"interfaces/EditorJSInstanceConfig.html":{},"interfaces/InjectorApiCallOptions.html":{},"interfaces/InjectorApiCallResponse.html":{},"interfaces/InjectorMethodOption.html":{},"changelog.html":{},"miscellaneous/variables.html":{}}}],["injectorapicalloptions",{"_index":209,"title":{"interfaces/InjectorApiCallOptions.html":{}},"body":{"interfaces/EditorJSClass.html":{},"interfaces/EditorJSInstanceConfig.html":{},"interfaces/InjectorApiCallOptions.html":{},"interfaces/InjectorApiCallResponse.html":{},"interfaces/InjectorMethodOption.html":{},"injectables/NgxEditorJSService.html":{}}}],["injectorapicallresponse",{"_index":212,"title":{"interfaces/InjectorApiCallResponse.html":{}},"body":{"interfaces/EditorJSClass.html":{},"interfaces/EditorJSInstanceConfig.html":{},"interfaces/InjectorApiCallOptions.html":{},"interfaces/InjectorApiCallResponse.html":{},"interfaces/InjectorMethodOption.html":{},"injectables/NgxEditorJSService.html":{}}}],["injectormethodoption",{"_index":203,"title":{"interfaces/InjectorMethodOption.html":{}},"body":{"interfaces/EditorJSClass.html":{},"interfaces/EditorJSInstanceConfig.html":{},"interfaces/InjectorApiCallOptions.html":{},"interfaces/InjectorApiCallResponse.html":{},"interfaces/InjectorMethodOption.html":{},"injectables/NgxEditorJSService.html":{}}}],["inline",{"_index":81,"title":{},"body":{"interfaces/BlockData.html":{},"injectables/NgxEditorJSPluginService.html":{},"modules/NgxEditorjsPluginsModule.html":{},"interfaces/PluginConfig.html":{},"interfaces/PluginConfigMap.html":{},"modules/PluginInlineCodeModule.html":{},"interfaces/ToolSettingsMap.html":{},"miscellaneous/enumerations.html":{}}}],["inlinecode",{"_index":1348,"title":{},"body":{"modules/PluginInlineCodeModule.html":{}}}],["inlinetoolbar",{"_index":115,"title":{},"body":{"interfaces/BlockData.html":{},"interfaces/PluginConfig.html":{},"interfaces/PluginConfigMap.html":{},"modules/PluginEmbedModule.html":{},"modules/PluginQuoteModule.html":{},"modules/PluginWarningModule.html":{},"interfaces/ToolSettingsMap.html":{}}}],["input",{"_index":232,"title":{},"body":{"interfaces/EditorJSMaterialForm.html":{},"directives/NgxEditorJSDirective.html":{},"components/NgxTinynodesMatJsonOutputComponent.html":{},"components/NgxTinynodesMaterialFormFieldDemoComponent.html":{},"todo.html":{}}}],["input'},{'name",{"_index":514,"title":{},"body":{"components/NgxEditorJSDemoHomeComponent.html":{},"components/NgxTinynodesMatJsonOutputComponent.html":{},"components/NgxTinynodesMaterialFormFieldDemoComponent.html":{},"components/PageContainerComponent.html":{}}}],["input('disabled",{"_index":308,"title":{},"body":{"interfaces/EditorJSMaterialForm.html":{}}}],["input('focused",{"_index":295,"title":{},"body":{"interfaces/EditorJSMaterialForm.html":{}}}],["input('placeholder",{"_index":290,"title":{},"body":{"interfaces/EditorJSMaterialForm.html":{}}}],["input('required",{"_index":302,"title":{},"body":{"interfaces/EditorJSMaterialForm.html":{}}}],["input('value",{"_index":283,"title":{},"body":{"interfaces/EditorJSMaterialForm.html":{}}}],["input.component",{"_index":1084,"title":{},"body":{"modules/NgxTinynodesMatTagInputModule.html":{}}}],["input.component.ts",{"_index":1803,"title":{},"body":{"miscellaneous/variables.html":{}}}],["input.module",{"_index":1053,"title":{},"body":{"modules/NgxTinynodesComponentsModule.html":{}}}],["input.module.ts",{"_index":1083,"title":{},"body":{"modules/NgxTinynodesMatTagInputModule.html":{}}}],["input/mat",{"_index":1052,"title":{},"body":{"modules/NgxTinynodesComponentsModule.html":{},"modules/NgxTinynodesMatTagInputModule.html":{},"miscellaneous/variables.html":{}}}],["inputconfig",{"_index":1683,"title":{},"body":{"miscellaneous/functions.html":{}}}],["inputs",{"_index":556,"title":{},"body":{"directives/NgxEditorJSDirective.html":{},"components/NgxTinynodesMatJsonOutputComponent.html":{},"components/NgxTinynodesMaterialFormFieldDemoComponent.html":{}}}],["inside",{"_index":364,"title":{},"body":{"interfaces/EditorJSMaterialForm.html":{},"directives/NgxEditorJSDirective.html":{},"index.html":{}}}],["install",{"_index":1466,"title":{},"body":{"contributing.html":{},"dependencies.html":{}}}],["instance",{"_index":142,"title":{},"body":{"interfaces/ChangeMap.html":{},"interfaces/EditorJSChange.html":{},"interfaces/EditorJSClass.html":{},"interfaces/EditorJSInstanceConfig.html":{},"interfaces/EditorJSMaterialForm.html":{},"interfaces/EditorMap.html":{},"interfaces/InjectorApiCallOptions.html":{},"interfaces/InjectorApiCallResponse.html":{},"interfaces/InjectorMethodOption.html":{},"interfaces/NgxEditorJSConfig.html":{},"components/NgxEditorJSDemoHomeComponent.html":{},"directives/NgxEditorJSDirective.html":{},"modules/NgxEditorJSModule.html":{},"interfaces/NgxEditorJSModuleConfig.html":{},"injectables/NgxEditorJSService.html":{},"components/NgxTinynodesMatJsonOutputComponent.html":{},"components/NgxTinynodesMaterialFormFieldDemoComponent.html":{},"components/PageContainerComponent.html":{},"interfaces/ReadyMap.html":{},"interfaces/SavedMap.html":{},"changelog.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["instances",{"_index":147,"title":{},"body":{"interfaces/ChangeMap.html":{},"interfaces/EditorJSChange.html":{},"interfaces/EditorMap.html":{},"injectables/NgxEditorJSService.html":{},"interfaces/ReadyMap.html":{},"interfaces/SavedMap.html":{},"changelog.html":{},"contributing.html":{},"index.html":{}}}],["insulting/derogatory",{"_index":1546,"title":{},"body":{"contributing.html":{}}}],["interact",{"_index":1699,"title":{},"body":{"index.html":{}}}],["interactions",{"_index":1464,"title":{},"body":{"contributing.html":{}}}],["interest",{"_index":1490,"title":{},"body":{"contributing.html":{}}}],["interface",{"_index":0,"title":{"interfaces/Block.html":{},"interfaces/BlockData.html":{},"interfaces/ChangeMap.html":{},"interfaces/CreateEditorJSOptions.html":{},"interfaces/EditorJSChange.html":{},"interfaces/EditorJSClass.html":{},"interfaces/EditorJSInstanceConfig.html":{},"interfaces/EditorJSMaterialForm.html":{},"interfaces/EditorMap.html":{},"interfaces/Header.html":{},"interfaces/HeaderBlock.html":{},"interfaces/Image.html":{},"interfaces/ImageBlock.html":{},"interfaces/InjectorApiCallOptions.html":{},"interfaces/InjectorApiCallResponse.html":{},"interfaces/InjectorMethodOption.html":{},"interfaces/List.html":{},"interfaces/ListBlock.html":{},"interfaces/NgxEditorJSConfig.html":{},"interfaces/NgxEditorJSModuleConfig.html":{},"interfaces/NgxTinynodesMatFieldComponent.html":{},"interfaces/Page.html":{},"interfaces/PageBlock.html":{},"interfaces/PagesState.html":{},"interfaces/Paragraph.html":{},"interfaces/ParagraphBlock.html":{},"interfaces/PluginConfig.html":{},"interfaces/PluginConfigMap.html":{},"interfaces/ReadyMap.html":{},"interfaces/SavedMap.html":{},"interfaces/Tag.html":{},"interfaces/ToolSettingsMap.html":{}},"body":{"interfaces/Block.html":{},"interfaces/BlockData.html":{},"interfaces/ChangeMap.html":{},"interfaces/CreateEditorJSOptions.html":{},"interfaces/EditorJSChange.html":{},"interfaces/EditorJSClass.html":{},"interfaces/EditorJSInstanceConfig.html":{},"interfaces/EditorJSMaterialForm.html":{},"interfaces/EditorMap.html":{},"interfaces/Header.html":{},"interfaces/HeaderBlock.html":{},"interfaces/Image.html":{},"interfaces/ImageBlock.html":{},"interfaces/InjectorApiCallOptions.html":{},"interfaces/InjectorApiCallResponse.html":{},"interfaces/InjectorMethodOption.html":{},"interfaces/List.html":{},"interfaces/ListBlock.html":{},"interfaces/NgxEditorJSConfig.html":{},"interfaces/NgxEditorJSModuleConfig.html":{},"interfaces/NgxTinynodesMatFieldComponent.html":{},"interfaces/Page.html":{},"interfaces/PageBlock.html":{},"interfaces/PagesState.html":{},"injectables/PagesStore.html":{},"interfaces/Paragraph.html":{},"interfaces/ParagraphBlock.html":{},"interfaces/PluginConfig.html":{},"interfaces/PluginConfigMap.html":{},"interfaces/ReadyMap.html":{},"interfaces/SavedMap.html":{},"interfaces/Tag.html":{},"interfaces/ToolSettingsMap.html":{},"changelog.html":{},"contributing.html":{},"index.html":{}}}],["interfaces",{"_index":2,"title":{},"body":{"interfaces/Block.html":{},"interfaces/BlockData.html":{},"interfaces/ChangeMap.html":{},"interfaces/CreateEditorJSOptions.html":{},"interfaces/EditorJSChange.html":{},"interfaces/EditorJSClass.html":{},"interfaces/EditorJSInstanceConfig.html":{},"interfaces/EditorJSMaterialForm.html":{},"interfaces/EditorMap.html":{},"interfaces/Header.html":{},"interfaces/HeaderBlock.html":{},"interfaces/Image.html":{},"interfaces/ImageBlock.html":{},"interfaces/InjectorApiCallOptions.html":{},"interfaces/InjectorApiCallResponse.html":{},"interfaces/InjectorMethodOption.html":{},"interfaces/List.html":{},"interfaces/ListBlock.html":{},"interfaces/NgxEditorJSConfig.html":{},"interfaces/NgxEditorJSModuleConfig.html":{},"interfaces/NgxTinynodesMatFieldComponent.html":{},"interfaces/Page.html":{},"interfaces/PageBlock.html":{},"interfaces/PagesState.html":{},"interfaces/Paragraph.html":{},"interfaces/ParagraphBlock.html":{},"interfaces/PluginConfig.html":{},"interfaces/PluginConfigMap.html":{},"interfaces/ReadyMap.html":{},"interfaces/SavedMap.html":{},"interfaces/Tag.html":{},"interfaces/ToolSettingsMap.html":{},"overview.html":{}}}],["interfaces/pluginconfig.html",{"_index":776,"title":{},"body":{"injectables/NgxEditorJSPluginService.html":{}}}],["internal",{"_index":191,"title":{},"body":{"interfaces/EditorJSClass.html":{},"interfaces/EditorJSInstanceConfig.html":{},"interfaces/EditorJSMaterialForm.html":{},"interfaces/InjectorApiCallOptions.html":{},"interfaces/InjectorApiCallResponse.html":{},"interfaces/InjectorMethodOption.html":{},"interfaces/NgxEditorJSConfig.html":{},"interfaces/NgxEditorJSModuleConfig.html":{},"injectables/NgxEditorJSService.html":{},"components/NgxTinynodesMaterialFormFieldDemoComponent.html":{},"components/PageContainerComponent.html":{},"modules/PageStoreModule.html":{},"miscellaneous/variables.html":{}}}],["internally",{"_index":1394,"title":{},"body":{"changelog.html":{}}}],["investigated",{"_index":1617,"title":{},"body":{"contributing.html":{}}}],["isfocused",{"_index":560,"title":{},"body":{"directives/NgxEditorJSDirective.html":{}}}],["isready",{"_index":387,"title":{},"body":{"classes/MockEditorJS.html":{},"classes/MockPlugin.html":{},"directives/NgxEditorJSDirective.html":{},"injectables/NgxEditorJSService.html":{}}}],["isready(options",{"_index":853,"title":{},"body":{"injectables/NgxEditorJSService.html":{}}}],["isreadymap",{"_index":196,"title":{},"body":{"interfaces/EditorJSClass.html":{},"interfaces/EditorJSInstanceConfig.html":{},"interfaces/InjectorApiCallOptions.html":{},"interfaces/InjectorApiCallResponse.html":{},"interfaces/InjectorMethodOption.html":{},"injectables/NgxEditorJSService.html":{},"miscellaneous/variables.html":{}}}],["issue",{"_index":1458,"title":{},"body":{"contributing.html":{}}}],["issues",{"_index":1435,"title":{},"body":{"changelog.html":{},"contributing.html":{}}}],["istouched",{"_index":561,"title":{},"body":{"directives/NgxEditorJSDirective.html":{}}}],["it's",{"_index":624,"title":{},"body":{"directives/NgxEditorJSDirective.html":{},"injectables/NgxEditorJSPluginService.html":{},"injectables/NgxEditorJSService.html":{}}}],["items",{"_index":36,"title":{},"body":{"interfaces/Block.html":{},"interfaces/Header.html":{},"interfaces/HeaderBlock.html":{},"interfaces/Image.html":{},"interfaces/ImageBlock.html":{},"interfaces/List.html":{},"interfaces/ListBlock.html":{},"interfaces/Paragraph.html":{},"interfaces/ParagraphBlock.html":{}}}],["js",{"_index":774,"title":{},"body":{"injectables/NgxEditorJSPluginService.html":{},"dependencies.html":{},"miscellaneous/variables.html":{}}}],["js/code",{"_index":1322,"title":{},"body":{"modules/PluginCodeModule.html":{}}}],["js/header",{"_index":1342,"title":{},"body":{"modules/PluginHeaderModule.html":{}}}],["js/image",{"_index":1345,"title":{},"body":{"modules/PluginImageModule.html":{},"modules/PluginLinkModule.html":{},"modules/PluginListModule.html":{},"modules/PluginSimpleImageModule.html":{}}}],["js/paragraph",{"_index":1327,"title":{},"body":{"modules/PluginEmbedModule.html":{},"modules/PluginInlineCodeModule.html":{},"modules/PluginMarkerModule.html":{},"modules/PluginParagraphModule.html":{},"modules/PluginQuoteModule.html":{},"modules/PluginWarningModule.html":{}}}],["json",{"_index":510,"title":{},"body":{"components/NgxEditorJSDemoHomeComponent.html":{},"modules/NgxEditorjsDemoModule.html":{},"modules/NgxTinynodesComponentsModule.html":{},"components/NgxTinynodesMatJsonOutputComponent.html":{},"modules/NgxTinynodesMatJsonOutputModule.html":{},"modules/NgxTinynodesMaterialFormFieldDemo.html":{},"components/NgxTinynodesMaterialFormFieldDemoComponent.html":{},"components/PageContainerComponent.html":{},"dependencies.html":{}}}],["json.stringify(blocks",{"_index":1243,"title":{},"body":{"components/PageContainerComponent.html":{}}}],["json.stringify(changes.blocks.currentvalue",{"_index":670,"title":{},"body":{"directives/NgxEditorJSDirective.html":{}}}],["json.stringify(changes.blocks.previousvalue",{"_index":669,"title":{},"body":{"directives/NgxEditorJSDirective.html":{}}}],["key",{"_index":17,"title":{},"body":{"interfaces/Block.html":{},"interfaces/BlockData.html":{},"interfaces/ChangeMap.html":{},"interfaces/EditorJSChange.html":{},"interfaces/EditorMap.html":{},"interfaces/Header.html":{},"interfaces/HeaderBlock.html":{},"interfaces/Image.html":{},"interfaces/ImageBlock.html":{},"interfaces/List.html":{},"interfaces/ListBlock.html":{},"injectables/NgxEditorJSPluginService.html":{},"interfaces/Page.html":{},"interfaces/PageBlock.html":{},"interfaces/Paragraph.html":{},"interfaces/ParagraphBlock.html":{},"modules/PluginCodeModule.html":{},"interfaces/PluginConfig.html":{},"interfaces/PluginConfigMap.html":{},"modules/PluginEmbedModule.html":{},"modules/PluginHeaderModule.html":{},"modules/PluginImageModule.html":{},"modules/PluginInlineCodeModule.html":{},"modules/PluginLinkModule.html":{},"modules/PluginListModule.html":{},"modules/PluginMarkerModule.html":{},"modules/PluginParagraphModule.html":{},"modules/PluginQuoteModule.html":{},"modules/PluginSimpleImageModule.html":{},"modules/PluginWarningModule.html":{},"interfaces/ReadyMap.html":{},"interfaces/SavedMap.html":{},"interfaces/Tag.html":{},"interfaces/ToolSettingsMap.html":{}}}],["keys",{"_index":592,"title":{},"body":{"directives/NgxEditorJSDirective.html":{},"miscellaneous/functions.html":{}}}],["kind",{"_index":1750,"title":{},"body":{"license.html":{}}}],["label",{"_index":102,"title":{},"body":{"interfaces/BlockData.html":{},"interfaces/EditorJSMaterialForm.html":{},"interfaces/PluginConfig.html":{},"interfaces/PluginConfigMap.html":{},"interfaces/ToolSettingsMap.html":{}}}],["language",{"_index":1522,"title":{},"body":{"contributing.html":{}}}],["last",{"_index":140,"title":{},"body":{"interfaces/ChangeMap.html":{},"interfaces/EditorJSChange.html":{},"interfaces/EditorMap.html":{},"interfaces/NgxEditorJSConfig.html":{},"directives/NgxEditorJSDirective.html":{},"interfaces/NgxEditorJSModuleConfig.html":{},"components/PageContainerComponent.html":{},"interfaces/ReadyMap.html":{},"interfaces/SavedMap.html":{}}}],["lastchange",{"_index":688,"title":{},"body":{"directives/NgxEditorJSDirective.html":{},"injectables/NgxEditorJSService.html":{},"components/NgxTinynodesMaterialFormFieldDemoComponent.html":{}}}],["lastchange(options",{"_index":855,"title":{},"body":{"injectables/NgxEditorJSService.html":{}}}],["lastchangemap",{"_index":193,"title":{},"body":{"interfaces/EditorJSClass.html":{},"interfaces/EditorJSInstanceConfig.html":{},"interfaces/InjectorApiCallOptions.html":{},"interfaces/InjectorApiCallResponse.html":{},"interfaces/InjectorMethodOption.html":{},"injectables/NgxEditorJSService.html":{},"miscellaneous/variables.html":{}}}],["layer",{"_index":1468,"title":{},"body":{"contributing.html":{}}}],["layout",{"_index":1652,"title":{},"body":{"dependencies.html":{}}}],["leadership",{"_index":1639,"title":{},"body":{"contributing.html":{}}}],["legend",{"_index":498,"title":{},"body":{"components/NgxEditorJSDemoHomeComponent.html":{},"modules/NgxEditorJSModule.html":{},"modules/NgxEditorJSPluginServiceModule.html":{},"modules/NgxEditorjsDemoModule.html":{},"modules/NgxEditorjsPluginsModule.html":{},"modules/NgxTinynodesComponentsModule.html":{},"components/NgxTinynodesMatJsonOutputComponent.html":{},"modules/NgxTinynodesMatJsonOutputModule.html":{},"modules/NgxTinynodesMatTagInputModule.html":{},"modules/NgxTinynodesMaterialFormFieldDemo.html":{},"components/NgxTinynodesMaterialFormFieldDemoComponent.html":{},"components/PageContainerComponent.html":{},"modules/PageStoreModule.html":{},"overview.html":{}}}],["level",{"_index":45,"title":{},"body":{"interfaces/Block.html":{},"interfaces/Header.html":{},"interfaces/HeaderBlock.html":{},"interfaces/Image.html":{},"interfaces/ImageBlock.html":{},"interfaces/List.html":{},"interfaces/ListBlock.html":{},"interfaces/Paragraph.html":{},"interfaces/ParagraphBlock.html":{},"changelog.html":{},"contributing.html":{}}}],["liability",{"_index":1765,"title":{},"body":{"license.html":{}}}],["liable",{"_index":1762,"title":{},"body":{"license.html":{}}}],["lib/types/config",{"_index":398,"title":{},"body":{"classes/MockEditorJS.html":{},"classes/MockPlugin.html":{}}}],["libraries",{"_index":1379,"title":{},"body":{"changelog.html":{},"index.html":{}}}],["library",{"_index":1381,"title":{},"body":{"changelog.html":{},"index.html":{},"todo.html":{}}}],["libs/.../blocks.ts",{"_index":1791,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["libs/.../config.ts",{"_index":1795,"title":{},"body":{"miscellaneous/variables.html":{}}}],["libs/.../editor",{"_index":1675,"title":{},"body":{"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["libs/.../editorjs",{"_index":1798,"title":{},"body":{"miscellaneous/variables.html":{}}}],["libs/.../editorjs.component.ts",{"_index":1797,"title":{},"body":{"miscellaneous/variables.html":{}}}],["libs/.../injector.ts",{"_index":1799,"title":{},"body":{"miscellaneous/variables.html":{}}}],["libs/.../mat",{"_index":1802,"title":{},"body":{"miscellaneous/variables.html":{}}}],["libs/.../module",{"_index":1678,"title":{},"body":{"miscellaneous/functions.html":{}}}],["libs/.../ngx",{"_index":1677,"title":{},"body":{"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["libs/.../plugin.ts",{"_index":1679,"title":{},"body":{"miscellaneous/functions.html":{}}}],["libs/.../plugins.ts",{"_index":1673,"title":{},"body":{"miscellaneous/enumerations.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["libs/.../test.ts",{"_index":1793,"title":{},"body":{"miscellaneous/variables.html":{}}}],["libs/ngx",{"_index":6,"title":{},"body":{"interfaces/Block.html":{},"interfaces/BlockData.html":{},"interfaces/ChangeMap.html":{},"interfaces/CreateEditorJSOptions.html":{},"interfaces/EditorJSChange.html":{},"interfaces/EditorJSClass.html":{},"interfaces/EditorJSInstanceConfig.html":{},"interfaces/EditorJSMaterialForm.html":{},"interfaces/EditorMap.html":{},"interfaces/Header.html":{},"interfaces/HeaderBlock.html":{},"interfaces/Image.html":{},"interfaces/ImageBlock.html":{},"interfaces/InjectorApiCallOptions.html":{},"interfaces/InjectorApiCallResponse.html":{},"interfaces/InjectorMethodOption.html":{},"interfaces/List.html":{},"interfaces/ListBlock.html":{},"classes/MockEditorJS.html":{},"injectables/MockNgZone.html":{},"classes/MockPlugin.html":{},"interfaces/NgxEditorJSConfig.html":{},"components/NgxEditorJSDemoHomeComponent.html":{},"modules/NgxEditorJSDemoMaterialModule.html":{},"directives/NgxEditorJSDirective.html":{},"modules/NgxEditorJSModule.html":{},"interfaces/NgxEditorJSModuleConfig.html":{},"injectables/NgxEditorJSPluginService.html":{},"modules/NgxEditorJSPluginServiceModule.html":{},"injectables/NgxEditorJSService.html":{},"modules/NgxEditorjsDemoModule.html":{},"modules/NgxEditorjsPluginsModule.html":{},"modules/NgxTinynodesComponentsModule.html":{},"interfaces/NgxTinynodesMatFieldComponent.html":{},"components/NgxTinynodesMatJsonOutputComponent.html":{},"modules/NgxTinynodesMatJsonOutputModule.html":{},"modules/NgxTinynodesMatTagInputModule.html":{},"modules/NgxTinynodesMaterialFormFieldDemo.html":{},"components/NgxTinynodesMaterialFormFieldDemoComponent.html":{},"interfaces/Page.html":{},"interfaces/PageBlock.html":{},"components/PageContainerComponent.html":{},"modules/PageStoreModule.html":{},"injectables/PagesQuery.html":{},"injectables/PagesService.html":{},"interfaces/PagesState.html":{},"injectables/PagesStore.html":{},"interfaces/Paragraph.html":{},"interfaces/ParagraphBlock.html":{},"modules/PluginCodeModule.html":{},"interfaces/PluginConfig.html":{},"interfaces/PluginConfigMap.html":{},"modules/PluginEmbedModule.html":{},"modules/PluginHeaderModule.html":{},"modules/PluginImageModule.html":{},"modules/PluginInlineCodeModule.html":{},"modules/PluginLinkModule.html":{},"modules/PluginListModule.html":{},"modules/PluginMarkerModule.html":{},"modules/PluginParagraphModule.html":{},"modules/PluginQuoteModule.html":{},"modules/PluginSimpleImageModule.html":{},"modules/PluginWarningModule.html":{},"interfaces/ReadyMap.html":{},"interfaces/SavedMap.html":{},"interfaces/Tag.html":{},"interfaces/ToolSettingsMap.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["licence",{"_index":1716,"title":{},"body":{"license.html":{}}}],["license",{"_index":1713,"title":{"license.html":{}},"body":{}}],["life",{"_index":365,"title":{},"body":{"interfaces/EditorJSMaterialForm.html":{},"index.html":{}}}],["lifecycle",{"_index":359,"title":{},"body":{"interfaces/EditorJSMaterialForm.html":{},"injectables/NgxEditorJSService.html":{}}}],["limitation",{"_index":1729,"title":{},"body":{"license.html":{}}}],["limited",{"_index":1753,"title":{},"body":{"license.html":{}}}],["line:use",{"_index":358,"title":{},"body":{"interfaces/EditorJSMaterialForm.html":{}}}],["link",{"_index":107,"title":{},"body":{"interfaces/BlockData.html":{},"injectables/MockNgZone.html":{},"injectables/NgxEditorJSPluginService.html":{},"injectables/NgxEditorJSService.html":{},"interfaces/PluginConfig.html":{},"interfaces/PluginConfigMap.html":{},"modules/PluginLinkModule.html":{},"interfaces/ToolSettingsMap.html":{}}}],["links",{"_index":489,"title":{},"body":{"components/NgxEditorJSDemoHomeComponent.html":{},"components/NgxTinynodesMaterialFormFieldDemoComponent.html":{},"components/PageContainerComponent.html":{},"index.html":{}}}],["list",{"_index":26,"title":{"interfaces/List.html":{}},"body":{"interfaces/Block.html":{},"interfaces/Header.html":{},"interfaces/HeaderBlock.html":{},"interfaces/Image.html":{},"interfaces/ImageBlock.html":{},"interfaces/List.html":{},"interfaces/ListBlock.html":{},"modules/NgxEditorJSDemoMaterialModule.html":{},"injectables/NgxEditorJSPluginService.html":{},"components/NgxTinynodesMaterialFormFieldDemoComponent.html":{},"components/PageContainerComponent.html":{},"interfaces/Paragraph.html":{},"interfaces/ParagraphBlock.html":{},"modules/PluginListModule.html":{},"miscellaneous/typealiases.html":{}}}],["listblock",{"_index":39,"title":{"interfaces/ListBlock.html":{}},"body":{"interfaces/Block.html":{},"interfaces/Header.html":{},"interfaces/HeaderBlock.html":{},"interfaces/Image.html":{},"interfaces/ImageBlock.html":{},"interfaces/List.html":{},"interfaces/ListBlock.html":{},"interfaces/Paragraph.html":{},"interfaces/ParagraphBlock.html":{},"miscellaneous/typealiases.html":{}}}],["listener",{"_index":368,"title":{},"body":{"interfaces/EditorJSMaterialForm.html":{},"directives/NgxEditorJSDirective.html":{}}}],["listners",{"_index":618,"title":{},"body":{"directives/NgxEditorJSDirective.html":{}}}],["liststyle",{"_index":33,"title":{},"body":{"interfaces/Block.html":{},"interfaces/Header.html":{},"interfaces/HeaderBlock.html":{},"interfaces/Image.html":{},"interfaces/ImageBlock.html":{},"interfaces/List.html":{},"interfaces/ListBlock.html":{},"interfaces/Paragraph.html":{},"interfaces/ParagraphBlock.html":{},"miscellaneous/typealiases.html":{}}}],["loadchildren",{"_index":1812,"title":{},"body":{"miscellaneous/variables.html":{}}}],["loading",{"_index":1099,"title":{},"body":{"components/NgxTinynodesMaterialFormFieldDemoComponent.html":{}}}],["local",{"_index":888,"title":{},"body":{"injectables/NgxEditorJSService.html":{}}}],["locations",{"_index":1475,"title":{},"body":{"contributing.html":{}}}],["lot",{"_index":1421,"title":{},"body":{"changelog.html":{}}}],["lt;code",{"_index":1182,"title":{},"body":{"components/NgxTinynodesMaterialFormFieldDemoComponent.html":{},"components/PageContainerComponent.html":{}}}],["lt;h1",{"_index":1178,"title":{},"body":{"components/NgxTinynodesMaterialFormFieldDemoComponent.html":{},"components/PageContainerComponent.html":{}}}],["lt;h6",{"_index":1179,"title":{},"body":{"components/NgxTinynodesMaterialFormFieldDemoComponent.html":{},"components/PageContainerComponent.html":{}}}],["lt;img",{"_index":1184,"title":{},"body":{"components/NgxTinynodesMaterialFormFieldDemoComponent.html":{},"components/PageContainerComponent.html":{}}}],["lt;li",{"_index":1181,"title":{},"body":{"components/NgxTinynodesMaterialFormFieldDemoComponent.html":{},"components/PageContainerComponent.html":{}}}],["lt;ol",{"_index":1180,"title":{},"body":{"components/NgxTinynodesMaterialFormFieldDemoComponent.html":{},"components/PageContainerComponent.html":{}}}],["lt;p",{"_index":1176,"title":{},"body":{"components/NgxTinynodesMaterialFormFieldDemoComponent.html":{},"components/PageContainerComponent.html":{}}}],["m.ngxtinynodesmaterialformfielddemo",{"_index":1815,"title":{},"body":{"miscellaneous/variables.html":{}}}],["made",{"_index":818,"title":{},"body":{"injectables/NgxEditorJSService.html":{}}}],["mail",{"_index":1595,"title":{},"body":{"contributing.html":{}}}],["main",{"_index":548,"title":{},"body":{"directives/NgxEditorJSDirective.html":{},"components/NgxTinynodesMaterialFormFieldDemoComponent.html":{},"changelog.html":{}}}],["maintain",{"_index":1622,"title":{},"body":{"contributing.html":{}}}],["maintainers",{"_index":1494,"title":{},"body":{"contributing.html":{}}}],["major",{"_index":1403,"title":{},"body":{"changelog.html":{}}}],["make",{"_index":829,"title":{},"body":{"injectables/NgxEditorJSService.html":{},"contributing.html":{}}}],["makes",{"_index":186,"title":{},"body":{"interfaces/EditorJSClass.html":{},"interfaces/EditorJSInstanceConfig.html":{},"interfaces/InjectorApiCallOptions.html":{},"interfaces/InjectorApiCallResponse.html":{},"interfaces/InjectorMethodOption.html":{}}}],["making",{"_index":1450,"title":{},"body":{"changelog.html":{},"contributing.html":{}}}],["management",{"_index":807,"title":{},"body":{"injectables/NgxEditorJSService.html":{}}}],["managing",{"_index":1420,"title":{},"body":{"changelog.html":{}}}],["map",{"_index":92,"title":{},"body":{"interfaces/BlockData.html":{},"interfaces/ChangeMap.html":{},"interfaces/EditorJSChange.html":{},"interfaces/EditorJSClass.html":{},"interfaces/EditorJSInstanceConfig.html":{},"interfaces/EditorMap.html":{},"interfaces/InjectorApiCallOptions.html":{},"interfaces/InjectorApiCallResponse.html":{},"interfaces/InjectorMethodOption.html":{},"injectables/NgxEditorJSPluginService.html":{},"injectables/NgxEditorJSService.html":{},"components/PageContainerComponent.html":{},"interfaces/PluginConfig.html":{},"interfaces/PluginConfigMap.html":{},"interfaces/ReadyMap.html":{},"interfaces/SavedMap.html":{},"interfaces/ToolSettingsMap.html":{},"changelog.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["map(blocks",{"_index":1242,"title":{},"body":{"components/PageContainerComponent.html":{}}}],["map_defaults",{"_index":192,"title":{},"body":{"interfaces/EditorJSClass.html":{},"interfaces/EditorJSInstanceConfig.html":{},"interfaces/InjectorApiCallOptions.html":{},"interfaces/InjectorApiCallResponse.html":{},"interfaces/InjectorMethodOption.html":{},"injectables/NgxEditorJSService.html":{},"miscellaneous/variables.html":{}}}],["map_defaults.foreach(([mapkey",{"_index":968,"title":{},"body":{"injectables/NgxEditorJSService.html":{}}}],["margin",{"_index":1209,"title":{},"body":{"components/NgxTinynodesMaterialFormFieldDemoComponent.html":{}}}],["marker",{"_index":1356,"title":{},"body":{"modules/PluginMarkerModule.html":{}}}],["mat",{"_index":216,"title":{},"body":{"interfaces/EditorJSMaterialForm.html":{},"components/NgxEditorJSDemoHomeComponent.html":{},"modules/NgxEditorJSModule.html":{},"components/NgxTinynodesMatJsonOutputComponent.html":{},"modules/NgxTinynodesMatJsonOutputModule.html":{},"modules/NgxTinynodesMatTagInputModule.html":{},"components/NgxTinynodesMaterialFormFieldDemoComponent.html":{},"components/PageContainerComponent.html":{},"miscellaneous/variables.html":{}}}],["matbadgemodule",{"_index":525,"title":{},"body":{"modules/NgxEditorJSDemoMaterialModule.html":{}}}],["matbuttonmodule",{"_index":527,"title":{},"body":{"modules/NgxEditorJSDemoMaterialModule.html":{},"modules/NgxTinynodesMatJsonOutputModule.html":{}}}],["matcardmodule",{"_index":529,"title":{},"body":{"modules/NgxEditorJSDemoMaterialModule.html":{},"modules/NgxTinynodesMatJsonOutputModule.html":{}}}],["match",{"_index":598,"title":{},"body":{"directives/NgxEditorJSDirective.html":{}}}],["matches",{"_index":819,"title":{},"body":{"injectables/NgxEditorJSService.html":{}}}],["matching",{"_index":66,"title":{},"body":{"interfaces/Block.html":{},"interfaces/BlockData.html":{},"interfaces/ChangeMap.html":{},"interfaces/CreateEditorJSOptions.html":{},"interfaces/EditorJSChange.html":{},"interfaces/EditorJSClass.html":{},"interfaces/EditorJSInstanceConfig.html":{},"interfaces/EditorJSMaterialForm.html":{},"interfaces/EditorMap.html":{},"interfaces/Header.html":{},"interfaces/HeaderBlock.html":{},"interfaces/Image.html":{},"interfaces/ImageBlock.html":{},"interfaces/InjectorApiCallOptions.html":{},"interfaces/InjectorApiCallResponse.html":{},"interfaces/InjectorMethodOption.html":{},"interfaces/List.html":{},"interfaces/ListBlock.html":{},"classes/MockEditorJS.html":{},"injectables/MockNgZone.html":{},"classes/MockPlugin.html":{},"interfaces/NgxEditorJSConfig.html":{},"components/NgxEditorJSDemoHomeComponent.html":{},"modules/NgxEditorJSDemoMaterialModule.html":{},"directives/NgxEditorJSDirective.html":{},"modules/NgxEditorJSModule.html":{},"interfaces/NgxEditorJSModuleConfig.html":{},"injectables/NgxEditorJSPluginService.html":{},"modules/NgxEditorJSPluginServiceModule.html":{},"injectables/NgxEditorJSService.html":{},"modules/NgxEditorjsDemoModule.html":{},"modules/NgxEditorjsPluginsModule.html":{},"modules/NgxTinynodesComponentsModule.html":{},"interfaces/NgxTinynodesMatFieldComponent.html":{},"components/NgxTinynodesMatJsonOutputComponent.html":{},"modules/NgxTinynodesMatJsonOutputModule.html":{},"modules/NgxTinynodesMatTagInputModule.html":{},"modules/NgxTinynodesMaterialFormFieldDemo.html":{},"components/NgxTinynodesMaterialFormFieldDemoComponent.html":{},"interfaces/Page.html":{},"interfaces/PageBlock.html":{},"components/PageContainerComponent.html":{},"modules/PageStoreModule.html":{},"injectables/PagesQuery.html":{},"injectables/PagesService.html":{},"interfaces/PagesState.html":{},"injectables/PagesStore.html":{},"interfaces/Paragraph.html":{},"interfaces/ParagraphBlock.html":{},"modules/PluginCodeModule.html":{},"interfaces/PluginConfig.html":{},"interfaces/PluginConfigMap.html":{},"modules/PluginEmbedModule.html":{},"modules/PluginHeaderModule.html":{},"modules/PluginImageModule.html":{},"modules/PluginInlineCodeModule.html":{},"modules/PluginLinkModule.html":{},"modules/PluginListModule.html":{},"modules/PluginMarkerModule.html":{},"modules/PluginParagraphModule.html":{},"modules/PluginQuoteModule.html":{},"modules/PluginSimpleImageModule.html":{},"modules/PluginWarningModule.html":{},"interfaces/ReadyMap.html":{},"interfaces/SavedMap.html":{},"interfaces/Tag.html":{},"interfaces/ToolSettingsMap.html":{},"changelog.html":{},"contributing.html":{},"dependencies.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"index.html":{},"license.html":{},"modules.html":{},"overview.html":{},"todo.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["matchipsmodule",{"_index":531,"title":{},"body":{"modules/NgxEditorJSDemoMaterialModule.html":{},"modules/NgxTinynodesMatTagInputModule.html":{}}}],["material",{"_index":251,"title":{},"body":{"interfaces/EditorJSMaterialForm.html":{},"components/NgxEditorJSDemoHomeComponent.html":{},"components/NgxTinynodesMaterialFormFieldDemoComponent.html":{},"changelog.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["material](https://material.angular.io",{"_index":257,"title":{},"body":{"interfaces/EditorJSMaterialForm.html":{}}}],["matexpansionmodule",{"_index":533,"title":{},"body":{"modules/NgxEditorJSDemoMaterialModule.html":{}}}],["matformfieldcontrol",{"_index":220,"title":{},"body":{"interfaces/EditorJSMaterialForm.html":{},"interfaces/NgxTinynodesMatFieldComponent.html":{},"miscellaneous/variables.html":{}}}],["matformfieldmodule",{"_index":535,"title":{},"body":{"modules/NgxEditorJSDemoMaterialModule.html":{},"modules/NgxEditorJSModule.html":{}}}],["matgridlistmodule",{"_index":536,"title":{},"body":{"modules/NgxEditorJSDemoMaterialModule.html":{}}}],["maticonmodule",{"_index":538,"title":{},"body":{"modules/NgxEditorJSDemoMaterialModule.html":{},"modules/NgxTinynodesMatTagInputModule.html":{}}}],["matinputmodule",{"_index":540,"title":{},"body":{"modules/NgxEditorJSDemoMaterialModule.html":{},"modules/NgxEditorJSModule.html":{}}}],["matlistmodule",{"_index":542,"title":{},"body":{"modules/NgxEditorJSDemoMaterialModule.html":{}}}],["me@tane.dev",{"_index":1614,"title":{},"body":{"contributing.html":{},"license.html":{}}}],["means",{"_index":626,"title":{},"body":{"directives/NgxEditorJSDirective.html":{},"changelog.html":{}}}],["meantime",{"_index":1446,"title":{},"body":{"changelog.html":{}}}],["media",{"_index":1598,"title":{},"body":{"contributing.html":{}}}],["members",{"_index":1537,"title":{},"body":{"contributing.html":{}}}],["menu",{"_index":1104,"title":{},"body":{"components/NgxTinynodesMaterialFormFieldDemoComponent.html":{},"components/PageContainerComponent.html":{}}}],["menugroup",{"_index":1140,"title":{},"body":{"components/NgxTinynodesMaterialFormFieldDemoComponent.html":{},"components/PageContainerComponent.html":{}}}],["merchantability",{"_index":1755,"title":{},"body":{"license.html":{}}}],["merge",{"_index":1484,"title":{},"body":{"contributing.html":{},"license.html":{}}}],["merged",{"_index":1391,"title":{},"body":{"changelog.html":{}}}],["metadata",{"_index":480,"title":{},"body":{"components/NgxEditorJSDemoHomeComponent.html":{},"directives/NgxEditorJSDirective.html":{},"components/NgxTinynodesMatJsonOutputComponent.html":{},"components/NgxTinynodesMaterialFormFieldDemoComponent.html":{},"components/PageContainerComponent.html":{}}}],["method",{"_index":184,"title":{},"body":{"interfaces/EditorJSClass.html":{},"interfaces/EditorJSInstanceConfig.html":{},"interfaces/InjectorApiCallOptions.html":{},"interfaces/InjectorApiCallResponse.html":{},"interfaces/InjectorMethodOption.html":{},"interfaces/NgxEditorJSConfig.html":{},"directives/NgxEditorJSDirective.html":{},"modules/NgxEditorJSModule.html":{},"interfaces/NgxEditorJSModuleConfig.html":{},"injectables/NgxEditorJSService.html":{},"components/NgxTinynodesMaterialFormFieldDemoComponent.html":{},"components/PageContainerComponent.html":{},"modules/PluginHeaderModule.html":{},"contributing.html":{},"miscellaneous/functions.html":{}}}],["method.call(editor",{"_index":919,"title":{},"body":{"injectables/NgxEditorJSService.html":{}}}],["methodcall",{"_index":918,"title":{},"body":{"injectables/NgxEditorJSService.html":{}}}],["methodcall.then",{"_index":920,"title":{},"body":{"injectables/NgxEditorJSService.html":{}}}],["methods",{"_index":422,"title":{},"body":{"injectables/MockNgZone.html":{},"classes/MockPlugin.html":{},"directives/NgxEditorJSDirective.html":{},"modules/NgxEditorJSModule.html":{},"injectables/NgxEditorJSPluginService.html":{},"injectables/NgxEditorJSService.html":{},"components/NgxTinynodesMatJsonOutputComponent.html":{},"components/NgxTinynodesMaterialFormFieldDemoComponent.html":{},"components/PageContainerComponent.html":{},"injectables/PagesService.html":{},"changelog.html":{}}}],["minheight",{"_index":445,"title":{},"body":{"interfaces/NgxEditorJSConfig.html":{},"directives/NgxEditorJSDirective.html":{},"interfaces/NgxEditorJSModuleConfig.html":{}}}],["minimum",{"_index":601,"title":{},"body":{"directives/NgxEditorJSDirective.html":{}}}],["miscellaneous",{"_index":1671,"title":{"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}},"body":{"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["mit",{"_index":1715,"title":{},"body":{"license.html":{}}}],["mock",{"_index":419,"title":{},"body":{"injectables/MockNgZone.html":{}}}],["mock.ts",{"_index":418,"title":{},"body":{"injectables/MockNgZone.html":{}}}],["mock.ts:16",{"_index":426,"title":{},"body":{"injectables/MockNgZone.html":{}}}],["mock.ts:22",{"_index":428,"title":{},"body":{"injectables/MockNgZone.html":{}}}],["mock.ts:26",{"_index":431,"title":{},"body":{"injectables/MockNgZone.html":{}}}],["mock.ts:30",{"_index":432,"title":{},"body":{"injectables/MockNgZone.html":{}}}],["mockeditorjs",{"_index":383,"title":{"classes/MockEditorJS.html":{}},"body":{"classes/MockEditorJS.html":{},"classes/MockPlugin.html":{}}}],["mockngzone",{"_index":414,"title":{"injectables/MockNgZone.html":{}},"body":{"injectables/MockNgZone.html":{}}}],["mockplugin",{"_index":399,"title":{"classes/MockPlugin.html":{}},"body":{"classes/MockEditorJS.html":{},"classes/MockPlugin.html":{}}}],["modify",{"_index":1731,"title":{},"body":{"license.html":{}}}],["module",{"_index":124,"title":{"modules/NgxEditorJSDemoMaterialModule.html":{},"modules/NgxEditorJSModule.html":{},"modules/NgxEditorJSPluginServiceModule.html":{},"modules/NgxEditorjsDemoModule.html":{},"modules/NgxEditorjsPluginsModule.html":{},"modules/NgxTinynodesComponentsModule.html":{},"modules/NgxTinynodesMatJsonOutputModule.html":{},"modules/NgxTinynodesMatTagInputModule.html":{},"modules/NgxTinynodesMaterialFormFieldDemo.html":{},"modules/PageStoreModule.html":{},"modules/PluginCodeModule.html":{},"modules/PluginEmbedModule.html":{},"modules/PluginHeaderModule.html":{},"modules/PluginImageModule.html":{},"modules/PluginInlineCodeModule.html":{},"modules/PluginLinkModule.html":{},"modules/PluginListModule.html":{},"modules/PluginMarkerModule.html":{},"modules/PluginParagraphModule.html":{},"modules/PluginQuoteModule.html":{},"modules/PluginSimpleImageModule.html":{},"modules/PluginWarningModule.html":{}},"body":{"interfaces/BlockData.html":{},"components/NgxEditorJSDemoHomeComponent.html":{},"modules/NgxEditorJSModule.html":{},"modules/NgxEditorJSPluginServiceModule.html":{},"modules/NgxEditorjsDemoModule.html":{},"modules/NgxEditorjsPluginsModule.html":{},"modules/NgxTinynodesComponentsModule.html":{},"modules/NgxTinynodesMatJsonOutputModule.html":{},"modules/NgxTinynodesMatTagInputModule.html":{},"modules/NgxTinynodesMaterialFormFieldDemo.html":{},"modules/PageStoreModule.html":{},"modules/PluginCodeModule.html":{},"interfaces/PluginConfig.html":{},"interfaces/PluginConfigMap.html":{},"modules/PluginEmbedModule.html":{},"modules/PluginHeaderModule.html":{},"modules/PluginImageModule.html":{},"modules/PluginInlineCodeModule.html":{},"modules/PluginLinkModule.html":{},"modules/PluginListModule.html":{},"modules/PluginMarkerModule.html":{},"modules/PluginParagraphModule.html":{},"modules/PluginQuoteModule.html":{},"modules/PluginSimpleImageModule.html":{},"modules/PluginWarningModule.html":{},"interfaces/ToolSettingsMap.html":{},"changelog.html":{},"miscellaneous/functions.html":{},"index.html":{},"overview.html":{},"todo.html":{},"miscellaneous/variables.html":{}}}],["modules",{"_index":521,"title":{"modules.html":{}},"body":{"modules/NgxEditorJSDemoMaterialModule.html":{},"modules/NgxEditorJSModule.html":{},"modules/NgxEditorJSPluginServiceModule.html":{},"modules/NgxEditorjsDemoModule.html":{},"modules/NgxEditorjsPluginsModule.html":{},"modules/NgxTinynodesComponentsModule.html":{},"modules/NgxTinynodesMatJsonOutputModule.html":{},"modules/NgxTinynodesMatTagInputModule.html":{},"modules/NgxTinynodesMaterialFormFieldDemo.html":{},"modules/PageStoreModule.html":{},"modules/PluginCodeModule.html":{},"modules/PluginEmbedModule.html":{},"modules/PluginHeaderModule.html":{},"modules/PluginImageModule.html":{},"modules/PluginInlineCodeModule.html":{},"modules/PluginLinkModule.html":{},"modules/PluginListModule.html":{},"modules/PluginMarkerModule.html":{},"modules/PluginParagraphModule.html":{},"modules/PluginQuoteModule.html":{},"modules/PluginSimpleImageModule.html":{},"modules/PluginWarningModule.html":{},"modules.html":{},"overview.html":{},"todo.html":{}}}],["modulewithproviders",{"_index":725,"title":{},"body":{"modules/NgxEditorJSModule.html":{}}}],["monday",{"_index":1424,"title":{},"body":{"changelog.html":{}}}],["monitor",{"_index":348,"title":{},"body":{"interfaces/EditorJSMaterialForm.html":{}}}],["more",{"_index":1451,"title":{},"body":{"changelog.html":{}}}],["mouseevent",{"_index":341,"title":{},"body":{"interfaces/EditorJSMaterialForm.html":{}}}],["ms",{"_index":584,"title":{},"body":{"directives/NgxEditorJSDirective.html":{}}}],["multi",{"_index":256,"title":{},"body":{"interfaces/EditorJSMaterialForm.html":{},"modules/NgxEditorJSPluginServiceModule.html":{},"modules/PluginCodeModule.html":{},"modules/PluginEmbedModule.html":{},"modules/PluginHeaderModule.html":{},"modules/PluginImageModule.html":{},"modules/PluginInlineCodeModule.html":{},"modules/PluginLinkModule.html":{},"modules/PluginListModule.html":{},"modules/PluginMarkerModule.html":{},"modules/PluginParagraphModule.html":{},"modules/PluginQuoteModule.html":{},"modules/PluginSimpleImageModule.html":{},"modules/PluginWarningModule.html":{},"changelog.html":{},"miscellaneous/variables.html":{}}}],["multiple",{"_index":1258,"title":{},"body":{"modules/PageStoreModule.html":{}}}],["name",{"_index":104,"title":{},"body":{"interfaces/BlockData.html":{},"classes/MockEditorJS.html":{},"injectables/MockNgZone.html":{},"interfaces/NgxEditorJSConfig.html":{},"components/NgxEditorJSDemoHomeComponent.html":{},"directives/NgxEditorJSDirective.html":{},"modules/NgxEditorJSModule.html":{},"interfaces/NgxEditorJSModuleConfig.html":{},"injectables/NgxEditorJSPluginService.html":{},"injectables/NgxEditorJSService.html":{},"components/NgxTinynodesMatJsonOutputComponent.html":{},"components/NgxTinynodesMaterialFormFieldDemoComponent.html":{},"components/PageContainerComponent.html":{},"injectables/PagesQuery.html":{},"injectables/PagesService.html":{},"interfaces/PagesState.html":{},"injectables/PagesStore.html":{},"interfaces/PluginConfig.html":{},"interfaces/PluginConfigMap.html":{},"interfaces/ToolSettingsMap.html":{},"miscellaneous/functions.html":{}}}],["namespace",{"_index":210,"title":{},"body":{"interfaces/EditorJSClass.html":{},"interfaces/EditorJSInstanceConfig.html":{},"interfaces/InjectorApiCallOptions.html":{},"interfaces/InjectorApiCallResponse.html":{},"interfaces/InjectorMethodOption.html":{},"injectables/NgxEditorJSService.html":{}}}],["nationality",{"_index":1510,"title":{},"body":{"contributing.html":{}}}],["necessary",{"_index":1619,"title":{},"body":{"contributing.html":{}}}],["need",{"_index":629,"title":{},"body":{"directives/NgxEditorJSDirective.html":{},"components/NgxTinynodesMaterialFormFieldDemoComponent.html":{}}}],["needs",{"_index":597,"title":{},"body":{"directives/NgxEditorJSDirective.html":{}}}],["new",{"_index":127,"title":{},"body":{"interfaces/BlockData.html":{},"interfaces/EditorJSClass.html":{},"interfaces/EditorJSInstanceConfig.html":{},"interfaces/EditorJSMaterialForm.html":{},"interfaces/InjectorApiCallOptions.html":{},"interfaces/InjectorApiCallResponse.html":{},"interfaces/InjectorMethodOption.html":{},"injectables/MockNgZone.html":{},"interfaces/NgxEditorJSConfig.html":{},"directives/NgxEditorJSDirective.html":{},"interfaces/NgxEditorJSModuleConfig.html":{},"injectables/NgxEditorJSService.html":{},"components/NgxTinynodesMaterialFormFieldDemoComponent.html":{},"components/PageContainerComponent.html":{},"injectables/PagesService.html":{},"interfaces/PluginConfig.html":{},"interfaces/PluginConfigMap.html":{},"interfaces/ToolSettingsMap.html":{},"changelog.html":{},"contributing.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["newdata",{"_index":1335,"title":{},"body":{"modules/PluginHeaderModule.html":{}}}],["newdata.level",{"_index":1338,"title":{},"body":{"modules/PluginHeaderModule.html":{}}}],["newdata.text",{"_index":1336,"title":{},"body":{"modules/PluginHeaderModule.html":{}}}],["newpage",{"_index":1301,"title":{},"body":{"injectables/PagesService.html":{}}}],["next",{"_index":357,"title":{},"body":{"interfaces/EditorJSMaterialForm.html":{}}}],["nextid",{"_index":272,"title":{},"body":{"interfaces/EditorJSMaterialForm.html":{}}}],["ng_value_accessor",{"_index":1808,"title":{},"body":{"miscellaneous/variables.html":{}}}],["ngaftercontentinit",{"_index":372,"title":{},"body":{"interfaces/EditorJSMaterialForm.html":{},"directives/NgxEditorJSDirective.html":{},"components/NgxTinynodesMaterialFormFieldDemoComponent.html":{},"components/PageContainerComponent.html":{}}}],["ngcontrol",{"_index":237,"title":{},"body":{"interfaces/EditorJSMaterialForm.html":{}}}],["ngdocheck",{"_index":378,"title":{},"body":{"interfaces/EditorJSMaterialForm.html":{}}}],["ngmodule",{"_index":524,"title":{},"body":{"modules/NgxEditorJSDemoMaterialModule.html":{},"modules/NgxEditorJSModule.html":{},"injectables/NgxEditorJSPluginService.html":{},"modules/NgxEditorJSPluginServiceModule.html":{},"modules/NgxEditorjsDemoModule.html":{},"modules/NgxEditorjsPluginsModule.html":{},"modules/NgxTinynodesComponentsModule.html":{},"modules/NgxTinynodesMatJsonOutputModule.html":{},"modules/NgxTinynodesMatTagInputModule.html":{},"modules/NgxTinynodesMaterialFormFieldDemo.html":{},"modules/PageStoreModule.html":{},"modules/PluginCodeModule.html":{},"modules/PluginEmbedModule.html":{},"modules/PluginHeaderModule.html":{},"modules/PluginImageModule.html":{},"modules/PluginInlineCodeModule.html":{},"modules/PluginLinkModule.html":{},"modules/PluginListModule.html":{},"modules/PluginMarkerModule.html":{},"modules/PluginParagraphModule.html":{},"modules/PluginQuoteModule.html":{},"modules/PluginSimpleImageModule.html":{},"modules/PluginWarningModule.html":{},"changelog.html":{}}}],["ngonchanges",{"_index":554,"title":{},"body":{"directives/NgxEditorJSDirective.html":{},"components/NgxTinynodesMatJsonOutputComponent.html":{}}}],["ngonchanges(changes",{"_index":619,"title":{},"body":{"directives/NgxEditorJSDirective.html":{}}}],["ngondestroy",{"_index":555,"title":{},"body":{"directives/NgxEditorJSDirective.html":{}}}],["ngoninit",{"_index":360,"title":{},"body":{"interfaces/EditorJSMaterialForm.html":{}}}],["ngrx/effects",{"_index":1657,"title":{},"body":{"dependencies.html":{},"todo.html":{}}}],["ngrx/store",{"_index":1658,"title":{},"body":{"dependencies.html":{}}}],["ngx",{"_index":123,"title":{},"body":{"interfaces/BlockData.html":{},"interfaces/EditorJSMaterialForm.html":{},"components/NgxEditorJSDemoHomeComponent.html":{},"directives/NgxEditorJSDirective.html":{},"modules/NgxEditorjsDemoModule.html":{},"components/NgxTinynodesMatJsonOutputComponent.html":{},"modules/NgxTinynodesMatJsonOutputModule.html":{},"modules/NgxTinynodesMaterialFormFieldDemo.html":{},"components/NgxTinynodesMaterialFormFieldDemoComponent.html":{},"components/PageContainerComponent.html":{},"modules/PageStoreModule.html":{},"interfaces/PluginConfig.html":{},"interfaces/PluginConfigMap.html":{},"interfaces/ToolSettingsMap.html":{},"dependencies.html":{},"index.html":{},"todo.html":{},"miscellaneous/variables.html":{}}}],["ngx_editorjs_config",{"_index":464,"title":{},"body":{"interfaces/NgxEditorJSConfig.html":{},"modules/NgxEditorJSModule.html":{},"interfaces/NgxEditorJSModuleConfig.html":{},"injectables/NgxEditorJSService.html":{},"miscellaneous/variables.html":{}}}],["ngxeditorjs",{"_index":518,"title":{},"body":{"components/NgxEditorJSDemoHomeComponent.html":{},"directives/NgxEditorJSDirective.html":{},"components/NgxTinynodesMatJsonOutputComponent.html":{},"components/NgxTinynodesMaterialFormFieldDemoComponent.html":{},"components/PageContainerComponent.html":{}}}],["ngxeditorjs.hassaved",{"_index":1249,"title":{},"body":{"components/PageContainerComponent.html":{}}}],["ngxeditorjs.isfocused",{"_index":1248,"title":{},"body":{"components/PageContainerComponent.html":{}}}],["ngxeditorjs.isready",{"_index":1245,"title":{},"body":{"components/PageContainerComponent.html":{}}}],["ngxeditorjs.istouched",{"_index":1247,"title":{},"body":{"components/PageContainerComponent.html":{}}}],["ngxeditorjsbasecomponent",{"_index":1809,"title":{},"body":{"miscellaneous/variables.html":{}}}],["ngxeditorjscomponent",{"_index":249,"title":{},"body":{"interfaces/EditorJSMaterialForm.html":{},"components/NgxEditorJSDemoHomeComponent.html":{},"modules/NgxEditorJSModule.html":{},"components/NgxTinynodesMatJsonOutputComponent.html":{},"components/NgxTinynodesMaterialFormFieldDemoComponent.html":{},"components/PageContainerComponent.html":{},"index.html":{},"overview.html":{},"miscellaneous/variables.html":{}}}],["ngxeditorjsconfig",{"_index":439,"title":{"interfaces/NgxEditorJSConfig.html":{}},"body":{"interfaces/NgxEditorJSConfig.html":{},"interfaces/NgxEditorJSModuleConfig.html":{},"miscellaneous/variables.html":{}}}],["ngxeditorjsdemo",{"_index":1141,"title":{},"body":{"components/NgxTinynodesMaterialFormFieldDemoComponent.html":{},"components/PageContainerComponent.html":{}}}],["ngxeditorjsdemohomecomponent",{"_index":473,"title":{"components/NgxEditorJSDemoHomeComponent.html":{}},"body":{"components/NgxEditorJSDemoHomeComponent.html":{},"modules/NgxEditorjsDemoModule.html":{},"components/NgxTinynodesMatJsonOutputComponent.html":{},"components/NgxTinynodesMaterialFormFieldDemoComponent.html":{},"components/PageContainerComponent.html":{},"overview.html":{},"miscellaneous/variables.html":{}}}],["ngxeditorjsdemomaterialmodule",{"_index":520,"title":{"modules/NgxEditorJSDemoMaterialModule.html":{}},"body":{"modules/NgxEditorJSDemoMaterialModule.html":{},"modules/NgxEditorjsDemoModule.html":{},"modules/NgxTinynodesMaterialFormFieldDemo.html":{},"modules.html":{},"overview.html":{}}}],["ngxeditorjsdemomodule",{"_index":979,"title":{"modules/NgxEditorjsDemoModule.html":{}},"body":{"modules/NgxEditorjsDemoModule.html":{},"modules.html":{},"overview.html":{}}}],["ngxeditorjsdemoroutes",{"_index":994,"title":{},"body":{"modules/NgxEditorjsDemoModule.html":{},"miscellaneous/variables.html":{}}}],["ngxeditorjsdirective",{"_index":244,"title":{"directives/NgxEditorJSDirective.html":{}},"body":{"interfaces/EditorJSMaterialForm.html":{},"components/NgxEditorJSDemoHomeComponent.html":{},"directives/NgxEditorJSDirective.html":{},"modules/NgxEditorJSModule.html":{},"components/NgxTinynodesMatJsonOutputComponent.html":{},"components/NgxTinynodesMaterialFormFieldDemoComponent.html":{},"components/PageContainerComponent.html":{},"index.html":{},"overview.html":{}}}],["ngxeditorjsdirective::ngaftercontentinit",{"_index":684,"title":{},"body":{"directives/NgxEditorJSDirective.html":{}}}],["ngxeditorjsinstanceservice",{"_index":1701,"title":{},"body":{"index.html":{}}}],["ngxeditorjsmaterialfieldcomponent",{"_index":1696,"title":{},"body":{"index.html":{}}}],["ngxeditorjsmatfieldcomponent",{"_index":255,"title":{},"body":{"interfaces/EditorJSMaterialForm.html":{},"components/NgxEditorJSDemoHomeComponent.html":{},"modules/NgxEditorJSModule.html":{},"components/NgxTinynodesMatJsonOutputComponent.html":{},"components/NgxTinynodesMaterialFormFieldDemoComponent.html":{},"components/PageContainerComponent.html":{},"overview.html":{},"miscellaneous/variables.html":{}}}],["ngxeditorjsmatfieldcomponent.nextid",{"_index":324,"title":{},"body":{"interfaces/EditorJSMaterialForm.html":{}}}],["ngxeditorjsmodule",{"_index":705,"title":{"modules/NgxEditorJSModule.html":{}},"body":{"modules/NgxEditorJSModule.html":{},"modules/NgxEditorjsDemoModule.html":{},"modules/NgxTinynodesMaterialFormFieldDemo.html":{},"modules.html":{},"overview.html":{}}}],["ngxeditorjsmodule.forroot",{"_index":462,"title":{},"body":{"interfaces/NgxEditorJSConfig.html":{},"modules/NgxEditorJSModule.html":{},"interfaces/NgxEditorJSModuleConfig.html":{},"injectables/NgxEditorJSService.html":{}}}],["ngxeditorjsmoduleconfig",{"_index":390,"title":{"interfaces/NgxEditorJSModuleConfig.html":{}},"body":{"classes/MockEditorJS.html":{},"classes/MockPlugin.html":{},"interfaces/NgxEditorJSConfig.html":{},"modules/NgxEditorJSModule.html":{},"interfaces/NgxEditorJSModuleConfig.html":{},"injectables/NgxEditorJSService.html":{},"miscellaneous/functions.html":{}}}],["ngxeditorjspluginservice",{"_index":745,"title":{"injectables/NgxEditorJSPluginService.html":{}},"body":{"injectables/NgxEditorJSPluginService.html":{},"modules/NgxEditorJSPluginServiceModule.html":{},"injectables/NgxEditorJSService.html":{},"changelog.html":{},"index.html":{},"overview.html":{}}}],["ngxeditorjspluginservicemodule",{"_index":798,"title":{"modules/NgxEditorJSPluginServiceModule.html":{}},"body":{"modules/NgxEditorJSPluginServiceModule.html":{},"modules/NgxEditorjsPluginsModule.html":{},"modules.html":{},"overview.html":{}}}],["ngxeditorjspluginsmodule",{"_index":985,"title":{"modules/NgxEditorjsPluginsModule.html":{}},"body":{"modules/NgxEditorjsDemoModule.html":{},"modules/NgxEditorjsPluginsModule.html":{},"modules.html":{},"overview.html":{}}}],["ngxeditorjsservice",{"_index":247,"title":{"injectables/NgxEditorJSService.html":{}},"body":{"interfaces/EditorJSMaterialForm.html":{},"directives/NgxEditorJSDirective.html":{},"modules/NgxEditorJSModule.html":{},"injectables/NgxEditorJSService.html":{},"components/NgxTinynodesMaterialFormFieldDemoComponent.html":{},"components/PageContainerComponent.html":{},"index.html":{},"overview.html":{}}}],["ngxjsonviewermodule",{"_index":1000,"title":{},"body":{"modules/NgxEditorjsDemoModule.html":{},"modules/NgxTinynodesMatJsonOutputModule.html":{},"modules/NgxTinynodesMaterialFormFieldDemo.html":{}}}],["ngxtinynodescomponentsmodule",{"_index":1043,"title":{"modules/NgxTinynodesComponentsModule.html":{}},"body":{"modules/NgxTinynodesComponentsModule.html":{},"modules/NgxTinynodesMaterialFormFieldDemo.html":{},"modules.html":{},"overview.html":{}}}],["ngxtinynodescoremodule",{"_index":997,"title":{},"body":{"modules/NgxEditorjsDemoModule.html":{},"modules/NgxTinynodesMaterialFormFieldDemo.html":{}}}],["ngxtinynodesmaterialformfielddemo",{"_index":1086,"title":{"modules/NgxTinynodesMaterialFormFieldDemo.html":{}},"body":{"modules/NgxTinynodesMaterialFormFieldDemo.html":{},"modules.html":{},"overview.html":{}}}],["ngxtinynodesmaterialformfielddemocomponent",{"_index":506,"title":{"components/NgxTinynodesMaterialFormFieldDemoComponent.html":{}},"body":{"components/NgxEditorJSDemoHomeComponent.html":{},"components/NgxTinynodesMatJsonOutputComponent.html":{},"modules/NgxTinynodesMaterialFormFieldDemo.html":{},"components/NgxTinynodesMaterialFormFieldDemoComponent.html":{},"components/PageContainerComponent.html":{},"overview.html":{}}}],["ngxtinynodesmatfieldcomponent",{"_index":1056,"title":{"interfaces/NgxTinynodesMatFieldComponent.html":{}},"body":{"interfaces/NgxTinynodesMatFieldComponent.html":{}}}],["ngxtinynodesmatjsonoutputcomponent",{"_index":509,"title":{"components/NgxTinynodesMatJsonOutputComponent.html":{}},"body":{"components/NgxEditorJSDemoHomeComponent.html":{},"components/NgxTinynodesMatJsonOutputComponent.html":{},"modules/NgxTinynodesMatJsonOutputModule.html":{},"components/NgxTinynodesMaterialFormFieldDemoComponent.html":{},"components/PageContainerComponent.html":{},"overview.html":{}}}],["ngxtinynodesmatjsonoutputmodule",{"_index":1047,"title":{"modules/NgxTinynodesMatJsonOutputModule.html":{}},"body":{"modules/NgxTinynodesComponentsModule.html":{},"modules/NgxTinynodesMatJsonOutputModule.html":{},"modules.html":{},"overview.html":{}}}],["ngxtinynodesmattaginputcomponent",{"_index":512,"title":{},"body":{"components/NgxEditorJSDemoHomeComponent.html":{},"components/NgxTinynodesMatJsonOutputComponent.html":{},"modules/NgxTinynodesMatTagInputModule.html":{},"components/NgxTinynodesMaterialFormFieldDemoComponent.html":{},"components/PageContainerComponent.html":{},"overview.html":{},"miscellaneous/variables.html":{}}}],["ngxtinynodesmattaginputmodule",{"_index":1048,"title":{"modules/NgxTinynodesMatTagInputModule.html":{}},"body":{"modules/NgxTinynodesComponentsModule.html":{},"modules/NgxTinynodesMatTagInputModule.html":{},"modules.html":{},"overview.html":{}}}],["ngzone",{"_index":420,"title":{},"body":{"injectables/MockNgZone.html":{},"injectables/NgxEditorJSService.html":{}}}],["noninfringement",{"_index":1759,"title":{},"body":{"license.html":{}}}],["normalizedata",{"_index":1333,"title":{},"body":{"modules/PluginHeaderModule.html":{}}}],["note",{"_index":1461,"title":{},"body":{"contributing.html":{}}}],["notice",{"_index":1744,"title":{},"body":{"license.html":{}}}],["now",{"_index":1166,"title":{},"body":{"components/NgxTinynodesMaterialFormFieldDemoComponent.html":{},"changelog.html":{}}}],["npm",{"_index":1666,"title":{},"body":{"dependencies.html":{},"index.html":{}}}],["nrwl/nx",{"_index":1438,"title":{},"body":{"changelog.html":{}}}],["null",{"_index":362,"title":{},"body":{"interfaces/EditorJSMaterialForm.html":{},"directives/NgxEditorJSDirective.html":{},"injectables/NgxEditorJSService.html":{},"components/PageContainerComponent.html":{}}}],["number",{"_index":48,"title":{},"body":{"interfaces/Block.html":{},"interfaces/ChangeMap.html":{},"interfaces/CreateEditorJSOptions.html":{},"interfaces/EditorJSChange.html":{},"interfaces/EditorMap.html":{},"interfaces/Header.html":{},"interfaces/HeaderBlock.html":{},"interfaces/Image.html":{},"interfaces/ImageBlock.html":{},"interfaces/List.html":{},"interfaces/ListBlock.html":{},"interfaces/NgxEditorJSConfig.html":{},"directives/NgxEditorJSDirective.html":{},"interfaces/NgxEditorJSModuleConfig.html":{},"components/NgxTinynodesMaterialFormFieldDemoComponent.html":{},"interfaces/Paragraph.html":{},"interfaces/ParagraphBlock.html":{},"interfaces/ReadyMap.html":{},"interfaces/SavedMap.html":{}}}],["numbers",{"_index":1477,"title":{},"body":{"contributing.html":{}}}],["nx",{"_index":1712,"title":{},"body":{"index.html":{}}}],["object",{"_index":97,"title":{},"body":{"interfaces/BlockData.html":{},"directives/NgxEditorJSDirective.html":{},"injectables/NgxEditorJSService.html":{},"interfaces/PluginConfig.html":{},"interfaces/PluginConfigMap.html":{},"interfaces/ToolSettingsMap.html":{}}}],["object.entries(this.getpluginswithexclude(excludetools)).reduce",{"_index":788,"title":{},"body":{"injectables/NgxEditorJSPluginService.html":{}}}],["object.entries(this.pluginconfigmap",{"_index":781,"title":{},"body":{"injectables/NgxEditorJSPluginService.html":{}}}],["object.keys(changes",{"_index":674,"title":{},"body":{"directives/NgxEditorJSDirective.html":{}}}],["object.keys(this.editormap).foreach(holder",{"_index":959,"title":{},"body":{"injectables/NgxEditorJSService.html":{}}}],["objects",{"_index":1689,"title":{},"body":{"miscellaneous/functions.html":{}}}],["obligated",{"_index":1621,"title":{},"body":{"contributing.html":{}}}],["observable",{"_index":637,"title":{},"body":{"directives/NgxEditorJSDirective.html":{},"injectables/NgxEditorJSService.html":{},"components/PageContainerComponent.html":{},"injectables/PagesService.html":{}}}],["obtaining",{"_index":1722,"title":{},"body":{"license.html":{}}}],["of(response",{"_index":930,"title":{},"body":{"injectables/NgxEditorJSService.html":{}}}],["offensive",{"_index":1586,"title":{},"body":{"contributing.html":{}}}],["official",{"_index":1593,"title":{},"body":{"contributing.html":{}}}],["officially",{"_index":1442,"title":{},"body":{"changelog.html":{}}}],["offline",{"_index":1604,"title":{},"body":{"contributing.html":{}}}],["once",{"_index":811,"title":{},"body":{"injectables/NgxEditorJSService.html":{},"modules/PluginHeaderModule.html":{},"contributing.html":{}}}],["onchange",{"_index":187,"title":{},"body":{"interfaces/EditorJSClass.html":{},"interfaces/EditorJSInstanceConfig.html":{},"interfaces/InjectorApiCallOptions.html":{},"interfaces/InjectorApiCallResponse.html":{},"interfaces/InjectorMethodOption.html":{},"injectables/NgxEditorJSService.html":{}}}],["onchanges",{"_index":551,"title":{},"body":{"directives/NgxEditorJSDirective.html":{},"components/NgxTinynodesMatJsonOutputComponent.html":{}}}],["onclick",{"_index":653,"title":{},"body":{"directives/NgxEditorJSDirective.html":{}}}],["oncontainerclick(event",{"_index":342,"title":{},"body":{"interfaces/EditorJSMaterialForm.html":{}}}],["ondestroy",{"_index":233,"title":{},"body":{"interfaces/EditorJSMaterialForm.html":{},"directives/NgxEditorJSDirective.html":{},"injectables/NgxEditorJSService.html":{},"interfaces/NgxTinynodesMatFieldComponent.html":{},"components/NgxTinynodesMaterialFormFieldDemoComponent.html":{},"components/PageContainerComponent.html":{}}}],["ones",{"_index":1708,"title":{},"body":{"index.html":{}}}],["oninit",{"_index":234,"title":{},"body":{"interfaces/EditorJSMaterialForm.html":{},"interfaces/NgxTinynodesMatFieldComponent.html":{}}}],["online",{"_index":1603,"title":{},"body":{"contributing.html":{}}}],["onready",{"_index":189,"title":{},"body":{"interfaces/EditorJSClass.html":{},"interfaces/EditorJSInstanceConfig.html":{},"interfaces/InjectorApiCallOptions.html":{},"interfaces/InjectorApiCallResponse.html":{},"interfaces/InjectorMethodOption.html":{},"injectables/NgxEditorJSService.html":{}}}],["onstable",{"_index":421,"title":{},"body":{"injectables/MockNgZone.html":{}}}],["open",{"_index":1159,"title":{},"body":{"components/NgxTinynodesMaterialFormFieldDemoComponent.html":{},"contributing.html":{}}}],["option",{"_index":204,"title":{},"body":{"interfaces/EditorJSClass.html":{},"interfaces/EditorJSInstanceConfig.html":{},"interfaces/InjectorApiCallOptions.html":{},"interfaces/InjectorApiCallResponse.html":{},"interfaces/InjectorMethodOption.html":{},"interfaces/NgxEditorJSConfig.html":{},"interfaces/NgxEditorJSModuleConfig.html":{},"todo.html":{}}}],["optional",{"_index":52,"title":{},"body":{"interfaces/Block.html":{},"interfaces/BlockData.html":{},"interfaces/CreateEditorJSOptions.html":{},"interfaces/EditorJSClass.html":{},"interfaces/EditorJSInstanceConfig.html":{},"interfaces/EditorJSMaterialForm.html":{},"interfaces/Header.html":{},"interfaces/HeaderBlock.html":{},"interfaces/Image.html":{},"interfaces/ImageBlock.html":{},"interfaces/InjectorApiCallOptions.html":{},"interfaces/InjectorApiCallResponse.html":{},"interfaces/InjectorMethodOption.html":{},"interfaces/List.html":{},"interfaces/ListBlock.html":{},"classes/MockEditorJS.html":{},"injectables/MockNgZone.html":{},"interfaces/NgxEditorJSConfig.html":{},"directives/NgxEditorJSDirective.html":{},"modules/NgxEditorJSModule.html":{},"interfaces/NgxEditorJSModuleConfig.html":{},"injectables/NgxEditorJSPluginService.html":{},"injectables/NgxEditorJSService.html":{},"components/NgxTinynodesMatJsonOutputComponent.html":{},"components/NgxTinynodesMaterialFormFieldDemoComponent.html":{},"components/PageContainerComponent.html":{},"injectables/PagesQuery.html":{},"injectables/PagesService.html":{},"interfaces/Paragraph.html":{},"interfaces/ParagraphBlock.html":{},"interfaces/PluginConfig.html":{},"interfaces/PluginConfigMap.html":{},"interfaces/ToolSettingsMap.html":{},"miscellaneous/functions.html":{}}}],["optionally",{"_index":862,"title":{},"body":{"injectables/NgxEditorJSService.html":{}}}],["options",{"_index":161,"title":{},"body":{"interfaces/CreateEditorJSOptions.html":{},"interfaces/EditorJSClass.html":{},"interfaces/EditorJSInstanceConfig.html":{},"interfaces/InjectorApiCallOptions.html":{},"interfaces/InjectorApiCallResponse.html":{},"interfaces/InjectorMethodOption.html":{},"interfaces/NgxEditorJSConfig.html":{},"interfaces/NgxEditorJSModuleConfig.html":{},"injectables/NgxEditorJSService.html":{},"changelog.html":{},"todo.html":{}}}],["options.config",{"_index":884,"title":{},"body":{"injectables/NgxEditorJSService.html":{}}}],["options.data",{"_index":932,"title":{},"body":{"injectables/NgxEditorJSService.html":{}}}],["options.data.blocks",{"_index":936,"title":{},"body":{"injectables/NgxEditorJSService.html":{}}}],["options.data.time",{"_index":933,"title":{},"body":{"injectables/NgxEditorJSService.html":{}}}],["options.data.version",{"_index":934,"title":{},"body":{"injectables/NgxEditorJSService.html":{}}}],["options.holder",{"_index":923,"title":{},"body":{"injectables/NgxEditorJSService.html":{}}}],["options.method",{"_index":917,"title":{},"body":{"injectables/NgxEditorJSService.html":{}}}],["options.namespace",{"_index":913,"title":{},"body":{"injectables/NgxEditorJSService.html":{}}}],["options.skipsave",{"_index":929,"title":{},"body":{"injectables/NgxEditorJSService.html":{}}}],["ordered",{"_index":29,"title":{},"body":{"interfaces/Block.html":{},"interfaces/Header.html":{},"interfaces/HeaderBlock.html":{},"interfaces/Image.html":{},"interfaces/ImageBlock.html":{},"interfaces/List.html":{},"interfaces/ListBlock.html":{},"interfaces/Paragraph.html":{},"interfaces/ParagraphBlock.html":{},"miscellaneous/typealiases.html":{}}}],["orientation",{"_index":1516,"title":{},"body":{"contributing.html":{}}}],["others",{"_index":1551,"title":{},"body":{"contributing.html":{}}}],["otherwise",{"_index":887,"title":{},"body":{"injectables/NgxEditorJSService.html":{},"contributing.html":{},"license.html":{}}}],["out",{"_index":715,"title":{},"body":{"modules/NgxEditorJSModule.html":{},"modules/NgxEditorJSPluginServiceModule.html":{},"modules/NgxEditorjsDemoModule.html":{},"modules/NgxEditorjsPluginsModule.html":{},"modules/NgxTinynodesComponentsModule.html":{},"modules/NgxTinynodesMatJsonOutputModule.html":{},"modules/NgxTinynodesMatTagInputModule.html":{},"modules/NgxTinynodesMaterialFormFieldDemo.html":{},"modules/PageStoreModule.html":{},"index.html":{},"license.html":{},"overview.html":{}}}],["output",{"_index":450,"title":{},"body":{"interfaces/NgxEditorJSConfig.html":{},"directives/NgxEditorJSDirective.html":{},"interfaces/NgxEditorJSModuleConfig.html":{},"components/NgxTinynodesMatJsonOutputComponent.html":{},"components/NgxTinynodesMaterialFormFieldDemoComponent.html":{},"components/PageContainerComponent.html":{}}}],["output'},{'name",{"_index":511,"title":{},"body":{"components/NgxEditorJSDemoHomeComponent.html":{},"components/NgxTinynodesMatJsonOutputComponent.html":{},"components/NgxTinynodesMaterialFormFieldDemoComponent.html":{},"components/PageContainerComponent.html":{}}}],["output.component",{"_index":1076,"title":{},"body":{"modules/NgxTinynodesMatJsonOutputModule.html":{}}}],["output.component.html",{"_index":1062,"title":{},"body":{"components/NgxTinynodesMatJsonOutputComponent.html":{}}}],["output.component.ts",{"_index":1061,"title":{},"body":{"components/NgxTinynodesMatJsonOutputComponent.html":{}}}],["output.component.ts:11",{"_index":1067,"title":{},"body":{"components/NgxTinynodesMatJsonOutputComponent.html":{}}}],["output.component.ts:14",{"_index":1066,"title":{},"body":{"components/NgxTinynodesMatJsonOutputComponent.html":{}}}],["output.component.ts:19",{"_index":1069,"title":{},"body":{"components/NgxTinynodesMatJsonOutputComponent.html":{}}}],["output.component.ts:23",{"_index":1068,"title":{},"body":{"components/NgxTinynodesMatJsonOutputComponent.html":{}}}],["output.module",{"_index":1055,"title":{},"body":{"modules/NgxTinynodesComponentsModule.html":{}}}],["output.module.ts",{"_index":1075,"title":{},"body":{"modules/NgxTinynodesMatJsonOutputModule.html":{}}}],["output/mat",{"_index":1054,"title":{},"body":{"modules/NgxTinynodesComponentsModule.html":{},"components/NgxTinynodesMatJsonOutputComponent.html":{},"modules/NgxTinynodesMatJsonOutputModule.html":{}}}],["outputdata",{"_index":144,"title":{},"body":{"interfaces/ChangeMap.html":{},"interfaces/EditorJSChange.html":{},"interfaces/EditorJSClass.html":{},"interfaces/EditorJSInstanceConfig.html":{},"interfaces/EditorMap.html":{},"interfaces/InjectorApiCallOptions.html":{},"interfaces/InjectorApiCallResponse.html":{},"interfaces/InjectorMethodOption.html":{},"interfaces/NgxEditorJSConfig.html":{},"directives/NgxEditorJSDirective.html":{},"interfaces/NgxEditorJSModuleConfig.html":{},"injectables/NgxEditorJSService.html":{},"components/NgxTinynodesMaterialFormFieldDemoComponent.html":{},"components/PageContainerComponent.html":{},"interfaces/ReadyMap.html":{},"interfaces/SavedMap.html":{}}}],["outputs",{"_index":557,"title":{},"body":{"directives/NgxEditorJSDirective.html":{}}}],["outside",{"_index":808,"title":{},"body":{"injectables/NgxEditorJSService.html":{}}}],["over",{"_index":1408,"title":{},"body":{"changelog.html":{}}}],["overall",{"_index":1375,"title":{},"body":{"changelog.html":{}}}],["overflow",{"_index":1205,"title":{},"body":{"components/NgxTinynodesMaterialFormFieldDemoComponent.html":{},"components/PageContainerComponent.html":{}}}],["override",{"_index":1125,"title":{},"body":{"components/NgxTinynodesMaterialFormFieldDemoComponent.html":{},"components/PageContainerComponent.html":{},"modules/PluginHeaderModule.html":{}}}],["overview",{"_index":1775,"title":{"overview.html":{}},"body":{"overview.html":{}}}],["owners",{"_index":1460,"title":{},"body":{"contributing.html":{}}}],["package",{"_index":1427,"title":{"dependencies.html":{}},"body":{"changelog.html":{}}}],["page",{"_index":516,"title":{"interfaces/Page.html":{}},"body":{"components/NgxEditorJSDemoHomeComponent.html":{},"components/NgxTinynodesMatJsonOutputComponent.html":{},"components/NgxTinynodesMaterialFormFieldDemoComponent.html":{},"interfaces/Page.html":{},"interfaces/PageBlock.html":{},"components/PageContainerComponent.html":{},"modules/PageStoreModule.html":{},"injectables/PagesQuery.html":{},"injectables/PagesService.html":{},"interfaces/PagesState.html":{},"injectables/PagesStore.html":{},"interfaces/Tag.html":{},"todo.html":{}}}],["page.id",{"_index":1303,"title":{},"body":{"injectables/PagesService.html":{}}}],["pageblock",{"_index":1213,"title":{"interfaces/PageBlock.html":{}},"body":{"interfaces/Page.html":{},"interfaces/PageBlock.html":{},"injectables/PagesService.html":{},"interfaces/Tag.html":{}}}],["pagecontainercomponent",{"_index":515,"title":{"components/PageContainerComponent.html":{}},"body":{"components/NgxEditorJSDemoHomeComponent.html":{},"modules/NgxEditorjsDemoModule.html":{},"components/NgxTinynodesMatJsonOutputComponent.html":{},"components/NgxTinynodesMaterialFormFieldDemoComponent.html":{},"components/PageContainerComponent.html":{},"overview.html":{},"miscellaneous/variables.html":{}}}],["pageeditor",{"_index":1133,"title":{},"body":{"components/NgxTinynodesMaterialFormFieldDemoComponent.html":{}}}],["pageid",{"_index":1282,"title":{},"body":{"injectables/PagesService.html":{}}}],["pagename",{"_index":1131,"title":{},"body":{"components/NgxTinynodesMaterialFormFieldDemoComponent.html":{}}}],["pages",{"_index":1111,"title":{},"body":{"components/NgxTinynodesMaterialFormFieldDemoComponent.html":{},"components/PageContainerComponent.html":{},"modules/PageStoreModule.html":{},"injectables/PagesService.html":{},"interfaces/PagesState.html":{},"injectables/PagesStore.html":{}}}],["pages.models",{"_index":1266,"title":{},"body":{"injectables/PagesQuery.html":{},"injectables/PagesService.html":{},"interfaces/PagesState.html":{},"injectables/PagesStore.html":{}}}],["pages.query",{"_index":1259,"title":{},"body":{"modules/PageStoreModule.html":{},"injectables/PagesService.html":{}}}],["pages.service",{"_index":1260,"title":{},"body":{"modules/PageStoreModule.html":{}}}],["pages.store",{"_index":1261,"title":{},"body":{"modules/PageStoreModule.html":{},"injectables/PagesQuery.html":{},"injectables/PagesService.html":{}}}],["pagesquery",{"_index":1252,"title":{"injectables/PagesQuery.html":{}},"body":{"modules/PageStoreModule.html":{},"injectables/PagesQuery.html":{},"injectables/PagesService.html":{},"overview.html":{}}}],["pagesservice",{"_index":1106,"title":{"injectables/PagesService.html":{}},"body":{"components/NgxTinynodesMaterialFormFieldDemoComponent.html":{},"components/PageContainerComponent.html":{},"modules/PageStoreModule.html":{},"injectables/PagesService.html":{},"overview.html":{}}}],["pagesstate",{"_index":1267,"title":{"interfaces/PagesState.html":{}},"body":{"injectables/PagesQuery.html":{},"interfaces/PagesState.html":{},"injectables/PagesStore.html":{}}}],["pagesstore",{"_index":1253,"title":{"injectables/PagesStore.html":{}},"body":{"modules/PageStoreModule.html":{},"injectables/PagesQuery.html":{},"injectables/PagesService.html":{},"interfaces/PagesState.html":{},"injectables/PagesStore.html":{},"overview.html":{}}}],["pagestoremodule",{"_index":984,"title":{"modules/PageStoreModule.html":{}},"body":{"modules/NgxEditorjsDemoModule.html":{},"modules/NgxTinynodesMaterialFormFieldDemo.html":{},"modules/PageStoreModule.html":{},"modules.html":{},"overview.html":{}}}],["pagetags",{"_index":1132,"title":{},"body":{"components/NgxTinynodesMaterialFormFieldDemoComponent.html":{},"interfaces/Page.html":{},"interfaces/PageBlock.html":{},"injectables/PagesService.html":{},"interfaces/Tag.html":{}}}],["pagetitle",{"_index":1212,"title":{},"body":{"interfaces/Page.html":{},"interfaces/PageBlock.html":{},"injectables/PagesService.html":{},"interfaces/Tag.html":{}}}],["panel",{"_index":1190,"title":{},"body":{"components/NgxTinynodesMaterialFormFieldDemoComponent.html":{},"components/PageContainerComponent.html":{}}}],["paragraph",{"_index":41,"title":{"interfaces/Paragraph.html":{}},"body":{"interfaces/Block.html":{},"interfaces/Header.html":{},"interfaces/HeaderBlock.html":{},"interfaces/Image.html":{},"interfaces/ImageBlock.html":{},"interfaces/List.html":{},"interfaces/ListBlock.html":{},"interfaces/NgxEditorJSConfig.html":{},"directives/NgxEditorJSDirective.html":{},"interfaces/NgxEditorJSModuleConfig.html":{},"components/NgxTinynodesMaterialFormFieldDemoComponent.html":{},"components/PageContainerComponent.html":{},"interfaces/Paragraph.html":{},"interfaces/ParagraphBlock.html":{},"modules/PluginMarkerModule.html":{},"modules/PluginParagraphModule.html":{}}}],["paragraphblock",{"_index":43,"title":{"interfaces/ParagraphBlock.html":{}},"body":{"interfaces/Block.html":{},"interfaces/Header.html":{},"interfaces/HeaderBlock.html":{},"interfaces/Image.html":{},"interfaces/ImageBlock.html":{},"interfaces/List.html":{},"interfaces/ListBlock.html":{},"interfaces/Paragraph.html":{},"interfaces/ParagraphBlock.html":{},"miscellaneous/typealiases.html":{}}}],["param",{"_index":282,"title":{},"body":{"interfaces/EditorJSMaterialForm.html":{},"directives/NgxEditorJSDirective.html":{},"modules/NgxEditorJSModule.html":{},"injectables/NgxEditorJSPluginService.html":{},"injectables/NgxEditorJSService.html":{},"components/NgxTinynodesMaterialFormFieldDemoComponent.html":{},"components/PageContainerComponent.html":{},"injectables/PagesService.html":{}}}],["parameter",{"_index":1117,"title":{},"body":{"components/NgxTinynodesMaterialFormFieldDemoComponent.html":{}}}],["parameters",{"_index":392,"title":{},"body":{"classes/MockEditorJS.html":{},"injectables/MockNgZone.html":{},"directives/NgxEditorJSDirective.html":{},"modules/NgxEditorJSModule.html":{},"injectables/NgxEditorJSPluginService.html":{},"injectables/NgxEditorJSService.html":{},"components/NgxTinynodesMatJsonOutputComponent.html":{},"components/NgxTinynodesMaterialFormFieldDemoComponent.html":{},"components/PageContainerComponent.html":{},"injectables/PagesQuery.html":{},"injectables/PagesService.html":{},"contributing.html":{},"miscellaneous/functions.html":{}}}],["parentmodule",{"_index":743,"title":{},"body":{"modules/NgxEditorJSModule.html":{}}}],["parse",{"_index":177,"title":{},"body":{"interfaces/EditorJSClass.html":{},"interfaces/EditorJSInstanceConfig.html":{},"interfaces/InjectorApiCallOptions.html":{},"interfaces/InjectorApiCallResponse.html":{},"interfaces/InjectorMethodOption.html":{}}}],["parseint(data.level",{"_index":1339,"title":{},"body":{"modules/PluginHeaderModule.html":{}}}],["participants",{"_index":1539,"title":{},"body":{"contributing.html":{}}}],["participation",{"_index":1495,"title":{},"body":{"contributing.html":{}}}],["particular",{"_index":1757,"title":{},"body":{"license.html":{}}}],["pass",{"_index":109,"title":{},"body":{"interfaces/BlockData.html":{},"interfaces/EditorJSClass.html":{},"interfaces/EditorJSInstanceConfig.html":{},"interfaces/InjectorApiCallOptions.html":{},"interfaces/InjectorApiCallResponse.html":{},"interfaces/InjectorMethodOption.html":{},"directives/NgxEditorJSDirective.html":{},"modules/NgxEditorJSModule.html":{},"injectables/NgxEditorJSService.html":{},"interfaces/PluginConfig.html":{},"interfaces/PluginConfigMap.html":{},"interfaces/ToolSettingsMap.html":{}}}],["passed",{"_index":461,"title":{},"body":{"interfaces/NgxEditorJSConfig.html":{},"interfaces/NgxEditorJSModuleConfig.html":{},"injectables/NgxEditorJSPluginService.html":{},"injectables/NgxEditorJSService.html":{},"miscellaneous/functions.html":{}}}],["paste",{"_index":1183,"title":{},"body":{"components/NgxTinynodesMaterialFormFieldDemoComponent.html":{},"components/PageContainerComponent.html":{}}}],["patches",{"_index":579,"title":{},"body":{"directives/NgxEditorJSDirective.html":{}}}],["path",{"_index":1095,"title":{},"body":{"modules/NgxTinynodesMaterialFormFieldDemo.html":{},"miscellaneous/variables.html":{}}}],["paths",{"_index":623,"title":{},"body":{"directives/NgxEditorJSDirective.html":{}}}],["peer",{"_index":1788,"title":{},"body":{"todo.html":{}}}],["per",{"_index":133,"title":{},"body":{"interfaces/BlockData.html":{},"interfaces/PluginConfig.html":{},"interfaces/PluginConfigMap.html":{},"interfaces/ToolSettingsMap.html":{}}}],["permanent",{"_index":1635,"title":{},"body":{"contributing.html":{}}}],["permanently",{"_index":1581,"title":{},"body":{"contributing.html":{}}}],["permission",{"_index":1487,"title":{},"body":{"contributing.html":{},"license.html":{}}}],["permit",{"_index":1738,"title":{},"body":{"license.html":{}}}],["person",{"_index":1721,"title":{},"body":{"license.html":{}}}],["personal",{"_index":1511,"title":{},"body":{"contributing.html":{}}}],["persons",{"_index":1739,"title":{},"body":{"license.html":{}}}],["physical",{"_index":1552,"title":{},"body":{"contributing.html":{}}}],["pipe",{"_index":924,"title":{},"body":{"injectables/NgxEditorJSService.html":{},"components/NgxTinynodesMaterialFormFieldDemoComponent.html":{},"components/PageContainerComponent.html":{}}}],["pipe(take(1",{"_index":953,"title":{},"body":{"injectables/NgxEditorJSService.html":{},"components/NgxTinynodesMaterialFormFieldDemoComponent.html":{},"components/PageContainerComponent.html":{}}}],["pipe(takeuntil(this.ondestroy",{"_index":375,"title":{},"body":{"interfaces/EditorJSMaterialForm.html":{},"directives/NgxEditorJSDirective.html":{}}}],["pipeline",{"_index":1781,"title":{},"body":{"todo.html":{}}}],["piper",{"_index":1710,"title":{},"body":{"index.html":{},"license.html":{}}}],["placeholder",{"_index":286,"title":{},"body":{"interfaces/EditorJSMaterialForm.html":{},"interfaces/NgxEditorJSConfig.html":{},"directives/NgxEditorJSDirective.html":{},"interfaces/NgxEditorJSModuleConfig.html":{}}}],["placeholder(placeholder",{"_index":291,"title":{},"body":{"interfaces/EditorJSMaterialForm.html":{}}}],["please",{"_index":1455,"title":{},"body":{"contributing.html":{}}}],["pledge",{"_index":1489,"title":{},"body":{"contributing.html":{}}}],["pluck",{"_index":1142,"title":{},"body":{"components/NgxTinynodesMaterialFormFieldDemoComponent.html":{},"components/PageContainerComponent.html":{}}}],["pluck('blocks",{"_index":1235,"title":{},"body":{"components/PageContainerComponent.html":{}}}],["plug",{"_index":1021,"title":{},"body":{"modules/NgxEditorjsPluginsModule.html":{}}}],["plugin",{"_index":38,"title":{},"body":{"interfaces/Block.html":{},"interfaces/BlockData.html":{},"interfaces/Header.html":{},"interfaces/HeaderBlock.html":{},"interfaces/Image.html":{},"interfaces/ImageBlock.html":{},"interfaces/List.html":{},"interfaces/ListBlock.html":{},"directives/NgxEditorJSDirective.html":{},"injectables/NgxEditorJSPluginService.html":{},"modules/NgxEditorJSPluginServiceModule.html":{},"injectables/NgxEditorJSService.html":{},"components/NgxTinynodesMaterialFormFieldDemoComponent.html":{},"components/PageContainerComponent.html":{},"interfaces/Paragraph.html":{},"interfaces/ParagraphBlock.html":{},"interfaces/PluginConfig.html":{},"interfaces/PluginConfigMap.html":{},"modules/PluginHeaderModule.html":{},"interfaces/ToolSettingsMap.html":{},"changelog.html":{},"miscellaneous/functions.html":{},"index.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["plugin.config",{"_index":796,"title":{},"body":{"injectables/NgxEditorJSPluginService.html":{}}}],["plugin.inlinetoolbar",{"_index":794,"title":{},"body":{"injectables/NgxEditorJSPluginService.html":{}}}],["plugin.plugin",{"_index":790,"title":{},"body":{"injectables/NgxEditorJSPluginService.html":{}}}],["plugin.shortcut",{"_index":791,"title":{},"body":{"injectables/NgxEditorJSPluginService.html":{}}}],["plugin.type",{"_index":793,"title":{},"body":{"injectables/NgxEditorJSPluginService.html":{}}}],["plugin_config",{"_index":129,"title":{},"body":{"interfaces/BlockData.html":{},"modules/NgxEditorJSPluginServiceModule.html":{},"modules/PluginCodeModule.html":{},"interfaces/PluginConfig.html":{},"interfaces/PluginConfigMap.html":{},"modules/PluginEmbedModule.html":{},"modules/PluginHeaderModule.html":{},"modules/PluginImageModule.html":{},"modules/PluginInlineCodeModule.html":{},"modules/PluginLinkModule.html":{},"modules/PluginListModule.html":{},"modules/PluginMarkerModule.html":{},"modules/PluginParagraphModule.html":{},"modules/PluginQuoteModule.html":{},"modules/PluginSimpleImageModule.html":{},"modules/PluginWarningModule.html":{},"interfaces/ToolSettingsMap.html":{},"miscellaneous/variables.html":{}}}],["pluginclasses",{"_index":134,"title":{},"body":{"interfaces/BlockData.html":{},"injectables/NgxEditorJSPluginService.html":{},"modules/NgxEditorJSPluginServiceModule.html":{},"modules/PluginCodeModule.html":{},"interfaces/PluginConfig.html":{},"interfaces/PluginConfigMap.html":{},"modules/PluginImageModule.html":{},"modules/PluginLinkModule.html":{},"modules/PluginListModule.html":{},"modules/PluginMarkerModule.html":{},"modules/PluginSimpleImageModule.html":{},"interfaces/ToolSettingsMap.html":{},"miscellaneous/variables.html":{}}}],["plugincodemodule",{"_index":1006,"title":{"modules/PluginCodeModule.html":{}},"body":{"modules/NgxEditorjsPluginsModule.html":{},"modules/NgxTinynodesMaterialFormFieldDemo.html":{},"modules/PluginCodeModule.html":{},"modules.html":{},"overview.html":{}}}],["pluginconfig",{"_index":98,"title":{"interfaces/PluginConfig.html":{}},"body":{"interfaces/BlockData.html":{},"injectables/NgxEditorJSPluginService.html":{},"interfaces/PluginConfig.html":{},"interfaces/PluginConfigMap.html":{},"interfaces/ToolSettingsMap.html":{}}}],["pluginconfigmap",{"_index":132,"title":{"interfaces/PluginConfigMap.html":{}},"body":{"interfaces/BlockData.html":{},"injectables/NgxEditorJSPluginService.html":{},"interfaces/PluginConfig.html":{},"interfaces/PluginConfigMap.html":{},"interfaces/ToolSettingsMap.html":{}}}],["pluginconfigs",{"_index":1688,"title":{},"body":{"miscellaneous/functions.html":{}}}],["pluginembedmodule",{"_index":1007,"title":{"modules/PluginEmbedModule.html":{}},"body":{"modules/NgxEditorjsPluginsModule.html":{},"modules/PluginEmbedModule.html":{},"modules.html":{},"overview.html":{}}}],["pluginheadermodule",{"_index":1008,"title":{"modules/PluginHeaderModule.html":{}},"body":{"modules/NgxEditorjsPluginsModule.html":{},"modules/NgxTinynodesMaterialFormFieldDemo.html":{},"modules/PluginHeaderModule.html":{},"modules.html":{},"overview.html":{}}}],["pluginimagemodule",{"_index":1009,"title":{"modules/PluginImageModule.html":{}},"body":{"modules/NgxEditorjsPluginsModule.html":{},"modules/PluginImageModule.html":{},"modules.html":{},"overview.html":{}}}],["plugininlinecodemodule",{"_index":1010,"title":{"modules/PluginInlineCodeModule.html":{}},"body":{"modules/NgxEditorjsPluginsModule.html":{},"modules/PluginInlineCodeModule.html":{},"modules.html":{},"overview.html":{}}}],["pluginlinkmodule",{"_index":1011,"title":{"modules/PluginLinkModule.html":{}},"body":{"modules/NgxEditorjsPluginsModule.html":{},"modules/NgxTinynodesMaterialFormFieldDemo.html":{},"modules/PluginLinkModule.html":{},"modules.html":{},"overview.html":{}}}],["pluginlistmodule",{"_index":1012,"title":{"modules/PluginListModule.html":{}},"body":{"modules/NgxEditorjsPluginsModule.html":{},"modules/NgxTinynodesMaterialFormFieldDemo.html":{},"modules/PluginListModule.html":{},"modules.html":{},"overview.html":{}}}],["pluginmap",{"_index":785,"title":{},"body":{"injectables/NgxEditorJSPluginService.html":{}}}],["pluginmarkermodule",{"_index":1013,"title":{"modules/PluginMarkerModule.html":{}},"body":{"modules/NgxEditorjsPluginsModule.html":{},"modules/NgxTinynodesMaterialFormFieldDemo.html":{},"modules/PluginMarkerModule.html":{},"modules.html":{},"overview.html":{}}}],["pluginname",{"_index":105,"title":{},"body":{"interfaces/BlockData.html":{},"modules/PluginCodeModule.html":{},"interfaces/PluginConfig.html":{},"interfaces/PluginConfigMap.html":{},"modules/PluginEmbedModule.html":{},"modules/PluginHeaderModule.html":{},"modules/PluginImageModule.html":{},"modules/PluginInlineCodeModule.html":{},"modules/PluginLinkModule.html":{},"modules/PluginListModule.html":{},"modules/PluginMarkerModule.html":{},"modules/PluginParagraphModule.html":{},"modules/PluginQuoteModule.html":{},"modules/PluginSimpleImageModule.html":{},"modules/PluginWarningModule.html":{},"interfaces/ToolSettingsMap.html":{}}}],["pluginparagraphmodule",{"_index":1014,"title":{"modules/PluginParagraphModule.html":{}},"body":{"modules/NgxEditorjsPluginsModule.html":{},"modules/NgxTinynodesMaterialFormFieldDemo.html":{},"modules/PluginParagraphModule.html":{},"modules.html":{},"overview.html":{}}}],["pluginproperty",{"_index":88,"title":{},"body":{"interfaces/BlockData.html":{},"interfaces/PluginConfig.html":{},"interfaces/PluginConfigMap.html":{},"interfaces/ToolSettingsMap.html":{},"miscellaneous/typealiases.html":{}}}],["pluginquotemodule",{"_index":1015,"title":{"modules/PluginQuoteModule.html":{}},"body":{"modules/NgxEditorjsPluginsModule.html":{},"modules/PluginQuoteModule.html":{},"modules.html":{},"overview.html":{}}}],["plugins",{"_index":78,"title":{},"body":{"interfaces/BlockData.html":{},"injectables/NgxEditorJSPluginService.html":{},"injectables/NgxEditorJSService.html":{},"modules/NgxEditorjsDemoModule.html":{},"modules/NgxTinynodesMaterialFormFieldDemo.html":{},"interfaces/PluginConfig.html":{},"interfaces/PluginConfigMap.html":{},"interfaces/ToolSettingsMap.html":{},"changelog.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"index.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["plugins.module.ts",{"_index":1019,"title":{},"body":{"modules/NgxEditorjsPluginsModule.html":{}}}],["plugins/code/code.module",{"_index":1025,"title":{},"body":{"modules/NgxEditorjsPluginsModule.html":{}}}],["plugins/embed/embed.module",{"_index":1026,"title":{},"body":{"modules/NgxEditorjsPluginsModule.html":{}}}],["plugins/header/header.module",{"_index":1027,"title":{},"body":{"modules/NgxEditorjsPluginsModule.html":{}}}],["plugins/image/image.module",{"_index":1028,"title":{},"body":{"modules/NgxEditorjsPluginsModule.html":{}}}],["plugins/inline",{"_index":1029,"title":{},"body":{"modules/NgxEditorjsPluginsModule.html":{}}}],["plugins/link/link.module",{"_index":1032,"title":{},"body":{"modules/NgxEditorjsPluginsModule.html":{}}}],["plugins/list/list.module",{"_index":1033,"title":{},"body":{"modules/NgxEditorjsPluginsModule.html":{}}}],["plugins/marker/marker.module",{"_index":1034,"title":{},"body":{"modules/NgxEditorjsPluginsModule.html":{}}}],["plugins/paragraph/paragraph.module",{"_index":1035,"title":{},"body":{"modules/NgxEditorjsPluginsModule.html":{}}}],["plugins/quote/quote.module",{"_index":1036,"title":{},"body":{"modules/NgxEditorjsPluginsModule.html":{}}}],["plugins/simple",{"_index":1037,"title":{},"body":{"modules/NgxEditorjsPluginsModule.html":{}}}],["plugins/src/lib/ngx",{"_index":1018,"title":{},"body":{"modules/NgxEditorjsPluginsModule.html":{}}}],["plugins/src/lib/plugins/code/code.module.ts",{"_index":1316,"title":{},"body":{"modules/PluginCodeModule.html":{}}}],["plugins/src/lib/plugins/embed/embed.module.ts",{"_index":1324,"title":{},"body":{"modules/PluginEmbedModule.html":{}}}],["plugins/src/lib/plugins/header/header.module.ts",{"_index":1328,"title":{},"body":{"modules/PluginHeaderModule.html":{}}}],["plugins/src/lib/plugins/image/image.module.ts",{"_index":1343,"title":{},"body":{"modules/PluginImageModule.html":{}}}],["plugins/src/lib/plugins/inline",{"_index":1346,"title":{},"body":{"modules/PluginInlineCodeModule.html":{}}}],["plugins/src/lib/plugins/link/link.module.ts",{"_index":1351,"title":{},"body":{"modules/PluginLinkModule.html":{}}}],["plugins/src/lib/plugins/list/list.module.ts",{"_index":1353,"title":{},"body":{"modules/PluginListModule.html":{}}}],["plugins/src/lib/plugins/marker/marker.module.ts",{"_index":1355,"title":{},"body":{"modules/PluginMarkerModule.html":{}}}],["plugins/src/lib/plugins/paragraph/paragraph.module.ts",{"_index":1359,"title":{},"body":{"modules/PluginParagraphModule.html":{}}}],["plugins/src/lib/plugins/quote/quote.module.ts",{"_index":1360,"title":{},"body":{"modules/PluginQuoteModule.html":{}}}],["plugins/src/lib/plugins/simple",{"_index":1363,"title":{},"body":{"modules/PluginSimpleImageModule.html":{}}}],["plugins/src/lib/plugins/warning/warning.module.ts",{"_index":1367,"title":{},"body":{"modules/PluginWarningModule.html":{}}}],["plugins/src/lib/services/plugin",{"_index":746,"title":{},"body":{"injectables/NgxEditorJSPluginService.html":{},"modules/NgxEditorJSPluginServiceModule.html":{}}}],["plugins/src/lib/types/plugins.ts",{"_index":69,"title":{},"body":{"interfaces/BlockData.html":{},"interfaces/PluginConfig.html":{},"interfaces/PluginConfigMap.html":{},"interfaces/ToolSettingsMap.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["plugins/src/lib/types/plugins.ts:107",{"_index":1323,"title":{},"body":{"interfaces/PluginConfigMap.html":{}}}],["plugins/src/lib/types/plugins.ts:43",{"_index":1371,"title":{},"body":{"interfaces/ToolSettingsMap.html":{}}}],["plugins/src/lib/types/plugins.ts:7",{"_index":70,"title":{},"body":{"interfaces/BlockData.html":{}}}],["plugins/src/lib/util/plugin.ts",{"_index":1686,"title":{},"body":{"miscellaneous/functions.html":{}}}],["plugins/warning/warning.module",{"_index":1040,"title":{},"body":{"modules/NgxEditorjsPluginsModule.html":{}}}],["plugins@2.0.0",{"_index":1387,"title":{},"body":{"changelog.html":{}}}],["pluginsimpleimagemodule",{"_index":1016,"title":{"modules/PluginSimpleImageModule.html":{}},"body":{"modules/NgxEditorjsPluginsModule.html":{},"modules/NgxTinynodesMaterialFormFieldDemo.html":{},"modules/PluginSimpleImageModule.html":{},"modules.html":{},"overview.html":{}}}],["plugintype",{"_index":85,"title":{},"body":{"interfaces/BlockData.html":{},"interfaces/PluginConfig.html":{},"interfaces/PluginConfigMap.html":{},"interfaces/ToolSettingsMap.html":{},"miscellaneous/typealiases.html":{}}}],["plugintypes",{"_index":83,"title":{},"body":{"interfaces/BlockData.html":{},"modules/PluginCodeModule.html":{},"interfaces/PluginConfig.html":{},"interfaces/PluginConfigMap.html":{},"modules/PluginEmbedModule.html":{},"modules/PluginHeaderModule.html":{},"modules/PluginImageModule.html":{},"modules/PluginInlineCodeModule.html":{},"modules/PluginLinkModule.html":{},"modules/PluginListModule.html":{},"modules/PluginMarkerModule.html":{},"modules/PluginParagraphModule.html":{},"modules/PluginQuoteModule.html":{},"modules/PluginSimpleImageModule.html":{},"modules/PluginWarningModule.html":{},"interfaces/ToolSettingsMap.html":{},"miscellaneous/enumerations.html":{}}}],["plugintypes.block",{"_index":86,"title":{},"body":{"interfaces/BlockData.html":{},"modules/PluginCodeModule.html":{},"interfaces/PluginConfig.html":{},"interfaces/PluginConfigMap.html":{},"modules/PluginEmbedModule.html":{},"modules/PluginHeaderModule.html":{},"modules/PluginImageModule.html":{},"modules/PluginLinkModule.html":{},"modules/PluginListModule.html":{},"modules/PluginParagraphModule.html":{},"modules/PluginQuoteModule.html":{},"modules/PluginSimpleImageModule.html":{},"modules/PluginWarningModule.html":{},"interfaces/ToolSettingsMap.html":{},"miscellaneous/typealiases.html":{}}}],["plugintypes.inline",{"_index":87,"title":{},"body":{"interfaces/BlockData.html":{},"interfaces/PluginConfig.html":{},"interfaces/PluginConfigMap.html":{},"modules/PluginInlineCodeModule.html":{},"modules/PluginMarkerModule.html":{},"interfaces/ToolSettingsMap.html":{},"miscellaneous/typealiases.html":{}}}],["pluginwarningmodule",{"_index":1017,"title":{"modules/PluginWarningModule.html":{}},"body":{"modules/NgxEditorjsPluginsModule.html":{},"modules/PluginWarningModule.html":{},"modules.html":{},"overview.html":{}}}],["pointing",{"_index":1186,"title":{},"body":{"components/NgxTinynodesMaterialFormFieldDemoComponent.html":{},"components/PageContainerComponent.html":{}}}],["policies",{"_index":1628,"title":{},"body":{"contributing.html":{}}}],["political",{"_index":1548,"title":{},"body":{"contributing.html":{}}}],["portions",{"_index":1748,"title":{},"body":{"license.html":{}}}],["ports",{"_index":1474,"title":{},"body":{"contributing.html":{}}}],["positive",{"_index":1520,"title":{},"body":{"contributing.html":{}}}],["possible",{"_index":1023,"title":{},"body":{"modules/NgxEditorjsPluginsModule.html":{}}}],["posted",{"_index":1629,"title":{},"body":{"contributing.html":{}}}],["posting",{"_index":1596,"title":{},"body":{"contributing.html":{}}}],["private",{"_index":287,"title":{},"body":{"interfaces/EditorJSMaterialForm.html":{},"directives/NgxEditorJSDirective.html":{},"injectables/NgxEditorJSPluginService.html":{},"injectables/NgxEditorJSService.html":{},"components/NgxTinynodesMaterialFormFieldDemoComponent.html":{},"components/PageContainerComponent.html":{},"injectables/PagesService.html":{},"contributing.html":{},"index.html":{}}}],["process",{"_index":628,"title":{},"body":{"directives/NgxEditorJSDirective.html":{},"contributing.html":{}}}],["professional",{"_index":1559,"title":{},"body":{"contributing.html":{}}}],["project",{"_index":1393,"title":{},"body":{"changelog.html":{},"contributing.html":{},"index.html":{}}}],["project's",{"_index":1638,"title":{},"body":{"contributing.html":{}}}],["promise",{"_index":395,"title":{},"body":{"classes/MockEditorJS.html":{},"classes/MockPlugin.html":{},"directives/NgxEditorJSDirective.html":{},"injectables/NgxEditorJSService.html":{}}}],["promise.resolve",{"_index":406,"title":{},"body":{"classes/MockEditorJS.html":{},"classes/MockPlugin.html":{}}}],["properties",{"_index":14,"title":{},"body":{"interfaces/Block.html":{},"interfaces/CreateEditorJSOptions.html":{},"interfaces/EditorJSChange.html":{},"interfaces/EditorJSClass.html":{},"interfaces/EditorJSInstanceConfig.html":{},"interfaces/EditorJSMaterialForm.html":{},"interfaces/Header.html":{},"interfaces/HeaderBlock.html":{},"interfaces/Image.html":{},"interfaces/ImageBlock.html":{},"interfaces/InjectorApiCallOptions.html":{},"interfaces/InjectorApiCallResponse.html":{},"interfaces/InjectorMethodOption.html":{},"interfaces/List.html":{},"interfaces/ListBlock.html":{},"classes/MockEditorJS.html":{},"injectables/MockNgZone.html":{},"interfaces/NgxEditorJSConfig.html":{},"interfaces/NgxEditorJSModuleConfig.html":{},"components/NgxTinynodesMaterialFormFieldDemoComponent.html":{},"interfaces/Page.html":{},"interfaces/PageBlock.html":{},"components/PageContainerComponent.html":{},"injectables/PagesService.html":{},"interfaces/Paragraph.html":{},"interfaces/ParagraphBlock.html":{},"interfaces/PluginConfig.html":{},"interfaces/Tag.html":{},"index.html":{}}}],["property",{"_index":55,"title":{},"body":{"interfaces/Block.html":{},"interfaces/BlockData.html":{},"interfaces/EditorJSClass.html":{},"interfaces/EditorJSInstanceConfig.html":{},"interfaces/Header.html":{},"interfaces/HeaderBlock.html":{},"interfaces/Image.html":{},"interfaces/ImageBlock.html":{},"interfaces/InjectorApiCallOptions.html":{},"interfaces/InjectorApiCallResponse.html":{},"interfaces/InjectorMethodOption.html":{},"interfaces/List.html":{},"interfaces/ListBlock.html":{},"directives/NgxEditorJSDirective.html":{},"interfaces/Paragraph.html":{},"interfaces/ParagraphBlock.html":{},"interfaces/PluginConfig.html":{},"interfaces/PluginConfigMap.html":{},"interfaces/ToolSettingsMap.html":{},"miscellaneous/typealiases.html":{}}}],["protected",{"_index":353,"title":{},"body":{"interfaces/EditorJSMaterialForm.html":{},"directives/NgxEditorJSDirective.html":{}}}],["provide",{"_index":253,"title":{},"body":{"interfaces/EditorJSMaterialForm.html":{},"modules/NgxEditorJSModule.html":{},"modules/NgxEditorJSPluginServiceModule.html":{},"injectables/NgxEditorJSService.html":{},"modules/NgxEditorjsPluginsModule.html":{},"modules/PluginCodeModule.html":{},"modules/PluginEmbedModule.html":{},"modules/PluginHeaderModule.html":{},"modules/PluginImageModule.html":{},"modules/PluginInlineCodeModule.html":{},"modules/PluginLinkModule.html":{},"modules/PluginListModule.html":{},"modules/PluginMarkerModule.html":{},"modules/PluginParagraphModule.html":{},"modules/PluginQuoteModule.html":{},"modules/PluginSimpleImageModule.html":{},"modules/PluginWarningModule.html":{},"changelog.html":{},"index.html":{},"todo.html":{},"miscellaneous/variables.html":{}}}],["provided",{"_index":37,"title":{},"body":{"interfaces/Block.html":{},"interfaces/Header.html":{},"interfaces/HeaderBlock.html":{},"interfaces/Image.html":{},"interfaces/ImageBlock.html":{},"interfaces/List.html":{},"interfaces/ListBlock.html":{},"directives/NgxEditorJSDirective.html":{},"modules/NgxEditorJSModule.html":{},"injectables/NgxEditorJSPluginService.html":{},"injectables/NgxEditorJSService.html":{},"components/PageContainerComponent.html":{},"interfaces/Paragraph.html":{},"interfaces/ParagraphBlock.html":{},"changelog.html":{},"license.html":{}}}],["providedin",{"_index":777,"title":{},"body":{"injectables/NgxEditorJSPluginService.html":{},"injectables/NgxEditorJSService.html":{}}}],["provider",{"_index":100,"title":{},"body":{"interfaces/BlockData.html":{},"interfaces/EditorJSMaterialForm.html":{},"interfaces/PluginConfig.html":{},"interfaces/PluginConfigMap.html":{},"interfaces/ToolSettingsMap.html":{},"miscellaneous/variables.html":{}}}],["providers",{"_index":267,"title":{},"body":{"interfaces/EditorJSMaterialForm.html":{},"modules/NgxEditorJSModule.html":{},"injectables/NgxEditorJSPluginService.html":{},"modules/NgxEditorJSPluginServiceModule.html":{},"modules/NgxEditorjsDemoModule.html":{},"modules/NgxEditorjsPluginsModule.html":{},"modules/NgxTinynodesComponentsModule.html":{},"modules/NgxTinynodesMatJsonOutputModule.html":{},"modules/NgxTinynodesMatTagInputModule.html":{},"modules/NgxTinynodesMaterialFormFieldDemo.html":{},"modules/PageStoreModule.html":{},"modules/PluginCodeModule.html":{},"modules/PluginEmbedModule.html":{},"modules/PluginHeaderModule.html":{},"modules/PluginImageModule.html":{},"modules/PluginInlineCodeModule.html":{},"modules/PluginLinkModule.html":{},"modules/PluginListModule.html":{},"modules/PluginMarkerModule.html":{},"modules/PluginParagraphModule.html":{},"modules/PluginQuoteModule.html":{},"modules/PluginSimpleImageModule.html":{},"modules/PluginWarningModule.html":{},"changelog.html":{},"overview.html":{}}}],["provides",{"_index":175,"title":{},"body":{"interfaces/EditorJSClass.html":{},"interfaces/EditorJSInstanceConfig.html":{},"interfaces/EditorJSMaterialForm.html":{},"interfaces/InjectorApiCallOptions.html":{},"interfaces/InjectorApiCallResponse.html":{},"interfaces/InjectorMethodOption.html":{},"components/NgxEditorJSDemoHomeComponent.html":{},"directives/NgxEditorJSDirective.html":{},"modules/NgxEditorJSModule.html":{},"injectables/NgxEditorJSService.html":{},"modules/NgxEditorjsPluginsModule.html":{},"components/NgxTinynodesMaterialFormFieldDemoComponent.html":{},"components/PageContainerComponent.html":{},"injectables/PagesService.html":{},"modules/PluginCodeModule.html":{},"modules/PluginEmbedModule.html":{},"modules/PluginHeaderModule.html":{},"modules/PluginImageModule.html":{},"modules/PluginInlineCodeModule.html":{},"modules/PluginLinkModule.html":{},"modules/PluginListModule.html":{},"modules/PluginMarkerModule.html":{},"modules/PluginParagraphModule.html":{},"modules/PluginQuoteModule.html":{},"modules/PluginSimpleImageModule.html":{},"modules/PluginWarningModule.html":{},"changelog.html":{},"index.html":{}}}],["providing",{"_index":497,"title":{},"body":{"components/NgxEditorJSDemoHomeComponent.html":{}}}],["provied",{"_index":463,"title":{},"body":{"interfaces/NgxEditorJSConfig.html":{},"interfaces/NgxEditorJSModuleConfig.html":{},"miscellaneous/variables.html":{}}}],["public",{"_index":273,"title":{},"body":{"interfaces/EditorJSMaterialForm.html":{},"directives/NgxEditorJSDirective.html":{},"injectables/NgxEditorJSPluginService.html":{},"injectables/NgxEditorJSService.html":{},"components/NgxTinynodesMatJsonOutputComponent.html":{},"components/NgxTinynodesMaterialFormFieldDemoComponent.html":{},"components/PageContainerComponent.html":{},"injectables/PagesService.html":{},"contributing.html":{}}}],["publish",{"_index":1732,"title":{},"body":{"license.html":{},"todo.html":{}}}],["publishing",{"_index":1550,"title":{},"body":{"contributing.html":{},"todo.html":{}}}],["pull",{"_index":1465,"title":{},"body":{"contributing.html":{}}}],["purpose",{"_index":1758,"title":{},"body":{"license.html":{}}}],["query",{"_index":1271,"title":{},"body":{"injectables/PagesService.html":{}}}],["queryentity",{"_index":1263,"title":{},"body":{"injectables/PagesQuery.html":{}}}],["quote",{"_index":1361,"title":{},"body":{"modules/PluginQuoteModule.html":{}}}],["r",{"_index":921,"title":{},"body":{"injectables/NgxEditorJSService.html":{}}}],["race",{"_index":1513,"title":{},"body":{"contributing.html":{}}}],["re",{"_index":1389,"title":{},"body":{"changelog.html":{}}}],["reactive",{"_index":1167,"title":{},"body":{"components/NgxTinynodesMaterialFormFieldDemoComponent.html":{},"index.html":{}}}],["reactiveformsmodule",{"_index":988,"title":{},"body":{"modules/NgxEditorjsDemoModule.html":{},"modules/NgxTinynodesMaterialFormFieldDemo.html":{}}}],["read",{"_index":318,"title":{},"body":{"interfaces/EditorJSMaterialForm.html":{},"components/PageContainerComponent.html":{}}}],["readme",{"_index":1705,"title":{},"body":{"index.html":{}}}],["readme.md",{"_index":1469,"title":{},"body":{"contributing.html":{}}}],["readonly",{"_index":319,"title":{},"body":{"interfaces/EditorJSMaterialForm.html":{},"directives/NgxEditorJSDirective.html":{},"injectables/NgxEditorJSPluginService.html":{},"injectables/NgxEditorJSService.html":{},"components/NgxTinynodesMatJsonOutputComponent.html":{},"components/NgxTinynodesMaterialFormFieldDemoComponent.html":{},"components/PageContainerComponent.html":{},"injectables/PagesService.html":{}}}],["ready",{"_index":150,"title":{},"body":{"interfaces/ChangeMap.html":{},"interfaces/EditorJSChange.html":{},"interfaces/EditorJSClass.html":{},"interfaces/EditorJSInstanceConfig.html":{},"interfaces/EditorMap.html":{},"interfaces/InjectorApiCallOptions.html":{},"interfaces/InjectorApiCallResponse.html":{},"interfaces/InjectorMethodOption.html":{},"directives/NgxEditorJSDirective.html":{},"injectables/NgxEditorJSService.html":{},"components/PageContainerComponent.html":{},"interfaces/ReadyMap.html":{},"interfaces/SavedMap.html":{}}}],["readymap",{"_index":152,"title":{"interfaces/ReadyMap.html":{}},"body":{"interfaces/ChangeMap.html":{},"interfaces/EditorJSChange.html":{},"interfaces/EditorMap.html":{},"injectables/NgxEditorJSService.html":{},"interfaces/ReadyMap.html":{},"interfaces/SavedMap.html":{}}}],["reasonably",{"_index":1556,"title":{},"body":{"contributing.html":{}}}],["reduce((pluginmap",{"_index":784,"title":{},"body":{"injectables/NgxEditorJSPluginService.html":{}}}],["ref",{"_index":351,"title":{},"body":{"interfaces/EditorJSMaterialForm.html":{},"injectables/NgxEditorJSService.html":{},"components/NgxTinynodesMaterialFormFieldDemoComponent.html":{},"components/PageContainerComponent.html":{}}}],["reflect",{"_index":1412,"title":{},"body":{"changelog.html":{}}}],["regard",{"_index":1624,"title":{},"body":{"contributing.html":{}}}],["regardless",{"_index":1501,"title":{},"body":{"contributing.html":{}}}],["regular",{"_index":1198,"title":{},"body":{"components/NgxTinynodesMaterialFormFieldDemoComponent.html":{}}}],["reject",{"_index":1573,"title":{},"body":{"contributing.html":{}}}],["related",{"_index":676,"title":{},"body":{"directives/NgxEditorJSDirective.html":{},"changelog.html":{}}}],["release",{"_index":1409,"title":{},"body":{"changelog.html":{}}}],["released",{"_index":1385,"title":{},"body":{"changelog.html":{}}}],["religion",{"_index":1514,"title":{},"body":{"contributing.html":{}}}],["remark",{"_index":880,"title":{},"body":{"injectables/NgxEditorJSService.html":{}}}],["remarks",{"_index":907,"title":{},"body":{"injectables/NgxEditorJSService.html":{}}}],["remove",{"_index":1331,"title":{},"body":{"modules/PluginHeaderModule.html":{},"contributing.html":{}}}],["removeblock",{"_index":1273,"title":{},"body":{"injectables/PagesService.html":{}}}],["removeblock(pageid",{"_index":1287,"title":{},"body":{"injectables/PagesService.html":{}}}],["removed",{"_index":1286,"title":{},"body":{"injectables/PagesService.html":{},"changelog.html":{},"contributing.html":{}}}],["removes",{"_index":1285,"title":{},"body":{"injectables/PagesService.html":{}}}],["render",{"_index":400,"title":{},"body":{"classes/MockEditorJS.html":{},"classes/MockPlugin.html":{},"interfaces/NgxEditorJSConfig.html":{},"directives/NgxEditorJSDirective.html":{},"interfaces/NgxEditorJSModuleConfig.html":{},"injectables/NgxEditorJSService.html":{},"components/NgxTinynodesMaterialFormFieldDemoComponent.html":{},"injectables/PagesService.html":{}}}],["repercussions",{"_index":1636,"title":{},"body":{"contributing.html":{}}}],["repo",{"_index":1318,"title":{},"body":{"modules/PluginCodeModule.html":{},"modules/PluginEmbedModule.html":{},"modules/PluginHeaderModule.html":{},"modules/PluginImageModule.html":{},"modules/PluginInlineCodeModule.html":{},"modules/PluginLinkModule.html":{},"modules/PluginListModule.html":{},"modules/PluginMarkerModule.html":{},"modules/PluginParagraphModule.html":{},"modules/PluginQuoteModule.html":{},"modules/PluginSimpleImageModule.html":{},"modules/PluginWarningModule.html":{},"todo.html":{}}}],["repo](https://github.com/editor",{"_index":1321,"title":{},"body":{"modules/PluginCodeModule.html":{},"modules/PluginEmbedModule.html":{},"modules/PluginHeaderModule.html":{},"modules/PluginImageModule.html":{},"modules/PluginInlineCodeModule.html":{},"modules/PluginLinkModule.html":{},"modules/PluginListModule.html":{},"modules/PluginMarkerModule.html":{},"modules/PluginParagraphModule.html":{},"modules/PluginQuoteModule.html":{},"modules/PluginSimpleImageModule.html":{},"modules/PluginWarningModule.html":{}}}],["report",{"_index":1431,"title":{},"body":{"changelog.html":{}}}],["reported",{"_index":1611,"title":{},"body":{"contributing.html":{}}}],["reporter",{"_index":1625,"title":{},"body":{"contributing.html":{}}}],["repository",{"_index":1454,"title":{},"body":{"contributing.html":{},"index.html":{}}}],["represent",{"_index":1480,"title":{},"body":{"contributing.html":{}}}],["representation",{"_index":1605,"title":{},"body":{"contributing.html":{}}}],["representative",{"_index":1602,"title":{},"body":{"contributing.html":{}}}],["representing",{"_index":1592,"title":{},"body":{"contributing.html":{}}}],["request",{"_index":961,"title":{},"body":{"injectables/NgxEditorJSService.html":{},"contributing.html":{}}}],["requied",{"_index":301,"title":{},"body":{"interfaces/EditorJSMaterialForm.html":{}}}],["require",{"_index":1801,"title":{},"body":{"miscellaneous/variables.html":{}}}],["require.context",{"_index":1805,"title":{},"body":{"miscellaneous/variables.html":{}}}],["required",{"_index":182,"title":{},"body":{"interfaces/EditorJSClass.html":{},"interfaces/EditorJSInstanceConfig.html":{},"interfaces/EditorJSMaterialForm.html":{},"interfaces/InjectorApiCallOptions.html":{},"interfaces/InjectorApiCallResponse.html":{},"interfaces/InjectorMethodOption.html":{},"injectables/NgxEditorJSService.html":{},"modules/NgxEditorjsPluginsModule.html":{},"index.html":{}}}],["required(required",{"_index":303,"title":{},"body":{"interfaces/EditorJSMaterialForm.html":{}}}],["reset",{"_index":714,"title":{},"body":{"modules/NgxEditorJSModule.html":{},"modules/NgxEditorJSPluginServiceModule.html":{},"modules/NgxEditorjsDemoModule.html":{},"modules/NgxEditorjsPluginsModule.html":{},"modules/NgxTinynodesComponentsModule.html":{},"modules/NgxTinynodesMatJsonOutputModule.html":{},"modules/NgxTinynodesMatTagInputModule.html":{},"modules/NgxTinynodesMaterialFormFieldDemo.html":{},"components/NgxTinynodesMaterialFormFieldDemoComponent.html":{},"components/PageContainerComponent.html":{},"modules/PageStoreModule.html":{},"overview.html":{}}}],["resetting",{"_index":866,"title":{},"body":{"injectables/NgxEditorJSService.html":{}}}],["resolved",{"_index":909,"title":{},"body":{"injectables/NgxEditorJSService.html":{},"changelog.html":{}}}],["respectful",{"_index":1524,"title":{},"body":{"contributing.html":{}}}],["response",{"_index":211,"title":{},"body":{"interfaces/EditorJSClass.html":{},"interfaces/EditorJSInstanceConfig.html":{},"interfaces/InjectorApiCallOptions.html":{},"interfaces/InjectorApiCallResponse.html":{},"interfaces/InjectorMethodOption.html":{},"injectables/NgxEditorJSService.html":{},"contributing.html":{}}}],["responsibilities",{"_index":1561,"title":{},"body":{"contributing.html":{}}}],["responsibility",{"_index":1571,"title":{},"body":{"contributing.html":{}}}],["responsible",{"_index":1562,"title":{},"body":{"contributing.html":{}}}],["restriction",{"_index":1727,"title":{},"body":{"license.html":{}}}],["result",{"_index":65,"title":{},"body":{"interfaces/Block.html":{},"interfaces/BlockData.html":{},"interfaces/ChangeMap.html":{},"interfaces/CreateEditorJSOptions.html":{},"interfaces/EditorJSChange.html":{},"interfaces/EditorJSClass.html":{},"interfaces/EditorJSInstanceConfig.html":{},"interfaces/EditorJSMaterialForm.html":{},"interfaces/EditorMap.html":{},"interfaces/Header.html":{},"interfaces/HeaderBlock.html":{},"interfaces/Image.html":{},"interfaces/ImageBlock.html":{},"interfaces/InjectorApiCallOptions.html":{},"interfaces/InjectorApiCallResponse.html":{},"interfaces/InjectorMethodOption.html":{},"interfaces/List.html":{},"interfaces/ListBlock.html":{},"classes/MockEditorJS.html":{},"injectables/MockNgZone.html":{},"classes/MockPlugin.html":{},"interfaces/NgxEditorJSConfig.html":{},"components/NgxEditorJSDemoHomeComponent.html":{},"modules/NgxEditorJSDemoMaterialModule.html":{},"directives/NgxEditorJSDirective.html":{},"modules/NgxEditorJSModule.html":{},"interfaces/NgxEditorJSModuleConfig.html":{},"injectables/NgxEditorJSPluginService.html":{},"modules/NgxEditorJSPluginServiceModule.html":{},"injectables/NgxEditorJSService.html":{},"modules/NgxEditorjsDemoModule.html":{},"modules/NgxEditorjsPluginsModule.html":{},"modules/NgxTinynodesComponentsModule.html":{},"interfaces/NgxTinynodesMatFieldComponent.html":{},"components/NgxTinynodesMatJsonOutputComponent.html":{},"modules/NgxTinynodesMatJsonOutputModule.html":{},"modules/NgxTinynodesMatTagInputModule.html":{},"modules/NgxTinynodesMaterialFormFieldDemo.html":{},"components/NgxTinynodesMaterialFormFieldDemoComponent.html":{},"interfaces/Page.html":{},"interfaces/PageBlock.html":{},"components/PageContainerComponent.html":{},"modules/PageStoreModule.html":{},"injectables/PagesQuery.html":{},"injectables/PagesService.html":{},"interfaces/PagesState.html":{},"injectables/PagesStore.html":{},"interfaces/Paragraph.html":{},"interfaces/ParagraphBlock.html":{},"modules/PluginCodeModule.html":{},"interfaces/PluginConfig.html":{},"interfaces/PluginConfigMap.html":{},"modules/PluginEmbedModule.html":{},"modules/PluginHeaderModule.html":{},"modules/PluginImageModule.html":{},"modules/PluginInlineCodeModule.html":{},"modules/PluginLinkModule.html":{},"modules/PluginListModule.html":{},"modules/PluginMarkerModule.html":{},"modules/PluginParagraphModule.html":{},"modules/PluginQuoteModule.html":{},"modules/PluginSimpleImageModule.html":{},"modules/PluginWarningModule.html":{},"interfaces/ReadyMap.html":{},"interfaces/SavedMap.html":{},"interfaces/Tag.html":{},"interfaces/ToolSettingsMap.html":{},"changelog.html":{},"contributing.html":{},"dependencies.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"index.html":{},"license.html":{},"modules.html":{},"overview.html":{},"todo.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["results",{"_index":67,"title":{},"body":{"interfaces/Block.html":{},"interfaces/BlockData.html":{},"interfaces/ChangeMap.html":{},"interfaces/CreateEditorJSOptions.html":{},"interfaces/EditorJSChange.html":{},"interfaces/EditorJSClass.html":{},"interfaces/EditorJSInstanceConfig.html":{},"interfaces/EditorJSMaterialForm.html":{},"interfaces/EditorMap.html":{},"interfaces/Header.html":{},"interfaces/HeaderBlock.html":{},"interfaces/Image.html":{},"interfaces/ImageBlock.html":{},"interfaces/InjectorApiCallOptions.html":{},"interfaces/InjectorApiCallResponse.html":{},"interfaces/InjectorMethodOption.html":{},"interfaces/List.html":{},"interfaces/ListBlock.html":{},"classes/MockEditorJS.html":{},"injectables/MockNgZone.html":{},"classes/MockPlugin.html":{},"interfaces/NgxEditorJSConfig.html":{},"components/NgxEditorJSDemoHomeComponent.html":{},"modules/NgxEditorJSDemoMaterialModule.html":{},"directives/NgxEditorJSDirective.html":{},"modules/NgxEditorJSModule.html":{},"interfaces/NgxEditorJSModuleConfig.html":{},"injectables/NgxEditorJSPluginService.html":{},"modules/NgxEditorJSPluginServiceModule.html":{},"injectables/NgxEditorJSService.html":{},"modules/NgxEditorjsDemoModule.html":{},"modules/NgxEditorjsPluginsModule.html":{},"modules/NgxTinynodesComponentsModule.html":{},"interfaces/NgxTinynodesMatFieldComponent.html":{},"components/NgxTinynodesMatJsonOutputComponent.html":{},"modules/NgxTinynodesMatJsonOutputModule.html":{},"modules/NgxTinynodesMatTagInputModule.html":{},"modules/NgxTinynodesMaterialFormFieldDemo.html":{},"components/NgxTinynodesMaterialFormFieldDemoComponent.html":{},"interfaces/Page.html":{},"interfaces/PageBlock.html":{},"components/PageContainerComponent.html":{},"modules/PageStoreModule.html":{},"injectables/PagesQuery.html":{},"injectables/PagesService.html":{},"interfaces/PagesState.html":{},"injectables/PagesStore.html":{},"interfaces/Paragraph.html":{},"interfaces/ParagraphBlock.html":{},"modules/PluginCodeModule.html":{},"interfaces/PluginConfig.html":{},"interfaces/PluginConfigMap.html":{},"modules/PluginEmbedModule.html":{},"modules/PluginHeaderModule.html":{},"modules/PluginImageModule.html":{},"modules/PluginInlineCodeModule.html":{},"modules/PluginLinkModule.html":{},"modules/PluginListModule.html":{},"modules/PluginMarkerModule.html":{},"modules/PluginParagraphModule.html":{},"modules/PluginQuoteModule.html":{},"modules/PluginSimpleImageModule.html":{},"modules/PluginWarningModule.html":{},"interfaces/ReadyMap.html":{},"interfaces/SavedMap.html":{},"interfaces/Tag.html":{},"interfaces/ToolSettingsMap.html":{},"changelog.html":{},"contributing.html":{},"dependencies.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"index.html":{},"license.html":{},"modules.html":{},"overview.html":{},"todo.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["return",{"_index":280,"title":{},"body":{"interfaces/EditorJSMaterialForm.html":{},"classes/MockEditorJS.html":{},"injectables/MockNgZone.html":{},"classes/MockPlugin.html":{},"directives/NgxEditorJSDirective.html":{},"modules/NgxEditorJSModule.html":{},"injectables/NgxEditorJSPluginService.html":{},"injectables/NgxEditorJSService.html":{},"components/NgxTinynodesMaterialFormFieldDemoComponent.html":{},"components/PageContainerComponent.html":{},"injectables/PagesService.html":{},"modules/PluginHeaderModule.html":{},"miscellaneous/functions.html":{}}}],["returning",{"_index":1682,"title":{},"body":{"miscellaneous/functions.html":{}}}],["returns",{"_index":171,"title":{},"body":{"interfaces/EditorJSClass.html":{},"interfaces/EditorJSInstanceConfig.html":{},"interfaces/InjectorApiCallOptions.html":{},"interfaces/InjectorApiCallResponse.html":{},"interfaces/InjectorMethodOption.html":{},"injectables/MockNgZone.html":{},"classes/MockPlugin.html":{},"directives/NgxEditorJSDirective.html":{},"modules/NgxEditorJSModule.html":{},"injectables/NgxEditorJSPluginService.html":{},"injectables/NgxEditorJSService.html":{},"components/NgxTinynodesMatJsonOutputComponent.html":{},"components/NgxTinynodesMaterialFormFieldDemoComponent.html":{},"components/PageContainerComponent.html":{},"injectables/PagesService.html":{},"miscellaneous/functions.html":{}}}],["reviewed",{"_index":1616,"title":{},"body":{"contributing.html":{}}}],["reviewer",{"_index":1488,"title":{},"body":{"contributing.html":{}}}],["right",{"_index":1570,"title":{},"body":{"contributing.html":{}}}],["rights",{"_index":1730,"title":{},"body":{"license.html":{}}}],["root",{"_index":719,"title":{},"body":{"modules/NgxEditorJSModule.html":{},"injectables/NgxEditorJSPluginService.html":{},"injectables/NgxEditorJSService.html":{}}}],["routable",{"_index":1098,"title":{},"body":{"components/NgxTinynodesMaterialFormFieldDemoComponent.html":{}}}],["route",{"_index":1810,"title":{},"body":{"miscellaneous/variables.html":{}}}],["routermodule",{"_index":989,"title":{},"body":{"modules/NgxEditorjsDemoModule.html":{},"modules/NgxTinynodesMaterialFormFieldDemo.html":{}}}],["routermodule.forchild(ngxeditorjsdemoroutes",{"_index":1002,"title":{},"body":{"modules/NgxEditorjsDemoModule.html":{}}}],["routermodule.forchild(routes",{"_index":1096,"title":{},"body":{"modules/NgxTinynodesMaterialFormFieldDemo.html":{}}}],["routes",{"_index":1094,"title":{},"body":{"modules/NgxTinynodesMaterialFormFieldDemo.html":{}}}],["run",{"_index":423,"title":{},"body":{"injectables/MockNgZone.html":{},"injectables/NgxEditorJSService.html":{},"index.html":{}}}],["run(fn",{"_index":427,"title":{},"body":{"injectables/MockNgZone.html":{}}}],["runoutsideangular",{"_index":424,"title":{},"body":{"injectables/MockNgZone.html":{}}}],["runoutsideangular(fn",{"_index":430,"title":{},"body":{"injectables/MockNgZone.html":{}}}],["rxjs",{"_index":145,"title":{},"body":{"interfaces/ChangeMap.html":{},"interfaces/EditorJSChange.html":{},"interfaces/EditorJSMaterialForm.html":{},"interfaces/EditorMap.html":{},"directives/NgxEditorJSDirective.html":{},"injectables/NgxEditorJSService.html":{},"components/NgxTinynodesMaterialFormFieldDemoComponent.html":{},"components/PageContainerComponent.html":{},"injectables/PagesService.html":{},"interfaces/ReadyMap.html":{},"interfaces/SavedMap.html":{},"dependencies.html":{}}}],["rxjs/operators",{"_index":243,"title":{},"body":{"interfaces/EditorJSMaterialForm.html":{},"directives/NgxEditorJSDirective.html":{},"injectables/NgxEditorJSService.html":{},"components/NgxTinynodesMaterialFormFieldDemoComponent.html":{},"components/PageContainerComponent.html":{}}}],["sanitizer",{"_index":446,"title":{},"body":{"interfaces/NgxEditorJSConfig.html":{},"directives/NgxEditorJSDirective.html":{},"interfaces/NgxEditorJSModuleConfig.html":{}}}],["sanitizerconfig",{"_index":460,"title":{},"body":{"interfaces/NgxEditorJSConfig.html":{},"directives/NgxEditorJSDirective.html":{},"interfaces/NgxEditorJSModuleConfig.html":{}}}],["save",{"_index":141,"title":{},"body":{"interfaces/ChangeMap.html":{},"interfaces/EditorJSChange.html":{},"interfaces/EditorJSClass.html":{},"interfaces/EditorJSInstanceConfig.html":{},"interfaces/EditorMap.html":{},"interfaces/InjectorApiCallOptions.html":{},"interfaces/InjectorApiCallResponse.html":{},"interfaces/InjectorMethodOption.html":{},"classes/MockEditorJS.html":{},"classes/MockPlugin.html":{},"directives/NgxEditorJSDirective.html":{},"injectables/NgxEditorJSService.html":{},"components/NgxTinynodesMaterialFormFieldDemoComponent.html":{},"components/PageContainerComponent.html":{},"injectables/PagesService.html":{},"interfaces/ReadyMap.html":{},"interfaces/SavedMap.html":{},"todo.html":{}}}],["save(options",{"_index":857,"title":{},"body":{"injectables/NgxEditorJSService.html":{}}}],["saved",{"_index":607,"title":{},"body":{"directives/NgxEditorJSDirective.html":{},"components/PageContainerComponent.html":{}}}],["savedmap",{"_index":153,"title":{"interfaces/SavedMap.html":{}},"body":{"interfaces/ChangeMap.html":{},"interfaces/EditorJSChange.html":{},"interfaces/EditorMap.html":{},"injectables/NgxEditorJSService.html":{},"interfaces/ReadyMap.html":{},"interfaces/SavedMap.html":{}}}],["saver",{"_index":388,"title":{},"body":{"classes/MockEditorJS.html":{},"classes/MockPlugin.html":{},"injectables/NgxEditorJSService.html":{}}}],["saving",{"_index":1188,"title":{},"body":{"components/NgxTinynodesMaterialFormFieldDemoComponent.html":{},"components/PageContainerComponent.html":{}}}],["scheme",{"_index":1482,"title":{},"body":{"contributing.html":{}}}],["scope",{"_index":1588,"title":{},"body":{"contributing.html":{}}}],["scripts",{"_index":1443,"title":{},"body":{"changelog.html":{}}}],["scroll",{"_index":1206,"title":{},"body":{"components/NgxTinynodesMaterialFormFieldDemoComponent.html":{},"components/PageContainerComponent.html":{}}}],["searchable",{"_index":1693,"title":{},"body":{"index.html":{}}}],["second",{"_index":834,"title":{},"body":{"injectables/NgxEditorJSService.html":{},"contributing.html":{}}}],["seconds",{"_index":1164,"title":{},"body":{"components/NgxTinynodesMaterialFormFieldDemoComponent.html":{}}}],["section",{"_index":491,"title":{},"body":{"components/NgxEditorJSDemoHomeComponent.html":{}}}],["see",{"_index":1191,"title":{},"body":{"components/NgxTinynodesMaterialFormFieldDemoComponent.html":{},"components/PageContainerComponent.html":{},"modules/PluginCodeModule.html":{},"modules/PluginEmbedModule.html":{},"modules/PluginHeaderModule.html":{},"modules/PluginImageModule.html":{},"modules/PluginInlineCodeModule.html":{},"modules/PluginLinkModule.html":{},"modules/PluginListModule.html":{},"modules/PluginMarkerModule.html":{},"modules/PluginParagraphModule.html":{},"modules/PluginQuoteModule.html":{},"modules/PluginSimpleImageModule.html":{},"modules/PluginWarningModule.html":{},"changelog.html":{},"index.html":{}}}],["selection",{"_index":1787,"title":{},"body":{"todo.html":{}}}],["selector",{"_index":262,"title":{},"body":{"interfaces/EditorJSMaterialForm.html":{},"components/NgxEditorJSDemoHomeComponent.html":{},"directives/NgxEditorJSDirective.html":{},"components/NgxTinynodesMatJsonOutputComponent.html":{},"components/NgxTinynodesMaterialFormFieldDemoComponent.html":{},"components/PageContainerComponent.html":{}}}],["self",{"_index":235,"title":{},"body":{"interfaces/EditorJSMaterialForm.html":{}}}],["sell",{"_index":1736,"title":{},"body":{"license.html":{}}}],["semver",{"_index":1483,"title":{},"body":{"contributing.html":{}}}],["separately",{"_index":1630,"title":{},"body":{"contributing.html":{}}}],["service",{"_index":564,"title":{},"body":{"directives/NgxEditorJSDirective.html":{},"injectables/NgxEditorJSPluginService.html":{},"injectables/NgxEditorJSService.html":{},"components/NgxTinynodesMaterialFormFieldDemoComponent.html":{},"components/PageContainerComponent.html":{},"injectables/PagesService.html":{},"changelog.html":{},"miscellaneous/functions.html":{},"index.html":{},"todo.html":{}}}],["service.module",{"_index":1042,"title":{},"body":{"modules/NgxEditorjsPluginsModule.html":{}}}],["service.module.ts",{"_index":801,"title":{},"body":{"modules/NgxEditorJSPluginServiceModule.html":{}}}],["service.service",{"_index":804,"title":{},"body":{"modules/NgxEditorJSPluginServiceModule.html":{}}}],["service.service.ts",{"_index":747,"title":{},"body":{"injectables/NgxEditorJSPluginService.html":{}}}],["service.service.ts:13",{"_index":757,"title":{},"body":{"injectables/NgxEditorJSPluginService.html":{}}}],["service.service.ts:23",{"_index":760,"title":{},"body":{"injectables/NgxEditorJSPluginService.html":{}}}],["service.service.ts:32",{"_index":759,"title":{},"body":{"injectables/NgxEditorJSPluginService.html":{}}}],["service.service.ts:40",{"_index":763,"title":{},"body":{"injectables/NgxEditorJSPluginService.html":{}}}],["service.service.ts:54",{"_index":768,"title":{},"body":{"injectables/NgxEditorJSPluginService.html":{}}}],["service.service.ts:68",{"_index":771,"title":{},"body":{"injectables/NgxEditorJSPluginService.html":{}}}],["service.ts",{"_index":160,"title":{},"body":{"interfaces/CreateEditorJSOptions.html":{}}}],["services",{"_index":550,"title":{},"body":{"directives/NgxEditorJSDirective.html":{},"index.html":{}}}],["services/editorjs.service",{"_index":248,"title":{},"body":{"interfaces/EditorJSMaterialForm.html":{},"directives/NgxEditorJSDirective.html":{},"modules/NgxEditorJSModule.html":{}}}],["services/plugin",{"_index":1041,"title":{},"body":{"modules/NgxEditorjsPluginsModule.html":{}}}],["set",{"_index":111,"title":{},"body":{"interfaces/BlockData.html":{},"interfaces/CreateEditorJSOptions.html":{},"interfaces/EditorJSMaterialForm.html":{},"interfaces/NgxEditorJSConfig.html":{},"directives/NgxEditorJSDirective.html":{},"interfaces/NgxEditorJSModuleConfig.html":{},"injectables/NgxEditorJSService.html":{},"components/NgxTinynodesMaterialFormFieldDemoComponent.html":{},"interfaces/PluginConfig.html":{},"interfaces/PluginConfigMap.html":{},"interfaces/ToolSettingsMap.html":{},"miscellaneous/functions.html":{},"index.html":{}}}],["setblocks",{"_index":1274,"title":{},"body":{"injectables/PagesService.html":{}}}],["setblocks(pageid",{"_index":1289,"title":{},"body":{"injectables/PagesService.html":{}}}],["setdescribedbyids(ids",{"_index":336,"title":{},"body":{"interfaces/EditorJSMaterialForm.html":{}}}],["sets",{"_index":575,"title":{},"body":{"directives/NgxEditorJSDirective.html":{},"modules/NgxEditorJSModule.html":{},"injectables/NgxEditorJSService.html":{},"components/NgxTinynodesMaterialFormFieldDemoComponent.html":{},"components/PageContainerComponent.html":{}}}],["setting",{"_index":1560,"title":{},"body":{"contributing.html":{},"todo.html":{}}}],["settings",{"_index":90,"title":{},"body":{"interfaces/BlockData.html":{},"interfaces/PluginConfig.html":{},"interfaces/PluginConfigMap.html":{},"interfaces/ToolSettingsMap.html":{},"miscellaneous/typealiases.html":{}}}],["setup",{"_index":814,"title":{},"body":{"injectables/NgxEditorJSService.html":{}}}],["setupsubjects(options",{"_index":967,"title":{},"body":{"injectables/NgxEditorJSService.html":{}}}],["several",{"_index":812,"title":{},"body":{"injectables/NgxEditorJSService.html":{},"modules/NgxEditorjsPluginsModule.html":{},"changelog.html":{}}}],["sexual",{"_index":1515,"title":{},"body":{"contributing.html":{}}}],["sexualized",{"_index":1540,"title":{},"body":{"contributing.html":{}}}],["shall",{"_index":1745,"title":{},"body":{"license.html":{}}}],["ships",{"_index":1707,"title":{},"body":{"index.html":{}}}],["shortcut",{"_index":106,"title":{},"body":{"interfaces/BlockData.html":{},"interfaces/PluginConfig.html":{},"interfaces/PluginConfigMap.html":{},"modules/PluginInlineCodeModule.html":{},"modules/PluginMarkerModule.html":{},"interfaces/ToolSettingsMap.html":{}}}],["shouldlabelfloat",{"_index":328,"title":{},"body":{"interfaces/EditorJSMaterialForm.html":{}}}],["show",{"_index":594,"title":{},"body":{"directives/NgxEditorJSDirective.html":{}}}],["showing",{"_index":1534,"title":{},"body":{"contributing.html":{}}}],["shown",{"_index":453,"title":{},"body":{"interfaces/NgxEditorJSConfig.html":{},"interfaces/NgxEditorJSModuleConfig.html":{}}}],["shows",{"_index":496,"title":{},"body":{"components/NgxEditorJSDemoHomeComponent.html":{}}}],["sign",{"_index":1485,"title":{},"body":{"contributing.html":{}}}],["simple",{"_index":1366,"title":{},"body":{"modules/PluginSimpleImageModule.html":{}}}],["simplechanges",{"_index":620,"title":{},"body":{"directives/NgxEditorJSDirective.html":{}}}],["simpleimage",{"_index":1185,"title":{},"body":{"components/NgxTinynodesMaterialFormFieldDemoComponent.html":{},"components/PageContainerComponent.html":{},"modules/PluginSimpleImageModule.html":{}}}],["simulatezoneexit",{"_index":425,"title":{},"body":{"injectables/MockNgZone.html":{}}}],["single",{"_index":219,"title":{},"body":{"interfaces/EditorJSMaterialForm.html":{},"injectables/NgxEditorJSService.html":{},"components/NgxTinynodesMaterialFormFieldDemoComponent.html":{},"components/PageContainerComponent.html":{}}}],["site",{"_index":1376,"title":{},"body":{"changelog.html":{},"index.html":{}}}],["size",{"_index":1504,"title":{},"body":{"contributing.html":{}}}],["skipsave",{"_index":206,"title":{},"body":{"interfaces/EditorJSClass.html":{},"interfaces/EditorJSInstanceConfig.html":{},"interfaces/InjectorApiCallOptions.html":{},"interfaces/InjectorApiCallResponse.html":{},"interfaces/InjectorMethodOption.html":{},"components/NgxTinynodesMaterialFormFieldDemoComponent.html":{}}}],["skipself",{"_index":728,"title":{},"body":{"modules/NgxEditorJSModule.html":{}}}],["small",{"_index":1449,"title":{},"body":{"changelog.html":{}}}],["social",{"_index":1597,"title":{},"body":{"contributing.html":{}}}],["software",{"_index":1724,"title":{},"body":{"license.html":{}}}],["source",{"_index":4,"title":{},"body":{"interfaces/Block.html":{},"interfaces/BlockData.html":{},"interfaces/ChangeMap.html":{},"interfaces/CreateEditorJSOptions.html":{},"interfaces/EditorJSChange.html":{},"interfaces/EditorJSClass.html":{},"interfaces/EditorJSInstanceConfig.html":{},"interfaces/EditorJSMaterialForm.html":{},"interfaces/EditorMap.html":{},"interfaces/Header.html":{},"interfaces/HeaderBlock.html":{},"interfaces/Image.html":{},"interfaces/ImageBlock.html":{},"interfaces/InjectorApiCallOptions.html":{},"interfaces/InjectorApiCallResponse.html":{},"interfaces/InjectorMethodOption.html":{},"interfaces/List.html":{},"interfaces/ListBlock.html":{},"classes/MockEditorJS.html":{},"injectables/MockNgZone.html":{},"classes/MockPlugin.html":{},"interfaces/NgxEditorJSConfig.html":{},"components/NgxEditorJSDemoHomeComponent.html":{},"modules/NgxEditorJSDemoMaterialModule.html":{},"directives/NgxEditorJSDirective.html":{},"modules/NgxEditorJSModule.html":{},"interfaces/NgxEditorJSModuleConfig.html":{},"injectables/NgxEditorJSPluginService.html":{},"modules/NgxEditorJSPluginServiceModule.html":{},"injectables/NgxEditorJSService.html":{},"modules/NgxEditorjsDemoModule.html":{},"modules/NgxEditorjsPluginsModule.html":{},"modules/NgxTinynodesComponentsModule.html":{},"interfaces/NgxTinynodesMatFieldComponent.html":{},"components/NgxTinynodesMatJsonOutputComponent.html":{},"modules/NgxTinynodesMatJsonOutputModule.html":{},"modules/NgxTinynodesMatTagInputModule.html":{},"modules/NgxTinynodesMaterialFormFieldDemo.html":{},"components/NgxTinynodesMaterialFormFieldDemoComponent.html":{},"interfaces/Page.html":{},"interfaces/PageBlock.html":{},"components/PageContainerComponent.html":{},"modules/PageStoreModule.html":{},"injectables/PagesQuery.html":{},"injectables/PagesService.html":{},"interfaces/PagesState.html":{},"injectables/PagesStore.html":{},"interfaces/Paragraph.html":{},"interfaces/ParagraphBlock.html":{},"modules/PluginCodeModule.html":{},"interfaces/PluginConfig.html":{},"interfaces/PluginConfigMap.html":{},"modules/PluginEmbedModule.html":{},"modules/PluginHeaderModule.html":{},"modules/PluginImageModule.html":{},"modules/PluginInlineCodeModule.html":{},"modules/PluginLinkModule.html":{},"modules/PluginListModule.html":{},"modules/PluginMarkerModule.html":{},"modules/PluginParagraphModule.html":{},"modules/PluginQuoteModule.html":{},"modules/PluginSimpleImageModule.html":{},"modules/PluginWarningModule.html":{},"interfaces/ReadyMap.html":{},"interfaces/SavedMap.html":{},"interfaces/Tag.html":{},"interfaces/ToolSettingsMap.html":{}}}],["spaces",{"_index":1591,"title":{},"body":{"contributing.html":{}}}],["spec\\.ts",{"_index":1806,"title":{},"body":{"miscellaneous/variables.html":{}}}],["specific",{"_index":1627,"title":{},"body":{"contributing.html":{}}}],["specifies",{"_index":99,"title":{},"body":{"interfaces/BlockData.html":{},"interfaces/PluginConfig.html":{},"interfaces/PluginConfigMap.html":{},"interfaces/ToolSettingsMap.html":{}}}],["standards",{"_index":1517,"title":{},"body":{"contributing.html":{}}}],["start",{"_index":1174,"title":{},"body":{"components/NgxTinynodesMaterialFormFieldDemoComponent.html":{},"components/PageContainerComponent.html":{}}}],["started",{"_index":1373,"title":{"changelog.html":{},"contributing.html":{},"index.html":{},"license.html":{},"todo.html":{}},"body":{}}],["state",{"_index":151,"title":{},"body":{"interfaces/ChangeMap.html":{},"interfaces/EditorJSChange.html":{},"interfaces/EditorJSMaterialForm.html":{},"interfaces/EditorMap.html":{},"directives/NgxEditorJSDirective.html":{},"injectables/NgxEditorJSService.html":{},"components/NgxTinynodesMaterialFormFieldDemoComponent.html":{},"interfaces/ReadyMap.html":{},"interfaces/SavedMap.html":{}}}],["statechanges",{"_index":274,"title":{},"body":{"interfaces/EditorJSMaterialForm.html":{}}}],["states",{"_index":876,"title":{},"body":{"injectables/NgxEditorJSService.html":{}}}],["static",{"_index":172,"title":{},"body":{"interfaces/EditorJSClass.html":{},"interfaces/EditorJSInstanceConfig.html":{},"interfaces/EditorJSMaterialForm.html":{},"interfaces/InjectorApiCallOptions.html":{},"interfaces/InjectorApiCallResponse.html":{},"interfaces/InjectorMethodOption.html":{},"modules/NgxEditorJSModule.html":{},"components/PageContainerComponent.html":{}}}],["still",{"_index":1168,"title":{},"body":{"components/NgxTinynodesMaterialFormFieldDemoComponent.html":{}}}],["store",{"_index":1257,"title":{},"body":{"modules/PageStoreModule.html":{},"injectables/PagesQuery.html":{},"injectables/PagesService.html":{},"todo.html":{}}}],["store/pages/pages.models",{"_index":1233,"title":{},"body":{"components/PageContainerComponent.html":{}}}],["store/pages/pages.module",{"_index":996,"title":{},"body":{"modules/NgxEditorjsDemoModule.html":{},"modules/NgxTinynodesMaterialFormFieldDemo.html":{}}}],["store/pages/pages.service",{"_index":1143,"title":{},"body":{"components/NgxTinynodesMaterialFormFieldDemoComponent.html":{},"components/PageContainerComponent.html":{}}}],["storeconfig",{"_index":1314,"title":{},"body":{"interfaces/PagesState.html":{},"injectables/PagesStore.html":{}}}],["stretch",{"_index":60,"title":{},"body":{"interfaces/Block.html":{},"interfaces/Header.html":{},"interfaces/HeaderBlock.html":{},"interfaces/Image.html":{},"interfaces/ImageBlock.html":{},"interfaces/List.html":{},"interfaces/ListBlock.html":{},"interfaces/Paragraph.html":{},"interfaces/ParagraphBlock.html":{}}}],["stretched",{"_index":61,"title":{},"body":{"interfaces/Block.html":{},"interfaces/Header.html":{},"interfaces/HeaderBlock.html":{},"interfaces/Image.html":{},"interfaces/ImageBlock.html":{},"interfaces/List.html":{},"interfaces/ListBlock.html":{},"interfaces/Paragraph.html":{},"interfaces/ParagraphBlock.html":{}}}],["string",{"_index":18,"title":{},"body":{"interfaces/Block.html":{},"interfaces/BlockData.html":{},"interfaces/ChangeMap.html":{},"interfaces/CreateEditorJSOptions.html":{},"interfaces/EditorJSChange.html":{},"interfaces/EditorJSClass.html":{},"interfaces/EditorJSInstanceConfig.html":{},"interfaces/EditorJSMaterialForm.html":{},"interfaces/EditorMap.html":{},"interfaces/Header.html":{},"interfaces/HeaderBlock.html":{},"interfaces/Image.html":{},"interfaces/ImageBlock.html":{},"interfaces/InjectorApiCallOptions.html":{},"interfaces/InjectorApiCallResponse.html":{},"interfaces/InjectorMethodOption.html":{},"interfaces/List.html":{},"interfaces/ListBlock.html":{},"classes/MockEditorJS.html":{},"classes/MockPlugin.html":{},"interfaces/NgxEditorJSConfig.html":{},"directives/NgxEditorJSDirective.html":{},"interfaces/NgxEditorJSModuleConfig.html":{},"injectables/NgxEditorJSPluginService.html":{},"injectables/NgxEditorJSService.html":{},"interfaces/Page.html":{},"interfaces/PageBlock.html":{},"components/PageContainerComponent.html":{},"interfaces/Paragraph.html":{},"interfaces/ParagraphBlock.html":{},"interfaces/PluginConfig.html":{},"interfaces/PluginConfigMap.html":{},"interfaces/ReadyMap.html":{},"interfaces/SavedMap.html":{},"interfaces/Tag.html":{},"interfaces/ToolSettingsMap.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["style",{"_index":35,"title":{},"body":{"interfaces/Block.html":{},"interfaces/Header.html":{},"interfaces/HeaderBlock.html":{},"interfaces/Image.html":{},"interfaces/ImageBlock.html":{},"interfaces/List.html":{},"interfaces/ListBlock.html":{},"interfaces/Paragraph.html":{},"interfaces/ParagraphBlock.html":{}}}],["styles",{"_index":27,"title":{},"body":{"interfaces/Block.html":{},"interfaces/Header.html":{},"interfaces/HeaderBlock.html":{},"interfaces/Image.html":{},"interfaces/ImageBlock.html":{},"interfaces/List.html":{},"interfaces/ListBlock.html":{},"components/NgxEditorJSDemoHomeComponent.html":{},"components/NgxTinynodesMaterialFormFieldDemoComponent.html":{},"components/PageContainerComponent.html":{},"interfaces/Paragraph.html":{},"interfaces/ParagraphBlock.html":{},"miscellaneous/typealiases.html":{}}}],["styleurls",{"_index":265,"title":{},"body":{"interfaces/EditorJSMaterialForm.html":{},"components/NgxEditorJSDemoHomeComponent.html":{},"components/NgxTinynodesMaterialFormFieldDemoComponent.html":{},"components/PageContainerComponent.html":{}}}],["subject",{"_index":241,"title":{},"body":{"interfaces/EditorJSMaterialForm.html":{},"directives/NgxEditorJSDirective.html":{},"injectables/NgxEditorJSService.html":{},"components/NgxTinynodesMaterialFormFieldDemoComponent.html":{},"components/PageContainerComponent.html":{},"license.html":{}}}],["subjects",{"_index":634,"title":{},"body":{"directives/NgxEditorJSDirective.html":{},"injectables/NgxEditorJSService.html":{}}}],["sublicense",{"_index":1734,"title":{},"body":{"license.html":{}}}],["subscribe",{"_index":370,"title":{},"body":{"interfaces/EditorJSMaterialForm.html":{},"directives/NgxEditorJSDirective.html":{},"injectables/NgxEditorJSService.html":{},"components/NgxTinynodesMaterialFormFieldDemoComponent.html":{},"components/PageContainerComponent.html":{}}}],["subscribe(change",{"_index":689,"title":{},"body":{"directives/NgxEditorJSDirective.html":{}}}],["subscribe(data",{"_index":1157,"title":{},"body":{"components/NgxTinynodesMaterialFormFieldDemoComponent.html":{}}}],["subscribe(editor",{"_index":954,"title":{},"body":{"injectables/NgxEditorJSService.html":{}}}],["subscribe(focused",{"_index":376,"title":{},"body":{"interfaces/EditorJSMaterialForm.html":{}}}],["subscribe(haschanged",{"_index":1146,"title":{},"body":{"components/NgxTinynodesMaterialFormFieldDemoComponent.html":{}}}],["subscribe(isready",{"_index":686,"title":{},"body":{"directives/NgxEditorJSDirective.html":{}}}],["subscribe(saved",{"_index":691,"title":{},"body":{"directives/NgxEditorJSDirective.html":{}}}],["subscriptions",{"_index":845,"title":{},"body":{"injectables/NgxEditorJSService.html":{}}}],["substantial",{"_index":1747,"title":{},"body":{"license.html":{}}}],["such",{"_index":831,"title":{},"body":{"injectables/NgxEditorJSService.html":{},"contributing.html":{}}}],["sunday",{"_index":1428,"title":{},"body":{"changelog.html":{}}}],["super",{"_index":345,"title":{},"body":{"interfaces/EditorJSMaterialForm.html":{},"injectables/MockNgZone.html":{},"interfaces/PagesState.html":{},"injectables/PagesStore.html":{}}}],["super(editorservice",{"_index":354,"title":{},"body":{"interfaces/EditorJSMaterialForm.html":{}}}],["super(store",{"_index":1269,"title":{},"body":{"injectables/PagesQuery.html":{}}}],["support",{"_index":114,"title":{},"body":{"interfaces/BlockData.html":{},"modules/PageStoreModule.html":{},"interfaces/PluginConfig.html":{},"interfaces/PluginConfigMap.html":{},"interfaces/ToolSettingsMap.html":{},"index.html":{},"modules.html":{},"todo.html":{},"miscellaneous/variables.html":{}}}],["supported",{"_index":79,"title":{},"body":{"interfaces/BlockData.html":{},"interfaces/PluginConfig.html":{},"interfaces/PluginConfigMap.html":{},"interfaces/ToolSettingsMap.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/typealiases.html":{}}}],["supports",{"_index":28,"title":{},"body":{"interfaces/Block.html":{},"interfaces/Header.html":{},"interfaces/HeaderBlock.html":{},"interfaces/Image.html":{},"interfaces/ImageBlock.html":{},"interfaces/List.html":{},"interfaces/ListBlock.html":{},"interfaces/Paragraph.html":{},"interfaces/ParagraphBlock.html":{},"miscellaneous/typealiases.html":{}}}],["svg",{"_index":1774,"title":{},"body":{"modules.html":{}}}],["switchmap",{"_index":869,"title":{},"body":{"injectables/NgxEditorJSService.html":{},"components/NgxTinynodesMaterialFormFieldDemoComponent.html":{},"components/PageContainerComponent.html":{}}}],["switchmap((data",{"_index":1239,"title":{},"body":{"components/PageContainerComponent.html":{}}}],["switchmap(async",{"_index":912,"title":{},"body":{"injectables/NgxEditorJSService.html":{}}}],["switchmap(response",{"_index":928,"title":{},"body":{"injectables/NgxEditorJSService.html":{}}}],["t",{"_index":22,"title":{},"body":{"interfaces/Block.html":{},"interfaces/EditorJSClass.html":{},"interfaces/EditorJSInstanceConfig.html":{},"interfaces/Header.html":{},"interfaces/HeaderBlock.html":{},"interfaces/Image.html":{},"interfaces/ImageBlock.html":{},"interfaces/InjectorApiCallOptions.html":{},"interfaces/InjectorApiCallResponse.html":{},"interfaces/InjectorMethodOption.html":{},"interfaces/List.html":{},"interfaces/ListBlock.html":{},"injectables/NgxEditorJSService.html":{},"interfaces/Paragraph.html":{},"interfaces/ParagraphBlock.html":{}}}],["tag",{"_index":513,"title":{"interfaces/Tag.html":{}},"body":{"components/NgxEditorJSDemoHomeComponent.html":{},"modules/NgxTinynodesComponentsModule.html":{},"components/NgxTinynodesMatJsonOutputComponent.html":{},"modules/NgxTinynodesMatTagInputModule.html":{},"components/NgxTinynodesMaterialFormFieldDemoComponent.html":{},"interfaces/Page.html":{},"interfaces/PageBlock.html":{},"components/PageContainerComponent.html":{},"interfaces/Tag.html":{},"miscellaneous/variables.html":{}}}],["tag_component_field_control",{"_index":1082,"title":{},"body":{"modules/NgxTinynodesMatTagInputModule.html":{},"overview.html":{},"miscellaneous/variables.html":{}}}],["tag_component_value_accessor",{"_index":1081,"title":{},"body":{"modules/NgxTinynodesMatTagInputModule.html":{},"overview.html":{},"miscellaneous/variables.html":{}}}],["tags",{"_index":1170,"title":{},"body":{"components/NgxTinynodesMaterialFormFieldDemoComponent.html":{},"todo.html":{}}}],["take",{"_index":870,"title":{},"body":{"injectables/NgxEditorJSService.html":{},"components/NgxTinynodesMaterialFormFieldDemoComponent.html":{},"components/PageContainerComponent.html":{},"contributing.html":{}}}],["take(1",{"_index":911,"title":{},"body":{"injectables/NgxEditorJSService.html":{},"components/PageContainerComponent.html":{}}}],["takes",{"_index":721,"title":{},"body":{"modules/NgxEditorJSModule.html":{}}}],["takeuntil",{"_index":242,"title":{},"body":{"interfaces/EditorJSMaterialForm.html":{},"directives/NgxEditorJSDirective.html":{},"components/NgxTinynodesMaterialFormFieldDemoComponent.html":{},"components/PageContainerComponent.html":{}}}],["takeuntil(this.ondestroy",{"_index":1145,"title":{},"body":{"components/NgxTinynodesMaterialFormFieldDemoComponent.html":{},"components/PageContainerComponent.html":{}}}],["tane",{"_index":1709,"title":{},"body":{"index.html":{},"license.html":{}}}],["tap",{"_index":871,"title":{},"body":{"injectables/NgxEditorJSService.html":{},"components/PageContainerComponent.html":{}}}],["tap((response",{"_index":925,"title":{},"body":{"injectables/NgxEditorJSService.html":{}}}],["team",{"_index":1613,"title":{},"body":{"contributing.html":{}}}],["template",{"_index":474,"title":{},"body":{"components/NgxEditorJSDemoHomeComponent.html":{},"components/NgxTinynodesMatJsonOutputComponent.html":{},"components/NgxTinynodesMaterialFormFieldDemoComponent.html":{},"components/PageContainerComponent.html":{}}}],["templateurl",{"_index":263,"title":{},"body":{"interfaces/EditorJSMaterialForm.html":{},"components/NgxEditorJSDemoHomeComponent.html":{},"components/NgxTinynodesMatJsonOutputComponent.html":{},"components/NgxTinynodesMaterialFormFieldDemoComponent.html":{},"components/PageContainerComponent.html":{}}}],["temporarily",{"_index":1580,"title":{},"body":{"contributing.html":{}}}],["temporary",{"_index":1634,"title":{},"body":{"contributing.html":{}}}],["test",{"_index":404,"title":{},"body":{"classes/MockEditorJS.html":{},"classes/MockPlugin.html":{},"components/NgxTinynodesMaterialFormFieldDemoComponent.html":{}}}],["text",{"_index":42,"title":{},"body":{"interfaces/Block.html":{},"interfaces/Header.html":{},"interfaces/HeaderBlock.html":{},"interfaces/Image.html":{},"interfaces/ImageBlock.html":{},"interfaces/List.html":{},"interfaces/ListBlock.html":{},"directives/NgxEditorJSDirective.html":{},"interfaces/Paragraph.html":{},"interfaces/ParagraphBlock.html":{}}}],["this._disabled",{"_index":307,"title":{},"body":{"interfaces/EditorJSMaterialForm.html":{}}}],["this._empty",{"_index":313,"title":{},"body":{"interfaces/EditorJSMaterialForm.html":{}}}],["this._focused",{"_index":294,"title":{},"body":{"interfaces/EditorJSMaterialForm.html":{}}}],["this._placeholder",{"_index":289,"title":{},"body":{"interfaces/EditorJSMaterialForm.html":{}}}],["this._required",{"_index":300,"title":{},"body":{"interfaces/EditorJSMaterialForm.html":{}}}],["this._value",{"_index":281,"title":{},"body":{"interfaces/EditorJSMaterialForm.html":{}}}],["this.apicall",{"_index":922,"title":{},"body":{"injectables/NgxEditorJSService.html":{}}}],["this.app",{"_index":1155,"title":{},"body":{"components/NgxTinynodesMaterialFormFieldDemoComponent.html":{},"components/PageContainerComponent.html":{}}}],["this.autofocus",{"_index":697,"title":{},"body":{"directives/NgxEditorJSDirective.html":{}}}],["this.autosave",{"_index":665,"title":{},"body":{"directives/NgxEditorJSDirective.html":{}}}],["this.autosave$.asobservable",{"_index":1149,"title":{},"body":{"components/NgxTinynodesMaterialFormFieldDemoComponent.html":{}}}],["this.autosave$.next(0",{"_index":1152,"title":{},"body":{"components/NgxTinynodesMaterialFormFieldDemoComponent.html":{}}}],["this.autosave$.next(autosavetime",{"_index":1151,"title":{},"body":{"components/NgxTinynodesMaterialFormFieldDemoComponent.html":{}}}],["this.blockplaceholder",{"_index":700,"title":{},"body":{"directives/NgxEditorJSDirective.html":{}}}],["this.blocks",{"_index":408,"title":{},"body":{"classes/MockEditorJS.html":{},"classes/MockPlugin.html":{},"directives/NgxEditorJSDirective.html":{}}}],["this.blocks.length",{"_index":703,"title":{},"body":{"directives/NgxEditorJSDirective.html":{}}}],["this.blocks.pipe",{"_index":1241,"title":{},"body":{"components/PageContainerComponent.html":{}}}],["this.cd.markforcheck",{"_index":656,"title":{},"body":{"directives/NgxEditorJSDirective.html":{},"components/NgxTinynodesMatJsonOutputComponent.html":{},"components/NgxTinynodesMaterialFormFieldDemoComponent.html":{},"components/PageContainerComponent.html":{}}}],["this.cleanupsubjects",{"_index":958,"title":{},"body":{"injectables/NgxEditorJSService.html":{}}}],["this.config.editorjs",{"_index":883,"title":{},"body":{"injectables/NgxEditorJSService.html":{}}}],["this.createeditor(this.createconfig",{"_index":680,"title":{},"body":{"directives/NgxEditorJSDirective.html":{}}}],["this.createonchange.call(this",{"_index":892,"title":{},"body":{"injectables/NgxEditorJSService.html":{}}}],["this.createonready.call(this",{"_index":896,"title":{},"body":{"injectables/NgxEditorJSService.html":{}}}],["this.describedby",{"_index":337,"title":{},"body":{"interfaces/EditorJSMaterialForm.html":{}}}],["this.destroy",{"_index":407,"title":{},"body":{"classes/MockEditorJS.html":{},"classes/MockPlugin.html":{}}}],["this.destroyinstance",{"_index":960,"title":{},"body":{"injectables/NgxEditorJSService.html":{}}}],["this.editorform.patchvalue",{"_index":1148,"title":{},"body":{"components/NgxTinynodesMaterialFormFieldDemoComponent.html":{}}}],["this.editorform.reset",{"_index":1154,"title":{},"body":{"components/NgxTinynodesMaterialFormFieldDemoComponent.html":{}}}],["this.editorjs(editorconfig",{"_index":898,"title":{},"body":{"injectables/NgxEditorJSService.html":{}}}],["this.editorjs.version",{"_index":935,"title":{},"body":{"injectables/NgxEditorJSService.html":{}}}],["this.editormap[holder",{"_index":902,"title":{},"body":{"injectables/NgxEditorJSService.html":{}}}],["this.editormap[holder].next(editor",{"_index":903,"title":{},"body":{"injectables/NgxEditorJSService.html":{}}}],["this.editormap[options.holder",{"_index":938,"title":{},"body":{"injectables/NgxEditorJSService.html":{}}}],["this.editormap[options.holder].complete",{"_index":977,"title":{},"body":{"injectables/NgxEditorJSService.html":{}}}],["this.editormap[options.holder].pipe(filter(editor",{"_index":940,"title":{},"body":{"injectables/NgxEditorJSService.html":{}}}],["this.editorservice",{"_index":660,"title":{},"body":{"directives/NgxEditorJSDirective.html":{},"components/NgxTinynodesMaterialFormFieldDemoComponent.html":{}}}],["this.editorservice.clear",{"_index":1237,"title":{},"body":{"components/PageContainerComponent.html":{}}}],["this.editorservice.lastchange",{"_index":1234,"title":{},"body":{"components/PageContainerComponent.html":{}}}],["this.editorservice.save",{"_index":1153,"title":{},"body":{"components/NgxTinynodesMaterialFormFieldDemoComponent.html":{},"components/PageContainerComponent.html":{}}}],["this.editorservice.update",{"_index":1240,"title":{},"body":{"components/PageContainerComponent.html":{}}}],["this.el.nativeelement",{"_index":659,"title":{},"body":{"directives/NgxEditorJSDirective.html":{}}}],["this.el.nativeelement.id",{"_index":681,"title":{},"body":{"directives/NgxEditorJSDirective.html":{}}}],["this.empty",{"_index":330,"title":{},"body":{"interfaces/EditorJSMaterialForm.html":{}}}],["this.errorstate",{"_index":379,"title":{},"body":{"interfaces/EditorJSMaterialForm.html":{}}}],["this.excludetools",{"_index":664,"title":{},"body":{"directives/NgxEditorJSDirective.html":{}}}],["this.expand",{"_index":1070,"title":{},"body":{"components/NgxTinynodesMatJsonOutputComponent.html":{}}}],["this.fb.group",{"_index":1130,"title":{},"body":{"components/NgxTinynodesMaterialFormFieldDemoComponent.html":{}}}],["this.focused",{"_index":329,"title":{},"body":{"interfaces/EditorJSMaterialForm.html":{}}}],["this.geteditor(options",{"_index":952,"title":{},"body":{"injectables/NgxEditorJSService.html":{}}}],["this.geteditor(options).pipe",{"_index":910,"title":{},"body":{"injectables/NgxEditorJSService.html":{}}}],["this.getfocusmonitor(this.editorinstance.element",{"_index":374,"title":{},"body":{"interfaces/EditorJSMaterialForm.html":{}}}],["this.gettools(options.excludetools",{"_index":885,"title":{},"body":{"injectables/NgxEditorJSService.html":{}}}],["this.haschanged.emit(change",{"_index":690,"title":{},"body":{"directives/NgxEditorJSDirective.html":{}}}],["this.hassaved.next(saved",{"_index":692,"title":{},"body":{"directives/NgxEditorJSDirective.html":{}}}],["this.hassavedmap[options.holder",{"_index":950,"title":{},"body":{"injectables/NgxEditorJSService.html":{}}}],["this.hassavedmap[options.holder].asobservable",{"_index":951,"title":{},"body":{"injectables/NgxEditorJSService.html":{}}}],["this.hassavedmap[options.holder].next(true",{"_index":926,"title":{},"body":{"injectables/NgxEditorJSService.html":{}}}],["this.hidetoolbar",{"_index":698,"title":{},"body":{"directives/NgxEditorJSDirective.html":{}}}],["this.holder",{"_index":672,"title":{},"body":{"directives/NgxEditorJSDirective.html":{},"components/NgxTinynodesMaterialFormFieldDemoComponent.html":{},"components/PageContainerComponent.html":{}}}],["this.id",{"_index":658,"title":{},"body":{"directives/NgxEditorJSDirective.html":{}}}],["this.initialblock",{"_index":699,"title":{},"body":{"directives/NgxEditorJSDirective.html":{}}}],["this.isready",{"_index":405,"title":{},"body":{"classes/MockEditorJS.html":{},"classes/MockPlugin.html":{}}}],["this.isready.emit(isready",{"_index":687,"title":{},"body":{"directives/NgxEditorJSDirective.html":{}}}],["this.isreadymap[holder].next(true",{"_index":905,"title":{},"body":{"injectables/NgxEditorJSService.html":{}}}],["this.isreadymap[options.holder",{"_index":941,"title":{},"body":{"injectables/NgxEditorJSService.html":{}}}],["this.isreadymap[options.holder].asobservable",{"_index":942,"title":{},"body":{"injectables/NgxEditorJSService.html":{}}}],["this.isreadymap[options.holder].next(true",{"_index":966,"title":{},"body":{"injectables/NgxEditorJSService.html":{}}}],["this.isreadymap[options.holder].value",{"_index":965,"title":{},"body":{"injectables/NgxEditorJSService.html":{}}}],["this.istouched.emit(true",{"_index":655,"title":{},"body":{"directives/NgxEditorJSDirective.html":{}}}],["this.lastchangemap[options.holder",{"_index":943,"title":{},"body":{"injectables/NgxEditorJSService.html":{}}}],["this.lastchangemap[options.holder].next(change",{"_index":963,"title":{},"body":{"injectables/NgxEditorJSService.html":{}}}],["this.lastchangemap[options.holder].next(response.result",{"_index":927,"title":{},"body":{"injectables/NgxEditorJSService.html":{}}}],["this.lastchangemap[options.holder].pipe",{"_index":944,"title":{},"body":{"injectables/NgxEditorJSService.html":{}}}],["this.menu",{"_index":1150,"title":{},"body":{"components/NgxTinynodesMaterialFormFieldDemoComponent.html":{},"components/PageContainerComponent.html":{}}}],["this.menu$.next(data.links",{"_index":1158,"title":{},"body":{"components/NgxTinynodesMaterialFormFieldDemoComponent.html":{},"components/PageContainerComponent.html":{}}}],["this.minheight",{"_index":701,"title":{},"body":{"directives/NgxEditorJSDirective.html":{}}}],["this.ngcontrol",{"_index":361,"title":{},"body":{"interfaces/EditorJSMaterialForm.html":{}}}],["this.ngcontrol.invalid",{"_index":380,"title":{},"body":{"interfaces/EditorJSMaterialForm.html":{}}}],["this.ngcontrol.touched",{"_index":381,"title":{},"body":{"interfaces/EditorJSMaterialForm.html":{}}}],["this.ngcontrol.valueaccessor",{"_index":363,"title":{},"body":{"interfaces/EditorJSMaterialForm.html":{}}}],["this.ondestroy$.complete",{"_index":694,"title":{},"body":{"directives/NgxEditorJSDirective.html":{},"injectables/NgxEditorJSService.html":{}}}],["this.ondestroy$.next(true",{"_index":693,"title":{},"body":{"directives/NgxEditorJSDirective.html":{},"injectables/NgxEditorJSService.html":{}}}],["this.onstable.emit(null",{"_index":436,"title":{},"body":{"injectables/MockNgZone.html":{}}}],["this.ontouch",{"_index":298,"title":{},"body":{"interfaces/EditorJSMaterialForm.html":{}}}],["this.ontouch(event",{"_index":343,"title":{},"body":{"interfaces/EditorJSMaterialForm.html":{}}}],["this.pages",{"_index":1299,"title":{},"body":{"injectables/PagesService.html":{}}}],["this.pagesservice.pages",{"_index":1236,"title":{},"body":{"components/PageContainerComponent.html":{}}}],["this.pluginconfigmap",{"_index":779,"title":{},"body":{"injectables/NgxEditorJSPluginService.html":{}}}],["this.pluginconfigmap[key",{"_index":780,"title":{},"body":{"injectables/NgxEditorJSPluginService.html":{}}}],["this.plugins.gettools(excludetools",{"_index":978,"title":{},"body":{"injectables/NgxEditorJSService.html":{}}}],["this.query.selectall",{"_index":1300,"title":{},"body":{"injectables/PagesService.html":{}}}],["this.ref.tick",{"_index":906,"title":{},"body":{"injectables/NgxEditorJSService.html":{}}}],["this.reset",{"_index":1162,"title":{},"body":{"components/NgxTinynodesMaterialFormFieldDemoComponent.html":{},"components/PageContainerComponent.html":{}}}],["this.sanitizer",{"_index":702,"title":{},"body":{"directives/NgxEditorJSDirective.html":{}}}],["this.save(options",{"_index":931,"title":{},"body":{"injectables/NgxEditorJSService.html":{}}}],["this.saver",{"_index":410,"title":{},"body":{"classes/MockEditorJS.html":{},"classes/MockPlugin.html":{}}}],["this.service",{"_index":685,"title":{},"body":{"directives/NgxEditorJSDirective.html":{}}}],["this.service.createinstance",{"_index":663,"title":{},"body":{"directives/NgxEditorJSDirective.html":{}}}],["this.service.destroyinstance",{"_index":695,"title":{},"body":{"directives/NgxEditorJSDirective.html":{}}}],["this.service.geteditor",{"_index":657,"title":{},"body":{"directives/NgxEditorJSDirective.html":{}}}],["this.service.update",{"_index":671,"title":{},"body":{"directives/NgxEditorJSDirective.html":{}}}],["this.setupservicesubscriptions",{"_index":373,"title":{},"body":{"interfaces/EditorJSMaterialForm.html":{}}}],["this.setupsubjects",{"_index":901,"title":{},"body":{"injectables/NgxEditorJSService.html":{}}}],["this.statechanges.next",{"_index":285,"title":{},"body":{"interfaces/EditorJSMaterialForm.html":{}}}],["this.store.add(newpage",{"_index":1302,"title":{},"body":{"injectables/PagesService.html":{}}}],["this.store.remove(pageid",{"_index":1305,"title":{},"body":{"injectables/PagesService.html":{}}}],["this.store.update(pageid",{"_index":1306,"title":{},"body":{"injectables/PagesService.html":{}}}],["this.store.upsert(page.id",{"_index":1304,"title":{},"body":{"injectables/PagesService.html":{}}}],["this.touched$.asobservable",{"_index":661,"title":{},"body":{"directives/NgxEditorJSDirective.html":{}}}],["this.touched$.next(true",{"_index":654,"title":{},"body":{"directives/NgxEditorJSDirective.html":{}}}],["this.update",{"_index":1160,"title":{},"body":{"components/NgxTinynodesMaterialFormFieldDemoComponent.html":{}}}],["this.version",{"_index":403,"title":{},"body":{"classes/MockEditorJS.html":{},"classes/MockPlugin.html":{}}}],["this.zone.run",{"_index":957,"title":{},"body":{"injectables/NgxEditorJSService.html":{}}}],["this.zone.run(async",{"_index":900,"title":{},"body":{"injectables/NgxEditorJSService.html":{}}}],["this.zone.runoutsideangular",{"_index":955,"title":{},"body":{"injectables/NgxEditorJSService.html":{}}}],["this.zone.runoutsideangular(async",{"_index":897,"title":{},"body":{"injectables/NgxEditorJSService.html":{}}}],["this[mapkey][options.holder",{"_index":969,"title":{},"body":{"injectables/NgxEditorJSService.html":{}}}],["this[mapkey][options.holder].complete",{"_index":975,"title":{},"body":{"injectables/NgxEditorJSService.html":{}}}],["this[mapkey][options.holder].next(value",{"_index":971,"title":{},"body":{"injectables/NgxEditorJSService.html":{}}}],["threatening",{"_index":1585,"title":{},"body":{"contributing.html":{}}}],["throw",{"_index":682,"title":{},"body":{"directives/NgxEditorJSDirective.html":{},"injectables/NgxEditorJSService.html":{}}}],["tick",{"_index":825,"title":{},"body":{"injectables/NgxEditorJSService.html":{}}}],["tidy",{"_index":1395,"title":{},"body":{"changelog.html":{}}}],["time",{"_index":157,"title":{},"body":{"interfaces/ChangeMap.html":{},"interfaces/EditorJSChange.html":{},"interfaces/EditorJSClass.html":{},"interfaces/EditorJSInstanceConfig.html":{},"interfaces/EditorMap.html":{},"interfaces/InjectorApiCallOptions.html":{},"interfaces/InjectorApiCallResponse.html":{},"interfaces/InjectorMethodOption.html":{},"classes/MockEditorJS.html":{},"classes/MockPlugin.html":{},"directives/NgxEditorJSDirective.html":{},"injectables/NgxEditorJSService.html":{},"components/NgxTinynodesMaterialFormFieldDemoComponent.html":{},"interfaces/ReadyMap.html":{},"interfaces/SavedMap.html":{},"miscellaneous/variables.html":{}}}],["timer",{"_index":576,"title":{},"body":{"directives/NgxEditorJSDirective.html":{}}}],["tinynode",{"_index":1694,"title":{},"body":{"index.html":{}}}],["tinynodes",{"_index":507,"title":{},"body":{"components/NgxEditorJSDemoHomeComponent.html":{},"modules/NgxEditorjsDemoModule.html":{},"modules/NgxTinynodesComponentsModule.html":{},"interfaces/NgxTinynodesMatFieldComponent.html":{},"components/NgxTinynodesMatJsonOutputComponent.html":{},"modules/NgxTinynodesMatJsonOutputModule.html":{},"modules/NgxTinynodesMatTagInputModule.html":{},"modules/NgxTinynodesMaterialFormFieldDemo.html":{},"components/NgxTinynodesMaterialFormFieldDemoComponent.html":{},"components/PageContainerComponent.html":{},"changelog.html":{},"index.html":{},"license.html":{},"todo.html":{},"miscellaneous/variables.html":{}}}],["tinynodes/ngx",{"_index":485,"title":{},"body":{"components/NgxEditorJSDemoHomeComponent.html":{},"modules/NgxEditorJSModule.html":{},"injectables/NgxEditorJSService.html":{},"modules/NgxEditorjsDemoModule.html":{},"modules/NgxTinynodesMaterialFormFieldDemo.html":{},"components/NgxTinynodesMaterialFormFieldDemoComponent.html":{},"interfaces/Page.html":{},"interfaces/PageBlock.html":{},"components/PageContainerComponent.html":{},"injectables/PagesService.html":{},"interfaces/Tag.html":{},"changelog.html":{},"index.html":{}}}],["title",{"_index":1103,"title":{},"body":{"components/NgxTinynodesMaterialFormFieldDemoComponent.html":{}}}],["today",{"_index":1383,"title":{},"body":{"changelog.html":{}}}],["todo",{"_index":1330,"title":{"todo.html":{}},"body":{"modules/PluginHeaderModule.html":{},"todo.html":{}}}],["todos",{"_index":1779,"title":{},"body":{"todo.html":{}}}],["toggleexpand",{"_index":1063,"title":{},"body":{"components/NgxTinynodesMatJsonOutputComponent.html":{}}}],["token",{"_index":121,"title":{},"body":{"interfaces/BlockData.html":{},"interfaces/EditorJSClass.html":{},"interfaces/EditorJSInstanceConfig.html":{},"interfaces/InjectorApiCallOptions.html":{},"interfaces/InjectorApiCallResponse.html":{},"interfaces/InjectorMethodOption.html":{},"interfaces/NgxEditorJSConfig.html":{},"interfaces/NgxEditorJSModuleConfig.html":{},"interfaces/PluginConfig.html":{},"interfaces/PluginConfigMap.html":{},"interfaces/ToolSettingsMap.html":{},"miscellaneous/variables.html":{}}}],["tool",{"_index":89,"title":{},"body":{"interfaces/BlockData.html":{},"injectables/NgxEditorJSPluginService.html":{},"components/NgxTinynodesMaterialFormFieldDemoComponent.html":{},"components/PageContainerComponent.html":{},"modules/PluginCodeModule.html":{},"interfaces/PluginConfig.html":{},"interfaces/PluginConfigMap.html":{},"modules/PluginEmbedModule.html":{},"modules/PluginHeaderModule.html":{},"modules/PluginImageModule.html":{},"modules/PluginInlineCodeModule.html":{},"modules/PluginLinkModule.html":{},"modules/PluginListModule.html":{},"modules/PluginMarkerModule.html":{},"modules/PluginParagraphModule.html":{},"modules/PluginQuoteModule.html":{},"modules/PluginSimpleImageModule.html":{},"modules/PluginWarningModule.html":{},"interfaces/ToolSettingsMap.html":{},"changelog.html":{},"miscellaneous/typealiases.html":{}}}],["tool.config",{"_index":797,"title":{},"body":{"injectables/NgxEditorJSPluginService.html":{}}}],["tool.inlinetoolbar",{"_index":795,"title":{},"body":{"injectables/NgxEditorJSPluginService.html":{}}}],["tool.shortcut",{"_index":792,"title":{},"body":{"injectables/NgxEditorJSPluginService.html":{}}}],["toolbar",{"_index":451,"title":{},"body":{"interfaces/NgxEditorJSConfig.html":{},"directives/NgxEditorJSDirective.html":{},"interfaces/NgxEditorJSModuleConfig.html":{}}}],["toolbaropen",{"_index":877,"title":{},"body":{"injectables/NgxEditorJSService.html":{}}}],["toolconstructable",{"_index":75,"title":{},"body":{"interfaces/BlockData.html":{},"interfaces/PluginConfig.html":{},"interfaces/PluginConfigMap.html":{},"interfaces/ToolSettingsMap.html":{},"miscellaneous/typealiases.html":{}}}],["tools",{"_index":93,"title":{},"body":{"interfaces/BlockData.html":{},"interfaces/CreateEditorJSOptions.html":{},"directives/NgxEditorJSDirective.html":{},"injectables/NgxEditorJSPluginService.html":{},"injectables/NgxEditorJSService.html":{},"modules/NgxEditorjsPluginsModule.html":{},"interfaces/PluginConfig.html":{},"interfaces/PluginConfigMap.html":{},"interfaces/ToolSettingsMap.html":{}}}],["toolsettings",{"_index":74,"title":{},"body":{"interfaces/BlockData.html":{},"interfaces/PluginConfig.html":{},"interfaces/PluginConfigMap.html":{},"interfaces/ToolSettingsMap.html":{},"miscellaneous/typealiases.html":{}}}],["toolsettingsmap",{"_index":94,"title":{"interfaces/ToolSettingsMap.html":{}},"body":{"interfaces/BlockData.html":{},"injectables/NgxEditorJSPluginService.html":{},"injectables/NgxEditorJSService.html":{},"interfaces/PluginConfig.html":{},"interfaces/PluginConfigMap.html":{},"interfaces/ToolSettingsMap.html":{}}}],["tort",{"_index":1768,"title":{},"body":{"license.html":{}}}],["touched",{"_index":565,"title":{},"body":{"directives/NgxEditorJSDirective.html":{},"components/PageContainerComponent.html":{}}}],["towards",{"_index":1536,"title":{},"body":{"contributing.html":{}}}],["tree",{"_index":476,"title":{},"body":{"components/NgxEditorJSDemoHomeComponent.html":{},"components/NgxTinynodesMatJsonOutputComponent.html":{},"components/NgxTinynodesMaterialFormFieldDemoComponent.html":{},"components/PageContainerComponent.html":{}}}],["trigger",{"_index":369,"title":{},"body":{"interfaces/EditorJSMaterialForm.html":{},"injectables/NgxEditorJSService.html":{}}}],["triggered",{"_index":810,"title":{},"body":{"injectables/NgxEditorJSService.html":{}}}],["trolling",{"_index":1545,"title":{},"body":{"contributing.html":{}}}],["true",{"_index":112,"title":{},"body":{"interfaces/BlockData.html":{},"interfaces/EditorJSMaterialForm.html":{},"interfaces/NgxEditorJSConfig.html":{},"directives/NgxEditorJSDirective.html":{},"interfaces/NgxEditorJSModuleConfig.html":{},"injectables/NgxEditorJSPluginService.html":{},"modules/NgxEditorJSPluginServiceModule.html":{},"injectables/NgxEditorJSService.html":{},"components/NgxTinynodesMatJsonOutputComponent.html":{},"components/NgxTinynodesMaterialFormFieldDemoComponent.html":{},"components/PageContainerComponent.html":{},"modules/PluginCodeModule.html":{},"interfaces/PluginConfig.html":{},"interfaces/PluginConfigMap.html":{},"modules/PluginEmbedModule.html":{},"modules/PluginHeaderModule.html":{},"modules/PluginImageModule.html":{},"modules/PluginInlineCodeModule.html":{},"modules/PluginLinkModule.html":{},"modules/PluginListModule.html":{},"modules/PluginMarkerModule.html":{},"modules/PluginParagraphModule.html":{},"modules/PluginQuoteModule.html":{},"modules/PluginSimpleImageModule.html":{},"modules/PluginWarningModule.html":{},"interfaces/ToolSettingsMap.html":{},"miscellaneous/variables.html":{}}}],["tslint:disable",{"_index":356,"title":{},"body":{"interfaces/EditorJSMaterialForm.html":{}}}],["two",{"_index":622,"title":{},"body":{"directives/NgxEditorJSDirective.html":{},"contributing.html":{}}}],["type",{"_index":11,"title":{},"body":{"interfaces/Block.html":{},"interfaces/BlockData.html":{},"interfaces/CreateEditorJSOptions.html":{},"interfaces/EditorJSChange.html":{},"interfaces/EditorJSClass.html":{},"interfaces/EditorJSInstanceConfig.html":{},"interfaces/EditorJSMaterialForm.html":{},"interfaces/Header.html":{},"interfaces/HeaderBlock.html":{},"interfaces/Image.html":{},"interfaces/ImageBlock.html":{},"interfaces/InjectorApiCallOptions.html":{},"interfaces/InjectorApiCallResponse.html":{},"interfaces/InjectorMethodOption.html":{},"interfaces/List.html":{},"interfaces/ListBlock.html":{},"classes/MockEditorJS.html":{},"injectables/MockNgZone.html":{},"interfaces/NgxEditorJSConfig.html":{},"directives/NgxEditorJSDirective.html":{},"modules/NgxEditorJSModule.html":{},"interfaces/NgxEditorJSModuleConfig.html":{},"injectables/NgxEditorJSPluginService.html":{},"injectables/NgxEditorJSService.html":{},"components/NgxTinynodesMatJsonOutputComponent.html":{},"components/NgxTinynodesMaterialFormFieldDemoComponent.html":{},"interfaces/Page.html":{},"interfaces/PageBlock.html":{},"components/PageContainerComponent.html":{},"injectables/PagesQuery.html":{},"injectables/PagesService.html":{},"interfaces/Paragraph.html":{},"interfaces/ParagraphBlock.html":{},"modules/PluginCodeModule.html":{},"interfaces/PluginConfig.html":{},"interfaces/PluginConfigMap.html":{},"modules/PluginEmbedModule.html":{},"modules/PluginHeaderModule.html":{},"modules/PluginImageModule.html":{},"modules/PluginInlineCodeModule.html":{},"modules/PluginLinkModule.html":{},"modules/PluginListModule.html":{},"modules/PluginMarkerModule.html":{},"modules/PluginParagraphModule.html":{},"modules/PluginQuoteModule.html":{},"modules/PluginSimpleImageModule.html":{},"modules/PluginWarningModule.html":{},"interfaces/Tag.html":{},"interfaces/ToolSettingsMap.html":{},"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["typealiases",{"_index":1789,"title":{"miscellaneous/typealiases.html":{}},"body":{}}],["typeof",{"_index":891,"title":{},"body":{"injectables/NgxEditorJSService.html":{}}}],["types",{"_index":77,"title":{},"body":{"interfaces/BlockData.html":{},"interfaces/PluginConfig.html":{},"interfaces/PluginConfigMap.html":{},"interfaces/ToolSettingsMap.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/typealiases.html":{}}}],["types/blocks",{"_index":647,"title":{},"body":{"directives/NgxEditorJSDirective.html":{}}}],["types/config",{"_index":735,"title":{},"body":{"modules/NgxEditorJSModule.html":{},"injectables/NgxEditorJSService.html":{}}}],["types/editorjs",{"_index":872,"title":{},"body":{"injectables/NgxEditorJSService.html":{}}}],["types/injector",{"_index":736,"title":{},"body":{"modules/NgxEditorJSModule.html":{},"injectables/NgxEditorJSService.html":{}}}],["types/maps",{"_index":873,"title":{},"body":{"injectables/NgxEditorJSService.html":{}}}],["types/plugins",{"_index":772,"title":{},"body":{"injectables/NgxEditorJSPluginService.html":{},"modules/NgxEditorJSPluginServiceModule.html":{},"modules/PluginCodeModule.html":{},"modules/PluginEmbedModule.html":{},"modules/PluginHeaderModule.html":{},"modules/PluginImageModule.html":{},"modules/PluginInlineCodeModule.html":{},"modules/PluginLinkModule.html":{},"modules/PluginListModule.html":{},"modules/PluginMarkerModule.html":{},"modules/PluginParagraphModule.html":{},"modules/PluginQuoteModule.html":{},"modules/PluginSimpleImageModule.html":{},"modules/PluginWarningModule.html":{}}}],["typescript",{"_index":176,"title":{},"body":{"interfaces/EditorJSClass.html":{},"interfaces/EditorJSInstanceConfig.html":{},"interfaces/InjectorApiCallOptions.html":{},"interfaces/InjectorApiCallResponse.html":{},"interfaces/InjectorMethodOption.html":{},"components/NgxTinynodesMaterialFormFieldDemoComponent.html":{}}}],["typing",{"_index":1175,"title":{},"body":{"components/NgxTinynodesMaterialFormFieldDemoComponent.html":{},"components/PageContainerComponent.html":{}}}],["unacceptable",{"_index":1538,"title":{},"body":{"contributing.html":{}}}],["undefined",{"_index":119,"title":{},"body":{"interfaces/BlockData.html":{},"modules/NgxEditorJSPluginServiceModule.html":{},"injectables/NgxEditorJSService.html":{},"interfaces/PluginConfig.html":{},"interfaces/PluginConfigMap.html":{},"interfaces/ToolSettingsMap.html":{}}}],["under",{"_index":1380,"title":{},"body":{"changelog.html":{}}}],["underlying",{"_index":316,"title":{},"body":{"interfaces/EditorJSMaterialForm.html":{},"injectables/NgxEditorJSService.html":{},"changelog.html":{},"index.html":{}}}],["underneath",{"_index":1700,"title":{},"body":{"index.html":{}}}],["unique",{"_index":323,"title":{},"body":{"interfaces/EditorJSMaterialForm.html":{}}}],["unlike",{"_index":908,"title":{},"body":{"injectables/NgxEditorJSService.html":{}}}],["unordered",{"_index":30,"title":{},"body":{"interfaces/Block.html":{},"interfaces/Header.html":{},"interfaces/HeaderBlock.html":{},"interfaces/Image.html":{},"interfaces/ImageBlock.html":{},"interfaces/List.html":{},"interfaces/ListBlock.html":{},"interfaces/Paragraph.html":{},"interfaces/ParagraphBlock.html":{},"miscellaneous/typealiases.html":{}}}],["unreleased",{"_index":1382,"title":{},"body":{"changelog.html":{}}}],["unsubscribe",{"_index":371,"title":{},"body":{"interfaces/EditorJSMaterialForm.html":{}}}],["until",{"_index":1445,"title":{},"body":{"changelog.html":{}}}],["unwelcome",{"_index":1542,"title":{},"body":{"contributing.html":{}}}],["up",{"_index":367,"title":{},"body":{"interfaces/EditorJSMaterialForm.html":{},"directives/NgxEditorJSDirective.html":{},"injectables/NgxEditorJSService.html":{},"components/NgxTinynodesMaterialFormFieldDemoComponent.html":{},"components/PageContainerComponent.html":{},"changelog.html":{}}}],["update",{"_index":816,"title":{},"body":{"injectables/NgxEditorJSService.html":{},"components/NgxTinynodesMaterialFormFieldDemoComponent.html":{},"contributing.html":{}}}],["update(data",{"_index":1128,"title":{},"body":{"components/NgxTinynodesMaterialFormFieldDemoComponent.html":{}}}],["update(options",{"_index":860,"title":{},"body":{"injectables/NgxEditorJSService.html":{}}}],["updated",{"_index":625,"title":{},"body":{"directives/NgxEditorJSDirective.html":{},"components/NgxTinynodesMaterialFormFieldDemoComponent.html":{},"injectables/PagesService.html":{},"changelog.html":{}}}],["updates",{"_index":1197,"title":{},"body":{"components/NgxTinynodesMaterialFormFieldDemoComponent.html":{},"injectables/PagesService.html":{}}}],["upgraded",{"_index":1411,"title":{},"body":{"changelog.html":{}}}],["upsert",{"_index":1275,"title":{},"body":{"injectables/PagesService.html":{}}}],["upsert(page",{"_index":1291,"title":{},"body":{"injectables/PagesService.html":{}}}],["url",{"_index":51,"title":{},"body":{"interfaces/Block.html":{},"interfaces/Header.html":{},"interfaces/HeaderBlock.html":{},"interfaces/Image.html":{},"interfaces/ImageBlock.html":{},"interfaces/List.html":{},"interfaces/ListBlock.html":{},"components/NgxTinynodesMaterialFormFieldDemoComponent.html":{},"components/PageContainerComponent.html":{},"interfaces/Paragraph.html":{},"interfaces/ParagraphBlock.html":{}}}],["usage",{"_index":1698,"title":{},"body":{"index.html":{}}}],["use",{"_index":101,"title":{},"body":{"interfaces/BlockData.html":{},"components/NgxEditorJSDemoHomeComponent.html":{},"directives/NgxEditorJSDirective.html":{},"modules/NgxEditorJSModule.html":{},"injectables/NgxEditorJSService.html":{},"interfaces/PluginConfig.html":{},"interfaces/PluginConfigMap.html":{},"interfaces/ToolSettingsMap.html":{},"contributing.html":{},"miscellaneous/functions.html":{},"index.html":{},"license.html":{}}}],["used",{"_index":116,"title":{},"body":{"interfaces/BlockData.html":{},"interfaces/CreateEditorJSOptions.html":{},"components/NgxEditorJSDemoHomeComponent.html":{},"directives/NgxEditorJSDirective.html":{},"injectables/NgxEditorJSService.html":{},"interfaces/PluginConfig.html":{},"interfaces/PluginConfigMap.html":{},"interfaces/ToolSettingsMap.html":{},"index.html":{}}}],["useexisting",{"_index":254,"title":{},"body":{"interfaces/EditorJSMaterialForm.html":{},"miscellaneous/variables.html":{}}}],["usefactory",{"_index":740,"title":{},"body":{"modules/NgxEditorJSModule.html":{},"modules/NgxEditorJSPluginServiceModule.html":{}}}],["useful",{"_index":863,"title":{},"body":{"injectables/NgxEditorJSService.html":{},"changelog.html":{},"contributing.html":{}}}],["userplugins",{"_index":599,"title":{},"body":{"directives/NgxEditorJSDirective.html":{}}}],["uses",{"_index":881,"title":{},"body":{"injectables/NgxEditorJSService.html":{}}}],["usevalue",{"_index":739,"title":{},"body":{"modules/NgxEditorJSModule.html":{},"modules/NgxEditorJSPluginServiceModule.html":{},"modules/PluginCodeModule.html":{},"modules/PluginEmbedModule.html":{},"modules/PluginHeaderModule.html":{},"modules/PluginImageModule.html":{},"modules/PluginInlineCodeModule.html":{},"modules/PluginLinkModule.html":{},"modules/PluginListModule.html":{},"modules/PluginMarkerModule.html":{},"modules/PluginParagraphModule.html":{},"modules/PluginQuoteModule.html":{},"modules/PluginSimpleImageModule.html":{},"modules/PluginWarningModule.html":{}}}],["using",{"_index":749,"title":{},"body":{"injectables/NgxEditorJSPluginService.html":{},"injectables/NgxEditorJSService.html":{},"changelog.html":{},"contributing.html":{},"index.html":{}}}],["util/plugin",{"_index":803,"title":{},"body":{"modules/NgxEditorJSPluginServiceModule.html":{},"modules/PluginCodeModule.html":{},"modules/PluginImageModule.html":{},"modules/PluginLinkModule.html":{},"modules/PluginListModule.html":{},"modules/PluginMarkerModule.html":{},"modules/PluginSimpleImageModule.html":{}}}],["value",{"_index":279,"title":{},"body":{"interfaces/EditorJSMaterialForm.html":{},"injectables/MockNgZone.html":{},"directives/NgxEditorJSDirective.html":{},"injectables/NgxEditorJSPluginService.html":{},"injectables/NgxEditorJSService.html":{},"components/NgxTinynodesMatJsonOutputComponent.html":{},"components/NgxTinynodesMaterialFormFieldDemoComponent.html":{},"components/PageContainerComponent.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/variables.html":{}}}],["value(value",{"_index":284,"title":{},"body":{"interfaces/EditorJSMaterialForm.html":{}}}],["values",{"_index":149,"title":{},"body":{"interfaces/ChangeMap.html":{},"interfaces/EditorJSChange.html":{},"interfaces/EditorJSClass.html":{},"interfaces/EditorJSInstanceConfig.html":{},"interfaces/EditorMap.html":{},"interfaces/InjectorApiCallOptions.html":{},"interfaces/InjectorApiCallResponse.html":{},"interfaces/InjectorMethodOption.html":{},"directives/NgxEditorJSDirective.html":{},"injectables/NgxEditorJSService.html":{},"interfaces/ReadyMap.html":{},"interfaces/SavedMap.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["var",{"_index":501,"title":{},"body":{"components/NgxEditorJSDemoHomeComponent.html":{},"components/NgxTinynodesMatJsonOutputComponent.html":{},"components/NgxTinynodesMaterialFormFieldDemoComponent.html":{},"components/PageContainerComponent.html":{}}}],["variables",{"_index":1472,"title":{"miscellaneous/variables.html":{}},"body":{"contributing.html":{},"miscellaneous/variables.html":{}}}],["version",{"_index":173,"title":{},"body":{"interfaces/EditorJSClass.html":{},"interfaces/EditorJSInstanceConfig.html":{},"interfaces/InjectorApiCallOptions.html":{},"interfaces/InjectorApiCallResponse.html":{},"interfaces/InjectorMethodOption.html":{},"classes/MockEditorJS.html":{},"classes/MockPlugin.html":{},"directives/NgxEditorJSDirective.html":{},"injectables/NgxEditorJSService.html":{},"changelog.html":{},"contributing.html":{},"miscellaneous/variables.html":{}}}],["versioning",{"_index":1481,"title":{},"body":{"contributing.html":{}}}],["via",{"_index":84,"title":{},"body":{"interfaces/BlockData.html":{},"directives/NgxEditorJSDirective.html":{},"injectables/NgxEditorJSPluginService.html":{},"injectables/PagesService.html":{},"interfaces/PluginConfig.html":{},"interfaces/PluginConfigMap.html":{},"interfaces/ToolSettingsMap.html":{},"contributing.html":{},"index.html":{},"todo.html":{},"miscellaneous/typealiases.html":{}}}],["viewchild",{"_index":236,"title":{},"body":{"interfaces/EditorJSMaterialForm.html":{},"components/PageContainerComponent.html":{}}}],["viewchild('editorinstance",{"_index":317,"title":{},"body":{"interfaces/EditorJSMaterialForm.html":{}}}],["viewchild('ngxeditorjs",{"_index":1224,"title":{},"body":{"components/PageContainerComponent.html":{}}}],["viewer",{"_index":1001,"title":{},"body":{"modules/NgxEditorjsDemoModule.html":{},"modules/NgxTinynodesMatJsonOutputModule.html":{},"modules/NgxTinynodesMaterialFormFieldDemo.html":{},"dependencies.html":{}}}],["viewpoints",{"_index":1526,"title":{},"body":{"contributing.html":{}}}],["visit",{"_index":1691,"title":{},"body":{"index.html":{}}}],["void",{"_index":188,"title":{},"body":{"interfaces/EditorJSClass.html":{},"interfaces/EditorJSInstanceConfig.html":{},"interfaces/EditorJSMaterialForm.html":{},"interfaces/InjectorApiCallOptions.html":{},"interfaces/InjectorApiCallResponse.html":{},"interfaces/InjectorMethodOption.html":{},"classes/MockEditorJS.html":{},"injectables/MockNgZone.html":{},"classes/MockPlugin.html":{},"directives/NgxEditorJSDirective.html":{},"injectables/NgxEditorJSService.html":{},"components/NgxTinynodesMatJsonOutputComponent.html":{},"components/NgxTinynodesMaterialFormFieldDemoComponent.html":{},"components/PageContainerComponent.html":{},"injectables/PagesService.html":{}}}],["wait",{"_index":630,"title":{},"body":{"directives/NgxEditorJSDirective.html":{}}}],["want",{"_index":1703,"title":{},"body":{"index.html":{}}}],["warning",{"_index":1255,"title":{},"body":{"modules/PageStoreModule.html":{},"modules/PluginWarningModule.html":{}}}],["warranties",{"_index":1754,"title":{},"body":{"license.html":{}}}],["warranty",{"_index":1749,"title":{},"body":{"license.html":{}}}],["way",{"_index":492,"title":{},"body":{"components/NgxEditorJSDemoHomeComponent.html":{},"directives/NgxEditorJSDirective.html":{},"modules/NgxEditorjsPluginsModule.html":{},"injectables/PagesService.html":{}}}],["wednesday",{"_index":1399,"title":{},"body":{"changelog.html":{}}}],["welcoming",{"_index":1492,"title":{},"body":{"contributing.html":{}}}],["well",{"_index":1397,"title":{},"body":{"changelog.html":{}}}],["whether",{"_index":1766,"title":{},"body":{"license.html":{}}}],["width",{"_index":1200,"title":{},"body":{"components/NgxTinynodesMaterialFormFieldDemoComponent.html":{},"components/PageContainerComponent.html":{}}}],["wiki",{"_index":1575,"title":{},"body":{"contributing.html":{}}}],["wish",{"_index":1457,"title":{},"body":{"contributing.html":{}}}],["withbackground",{"_index":59,"title":{},"body":{"interfaces/Block.html":{},"interfaces/Header.html":{},"interfaces/HeaderBlock.html":{},"interfaces/Image.html":{},"interfaces/ImageBlock.html":{},"interfaces/List.html":{},"interfaces/ListBlock.html":{},"interfaces/Paragraph.html":{},"interfaces/ParagraphBlock.html":{}}}],["withborder",{"_index":56,"title":{},"body":{"interfaces/Block.html":{},"interfaces/Header.html":{},"interfaces/HeaderBlock.html":{},"interfaces/Image.html":{},"interfaces/ImageBlock.html":{},"interfaces/List.html":{},"interfaces/ListBlock.html":{},"interfaces/Paragraph.html":{},"interfaces/ParagraphBlock.html":{}}}],["within",{"_index":815,"title":{},"body":{"injectables/NgxEditorJSService.html":{},"contributing.html":{},"index.html":{}}}],["without",{"_index":1416,"title":{},"body":{"changelog.html":{},"contributing.html":{},"license.html":{}}}],["won't",{"_index":452,"title":{},"body":{"interfaces/NgxEditorJSConfig.html":{},"interfaces/NgxEditorJSModuleConfig.html":{},"components/NgxTinynodesMaterialFormFieldDemoComponent.html":{}}}],["work",{"_index":1193,"title":{},"body":{"components/NgxTinynodesMaterialFormFieldDemoComponent.html":{},"changelog.html":{}}}],["written",{"_index":1390,"title":{},"body":{"changelog.html":{}}}],["yes",{"_index":614,"title":{},"body":{"directives/NgxEditorJSDirective.html":{},"modules/NgxEditorJSModule.html":{},"injectables/PagesService.html":{},"miscellaneous/functions.html":{}}}],["zone",{"_index":417,"title":{},"body":{"injectables/MockNgZone.html":{},"injectables/NgxEditorJSService.html":{}}}],["zone.js",{"_index":1669,"title":{},"body":{"dependencies.html":{}}}],["zoom",{"_index":713,"title":{},"body":{"modules/NgxEditorJSModule.html":{},"modules/NgxEditorJSPluginServiceModule.html":{},"modules/NgxEditorjsDemoModule.html":{},"modules/NgxEditorjsPluginsModule.html":{},"modules/NgxTinynodesComponentsModule.html":{},"modules/NgxTinynodesMatJsonOutputModule.html":{},"modules/NgxTinynodesMatTagInputModule.html":{},"modules/NgxTinynodesMaterialFormFieldDemo.html":{},"modules/PageStoreModule.html":{},"overview.html":{}}}]],"pipeline":["stemmer"]},
    "store": {"interfaces/Block.html":{"url":"interfaces/Block.html","title":"interface - Block","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  Block\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            libs/ngx-editorjs/ngx-editorjs/src/lib/types/blocks.ts\n        \n\n            \n                Description\n            \n            \n                Base block type for EditorJS\n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        data\n                                \n                                \n                                        type\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n            \n    Indexable\n        \n            \n                \n                    \n                        [key: string]:        any\n\n                    \n                \n                        \n                            \n                                Defined in libs/ngx-editorjs/ngx-editorjs/src/lib/types/blocks.ts:13\n                            \n                        \n                \n                    \n                        Additional properties on the type\n\n                    \n                \n            \n        \n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        data\n                                    \n                                \n                                \n                                    \n                                        data:     T\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     T\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    The data interface for the block type\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        type\n                                    \n                                \n                                \n                                    \n                                        type:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    The EditorJS block type\n\n                                \n                            \n                        \n                    \n            \n    \n\n\n    \n        export interface Block {\n  /**\n   * The EditorJS block type\n   */\n  type: string;\n\n  /**\n   * The data interface for the block type\n   */\n  data: T;\n\n  /**\n   * Additional properties on the type\n   */\n  [key: string]: any;\n}\n\n/**\n * Available list styles, supports `ordered` and `unordered`.\n * A custom string can also be added\n */\nexport type ListStyle = 'ordered' | 'unordered' | string;\n\n/**\n * Default data type for a list block\n */\nexport interface List {\n  /**\n   * The list style\n   */\n  style: ListStyle;\n  /**\n   * List items of type T\n   */\n  items: T[];\n}\n\n/**\n * The default list block is provided by the EditorJS list plugin\n */\nexport interface ListBlock extends Block> {\n  /**\n   * The EditorJS block type\n   */\n  type: 'list';\n}\n\n/**\n * Default data type for a paragraph block\n */\ninterface Paragraph {\n  /**\n   * The paragraph text\n   */\n  text: string;\n}\n\n/**\n * Interface for a paragraph block\n */\nexport interface ParagraphBlock extends Block {\n  /**\n   * The EditorJS block type\n   */\n  type: 'paragraph';\n}\n\n/**\n * Default data type for a header block\n */\ninterface Header {\n  /**\n   * The header text\n   */\n  text: string;\n  /**\n   * The header level from 1-6\n   */\n  level: number;\n}\n\n/**\n * Interface for a header block\n */\nexport interface HeaderBlock extends Block {\n  /**\n   * The EditorJS block type\n   */\n  type: 'header';\n}\n\n/**\n * Default data type for a header block\n */\nexport interface Image {\n  /**\n   * The image URL\n   */\n  url: string;\n  /**\n   * Optional image caption\n   */\n  caption?: string;\n  /**\n   * Optional border property\n   */\n  withBorder?: boolean;\n\n  /**\n   * Optional background property\n   */\n  withBackground?: boolean;\n\n  /**\n   * Optional stretch property\n   */\n  stretched?: boolean;\n}\n\n/**\n * Interface for a image block\n */\nexport interface ImageBlock extends Block {\n  /**\n   * The EditorJS block type\n   */\n  type: 'image';\n}\n\n/**\n * Type of all the basic block type\n */\nexport type BlockTypes = ParagraphBlock | HeaderBlock | ImageBlock | ListBlock | Block;\n\n    \n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/BlockData.html":{"url":"interfaces/BlockData.html","title":"interface - BlockData","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  BlockData\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            libs/ngx-editorjs/ngx-editorjs-plugins/src/lib/types/plugins.ts\n        \n\n            \n                Description\n            \n            \n                Block Data interface\n\n            \n\n\n\n\n            \n    Indexable\n        \n            \n                \n                    \n                        [key: string]:        any\n\n                    \n                \n                        \n                            \n                                Defined in libs/ngx-editorjs/ngx-editorjs-plugins/src/lib/types/plugins.ts:7\n                            \n                        \n            \n        \n\n\n    \n\n\n    \n        import { InjectionToken } from '@angular/core';\nimport { ToolSettings, ToolConstructable } from '@editorjs/editorjs';\n\n/**\n * Block Data interface\n */\nexport interface BlockData {\n  [key: string]: any;\n}\n\n/**\n * The types of plugins supported, currently block and inline\n */\nexport enum PluginTypes {\n  /**\n   * A EditorJS block plugin\n   */\n  Block = 'block',\n  /**\n   * A EditorJS inline plugin\n   */\n  Inline = 'inline'\n}\n\n/**\n * The types of plugins supported via the plugin `type` property\n */\nexport type PluginType = PluginTypes.Block | PluginTypes.Inline | string;\n\n/**\n * A plugin property\n */\nexport type PluginProperty = string;\n\n/**\n * The EditorJS tool settings for this plugin\n */\nexport type EditorJSPlugin = ToolConstructable | ToolSettings;\n\n/**\n * A map of all the tools settings\n */\nexport interface ToolSettingsMap {\n  /**\n   * The key of the plugin and the plugin exported tool settings\n   */\n  [key: string]: EditorJSPlugin;\n}\n\n/**\n * A plugin configuration object\n */\nexport interface PluginConfig {\n  /**\n   * Specifies the type of plugin for the plugin provider\n   */\n  type: PluginProperty;\n  /**\n   * The key to use for the plugin\n   */\n  key: PluginProperty;\n  /**\n   * Label for displaying the plugin name\n   */\n  pluginName: PluginProperty;\n  /**\n   * Optional description for the plugin\n   */\n  description?: PluginProperty;\n  /**\n   * Optional shortcut for the plugin\n   */\n  shortcut?: PluginProperty;\n  /**\n   * Optional {@link https://editorjs.io/provide-custom-configuration | custom configuration} to pass to EditorJS\n   */\n  config?: any;\n\n  /**\n   * If a block tool, you can also set this to true if it contains inline tool support\n   */\n  inlineToolbar?: boolean;\n  /**\n   * Optional block data, used to define the block data for this type\n   * and used as a default\n   */\n  blockData?: BlockData;\n  /**\n   * The plugin for the editor\n   */\n  plugin: EditorJSPlugin | undefined;\n}\n\n/**\n * The Injection token for initial plugins as defined in the ngx-editorjs module\n */\nexport const EDITOR_JS_TOOL_INJECTOR = new InjectionToken('EDITOR_JS_TOOL_INJECTOR');\n\n/**\n * Injection token for a plugin config\n */\nexport const PLUGIN_CONFIG = new InjectionToken('PLUGIN_CONFIG');\n\n/**\n * A map of plugin configs\n */\nexport interface PluginConfigMap {\n  /**\n   * A plugin config per key\n   */\n  [key: string]: PluginConfig;\n}\n\n/**\n * Injection token for the plugin config map\n */\nexport const PluginClasses = new InjectionToken('PluginClasses');\n\n    \n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/ChangeMap.html":{"url":"interfaces/ChangeMap.html","title":"interface - ChangeMap","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  ChangeMap\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            libs/ngx-editorjs/ngx-editorjs/src/lib/types/maps.ts\n        \n\n            \n                Description\n            \n            \n                A map containing BehaviorSubject which is the last save from the EditorJS instance\n\n            \n\n\n\n\n            \n    Indexable\n        \n            \n                \n                    \n                        [key: string]:    BehaviorSubject\n\n                    \n                \n                        \n                            \n                                Defined in libs/ngx-editorjs/ngx-editorjs/src/lib/types/maps.ts:52\n                            \n                        \n                \n                    \n                        A map key containing a BehaviorSubject\n\n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import EditorJS, { OutputData } from '@editorjs/editorjs';\nimport { BehaviorSubject } from 'rxjs';\nimport { Block } from './blocks';\n\n/**\n * A map containing instances of `BehaviorSubject`\n */\nexport interface EditorMap {\n  /**\n   * A map key containing `BehaviorSubject`\n   */\n  [key: string]: BehaviorSubject;\n}\n\n/**\n * A map containing `BehaviorSubject` values of the ready state of EditorJS\n */\nexport interface ReadyMap {\n  /**\n   * A map key containing a `BehaviorSubject`\n   */\n  [key: string]: BehaviorSubject;\n}\n\n/**\n * A map containing `BehaviorSubject` values of the save state of EditorJS\n */\nexport interface SavedMap {\n  /**\n   * A map key containing a `BehaviorSubject`\n   */\n  [key: string]: BehaviorSubject;\n}\n\n/**\n * An EditorJS change event\n */\nexport interface EditorJSChange {\n  /**\n   * Time of the change\n   */\n  time: number;\n  /**\n   * Blocks in the change\n   */\n  blocks: Block[];\n}\n\n/**\n * A map containing `BehaviorSubject` which is the last save from the EditorJS instance\n */\nexport interface ChangeMap {\n  /**\n   * A map key containing a `BehaviorSubject`\n   */\n  [key: string]: BehaviorSubject;\n}\n\n    \n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/CreateEditorJSOptions.html":{"url":"interfaces/CreateEditorJSOptions.html","title":"interface - CreateEditorJSOptions","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  CreateEditorJSOptions\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            libs/ngx-editorjs/ngx-editorjs/src/lib/types/editorjs-service.ts\n        \n\n            \n                Description\n            \n            \n                EditorJS options\n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                            Optional\n                                        autoSave\n                                \n                                \n                                        config\n                                \n                                \n                                            Optional\n                                        excludeTools\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        autoSave\n                                    \n                                \n                                \n                                    \n                                        autoSave:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    Autosave on change, is set to false\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        config\n                                    \n                                \n                                \n                                    \n                                        config:     EditorConfig\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     EditorConfig\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Configuration\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        excludeTools\n                                    \n                                \n                                \n                                    \n                                        excludeTools:     string[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string[]\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    Tools to include, Optional - if not set all tools will be used\n\n                                \n                            \n                        \n                    \n            \n    \n\n\n    \n        import { EditorConfig } from '@editorjs/editorjs';\n\n/**\n * EditorJS options\n */\nexport interface CreateEditorJSOptions {\n  /**\n   * Configuration\n   */\n  config: EditorConfig;\n  /**\n   * Tools to include, Optional - if not set all tools will be used\n   */\n  excludeTools?: string[];\n  /**\n   * Autosave on change, is set to false\n   */\n  autoSave?: number;\n}\n\n    \n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/EditorJSChange.html":{"url":"interfaces/EditorJSChange.html","title":"interface - EditorJSChange","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  EditorJSChange\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            libs/ngx-editorjs/ngx-editorjs/src/lib/types/maps.ts\n        \n\n            \n                Description\n            \n            \n                An EditorJS change event\n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        blocks\n                                \n                                \n                                        time\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        blocks\n                                    \n                                \n                                \n                                    \n                                        blocks:         Block[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         Block[]\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Blocks in the change\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        time\n                                    \n                                \n                                \n                                    \n                                        time:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Time of the change\n\n                                \n                            \n                        \n                    \n            \n    \n\n\n    \n        import EditorJS, { OutputData } from '@editorjs/editorjs';\nimport { BehaviorSubject } from 'rxjs';\nimport { Block } from './blocks';\n\n/**\n * A map containing instances of `BehaviorSubject`\n */\nexport interface EditorMap {\n  /**\n   * A map key containing `BehaviorSubject`\n   */\n  [key: string]: BehaviorSubject;\n}\n\n/**\n * A map containing `BehaviorSubject` values of the ready state of EditorJS\n */\nexport interface ReadyMap {\n  /**\n   * A map key containing a `BehaviorSubject`\n   */\n  [key: string]: BehaviorSubject;\n}\n\n/**\n * A map containing `BehaviorSubject` values of the save state of EditorJS\n */\nexport interface SavedMap {\n  /**\n   * A map key containing a `BehaviorSubject`\n   */\n  [key: string]: BehaviorSubject;\n}\n\n/**\n * An EditorJS change event\n */\nexport interface EditorJSChange {\n  /**\n   * Time of the change\n   */\n  time: number;\n  /**\n   * Blocks in the change\n   */\n  blocks: Block[];\n}\n\n/**\n * A map containing `BehaviorSubject` which is the last save from the EditorJS instance\n */\nexport interface ChangeMap {\n  /**\n   * A map key containing a `BehaviorSubject`\n   */\n  [key: string]: BehaviorSubject;\n}\n\n    \n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/EditorJSClass.html":{"url":"interfaces/EditorJSClass.html","title":"interface - EditorJSClass","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  EditorJSClass\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            libs/ngx-editorjs/ngx-editorjs/src/lib/types/injector.ts\n        \n\n            \n                Description\n            \n            \n                Interface for the injected EditorJS class, returns the static\nclass of EditorJS with the version and that creates the instance and provides\nthe Typescript parse with type information\n\n            \n\n            \n                Extends\n            \n            \n                        Function\n            \n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        version\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        version\n                                    \n                                \n                                \n                                    \n                                        version:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    EditorJS version\n\n                                \n                            \n                        \n                    \n            \n    \n\n\n    \n        import { InjectionToken } from '@angular/core';\nimport EditorJS, { EditorConfig, OutputData } from '@editorjs/editorjs';\nimport { Block } from './blocks';\n\n/**\n * Configuration for creating an EditorJS instance\n */\nexport interface EditorJSInstanceConfig {\n  /**\n   * The editor configuration, this is required with at least the `holder` property\n   */\n  editorConfig: EditorConfig;\n  /**\n   * The method to call when the editor makes a change\n   */\n  onChange?: (holder?: string) => void;\n\n  /**\n   * The method to call with an editor is ready\n   */\n  onReady?: (holder?: string) => void;\n}\n\n/**\n * Default values for each internal map\n */\nexport const MAP_DEFAULTS = [\n  ['lastChangeMap', { time: 0, blocks: [], version: EditorJS.version }],\n  ['isReadyMap', false],\n  ['hasSavedMap', false]\n];\n\n/**\n * Injection token for the EditorJS class\n */\nexport const EDITORJS_MODULE_IMPORT = new InjectionToken('EDITORJS_MODULE_IMPORT');\n\n/**\n * The EditorJS class injector\n */\nexport const EditorJSInstance = new InjectionToken('EditorJSInstance');\n\n/**\n * Options for a Injector method\n */\nexport interface InjectorMethodOption {\n  /**\n   * The holder for the option\n   */\n  holder: string;\n  /**\n   * Optional blocks\n   */\n  data?: OutputData;\n  /**\n   * Optional editor\n   */\n  editor?: EditorJS;\n  /**\n   * Don't call save\n   */\n  skipSave?: boolean;\n}\n\n/**\n * Options to pass when calling the EditorJS instance API\n */\nexport interface InjectorApiCallOptions {\n  /**\n   * Holder for the EditorJS instance\n   */\n  holder: string;\n\n  /**\n   * The method to call\n   */\n  method: string;\n  /**\n   * The optional namespace for the API call\n   */\n  namespace?: string;\n}\n\n/**\n * A response from the EditorJS api\n */\nexport interface InjectorApiCallResponse extends InjectorApiCallOptions {\n  result: T;\n}\n\n/**\n * Interface for the injected EditorJS class, returns the static\n * class of EditorJS with the version and that creates the instance and provides\n * the Typescript parse with type information\n */\nexport interface EditorJSClass extends Function {\n  new (...args: any[]): T;\n  /**\n   * EditorJS version\n   */\n  version: string;\n}\n\n    \n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/EditorJSInstanceConfig.html":{"url":"interfaces/EditorJSInstanceConfig.html","title":"interface - EditorJSInstanceConfig","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  EditorJSInstanceConfig\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            libs/ngx-editorjs/ngx-editorjs/src/lib/types/injector.ts\n        \n\n            \n                Description\n            \n            \n                Configuration for creating an EditorJS instance\n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        editorConfig\n                                \n                                \n                                            Optional\n                                        onChange\n                                \n                                \n                                            Optional\n                                        onReady\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        editorConfig\n                                    \n                                \n                                \n                                    \n                                        editorConfig:     EditorConfig\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     EditorConfig\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    The editor configuration, this is required with at least the holder property\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        onChange\n                                    \n                                \n                                \n                                    \n                                        onChange:         function\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         function\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    The method to call when the editor makes a change\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        onReady\n                                    \n                                \n                                \n                                    \n                                        onReady:         function\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         function\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    The method to call with an editor is ready\n\n                                \n                            \n                        \n                    \n            \n    \n\n\n    \n        import { InjectionToken } from '@angular/core';\nimport EditorJS, { EditorConfig, OutputData } from '@editorjs/editorjs';\nimport { Block } from './blocks';\n\n/**\n * Configuration for creating an EditorJS instance\n */\nexport interface EditorJSInstanceConfig {\n  /**\n   * The editor configuration, this is required with at least the `holder` property\n   */\n  editorConfig: EditorConfig;\n  /**\n   * The method to call when the editor makes a change\n   */\n  onChange?: (holder?: string) => void;\n\n  /**\n   * The method to call with an editor is ready\n   */\n  onReady?: (holder?: string) => void;\n}\n\n/**\n * Default values for each internal map\n */\nexport const MAP_DEFAULTS = [\n  ['lastChangeMap', { time: 0, blocks: [], version: EditorJS.version }],\n  ['isReadyMap', false],\n  ['hasSavedMap', false]\n];\n\n/**\n * Injection token for the EditorJS class\n */\nexport const EDITORJS_MODULE_IMPORT = new InjectionToken('EDITORJS_MODULE_IMPORT');\n\n/**\n * The EditorJS class injector\n */\nexport const EditorJSInstance = new InjectionToken('EditorJSInstance');\n\n/**\n * Options for a Injector method\n */\nexport interface InjectorMethodOption {\n  /**\n   * The holder for the option\n   */\n  holder: string;\n  /**\n   * Optional blocks\n   */\n  data?: OutputData;\n  /**\n   * Optional editor\n   */\n  editor?: EditorJS;\n  /**\n   * Don't call save\n   */\n  skipSave?: boolean;\n}\n\n/**\n * Options to pass when calling the EditorJS instance API\n */\nexport interface InjectorApiCallOptions {\n  /**\n   * Holder for the EditorJS instance\n   */\n  holder: string;\n\n  /**\n   * The method to call\n   */\n  method: string;\n  /**\n   * The optional namespace for the API call\n   */\n  namespace?: string;\n}\n\n/**\n * A response from the EditorJS api\n */\nexport interface InjectorApiCallResponse extends InjectorApiCallOptions {\n  result: T;\n}\n\n/**\n * Interface for the injected EditorJS class, returns the static\n * class of EditorJS with the version and that creates the instance and provides\n * the Typescript parse with type information\n */\nexport interface EditorJSClass extends Function {\n  new (...args: any[]): T;\n  /**\n   * EditorJS version\n   */\n  version: string;\n}\n\n    \n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/EditorJSMaterialForm.html":{"url":"interfaces/EditorJSMaterialForm.html","title":"interface - EditorJSMaterialForm","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  EditorJSMaterialForm\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            libs/ngx-editorjs/ngx-editorjs/src/lib/containers/editorjs-mat-field/editorjs-mat-field.component.ts\n        \n\n            \n                Description\n            \n            \n                Single interface for EditorJSMaterialForm\n\n            \n\n            \n                Extends\n            \n            \n                    MatFormFieldControl\n            \n\n\n\n\n    \n\n\n    \n        import { FocusMonitor } from '@angular/cdk/a11y';\nimport { coerceBooleanProperty } from '@angular/cdk/coercion';\nimport {\n  AfterContentInit,\n  ChangeDetectionStrategy,\n  ChangeDetectorRef,\n  Component,\n  DoCheck,\n  forwardRef,\n  HostBinding,\n  Input,\n  OnDestroy,\n  OnInit,\n  Optional,\n  Provider,\n  Self,\n  ViewChild\n} from '@angular/core';\nimport { NgControl } from '@angular/forms';\nimport { MatFormFieldControl } from '@angular/material/form-field';\nimport { Subject } from 'rxjs';\nimport { takeUntil } from 'rxjs/operators';\nimport { NgxEditorJSDirective } from '../../directives/ngx-editorjs.directive';\nimport { NgxEditorJSService } from '../../services/editorjs.service';\nimport { NgxEditorJSComponent } from '../editorjs/editorjs.component';\n\n/**\n * Provider for the EditorJS Material Field Component\n */\nexport const EDITORJS_MATERIAL_FIELD_CONTROL: Provider = {\n  provide: MatFormFieldControl,\n  useExisting: forwardRef(() => NgxEditorJSMatFieldComponent),\n  multi: true\n};\n\n/**\n * Single interface for EditorJSMaterialForm\n */\nexport interface EditorJSMaterialForm\n  extends MatFormFieldControl,\n    OnInit,\n    AfterContentInit,\n    OnDestroy,\n    DoCheck {}\n\n/**\n * This component provides a [Material](https://material.angular.io) compatible `` component.\n * It provides a full implementation of all the required properties of a Material component\n *\n * @example\n * \n *  \n * \n */\n@Component({\n  selector: 'ngx-editorjs-mat-field',\n  templateUrl: 'editorjs-mat-field.component.html',\n  styleUrls: ['editorjs-mat-field.component.scss'],\n  providers: [EDITORJS_MATERIAL_FIELD_CONTROL],\n  changeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class NgxEditorJSMatFieldComponent extends NgxEditorJSComponent implements EditorJSMaterialForm {\n  /**\n   * Internal Static ID for Material for each editor instance\n   */\n  static nextId = 0;\n  /**\n   * Material state change subject\n   */\n  public stateChanges = new Subject();\n\n  /**\n   * Material control type\n   */\n  public controlType = 'ngx-editorjs-mat-field';\n\n  /**\n   * Material error state\n   */\n  public errorState = false;\n\n  /**\n   * Get the component value\n   */\n  get value(): any {\n    return this._value;\n  }\n\n  /**\n   * Set the component value\n   * @param value The value to set\n   */\n  @Input('value')\n  set value(value: any) {\n    this._value = value;\n    this.stateChanges.next();\n  }\n\n  /**\n   * Material placeholder value\n   */\n  private _placeholder: string;\n\n  /**\n   * Get the Material placeholder value\n   */\n  get placeholder() {\n    return this._placeholder;\n  }\n\n  /**\n   * Set the material Placeholder value\n   * @input placeholder The placeholder state to set\n   */\n  @Input('placeholder')\n  set placeholder(placeholder: string) {\n    this._placeholder = placeholder;\n    this.stateChanges.next();\n  }\n\n  /**\n   * Material focused state\n   */\n  private _focused: boolean;\n  /**\n   * Get the Material focused state\n   */\n  get focused() {\n    return this._focused;\n  }\n\n  /**\n   * Set the Material focused state\n   * @param focused The focused state to set\n   */\n  @Input('focused')\n  set focused(focused: boolean) {\n    this._focused = coerceBooleanProperty(focused);\n    if (this._focused) {\n      this.onTouch();\n    }\n    this.stateChanges.next();\n  }\n\n  /**\n   * Material Required Value\n   */\n  private _required = false;\n\n  /**\n   * Get the Material required state\n   */\n  get required() {\n    return this._required;\n  }\n\n  /**\n   * Set the Material requied state\n   * @param required The required state to set\n   */\n  @Input('required')\n  set required(required: boolean) {\n    this._required = coerceBooleanProperty(required);\n    this.stateChanges.next();\n  }\n\n  /**\n   * Material disabled state\n   */\n  private _disabled = false;\n\n  /**\n   * Get the Material disabled state\n   */\n  get disabled() {\n    return this._disabled;\n  }\n\n  /**\n   * Set the Material disabled state\n   * @param disabled The disabled state to set\n   */\n  @Input('disabled')\n  set disabled(disabled: boolean) {\n    this._disabled = coerceBooleanProperty(disabled);\n    this.stateChanges.next();\n  }\n\n  /**\n   * Material empty state\n   */\n  private _empty: boolean;\n  /**\n   * Get the Material empty state\n   */\n  public get empty() {\n    return this._empty;\n  }\n\n  /**\n   * Set the Material empty state\n   * @param empty The empty value\n   */\n  public set empty(empty: boolean) {\n    this._empty = empty;\n  }\n\n  /**\n   * Access to the underlying {NgxEditorJSDirective}\n   */\n  @ViewChild('editorInstance', { read: NgxEditorJSDirective, static: true })\n  public readonly editorInstance: NgxEditorJSDirective;\n\n  /**\n   * Host binding to the unique ID for this editor for material\n   */\n  @HostBinding()\n  id = `ngx-editorjs-mat-field-${NgxEditorJSMatFieldComponent.nextId++}`;\n\n  /**\n   * Gets if the Material label should float\n   */\n  @HostBinding('class.floating')\n  get shouldLabelFloat() {\n    return this.focused || !this.empty;\n  }\n\n  /**\n   * Host binding for ARIA label\n   */\n  @HostBinding('attr.aria-describedby') describedBy = '';\n\n  /**\n   *\n   * @param ids The IDs of the Material components\n   */\n  public setDescribedByIds(ids: string[]) {\n    this.describedBy = ids.join(' ');\n  }\n\n  /**\n   * Material on container click\n   * @param event The {MouseEvent} for the container click\n   */\n  public onContainerClick(event: MouseEvent) {\n    this.onTouch(event);\n    this.stateChanges.next();\n  }\n\n  /**\n   * Constructor for the Material field, as this extends the `NgxEditorJSComponent` component\n   * we call `super()` to get all the properties of that component\n   * @param editorService The NgxEditorJSService instance\n   * @param focusMonitor Focus monitor for the Material element\n   * @param changeDetection The Change detection ref\n   * @param ngControl The Angular control base class\n   */\n  constructor(\n    protected readonly editorService: NgxEditorJSService,\n    protected focusMonitor: FocusMonitor,\n    protected readonly changeDetection: ChangeDetectorRef,\n    @Optional() @Self() public ngControl: NgControl\n  ) {\n    super(editorService, focusMonitor, changeDetection);\n  }\n\n  /**\n   * Called on OnInit\n   */\n  // tslint:disable-next-line:use-lifecycle-interface\n  public ngOnInit(): void {\n    if (this.ngControl !== null) {\n      this.ngControl.valueAccessor = this;\n    }\n  }\n\n  /**\n   * Inside the AfterContentInit life-cycle we set up a listener for focus\n   * and trigger focus autosave subscribe and unsubscribe\n   */\n  // tslint:disable-next-line:use-lifecycle-interface\n  public ngAfterContentInit(): void {\n    this.setupServiceSubscriptions();\n    this.getFocusMonitor(this.editorInstance.element)\n      .pipe(takeUntil(this.onDestroy$))\n      .subscribe(focused => {\n        this.onTouch();\n        this.focused = focused;\n        this.stateChanges.next();\n      });\n  }\n\n  /**\n   * Set the error state based on the underlying control state\n   */\n  // tslint:disable-next-line:use-lifecycle-interface\n  ngDoCheck(): void {\n    if (this.ngControl) {\n      this.errorState = this.ngControl.invalid && this.ngControl.touched;\n      this.stateChanges.next();\n    }\n  }\n}\n\n    \n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/EditorMap.html":{"url":"interfaces/EditorMap.html","title":"interface - EditorMap","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  EditorMap\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            libs/ngx-editorjs/ngx-editorjs/src/lib/types/maps.ts\n        \n\n            \n                Description\n            \n            \n                A map containing instances of BehaviorSubject\n\n            \n\n\n\n\n            \n    Indexable\n        \n            \n                \n                    \n                        [key: string]:    BehaviorSubject\n\n                    \n                \n                        \n                            \n                                Defined in libs/ngx-editorjs/ngx-editorjs/src/lib/types/maps.ts:8\n                            \n                        \n                \n                    \n                        A map key containing BehaviorSubject\n\n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import EditorJS, { OutputData } from '@editorjs/editorjs';\nimport { BehaviorSubject } from 'rxjs';\nimport { Block } from './blocks';\n\n/**\n * A map containing instances of `BehaviorSubject`\n */\nexport interface EditorMap {\n  /**\n   * A map key containing `BehaviorSubject`\n   */\n  [key: string]: BehaviorSubject;\n}\n\n/**\n * A map containing `BehaviorSubject` values of the ready state of EditorJS\n */\nexport interface ReadyMap {\n  /**\n   * A map key containing a `BehaviorSubject`\n   */\n  [key: string]: BehaviorSubject;\n}\n\n/**\n * A map containing `BehaviorSubject` values of the save state of EditorJS\n */\nexport interface SavedMap {\n  /**\n   * A map key containing a `BehaviorSubject`\n   */\n  [key: string]: BehaviorSubject;\n}\n\n/**\n * An EditorJS change event\n */\nexport interface EditorJSChange {\n  /**\n   * Time of the change\n   */\n  time: number;\n  /**\n   * Blocks in the change\n   */\n  blocks: Block[];\n}\n\n/**\n * A map containing `BehaviorSubject` which is the last save from the EditorJS instance\n */\nexport interface ChangeMap {\n  /**\n   * A map key containing a `BehaviorSubject`\n   */\n  [key: string]: BehaviorSubject;\n}\n\n    \n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/Header.html":{"url":"interfaces/Header.html","title":"interface - Header","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  Header\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            libs/ngx-editorjs/ngx-editorjs/src/lib/types/blocks.ts\n        \n\n            \n                Description\n            \n            \n                Default data type for a header block\n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        level\n                                \n                                \n                                        text\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        level\n                                    \n                                \n                                \n                                    \n                                        level:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    The header level from 1-6\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        text\n                                    \n                                \n                                \n                                    \n                                        text:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    The header text\n\n                                \n                            \n                        \n                    \n            \n    \n\n\n    \n        export interface Block {\n  /**\n   * The EditorJS block type\n   */\n  type: string;\n\n  /**\n   * The data interface for the block type\n   */\n  data: T;\n\n  /**\n   * Additional properties on the type\n   */\n  [key: string]: any;\n}\n\n/**\n * Available list styles, supports `ordered` and `unordered`.\n * A custom string can also be added\n */\nexport type ListStyle = 'ordered' | 'unordered' | string;\n\n/**\n * Default data type for a list block\n */\nexport interface List {\n  /**\n   * The list style\n   */\n  style: ListStyle;\n  /**\n   * List items of type T\n   */\n  items: T[];\n}\n\n/**\n * The default list block is provided by the EditorJS list plugin\n */\nexport interface ListBlock extends Block> {\n  /**\n   * The EditorJS block type\n   */\n  type: 'list';\n}\n\n/**\n * Default data type for a paragraph block\n */\ninterface Paragraph {\n  /**\n   * The paragraph text\n   */\n  text: string;\n}\n\n/**\n * Interface for a paragraph block\n */\nexport interface ParagraphBlock extends Block {\n  /**\n   * The EditorJS block type\n   */\n  type: 'paragraph';\n}\n\n/**\n * Default data type for a header block\n */\ninterface Header {\n  /**\n   * The header text\n   */\n  text: string;\n  /**\n   * The header level from 1-6\n   */\n  level: number;\n}\n\n/**\n * Interface for a header block\n */\nexport interface HeaderBlock extends Block {\n  /**\n   * The EditorJS block type\n   */\n  type: 'header';\n}\n\n/**\n * Default data type for a header block\n */\nexport interface Image {\n  /**\n   * The image URL\n   */\n  url: string;\n  /**\n   * Optional image caption\n   */\n  caption?: string;\n  /**\n   * Optional border property\n   */\n  withBorder?: boolean;\n\n  /**\n   * Optional background property\n   */\n  withBackground?: boolean;\n\n  /**\n   * Optional stretch property\n   */\n  stretched?: boolean;\n}\n\n/**\n * Interface for a image block\n */\nexport interface ImageBlock extends Block {\n  /**\n   * The EditorJS block type\n   */\n  type: 'image';\n}\n\n/**\n * Type of all the basic block type\n */\nexport type BlockTypes = ParagraphBlock | HeaderBlock | ImageBlock | ListBlock | Block;\n\n    \n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/HeaderBlock.html":{"url":"interfaces/HeaderBlock.html","title":"interface - HeaderBlock","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  HeaderBlock\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            libs/ngx-editorjs/ngx-editorjs/src/lib/types/blocks.ts\n        \n\n            \n                Description\n            \n            \n                Interface for a header block\n\n            \n\n            \n                Extends\n            \n            \n                        Block\n            \n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        type\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        type\n                                    \n                                \n                                \n                                    \n                                        type:     \n\n                                    \n                                \n\n\n\n\n\n\n\n                            \n                                \n                                    The EditorJS block type\n\n                                \n                            \n                        \n                    \n            \n    \n\n\n    \n        export interface Block {\n  /**\n   * The EditorJS block type\n   */\n  type: string;\n\n  /**\n   * The data interface for the block type\n   */\n  data: T;\n\n  /**\n   * Additional properties on the type\n   */\n  [key: string]: any;\n}\n\n/**\n * Available list styles, supports `ordered` and `unordered`.\n * A custom string can also be added\n */\nexport type ListStyle = 'ordered' | 'unordered' | string;\n\n/**\n * Default data type for a list block\n */\nexport interface List {\n  /**\n   * The list style\n   */\n  style: ListStyle;\n  /**\n   * List items of type T\n   */\n  items: T[];\n}\n\n/**\n * The default list block is provided by the EditorJS list plugin\n */\nexport interface ListBlock extends Block> {\n  /**\n   * The EditorJS block type\n   */\n  type: 'list';\n}\n\n/**\n * Default data type for a paragraph block\n */\ninterface Paragraph {\n  /**\n   * The paragraph text\n   */\n  text: string;\n}\n\n/**\n * Interface for a paragraph block\n */\nexport interface ParagraphBlock extends Block {\n  /**\n   * The EditorJS block type\n   */\n  type: 'paragraph';\n}\n\n/**\n * Default data type for a header block\n */\ninterface Header {\n  /**\n   * The header text\n   */\n  text: string;\n  /**\n   * The header level from 1-6\n   */\n  level: number;\n}\n\n/**\n * Interface for a header block\n */\nexport interface HeaderBlock extends Block {\n  /**\n   * The EditorJS block type\n   */\n  type: 'header';\n}\n\n/**\n * Default data type for a header block\n */\nexport interface Image {\n  /**\n   * The image URL\n   */\n  url: string;\n  /**\n   * Optional image caption\n   */\n  caption?: string;\n  /**\n   * Optional border property\n   */\n  withBorder?: boolean;\n\n  /**\n   * Optional background property\n   */\n  withBackground?: boolean;\n\n  /**\n   * Optional stretch property\n   */\n  stretched?: boolean;\n}\n\n/**\n * Interface for a image block\n */\nexport interface ImageBlock extends Block {\n  /**\n   * The EditorJS block type\n   */\n  type: 'image';\n}\n\n/**\n * Type of all the basic block type\n */\nexport type BlockTypes = ParagraphBlock | HeaderBlock | ImageBlock | ListBlock | Block;\n\n    \n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/Image.html":{"url":"interfaces/Image.html","title":"interface - Image","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  Image\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            libs/ngx-editorjs/ngx-editorjs/src/lib/types/blocks.ts\n        \n\n            \n                Description\n            \n            \n                Default data type for a header block\n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                            Optional\n                                        caption\n                                \n                                \n                                            Optional\n                                        stretched\n                                \n                                \n                                        url\n                                \n                                \n                                            Optional\n                                        withBackground\n                                \n                                \n                                            Optional\n                                        withBorder\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        caption\n                                    \n                                \n                                \n                                    \n                                        caption:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    Optional image caption\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        stretched\n                                    \n                                \n                                \n                                    \n                                        stretched:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    Optional stretch property\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        url\n                                    \n                                \n                                \n                                    \n                                        url:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    The image URL\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        withBackground\n                                    \n                                \n                                \n                                    \n                                        withBackground:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    Optional background property\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        withBorder\n                                    \n                                \n                                \n                                    \n                                        withBorder:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    Optional border property\n\n                                \n                            \n                        \n                    \n            \n    \n\n\n    \n        export interface Block {\n  /**\n   * The EditorJS block type\n   */\n  type: string;\n\n  /**\n   * The data interface for the block type\n   */\n  data: T;\n\n  /**\n   * Additional properties on the type\n   */\n  [key: string]: any;\n}\n\n/**\n * Available list styles, supports `ordered` and `unordered`.\n * A custom string can also be added\n */\nexport type ListStyle = 'ordered' | 'unordered' | string;\n\n/**\n * Default data type for a list block\n */\nexport interface List {\n  /**\n   * The list style\n   */\n  style: ListStyle;\n  /**\n   * List items of type T\n   */\n  items: T[];\n}\n\n/**\n * The default list block is provided by the EditorJS list plugin\n */\nexport interface ListBlock extends Block> {\n  /**\n   * The EditorJS block type\n   */\n  type: 'list';\n}\n\n/**\n * Default data type for a paragraph block\n */\ninterface Paragraph {\n  /**\n   * The paragraph text\n   */\n  text: string;\n}\n\n/**\n * Interface for a paragraph block\n */\nexport interface ParagraphBlock extends Block {\n  /**\n   * The EditorJS block type\n   */\n  type: 'paragraph';\n}\n\n/**\n * Default data type for a header block\n */\ninterface Header {\n  /**\n   * The header text\n   */\n  text: string;\n  /**\n   * The header level from 1-6\n   */\n  level: number;\n}\n\n/**\n * Interface for a header block\n */\nexport interface HeaderBlock extends Block {\n  /**\n   * The EditorJS block type\n   */\n  type: 'header';\n}\n\n/**\n * Default data type for a header block\n */\nexport interface Image {\n  /**\n   * The image URL\n   */\n  url: string;\n  /**\n   * Optional image caption\n   */\n  caption?: string;\n  /**\n   * Optional border property\n   */\n  withBorder?: boolean;\n\n  /**\n   * Optional background property\n   */\n  withBackground?: boolean;\n\n  /**\n   * Optional stretch property\n   */\n  stretched?: boolean;\n}\n\n/**\n * Interface for a image block\n */\nexport interface ImageBlock extends Block {\n  /**\n   * The EditorJS block type\n   */\n  type: 'image';\n}\n\n/**\n * Type of all the basic block type\n */\nexport type BlockTypes = ParagraphBlock | HeaderBlock | ImageBlock | ListBlock | Block;\n\n    \n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/ImageBlock.html":{"url":"interfaces/ImageBlock.html","title":"interface - ImageBlock","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  ImageBlock\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            libs/ngx-editorjs/ngx-editorjs/src/lib/types/blocks.ts\n        \n\n            \n                Description\n            \n            \n                Interface for a image block\n\n            \n\n            \n                Extends\n            \n            \n                        Block\n            \n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        type\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        type\n                                    \n                                \n                                \n                                    \n                                        type:     \n\n                                    \n                                \n\n\n\n\n\n\n\n                            \n                                \n                                    The EditorJS block type\n\n                                \n                            \n                        \n                    \n            \n    \n\n\n    \n        export interface Block {\n  /**\n   * The EditorJS block type\n   */\n  type: string;\n\n  /**\n   * The data interface for the block type\n   */\n  data: T;\n\n  /**\n   * Additional properties on the type\n   */\n  [key: string]: any;\n}\n\n/**\n * Available list styles, supports `ordered` and `unordered`.\n * A custom string can also be added\n */\nexport type ListStyle = 'ordered' | 'unordered' | string;\n\n/**\n * Default data type for a list block\n */\nexport interface List {\n  /**\n   * The list style\n   */\n  style: ListStyle;\n  /**\n   * List items of type T\n   */\n  items: T[];\n}\n\n/**\n * The default list block is provided by the EditorJS list plugin\n */\nexport interface ListBlock extends Block> {\n  /**\n   * The EditorJS block type\n   */\n  type: 'list';\n}\n\n/**\n * Default data type for a paragraph block\n */\ninterface Paragraph {\n  /**\n   * The paragraph text\n   */\n  text: string;\n}\n\n/**\n * Interface for a paragraph block\n */\nexport interface ParagraphBlock extends Block {\n  /**\n   * The EditorJS block type\n   */\n  type: 'paragraph';\n}\n\n/**\n * Default data type for a header block\n */\ninterface Header {\n  /**\n   * The header text\n   */\n  text: string;\n  /**\n   * The header level from 1-6\n   */\n  level: number;\n}\n\n/**\n * Interface for a header block\n */\nexport interface HeaderBlock extends Block {\n  /**\n   * The EditorJS block type\n   */\n  type: 'header';\n}\n\n/**\n * Default data type for a header block\n */\nexport interface Image {\n  /**\n   * The image URL\n   */\n  url: string;\n  /**\n   * Optional image caption\n   */\n  caption?: string;\n  /**\n   * Optional border property\n   */\n  withBorder?: boolean;\n\n  /**\n   * Optional background property\n   */\n  withBackground?: boolean;\n\n  /**\n   * Optional stretch property\n   */\n  stretched?: boolean;\n}\n\n/**\n * Interface for a image block\n */\nexport interface ImageBlock extends Block {\n  /**\n   * The EditorJS block type\n   */\n  type: 'image';\n}\n\n/**\n * Type of all the basic block type\n */\nexport type BlockTypes = ParagraphBlock | HeaderBlock | ImageBlock | ListBlock | Block;\n\n    \n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/InjectorApiCallOptions.html":{"url":"interfaces/InjectorApiCallOptions.html","title":"interface - InjectorApiCallOptions","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  InjectorApiCallOptions\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            libs/ngx-editorjs/ngx-editorjs/src/lib/types/injector.ts\n        \n\n            \n                Description\n            \n            \n                Options to pass when calling the EditorJS instance API\n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        holder\n                                \n                                \n                                        method\n                                \n                                \n                                            Optional\n                                        namespace\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        holder\n                                    \n                                \n                                \n                                    \n                                        holder:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Holder for the EditorJS instance\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        method\n                                    \n                                \n                                \n                                    \n                                        method:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    The method to call\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        namespace\n                                    \n                                \n                                \n                                    \n                                        namespace:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    The optional namespace for the API call\n\n                                \n                            \n                        \n                    \n            \n    \n\n\n    \n        import { InjectionToken } from '@angular/core';\nimport EditorJS, { EditorConfig, OutputData } from '@editorjs/editorjs';\nimport { Block } from './blocks';\n\n/**\n * Configuration for creating an EditorJS instance\n */\nexport interface EditorJSInstanceConfig {\n  /**\n   * The editor configuration, this is required with at least the `holder` property\n   */\n  editorConfig: EditorConfig;\n  /**\n   * The method to call when the editor makes a change\n   */\n  onChange?: (holder?: string) => void;\n\n  /**\n   * The method to call with an editor is ready\n   */\n  onReady?: (holder?: string) => void;\n}\n\n/**\n * Default values for each internal map\n */\nexport const MAP_DEFAULTS = [\n  ['lastChangeMap', { time: 0, blocks: [], version: EditorJS.version }],\n  ['isReadyMap', false],\n  ['hasSavedMap', false]\n];\n\n/**\n * Injection token for the EditorJS class\n */\nexport const EDITORJS_MODULE_IMPORT = new InjectionToken('EDITORJS_MODULE_IMPORT');\n\n/**\n * The EditorJS class injector\n */\nexport const EditorJSInstance = new InjectionToken('EditorJSInstance');\n\n/**\n * Options for a Injector method\n */\nexport interface InjectorMethodOption {\n  /**\n   * The holder for the option\n   */\n  holder: string;\n  /**\n   * Optional blocks\n   */\n  data?: OutputData;\n  /**\n   * Optional editor\n   */\n  editor?: EditorJS;\n  /**\n   * Don't call save\n   */\n  skipSave?: boolean;\n}\n\n/**\n * Options to pass when calling the EditorJS instance API\n */\nexport interface InjectorApiCallOptions {\n  /**\n   * Holder for the EditorJS instance\n   */\n  holder: string;\n\n  /**\n   * The method to call\n   */\n  method: string;\n  /**\n   * The optional namespace for the API call\n   */\n  namespace?: string;\n}\n\n/**\n * A response from the EditorJS api\n */\nexport interface InjectorApiCallResponse extends InjectorApiCallOptions {\n  result: T;\n}\n\n/**\n * Interface for the injected EditorJS class, returns the static\n * class of EditorJS with the version and that creates the instance and provides\n * the Typescript parse with type information\n */\nexport interface EditorJSClass extends Function {\n  new (...args: any[]): T;\n  /**\n   * EditorJS version\n   */\n  version: string;\n}\n\n    \n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/InjectorApiCallResponse.html":{"url":"interfaces/InjectorApiCallResponse.html","title":"interface - InjectorApiCallResponse","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  InjectorApiCallResponse\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            libs/ngx-editorjs/ngx-editorjs/src/lib/types/injector.ts\n        \n\n            \n                Description\n            \n            \n                A response from the EditorJS api\n\n            \n\n            \n                Extends\n            \n            \n                        InjectorApiCallOptions\n            \n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        result\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        result\n                                    \n                                \n                                \n                                    \n                                        result:     T\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     T\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { InjectionToken } from '@angular/core';\nimport EditorJS, { EditorConfig, OutputData } from '@editorjs/editorjs';\nimport { Block } from './blocks';\n\n/**\n * Configuration for creating an EditorJS instance\n */\nexport interface EditorJSInstanceConfig {\n  /**\n   * The editor configuration, this is required with at least the `holder` property\n   */\n  editorConfig: EditorConfig;\n  /**\n   * The method to call when the editor makes a change\n   */\n  onChange?: (holder?: string) => void;\n\n  /**\n   * The method to call with an editor is ready\n   */\n  onReady?: (holder?: string) => void;\n}\n\n/**\n * Default values for each internal map\n */\nexport const MAP_DEFAULTS = [\n  ['lastChangeMap', { time: 0, blocks: [], version: EditorJS.version }],\n  ['isReadyMap', false],\n  ['hasSavedMap', false]\n];\n\n/**\n * Injection token for the EditorJS class\n */\nexport const EDITORJS_MODULE_IMPORT = new InjectionToken('EDITORJS_MODULE_IMPORT');\n\n/**\n * The EditorJS class injector\n */\nexport const EditorJSInstance = new InjectionToken('EditorJSInstance');\n\n/**\n * Options for a Injector method\n */\nexport interface InjectorMethodOption {\n  /**\n   * The holder for the option\n   */\n  holder: string;\n  /**\n   * Optional blocks\n   */\n  data?: OutputData;\n  /**\n   * Optional editor\n   */\n  editor?: EditorJS;\n  /**\n   * Don't call save\n   */\n  skipSave?: boolean;\n}\n\n/**\n * Options to pass when calling the EditorJS instance API\n */\nexport interface InjectorApiCallOptions {\n  /**\n   * Holder for the EditorJS instance\n   */\n  holder: string;\n\n  /**\n   * The method to call\n   */\n  method: string;\n  /**\n   * The optional namespace for the API call\n   */\n  namespace?: string;\n}\n\n/**\n * A response from the EditorJS api\n */\nexport interface InjectorApiCallResponse extends InjectorApiCallOptions {\n  result: T;\n}\n\n/**\n * Interface for the injected EditorJS class, returns the static\n * class of EditorJS with the version and that creates the instance and provides\n * the Typescript parse with type information\n */\nexport interface EditorJSClass extends Function {\n  new (...args: any[]): T;\n  /**\n   * EditorJS version\n   */\n  version: string;\n}\n\n    \n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/InjectorMethodOption.html":{"url":"interfaces/InjectorMethodOption.html","title":"interface - InjectorMethodOption","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  InjectorMethodOption\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            libs/ngx-editorjs/ngx-editorjs/src/lib/types/injector.ts\n        \n\n            \n                Description\n            \n            \n                Options for a Injector method\n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                            Optional\n                                        data\n                                \n                                \n                                            Optional\n                                        editor\n                                \n                                \n                                        holder\n                                \n                                \n                                            Optional\n                                        skipSave\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        data\n                                    \n                                \n                                \n                                    \n                                        data:     OutputData\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     OutputData\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    Optional blocks\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        editor\n                                    \n                                \n                                \n                                    \n                                        editor:     EditorJS\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     EditorJS\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    Optional editor\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        holder\n                                    \n                                \n                                \n                                    \n                                        holder:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    The holder for the option\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        skipSave\n                                    \n                                \n                                \n                                    \n                                        skipSave:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    Don't call save\n\n                                \n                            \n                        \n                    \n            \n    \n\n\n    \n        import { InjectionToken } from '@angular/core';\nimport EditorJS, { EditorConfig, OutputData } from '@editorjs/editorjs';\nimport { Block } from './blocks';\n\n/**\n * Configuration for creating an EditorJS instance\n */\nexport interface EditorJSInstanceConfig {\n  /**\n   * The editor configuration, this is required with at least the `holder` property\n   */\n  editorConfig: EditorConfig;\n  /**\n   * The method to call when the editor makes a change\n   */\n  onChange?: (holder?: string) => void;\n\n  /**\n   * The method to call with an editor is ready\n   */\n  onReady?: (holder?: string) => void;\n}\n\n/**\n * Default values for each internal map\n */\nexport const MAP_DEFAULTS = [\n  ['lastChangeMap', { time: 0, blocks: [], version: EditorJS.version }],\n  ['isReadyMap', false],\n  ['hasSavedMap', false]\n];\n\n/**\n * Injection token for the EditorJS class\n */\nexport const EDITORJS_MODULE_IMPORT = new InjectionToken('EDITORJS_MODULE_IMPORT');\n\n/**\n * The EditorJS class injector\n */\nexport const EditorJSInstance = new InjectionToken('EditorJSInstance');\n\n/**\n * Options for a Injector method\n */\nexport interface InjectorMethodOption {\n  /**\n   * The holder for the option\n   */\n  holder: string;\n  /**\n   * Optional blocks\n   */\n  data?: OutputData;\n  /**\n   * Optional editor\n   */\n  editor?: EditorJS;\n  /**\n   * Don't call save\n   */\n  skipSave?: boolean;\n}\n\n/**\n * Options to pass when calling the EditorJS instance API\n */\nexport interface InjectorApiCallOptions {\n  /**\n   * Holder for the EditorJS instance\n   */\n  holder: string;\n\n  /**\n   * The method to call\n   */\n  method: string;\n  /**\n   * The optional namespace for the API call\n   */\n  namespace?: string;\n}\n\n/**\n * A response from the EditorJS api\n */\nexport interface InjectorApiCallResponse extends InjectorApiCallOptions {\n  result: T;\n}\n\n/**\n * Interface for the injected EditorJS class, returns the static\n * class of EditorJS with the version and that creates the instance and provides\n * the Typescript parse with type information\n */\nexport interface EditorJSClass extends Function {\n  new (...args: any[]): T;\n  /**\n   * EditorJS version\n   */\n  version: string;\n}\n\n    \n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/List.html":{"url":"interfaces/List.html","title":"interface - List","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  List\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            libs/ngx-editorjs/ngx-editorjs/src/lib/types/blocks.ts\n        \n\n            \n                Description\n            \n            \n                Default data type for a list block\n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        items\n                                \n                                \n                                        style\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        items\n                                    \n                                \n                                \n                                    \n                                        items:     T[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     T[]\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    List items of type T\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        style\n                                    \n                                \n                                \n                                    \n                                        style:         ListStyle\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         ListStyle\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    The list style\n\n                                \n                            \n                        \n                    \n            \n    \n\n\n    \n        export interface Block {\n  /**\n   * The EditorJS block type\n   */\n  type: string;\n\n  /**\n   * The data interface for the block type\n   */\n  data: T;\n\n  /**\n   * Additional properties on the type\n   */\n  [key: string]: any;\n}\n\n/**\n * Available list styles, supports `ordered` and `unordered`.\n * A custom string can also be added\n */\nexport type ListStyle = 'ordered' | 'unordered' | string;\n\n/**\n * Default data type for a list block\n */\nexport interface List {\n  /**\n   * The list style\n   */\n  style: ListStyle;\n  /**\n   * List items of type T\n   */\n  items: T[];\n}\n\n/**\n * The default list block is provided by the EditorJS list plugin\n */\nexport interface ListBlock extends Block> {\n  /**\n   * The EditorJS block type\n   */\n  type: 'list';\n}\n\n/**\n * Default data type for a paragraph block\n */\ninterface Paragraph {\n  /**\n   * The paragraph text\n   */\n  text: string;\n}\n\n/**\n * Interface for a paragraph block\n */\nexport interface ParagraphBlock extends Block {\n  /**\n   * The EditorJS block type\n   */\n  type: 'paragraph';\n}\n\n/**\n * Default data type for a header block\n */\ninterface Header {\n  /**\n   * The header text\n   */\n  text: string;\n  /**\n   * The header level from 1-6\n   */\n  level: number;\n}\n\n/**\n * Interface for a header block\n */\nexport interface HeaderBlock extends Block {\n  /**\n   * The EditorJS block type\n   */\n  type: 'header';\n}\n\n/**\n * Default data type for a header block\n */\nexport interface Image {\n  /**\n   * The image URL\n   */\n  url: string;\n  /**\n   * Optional image caption\n   */\n  caption?: string;\n  /**\n   * Optional border property\n   */\n  withBorder?: boolean;\n\n  /**\n   * Optional background property\n   */\n  withBackground?: boolean;\n\n  /**\n   * Optional stretch property\n   */\n  stretched?: boolean;\n}\n\n/**\n * Interface for a image block\n */\nexport interface ImageBlock extends Block {\n  /**\n   * The EditorJS block type\n   */\n  type: 'image';\n}\n\n/**\n * Type of all the basic block type\n */\nexport type BlockTypes = ParagraphBlock | HeaderBlock | ImageBlock | ListBlock | Block;\n\n    \n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/ListBlock.html":{"url":"interfaces/ListBlock.html","title":"interface - ListBlock","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  ListBlock\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            libs/ngx-editorjs/ngx-editorjs/src/lib/types/blocks.ts\n        \n\n            \n                Description\n            \n            \n                The default list block is provided by the EditorJS list plugin\n\n            \n\n            \n                Extends\n            \n            \n                        Block\n            \n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        type\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        type\n                                    \n                                \n                                \n                                    \n                                        type:     \n\n                                    \n                                \n\n\n\n\n\n\n\n                            \n                                \n                                    The EditorJS block type\n\n                                \n                            \n                        \n                    \n            \n    \n\n\n    \n        export interface Block {\n  /**\n   * The EditorJS block type\n   */\n  type: string;\n\n  /**\n   * The data interface for the block type\n   */\n  data: T;\n\n  /**\n   * Additional properties on the type\n   */\n  [key: string]: any;\n}\n\n/**\n * Available list styles, supports `ordered` and `unordered`.\n * A custom string can also be added\n */\nexport type ListStyle = 'ordered' | 'unordered' | string;\n\n/**\n * Default data type for a list block\n */\nexport interface List {\n  /**\n   * The list style\n   */\n  style: ListStyle;\n  /**\n   * List items of type T\n   */\n  items: T[];\n}\n\n/**\n * The default list block is provided by the EditorJS list plugin\n */\nexport interface ListBlock extends Block> {\n  /**\n   * The EditorJS block type\n   */\n  type: 'list';\n}\n\n/**\n * Default data type for a paragraph block\n */\ninterface Paragraph {\n  /**\n   * The paragraph text\n   */\n  text: string;\n}\n\n/**\n * Interface for a paragraph block\n */\nexport interface ParagraphBlock extends Block {\n  /**\n   * The EditorJS block type\n   */\n  type: 'paragraph';\n}\n\n/**\n * Default data type for a header block\n */\ninterface Header {\n  /**\n   * The header text\n   */\n  text: string;\n  /**\n   * The header level from 1-6\n   */\n  level: number;\n}\n\n/**\n * Interface for a header block\n */\nexport interface HeaderBlock extends Block {\n  /**\n   * The EditorJS block type\n   */\n  type: 'header';\n}\n\n/**\n * Default data type for a header block\n */\nexport interface Image {\n  /**\n   * The image URL\n   */\n  url: string;\n  /**\n   * Optional image caption\n   */\n  caption?: string;\n  /**\n   * Optional border property\n   */\n  withBorder?: boolean;\n\n  /**\n   * Optional background property\n   */\n  withBackground?: boolean;\n\n  /**\n   * Optional stretch property\n   */\n  stretched?: boolean;\n}\n\n/**\n * Interface for a image block\n */\nexport interface ImageBlock extends Block {\n  /**\n   * The EditorJS block type\n   */\n  type: 'image';\n}\n\n/**\n * Type of all the basic block type\n */\nexport type BlockTypes = ParagraphBlock | HeaderBlock | ImageBlock | ListBlock | Block;\n\n    \n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/MockEditorJS.html":{"url":"classes/MockEditorJS.html","title":"class - MockEditorJS","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  MockEditorJS\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            libs/ngx-editorjs/ngx-editorjs/src/testing/shared.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                blocks\n                            \n                            \n                                destroy\n                            \n                            \n                                isReady\n                            \n                            \n                                saver\n                            \n                            \n                                version\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(config: NgxEditorJSModuleConfig)\n                    \n                \n                        \n                            \n                                Defined in libs/ngx-editorjs/ngx-editorjs/src/testing/shared.ts:16\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        config\n                                                  \n                                                        \n                                                                        NgxEditorJSModuleConfig\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            blocks\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         any\n\n                        \n                    \n                        \n                            \n                                    Defined in libs/ngx-editorjs/ngx-editorjs/src/testing/shared.ts:11\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            destroy\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         function\n\n                        \n                    \n                        \n                            \n                                    Defined in libs/ngx-editorjs/ngx-editorjs/src/testing/shared.ts:14\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            isReady\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     Promise\n\n                        \n                    \n                        \n                            \n                                    Defined in libs/ngx-editorjs/ngx-editorjs/src/testing/shared.ts:16\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            saver\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         any\n\n                        \n                    \n                        \n                            \n                                    Defined in libs/ngx-editorjs/ngx-editorjs/src/testing/shared.ts:12\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            version\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in libs/ngx-editorjs/ngx-editorjs/src/testing/shared.ts:13\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { NgxEditorJSModuleConfig } from '../lib/types/config';\n\nexport class MockPlugin {\n  constructor() {}\n  render() {\n    return document.createElement('div');\n  }\n}\n\nexport class MockEditorJS {\n  blocks: any;\n  saver: any;\n  version: string;\n  destroy: () => void;\n\n  isReady: Promise;\n\n  constructor(private config: NgxEditorJSModuleConfig) {\n    this.version = 'test';\n\n    this.isReady = Promise.resolve();\n\n    this.destroy = () => {};\n\n    this.blocks = {\n      clear: () => {},\n      render: () => {}\n    };\n\n    this.saver = {\n      save: (): Promise => {\n        return Promise.resolve({\n          time: Date.now(),\n          version: 'test',\n          blocks: []\n        });\n      }\n    };\n    (config as any).onReady();\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/MockNgZone.html":{"url":"injectables/MockNgZone.html","title":"injectable - MockNgZone","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  MockNgZone\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            libs/ngx-editorjs/ngx-editorjs/src/testing/ng-zone-mock.ts\n        \n\n            \n                Description\n            \n            \n                A mock implementation of NgZone.\n\n            \n\n            \n                Extends\n            \n            \n                        NgZone\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                onStable\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                run\n                            \n                            \n                                runOutsideAngular\n                            \n                            \n                                simulateZoneExit\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in libs/ngx-editorjs/ngx-editorjs/src/testing/ng-zone-mock.ts:16\n                            \n                        \n\n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            run\n                        \n                        \n                    \n                \n            \n            \n                \nrun(fn: Function)\n                \n            \n\n\n            \n                \n                    Defined in libs/ngx-editorjs/ngx-editorjs/src/testing/ng-zone-mock.ts:22\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    fn\n                                    \n                                                Function\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            runOutsideAngular\n                        \n                        \n                    \n                \n            \n            \n                \nrunOutsideAngular(fn: Function)\n                \n            \n\n\n            \n                \n                    Defined in libs/ngx-editorjs/ngx-editorjs/src/testing/ng-zone-mock.ts:26\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    fn\n                                    \n                                                Function\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            simulateZoneExit\n                        \n                        \n                    \n                \n            \n            \n                \nsimulateZoneExit()\n                \n            \n\n\n            \n                \n                    Defined in libs/ngx-editorjs/ngx-editorjs/src/testing/ng-zone-mock.ts:30\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            onStable\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     EventEmitter\n\n                        \n                    \n                    \n                        \n                            Default value : new EventEmitter(false)\n                        \n                    \n                        \n                            \n                                    Defined in libs/ngx-editorjs/ngx-editorjs/src/testing/ng-zone-mock.ts:16\n                            \n                        \n\n\n            \n        \n\n\n    \n\n\n    \n        import { EventEmitter, Injectable, NgZone } from '@angular/core';\n\n/**\n * A mock implementation of {@link NgZone}.\n */\n@Injectable()\nexport class MockNgZone extends NgZone {\n  onStable: EventEmitter = new EventEmitter(false);\n\n  constructor() {\n    super({ enableLongStackTrace: false });\n  }\n\n  run(fn: Function): any {\n    return fn();\n  }\n\n  runOutsideAngular(fn: Function): any {\n    return fn();\n  }\n\n  simulateZoneExit(): void {\n    this.onStable.emit(null);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/MockPlugin.html":{"url":"classes/MockPlugin.html","title":"class - MockPlugin","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  MockPlugin\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            libs/ngx-editorjs/ngx-editorjs/src/testing/shared.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                render\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in libs/ngx-editorjs/ngx-editorjs/src/testing/shared.ts:3\n                            \n                        \n\n            \n        \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            render\n                        \n                        \n                    \n                \n            \n            \n                \nrender()\n                \n            \n\n\n            \n                \n                    Defined in libs/ngx-editorjs/ngx-editorjs/src/testing/shared.ts:5\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         any\n\n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { NgxEditorJSModuleConfig } from '../lib/types/config';\n\nexport class MockPlugin {\n  constructor() {}\n  render() {\n    return document.createElement('div');\n  }\n}\n\nexport class MockEditorJS {\n  blocks: any;\n  saver: any;\n  version: string;\n  destroy: () => void;\n\n  isReady: Promise;\n\n  constructor(private config: NgxEditorJSModuleConfig) {\n    this.version = 'test';\n\n    this.isReady = Promise.resolve();\n\n    this.destroy = () => {};\n\n    this.blocks = {\n      clear: () => {},\n      render: () => {}\n    };\n\n    this.saver = {\n      save: (): Promise => {\n        return Promise.resolve({\n          time: Date.now(),\n          version: 'test',\n          blocks: []\n        });\n      }\n    };\n    (config as any).onReady();\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/NgxEditorJSConfig.html":{"url":"interfaces/NgxEditorJSConfig.html","title":"interface - NgxEditorJSConfig","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  NgxEditorJSConfig\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            libs/ngx-editorjs/ngx-editorjs/src/lib/types/config.ts\n        \n\n            \n                Description\n            \n            \n                Configuration for the EditorJS instance\n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                            Optional\n                                        autofocus\n                                \n                                \n                                            Optional\n                                        blockPlaceholder\n                                \n                                \n                                            Optional\n                                        data\n                                \n                                \n                                            Optional\n                                        hideToolbar\n                                \n                                \n                                            Optional\n                                        holder\n                                \n                                \n                                            Optional\n                                        initialBlock\n                                \n                                \n                                            Optional\n                                        minHeight\n                                \n                                \n                                            Optional\n                                        sanitizer\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        autofocus\n                                    \n                                \n                                \n                                    \n                                        autofocus:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    If the EditorJS is autofocused on creation (default: false)\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        blockPlaceholder\n                                    \n                                \n                                \n                                    \n                                        blockPlaceholder:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    First Block placeholder\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        data\n                                    \n                                \n                                \n                                    \n                                        data:     OutputData\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     OutputData\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    Any initial output data to render\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        hideToolbar\n                                    \n                                \n                                \n                                    \n                                        hideToolbar:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    If true, toolbar won't be shown\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        holder\n                                    \n                                \n                                \n                                    \n                                        holder:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    ID of the element to hold the config\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        initialBlock\n                                    \n                                \n                                \n                                    \n                                        initialBlock:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    The name of the initial block (default \"paragraph\")\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        minHeight\n                                    \n                                \n                                \n                                    \n                                        minHeight:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    Height of Editor's bottom area that allows to set focus on the last Block\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        sanitizer\n                                    \n                                \n                                \n                                    \n                                        sanitizer:     SanitizerConfig\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     SanitizerConfig\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    Define default sanitizer configuration\n\n                                \n                            \n                        \n                    \n            \n    \n\n\n    \n        import { InjectionToken } from '@angular/core';\nimport EditorJS, { OutputData, SanitizerConfig, EditorConfig } from '@editorjs/editorjs';\n\n/**\n * Configuration for the EditorJS instance\n */\nexport interface NgxEditorJSConfig {\n  /**\n   * If the EditorJS is autofocused on creation (default: false)\n   */\n  autofocus?: boolean;\n\n  /**\n   * Any initial output data to render\n   */\n  data?: OutputData;\n\n  /**\n   * If true, toolbar won't be shown\n   */\n  hideToolbar?: boolean;\n\n  /**\n   * ID of the element to hold the config\n   */\n  holder?: string;\n\n  /**\n   * The name of the initial block (default \"paragraph\")\n   */\n  initialBlock?: string;\n\n  /**\n   * Height of Editor's bottom area that allows to set focus on the last Block\n   */\n  minHeight?: number;\n\n  /**\n   * First Block placeholder\n   */\n  blockPlaceholder?: string;\n\n  /**\n   * Define default sanitizer configuration\n   */\n  sanitizer?: SanitizerConfig;\n}\n\n/**\n * The configuration option that can be passed to the `NgxEditorJSModule.forRoot` method\n */\nexport interface NgxEditorJSModuleConfig {\n  /**\n   * Configuration options for EditorJS\n   */\n  editorjs?: EditorConfig;\n}\n\n/**\n * Injection token provied for `NgxEditorJSConfig`\n */\nexport const NGX_EDITORJS_CONFIG = new InjectionToken('NGX_EDITORJS_CONFIG');\n\n/**\n * Internal token for injecting the `NgxEditorJSConfig` into the config factory\n */\nexport const FOR_ROOT_OPTIONS_TOKEN = new InjectionToken('FOR_ROOT_OPTIONS_TOKEN');\n\n/**\n * Get the EditorJS instance injected into the app\n */\nexport const EDITIOR_JS_INSTANCE = new InjectionToken('EDITIOR_JS_INSTANCE');\n\n    \n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/NgxEditorJSDemoHomeComponent.html":{"url":"components/NgxEditorJSDemoHomeComponent.html","title":"component - NgxEditorJSDemoHomeComponent","body":"\n                   \n\n\n\n\n\n  Components\n  NgxEditorJSDemoHomeComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    libs/ngx-editorjs/ngx-editorjs-demo/src/lib/containers/home-container/home-container.component.ts\n\n\n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                ngx-editorjs-demo-home\n            \n\n            \n                styleUrls\n                home-container.component.scss\n            \n\n\n\n            \n                templateUrl\n                home-container.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        import { Component } from '@angular/core';\n\n@Component({\n  selector: 'ngx-editorjs-demo-home',\n  templateUrl: 'home-container.component.html',\n  styleUrls: ['home-container.component.scss']\n})\nexport class NgxEditorJSDemoHomeComponent {}\n\n    \n\n    \n        \n  \n    \n      @tinynodes/ngx-editor Demo\n      A collection of demos for the @tinynodes/ngx-editor module with example code and links to API docs.\n    \n    \n      \n        The demos in this section are for the\n        @tinynodes/ngx-editorjs module.\n      \n      \n        Each demo provides a way to use the component in an application or form in Angular. It can be used as a basic component, used with\n        Angular forms or Material forms.\n      \n      Each demo shows the components providing a EditorJS instance.\n    \n    \n      Angular Component Demo\n      Angular Material Form Demo\n    \n  \n\n\n    \n\n    \n                \n                    home-container.component.scss\n                \n                \n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '            @tinynodes/ngx-editor Demo      A collection of demos for the @tinynodes/ngx-editor module with example code and links to API docs.                      The demos in this section are for the        @tinynodes/ngx-editorjs module.                    Each demo provides a way to use the component in an application or form in Angular. It can be used as a basic component, used with        Angular forms or Material forms.            Each demo shows the components providing a EditorJS instance.              Angular Component Demo      Angular Material Form Demo      '\n    var COMPONENTS = [{'name': 'NgxEditorJSComponent', 'selector': 'ngx-editorjs'},{'name': 'NgxEditorJSDemoHomeComponent', 'selector': 'ngx-editorjs-demo-home'},{'name': 'NgxEditorJSMatFieldComponent', 'selector': 'ngx-editorjs-mat-field'},{'name': 'NgxTinynodesMaterialFormFieldDemoComponent', 'selector': 'ngx-tinynodes-mat-form-field-demo'},{'name': 'NgxTinynodesMatJsonOutputComponent', 'selector': 'ngx-tinynodes-mat-json-output'},{'name': 'NgxTinynodesMatTagInputComponent', 'selector': 'ngx-tinynodes-mat-tag-input'},{'name': 'PageContainerComponent', 'selector': 'ngx-page-container'}];\n    var DIRECTIVES = [{'name': 'NgxEditorJSDirective', 'selector': '[ngxEditorJS]'}];\n    var ACTUAL_COMPONENT = {'name': 'NgxEditorJSDemoHomeComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/NgxEditorJSDemoMaterialModule.html":{"url":"modules/NgxEditorJSDemoMaterialModule.html","title":"module - NgxEditorJSDemoMaterialModule","body":"\n                   \n\n\n\n\n    Modules\n    NgxEditorJSDemoMaterialModule\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            libs/ngx-editorjs/ngx-editorjs-demo/src/lib/ngx-editorjs-demo.material.module.ts\n        \n\n\n\n\n        \n            \n            \n        \n\n\n    \n\n\n    \n        import { NgModule } from '@angular/core';\nimport { MatBadgeModule } from '@angular/material/badge';\nimport { MatButtonModule } from '@angular/material/button';\nimport { MatCardModule } from '@angular/material/card';\nimport { MatChipsModule } from '@angular/material/chips';\nimport { MatExpansionModule } from '@angular/material/expansion';\nimport { MatFormFieldModule } from '@angular/material/form-field';\nimport { MatGridListModule } from '@angular/material/grid-list';\nimport { MatIconModule } from '@angular/material/icon';\nimport { MatInputModule } from '@angular/material/input';\nimport { MatListModule } from '@angular/material/list';\n\n@NgModule({\n  imports: [\n    MatGridListModule,\n    MatExpansionModule,\n    MatInputModule,\n    MatFormFieldModule,\n    MatChipsModule,\n    MatBadgeModule,\n    MatIconModule,\n    MatListModule,\n    MatCardModule,\n    MatButtonModule\n  ],\n  exports: [\n    MatGridListModule,\n    MatExpansionModule,\n    MatInputModule,\n    MatFormFieldModule,\n    MatChipsModule,\n    MatBadgeModule,\n    MatIconModule,\n    MatListModule,\n    MatCardModule,\n    MatButtonModule\n  ]\n})\nexport class NgxEditorJSDemoMaterialModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"directives/NgxEditorJSDirective.html":{"url":"directives/NgxEditorJSDirective.html","title":"directive - NgxEditorJSDirective","body":"\n                   \n\n\n\n\n\n\n\n  Directives\n  NgxEditorJSDirective\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            libs/ngx-editorjs/ngx-editorjs/src/lib/directives/ngx-editorjs.directive.ts\n        \n\n            \n                Description\n            \n            \n                The main directive of ngx-editorjs provides a way to attach\nan EditorJS instance to any element and control it via\nAngular services and components\nTo use attach to any element with an id property\n\n            \n\n            \n                Implements\n            \n            \n                            OnDestroy\n                            OnChanges\n                            AfterContentInit\n            \n\n            \n                Example\n            \n            \n                        \n                            \n                        \n            \n\n        \n            Metadata\n            \n                \n\n                    \n                        Selector\n                        [ngxEditorJS]\n                    \n\n                \n            \n        \n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                    Async\n                                createEditor\n                            \n                            \n                                    Async\n                                ngAfterContentInit\n                            \n                            \n                                    Async\n                                ngOnChanges\n                            \n                            \n                                ngOnDestroy\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                autofocus\n                            \n                            \n                                autosave\n                            \n                            \n                                blockPlaceholder\n                            \n                            \n                                blocks\n                            \n                            \n                                excludeTools\n                            \n                            \n                                hideToolbar\n                            \n                            \n                                holder\n                            \n                            \n                                initialBlock\n                            \n                            \n                                minHeight\n                            \n                            \n                                sanitizer\n                            \n                        \n                    \n                \n\n                \n                    \n                        Outputs\n                    \n                \n                \n                    \n                        \n                            \n                                hasChanged\n                            \n                            \n                                hasSaved\n                            \n                            \n                                isFocused\n                            \n                            \n                                isReady\n                            \n                            \n                                isTouched\n                            \n                        \n                    \n                \n\n\n                \n                    \n                        HostListeners\n                    \n                \n                \n                    \n                        \n                            \n                                click\n                            \n                        \n                    \n                \n\n                    \n                        \n                            Accessors\n                        \n                    \n                    \n                        \n                            \n                                \n                                    editor\n                                \n                                \n                                    element\n                                \n                                \n                                    service\n                                \n                                \n                                    touched\n                                \n                            \n                        \n                    \n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(el: ElementRef, editorService: NgxEditorJSService, cd: ChangeDetectorRef)\n                    \n                \n                        \n                            \n                                Defined in libs/ngx-editorjs/ngx-editorjs/src/lib/directives/ngx-editorjs.directive.ts:152\n                            \n                        \n\n                \n                    \n                            Creates the directive instance\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        el\n                                                  \n                                                        \n                                                                        ElementRef\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                The element the directive is attached to\n\n                                                        \n                                                \n                                                \n                                                        editorService\n                                                  \n                                                        \n                                                                        NgxEditorJSService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                The editor service\n\n                                                        \n                                                \n                                                \n                                                        cd\n                                                  \n                                                        \n                                                                        ChangeDetectorRef\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    Inputs\n        \n            \n                \n                    \n                        \n                        autofocus\n                    \n                \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                        \n                            \n                                    Defined in libs/ngx-editorjs/ngx-editorjs/src/lib/directives/ngx-editorjs.directive.ts:53\n                            \n                        \n                \n                    \n                        Boolean, If set to true the EditorJS instance gets autofocus when initialized\n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        autosave\n                    \n                \n                \n                    \n                        Type :         number\n\n                    \n                \n                        \n                            \n                                    Defined in libs/ngx-editorjs/ngx-editorjs/src/lib/directives/ngx-editorjs.directive.ts:106\n                            \n                        \n                \n                    \n                        Number, Used with Angular Forms this sets an autosave timer active that calls the EditorJS save\nmethod. This patches the FormControl value with every block change and focus and blur, it also autosaves after\na set time\nSet to 0 to disable or pass a value in ms of the autosave time\n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        blockPlaceholder\n                    \n                \n                \n                    \n                        Type :         string\n\n                    \n                \n                        \n                            \n                                    Defined in libs/ngx-editorjs/ngx-editorjs/src/lib/directives/ngx-editorjs.directive.ts:84\n                            \n                        \n                \n                    \n                        String, The text to display as the placeholder text in the first block before content is added\n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        blocks\n                    \n                \n                \n                    \n                        Type :         Block[]\n\n                    \n                \n                        \n                            \n                                    Defined in libs/ngx-editorjs/ngx-editorjs/src/lib/directives/ngx-editorjs.directive.ts:112\n                            \n                        \n                \n                    \n                        Blocks, An initial set of block data to render inside the component\n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        excludeTools\n                    \n                \n                \n                    \n                        Type :     string[]\n\n                    \n                \n                \n                    \n                        Default value : []\n                    \n                \n                        \n                            \n                                    Defined in libs/ngx-editorjs/ngx-editorjs/src/lib/directives/ngx-editorjs.directive.ts:97\n                            \n                        \n                \n                    \n                        String Array, If empty all tools available via the plugin service will be added.  If a string\narray is set only the tools with the provided keys will be added\n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        hideToolbar\n                    \n                \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                        \n                            \n                                    Defined in libs/ngx-editorjs/ngx-editorjs/src/lib/directives/ngx-editorjs.directive.ts:59\n                            \n                        \n                \n                    \n                        Boolean, If set to true the toolbar will not show in the EditorJS instance\n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        holder\n                    \n                \n                \n                    \n                        Type :         string\n\n                    \n                \n                        \n                            \n                                    Defined in libs/ngx-editorjs/ngx-editorjs/src/lib/directives/ngx-editorjs.directive.ts:65\n                            \n                        \n                \n                    \n                        String, the ID property of the element that the EditorJS instance will be attached to\n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        initialBlock\n                    \n                \n                \n                    \n                        Type :         string\n\n                    \n                \n                        \n                            \n                                    Defined in libs/ngx-editorjs/ngx-editorjs/src/lib/directives/ngx-editorjs.directive.ts:72\n                            \n                        \n                \n                    \n                        String, The type of block to set as the initial block type. This needs to match a name in the UserPlugins object.\nThe default value is \"paragraph\"\n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        minHeight\n                    \n                \n                \n                    \n                        Type :         number\n\n                    \n                \n                        \n                            \n                                    Defined in libs/ngx-editorjs/ngx-editorjs/src/lib/directives/ngx-editorjs.directive.ts:78\n                            \n                        \n                \n                    \n                        Number, The minimum height of the EditorJS instance bottom after the last block\n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        sanitizer\n                    \n                \n                \n                    \n                        Type :     SanitizerConfig\n\n                    \n                \n                        \n                            \n                                    Defined in libs/ngx-editorjs/ngx-editorjs/src/lib/directives/ngx-editorjs.directive.ts:90\n                            \n                        \n                \n                    \n                        SanitizerConfig, The configuration for the HTML sanitizer\n\n                    \n                \n            \n        \n\n            \n    Outputs\n        \n            \n                \n                    \n                        \n                        hasChanged\n                    \n                \n                \n                    \n                        Type :         EventEmitter\n\n                    \n                \n                        \n                            \n                                    Defined in libs/ngx-editorjs/ngx-editorjs/src/lib/directives/ngx-editorjs.directive.ts:136\n                            \n                        \n                \n                    \n                        Emits if the EditorJS content has changed when save is called\n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        hasSaved\n                    \n                \n                \n                    \n                        Type :         EventEmitter\n\n                    \n                \n                        \n                            \n                                    Defined in libs/ngx-editorjs/ngx-editorjs/src/lib/directives/ngx-editorjs.directive.ts:118\n                            \n                        \n                \n                    \n                        Emits if the content from the EditorJS instance has been saved to the component value\n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        isFocused\n                    \n                \n                \n                    \n                        Type :         EventEmitter\n\n                    \n                \n                        \n                            \n                                    Defined in libs/ngx-editorjs/ngx-editorjs/src/lib/directives/ngx-editorjs.directive.ts:130\n                            \n                        \n                \n                    \n                        Emits if the component is focused\n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        isReady\n                    \n                \n                \n                    \n                        Type :         EventEmitter\n\n                    \n                \n                        \n                            \n                                    Defined in libs/ngx-editorjs/ngx-editorjs/src/lib/directives/ngx-editorjs.directive.ts:142\n                            \n                        \n                \n                    \n                        Emits if the EditorJS component is ready\n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        isTouched\n                    \n                \n                \n                    \n                        Type :         EventEmitter\n\n                    \n                \n                        \n                            \n                                    Defined in libs/ngx-editorjs/ngx-editorjs/src/lib/directives/ngx-editorjs.directive.ts:124\n                            \n                        \n                \n                    \n                        Emits if the component has been touched\n\n                    \n                \n            \n        \n\n\n            \n    HostListeners    \n        \n            \n                \n                    \n                    \n                        \n                            click\n                        \n                        \n                    \n                \n            \n            \n                \nclick()\n                \n            \n\n\n            \n                \n                    Defined in libs/ngx-editorjs/ngx-editorjs/src/lib/directives/ngx-editorjs.directive.ts:148\n                \n            \n\n\n            \n                \n                    Host click listener\n\n\n                \n            \n        \n    \n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            Async\n                            createEditor\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    createEditor(config?: EditorConfig, excludeTools: [])\n                \n            \n\n\n            \n                \n                    Defined in libs/ngx-editorjs/ngx-editorjs/src/lib/directives/ngx-editorjs.directive.ts:198\n                \n            \n\n\n            \n                \n                    Creates an EditorJS instance for this directive\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Default value\n                                    Description\n                                \n                            \n                            \n                                \n                                    config\n                                    \n                                            EditorConfig\n                                    \n\n                                    \n                                        Yes\n                                    \n\n                                    \n                                    \n\n                                    \n                                        Configuration for this instance\n\n                                    \n                                \n                                \n                                    excludeTools\n                                    \n                                            []\n                                    \n\n                                    \n                                        No\n                                    \n\n                                    \n                                        []\n                                    \n\n                                    \n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            ngAfterContentInit\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    ngAfterContentInit()\n                \n            \n\n\n            \n                \n                    Defined in libs/ngx-editorjs/ngx-editorjs/src/lib/directives/ngx-editorjs.directive.ts:251\n                \n            \n\n\n            \n                \n                    After content is created, we create the editor instance and set up listners\n\n\n                    \n                        Returns :         any\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            ngOnChanges\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    ngOnChanges(changes: SimpleChanges)\n                \n            \n\n\n            \n                \n                    Defined in libs/ngx-editorjs/ngx-editorjs/src/lib/directives/ngx-editorjs.directive.ts:215\n                \n            \n\n\n            \n                \n                    When ngOnChanges are called, there are two paths\nIf it's just blocks, then the service is updated with the blocks\nIf it's any other property it means we create a new editor, as this\nis a destructive process we also need to wait for an existing editor\nto be ready\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    changes\n                                    \n                                                SimpleChanges\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        Changes on the component\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngOnDestroy\n                        \n                        \n                    \n                \n            \n            \n                \nngOnDestroy()\n                \n            \n\n\n            \n                \n                    Defined in libs/ngx-editorjs/ngx-editorjs/src/lib/directives/ngx-editorjs.directive.ts:284\n                \n            \n\n\n            \n                \n                    Destroy the editor and subjects for this service\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n\n            \n    \n        Accessors\n    \n        \n            \n                \n                    \n                        \n                        editor\n                    \n                \n\n                \n                    \n                        geteditor()\n                    \n                \n                            \n                                \n                                    Defined in libs/ngx-editorjs/ngx-editorjs/src/lib/directives/ngx-editorjs.directive.ts:168\n                                \n                            \n                    \n                        \n                                Get the EditorJS instance for this directive\n\n\n                                \n                                    Returns :     Observable\n\n                                \n                        \n                    \n\n            \n        \n        \n            \n                \n                    \n                        \n                        element\n                    \n                \n\n                \n                    \n                        getelement()\n                    \n                \n                            \n                                \n                                    Defined in libs/ngx-editorjs/ngx-editorjs/src/lib/directives/ngx-editorjs.directive.ts:175\n                                \n                            \n                    \n                        \n                                Get the element for the directive\n\n\n                        \n                    \n\n            \n        \n        \n            \n                \n                    \n                        \n                        service\n                    \n                \n\n                \n                    \n                        getservice()\n                    \n                \n                            \n                                \n                                    Defined in libs/ngx-editorjs/ngx-editorjs/src/lib/directives/ngx-editorjs.directive.ts:182\n                                \n                            \n                    \n                        \n                                Get the NgxEditorJSService for this directive\n\n\n                                \n                                    Returns :         NgxEditorJSService\n\n                                \n                        \n                    \n\n            \n        \n        \n            \n                \n                    \n                        \n                        touched\n                    \n                \n\n                \n                    \n                        gettouched()\n                    \n                \n                            \n                                \n                                    Defined in libs/ngx-editorjs/ngx-editorjs/src/lib/directives/ngx-editorjs.directive.ts:189\n                                \n                            \n                    \n                        \n                                Get the touched state\n\n\n                        \n                    \n\n            \n        \n\n\n    \n\n\n    \n        import {\n  AfterContentInit,\n  ChangeDetectorRef,\n  Directive,\n  ElementRef,\n  EventEmitter,\n  HostListener,\n  Input,\n  OnChanges,\n  OnDestroy,\n  Output,\n  SimpleChanges\n} from '@angular/core';\nimport EditorJS, { EditorConfig, OutputData, SanitizerConfig } from '@editorjs/editorjs';\nimport { BehaviorSubject, Observable, Subject } from 'rxjs';\nimport { takeUntil } from 'rxjs/operators';\nimport { createEditorJSConfig } from '../config/editor-config';\nimport { NgxEditorJSService } from '../services/editorjs.service';\nimport { Block } from '../types/blocks';\n\n/**\n * The main directive of `ngx-editorjs` provides a way to attach\n * an EditorJS instance to any element and control it via\n * Angular services and components\n *\n * To use attach to any element with an `id` property\n *\n * @example\n * \n */\n@Directive({\n  selector: '[ngxEditorJS]'\n})\nexport class NgxEditorJSDirective implements OnDestroy, OnChanges, AfterContentInit {\n  /**\n   * On Destroyed subject\n   */\n  private readonly onDestroy$ = new Subject();\n  /**\n   * Form touched state\n   */\n  private touched$ = new BehaviorSubject(false);\n\n  /**\n   * The DOM element ID, it will use the Directive DOM element ID or falls back to the provided `holder` property\n   */\n  private id: string;\n\n  /**\n   * Boolean, If set to true the EditorJS instance gets autofocus when initialized\n   */\n  @Input()\n  public autofocus: boolean;\n\n  /**\n   * Boolean, If set to true the toolbar will not show in the EditorJS instance\n   */\n  @Input()\n  public hideToolbar: boolean;\n\n  /**\n   * String, the ID property of the element that the EditorJS instance will be attached to\n   */\n  @Input()\n  public holder: string;\n\n  /**\n   * String, The type of block to set as the initial block type. This needs to match a name in the `UserPlugins` object.\n   * The default value is \"paragraph\"\n   */\n  @Input()\n  public initialBlock?: string;\n\n  /**\n   * Number, The minimum height of the EditorJS instance bottom after the last block\n   */\n  @Input()\n  public minHeight: number;\n\n  /**\n   * String, The text to display as the placeholder text in the first block before content is added\n   */\n  @Input()\n  public blockPlaceholder: string;\n\n  /**\n   * SanitizerConfig, The configuration for the HTML sanitizer\n   */\n  @Input()\n  public sanitizer: SanitizerConfig;\n\n  /**\n   * String Array, If empty all tools available via the plugin service will be added.  If a string\n   * array is set only the tools with the provided keys will be added\n   */\n  @Input()\n  public excludeTools: string[] = [];\n\n  /**\n   * Number, Used with Angular Forms this sets an autosave timer active that calls the EditorJS save\n   * method. This patches the `FormControl` value with every block change and focus and blur, it also autosaves after\n   * a set time\n   * Set to 0 to disable or pass a value in `ms` of the autosave time\n   */\n  @Input()\n  public autosave: number;\n\n  /**\n   * Blocks, An initial set of block data to render inside the component\n   */\n  @Input()\n  public blocks: Block[];\n\n  /**\n   * Emits if the content from the EditorJS instance has been saved to the component value\n   */\n  @Output()\n  public hasSaved = new EventEmitter();\n\n  /**\n   * Emits if the component has been touched\n   */\n  @Output()\n  public isTouched = new EventEmitter();\n\n  /**\n   * Emits if the component is focused\n   */\n  @Output()\n  public isFocused = new EventEmitter();\n\n  /**\n   * Emits if the EditorJS content has changed when `save` is called\n   */\n  @Output()\n  public hasChanged = new EventEmitter();\n\n  /**\n   * Emits if the EditorJS component is ready\n   */\n  @Output()\n  public isReady = new EventEmitter();\n\n  /**\n   * Host click listener\n   */\n  @HostListener('click')\n  onclick() {\n    this.touched$.next(true);\n    this.isTouched.emit(true);\n    this.cd.markForCheck();\n  }\n\n  /**\n   * Creates the directive instance\n   * @param el The element the directive is attached to\n   * @param editorService The editor service\n   */\n  constructor(\n    protected readonly el: ElementRef,\n    protected readonly editorService: NgxEditorJSService,\n    protected readonly cd: ChangeDetectorRef\n  ) {}\n\n  /**\n   * Get the EditorJS instance for this directive\n   */\n  public get editor(): Observable {\n    return this.service.getEditor({ holder: this.id });\n  }\n\n  /**\n   * Get the element for the directive\n   */\n  public get element() {\n    return this.el.nativeElement;\n  }\n\n  /**\n   * Get the `NgxEditorJSService` for this directive\n   */\n  public get service(): NgxEditorJSService {\n    return this.editorService;\n  }\n\n  /**\n   * Get the touched state\n   */\n  public get touched() {\n    return this.touched$.asObservable();\n  }\n\n  /**\n   * Creates an EditorJS instance for this directive\n   * @param config Configuration for this instance\n   * @param excludeTools\n   */\n  public async createEditor(config?: EditorConfig, excludeTools = []): Promise {\n    await this.service.createInstance({\n      config,\n      excludeTools: this.excludeTools || excludeTools,\n      autoSave: this.autosave || 0\n    });\n    this.cd.markForCheck();\n  }\n\n  /**\n   * When ngOnChanges are called, there are two paths\n   * If it's just blocks, then the service is updated with the blocks\n   * If it's any other property it means we create a new editor, as this\n   * is a destructive process we also need to wait for an existing editor\n   * to be ready\n   * @param changes Changes on the component\n   */\n  async ngOnChanges(changes: SimpleChanges): Promise {\n    if (\n      changes.blocks &&\n      changes.blocks.previousValue !== null &&\n      !changes.blocks.firstChange &&\n      JSON.stringify(changes.blocks.previousValue) !== JSON.stringify(changes.blocks.currentValue)\n    ) {\n      this.service.update({ holder: this.holder }).subscribe();\n      this.cd.markForCheck();\n    } else {\n      const changesKeys = Object.keys(changes);\n      if (\n        this.id &&\n        // Ignore changes for values not related to EditorJS\n        [\n          'autofocus',\n          'holder',\n          'hideToolbar',\n          'initialBlock',\n          'minHeight',\n          'blockPlaceholder',\n          'sanitizer',\n          'includeTools'\n        ].find(key => {\n          return changesKeys.includes(key);\n        })\n      ) {\n        await this.createEditor(this.createConfig());\n        this.cd.markForCheck();\n      }\n    }\n  }\n\n  /**\n   * After content is created, we create the editor instance and set up listners\n   */\n  async ngAfterContentInit() {\n    this.id = this.el.nativeElement.id || this.holder;\n\n    if (!this.id) {\n      throw new Error('Error in NgxEditorJSDirective::ngAfterContentInit - Directive element has no ID');\n    }\n    await this.createEditor(this.createConfig());\n\n    this.service\n      .isReady({ holder: this.holder })\n      .pipe(takeUntil(this.onDestroy$))\n      .subscribe(isReady => {\n        this.isReady.emit(isReady);\n      });\n\n    this.service\n      .lastChange({ holder: this.holder })\n      .pipe(takeUntil(this.onDestroy$))\n      .subscribe(change => {\n        this.hasChanged.emit(change);\n      });\n\n    this.service\n      .hasSaved({ holder: this.holder })\n      .pipe(takeUntil(this.onDestroy$))\n      .subscribe(saved => {\n        this.hasSaved.next(saved);\n      });\n  }\n\n  /**\n   * Destroy the editor and subjects for this service\n   */\n  ngOnDestroy() {\n    this.onDestroy$.next(true);\n    this.onDestroy$.complete();\n    this.service.destroyInstance({ holder: this.id });\n  }\n\n  /**\n   * Create a configuration for EditorJS\n   */\n  private createConfig(): EditorConfig {\n    const config: EditorConfig = createEditorJSConfig({\n      holder: this.id,\n      autofocus: this.autofocus,\n      hideToolbar: this.hideToolbar,\n      initialBlock: this.initialBlock,\n      placeholder: this.blockPlaceholder,\n      minHeight: this.minHeight,\n      sanitizer: this.sanitizer\n    });\n    if (this.blocks && this.blocks.length > 0) {\n      config.data = {\n        time: Date.now(),\n        version: EditorJS.version,\n        blocks: this.blocks\n      };\n    }\n    return config;\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/NgxEditorJSModule.html":{"url":"modules/NgxEditorJSModule.html","title":"module - NgxEditorJSModule","body":"\n                   \n\n\n\n\n    Modules\n    NgxEditorJSModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_NgxEditorJSModule\n\n\n\ncluster_NgxEditorJSModule_declarations\n\n\n\ncluster_NgxEditorJSModule_exports\n\n\n\ncluster_NgxEditorJSModule_providers\n\n\n\n\nNgxEditorJSComponent\n\nNgxEditorJSComponent\n\n\n\nNgxEditorJSModule\n\nNgxEditorJSModule\n\nNgxEditorJSModule -->\n\nNgxEditorJSComponent->NgxEditorJSModule\n\n\n\n\n\nNgxEditorJSDirective\n\nNgxEditorJSDirective\n\nNgxEditorJSModule -->\n\nNgxEditorJSDirective->NgxEditorJSModule\n\n\n\n\n\nNgxEditorJSMatFieldComponent\n\nNgxEditorJSMatFieldComponent\n\nNgxEditorJSModule -->\n\nNgxEditorJSMatFieldComponent->NgxEditorJSModule\n\n\n\n\n\nNgxEditorJSComponent \n\nNgxEditorJSComponent \n\nNgxEditorJSComponent  -->\n\nNgxEditorJSModule->NgxEditorJSComponent \n\n\n\n\n\nNgxEditorJSDirective \n\nNgxEditorJSDirective \n\nNgxEditorJSDirective  -->\n\nNgxEditorJSModule->NgxEditorJSDirective \n\n\n\n\n\nNgxEditorJSMatFieldComponent \n\nNgxEditorJSMatFieldComponent \n\nNgxEditorJSMatFieldComponent  -->\n\nNgxEditorJSModule->NgxEditorJSMatFieldComponent \n\n\n\n\n\nNgxEditorJSService\n\nNgxEditorJSService\n\nNgxEditorJSModule -->\n\nNgxEditorJSService->NgxEditorJSModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            libs/ngx-editorjs/ngx-editorjs/src/lib/ngx-editorjs.module.ts\n        \n\n\n        \n            Description\n        \n        \n            The @tinynodes/ngx-editorjs module provides a collection of demos to allow\nany Angular app to use and control an EditorJS instance\nTo use import the module NgxEditorJSModule.forRoot() into the root of your application.\nThe forRoot method takes an optional NgxEditorJSModuleConfig config, this will provide a\ndefault instance.\n\n        \n\n\n        \n            \n                \n                    Declarations\n                    \n                        \n                            NgxEditorJSComponent\n                        \n                        \n                            NgxEditorJSDirective\n                        \n                        \n                            NgxEditorJSMatFieldComponent\n                        \n                    \n                \n                \n                    Providers\n                    \n                        \n                            NgxEditorJSService\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            NgxEditorJSComponent\n                        \n                        \n                            NgxEditorJSDirective\n                        \n                        \n                            NgxEditorJSMatFieldComponent\n                        \n                    \n                \n            \n        \n\n        \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Static\n                            forRoot\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    forRoot(config?: NgxEditorJSModuleConfig)\n                \n            \n\n\n            \n                \n                    Defined in libs/ngx-editorjs/ngx-editorjs/src/lib/ngx-editorjs.module.ts:68\n                \n            \n\n\n            \n                \n                    Use this method in the root of the application.  You can pass an optional configuration\nwhich sets some defaults, or use the provided defaults.\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    config\n                                    \n                                                NgxEditorJSModuleConfig\n                                    \n\n                                    \n                                        Yes\n                                    \n\n\n                                    \n                                        The optional configuration to pass\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         ModuleWithProviders\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n    \n\n\n    \n        import { CommonModule } from '@angular/common';\nimport { ModuleWithProviders, NgModule, Optional, SkipSelf } from '@angular/core';\nimport { FormsModule } from '@angular/forms';\nimport { MatFormFieldModule } from '@angular/material/form-field';\nimport { MatInputModule } from '@angular/material/input';\nimport EditorJS from '@editorjs/editorjs';\nimport { createModuleConfig } from './config/module-config';\nimport { NgxEditorJSMatFieldComponent } from './containers/editorjs-mat-field/editorjs-mat-field.component';\nimport { NgxEditorJSComponent } from './containers/editorjs/editorjs.component';\nimport { NgxEditorJSDirective } from './directives/ngx-editorjs.directive';\nimport { NgxEditorJSService } from './services/editorjs.service';\nimport { FOR_ROOT_OPTIONS_TOKEN, NgxEditorJSModuleConfig, NGX_EDITORJS_CONFIG } from './types/config';\nimport { EditorJSInstance, EDITORJS_MODULE_IMPORT } from './types/injector';\n\n/**\n * Factory function to return the EditorJS base class\n */\nexport function createEditorJSInstance(editorjs: any) {\n  return editorjs;\n}\n\n/**\n * The `@tinynodes/ngx-editorjs` module provides a collection of demos to allow\n * any Angular app to use and control an [EditorJS](http://editorjs.io) instance\n *\n * To use import the module `NgxEditorJSModule.forRoot()` into the root of your application.\n * The `forRoot` method takes an optional `NgxEditorJSModuleConfig` config, this will provide a\n * default instance.\n */\n@NgModule({\n  imports: [CommonModule, FormsModule, MatInputModule, MatFormFieldModule],\n  declarations: [NgxEditorJSComponent, NgxEditorJSMatFieldComponent, NgxEditorJSDirective],\n  exports: [NgxEditorJSComponent, NgxEditorJSMatFieldComponent, NgxEditorJSDirective],\n  providers: [\n    NgxEditorJSService,\n    {\n      provide: FOR_ROOT_OPTIONS_TOKEN,\n      useValue: {}\n    },\n    {\n      provide: NGX_EDITORJS_CONFIG,\n      useFactory: createModuleConfig,\n      deps: [FOR_ROOT_OPTIONS_TOKEN]\n    },\n    {\n      provide: EDITORJS_MODULE_IMPORT,\n      useValue: EditorJS\n    },\n    {\n      provide: EditorJSInstance,\n      useFactory: createEditorJSInstance,\n      deps: [EDITORJS_MODULE_IMPORT]\n    }\n  ]\n})\nexport class NgxEditorJSModule {\n  constructor(\n    @Optional()\n    @SkipSelf()\n    parentModule: NgxEditorJSModule\n  ) {}\n\n  /**\n   * Use this method in the root of the application.  You can pass an optional configuration\n   * which sets some defaults, or use the provided defaults.\n   * @param config The optional configuration to pass\n   */\n  static forRoot(@Optional() config?: NgxEditorJSModuleConfig): ModuleWithProviders {\n    return {\n      ngModule: NgxEditorJSModule,\n      providers: [\n        {\n          provide: FOR_ROOT_OPTIONS_TOKEN,\n          useValue: config\n        },\n        {\n          provide: NGX_EDITORJS_CONFIG,\n          useFactory: createModuleConfig,\n          deps: [FOR_ROOT_OPTIONS_TOKEN]\n        }\n      ]\n    };\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/NgxEditorJSModuleConfig.html":{"url":"interfaces/NgxEditorJSModuleConfig.html","title":"interface - NgxEditorJSModuleConfig","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  NgxEditorJSModuleConfig\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            libs/ngx-editorjs/ngx-editorjs/src/lib/types/config.ts\n        \n\n            \n                Description\n            \n            \n                The configuration option that can be passed to the NgxEditorJSModule.forRoot method\n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                            Optional\n                                        editorjs\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        editorjs\n                                    \n                                \n                                \n                                    \n                                        editorjs:     EditorConfig\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     EditorConfig\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    Configuration options for EditorJS\n\n                                \n                            \n                        \n                    \n            \n    \n\n\n    \n        import { InjectionToken } from '@angular/core';\nimport EditorJS, { OutputData, SanitizerConfig, EditorConfig } from '@editorjs/editorjs';\n\n/**\n * Configuration for the EditorJS instance\n */\nexport interface NgxEditorJSConfig {\n  /**\n   * If the EditorJS is autofocused on creation (default: false)\n   */\n  autofocus?: boolean;\n\n  /**\n   * Any initial output data to render\n   */\n  data?: OutputData;\n\n  /**\n   * If true, toolbar won't be shown\n   */\n  hideToolbar?: boolean;\n\n  /**\n   * ID of the element to hold the config\n   */\n  holder?: string;\n\n  /**\n   * The name of the initial block (default \"paragraph\")\n   */\n  initialBlock?: string;\n\n  /**\n   * Height of Editor's bottom area that allows to set focus on the last Block\n   */\n  minHeight?: number;\n\n  /**\n   * First Block placeholder\n   */\n  blockPlaceholder?: string;\n\n  /**\n   * Define default sanitizer configuration\n   */\n  sanitizer?: SanitizerConfig;\n}\n\n/**\n * The configuration option that can be passed to the `NgxEditorJSModule.forRoot` method\n */\nexport interface NgxEditorJSModuleConfig {\n  /**\n   * Configuration options for EditorJS\n   */\n  editorjs?: EditorConfig;\n}\n\n/**\n * Injection token provied for `NgxEditorJSConfig`\n */\nexport const NGX_EDITORJS_CONFIG = new InjectionToken('NGX_EDITORJS_CONFIG');\n\n/**\n * Internal token for injecting the `NgxEditorJSConfig` into the config factory\n */\nexport const FOR_ROOT_OPTIONS_TOKEN = new InjectionToken('FOR_ROOT_OPTIONS_TOKEN');\n\n/**\n * Get the EditorJS instance injected into the app\n */\nexport const EDITIOR_JS_INSTANCE = new InjectionToken('EDITIOR_JS_INSTANCE');\n\n    \n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/NgxEditorJSPluginService.html":{"url":"injectables/NgxEditorJSPluginService.html","title":"injectable - NgxEditorJSPluginService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  NgxEditorJSPluginService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            libs/ngx-editorjs/ngx-editorjs-plugins/src/lib/services/plugin-service.service.ts\n        \n\n            \n                Description\n            \n            \n                The NgxEditorJSPluginService is provided as a root service for handling  EditorJS plugins.\nPlugins are provided by using  NgModule to inject the plugin with a\n PluginConfig using providers.\n\n            \n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                getPlugin\n                            \n                            \n                                    Public\n                                getPlugins\n                            \n                            \n                                    Public\n                                getPluginsWithExclude\n                            \n                            \n                                    Public\n                                getPluginsWithInclude\n                            \n                            \n                                    Public\n                                getTools\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(pluginConfigMap: PluginConfigMap)\n                    \n                \n                        \n                            \n                                Defined in libs/ngx-editorjs/ngx-editorjs-plugins/src/lib/services/plugin-service.service.ts:13\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        pluginConfigMap\n                                                  \n                                                        \n                                                                        PluginConfigMap\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                The plugin configuration map injected into the application\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            getPlugin\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    getPlugin(key: string)\n                \n            \n\n\n            \n                \n                    Defined in libs/ngx-editorjs/ngx-editorjs-plugins/src/lib/services/plugin-service.service.ts:32\n                \n            \n\n\n            \n                \n                    Get a plugin configuration via it's key\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    key\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        The key of the plugin to get\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         PluginConfig\n\n                    \n                    \n                        The plugin configuration for the passed key\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            getPlugins\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    getPlugins()\n                \n            \n\n\n            \n                \n                    Defined in libs/ngx-editorjs/ngx-editorjs-plugins/src/lib/services/plugin-service.service.ts:23\n                \n            \n\n\n            \n                \n                    Get a map of all plugin configurations\n\n\n                    \n                    \n                    \n                        Returns :         PluginConfigMap\n\n                    \n                    \n                        The map of plugins injected into this plugin\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            getPluginsWithExclude\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    getPluginsWithExclude(excludeList: string[])\n                \n            \n\n\n            \n                \n                    Defined in libs/ngx-editorjs/ngx-editorjs-plugins/src/lib/services/plugin-service.service.ts:40\n                \n            \n\n\n            \n                \n                    Get a list of plugins, filtering with an exclude list of plugins\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Default value\n                                \n                            \n                            \n                                \n                                    excludeList\n                                    \n                                            string[]\n                                    \n\n                                    \n                                        No\n                                    \n\n                                    \n                                        []\n                                    \n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         PluginConfigMap\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            getPluginsWithInclude\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    getPluginsWithInclude(includeList: string[])\n                \n            \n\n\n            \n                \n                    Defined in libs/ngx-editorjs/ngx-editorjs-plugins/src/lib/services/plugin-service.service.ts:54\n                \n            \n\n\n            \n                \n                    Get a list of plugins, filtering with an include list of plugins\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Default value\n                                \n                            \n                            \n                                \n                                    includeList\n                                    \n                                            string[]\n                                    \n\n                                    \n                                        No\n                                    \n\n                                    \n                                        []\n                                    \n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         PluginConfigMap\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            getTools\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    getTools(excludeTools: string[])\n                \n            \n\n\n            \n                \n                    Defined in libs/ngx-editorjs/ngx-editorjs-plugins/src/lib/services/plugin-service.service.ts:68\n                \n            \n\n\n            \n                \n                    Returns a map of  EditorJS tools to be initialized by the editor\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Default value\n                                    Description\n                                \n                            \n                            \n                                \n                                    excludeTools\n                                    \n                                            string[]\n                                    \n\n                                    \n                                        No\n                                    \n\n                                    \n                                        []\n                                    \n\n                                    \n                                        Optional array of tools to exclude, if not passed all tools\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         ToolSettingsMap\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Inject, Injectable } from '@angular/core';\nimport { PluginClasses, PluginConfig, PluginConfigMap, ToolSettingsMap } from '../types/plugins';\n\n/**\n * The `NgxEditorJSPluginService` is provided as a root service for handling {@link https://github.com/editor-js | EditorJS plugins}.\n *\n * Plugins are provided by using {@link https://angular.io/api/core/NgModule | NgModule} to inject the plugin with a\n * {@link ../interfaces/PluginConfig.html | PluginConfig} using providers.\n */\n@Injectable({\n  providedIn: 'root'\n})\nexport class NgxEditorJSPluginService {\n  /**\n   * @param pluginConfigMap The plugin configuration map injected into the application\n   */\n  constructor(@Inject(PluginClasses) private readonly pluginConfigMap: PluginConfigMap) {}\n\n  /**\n   * Get a map of all plugin configurations\n   * @returns The map of plugins injected into this plugin\n   */\n  public getPlugins(): PluginConfigMap {\n    return this.pluginConfigMap;\n  }\n\n  /**\n   * Get a plugin configuration via it's key\n   * @param key The key of the plugin to get\n   * @returns The plugin configuration for the passed key\n   */\n  public getPlugin(key: string): PluginConfig {\n    return this.pluginConfigMap[key];\n  }\n\n  /**\n   * Get a list of plugins, filtering with an exclude list of plugins\n   * @param excludeList\n   */\n  public getPluginsWithExclude(excludeList: string[] = []): PluginConfigMap {\n    return Object.entries(this.pluginConfigMap)\n      .filter(([key]) => {\n        return !excludeList.includes(key);\n      })\n      .reduce((pluginMap, [key, plugin]) => {\n        return { ...pluginMap, [key]: plugin };\n      }, {});\n  }\n\n  /**\n   * Get a list of plugins, filtering with an include list of plugins\n   * @param includeList\n   */\n  public getPluginsWithInclude(includeList: string[] = []): PluginConfigMap {\n    return Object.entries(this.pluginConfigMap)\n      .filter(([key]) => {\n        return includeList.includes(key);\n      })\n      .reduce((pluginMap, [key, plugin]) => {\n        return { ...pluginMap, [key]: plugin };\n      }, {});\n  }\n\n  /**\n   * Returns a map of {@link https://editorjs.io/api | EditorJS} tools to be initialized by the editor\n   * @param excludeTools Optional array of tools to exclude, if not passed all tools\n   */\n  public getTools(excludeTools: string[] = []): ToolSettingsMap {\n    return Object.entries(this.getPluginsWithExclude(excludeTools)).reduce(\n      (finalTools, [key, plugin]: [string, PluginConfig]) => {\n        const tool: any = {\n          class: plugin.plugin\n        };\n        if (plugin.shortcut) tool.shortcut = plugin.shortcut;\n        if (plugin.type === 'inline' || plugin.inlineToolbar) tool.inlineToolbar = true;\n        if (plugin.config) tool.config = plugin.config;\n        return { ...finalTools, [key]: tool };\n      },\n      {}\n    );\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/NgxEditorJSPluginServiceModule.html":{"url":"modules/NgxEditorJSPluginServiceModule.html","title":"module - NgxEditorJSPluginServiceModule","body":"\n                   \n\n\n\n\n    Modules\n    NgxEditorJSPluginServiceModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_NgxEditorJSPluginServiceModule\n\n\n\ncluster_NgxEditorJSPluginServiceModule_providers\n\n\n\n\nNgxEditorJSPluginService\n\nNgxEditorJSPluginService\n\n\n\nNgxEditorJSPluginServiceModule\n\nNgxEditorJSPluginServiceModule\n\nNgxEditorJSPluginServiceModule -->\n\nNgxEditorJSPluginService->NgxEditorJSPluginServiceModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            libs/ngx-editorjs/ngx-editorjs-plugins/src/lib/services/plugin-service.module.ts\n        \n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            NgxEditorJSPluginService\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { NgModule } from '@angular/core';\nimport { EDITOR_JS_TOOL_INJECTOR, PluginClasses, PLUGIN_CONFIG } from '../types/plugins';\nimport { createPluginConfig } from '../util/plugin';\nimport { NgxEditorJSPluginService } from './plugin-service.service';\n\n@NgModule({\n  providers: [\n    {\n      provide: PLUGIN_CONFIG,\n      useValue: undefined,\n      multi: true\n    },\n    {\n      provide: EDITOR_JS_TOOL_INJECTOR,\n      useValue: undefined,\n      multi: true\n    },\n    {\n      provide: PluginClasses,\n      useFactory: createPluginConfig,\n      deps: [PLUGIN_CONFIG, EDITOR_JS_TOOL_INJECTOR]\n    },\n    NgxEditorJSPluginService\n  ]\n})\nexport class NgxEditorJSPluginServiceModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/NgxEditorJSService.html":{"url":"injectables/NgxEditorJSService.html","title":"injectable - NgxEditorJSService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  NgxEditorJSService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            libs/ngx-editorjs/ngx-editorjs/src/lib/services/editorjs.service.ts\n        \n\n            \n                Description\n            \n            \n                This handles the management of  EditorJS instances and their lifecycle.\nAll EditorJS instances are created outside of Angular using  NgZone  to ensure change detection is not triggered.\nOnce an instance is created, several  Observable values are also set up:\n\n isReady  Set when the editor instance is ready in the DOM\n hasSaved  Set when the editor .save() method has been called.\n lastChange  Set when a change happens, contains the OutputData from the Editor.\n\nAfter setup,  isReady  is set to true and the editor can be used within Angular.  There are some methods provided\nfor  save ,  update  and  clear  - and an  apiCall  method which allows\nfor any call to be made to EditorJS that matches it's API.\n\n            \n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                apiCall\n                            \n                            \n                                    Public\n                                clear\n                            \n                            \n                                    Public\n                                    Async\n                                createInstance\n                            \n                            \n                                    Public\n                                destroy\n                            \n                            \n                                    Public\n                                destroyInstance\n                            \n                            \n                                    Public\n                                getEditor\n                            \n                            \n                                    Public\n                                hasSaved\n                            \n                            \n                                    Public\n                                isReady\n                            \n                            \n                                    Public\n                                lastChange\n                            \n                            \n                                    Public\n                                save\n                            \n                            \n                                    Public\n                                update\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(editorJs: EditorJSClass, config: NgxEditorJSModuleConfig, plugins: NgxEditorJSPluginService, zone: NgZone, ref: ApplicationRef)\n                    \n                \n                        \n                            \n                                Defined in libs/ngx-editorjs/ngx-editorjs/src/lib/services/editorjs.service.ts:61\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        editorJs\n                                                  \n                                                        \n                                                                        EditorJSClass\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                The EditorJS class injected into the application and used to create new editor instances\n\n                                                        \n                                                \n                                                \n                                                        config\n                                                  \n                                                        \n                                                                        NgxEditorJSModuleConfig\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                The configuration provided from the NgxEditorJSModule.forRoot method\n\n                                                        \n                                                \n                                                \n                                                        plugins\n                                                  \n                                                        \n                                                                        NgxEditorJSPluginService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                The plugin service which provides all plugins injected into the application\n\n                                                        \n                                                \n                                                \n                                                        zone\n                                                  \n                                                        \n                                                                        NgZone\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                The Angular Zone service that allows the EditorJS methods to be run outside of Angular\n\n                                                        \n                                                \n                                                \n                                                        ref\n                                                  \n                                                        \n                                                                        ApplicationRef\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                The ApplicationRef provided by Angular, used to trigger an application tick\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            apiCall\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    apiCall(options: InjectorApiCallOptions, ...args: any[])\n                \n            \n\n\n            \n                \n                    Defined in libs/ngx-editorjs/ngx-editorjs/src/lib/services/editorjs.service.ts:138\n                \n            \n\n            \n                \n                    Type parameters :\n                    \n                        T\n                    \n                \n            \n\n            \n                \n                    A helper method to make calls to the  EditorJS API  of any instance.\nThe first argument is an object that you must pass the method name, and the holder ID of the container.\nAn optional namespace can be added for API calls such as blocks, caret, etc.\nThe second argument is any additional arguments as required by the API.\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    options\n                                    \n                                                InjectorApiCallOptions\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        The options for the API call to be made\n\n                                    \n                                \n                                \n                                    args\n                                    \n                                            any[]\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        Any arguments to be passed to the API call\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Observable>\n\n                    \n                    \n                        An Observable of the API response\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            clear\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    clear(options: InjectorMethodOption)\n                \n            \n\n\n            \n                \n                    Defined in libs/ngx-editorjs/ngx-editorjs/src/lib/services/editorjs.service.ts:191\n                \n            \n\n\n            \n                \n                    Gets the  EditorJS instance for the passed holder and calls the clear method.\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    options\n                                    \n                                                InjectorMethodOption\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        Options to configure a method call against the EditorJS core API\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Observable>\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            Async\n                            createInstance\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    createInstance(options: CreateEditorJSOptions)\n                \n            \n\n\n            \n                \n                    Defined in libs/ngx-editorjs/ngx-editorjs/src/lib/services/editorjs.service.ts:87\n                \n            \n\n\n            \n                \n                    Creates a new  EditorJS instance outside of the Angular zone and then adds it to the editor instances\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    options\n                                    \n                                                CreateEditorJSOptions\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        A configuration passed to create an EditorJS instance\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        A Promise when the editor has been created\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            destroy\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    destroy()\n                \n            \n\n\n            \n                \n                    Defined in libs/ngx-editorjs/ngx-editorjs/src/lib/services/editorjs.service.ts:288\n                \n            \n\n\n            \n                \n                    Call this to destroy all subscriptions within the service\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            destroyInstance\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    destroyInstance(options: InjectorMethodOption)\n                \n            \n\n\n            \n                \n                    Defined in libs/ngx-editorjs/ngx-editorjs/src/lib/services/editorjs.service.ts:271\n                \n            \n\n\n            \n                \n                    Destroys a single instance of  EditorJS and all the subject values created for it\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    options\n                                    \n                                                InjectorMethodOption\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        Options to configure a method call against the EditorJS core API\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            getEditor\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    getEditor(options: InjectorMethodOption)\n                \n            \n\n\n            \n                \n                    Defined in libs/ngx-editorjs/ngx-editorjs/src/lib/services/editorjs.service.ts:220\n                \n            \n\n\n            \n                \n                    Returns the underlying  EditorJS instance\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    options\n                                    \n                                                InjectorMethodOption\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        Options to configure a method call against the EditorJS core API\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Observable\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            hasSaved\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    hasSaved(options: InjectorMethodOption)\n                \n            \n\n\n            \n                \n                    Defined in libs/ngx-editorjs/ngx-editorjs/src/lib/services/editorjs.service.ts:260\n                \n            \n\n\n            \n                \n                    Subscribe to the hasSaved state change for the editor passed in the options\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    options\n                                    \n                                                InjectorMethodOption\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        Options to configure a method call against the EditorJS core API\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Observable\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            isReady\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    isReady(options: InjectorMethodOption)\n                \n            \n\n\n            \n                \n                    Defined in libs/ngx-editorjs/ngx-editorjs/src/lib/services/editorjs.service.ts:231\n                \n            \n\n\n            \n                \n                    Subscribe to the isReady state change for the editor passed in the options\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    options\n                                    \n                                                InjectorMethodOption\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        Options to configure a method call against the EditorJS core API\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Observable\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            lastChange\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    lastChange(options: InjectorMethodOption)\n                \n            \n\n\n            \n                \n                    Defined in libs/ngx-editorjs/ngx-editorjs/src/lib/services/editorjs.service.ts:242\n                \n            \n\n\n            \n                \n                    Subscribe to the lastChange state change for the editor passed in the options\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    options\n                                    \n                                                InjectorMethodOption\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        Options to configure a method call against the EditorJS core API\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Observable\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            save\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    save(options: InjectorMethodOption)\n                \n            \n\n\n            \n                \n                    Defined in libs/ngx-editorjs/ngx-editorjs/src/lib/services/editorjs.service.ts:177\n                \n            \n\n\n            \n                \n                    Call the save method of an  EditorJS instance and sets the current value of the service to the result\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    options\n                                    \n                                                InjectorMethodOption\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        Options for the method call\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Observable>\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            update\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    update(options: InjectorMethodOption)\n                \n            \n\n\n            \n                \n                    Defined in libs/ngx-editorjs/ngx-editorjs/src/lib/services/editorjs.service.ts:204\n                \n            \n\n\n            \n                \n                    Gets the  EditorJS instance for the passed holder and calls the render method if blocks\nare passed. Optionally can disable the lastChange update - useful if doing actions\nsuch as resetting data.\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    options\n                                    \n                                                InjectorMethodOption\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        Options to configure a method call against the EditorJS core API\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Observable>\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { ApplicationRef, Inject, Injectable, NgZone } from '@angular/core';\nimport EditorJS, { EditorConfig, OutputData } from '@editorjs/editorjs';\nimport { NgxEditorJSPluginService, ToolSettingsMap } from '@tinynodes/ngx-editorjs-plugins';\nimport { BehaviorSubject, Observable, of, Subject } from 'rxjs';\nimport { distinctUntilChanged, filter, switchMap, take, tap } from 'rxjs/operators';\nimport { NgxEditorJSModuleConfig, NGX_EDITORJS_CONFIG } from '../types/config';\nimport { CreateEditorJSOptions } from '../types/editorjs-service';\nimport {\n  EditorJSClass,\n  EditorJSInstance,\n  InjectorApiCallOptions,\n  InjectorApiCallResponse,\n  InjectorMethodOption,\n  MAP_DEFAULTS\n} from '../types/injector';\nimport { ChangeMap, EditorMap, ReadyMap, SavedMap } from '../types/maps';\n\n/**\n * This handles the management of {@link https://editorjs.io/api | EditorJS} instances and their lifecycle.\n *\n * All `EditorJS` instances are created outside of Angular using {@link https://angular.io/api/core/NgZone | NgZone } to ensure change detection is not triggered.\n * Once an instance is created, several {@link https://angular.io/guide/observables | Observable} values are also set up:\n *\n *  - {@link #isReady | isReady } Set when the editor instance is ready in the DOM\n *  - {@link #hasSaved | hasSaved } Set when the editor `.save()` method has been called.\n *  - {@link #lastChange | lastChange } Set when a change happens, contains the `OutputData` from the Editor.\n *\n * After setup, {@link #isReady | isReady } is set to true and the editor can be used within Angular.  There are some methods provided\n * for {@link #save | save }, {@link #update | update } and {@link #clear | clear } - and an {@link #apiCall | apiCall } method which allows\n * for any call to be made to EditorJS that matches it's API.\n */\n@Injectable({\n  providedIn: 'root'\n})\nexport class NgxEditorJSService {\n  /**\n   * Internal destroy subject for the service\n   */\n  private readonly onDestroy$ = new Subject();\n\n  /**\n   * Internal map of all {@link https://editorjs.io/api | EditorJS} instances\n   */\n  private readonly editorMap: EditorMap = {};\n\n  /**\n   * Internal map of all {@link https://editorjs.io/api | EditorJS} ready states\n   */\n  private readonly isReadyMap: ReadyMap = {};\n\n  /**\n   * Internal map of when {@link https://editorjs.io/api | EditorJS} save is called\n   */\n  private readonly hasSavedMap: SavedMap = {};\n\n  /**\n   * Internal map of all {@link https://editorjs.io/api | EditorJS} change states\n   */\n  private readonly lastChangeMap: ChangeMap = {};\n\n  private toolbarOpen = false;\n\n  /**\n   * @param editorJs The EditorJS class injected into the application and used to create new editor instances\n   * @param config The configuration provided from the NgxEditorJSModule.forRoot method\n   * @param plugins The plugin service which provides all plugins injected into the application\n   * @param zone The Angular Zone service that allows the EditorJS methods to be run outside of Angular\n   * @param ref The ApplicationRef provided by Angular, used to trigger an application tick\n   */\n  constructor(\n    @Inject(EditorJSInstance) private readonly editorJs: EditorJSClass,\n    @Inject(NGX_EDITORJS_CONFIG) private readonly config: NgxEditorJSModuleConfig,\n    private readonly plugins: NgxEditorJSPluginService,\n    private readonly zone: NgZone,\n    private readonly ref: ApplicationRef\n  ) {}\n\n  /**\n   * Creates a new {@link https://editorjs.io/api | EditorJS} instance outside of the Angular zone and then adds it to the editor instances\n   *\n   * @remark\n   * This method uses `async/await`\n   *\n   * @param options A configuration passed to create an EditorJS instance\n   * @returns A Promise when the editor has been created\n   */\n  public async createInstance(options: CreateEditorJSOptions): Promise {\n    const editorConfig: EditorConfig = {\n      ...this.config.editorjs,\n      ...options.config,\n      tools: this.getTools(options.excludeTools)\n    };\n\n    // Bind the editor onChange method from the config, otherwise use the local createOnChange method\n    editorConfig.onChange =\n      editorConfig.onChange && typeof editorConfig.onChange === 'function'\n        ? editorConfig.onChange\n        : this.createOnChange.call(this, { holder: editorConfig.holder as string });\n\n    // Bind the editor onReady method from the config, otherwise use the local createOnReady method\n    editorConfig.onReady =\n      editorConfig.onReady && typeof editorConfig.onReady === 'function'\n        ? editorConfig.onReady\n        : this.createOnReady.call(this, { holder: editorConfig.holder as string });\n\n    await this.zone.runOutsideAngular(async () => {\n      const editor = new this.editorJs(editorConfig);\n      const holder = editorConfig.holder as string;\n      await editor.isReady;\n      await this.zone.run(async () => {\n        await this.setupSubjects({ holder });\n        if (this.editorMap[holder]) {\n          this.editorMap[holder].next(editor);\n        } else {\n          this.editorMap[holder] = new BehaviorSubject(editor);\n        }\n        this.isReadyMap[holder].next(true);\n        this.ref.tick();\n      });\n    });\n  }\n\n  /**\n   * A helper method to make calls to the {@link https://editorjs.io/api | EditorJS API } of any instance.\n   * The first argument is an object that you must pass the `method` name, and the `holder` ID of the container.\n   * An optional `namespace` can be added for API calls such as `blocks`, `caret`, etc.\n   *\n   * The second argument is any additional arguments as required by the API.\n   *\n   * @remarks\n   * Unlike other methods an API call be made with a `.subscribe`, the result will be an observable value.\n   * If the value is a Promise it will be resolved first\n   *\n   * @param options The options for the API call to be made\n   * @param args Any arguments to be passed to the API call\n   * @returns An Observable of the API response\n   */\n  public apiCall(options: InjectorApiCallOptions, ...args: any[]): Observable> {\n    return this.getEditor(options).pipe(\n      take(1),\n      switchMap(async editor => {\n        let result: InjectorApiCallResponse = { ...options, result: undefined };\n\n        await this.zone.runOutsideAngular(async () => {\n          let method: any;\n          if (!options.namespace) {\n            method = editor[options.method];\n          } else {\n            method = editor[options.namespace][options.method];\n          }\n          if (!method) {\n            throw new Error(`No method ${options.method} ${options.namespace ? 'in ' + options.namespace : ''}`);\n          }\n          const methodCall = method.call(editor, ...args);\n          await this.zone.run(async () => {\n            if (!methodCall || (methodCall && !methodCall.then)) {\n              result = {\n                ...result,\n                result: typeof methodCall === 'undefined' ? {} : methodCall\n              };\n            } else {\n              const r = await methodCall;\n              result = { ...result, result: r };\n            }\n          });\n        });\n\n        return result;\n      })\n    );\n  }\n\n  /**\n   * Call the `save` method of an {@link https://editorjs.io/api | EditorJS} instance and sets the current value of the service to the result\n   * @param options Options for the method call\n   */\n  public save(options: InjectorMethodOption): Observable> {\n    return this.apiCall({ holder: options.holder, namespace: 'saver', method: 'save' }).pipe(\n      take(1),\n      tap((response: InjectorApiCallResponse) => {\n        this.hasSavedMap[options.holder].next(true);\n        this.lastChangeMap[options.holder].next(response.result);\n      })\n    );\n  }\n\n  /**\n   * Gets the {@link https://editorjs.io/api | EditorJS} instance for the passed holder and calls the `clear` method.\n   * @param options Options to configure a method call against the EditorJS core API\n   */\n  public clear(options: InjectorMethodOption): Observable> {\n    return this.apiCall({ holder: options.holder, namespace: 'blocks', method: 'clear' }).pipe(\n      take(1),\n      switchMap(response => (options.skipSave ? of(response) : this.save(options)))\n    );\n  }\n\n  /**\n   * Gets the {@link https://editorjs.io/api | EditorJS} instance for the passed holder and calls the render method if blocks\n   * are passed. Optionally can disable the `lastChange` update - useful if doing actions\n   * such as resetting data.\n   * @param options Options to configure a method call against the EditorJS core API\n   */\n  public update(options: InjectorMethodOption): Observable> {\n    const data = {\n      time: (options.data && options.data.time) || Date.now(),\n      version: (options.data && options.data.version) || this.editorJs.version,\n      blocks: [...options.data.blocks]\n    };\n    return this.apiCall({ holder: options.holder, namespace: 'blocks', method: 'render' }, data).pipe(\n      take(1),\n      switchMap(response => (options.skipSave ? of(response) : this.save(options)))\n    );\n  }\n\n  /**\n   * Returns the underlying {@link https://editorjs.io/api | EditorJS} instance\n   * @param options Options to configure a method call against the EditorJS core API\n   */\n  public getEditor(options: InjectorMethodOption): Observable {\n    if (!this.editorMap[options.holder]) {\n      this.editorMap[options.holder] = new BehaviorSubject(undefined);\n    }\n    return this.editorMap[options.holder].pipe(filter(editor => typeof editor !== 'undefined'));\n  }\n\n  /**\n   * Subscribe to the `isReady` state change for the editor passed in the options\n   * @param options Options to configure a method call against the EditorJS core API\n   */\n  public isReady(options: InjectorMethodOption): Observable {\n    if (!this.isReadyMap[options.holder]) {\n      this.isReadyMap[options.holder] = new BehaviorSubject(false);\n    }\n    return this.isReadyMap[options.holder].asObservable();\n  }\n\n  /**\n   * Subscribe to the `lastChange` state change for the editor passed in the options\n   * @param options Options to configure a method call against the EditorJS core API\n   */\n  public lastChange(options: InjectorMethodOption): Observable {\n    if (!this.lastChangeMap[options.holder]) {\n      this.lastChangeMap[options.holder] = new BehaviorSubject({\n        time: 0,\n        blocks: [],\n        version: this.editorJs.version\n      });\n    }\n    return this.lastChangeMap[options.holder].pipe(\n      distinctUntilChanged((a, b) => (b && b.time && b.time === 0) || (a && b && (a.time && a.time === b.time))),\n      filter(hasChanged => typeof hasChanged !== 'undefined')\n    );\n  }\n\n  /**\n   * Subscribe to the `hasSaved` state change for the editor passed in the options\n   * @param options Options to configure a method call against the EditorJS core API\n   */\n  public hasSaved(options: InjectorMethodOption): Observable {\n    if (!this.hasSavedMap[options.holder]) {\n      this.hasSavedMap[options.holder] = new BehaviorSubject(false);\n    }\n    return this.hasSavedMap[options.holder].asObservable();\n  }\n\n  /**\n   * Destroys a single instance of {@link https://editorjs.io/api | EditorJS} and all the subject values created for it\n   * @param options Options to configure a method call against the EditorJS core API\n   */\n  public destroyInstance(options: InjectorMethodOption): void {\n    this.getEditor(options)\n      .pipe(take(1))\n      .subscribe(editor => {\n        this.zone.runOutsideAngular(() => {\n          editor.destroy();\n          this.zone.run(() => {\n            this.cleanupSubjects({ holder: options.holder });\n            this.ref.tick();\n          });\n        });\n      });\n  }\n\n  /**\n   * Call this to destroy all subscriptions within the service\n   */\n  public destroy() {\n    Object.keys(this.editorMap).forEach(holder => this.destroyInstance({ holder }));\n    this.onDestroy$.next(true);\n    this.onDestroy$.complete();\n  }\n\n  /**\n   * Internal method to create an default onChange method for {@link https://editorjs.io/api | EditorJS}\n   * @param options The InjectorMethodOption for this request\n   */\n  private createOnChange(options: InjectorMethodOption): (change: OutputData) => void {\n    if (!this.lastChangeMap[options.holder]) {\n      this.lastChangeMap[options.holder] = new BehaviorSubject({ blocks: [] });\n    }\n    return (change: OutputData) => {\n      if (change) {\n        this.lastChangeMap[options.holder].next(change);\n      }\n    };\n  }\n\n  /**\n   * Internal method to create an default onReady method for {@link https://editorjs.io/api | EditorJS}\n   * @param options The InjectorMethodOption for this request\n   */\n  private createOnReady(options: InjectorMethodOption): () => void {\n    if (!this.isReadyMap[options.holder]) {\n      this.isReadyMap[options.holder] = new BehaviorSubject(false);\n    }\n\n    return () => {\n      if (!this.isReadyMap[options.holder].value) {\n        this.isReadyMap[options.holder].next(true);\n      }\n    };\n  }\n\n  /**\n   * Sets up the `BehaviorSubject` values when an {@link https://editorjs.io/api | EditorJS} instance is created.  All the subjects are first created and set\n   * to default values.\n   * Once an EditorJS instance is ready these values can provide change and save state information\n   * @param options Options to configure a method call against the EditorJS core API\n   */\n  private async setupSubjects(options: InjectorMethodOption): Promise {\n    MAP_DEFAULTS.forEach(([mapKey, value]: [string, typeof value]) => {\n      if (!this[mapKey][options.holder]) {\n        this[mapKey][options.holder] = new BehaviorSubject(value);\n      }\n      this[mapKey][options.holder].next(value);\n    });\n  }\n\n  /**\n   * Handles cleaning up all the `BehaviorSubject` values once an {@link https://editorjs.io/api | EditorJS} instance has been destroyed\n   * @param options The options to pass to clean up the subjects\n   */\n  private cleanupSubjects(options: InjectorMethodOption) {\n    MAP_DEFAULTS.forEach(([mapKey]: [string]) => {\n      if (this[mapKey][options.holder]) {\n        this[mapKey][options.holder].complete();\n        this[mapKey][options.holder] = null;\n        delete this[mapKey][options.holder];\n      }\n    });\n    this.editorMap[options.holder].complete();\n    this.editorMap[options.holder] = null;\n    delete this.editorMap[options.holder];\n  }\n\n  /**\n   * Returns a map of {@link https://editorjs.io/api | EditorJS} tools to be initialized by the editor\n   * @param excludeTools Optional array of tools to exclude, if not passed all tools\n   */\n  private getTools(excludeTools: string[] = []): ToolSettingsMap {\n    return this.plugins.getTools(excludeTools);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/NgxEditorjsDemoModule.html":{"url":"modules/NgxEditorjsDemoModule.html","title":"module - NgxEditorjsDemoModule","body":"\n                   \n\n\n\n\n    Modules\n    NgxEditorjsDemoModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_NgxEditorjsDemoModule\n\n\n\ncluster_NgxEditorjsDemoModule_declarations\n\n\n\ncluster_NgxEditorjsDemoModule_imports\n\n\n\ncluster_NgxEditorjsDemoModule_exports\n\n\n\n\nNgxEditorJSDemoHomeComponent\n\nNgxEditorJSDemoHomeComponent\n\n\n\nNgxEditorjsDemoModule\n\nNgxEditorjsDemoModule\n\nNgxEditorjsDemoModule -->\n\nNgxEditorJSDemoHomeComponent->NgxEditorjsDemoModule\n\n\n\n\n\nPageContainerComponent\n\nPageContainerComponent\n\nNgxEditorjsDemoModule -->\n\nPageContainerComponent->NgxEditorjsDemoModule\n\n\n\n\n\nPageContainerComponent \n\nPageContainerComponent \n\nPageContainerComponent  -->\n\nNgxEditorjsDemoModule->PageContainerComponent \n\n\n\n\n\nPageStoreModule \n\nPageStoreModule \n\nPageStoreModule  -->\n\nNgxEditorjsDemoModule->PageStoreModule \n\n\n\n\n\nNgxEditorJSDemoMaterialModule\n\nNgxEditorJSDemoMaterialModule\n\nNgxEditorjsDemoModule -->\n\nNgxEditorJSDemoMaterialModule->NgxEditorjsDemoModule\n\n\n\n\n\nNgxEditorJSModule\n\nNgxEditorJSModule\n\nNgxEditorjsDemoModule -->\n\nNgxEditorJSModule->NgxEditorjsDemoModule\n\n\n\n\n\nNgxEditorjsPluginsModule\n\nNgxEditorjsPluginsModule\n\nNgxEditorjsDemoModule -->\n\nNgxEditorjsPluginsModule->NgxEditorjsDemoModule\n\n\n\n\n\nPageStoreModule\n\nPageStoreModule\n\nNgxEditorjsDemoModule -->\n\nPageStoreModule->NgxEditorjsDemoModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            libs/ngx-editorjs/ngx-editorjs-demo/src/lib/ngx-editorjs-demo.module.ts\n        \n\n\n\n\n        \n            \n                \n                    Declarations\n                    \n                        \n                            NgxEditorJSDemoHomeComponent\n                        \n                        \n                            PageContainerComponent\n                        \n                    \n                \n                \n                    EntryComponents\n                    \n                        \n                            PageContainerComponent\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            NgxEditorJSDemoMaterialModule\n                        \n                        \n                            NgxEditorJSModule\n                        \n                        \n                            NgxEditorjsPluginsModule\n                        \n                        \n                            PageStoreModule\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            PageContainerComponent\n                        \n                        \n                            PageStoreModule\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\nimport { ReactiveFormsModule } from '@angular/forms';\n\nimport { RouterModule } from '@angular/router';\nimport { NgxEditorJSModule } from '@tinynodes/ngx-editorjs';\nimport { PageContainerComponent } from './containers/page-container/page-container.component';\nimport { ngxEditorjsDemoRoutes } from './ngx-editorjs-demo.routes';\nimport { PageStoreModule } from './store/pages/pages.module';\nimport { NgxTinynodesCoreModule } from '@tinynodes/ngx-tinynodes-core';\nimport { NgxEditorJSDemoHomeComponent } from './containers/home-container/home-container.component';\nimport { NgxEditorJSDemoMaterialModule } from './ngx-editorjs-demo.material.module';\n\nimport { NgxJsonViewerModule } from 'ngx-json-viewer';\nimport { NgxEditorjsPluginsModule } from '@tinynodes/ngx-editorjs-plugins';\n\n@NgModule({\n  imports: [\n    CommonModule,\n    NgxJsonViewerModule,\n    RouterModule.forChild(ngxEditorjsDemoRoutes),\n    ReactiveFormsModule,\n    PageStoreModule,\n    NgxTinynodesCoreModule,\n    NgxEditorJSModule,\n    NgxEditorjsPluginsModule,\n    NgxEditorJSDemoMaterialModule\n  ],\n  declarations: [PageContainerComponent, NgxEditorJSDemoHomeComponent],\n  exports: [PageStoreModule, PageContainerComponent],\n  entryComponents: [PageContainerComponent]\n})\nexport class NgxEditorjsDemoModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/NgxEditorjsPluginsModule.html":{"url":"modules/NgxEditorjsPluginsModule.html","title":"module - NgxEditorjsPluginsModule","body":"\n                   \n\n\n\n\n    Modules\n    NgxEditorjsPluginsModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_NgxEditorjsPluginsModule\n\n\n\ncluster_NgxEditorjsPluginsModule_imports\n\n\n\ncluster_NgxEditorjsPluginsModule_exports\n\n\n\n\nNgxEditorJSPluginServiceModule\n\nNgxEditorJSPluginServiceModule\n\n\n\nNgxEditorjsPluginsModule\n\nNgxEditorjsPluginsModule\n\nNgxEditorjsPluginsModule -->\n\nNgxEditorJSPluginServiceModule->NgxEditorjsPluginsModule\n\n\n\n\n\nPluginCodeModule\n\nPluginCodeModule\n\nNgxEditorjsPluginsModule -->\n\nPluginCodeModule->NgxEditorjsPluginsModule\n\n\n\n\n\nPluginEmbedModule\n\nPluginEmbedModule\n\nNgxEditorjsPluginsModule -->\n\nPluginEmbedModule->NgxEditorjsPluginsModule\n\n\n\n\n\nPluginHeaderModule\n\nPluginHeaderModule\n\nNgxEditorjsPluginsModule -->\n\nPluginHeaderModule->NgxEditorjsPluginsModule\n\n\n\n\n\nPluginImageModule\n\nPluginImageModule\n\nNgxEditorjsPluginsModule -->\n\nPluginImageModule->NgxEditorjsPluginsModule\n\n\n\n\n\nPluginInlineCodeModule\n\nPluginInlineCodeModule\n\nNgxEditorjsPluginsModule -->\n\nPluginInlineCodeModule->NgxEditorjsPluginsModule\n\n\n\n\n\nPluginLinkModule\n\nPluginLinkModule\n\nNgxEditorjsPluginsModule -->\n\nPluginLinkModule->NgxEditorjsPluginsModule\n\n\n\n\n\nPluginListModule\n\nPluginListModule\n\nNgxEditorjsPluginsModule -->\n\nPluginListModule->NgxEditorjsPluginsModule\n\n\n\n\n\nPluginMarkerModule\n\nPluginMarkerModule\n\nNgxEditorjsPluginsModule -->\n\nPluginMarkerModule->NgxEditorjsPluginsModule\n\n\n\n\n\nPluginParagraphModule\n\nPluginParagraphModule\n\nNgxEditorjsPluginsModule -->\n\nPluginParagraphModule->NgxEditorjsPluginsModule\n\n\n\n\n\nPluginQuoteModule\n\nPluginQuoteModule\n\nNgxEditorjsPluginsModule -->\n\nPluginQuoteModule->NgxEditorjsPluginsModule\n\n\n\n\n\nPluginSimpleImageModule\n\nPluginSimpleImageModule\n\nNgxEditorjsPluginsModule -->\n\nPluginSimpleImageModule->NgxEditorjsPluginsModule\n\n\n\n\n\nPluginWarningModule\n\nPluginWarningModule\n\nNgxEditorjsPluginsModule -->\n\nPluginWarningModule->NgxEditorjsPluginsModule\n\n\n\n\n\nNgxEditorJSPluginServiceModule \n\nNgxEditorJSPluginServiceModule \n\nNgxEditorJSPluginServiceModule  -->\n\nNgxEditorjsPluginsModule->NgxEditorJSPluginServiceModule \n\n\n\n\n\nPluginCodeModule \n\nPluginCodeModule \n\nPluginCodeModule  -->\n\nNgxEditorjsPluginsModule->PluginCodeModule \n\n\n\n\n\nPluginEmbedModule \n\nPluginEmbedModule \n\nPluginEmbedModule  -->\n\nNgxEditorjsPluginsModule->PluginEmbedModule \n\n\n\n\n\nPluginHeaderModule \n\nPluginHeaderModule \n\nPluginHeaderModule  -->\n\nNgxEditorjsPluginsModule->PluginHeaderModule \n\n\n\n\n\nPluginImageModule \n\nPluginImageModule \n\nPluginImageModule  -->\n\nNgxEditorjsPluginsModule->PluginImageModule \n\n\n\n\n\nPluginInlineCodeModule \n\nPluginInlineCodeModule \n\nPluginInlineCodeModule  -->\n\nNgxEditorjsPluginsModule->PluginInlineCodeModule \n\n\n\n\n\nPluginLinkModule \n\nPluginLinkModule \n\nPluginLinkModule  -->\n\nNgxEditorjsPluginsModule->PluginLinkModule \n\n\n\n\n\nPluginListModule \n\nPluginListModule \n\nPluginListModule  -->\n\nNgxEditorjsPluginsModule->PluginListModule \n\n\n\n\n\nPluginMarkerModule \n\nPluginMarkerModule \n\nPluginMarkerModule  -->\n\nNgxEditorjsPluginsModule->PluginMarkerModule \n\n\n\n\n\nPluginParagraphModule \n\nPluginParagraphModule \n\nPluginParagraphModule  -->\n\nNgxEditorjsPluginsModule->PluginParagraphModule \n\n\n\n\n\nPluginQuoteModule \n\nPluginQuoteModule \n\nPluginQuoteModule  -->\n\nNgxEditorjsPluginsModule->PluginQuoteModule \n\n\n\n\n\nPluginSimpleImageModule \n\nPluginSimpleImageModule \n\nPluginSimpleImageModule  -->\n\nNgxEditorjsPluginsModule->PluginSimpleImageModule \n\n\n\n\n\nPluginWarningModule \n\nPluginWarningModule \n\nPluginWarningModule  -->\n\nNgxEditorjsPluginsModule->PluginWarningModule \n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            libs/ngx-editorjs/ngx-editorjs-plugins/src/lib/ngx-editorjs-plugins.module.ts\n        \n\n\n        \n            Description\n        \n        \n            The NgxEditorjsPluginsModule provides several additional modules\nthat provide a way to easily plug in block and inline tools for EditorJS.\nImporting NgxEditorjsPluginsModule will include all modules, while it\nis also possible to import each individual module as required.\n\n        \n\n\n        \n            \n                \n                    Imports\n                    \n                        \n                            NgxEditorJSPluginServiceModule\n                        \n                        \n                            PluginCodeModule\n                        \n                        \n                            PluginEmbedModule\n                        \n                        \n                            PluginHeaderModule\n                        \n                        \n                            PluginImageModule\n                        \n                        \n                            PluginInlineCodeModule\n                        \n                        \n                            PluginLinkModule\n                        \n                        \n                            PluginListModule\n                        \n                        \n                            PluginMarkerModule\n                        \n                        \n                            PluginParagraphModule\n                        \n                        \n                            PluginQuoteModule\n                        \n                        \n                            PluginSimpleImageModule\n                        \n                        \n                            PluginWarningModule\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            NgxEditorJSPluginServiceModule\n                        \n                        \n                            PluginCodeModule\n                        \n                        \n                            PluginEmbedModule\n                        \n                        \n                            PluginHeaderModule\n                        \n                        \n                            PluginImageModule\n                        \n                        \n                            PluginInlineCodeModule\n                        \n                        \n                            PluginLinkModule\n                        \n                        \n                            PluginListModule\n                        \n                        \n                            PluginMarkerModule\n                        \n                        \n                            PluginParagraphModule\n                        \n                        \n                            PluginQuoteModule\n                        \n                        \n                            PluginSimpleImageModule\n                        \n                        \n                            PluginWarningModule\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\nimport { PluginCodeModule } from './plugins/code/code.module';\nimport { PluginEmbedModule } from './plugins/embed/embed.module';\nimport { PluginHeaderModule } from './plugins/header/header.module';\nimport { PluginImageModule } from './plugins/image/image.module';\nimport { PluginInlineCodeModule } from './plugins/inline-code/inline-code.module';\nimport { PluginLinkModule } from './plugins/link/link.module';\nimport { PluginListModule } from './plugins/list/list.module';\nimport { PluginMarkerModule } from './plugins/marker/marker.module';\nimport { PluginParagraphModule } from './plugins/paragraph/paragraph.module';\nimport { PluginQuoteModule } from './plugins/quote/quote.module';\nimport { PluginSimpleImageModule } from './plugins/simple-image/simple-image.module';\nimport { PluginWarningModule } from './plugins/warning/warning.module';\nimport { NgxEditorJSPluginServiceModule } from './services/plugin-service.module';\n\n/**\n * The `NgxEditorjsPluginsModule` provides several additional modules\n * that provide a way to easily plug in block and inline tools for EditorJS.\n *\n * Importing `NgxEditorjsPluginsModule` will include all modules, while it\n * is also possible to import each individual module as required.\n */\n@NgModule({\n  imports: [\n    CommonModule,\n    NgxEditorJSPluginServiceModule,\n    PluginCodeModule,\n    PluginHeaderModule,\n    PluginImageModule,\n    PluginLinkModule,\n    PluginListModule,\n    PluginMarkerModule,\n    PluginParagraphModule,\n    PluginSimpleImageModule,\n    PluginInlineCodeModule,\n    PluginWarningModule,\n    PluginQuoteModule,\n    PluginEmbedModule\n  ],\n  exports: [\n    NgxEditorJSPluginServiceModule,\n    PluginCodeModule,\n    PluginHeaderModule,\n    PluginImageModule,\n    PluginLinkModule,\n    PluginListModule,\n    PluginMarkerModule,\n    PluginParagraphModule,\n    PluginSimpleImageModule,\n    PluginInlineCodeModule,\n    PluginWarningModule,\n    PluginQuoteModule,\n    PluginEmbedModule\n  ]\n})\nexport class NgxEditorjsPluginsModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/NgxTinynodesComponentsModule.html":{"url":"modules/NgxTinynodesComponentsModule.html","title":"module - NgxTinynodesComponentsModule","body":"\n                   \n\n\n\n\n    Modules\n    NgxTinynodesComponentsModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_NgxTinynodesComponentsModule\n\n\n\ncluster_NgxTinynodesComponentsModule_imports\n\n\n\ncluster_NgxTinynodesComponentsModule_exports\n\n\n\n\nNgxTinynodesMatJsonOutputModule\n\nNgxTinynodesMatJsonOutputModule\n\n\n\nNgxTinynodesComponentsModule\n\nNgxTinynodesComponentsModule\n\nNgxTinynodesComponentsModule -->\n\nNgxTinynodesMatJsonOutputModule->NgxTinynodesComponentsModule\n\n\n\n\n\nNgxTinynodesMatTagInputModule\n\nNgxTinynodesMatTagInputModule\n\nNgxTinynodesComponentsModule -->\n\nNgxTinynodesMatTagInputModule->NgxTinynodesComponentsModule\n\n\n\n\n\nNgxTinynodesMatJsonOutputModule \n\nNgxTinynodesMatJsonOutputModule \n\nNgxTinynodesMatJsonOutputModule  -->\n\nNgxTinynodesComponentsModule->NgxTinynodesMatJsonOutputModule \n\n\n\n\n\nNgxTinynodesMatTagInputModule \n\nNgxTinynodesMatTagInputModule \n\nNgxTinynodesMatTagInputModule  -->\n\nNgxTinynodesComponentsModule->NgxTinynodesMatTagInputModule \n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            libs/ngx-tinynodes-components/src/lib/ngx-tinynodes-components.module.ts\n        \n\n\n\n\n        \n            \n                \n                    Imports\n                    \n                        \n                            NgxTinynodesMatJsonOutputModule\n                        \n                        \n                            NgxTinynodesMatTagInputModule\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            NgxTinynodesMatJsonOutputModule\n                        \n                        \n                            NgxTinynodesMatTagInputModule\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { NgModule } from '@angular/core';\nimport { NgxTinynodesMatTagInputModule } from './components/mat-tag-input/mat-tag-input.module';\nimport { NgxTinynodesMatJsonOutputModule } from './components/mat-json-output/mat-json-output.module';\n\n@NgModule({\n  imports: [ NgxTinynodesMatTagInputModule, NgxTinynodesMatJsonOutputModule ],\n  exports: [ NgxTinynodesMatTagInputModule, NgxTinynodesMatJsonOutputModule ]\n})\nexport class NgxTinynodesComponentsModule {\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/NgxTinynodesMatFieldComponent.html":{"url":"interfaces/NgxTinynodesMatFieldComponent.html","title":"interface - NgxTinynodesMatFieldComponent","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  NgxTinynodesMatFieldComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            libs/ngx-tinynodes-components/src/lib/types/components.ts\n        \n\n\n            \n                Extends\n            \n            \n                        ControlValueAccessor\n            \n\n\n\n\n    \n\n\n    \n        import { ControlValueAccessor } from '@angular/forms';\nimport { MatFormFieldControl } from '@angular/material';\nimport { AfterContentInit, DoCheck, OnDestroy, OnInit } from '@angular/core';\n\nexport interface NgxTinynodesMatFieldComponent extends ControlValueAccessor,\n  MatFormFieldControl,\n  OnInit,\n  OnDestroy,\n  DoCheck,\n  AfterContentInit {\n}\n\n    \n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/NgxTinynodesMatJsonOutputComponent.html":{"url":"components/NgxTinynodesMatJsonOutputComponent.html","title":"component - NgxTinynodesMatJsonOutputComponent","body":"\n                   \n\n\n\n\n\n  Components\n  NgxTinynodesMatJsonOutputComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    libs/ngx-tinynodes-components/src/lib/components/mat-json-output/mat-json-output.component.ts\n\n\n\n\n    \n        Implements\n    \n    \n                    OnChanges\n    \n\n\n\n    Metadata\n    \n        \n\n            \n                changeDetection\n                ChangeDetectionStrategy.OnPush\n            \n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                ngx-tinynodes-mat-json-output\n            \n\n\n\n\n            \n                templateUrl\n                mat-json-output.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngOnChanges\n                            \n                            \n                                    Public\n                                toggleExpand\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                expand\n                            \n                            \n                                json\n                            \n                        \n                    \n                \n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(cd: ChangeDetectorRef)\n                    \n                \n                        \n                            \n                                Defined in libs/ngx-tinynodes-components/src/lib/components/mat-json-output/mat-json-output.component.ts:14\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        cd\n                                                  \n                                                        \n                                                                        ChangeDetectorRef\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        expand\n                    \n                \n                \n                    \n                        Default value : true\n                    \n                \n                        \n                            \n                                    Defined in libs/ngx-tinynodes-components/src/lib/components/mat-json-output/mat-json-output.component.ts:14\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        json\n                    \n                \n                \n                    \n                        Type :         any\n\n                    \n                \n                        \n                            \n                                    Defined in libs/ngx-tinynodes-components/src/lib/components/mat-json-output/mat-json-output.component.ts:11\n                            \n                        \n            \n        \n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngOnChanges\n                        \n                        \n                    \n                \n            \n            \n                \nngOnChanges()\n                \n            \n\n\n            \n                \n                    Defined in libs/ngx-tinynodes-components/src/lib/components/mat-json-output/mat-json-output.component.ts:23\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            toggleExpand\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    toggleExpand()\n                \n            \n\n\n            \n                \n                    Defined in libs/ngx-tinynodes-components/src/lib/components/mat-json-output/mat-json-output.component.ts:19\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n\n\n\n\n    \n        import { ChangeDetectionStrategy, ChangeDetectorRef, Component, Input, OnChanges } from '@angular/core';\n\n@Component({\n  selector: 'ngx-tinynodes-mat-json-output',\n  templateUrl: 'mat-json-output.component.html',\n  changeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class NgxTinynodesMatJsonOutputComponent implements OnChanges {\n\n  @Input()\n  json: any;\n\n  @Input()\n  expand = true;\n\n  constructor(private readonly cd: ChangeDetectorRef) {\n  }\n\n  public toggleExpand() {\n    this.expand = !this.expand;\n  }\n\n  ngOnChanges(): void {\n    this.cd.markForCheck();\n  }\n}\n\n    \n\n    \n        \n  \n    Output\n    Data from the EditorJS instance\n  \n  \n    {{expand ? 'Collapse JSON' : 'Expand JSON'}}\n  \n  \n    \n  \n\n\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '      Output    Data from the EditorJS instance        {{expand ? \\'Collapse JSON\\' : \\'Expand JSON\\'}}          '\n    var COMPONENTS = [{'name': 'NgxEditorJSComponent', 'selector': 'ngx-editorjs'},{'name': 'NgxEditorJSDemoHomeComponent', 'selector': 'ngx-editorjs-demo-home'},{'name': 'NgxEditorJSMatFieldComponent', 'selector': 'ngx-editorjs-mat-field'},{'name': 'NgxTinynodesMaterialFormFieldDemoComponent', 'selector': 'ngx-tinynodes-mat-form-field-demo'},{'name': 'NgxTinynodesMatJsonOutputComponent', 'selector': 'ngx-tinynodes-mat-json-output'},{'name': 'NgxTinynodesMatTagInputComponent', 'selector': 'ngx-tinynodes-mat-tag-input'},{'name': 'PageContainerComponent', 'selector': 'ngx-page-container'}];\n    var DIRECTIVES = [{'name': 'NgxEditorJSDirective', 'selector': '[ngxEditorJS]'}];\n    var ACTUAL_COMPONENT = {'name': 'NgxTinynodesMatJsonOutputComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/NgxTinynodesMatJsonOutputModule.html":{"url":"modules/NgxTinynodesMatJsonOutputModule.html","title":"module - NgxTinynodesMatJsonOutputModule","body":"\n                   \n\n\n\n\n    Modules\n    NgxTinynodesMatJsonOutputModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_NgxTinynodesMatJsonOutputModule\n\n\n\ncluster_NgxTinynodesMatJsonOutputModule_declarations\n\n\n\ncluster_NgxTinynodesMatJsonOutputModule_exports\n\n\n\n\nNgxTinynodesMatJsonOutputComponent\n\nNgxTinynodesMatJsonOutputComponent\n\n\n\nNgxTinynodesMatJsonOutputModule\n\nNgxTinynodesMatJsonOutputModule\n\nNgxTinynodesMatJsonOutputModule -->\n\nNgxTinynodesMatJsonOutputComponent->NgxTinynodesMatJsonOutputModule\n\n\n\n\n\nNgxTinynodesMatJsonOutputComponent \n\nNgxTinynodesMatJsonOutputComponent \n\nNgxTinynodesMatJsonOutputComponent  -->\n\nNgxTinynodesMatJsonOutputModule->NgxTinynodesMatJsonOutputComponent \n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            libs/ngx-tinynodes-components/src/lib/components/mat-json-output/mat-json-output.module.ts\n        \n\n\n\n\n        \n            \n                \n                    Declarations\n                    \n                        \n                            NgxTinynodesMatJsonOutputComponent\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            NgxTinynodesMatJsonOutputComponent\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { NgModule } from '@angular/core';\nimport { NgxTinynodesMatJsonOutputComponent } from './mat-json-output.component';\nimport { CommonModule } from '@angular/common';\nimport { MatButtonModule, MatCardModule } from '@angular/material';\nimport { NgxJsonViewerModule } from 'ngx-json-viewer';\n\n@NgModule({\n  imports: [CommonModule, MatCardModule, MatButtonModule, NgxJsonViewerModule],\n  declarations: [ NgxTinynodesMatJsonOutputComponent ],\n  exports: [ NgxTinynodesMatJsonOutputComponent ]\n})\nexport class NgxTinynodesMatJsonOutputModule {\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/NgxTinynodesMatTagInputModule.html":{"url":"modules/NgxTinynodesMatTagInputModule.html","title":"module - NgxTinynodesMatTagInputModule","body":"\n                   \n\n\n\n\n    Modules\n    NgxTinynodesMatTagInputModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_NgxTinynodesMatTagInputModule\n\n\n\ncluster_NgxTinynodesMatTagInputModule_declarations\n\n\n\ncluster_NgxTinynodesMatTagInputModule_NgxTinynodesMatTagInputComponent_providers\n\n\n\ncluster_NgxTinynodesMatTagInputModule_exports\n\n\n\n\nNgxTinynodesMatTagInputComponent\n\nNgxTinynodesMatTagInputComponent\n\n\n\nNgxTinynodesMatTagInputModule\n\nNgxTinynodesMatTagInputModule\n\nNgxTinynodesMatTagInputModule -->\n\nNgxTinynodesMatTagInputComponent->NgxTinynodesMatTagInputModule\n\n\n\n\n\nNgxTinynodesMatTagInputComponent \n\nNgxTinynodesMatTagInputComponent \n\nNgxTinynodesMatTagInputComponent  -->\n\nNgxTinynodesMatTagInputModule->NgxTinynodesMatTagInputComponent \n\n\n\n\n\nTAG_COMPONENT_VALUE_ACCESSOR\n\nTAG_COMPONENT_VALUE_ACCESSOR\n\nNgxTinynodesMatTagInputComponent -->\n\nTAG_COMPONENT_VALUE_ACCESSOR->NgxTinynodesMatTagInputComponent\n\n\n\n\n\nTAG_COMPONENT_FIELD_CONTROL\n\nTAG_COMPONENT_FIELD_CONTROL\n\nNgxTinynodesMatTagInputComponent -->\n\nTAG_COMPONENT_FIELD_CONTROL->NgxTinynodesMatTagInputComponent\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            libs/ngx-tinynodes-components/src/lib/components/mat-tag-input/mat-tag-input.module.ts\n        \n\n\n\n\n        \n            \n                \n                    Declarations\n                    \n                        \n                            NgxTinynodesMatTagInputComponent\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            NgxTinynodesMatTagInputComponent\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { NgModule } from '@angular/core';\nimport { NgxTinynodesMatTagInputComponent } from './mat-tag-input.component';\nimport { MatChipsModule, MatIconModule } from '@angular/material';\nimport { FormsModule } from '@angular/forms';\nimport { CommonModule } from '@angular/common';\n\n@NgModule({\n  imports: [FormsModule,CommonModule, MatChipsModule, MatIconModule],\n  declarations: [ NgxTinynodesMatTagInputComponent ],\n  exports: [ NgxTinynodesMatTagInputComponent ]\n})\nexport class NgxTinynodesMatTagInputModule {\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/NgxTinynodesMaterialFormFieldDemo.html":{"url":"modules/NgxTinynodesMaterialFormFieldDemo.html","title":"module - NgxTinynodesMaterialFormFieldDemo","body":"\n                   \n\n\n\n\n    Modules\n    NgxTinynodesMaterialFormFieldDemo\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_NgxTinynodesMaterialFormFieldDemo\n\n\n\ncluster_NgxTinynodesMaterialFormFieldDemo_declarations\n\n\n\ncluster_NgxTinynodesMaterialFormFieldDemo_imports\n\n\n\n\nNgxTinynodesMaterialFormFieldDemoComponent\n\nNgxTinynodesMaterialFormFieldDemoComponent\n\n\n\nNgxTinynodesMaterialFormFieldDemo\n\nNgxTinynodesMaterialFormFieldDemo\n\nNgxTinynodesMaterialFormFieldDemo -->\n\nNgxTinynodesMaterialFormFieldDemoComponent->NgxTinynodesMaterialFormFieldDemo\n\n\n\n\n\nNgxEditorJSDemoMaterialModule\n\nNgxEditorJSDemoMaterialModule\n\nNgxTinynodesMaterialFormFieldDemo -->\n\nNgxEditorJSDemoMaterialModule->NgxTinynodesMaterialFormFieldDemo\n\n\n\n\n\nNgxEditorJSModule\n\nNgxEditorJSModule\n\nNgxTinynodesMaterialFormFieldDemo -->\n\nNgxEditorJSModule->NgxTinynodesMaterialFormFieldDemo\n\n\n\n\n\nPageStoreModule\n\nPageStoreModule\n\nNgxTinynodesMaterialFormFieldDemo -->\n\nPageStoreModule->NgxTinynodesMaterialFormFieldDemo\n\n\n\n\n\nPluginCodeModule\n\nPluginCodeModule\n\nNgxTinynodesMaterialFormFieldDemo -->\n\nPluginCodeModule->NgxTinynodesMaterialFormFieldDemo\n\n\n\n\n\nPluginHeaderModule\n\nPluginHeaderModule\n\nNgxTinynodesMaterialFormFieldDemo -->\n\nPluginHeaderModule->NgxTinynodesMaterialFormFieldDemo\n\n\n\n\n\nPluginLinkModule\n\nPluginLinkModule\n\nNgxTinynodesMaterialFormFieldDemo -->\n\nPluginLinkModule->NgxTinynodesMaterialFormFieldDemo\n\n\n\n\n\nPluginListModule\n\nPluginListModule\n\nNgxTinynodesMaterialFormFieldDemo -->\n\nPluginListModule->NgxTinynodesMaterialFormFieldDemo\n\n\n\n\n\nPluginMarkerModule\n\nPluginMarkerModule\n\nNgxTinynodesMaterialFormFieldDemo -->\n\nPluginMarkerModule->NgxTinynodesMaterialFormFieldDemo\n\n\n\n\n\nPluginParagraphModule\n\nPluginParagraphModule\n\nNgxTinynodesMaterialFormFieldDemo -->\n\nPluginParagraphModule->NgxTinynodesMaterialFormFieldDemo\n\n\n\n\n\nPluginSimpleImageModule\n\nPluginSimpleImageModule\n\nNgxTinynodesMaterialFormFieldDemo -->\n\nPluginSimpleImageModule->NgxTinynodesMaterialFormFieldDemo\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            libs/ngx-editorjs/ngx-editorjs-demo/src/lib/demos/material-form-field/material-form-field.module.ts\n        \n\n\n\n\n        \n            \n                \n                    Declarations\n                    \n                        \n                            NgxTinynodesMaterialFormFieldDemoComponent\n                        \n                    \n                \n                \n                    EntryComponents\n                    \n                        \n                            NgxTinynodesMaterialFormFieldDemoComponent\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            NgxEditorJSDemoMaterialModule\n                        \n                        \n                            NgxEditorJSModule\n                        \n                        \n                            PageStoreModule\n                        \n                        \n                            PluginCodeModule\n                        \n                        \n                            PluginHeaderModule\n                        \n                        \n                            PluginLinkModule\n                        \n                        \n                            PluginListModule\n                        \n                        \n                            PluginMarkerModule\n                        \n                        \n                            PluginParagraphModule\n                        \n                        \n                            PluginSimpleImageModule\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { NgModule } from '@angular/core';\nimport { NgxTinynodesMaterialFormFieldDemoComponent } from './containers/material-form-field/material-form-field.component';\nimport { RouterModule, Routes } from '@angular/router';\nimport { NgxEditorJSDemoMaterialModule } from './ngx-editorjs-demo.material.module';\nimport { CommonModule } from '@angular/common';\nimport { NgxTinynodesCoreModule } from '@tinynodes/ngx-tinynodes-core';\nimport { ReactiveFormsModule } from '@angular/forms';\nimport { PageStoreModule } from '../../store/pages/pages.module';\nimport { NgxEditorJSModule } from '@tinynodes/ngx-editorjs';\nimport {\n  PluginCodeModule,\n  PluginHeaderModule,\n  PluginLinkModule,\n  PluginListModule,\n  PluginMarkerModule,\n  PluginParagraphModule,\n  PluginSimpleImageModule\n} from '@tinynodes/ngx-editorjs-plugins';\nimport { NgxJsonViewerModule } from 'ngx-json-viewer';\nimport { NgxTinynodesComponentsModule } from '@tinynodes/ngx-tinynodes-components';\n\nconst routes: Routes = [\n  {\n    path: '',\n    component: NgxTinynodesMaterialFormFieldDemoComponent\n  }\n];\n\n@NgModule({\n  imports: [\n    CommonModule,\n    NgxTinynodesComponentsModule,\n    RouterModule.forChild(routes),\n    ReactiveFormsModule,\n    NgxJsonViewerModule,\n    PageStoreModule,\n    NgxEditorJSModule,\n    PluginHeaderModule,\n    PluginParagraphModule,\n    PluginListModule,\n    PluginCodeModule,\n    PluginSimpleImageModule,\n    PluginLinkModule,\n    PluginMarkerModule,\n    NgxTinynodesCoreModule,\n    NgxEditorJSDemoMaterialModule\n  ],\n  declarations: [ NgxTinynodesMaterialFormFieldDemoComponent ],\n  entryComponents: [ NgxTinynodesMaterialFormFieldDemoComponent ]\n})\nexport class NgxTinynodesMaterialFormFieldDemo {\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/NgxTinynodesMaterialFormFieldDemoComponent.html":{"url":"components/NgxTinynodesMaterialFormFieldDemoComponent.html","title":"component - NgxTinynodesMaterialFormFieldDemoComponent","body":"\n                   \n\n\n\n\n\n  Components\n  NgxTinynodesMaterialFormFieldDemoComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    libs/ngx-editorjs/ngx-editorjs-demo/src/lib/demos/material-form-field/containers/material-form-field/material-form-field.component.ts\n\n\n    \n        Description\n    \n    \n        The Page Container component provides the main routable page for loading\nthe ngx-editorjs-demo\n\n    \n\n\n    \n        Implements\n    \n    \n                    AfterContentInit\n    \n\n\n\n    Metadata\n    \n        \n\n            \n                changeDetection\n                ChangeDetectionStrategy.OnPush\n            \n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                ngx-tinynodes-mat-form-field-demo\n            \n\n            \n                styleUrls\n                material-form-field.component.scss\n            \n\n\n\n            \n                templateUrl\n                material-form-field.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                editorForm\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                clear\n                            \n                            \n                                    Public\n                                disableAutosave\n                            \n                            \n                                    Public\n                                enableAutosave\n                            \n                            \n                                ngAfterContentInit\n                            \n                            \n                                    Public\n                                reset\n                            \n                            \n                                    Public\n                                save\n                            \n                            \n                                    Public\n                                update\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                holder\n                            \n                            \n                                title\n                            \n                        \n                    \n                \n\n\n\n\n                    \n                        \n                            Accessors\n                        \n                    \n                    \n                        \n                            \n                                \n                                    autosave\n                                \n                                \n                                    menu\n                                \n                            \n                        \n                    \n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(pagesService: PagesService, app: AppService, editorService: NgxEditorJSService, cd: ChangeDetectorRef, fb: FormBuilder)\n                    \n                \n                        \n                            \n                                Defined in libs/ngx-editorjs/ngx-editorjs-demo/src/lib/demos/material-form-field/containers/material-form-field/material-form-field.component.ts:51\n                            \n                        \n\n                \n                    \n                            The constructor sets up the blocks to the initial demo data\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        pagesService\n                                                  \n                                                        \n                                                                        PagesService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                The pages service\n\n                                                        \n                                                \n                                                \n                                                        app\n                                                  \n                                                        \n                                                                    AppService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                The application service\n\n                                                        \n                                                \n                                                \n                                                        editorService\n                                                  \n                                                        \n                                                                        NgxEditorJSService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                The Editor service\n\n                                                        \n                                                \n                                                \n                                                        cd\n                                                  \n                                                        \n                                                                        ChangeDetectorRef\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                The change detection ref\n\n                                                        \n                                                \n                                                \n                                                        fb\n                                                  \n                                                        \n                                                                        FormBuilder\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                The form builder\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        holder\n                    \n                \n                \n                    \n                        Default value : 'ngx-editorjs-demo'\n                    \n                \n                        \n                            \n                                    Defined in libs/ngx-editorjs/ngx-editorjs-demo/src/lib/demos/material-form-field/containers/material-form-field/material-form-field.component.ts:30\n                            \n                        \n                \n                    \n                        The holder ID for this demo\n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        title\n                    \n                \n                \n                    \n                        Default value : 'ngx-editorjs Material Field'\n                    \n                \n                        \n                            \n                                    Defined in libs/ngx-editorjs/ngx-editorjs-demo/src/lib/demos/material-form-field/containers/material-form-field/material-form-field.component.ts:25\n                            \n                        \n                \n                    \n                        Title of the page\n\n                    \n                \n            \n        \n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            clear\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    clear(skipSave)\n                \n            \n\n\n            \n                \n                    Defined in libs/ngx-editorjs/ngx-editorjs-demo/src/lib/demos/material-form-field/containers/material-form-field/material-form-field.component.ts:125\n                \n            \n\n\n            \n                \n                    Clear the editor\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                    Default value\n                                    Description\n                                \n                            \n                            \n                                \n                                    skipSave\n\n                                    \n                                        No\n                                    \n\n                                    \n                                        false\n                                    \n\n                                    \n                                        Optional parameter, if set to true the save method won't be called\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            disableAutosave\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    disableAutosave()\n                \n            \n\n\n            \n                \n                    Defined in libs/ngx-editorjs/ngx-editorjs-demo/src/lib/demos/material-form-field/containers/material-form-field/material-form-field.component.ts:109\n                \n            \n\n\n            \n                \n                    Disable autosave\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            enableAutosave\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    enableAutosave(autosaveTime: number)\n                \n            \n\n\n            \n                \n                    Defined in libs/ngx-editorjs/ngx-editorjs-demo/src/lib/demos/material-form-field/containers/material-form-field/material-form-field.component.ts:102\n                \n            \n\n\n            \n                \n                    Enable autosave, set the value from the autosaveTime\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    autosaveTime\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        Time to set for autosave\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngAfterContentInit\n                        \n                        \n                    \n                \n            \n            \n                \nngAfterContentInit()\n                \n            \n\n\n            \n                \n                    Defined in libs/ngx-editorjs/ngx-editorjs-demo/src/lib/demos/material-form-field/containers/material-form-field/material-form-field.component.ts:172\n                \n            \n\n\n            \n                \n                    After the content has init override the blocks with blocks from the service\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            reset\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    reset()\n                \n            \n\n\n            \n                \n                    Defined in libs/ngx-editorjs/ngx-editorjs-demo/src/lib/demos/material-form-field/containers/material-form-field/material-form-field.component.ts:155\n                \n            \n\n\n            \n                \n                    Reset the editor with demo data\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            save\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    save()\n                \n            \n\n\n            \n                \n                    Defined in libs/ngx-editorjs/ngx-editorjs-demo/src/lib/demos/material-form-field/containers/material-form-field/material-form-field.component.ts:116\n                \n            \n\n\n            \n                \n                    Call the editor save method\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            update\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    update(data: OutputData, skipSave)\n                \n            \n\n\n            \n                \n                    Defined in libs/ngx-editorjs/ngx-editorjs-demo/src/lib/demos/material-form-field/containers/material-form-field/material-form-field.component.ts:144\n                \n            \n\n\n            \n                \n                    Update the component\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Default value\n                                    Description\n                                \n                            \n                            \n                                \n                                    data\n                                    \n                                            OutputData\n                                    \n\n                                    \n                                        No\n                                    \n\n                                    \n                                    \n\n                                    \n                                        The data to render in the update\n\n                                    \n                                \n                                \n                                    skipSave\n                                    \n                                    \n\n                                    \n                                        No\n                                    \n\n                                    \n                                        false\n                                    \n\n                                    \n                                        Optional parameter, if set to true the save method won't be called\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            editorForm\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : this.fb.group({\n    pageName: [ '' ],\n    pageTags: new FormControl([]),\n    pageEditor: new FormControl([])\n  })\n                        \n                    \n                        \n                            \n                                    Defined in libs/ngx-editorjs/ngx-editorjs-demo/src/lib/demos/material-form-field/containers/material-form-field/material-form-field.component.ts:34\n                            \n                        \n\n                \n                    \n                        Editor form group\n\n                    \n                \n\n            \n        \n\n\n    \n    \n        Accessors\n    \n        \n            \n                \n                    \n                        \n                        autosave\n                    \n                \n\n                \n                    \n                        getautosave()\n                    \n                \n                            \n                                \n                                    Defined in libs/ngx-editorjs/ngx-editorjs-demo/src/lib/demos/material-form-field/containers/material-form-field/material-form-field.component.ts:86\n                                \n                            \n                    \n                        \n                                Get the current autosave state of the application\n\n\n                        \n                    \n\n            \n        \n        \n            \n                \n                    \n                        \n                        menu\n                    \n                \n\n                \n                    \n                        getmenu()\n                    \n                \n                            \n                                \n                                    Defined in libs/ngx-editorjs/ngx-editorjs-demo/src/lib/demos/material-form-field/containers/material-form-field/material-form-field.component.ts:93\n                                \n                            \n                    \n                        \n                                Get the page links\n\n\n                        \n                    \n\n            \n        \n\n\n\n\n    \n        import { AfterContentInit, ChangeDetectionStrategy, ChangeDetectorRef, Component, Input } from '@angular/core';\nimport { FormBuilder, FormControl } from '@angular/forms';\nimport { Block, NgxEditorJSService } from '@tinynodes/ngx-editorjs';\nimport { AppService, MenuGroup, NgxEditorJSDemo } from '@tinynodes/ngx-tinynodes-core';\nimport { BehaviorSubject, Subject } from 'rxjs';\nimport { distinctUntilChanged, filter, pluck, switchMap, take, takeUntil } from 'rxjs/operators';\nimport { PagesService } from '../../../../store/pages/pages.service';\nimport { OutputData } from '@editorjs/editorjs';\n\n/**\n * The Page Container component provides the main routable page for loading\n * the `ngx-editorjs-demo`\n */\n@Component({\n  selector: 'ngx-tinynodes-mat-form-field-demo',\n  templateUrl: 'material-form-field.component.html',\n  styleUrls: [ 'material-form-field.component.scss' ],\n  changeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class NgxTinynodesMaterialFormFieldDemoComponent implements AfterContentInit {\n  /**\n   * Title of the page\n   */\n  @Input()\n  public title = 'ngx-editorjs Material Field';\n  /**\n   * The holder ID for this demo\n   */\n  @Input()\n  public holder = 'ngx-editorjs-demo';\n  /**\n   * Editor form group\n   */\n  public editorForm = this.fb.group({\n    pageName: [ '' ],\n    pageTags: new FormControl([]),\n    pageEditor: new FormControl([])\n  });\n  /**\n   * Internal onDestroy$ subject\n   */\n  private onDestroy$ = new Subject();\n\n  /**\n   * Menu state for the component\n   */\n  private menu$ = new BehaviorSubject(undefined);\n  /**\n   * Autosave state\n   */\n  private autoSave$ = new BehaviorSubject(0);\n\n  /**\n   * The constructor sets up the blocks to the initial demo data\n   * @param pagesService The pages service\n   * @param app The application service\n   * @param editorService The Editor service\n   * @param cd The change detection ref\n   * @param fb The form builder\n   */\n  constructor(\n    private readonly pagesService: PagesService,\n    private app: AppService,\n    private readonly editorService: NgxEditorJSService,\n    private readonly cd: ChangeDetectorRef,\n    private readonly fb: FormBuilder\n  ) {\n    this.editorService\n      .lastChange({ holder: this.holder })\n      .pipe(\n        takeUntil(this.onDestroy$)\n      )\n      .subscribe(hasChanged => {\n        if (hasChanged && hasChanged.blocks) {\n          this.editorForm.patchValue({\n            pageEditor: hasChanged.blocks\n          });\n          this.cd.markForCheck();\n        }\n      });\n  }\n\n  /**\n   * Get the current autosave state of the application\n   */\n  public get autosave() {\n    return this.autoSave$.asObservable();\n  }\n\n  /**\n   * Get the page links\n   */\n  public get menu() {\n    return this.menu$;\n  }\n\n\n  /**\n   * Enable autosave, set the value from the autosaveTime\n   * @param autosaveTime Time to set for autosave\n   */\n  public enableAutosave(autosaveTime: number) {\n    this.autoSave$.next(autosaveTime);\n  }\n\n  /**\n   * Disable autosave\n   */\n  public disableAutosave() {\n    this.autoSave$.next(0);\n  }\n\n  /**\n   * Call the editor save method\n   */\n  public save() {\n    this.editorService.save({ holder: this.holder }).subscribe();\n    this.cd.markForCheck();\n  }\n\n  /**\n   * Clear the editor\n   * @param skipSave Optional parameter, if set to true the save method won't be called\n   */\n  public clear(skipSave = false) {\n    this.editorForm.reset({\n      pageName: '',\n      pageTags: [],\n    });\n\n    this.editorService\n      .clear({ holder: this.holder, skipSave })\n      .pipe(take(1))\n      .subscribe();\n\n    this.cd.markForCheck();\n  }\n\n  /**\n   * Update the component\n   * @param data The data to render in the update\n   * @param skipSave Optional parameter, if set to true the save method won't be called\n   */\n  public update(data: OutputData, skipSave = false) {\n    this.editorService\n      .update({ holder: this.holder, data, skipSave })\n      .pipe(take(1))\n      .subscribe();\n    this.cd.markForCheck();\n  }\n\n  /**\n   * Reset the editor with demo data\n   */\n  public reset() {\n    this.app\n      .getDemoData('material-form-field-demo')\n      .pipe(take(1))\n      .subscribe(data => {\n        this.menu$.next(data.links);\n        this.editorForm.patchValue({\n          pageName: 'A test page for the Material EditorJS Component',\n          pageTags: ['Angular', 'Material', 'EditorJS', 'TypeScript', 'Open Source']\n        })\n        this.update({ time: Date.now(), blocks: data.blocks });\n      });\n  }\n\n  /**\n   * After the content has init override the blocks with blocks from the service\n   */\n  ngAfterContentInit() {\n    this.reset();\n  }\n}\n\n    \n\n    \n        \n  \n    \n      @tinynodes/ngx-editor Material Field Demo\n      A single page demo of the EditorJS Material Field component\n    \n\n    \n      \n    \n\n    \n      Save\n      Clear\n      Reset\n      \n        Enable Editor Autosave\n      \n       0\" (click)=\"disableAutosave()\">Disable\n        Editor Autosave\n      \n\n\n      \n        Autosave Time\n        \n        seconds\n         0\">\n          EditorJS Autosave is enabled, now when you focus on the component the reactive form value will be updated -\n          You still need to call\n          save to save all the form data.\n        \n      \n    \n    \n      \n        \n          Page Name\n          \n          Enter the name for this page\n        \n        \n          Page Tags\n          \n        \n        \n          Content Editor for {{ editorForm.value.pageName || 'Page Name' }}\n          Click on the editor to active it\n          \n        \n      \n    \n    \n      \n    \n  \n\n\n\n  \n    Below is an instance of an {{ title }} EditorJS Material component. Click on the area and the block\n    tool will appear, or you can just start typing a paragraph.\n  \n  \n    The default block is a &lt;p> paragraph, you can also add header &lt;h1> - &lt;h6> blocks,\n    list with &lt;ol> / &lt;li> and &lt;code> blocks.\n  \n\n  \n    You can also paste in an &lt;img> url into the editor and it will start the SimpleImage\n    plugin which provides\n    an &lt;img> tag pointing to the image, and with some additional controls.\n  \n  \n    When saving check the output panel below to see the data results. The save, clear and reset buttons work on\n    the entire form.  The Autosave feature enables the `EditorJS` instance to update the form value on any changes  It also updates\n    on a regular basis to ensure the content is in the form. With autosave off you need to call save on the form to get the value.\n  \n\n\n    \n\n    \n                \n                    material-form-field.component.scss\n                \n                :host {\n  width: 100%;\n  height: 100vh;\n}\n\n.output-card {\n  height: 100vh;\n  flex: 1;\n  width: 100%;\n  overflow: scroll;\n}\n\n.form-content form {\n  display: flex;\n  flex-direction: column;\n}\n\n.form-content > * {\n  width: 100%;\n}\n\n.mat-form-field {\n  margin-bottom: 15px;\n}\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '            @tinynodes/ngx-editor Material Field Demo      A single page demo of the EditorJS Material Field component                            Save      Clear      Reset              Enable Editor Autosave             0\" (click)=\"disableAutosave()\">Disable        Editor Autosave                    Autosave Time                seconds         0\">          EditorJS Autosave is enabled, now when you focus on the component the reactive form value will be updated -          You still need to call          save to save all the form data.                                              Page Name                    Enter the name for this page                          Page Tags                                    Content Editor for {{ editorForm.value.pageName || \\'Page Name\\' }}          Click on the editor to active it                                                  Below is an instance of an {{ title }} EditorJS Material component. Click on the area and the block    tool will appear, or you can just start typing a paragraph.        The default block is a  paragraph, you can also add header  -  blocks,    list with  /  and  blocks.        You can also paste in an  url into the editor and it will start the SimpleImage    plugin which provides    an  tag pointing to the image, and with some additional controls.        When saving check the output panel below to see the data results. The save, clear and reset buttons work on    the entire form.  The Autosave feature enables the `EditorJS` instance to update the form value on any changes  It also updates    on a regular basis to ensure the content is in the form. With autosave off you need to call save on the form to get the value.  '\n    var COMPONENTS = [{'name': 'NgxEditorJSComponent', 'selector': 'ngx-editorjs'},{'name': 'NgxEditorJSDemoHomeComponent', 'selector': 'ngx-editorjs-demo-home'},{'name': 'NgxEditorJSMatFieldComponent', 'selector': 'ngx-editorjs-mat-field'},{'name': 'NgxTinynodesMaterialFormFieldDemoComponent', 'selector': 'ngx-tinynodes-mat-form-field-demo'},{'name': 'NgxTinynodesMatJsonOutputComponent', 'selector': 'ngx-tinynodes-mat-json-output'},{'name': 'NgxTinynodesMatTagInputComponent', 'selector': 'ngx-tinynodes-mat-tag-input'},{'name': 'PageContainerComponent', 'selector': 'ngx-page-container'}];\n    var DIRECTIVES = [{'name': 'NgxEditorJSDirective', 'selector': '[ngxEditorJS]'}];\n    var ACTUAL_COMPONENT = {'name': 'NgxTinynodesMaterialFormFieldDemoComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/Page.html":{"url":"interfaces/Page.html","title":"interface - Page","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  Page\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            libs/ngx-editorjs/ngx-editorjs-demo/src/lib/store/pages/pages.models.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        blocks\n                                \n                                \n                                        id\n                                \n                                \n                                        pageTags\n                                \n                                \n                                        pageTitle\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        blocks\n                                    \n                                \n                                \n                                    \n                                        blocks:     PageBlock[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     PageBlock[]\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        id\n                                    \n                                \n                                \n                                    \n                                        id:     ID\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     ID\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        pageTags\n                                    \n                                \n                                \n                                    \n                                        pageTags:         Tag[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         Tag[]\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        pageTitle\n                                    \n                                \n                                \n                                    \n                                        pageTitle:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { ID } from '@datorama/akita';\nimport { Block } from '@tinynodes/ngx-editorjs';\n\nexport interface Tag {\n  key: string;\n}\n\nexport interface PageBlock extends Block {\n  id: ID;\n}\n\nexport interface Page {\n  id: ID;\n  pageTitle: string;\n  pageTags: Tag[];\n  blocks: PageBlock[];\n}\n\n    \n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/PageBlock.html":{"url":"interfaces/PageBlock.html","title":"interface - PageBlock","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  PageBlock\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            libs/ngx-editorjs/ngx-editorjs-demo/src/lib/store/pages/pages.models.ts\n        \n\n\n            \n                Extends\n            \n            \n                        Block\n            \n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        id\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        id\n                                    \n                                \n                                \n                                    \n                                        id:     ID\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     ID\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { ID } from '@datorama/akita';\nimport { Block } from '@tinynodes/ngx-editorjs';\n\nexport interface Tag {\n  key: string;\n}\n\nexport interface PageBlock extends Block {\n  id: ID;\n}\n\nexport interface Page {\n  id: ID;\n  pageTitle: string;\n  pageTags: Tag[];\n  blocks: PageBlock[];\n}\n\n    \n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/PageContainerComponent.html":{"url":"components/PageContainerComponent.html","title":"component - PageContainerComponent","body":"\n                   \n\n\n\n\n\n  Components\n  PageContainerComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    libs/ngx-editorjs/ngx-editorjs-demo/src/lib/containers/page-container/page-container.component.ts\n\n\n    \n        Description\n    \n    \n        The Page Container provided the basic demo for the ngx-editorjs component\n\n    \n\n\n    \n        Implements\n    \n    \n                    AfterContentInit\n    \n\n\n\n    Metadata\n    \n        \n\n            \n                changeDetection\n                ChangeDetectionStrategy.OnPush\n            \n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                ngx-page-container\n            \n\n            \n                styleUrls\n                page-container.component.scss\n            \n\n\n\n            \n                templateUrl\n                page-container.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                holder\n                            \n                            \n                                ngxEditorJS\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                clear\n                            \n                            \n                                ngAfterContentInit\n                            \n                            \n                                    Public\n                                reset\n                            \n                            \n                                    Public\n                                save\n                            \n                        \n                    \n                \n\n\n\n\n\n                    \n                        \n                            Accessors\n                        \n                    \n                    \n                        \n                            \n                                \n                                    blocks\n                                \n                                \n                                    menu\n                                \n                                \n                                    pages\n                                \n                                \n                                    asJSON\n                                \n                            \n                        \n                    \n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(pagesService: PagesService, app: AppService, editorService: NgxEditorJSService, cd: ChangeDetectorRef)\n                    \n                \n                        \n                            \n                                Defined in libs/ngx-editorjs/ngx-editorjs-demo/src/lib/containers/page-container/page-container.component.ts:35\n                            \n                        \n\n                \n                    \n                            The constructor sets up the blocks to the initial demo data\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        pagesService\n                                                  \n                                                        \n                                                                        PagesService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                The pages service\n\n                                                        \n                                                \n                                                \n                                                        app\n                                                  \n                                                        \n                                                                    AppService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                The application service\n\n                                                        \n                                                \n                                                \n                                                        editorService\n                                                  \n                                                        \n                                                                        NgxEditorJSService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                The Editor service\n\n                                                        \n                                                \n                                                \n                                                        cd\n                                                  \n                                                        \n                                                                        ChangeDetectorRef\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                The change detection ref\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            clear\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    clear()\n                \n            \n\n\n            \n                \n                    Defined in libs/ngx-editorjs/ngx-editorjs-demo/src/lib/containers/page-container/page-container.component.ts:86\n                \n            \n\n\n            \n                \n                    Clear the editor\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngAfterContentInit\n                        \n                        \n                    \n                \n            \n            \n                \nngAfterContentInit()\n                \n            \n\n\n            \n                \n                    Defined in libs/ngx-editorjs/ngx-editorjs-demo/src/lib/containers/page-container/page-container.component.ts:119\n                \n            \n\n\n            \n                \n                    After the content has init override the blocks with blocks from the service\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            reset\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    reset()\n                \n            \n\n\n            \n                \n                    Defined in libs/ngx-editorjs/ngx-editorjs-demo/src/lib/containers/page-container/page-container.component.ts:93\n                \n            \n\n\n            \n                \n                    Reset the editor with demo data\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            save\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    save()\n                \n            \n\n\n            \n                \n                    Defined in libs/ngx-editorjs/ngx-editorjs-demo/src/lib/containers/page-container/page-container.component.ts:79\n                \n            \n\n\n            \n                \n                    Call the editor save method\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            holder\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Default value : 'ngx-editorjs-demo'\n                        \n                    \n                        \n                            \n                                    Defined in libs/ngx-editorjs/ngx-editorjs-demo/src/lib/containers/page-container/page-container.component.ts:28\n                            \n                        \n\n                \n                    \n                        The holder ID for this demo\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            ngxEditorJS\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         NgxEditorJSComponent\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @ViewChild('ngxEditorJS', {read: NgxEditorJSComponent, static: true})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in libs/ngx-editorjs/ngx-editorjs-demo/src/lib/containers/page-container/page-container.component.ts:35\n                            \n                        \n\n\n            \n        \n\n\n    \n    \n        Accessors\n    \n        \n            \n                \n                    \n                        \n                        blocks\n                    \n                \n\n                \n                    \n                        getblocks()\n                    \n                \n                            \n                                \n                                    Defined in libs/ngx-editorjs/ngx-editorjs-demo/src/lib/containers/page-container/page-container.component.ts:55\n                                \n                            \n                    \n                        \n                                Get the blocks from the last change\n\n\n                        \n                    \n\n            \n        \n        \n            \n                \n                    \n                        \n                        menu\n                    \n                \n\n                \n                    \n                        getmenu()\n                    \n                \n                            \n                                \n                                    Defined in libs/ngx-editorjs/ngx-editorjs-demo/src/lib/containers/page-container/page-container.component.ts:65\n                                \n                            \n                    \n                        \n                                Get the page links\n\n\n                        \n                    \n\n            \n        \n        \n            \n                \n                    \n                        \n                        pages\n                    \n                \n\n                \n                    \n                        getpages()\n                    \n                \n                            \n                                \n                                    Defined in libs/ngx-editorjs/ngx-editorjs-demo/src/lib/containers/page-container/page-container.component.ts:72\n                                \n                            \n                    \n                        \n                                Get a list of pages\n\n\n                                \n                                    Returns :         Observable\n\n                                \n                        \n                    \n\n            \n        \n        \n            \n                \n                    \n                        \n                        asJSON\n                    \n                \n\n                \n                    \n                        getasJSON()\n                    \n                \n                            \n                                \n                                    Defined in libs/ngx-editorjs/ngx-editorjs-demo/src/lib/containers/page-container/page-container.component.ts:106\n                                \n                            \n                    \n                        \n                                Get the blocks data as formatted JSON\n\n\n                        \n                    \n\n            \n        \n\n\n\n\n    \n        import { AfterContentInit, ChangeDetectionStrategy, ChangeDetectorRef, Component, ViewChild } from '@angular/core';\nimport { Block, NgxEditorJSComponent, NgxEditorJSService } from '@tinynodes/ngx-editorjs';\nimport { AppService, MenuGroup, NgxEditorJSDemo } from '@tinynodes/ngx-tinynodes-core';\nimport { BehaviorSubject, Observable, Subject } from 'rxjs';\nimport { map, pluck, switchMap, take, takeUntil, tap } from 'rxjs/operators';\nimport { Page } from '../../store/pages/pages.models';\nimport { PagesService } from '../../store/pages/pages.service';\nimport { OutputData } from '@editorjs/editorjs';\n\n/**\n * The Page Container provided the basic demo for the `ngx-editorjs` component\n */\n@Component({\n  selector: 'ngx-page-container',\n  templateUrl: 'page-container.component.html',\n  styleUrls: [ 'page-container.component.scss' ],\n  changeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class PageContainerComponent implements AfterContentInit {\n  /**\n   * Internal onDestroy$ subject\n   */\n  private readonly onDestroy$ = new Subject();\n\n  /**\n   * The holder ID for this demo\n   */\n  public holder = 'ngx-editorjs-demo';\n\n  /**\n   * Links for the page\n   */\n  private menu$ = new BehaviorSubject(undefined);\n\n  @ViewChild('ngxEditorJS', { read: NgxEditorJSComponent, static: true }) ngxEditorJS: NgxEditorJSComponent;\n\n  /**\n   * The constructor sets up the blocks to the initial demo data\n   * @param pagesService The pages service\n   * @param app The application service\n   * @param editorService The Editor service\n   * @param cd The change detection ref\n   */\n  constructor(\n    private readonly pagesService: PagesService,\n    private readonly app: AppService,\n    private readonly editorService: NgxEditorJSService,\n    private readonly cd: ChangeDetectorRef\n  ) {\n  }\n\n  /**\n   * Get the blocks from the last change\n   */\n  public get blocks() {\n    return this.editorService.lastChange({ holder: this.holder }).pipe(\n      pluck('blocks'),\n      takeUntil(this.onDestroy$)\n    );\n  }\n\n  /**\n   * Get the page links\n   */\n  public get menu() {\n    return this.menu$;\n  }\n\n  /**\n   * Get a list of pages\n   */\n  get pages(): Observable {\n    return this.pagesService.pages;\n  }\n\n  /**\n   * Call the editor save method\n   */\n  public save() {\n    this.editorService.save({ holder: this.holder });\n  }\n\n  /**\n   * Clear the editor\n   */\n  public clear() {\n    this.editorService.clear({ holder: this.holder });\n  }\n\n  /**\n   * Reset the editor with demo data\n   */\n  public reset() {\n    this.app\n      .getDemoData('ngx-editorjs-demo')\n      .pipe(take(1), switchMap((data: NgxEditorJSDemo) => {\n        this.menu$.next(data.links);\n        return this.editorService.update({ holder: this.holder, data: { blocks: data.blocks } }).pipe(take(1));\n      }))\n      .subscribe();\n  }\n\n  /**\n   * Get the blocks data as formatted JSON\n   */\n  public get asJSON() {\n    return this.blocks.pipe(\n      take(1),\n      map(blocks => {\n        return JSON.stringify(blocks, null, 4);\n      }),\n      tap(() => this.cd.markForCheck())\n    );\n  }\n\n  /**\n   * After the content has init override the blocks with blocks from the service\n   */\n  ngAfterContentInit() {\n    this.reset();\n  }\n}\n\n    \n\n    \n        \n  \n    \n      @tinynodes/ngx-editor Demo\n      A single page demo of the EditorJS component\n    \n    \n      \n    \n\n    \n      \n        Demo\n        Save\n        Clear\n        Reset\n      \n      \n        \n          Ready: {{ ngxEditorJS.isReady | async }}\n          Has Changed:\n            {{ change.time }}\n            0\n          \n          Touched: {{ ngxEditorJS.isTouched | async }}\n          Focused: {{ ngxEditorJS.isFocused | async }}\n          Saved: {{ ngxEditorJS.hasSaved | async }}\n        \n      \n      \n    \n    \n      \n        \n          Output\n          Data from the EditorJS instance\n        \n        \n          {{ asJSON | async }}\n        \n      \n    \n     \n  \n\n\n\n  \n    Below is an instance of an EditorJS block editor. Click on the area and the block tool will appear, or you can just start\n    typing.\n  \n  \n    The default block is a &lt;p> paragraph, you can also add header &lt;h1> - &lt;h6> blocks, list with\n    &lt;ol> / &lt;li> and &lt;code> blocks.\n  \n\n  \n    You can also paste in an &lt;img> url into the editor and it will start the SimpleImage plugin which provides\n    an &lt;img> tag pointing to the image, and with some additional controls.\n  \n  \n    When saving check the output panel below to see the data results.\n  \n\n\n    \n\n    \n                \n                    page-container.component.scss\n                \n                :host {\n  width: 100%;\n  height: 100vh;\n}\n\n.output-card {\n  height: 100vh;\n  flex: 1;\n  width: 100%;\n  overflow: scroll;\n}\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '            @tinynodes/ngx-editor Demo      A single page demo of the EditorJS component                                    Demo        Save        Clear        Reset                              Ready: {{ ngxEditorJS.isReady | async }}          Has Changed:            {{ change.time }}            0                    Touched: {{ ngxEditorJS.isTouched | async }}          Focused: {{ ngxEditorJS.isFocused | async }}          Saved: {{ ngxEditorJS.hasSaved | async }}                                                    Output          Data from the EditorJS instance                          {{ asJSON | async }}                               Below is an instance of an EditorJS block editor. Click on the area and the block tool will appear, or you can just start    typing.        The default block is a  paragraph, you can also add header  -  blocks, list with     /  and  blocks.        You can also paste in an  url into the editor and it will start the SimpleImage plugin which provides    an  tag pointing to the image, and with some additional controls.        When saving check the output panel below to see the data results.  '\n    var COMPONENTS = [{'name': 'NgxEditorJSComponent', 'selector': 'ngx-editorjs'},{'name': 'NgxEditorJSDemoHomeComponent', 'selector': 'ngx-editorjs-demo-home'},{'name': 'NgxEditorJSMatFieldComponent', 'selector': 'ngx-editorjs-mat-field'},{'name': 'NgxTinynodesMaterialFormFieldDemoComponent', 'selector': 'ngx-tinynodes-mat-form-field-demo'},{'name': 'NgxTinynodesMatJsonOutputComponent', 'selector': 'ngx-tinynodes-mat-json-output'},{'name': 'NgxTinynodesMatTagInputComponent', 'selector': 'ngx-tinynodes-mat-tag-input'},{'name': 'PageContainerComponent', 'selector': 'ngx-page-container'}];\n    var DIRECTIVES = [{'name': 'NgxEditorJSDirective', 'selector': '[ngxEditorJS]'}];\n    var ACTUAL_COMPONENT = {'name': 'PageContainerComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/PageStoreModule.html":{"url":"modules/PageStoreModule.html","title":"module - PageStoreModule","body":"\n                   \n\n\n\n\n    Modules\n    PageStoreModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_PageStoreModule\n\n\n\ncluster_PageStoreModule_providers\n\n\n\n\nPagesQuery\n\nPagesQuery\n\n\n\nPageStoreModule\n\nPageStoreModule\n\nPageStoreModule -->\n\nPagesQuery->PageStoreModule\n\n\n\n\n\nPagesService\n\nPagesService\n\nPageStoreModule -->\n\nPagesService->PageStoreModule\n\n\n\n\n\nPagesStore\n\nPagesStore\n\nPageStoreModule -->\n\nPagesStore->PageStoreModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            libs/ngx-editorjs/ngx-editorjs-demo/src/lib/store/pages/pages.module.ts\n        \n\n\n        \n            Description\n        \n        \n            WARNING: This module is currently in development\nInternal page store module, this will allow the ngx-editorjs-demo to support the creation of multiple pages\n\n        \n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            PagesQuery\n                        \n                        \n                            PagesService\n                        \n                        \n                            PagesStore\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { NgModule } from '@angular/core';\nimport { PagesQuery } from './pages.query';\nimport { PagesService } from './pages.service';\nimport { PagesStore } from './pages.store';\n\n/**\n *\n * **WARNING**: This module is currently in development\n *\n * Internal page store module, this will allow the `ngx-editorjs-demo` to support the creation of multiple pages\n */\n@NgModule({\n  providers: [PagesStore, PagesQuery, PagesService]\n})\nexport class PageStoreModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/PagesQuery.html":{"url":"injectables/PagesQuery.html","title":"injectable - PagesQuery","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  PagesQuery\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            libs/ngx-editorjs/ngx-editorjs-demo/src/lib/store/pages/pages.query.ts\n        \n\n\n            \n                Extends\n            \n            \n                    QueryEntity\n            \n\n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(store: PagesStore)\n                    \n                \n                        \n                            \n                                Defined in libs/ngx-editorjs/ngx-editorjs-demo/src/lib/store/pages/pages.query.ts:7\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        store\n                                                  \n                                                        \n                                                                        PagesStore\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { QueryEntity } from '@datorama/akita';\nimport { Page } from './pages.models';\nimport { PagesState, PagesStore } from './pages.store';\n\n@Injectable()\nexport class PagesQuery extends QueryEntity {\n  constructor(protected store: PagesStore) {\n    super(store);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/PagesService.html":{"url":"injectables/PagesService.html","title":"injectable - PagesService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  PagesService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            libs/ngx-editorjs/ngx-editorjs-demo/src/lib/store/pages/pages.service.ts\n        \n\n            \n                Description\n            \n            \n                This page service provides a way to save and render pages\nvia the store\n\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                    Readonly\n                                query\n                            \n                            \n                                    Public\n                                    Readonly\n                                store\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                add\n                            \n                            \n                                addBlock\n                            \n                            \n                                delete\n                            \n                            \n                                removeBlock\n                            \n                            \n                                setBlocks\n                            \n                            \n                                upsert\n                            \n                        \n                    \n                \n\n\n\n\n\n                    \n                        \n                            Accessors\n                        \n                    \n                    \n                        \n                            \n                                \n                                    pages\n                                \n                            \n                        \n                    \n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(query: PagesQuery, store: PagesStore)\n                    \n                \n                        \n                            \n                                Defined in libs/ngx-editorjs/ngx-editorjs-demo/src/lib/store/pages/pages.service.ts:15\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        query\n                                                  \n                                                        \n                                                                        PagesQuery\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        store\n                                                  \n                                                        \n                                                                        PagesStore\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            add\n                        \n                        \n                    \n                \n            \n            \n                \nadd(page?: Page)\n                \n            \n\n\n            \n                \n                    Defined in libs/ngx-editorjs/ngx-editorjs-demo/src/lib/store/pages/pages.service.ts:32\n                \n            \n\n\n            \n                \n                    Add a page to the store\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    page\n                                    \n                                                Page\n                                    \n\n                                    \n                                        Yes\n                                    \n\n\n                                    \n                                        An optional page to be added\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            addBlock\n                        \n                        \n                    \n                \n            \n            \n                \naddBlock(pageId: ID, block: Block)\n                \n            \n\n\n            \n                \n                    Defined in libs/ngx-editorjs/ngx-editorjs-demo/src/lib/store/pages/pages.service.ts:64\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    pageId\n                                    \n                                            ID\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    block\n                                    \n                                                Block\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            delete\n                        \n                        \n                    \n                \n            \n            \n                \ndelete(pageId: ID)\n                \n            \n\n\n            \n                \n                    Defined in libs/ngx-editorjs/ngx-editorjs-demo/src/lib/store/pages/pages.service.ts:56\n                \n            \n\n\n            \n                \n                    Removes a page\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    pageId\n                                    \n                                            ID\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        The ID of the page to be removed\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            removeBlock\n                        \n                        \n                    \n                \n            \n            \n                \nremoveBlock(pageId: ID, block: PageBlock)\n                \n            \n\n\n            \n                \n                    Defined in libs/ngx-editorjs/ngx-editorjs-demo/src/lib/store/pages/pages.service.ts:70\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    pageId\n                                    \n                                            ID\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    block\n                                    \n                                                PageBlock\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            setBlocks\n                        \n                        \n                    \n                \n            \n            \n                \nsetBlocks(pageId: ID | any, blocks: PageBlock[])\n                \n            \n\n\n            \n                \n                    Defined in libs/ngx-editorjs/ngx-editorjs-demo/src/lib/store/pages/pages.service.ts:60\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    pageId\n                                    \n                                            ID | any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    blocks\n                                    \n                                            PageBlock[]\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            upsert\n                        \n                        \n                    \n                \n            \n            \n                \nupsert(page: Page)\n                \n            \n\n\n            \n                \n                    Defined in libs/ngx-editorjs/ngx-editorjs-demo/src/lib/store/pages/pages.service.ts:47\n                \n            \n\n\n            \n                \n                    Updates or creates a page\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    page\n                                    \n                                                Page\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        The page to be updated, if not available it will be created\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                                Readonly\n                            query\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         PagesQuery\n\n                        \n                    \n                        \n                            \n                                    Defined in libs/ngx-editorjs/ngx-editorjs-demo/src/lib/store/pages/pages.service.ts:17\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                                Readonly\n                            store\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         PagesStore\n\n                        \n                    \n                        \n                            \n                                    Defined in libs/ngx-editorjs/ngx-editorjs-demo/src/lib/store/pages/pages.service.ts:17\n                            \n                        \n\n\n            \n        \n\n\n            \n    \n        Accessors\n    \n        \n            \n                \n                    \n                        \n                        pages\n                    \n                \n\n                \n                    \n                        getpages()\n                    \n                \n                            \n                                \n                                    Defined in libs/ngx-editorjs/ngx-editorjs-demo/src/lib/store/pages/pages.service.ts:24\n                                \n                            \n                    \n                        \n                                Get an observable of all the pages in the store\n\n\n                                \n                                    Returns :         Observable\n\n                                \n                        \n                    \n\n            \n        \n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { arrayAdd, arrayRemove, guid, ID } from '@datorama/akita';\nimport { Block } from '@tinynodes/ngx-editorjs';\nimport { Observable } from 'rxjs';\nimport { Page, PageBlock } from './pages.models';\nimport { PagesQuery } from './pages.query';\nimport { PagesStore } from './pages.store';\n\n/**\n * This page service provides a way to save and render pages\n * via the store\n */\n@Injectable()\nexport class PagesService {\n  private pages$: Observable;\n\n  constructor(public readonly query: PagesQuery, public readonly store: PagesStore) {\n    this.pages$ = this.query.selectAll();\n  }\n\n  /**\n   * Get an observable of all the pages in the store\n   */\n  get pages(): Observable {\n    return this.pages$;\n  }\n\n  /**\n   * Add a page to the store\n   * @param page An optional page to be added\n   */\n  add(page?: Page) {\n    const newPage: Page = {\n      id: guid(),\n      pageTitle: 'New Page',\n      pageTags: [],\n      blocks: [],\n      ...page\n    };\n    this.store.add(newPage);\n  }\n\n  /**\n   * Updates or creates a page\n   * @param page The page to be updated, if not available it will be created\n   */\n  upsert(page: Page) {\n    if (!page.id) page.id = guid();\n    this.store.upsert(page.id, page);\n  }\n\n  /**\n   * Removes a page\n   * @param pageId The ID of the page to be removed\n   */\n  delete(pageId: ID) {\n    this.store.remove(pageId);\n  }\n\n  setBlocks(pageId: ID | any, blocks: PageBlock[]) {\n    this.store.update(pageId, { blocks });\n  }\n\n  addBlock(pageId: ID, block: Block) {\n    this.store.update(pageId, (entity: Page) => ({\n      blocks: arrayAdd(entity.blocks, { id: guid(), ...block })\n    }));\n  }\n\n  removeBlock(pageId: ID, block: PageBlock) {\n    this.store.update(pageId, (entity: Page) => ({\n      blocks: arrayRemove(entity.blocks, block.id)\n    }));\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/PagesState.html":{"url":"interfaces/PagesState.html","title":"interface - PagesState","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  PagesState\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            libs/ngx-editorjs/ngx-editorjs-demo/src/lib/store/pages/pages.store.ts\n        \n\n\n            \n                Extends\n            \n            \n                    EntityState\n            \n\n\n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { EntityState, EntityStore, StoreConfig } from '@datorama/akita';\nimport { Page } from './pages.models';\n\nexport interface PagesState extends EntityState {}\n\n@Injectable()\n@StoreConfig({ name: 'pages' })\nexport class PagesStore extends EntityStore {\n  constructor() {\n    super();\n  }\n}\n\n    \n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/PagesStore.html":{"url":"injectables/PagesStore.html","title":"injectable - PagesStore","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  PagesStore\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            libs/ngx-editorjs/ngx-editorjs-demo/src/lib/store/pages/pages.store.ts\n        \n\n\n            \n                Extends\n            \n            \n                    EntityStore\n            \n\n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in libs/ngx-editorjs/ngx-editorjs-demo/src/lib/store/pages/pages.store.ts:9\n                            \n                        \n\n            \n        \n\n\n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { EntityState, EntityStore, StoreConfig } from '@datorama/akita';\nimport { Page } from './pages.models';\n\nexport interface PagesState extends EntityState {}\n\n@Injectable()\n@StoreConfig({ name: 'pages' })\nexport class PagesStore extends EntityStore {\n  constructor() {\n    super();\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/Paragraph.html":{"url":"interfaces/Paragraph.html","title":"interface - Paragraph","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  Paragraph\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            libs/ngx-editorjs/ngx-editorjs/src/lib/types/blocks.ts\n        \n\n            \n                Description\n            \n            \n                Default data type for a paragraph block\n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        text\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        text\n                                    \n                                \n                                \n                                    \n                                        text:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    The paragraph text\n\n                                \n                            \n                        \n                    \n            \n    \n\n\n    \n        export interface Block {\n  /**\n   * The EditorJS block type\n   */\n  type: string;\n\n  /**\n   * The data interface for the block type\n   */\n  data: T;\n\n  /**\n   * Additional properties on the type\n   */\n  [key: string]: any;\n}\n\n/**\n * Available list styles, supports `ordered` and `unordered`.\n * A custom string can also be added\n */\nexport type ListStyle = 'ordered' | 'unordered' | string;\n\n/**\n * Default data type for a list block\n */\nexport interface List {\n  /**\n   * The list style\n   */\n  style: ListStyle;\n  /**\n   * List items of type T\n   */\n  items: T[];\n}\n\n/**\n * The default list block is provided by the EditorJS list plugin\n */\nexport interface ListBlock extends Block> {\n  /**\n   * The EditorJS block type\n   */\n  type: 'list';\n}\n\n/**\n * Default data type for a paragraph block\n */\ninterface Paragraph {\n  /**\n   * The paragraph text\n   */\n  text: string;\n}\n\n/**\n * Interface for a paragraph block\n */\nexport interface ParagraphBlock extends Block {\n  /**\n   * The EditorJS block type\n   */\n  type: 'paragraph';\n}\n\n/**\n * Default data type for a header block\n */\ninterface Header {\n  /**\n   * The header text\n   */\n  text: string;\n  /**\n   * The header level from 1-6\n   */\n  level: number;\n}\n\n/**\n * Interface for a header block\n */\nexport interface HeaderBlock extends Block {\n  /**\n   * The EditorJS block type\n   */\n  type: 'header';\n}\n\n/**\n * Default data type for a header block\n */\nexport interface Image {\n  /**\n   * The image URL\n   */\n  url: string;\n  /**\n   * Optional image caption\n   */\n  caption?: string;\n  /**\n   * Optional border property\n   */\n  withBorder?: boolean;\n\n  /**\n   * Optional background property\n   */\n  withBackground?: boolean;\n\n  /**\n   * Optional stretch property\n   */\n  stretched?: boolean;\n}\n\n/**\n * Interface for a image block\n */\nexport interface ImageBlock extends Block {\n  /**\n   * The EditorJS block type\n   */\n  type: 'image';\n}\n\n/**\n * Type of all the basic block type\n */\nexport type BlockTypes = ParagraphBlock | HeaderBlock | ImageBlock | ListBlock | Block;\n\n    \n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/ParagraphBlock.html":{"url":"interfaces/ParagraphBlock.html","title":"interface - ParagraphBlock","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  ParagraphBlock\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            libs/ngx-editorjs/ngx-editorjs/src/lib/types/blocks.ts\n        \n\n            \n                Description\n            \n            \n                Interface for a paragraph block\n\n            \n\n            \n                Extends\n            \n            \n                        Block\n            \n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        type\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        type\n                                    \n                                \n                                \n                                    \n                                        type:     \n\n                                    \n                                \n\n\n\n\n\n\n\n                            \n                                \n                                    The EditorJS block type\n\n                                \n                            \n                        \n                    \n            \n    \n\n\n    \n        export interface Block {\n  /**\n   * The EditorJS block type\n   */\n  type: string;\n\n  /**\n   * The data interface for the block type\n   */\n  data: T;\n\n  /**\n   * Additional properties on the type\n   */\n  [key: string]: any;\n}\n\n/**\n * Available list styles, supports `ordered` and `unordered`.\n * A custom string can also be added\n */\nexport type ListStyle = 'ordered' | 'unordered' | string;\n\n/**\n * Default data type for a list block\n */\nexport interface List {\n  /**\n   * The list style\n   */\n  style: ListStyle;\n  /**\n   * List items of type T\n   */\n  items: T[];\n}\n\n/**\n * The default list block is provided by the EditorJS list plugin\n */\nexport interface ListBlock extends Block> {\n  /**\n   * The EditorJS block type\n   */\n  type: 'list';\n}\n\n/**\n * Default data type for a paragraph block\n */\ninterface Paragraph {\n  /**\n   * The paragraph text\n   */\n  text: string;\n}\n\n/**\n * Interface for a paragraph block\n */\nexport interface ParagraphBlock extends Block {\n  /**\n   * The EditorJS block type\n   */\n  type: 'paragraph';\n}\n\n/**\n * Default data type for a header block\n */\ninterface Header {\n  /**\n   * The header text\n   */\n  text: string;\n  /**\n   * The header level from 1-6\n   */\n  level: number;\n}\n\n/**\n * Interface for a header block\n */\nexport interface HeaderBlock extends Block {\n  /**\n   * The EditorJS block type\n   */\n  type: 'header';\n}\n\n/**\n * Default data type for a header block\n */\nexport interface Image {\n  /**\n   * The image URL\n   */\n  url: string;\n  /**\n   * Optional image caption\n   */\n  caption?: string;\n  /**\n   * Optional border property\n   */\n  withBorder?: boolean;\n\n  /**\n   * Optional background property\n   */\n  withBackground?: boolean;\n\n  /**\n   * Optional stretch property\n   */\n  stretched?: boolean;\n}\n\n/**\n * Interface for a image block\n */\nexport interface ImageBlock extends Block {\n  /**\n   * The EditorJS block type\n   */\n  type: 'image';\n}\n\n/**\n * Type of all the basic block type\n */\nexport type BlockTypes = ParagraphBlock | HeaderBlock | ImageBlock | ListBlock | Block;\n\n    \n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/PluginCodeModule.html":{"url":"modules/PluginCodeModule.html","title":"module - PluginCodeModule","body":"\n                   \n\n\n\n\n    Modules\n    PluginCodeModule\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            libs/ngx-editorjs/ngx-editorjs-plugins/src/lib/plugins/code/code.module.ts\n        \n\n\n        \n            Description\n        \n        \n            A module that provides the default EditorJS  block tool.\nSee the GitHub repo for API details\n\n        \n\n\n        \n            \n            \n        \n\n\n    \n\n\n    \n        import { NgModule } from '@angular/core';\nimport { EDITOR_JS_TOOL_INJECTOR, PLUGIN_CONFIG, PluginClasses, PluginTypes } from '../../types/plugins';\nimport Code from '@editorjs/code';\nimport { createPluginConfig } from '../../util/plugin';\n\n/**\n * A module that provides the default EditorJS `` block tool.\n * See [the GitHub repo](https://github.com/editor-js/code) for API details\n */\n@NgModule({\n  providers: [\n    {\n      provide: EDITOR_JS_TOOL_INJECTOR,\n      useValue: Code,\n      multi: true\n    },\n    {\n      provide: PLUGIN_CONFIG,\n      useValue: {\n        key: 'code',\n        type: PluginTypes.Block,\n        pluginName: 'EditorJS Code'\n      },\n      multi: true\n    }\n  ]\n})\nexport class PluginCodeModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/PluginConfig.html":{"url":"interfaces/PluginConfig.html","title":"interface - PluginConfig","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  PluginConfig\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            libs/ngx-editorjs/ngx-editorjs-plugins/src/lib/types/plugins.ts\n        \n\n            \n                Description\n            \n            \n                A plugin configuration object\n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                            Optional\n                                        blockData\n                                \n                                \n                                            Optional\n                                        config\n                                \n                                \n                                            Optional\n                                        description\n                                \n                                \n                                            Optional\n                                        inlineToolbar\n                                \n                                \n                                        key\n                                \n                                \n                                        plugin\n                                \n                                \n                                        pluginName\n                                \n                                \n                                            Optional\n                                        shortcut\n                                \n                                \n                                        type\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        blockData\n                                    \n                                \n                                \n                                    \n                                        blockData:         BlockData\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         BlockData\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    Optional block data, used to define the block data for this type\nand used as a default\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        config\n                                    \n                                \n                                \n                                    \n                                        config:         any\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         any\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    Optional  custom configuration to pass to EditorJS\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        description\n                                    \n                                \n                                \n                                    \n                                        description:         PluginProperty\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         PluginProperty\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    Optional description for the plugin\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        inlineToolbar\n                                    \n                                \n                                \n                                    \n                                        inlineToolbar:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    If a block tool, you can also set this to true if it contains inline tool support\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        key\n                                    \n                                \n                                \n                                    \n                                        key:         PluginProperty\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         PluginProperty\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    The key to use for the plugin\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        plugin\n                                    \n                                \n                                \n                                    \n                                        plugin:         EditorJSPlugin | undefined\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         EditorJSPlugin | undefined\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    The plugin for the editor\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        pluginName\n                                    \n                                \n                                \n                                    \n                                        pluginName:         PluginProperty\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         PluginProperty\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Label for displaying the plugin name\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        shortcut\n                                    \n                                \n                                \n                                    \n                                        shortcut:         PluginProperty\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         PluginProperty\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    Optional shortcut for the plugin\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        type\n                                    \n                                \n                                \n                                    \n                                        type:         PluginProperty\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         PluginProperty\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Specifies the type of plugin for the plugin provider\n\n                                \n                            \n                        \n                    \n            \n    \n\n\n    \n        import { InjectionToken } from '@angular/core';\nimport { ToolSettings, ToolConstructable } from '@editorjs/editorjs';\n\n/**\n * Block Data interface\n */\nexport interface BlockData {\n  [key: string]: any;\n}\n\n/**\n * The types of plugins supported, currently block and inline\n */\nexport enum PluginTypes {\n  /**\n   * A EditorJS block plugin\n   */\n  Block = 'block',\n  /**\n   * A EditorJS inline plugin\n   */\n  Inline = 'inline'\n}\n\n/**\n * The types of plugins supported via the plugin `type` property\n */\nexport type PluginType = PluginTypes.Block | PluginTypes.Inline | string;\n\n/**\n * A plugin property\n */\nexport type PluginProperty = string;\n\n/**\n * The EditorJS tool settings for this plugin\n */\nexport type EditorJSPlugin = ToolConstructable | ToolSettings;\n\n/**\n * A map of all the tools settings\n */\nexport interface ToolSettingsMap {\n  /**\n   * The key of the plugin and the plugin exported tool settings\n   */\n  [key: string]: EditorJSPlugin;\n}\n\n/**\n * A plugin configuration object\n */\nexport interface PluginConfig {\n  /**\n   * Specifies the type of plugin for the plugin provider\n   */\n  type: PluginProperty;\n  /**\n   * The key to use for the plugin\n   */\n  key: PluginProperty;\n  /**\n   * Label for displaying the plugin name\n   */\n  pluginName: PluginProperty;\n  /**\n   * Optional description for the plugin\n   */\n  description?: PluginProperty;\n  /**\n   * Optional shortcut for the plugin\n   */\n  shortcut?: PluginProperty;\n  /**\n   * Optional {@link https://editorjs.io/provide-custom-configuration | custom configuration} to pass to EditorJS\n   */\n  config?: any;\n\n  /**\n   * If a block tool, you can also set this to true if it contains inline tool support\n   */\n  inlineToolbar?: boolean;\n  /**\n   * Optional block data, used to define the block data for this type\n   * and used as a default\n   */\n  blockData?: BlockData;\n  /**\n   * The plugin for the editor\n   */\n  plugin: EditorJSPlugin | undefined;\n}\n\n/**\n * The Injection token for initial plugins as defined in the ngx-editorjs module\n */\nexport const EDITOR_JS_TOOL_INJECTOR = new InjectionToken('EDITOR_JS_TOOL_INJECTOR');\n\n/**\n * Injection token for a plugin config\n */\nexport const PLUGIN_CONFIG = new InjectionToken('PLUGIN_CONFIG');\n\n/**\n * A map of plugin configs\n */\nexport interface PluginConfigMap {\n  /**\n   * A plugin config per key\n   */\n  [key: string]: PluginConfig;\n}\n\n/**\n * Injection token for the plugin config map\n */\nexport const PluginClasses = new InjectionToken('PluginClasses');\n\n    \n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/PluginConfigMap.html":{"url":"interfaces/PluginConfigMap.html","title":"interface - PluginConfigMap","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  PluginConfigMap\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            libs/ngx-editorjs/ngx-editorjs-plugins/src/lib/types/plugins.ts\n        \n\n            \n                Description\n            \n            \n                A map of plugin configs\n\n            \n\n\n\n\n            \n    Indexable\n        \n            \n                \n                    \n                        [key: string]:        PluginConfig\n\n                    \n                \n                        \n                            \n                                Defined in libs/ngx-editorjs/ngx-editorjs-plugins/src/lib/types/plugins.ts:107\n                            \n                        \n                \n                    \n                        A plugin config per key\n\n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { InjectionToken } from '@angular/core';\nimport { ToolSettings, ToolConstructable } from '@editorjs/editorjs';\n\n/**\n * Block Data interface\n */\nexport interface BlockData {\n  [key: string]: any;\n}\n\n/**\n * The types of plugins supported, currently block and inline\n */\nexport enum PluginTypes {\n  /**\n   * A EditorJS block plugin\n   */\n  Block = 'block',\n  /**\n   * A EditorJS inline plugin\n   */\n  Inline = 'inline'\n}\n\n/**\n * The types of plugins supported via the plugin `type` property\n */\nexport type PluginType = PluginTypes.Block | PluginTypes.Inline | string;\n\n/**\n * A plugin property\n */\nexport type PluginProperty = string;\n\n/**\n * The EditorJS tool settings for this plugin\n */\nexport type EditorJSPlugin = ToolConstructable | ToolSettings;\n\n/**\n * A map of all the tools settings\n */\nexport interface ToolSettingsMap {\n  /**\n   * The key of the plugin and the plugin exported tool settings\n   */\n  [key: string]: EditorJSPlugin;\n}\n\n/**\n * A plugin configuration object\n */\nexport interface PluginConfig {\n  /**\n   * Specifies the type of plugin for the plugin provider\n   */\n  type: PluginProperty;\n  /**\n   * The key to use for the plugin\n   */\n  key: PluginProperty;\n  /**\n   * Label for displaying the plugin name\n   */\n  pluginName: PluginProperty;\n  /**\n   * Optional description for the plugin\n   */\n  description?: PluginProperty;\n  /**\n   * Optional shortcut for the plugin\n   */\n  shortcut?: PluginProperty;\n  /**\n   * Optional {@link https://editorjs.io/provide-custom-configuration | custom configuration} to pass to EditorJS\n   */\n  config?: any;\n\n  /**\n   * If a block tool, you can also set this to true if it contains inline tool support\n   */\n  inlineToolbar?: boolean;\n  /**\n   * Optional block data, used to define the block data for this type\n   * and used as a default\n   */\n  blockData?: BlockData;\n  /**\n   * The plugin for the editor\n   */\n  plugin: EditorJSPlugin | undefined;\n}\n\n/**\n * The Injection token for initial plugins as defined in the ngx-editorjs module\n */\nexport const EDITOR_JS_TOOL_INJECTOR = new InjectionToken('EDITOR_JS_TOOL_INJECTOR');\n\n/**\n * Injection token for a plugin config\n */\nexport const PLUGIN_CONFIG = new InjectionToken('PLUGIN_CONFIG');\n\n/**\n * A map of plugin configs\n */\nexport interface PluginConfigMap {\n  /**\n   * A plugin config per key\n   */\n  [key: string]: PluginConfig;\n}\n\n/**\n * Injection token for the plugin config map\n */\nexport const PluginClasses = new InjectionToken('PluginClasses');\n\n    \n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/PluginEmbedModule.html":{"url":"modules/PluginEmbedModule.html","title":"module - PluginEmbedModule","body":"\n                   \n\n\n\n\n    Modules\n    PluginEmbedModule\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            libs/ngx-editorjs/ngx-editorjs-plugins/src/lib/plugins/embed/embed.module.ts\n        \n\n\n        \n            Description\n        \n        \n            A module that provides the default EditorJS  block tool.\nSee the GitHub repo for API details\n\n        \n\n\n        \n            \n            \n        \n\n\n    \n\n\n    \n        import { NgModule } from '@angular/core';\nimport { EDITOR_JS_TOOL_INJECTOR, PLUGIN_CONFIG, PluginTypes } from '../../types/plugins';\nimport Embed from '@editorjs/embed';\n\n/**\n * A module that provides the default EditorJS `` block tool.\n * See [the GitHub repo](https://github.com/editor-js/paragraph) for API details\n */\n@NgModule({\n  providers: [\n    {\n      provide: EDITOR_JS_TOOL_INJECTOR,\n      useValue: Embed,\n      multi: true\n    },\n    {\n      provide: PLUGIN_CONFIG,\n      useValue: {\n        key: 'embed',\n        type: PluginTypes.Block,\n        pluginName: 'EditorJS Embed Block',\n        inlineToolbar: true\n      },\n      multi: true\n    }\n  ]\n})\nexport class PluginEmbedModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/PluginHeaderModule.html":{"url":"modules/PluginHeaderModule.html","title":"module - PluginHeaderModule","body":"\n                   \n\n\n\n\n    Modules\n    PluginHeaderModule\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            libs/ngx-editorjs/ngx-editorjs-plugins/src/lib/plugins/header/header.module.ts\n        \n\n\n        \n            Description\n        \n        \n            A module that provides the default EditorJS header block tool.\nSee the GitHub repo for API details\n\n        \n\n\n        \n            \n            \n        \n\n\n    \n\n\n    \n        import { NgModule } from '@angular/core';\nimport { EDITOR_JS_TOOL_INJECTOR, PLUGIN_CONFIG, PluginTypes } from '../../types/plugins';\nimport Header from '@editorjs/header';\n\n// TODO: Remove once Header plugin has been fixed\n// Override the normalizeData method\nHeader.normalizeData = (data: any = {}) => {\n  const newData: any = {};\n  newData.text = data.text || '';\n  newData.level = parseInt(data.level, 10) || (this as any).defaultLevel.number;\n  return newData;\n};\n\n/**\n * A module that provides the default EditorJS header block tool.\n * See [the GitHub repo](https://github.com/editor-js/header) for API details\n */\n@NgModule({\n  providers: [\n    {\n      provide: EDITOR_JS_TOOL_INJECTOR,\n      useValue: Header,\n      multi: true\n    },\n    {\n      provide: PLUGIN_CONFIG,\n      useValue: {\n        key: 'header',\n        type: PluginTypes.Block,\n        pluginName: 'EditorJS Header'\n      },\n      multi: true\n    }\n  ]\n})\nexport class PluginHeaderModule {\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/PluginImageModule.html":{"url":"modules/PluginImageModule.html","title":"module - PluginImageModule","body":"\n                   \n\n\n\n\n    Modules\n    PluginImageModule\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            libs/ngx-editorjs/ngx-editorjs-plugins/src/lib/plugins/image/image.module.ts\n        \n\n\n        \n            Description\n        \n        \n            A module that provides the default EditorJS  block tool.\nSee the GitHub repo for API details\n\n        \n\n\n        \n            \n            \n        \n\n\n    \n\n\n    \n        import { NgModule } from '@angular/core';\nimport { EDITOR_JS_TOOL_INJECTOR, PLUGIN_CONFIG, PluginClasses, PluginTypes } from '../../types/plugins';\n\nimport Image from '@editorjs/image';\nimport { createPluginConfig } from '../../util/plugin';\n\n/**\n * A module that provides the default EditorJS `` block tool.\n * See [the GitHub repo](https://github.com/editor-js/image) for API details\n */\n@NgModule({\n  providers: [\n    {\n      provide: EDITOR_JS_TOOL_INJECTOR,\n      useValue: Image,\n      multi: true\n    },\n    {\n      provide: PLUGIN_CONFIG,\n      useValue: {\n        key: 'image',\n        type: PluginTypes.Block,\n        pluginName: 'EditorJS Image'\n      },\n      multi: true\n    }\n  ]\n})\nexport class PluginImageModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/PluginInlineCodeModule.html":{"url":"modules/PluginInlineCodeModule.html","title":"module - PluginInlineCodeModule","body":"\n                   \n\n\n\n\n    Modules\n    PluginInlineCodeModule\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            libs/ngx-editorjs/ngx-editorjs-plugins/src/lib/plugins/inline-code/inline-code.module.ts\n        \n\n\n        \n            Description\n        \n        \n            A module that provides the default EditorJS  block tool.\nSee the GitHub repo for API details\n\n        \n\n\n        \n            \n            \n        \n\n\n    \n\n\n    \n        import { NgModule } from '@angular/core';\nimport { EDITOR_JS_TOOL_INJECTOR, PLUGIN_CONFIG, PluginTypes } from '../../types/plugins';\nimport InlineCode from '@editorjs/inline-code';\n\n/**\n * A module that provides the default EditorJS `` block tool.\n * See [the GitHub repo](https://github.com/editor-js/paragraph) for API details\n */\n@NgModule({\n  providers: [\n    {\n      provide: EDITOR_JS_TOOL_INJECTOR,\n      useValue: InlineCode,\n      multi: true\n    },\n    {\n      provide: PLUGIN_CONFIG,\n      useValue: {\n        key: 'inline-code',\n        type: PluginTypes.Inline,\n        pluginName: 'EditorJS Inline Code',\n        shortcut: 'CTRL+SHIFT+C'\n      },\n      multi: true\n    }\n  ]\n})\nexport class PluginInlineCodeModule {\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/PluginLinkModule.html":{"url":"modules/PluginLinkModule.html","title":"module - PluginLinkModule","body":"\n                   \n\n\n\n\n    Modules\n    PluginLinkModule\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            libs/ngx-editorjs/ngx-editorjs-plugins/src/lib/plugins/link/link.module.ts\n        \n\n\n        \n            Description\n        \n        \n            A module that provides the default EditorJS  block tool.\nSee the GitHub repo for API details\n\n        \n\n\n        \n            \n            \n        \n\n\n    \n\n\n    \n        import { NgModule } from '@angular/core';\nimport { EDITOR_JS_TOOL_INJECTOR, PLUGIN_CONFIG, PluginClasses, PluginTypes } from '../../types/plugins';\n\nimport Link from '@editorjs/link';\nimport { createPluginConfig } from '../../util/plugin';\n\n/**\n * A module that provides the default EditorJS `` block tool.\n * See [the GitHub repo](https://github.com/editor-js/image) for API details\n */\n@NgModule({\n  providers: [\n    {\n      provide: EDITOR_JS_TOOL_INJECTOR,\n      useValue: Link,\n      multi: true\n    },\n    {\n      provide: PLUGIN_CONFIG,\n      useValue: {\n        key: 'link',\n        type: PluginTypes.Block,\n        pluginName: 'EditorJS Link'\n      },\n      multi: true\n    }\n  ]\n})\nexport class PluginLinkModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/PluginListModule.html":{"url":"modules/PluginListModule.html","title":"module - PluginListModule","body":"\n                   \n\n\n\n\n    Modules\n    PluginListModule\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            libs/ngx-editorjs/ngx-editorjs-plugins/src/lib/plugins/list/list.module.ts\n        \n\n\n        \n            Description\n        \n        \n            A module that provides the default EditorJS  block tool.\nSee the GitHub repo for API details\n\n        \n\n\n        \n            \n            \n        \n\n\n    \n\n\n    \n        import { NgModule } from '@angular/core';\nimport { EDITOR_JS_TOOL_INJECTOR, PLUGIN_CONFIG, PluginClasses, PluginTypes } from '../../types/plugins';\n\nimport List from '@editorjs/list';\nimport { createPluginConfig } from '../../util/plugin';\n\n/**\n * A module that provides the default EditorJS `` block tool.\n * See [the GitHub repo](https://github.com/editor-js/image) for API details\n */\n@NgModule({\n  providers: [\n    {\n      provide: EDITOR_JS_TOOL_INJECTOR,\n      useValue: List,\n      multi: true\n    },\n    {\n      provide: PLUGIN_CONFIG,\n      useValue: {\n        key: 'list',\n        type: PluginTypes.Block,\n        pluginName: 'EditorJS List'\n      },\n      multi: true\n    }\n  ]\n})\nexport class PluginListModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/PluginMarkerModule.html":{"url":"modules/PluginMarkerModule.html","title":"module - PluginMarkerModule","body":"\n                   \n\n\n\n\n    Modules\n    PluginMarkerModule\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            libs/ngx-editorjs/ngx-editorjs-plugins/src/lib/plugins/marker/marker.module.ts\n        \n\n\n        \n            Description\n        \n        \n            A module that provides the default EditorJS  block tool.\nSee the GitHub repo for API details\n\n        \n\n\n        \n            \n            \n        \n\n\n    \n\n\n    \n        import { NgModule } from '@angular/core';\nimport { EDITOR_JS_TOOL_INJECTOR, PLUGIN_CONFIG, PluginClasses, PluginTypes } from '../../types/plugins';\nimport Marker from '@editorjs/paragraph';\nimport { createPluginConfig } from '../../util/plugin';\n\n/**\n * A module that provides the default EditorJS `` block tool.\n * See [the GitHub repo](https://github.com/editor-js/paragraph) for API details\n */\n@NgModule({\n  providers: [\n    {\n      provide: EDITOR_JS_TOOL_INJECTOR,\n      useValue: Marker,\n      multi: true\n    },\n    {\n      provide: PLUGIN_CONFIG,\n      useValue: {\n        key: 'paragraph',\n        type: PluginTypes.Inline,\n        pluginName: 'EditorJS Marker',\n        shortcut: 'CTRL+SHIFT+M'\n      },\n      multi: true\n    }\n  ]\n})\nexport class PluginMarkerModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/PluginParagraphModule.html":{"url":"modules/PluginParagraphModule.html","title":"module - PluginParagraphModule","body":"\n                   \n\n\n\n\n    Modules\n    PluginParagraphModule\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            libs/ngx-editorjs/ngx-editorjs-plugins/src/lib/plugins/paragraph/paragraph.module.ts\n        \n\n\n        \n            Description\n        \n        \n            A module that provides the default EditorJS  block tool.\nSee the GitHub repo for API details\n\n        \n\n\n        \n            \n            \n        \n\n\n    \n\n\n    \n        import { NgModule } from '@angular/core';\nimport { EDITOR_JS_TOOL_INJECTOR, PLUGIN_CONFIG, PluginTypes } from '../../types/plugins';\nimport Paragraph from '@editorjs/paragraph';\n\n/**\n * A module that provides the default EditorJS `` block tool.\n * See [the GitHub repo](https://github.com/editor-js/paragraph) for API details\n */\n@NgModule({\n  providers: [\n    {\n      provide: EDITOR_JS_TOOL_INJECTOR,\n      useValue: Paragraph,\n      multi: true\n    },\n    {\n      provide: PLUGIN_CONFIG,\n      useValue: {\n        key: 'paragraph',\n        type: PluginTypes.Block,\n        pluginName: 'EditorJS Paragraph'\n      },\n      multi: true\n    }\n  ]\n})\nexport class PluginParagraphModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/PluginQuoteModule.html":{"url":"modules/PluginQuoteModule.html","title":"module - PluginQuoteModule","body":"\n                   \n\n\n\n\n    Modules\n    PluginQuoteModule\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            libs/ngx-editorjs/ngx-editorjs-plugins/src/lib/plugins/quote/quote.module.ts\n        \n\n\n        \n            Description\n        \n        \n            A module that provides the default EditorJS  block tool.\nSee the GitHub repo for API details\n\n        \n\n\n        \n            \n            \n        \n\n\n    \n\n\n    \n        import { NgModule } from '@angular/core';\nimport { EDITOR_JS_TOOL_INJECTOR, PLUGIN_CONFIG, PluginTypes } from '../../types/plugins';\nimport Quote from '@editorjs/quote';\n\n/**\n * A module that provides the default EditorJS `` block tool.\n * See [the GitHub repo](https://github.com/editor-js/paragraph) for API details\n */\n@NgModule({\n  providers: [\n    {\n      provide: EDITOR_JS_TOOL_INJECTOR,\n      useValue: Quote,\n      multi: true\n    },\n    {\n      provide: PLUGIN_CONFIG,\n      useValue: {\n        key: 'quote',\n        type: PluginTypes.Block,\n        pluginName: 'EditorJS Quote Tool',\n        inlineToolbar: true\n      },\n      multi: true\n    }\n  ]\n})\nexport class PluginQuoteModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/PluginSimpleImageModule.html":{"url":"modules/PluginSimpleImageModule.html","title":"module - PluginSimpleImageModule","body":"\n                   \n\n\n\n\n    Modules\n    PluginSimpleImageModule\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            libs/ngx-editorjs/ngx-editorjs-plugins/src/lib/plugins/simple-image/simple-image.module.ts\n        \n\n\n        \n            Description\n        \n        \n            A module that provides the default EditorJS  block tool.\nSee the GitHub repo for API details\n\n        \n\n\n        \n            \n            \n        \n\n\n    \n\n\n    \n        import { NgModule } from '@angular/core';\nimport { EDITOR_JS_TOOL_INJECTOR, PLUGIN_CONFIG, PluginClasses, PluginTypes } from '../../types/plugins';\n\nimport SimpleImage from '@editorjs/simple-image';\nimport { createPluginConfig } from '../../util/plugin';\n\n/**\n * A module that provides the default EditorJS `` block tool.\n * See [the GitHub repo](https://github.com/editor-js/image) for API details\n */\n@NgModule({\n  providers: [\n    {\n      provide: EDITOR_JS_TOOL_INJECTOR,\n      useValue: SimpleImage,\n      multi: true\n    },\n    {\n      provide: PLUGIN_CONFIG,\n      useValue: {\n        key: 'simpleimage',\n        type: PluginTypes.Block,\n        pluginName: 'EditorJS Simple Image'\n      },\n      multi: true\n    }\n  ]\n})\nexport class PluginSimpleImageModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/PluginWarningModule.html":{"url":"modules/PluginWarningModule.html","title":"module - PluginWarningModule","body":"\n                   \n\n\n\n\n    Modules\n    PluginWarningModule\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            libs/ngx-editorjs/ngx-editorjs-plugins/src/lib/plugins/warning/warning.module.ts\n        \n\n\n        \n            Description\n        \n        \n            A module that provides the default EditorJS  block tool.\nSee the GitHub repo for API details\n\n        \n\n\n        \n            \n            \n        \n\n\n    \n\n\n    \n        import { NgModule } from '@angular/core';\nimport { EDITOR_JS_TOOL_INJECTOR, PLUGIN_CONFIG, PluginTypes } from '../../types/plugins';\nimport Warning from '@editorjs/warning';\n\n/**\n * A module that provides the default EditorJS `` block tool.\n * See [the GitHub repo](https://github.com/editor-js/paragraph) for API details\n */\n@NgModule({\n  providers: [\n    {\n      provide: EDITOR_JS_TOOL_INJECTOR,\n      useValue: Warning,\n      multi: true\n    },\n    {\n      provide: PLUGIN_CONFIG,\n      useValue: {\n        key: 'warning',\n        type: PluginTypes.Block,\n        pluginName: 'EditorJS Warning Block',\n        inlineToolbar: true\n      },\n      multi: true\n    }\n  ]\n})\nexport class PluginWarningModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/ReadyMap.html":{"url":"interfaces/ReadyMap.html","title":"interface - ReadyMap","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  ReadyMap\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            libs/ngx-editorjs/ngx-editorjs/src/lib/types/maps.ts\n        \n\n            \n                Description\n            \n            \n                A map containing BehaviorSubject values of the ready state of EditorJS\n\n            \n\n\n\n\n            \n    Indexable\n        \n            \n                \n                    \n                        [key: string]:    BehaviorSubject\n\n                    \n                \n                        \n                            \n                                Defined in libs/ngx-editorjs/ngx-editorjs/src/lib/types/maps.ts:18\n                            \n                        \n                \n                    \n                        A map key containing a BehaviorSubject\n\n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import EditorJS, { OutputData } from '@editorjs/editorjs';\nimport { BehaviorSubject } from 'rxjs';\nimport { Block } from './blocks';\n\n/**\n * A map containing instances of `BehaviorSubject`\n */\nexport interface EditorMap {\n  /**\n   * A map key containing `BehaviorSubject`\n   */\n  [key: string]: BehaviorSubject;\n}\n\n/**\n * A map containing `BehaviorSubject` values of the ready state of EditorJS\n */\nexport interface ReadyMap {\n  /**\n   * A map key containing a `BehaviorSubject`\n   */\n  [key: string]: BehaviorSubject;\n}\n\n/**\n * A map containing `BehaviorSubject` values of the save state of EditorJS\n */\nexport interface SavedMap {\n  /**\n   * A map key containing a `BehaviorSubject`\n   */\n  [key: string]: BehaviorSubject;\n}\n\n/**\n * An EditorJS change event\n */\nexport interface EditorJSChange {\n  /**\n   * Time of the change\n   */\n  time: number;\n  /**\n   * Blocks in the change\n   */\n  blocks: Block[];\n}\n\n/**\n * A map containing `BehaviorSubject` which is the last save from the EditorJS instance\n */\nexport interface ChangeMap {\n  /**\n   * A map key containing a `BehaviorSubject`\n   */\n  [key: string]: BehaviorSubject;\n}\n\n    \n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/SavedMap.html":{"url":"interfaces/SavedMap.html","title":"interface - SavedMap","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  SavedMap\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            libs/ngx-editorjs/ngx-editorjs/src/lib/types/maps.ts\n        \n\n            \n                Description\n            \n            \n                A map containing BehaviorSubject values of the save state of EditorJS\n\n            \n\n\n\n\n            \n    Indexable\n        \n            \n                \n                    \n                        [key: string]:    BehaviorSubject\n\n                    \n                \n                        \n                            \n                                Defined in libs/ngx-editorjs/ngx-editorjs/src/lib/types/maps.ts:28\n                            \n                        \n                \n                    \n                        A map key containing a BehaviorSubject\n\n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import EditorJS, { OutputData } from '@editorjs/editorjs';\nimport { BehaviorSubject } from 'rxjs';\nimport { Block } from './blocks';\n\n/**\n * A map containing instances of `BehaviorSubject`\n */\nexport interface EditorMap {\n  /**\n   * A map key containing `BehaviorSubject`\n   */\n  [key: string]: BehaviorSubject;\n}\n\n/**\n * A map containing `BehaviorSubject` values of the ready state of EditorJS\n */\nexport interface ReadyMap {\n  /**\n   * A map key containing a `BehaviorSubject`\n   */\n  [key: string]: BehaviorSubject;\n}\n\n/**\n * A map containing `BehaviorSubject` values of the save state of EditorJS\n */\nexport interface SavedMap {\n  /**\n   * A map key containing a `BehaviorSubject`\n   */\n  [key: string]: BehaviorSubject;\n}\n\n/**\n * An EditorJS change event\n */\nexport interface EditorJSChange {\n  /**\n   * Time of the change\n   */\n  time: number;\n  /**\n   * Blocks in the change\n   */\n  blocks: Block[];\n}\n\n/**\n * A map containing `BehaviorSubject` which is the last save from the EditorJS instance\n */\nexport interface ChangeMap {\n  /**\n   * A map key containing a `BehaviorSubject`\n   */\n  [key: string]: BehaviorSubject;\n}\n\n    \n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/Tag.html":{"url":"interfaces/Tag.html","title":"interface - Tag","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  Tag\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            libs/ngx-editorjs/ngx-editorjs-demo/src/lib/store/pages/pages.models.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        key\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        key\n                                    \n                                \n                                \n                                    \n                                        key:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { ID } from '@datorama/akita';\nimport { Block } from '@tinynodes/ngx-editorjs';\n\nexport interface Tag {\n  key: string;\n}\n\nexport interface PageBlock extends Block {\n  id: ID;\n}\n\nexport interface Page {\n  id: ID;\n  pageTitle: string;\n  pageTags: Tag[];\n  blocks: PageBlock[];\n}\n\n    \n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/ToolSettingsMap.html":{"url":"interfaces/ToolSettingsMap.html","title":"interface - ToolSettingsMap","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  ToolSettingsMap\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            libs/ngx-editorjs/ngx-editorjs-plugins/src/lib/types/plugins.ts\n        \n\n            \n                Description\n            \n            \n                A map of all the tools settings\n\n            \n\n\n\n\n            \n    Indexable\n        \n            \n                \n                    \n                        [key: string]:        EditorJSPlugin\n\n                    \n                \n                        \n                            \n                                Defined in libs/ngx-editorjs/ngx-editorjs-plugins/src/lib/types/plugins.ts:43\n                            \n                        \n                \n                    \n                        The key of the plugin and the plugin exported tool settings\n\n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { InjectionToken } from '@angular/core';\nimport { ToolSettings, ToolConstructable } from '@editorjs/editorjs';\n\n/**\n * Block Data interface\n */\nexport interface BlockData {\n  [key: string]: any;\n}\n\n/**\n * The types of plugins supported, currently block and inline\n */\nexport enum PluginTypes {\n  /**\n   * A EditorJS block plugin\n   */\n  Block = 'block',\n  /**\n   * A EditorJS inline plugin\n   */\n  Inline = 'inline'\n}\n\n/**\n * The types of plugins supported via the plugin `type` property\n */\nexport type PluginType = PluginTypes.Block | PluginTypes.Inline | string;\n\n/**\n * A plugin property\n */\nexport type PluginProperty = string;\n\n/**\n * The EditorJS tool settings for this plugin\n */\nexport type EditorJSPlugin = ToolConstructable | ToolSettings;\n\n/**\n * A map of all the tools settings\n */\nexport interface ToolSettingsMap {\n  /**\n   * The key of the plugin and the plugin exported tool settings\n   */\n  [key: string]: EditorJSPlugin;\n}\n\n/**\n * A plugin configuration object\n */\nexport interface PluginConfig {\n  /**\n   * Specifies the type of plugin for the plugin provider\n   */\n  type: PluginProperty;\n  /**\n   * The key to use for the plugin\n   */\n  key: PluginProperty;\n  /**\n   * Label for displaying the plugin name\n   */\n  pluginName: PluginProperty;\n  /**\n   * Optional description for the plugin\n   */\n  description?: PluginProperty;\n  /**\n   * Optional shortcut for the plugin\n   */\n  shortcut?: PluginProperty;\n  /**\n   * Optional {@link https://editorjs.io/provide-custom-configuration | custom configuration} to pass to EditorJS\n   */\n  config?: any;\n\n  /**\n   * If a block tool, you can also set this to true if it contains inline tool support\n   */\n  inlineToolbar?: boolean;\n  /**\n   * Optional block data, used to define the block data for this type\n   * and used as a default\n   */\n  blockData?: BlockData;\n  /**\n   * The plugin for the editor\n   */\n  plugin: EditorJSPlugin | undefined;\n}\n\n/**\n * The Injection token for initial plugins as defined in the ngx-editorjs module\n */\nexport const EDITOR_JS_TOOL_INJECTOR = new InjectionToken('EDITOR_JS_TOOL_INJECTOR');\n\n/**\n * Injection token for a plugin config\n */\nexport const PLUGIN_CONFIG = new InjectionToken('PLUGIN_CONFIG');\n\n/**\n * A map of plugin configs\n */\nexport interface PluginConfigMap {\n  /**\n   * A plugin config per key\n   */\n  [key: string]: PluginConfig;\n}\n\n/**\n * Injection token for the plugin config map\n */\nexport const PluginClasses = new InjectionToken('PluginClasses');\n\n    \n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"changelog.html":{"url":"changelog.html","title":"getting-started - changelog","body":"\n                   \n\nTinynodes Changelog\n\nThis changelog is related to the overall site. You can also find changelogs for libraries under the library docs\n\n\nUNRELEASED\nToday @tinynodes/ngx-editorjs@3.0.0 has been released, along with @tinynodes/ngx-editorjs-plugins@2.0.0\nThe plugin architecture of the components has been re-written so that plugins are just NgModule classes\nthat provide multi providers for injecting plugins and their configuration.  These are merged into a map\nthat the NgxEditorJSPluginService now provides, and provides methods to getting tool options for instances.\nThis means the plugin module is now a dependency of the project.\nInternally there is some tidy-up related to this, and better async/await handling of the instance creation\nalong with API calls.  The Material demo \nhas been updated as well with improvements on using the component in an application.\nWednesday, 22nd May 2019\nToday @tinynodes/ngx-editorjs@2.0.0 has been released. The major bump is due to underlying changes that may be breaking - the entire service has been improved with better control over the EditorJS interface. Also in this release the exiting component has been upgraded to work with Angular Forms, and there is a new Material Form Field component provided too.\nThe demo has also been updated to reflect the new features of this, and a new demo added for the Material component.\nWednesday, 15th May 2019\nToday I have released @tinynodes/ngx-editorjs@1.3.2. This will be without a Forms component. In this release the main change is internally I'm using a new EditorJS Injector module I've created to handle managing the underlying instance. There are also a lot of documentation improvements and a completly new updated demo site.\nMonday, 13th May 2019\nToday I have released @tinynodes/ngx-editorjs@1.2.0. For now I've removed any default plugins from core package, now all plugins must be added at the application level - this can be see in the demo app.\nSunday, 12th May 2019\nThe first devlog is to report that currently version 1.2 has been delayed due to current build issues.\nA bug report has been filed on @nrwl/nx project.\nIn 1.2 there is a new @tinynodes/ngx-editorjs-plugins module that provides exports for several common EditorJS plugins and will be expanded to cover all the officially released plugins.\nWith this change the current build scripts break, and until it is resolved this will block the release.\nIn the meantime I'll continue to work on this small demo site, making it more useful as a good example of an Angular app.\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"contributing.html":{"url":"contributing.html","title":"getting-started - contributing","body":"\n                   \n\nContributing\nWhen contributing to this repository, please first discuss the change you wish to make via issue,\nemail, or any other method with the owners of this repository before making a change.\nPlease note we have a code of conduct, please follow it in all your interactions with the project.\nPull Request Process\n\nEnsure any install or build dependencies are removed before the end of the layer when doing a\nbuild.\nUpdate the README.md with details of changes to the interface, this includes new environment\nvariables, exposed ports, useful file locations and container parameters.\nIncrease the version numbers in any examples files and the README.md to the new version that this\nPull Request would represent. The versioning scheme we use is SemVer.\nYou may merge the Pull Request in once you have the sign-off of two other developers, or if you\ndo not have permission to do that, you may request the second reviewer to merge it for you.\n\nCode of Conduct\nOur Pledge\nIn the interest of fostering an open and welcoming environment, we as\ncontributors and maintainers pledge to making participation in our project and\nour community a harassment-free experience for everyone, regardless of age, body\nsize, disability, ethnicity, gender identity and expression, level of experience,\nnationality, personal appearance, race, religion, or sexual identity and\norientation.\nOur Standards\nExamples of behavior that contributes to creating a positive environment\ninclude:\n\nUsing welcoming and inclusive language\nBeing respectful of differing viewpoints and experiences\nGracefully accepting constructive criticism\nFocusing on what is best for the community\nShowing empathy towards other community members\n\nExamples of unacceptable behavior by participants include:\n\nThe use of sexualized language or imagery and unwelcome sexual attention or\nadvances\nTrolling, insulting/derogatory comments, and personal or political attacks\nPublic or private harassment\nPublishing others' private information, such as a physical or electronic\naddress, without explicit permission\nOther conduct which could reasonably be considered inappropriate in a\nprofessional setting\n\nOur Responsibilities\nProject maintainers are responsible for clarifying the standards of acceptable\nbehavior and are expected to take appropriate and fair corrective action in\nresponse to any instances of unacceptable behavior.\nProject maintainers have the right and responsibility to remove, edit, or\nreject comments, commits, code, wiki edits, issues, and other contributions\nthat are not aligned to this Code of Conduct, or to ban temporarily or\npermanently any contributor for other behaviors that they deem inappropriate,\nthreatening, offensive, or harmful.\nScope\nThis Code of Conduct applies both within project spaces and in public spaces\nwhen an individual is representing the project or its community. Examples of\nrepresenting a project or community include using an official project e-mail\naddress, posting via an official social media account, or acting as an appointed\nrepresentative at an online or offline event. Representation of a project may be\nfurther defined and clarified by project maintainers.\nEnforcement\nInstances of abusive, harassing, or otherwise unacceptable behavior may be\nreported by contacting the project team at me@tane.dev. All\ncomplaints will be reviewed and investigated and will result in a response that\nis deemed necessary and appropriate to the circumstances. The project team is\nobligated to maintain confidentiality with regard to the reporter of an incident.\nFurther details of specific enforcement policies may be posted separately.\nProject maintainers who do not follow or enforce the Code of Conduct in good\nfaith may face temporary or permanent repercussions as determined by other\nmembers of the project's leadership.\nAttribution\nThis Code of Conduct is adapted from the Contributor Covenant, version 1.4,\navailable at http://contributor-covenant.org/version/1/4\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"dependencies.html":{"url":"dependencies.html","title":"package-dependencies - dependencies","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        Dependencies\n    \n    \n        \n            @angular/animations : ~8.0.0\n        \n            @angular/cdk : ~8.0.1\n        \n            @angular/common : ~8.0.0\n        \n            @angular/compiler : ~8.0.0\n        \n            @angular/core : ~8.0.0\n        \n            @angular/flex-layout : ~8.0.0-beta.26\n        \n            @angular/forms : ~8.0.0\n        \n            @angular/material : ~8.0.1\n        \n            @angular/platform-browser : ~8.0.0\n        \n            @angular/platform-browser-dynamic : ~8.0.0\n        \n            @angular/router : ~8.0.0\n        \n            @ngrx/effects : ~8.0.1\n        \n            @ngrx/store : ~8.0.1\n        \n            core-js : ~3.1.3\n        \n            hammerjs : ~2.0.8\n        \n            install : ~0.12.2\n        \n            ngx-hideable-header : 0.0.5\n        \n            ngx-json-viewer : ~2.4.0\n        \n            npm : ~6.9.0\n        \n            rxjs : ~6.5.2\n        \n            zone.js : ~0.9.1\n    \n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/enumerations.html":{"url":"miscellaneous/enumerations.html","title":"miscellaneous-enumerations - enumerations","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous\n  Enumerations\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            PluginTypes   (libs/.../plugins.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    libs/ngx-editorjs/ngx-editorjs-plugins/src/lib/types/plugins.ts\n    \n        \n            \n                \n                    \n                        \n                        PluginTypes\n                    \n                \n                    \n                        \n                            The types of plugins supported, currently block and inline\n\n                        \n                    \n                        \n                            \n                                 Block\n                            \n                        \n                        \n                            \n                                Value : block\n                            \n                        \n                        \n                            \n                                 Inline\n                            \n                        \n                        \n                            \n                                Value : inline\n                            \n                        \n            \n        \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/functions.html":{"url":"miscellaneous/functions.html","title":"miscellaneous-functions - functions","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous\n  Functions\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            createEditorJSConfig   (libs/.../editor-config.ts)\n                        \n                        \n                            createEditorJSInstance   (libs/.../ngx-editorjs.module.ts)\n                        \n                        \n                            createModuleConfig   (libs/.../module-config.ts)\n                        \n                        \n                            createPluginConfig   (libs/.../plugin.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    libs/ngx-editorjs/ngx-editorjs/src/lib/config/editor-config.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        \n                            createEditorJSConfig\n                        \n                        \n                    \n                \n            \n            \n                \ncreateEditorJSConfig(inputConfig?)\n                \n            \n\n\n\n\n            \n                \n                    Creates an EditorJS configuration, only returning keys that are set\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    inputConfig\n\n                                    \n                                        Yes\n                                    \n\n\n                                    \n                                        Optional config to use to set values\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     EditorConfig\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    libs/ngx-editorjs/ngx-editorjs/src/lib/ngx-editorjs.module.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        \n                            createEditorJSInstance\n                        \n                        \n                    \n                \n            \n            \n                \ncreateEditorJSInstance(editorjs: any)\n                \n            \n\n\n\n\n            \n                \n                    Factory function to return the EditorJS base class\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    editorjs\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                \n            \n        \n    \n    libs/ngx-editorjs/ngx-editorjs/src/lib/config/module-config.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        \n                            createModuleConfig\n                        \n                        \n                    \n                \n            \n            \n                \ncreateModuleConfig(config?)\n                \n            \n\n\n\n\n            \n                \n                    Method to return an module configuration\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    config\n\n                                    \n                                        Yes\n                                    \n\n\n                                    \n                                        Optional module configurations\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         NgxEditorJSModuleConfig\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    libs/ngx-editorjs/ngx-editorjs-plugins/src/lib/util/plugin.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        \n                            createPluginConfig\n                        \n                        \n                    \n                \n            \n            \n                \ncreatePluginConfig(pluginConfigs, plugins)\n                \n            \n\n\n\n\n            \n                \n                    Factory function to create the plugin config map for the plugin service\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    pluginConfigs\n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        The array of plugin configuration objects passed to this factory\n\n                                    \n                                \n                                \n                                    plugins\n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        The array of EditorJS plugins that are passed to this factory\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                \n            \n        \n    \n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"index.html":{"url":"index.html","title":"getting-started - index","body":"\n                   \n\nNgx-Tinynodes\nThis repository is a collection of Angular components and demos with full documentation.\nSee the Changelog for the\ndevelopment diary of this site, or visit the documentation of libraries.\nYou can also find a fully searchable API documentation for all @tinynode components.\nLinks\n\nRepository\nDocumentation\nDemo Application Site\nNPM Collection\n\nLibraries\nngx-editorjs\nThis library provides Angular support for EditorJS. Inside the module you will find:\n\nNgxEditorJSDirective - An Angular Directive used to attach an EditorJS instance to any block DOM element\nNgxEditorJSComponent - An out-of-the-box Angular component that is Reactive Forms compatible\nNgxEditorJSMaterialFieldComponent An Angular Material Form Field component that provides all the required properties and life-cycle events required. See the Form Demo on an example usage\nNgxEditorJSService - A Service that can be injected into an application to provide a interface to interact with EditorJS instances. Underneath are the private NgxEditorJSPluginService and NgxEditorJSInstanceService services. These are private but can be imported via ɵNgxEditorJSPluginService and ɵNgxEditorJSInstanceService from the library if you want to use them.\n\nWithin these components you will be able to access the underlying EditorJS instance, for use see the EditorJS API Docs\nBelow are the dependencies to use the features.\n@tinynodes/ngx-editorjs\nThis project provides a set of features for using EditorJS within Angular 7+\n\nReadme\nChangelog\nDemo\nProject Folder\n\n@tinynodes/ngx-editorjs-plugins\nThis project provides the plugin service module that exports handles\n plugins for @tinynodes/ngx-editorjs. The module also ships a set of default\n plugins and documentation on how to add new ones easily.\n\nReadme\nChangelog\nProject Folder\n\nDevelopment Information\nThis repository is run by Tane Piper and was generated using Nx.\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"license.html":{"url":"license.html","title":"getting-started - license","body":"\n                   \n\nTinynodes General MIT Licence\nCopyright 2019 Tane Piper me@tane.dev\nPermission is hereby granted, free of charge, to any person obtaining a copy of this software and associated documentation files (the \"Software\"), to deal in the Software without restriction, including without limitation the rights to use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of the Software, and to permit persons to whom the Software is furnished to do so, subject to the following conditions:\nThe above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software.\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules.html":{"url":"modules.html","title":"modules - modules","body":"\n                   \n\n\n\n\n    Modules\n\n\n    \n            \n                \n                    \n                        NgxEditorJSDemoMaterialModule\n                    \n                    \n                                \n                                    No graph available.\n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        NgxEditorJSDemoMaterialModule\n                    \n                    \n                                \n                                    No graph available.\n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        NgxEditorjsDemoModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        NgxEditorJSModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        NgxEditorJSPluginServiceModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        NgxEditorjsPluginsModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        NgxTinynodesComponentsModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        NgxTinynodesMaterialFormFieldDemo\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        NgxTinynodesMatJsonOutputModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        NgxTinynodesMatTagInputModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        PageStoreModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        PluginCodeModule\n                    \n                    \n                                \n                                    No graph available.\n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        PluginEmbedModule\n                    \n                    \n                                \n                                    No graph available.\n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        PluginEmbedModule\n                    \n                    \n                                \n                                    No graph available.\n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        PluginHeaderModule\n                    \n                    \n                                \n                                    No graph available.\n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        PluginImageModule\n                    \n                    \n                                \n                                    No graph available.\n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        PluginInlineCodeModule\n                    \n                    \n                                \n                                    No graph available.\n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        PluginLinkModule\n                    \n                    \n                                \n                                    No graph available.\n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        PluginListModule\n                    \n                    \n                                \n                                    No graph available.\n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        PluginMarkerModule\n                    \n                    \n                                \n                                    No graph available.\n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        PluginParagraphModule\n                    \n                    \n                                \n                                    No graph available.\n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        PluginQuoteModule\n                    \n                    \n                                \n                                    No graph available.\n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        PluginSimpleImageModule\n                    \n                    \n                                \n                                    No graph available.\n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        PluginWarningModule\n                    \n                    \n                                \n                                    No graph available.\n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"overview.html":{"url":"overview.html","title":"overview - overview","body":"\n                   \n\n\n\n    Overview\n\n  \n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_NgxEditorjsDemoModule\n\n\n\ncluster_NgxEditorjsDemoModule_declarations\n\n\n\ncluster_NgxEditorjsDemoModule_imports\n\n\n\ncluster_NgxEditorjsDemoModule_exports\n\n\n\ncluster_NgxEditorJSModule\n\n\n\ncluster_NgxEditorJSModule_declarations\n\n\n\ncluster_NgxEditorJSModule_exports\n\n\n\ncluster_NgxEditorJSModule_providers\n\n\n\ncluster_NgxEditorJSPluginServiceModule\n\n\n\ncluster_NgxEditorJSPluginServiceModule_providers\n\n\n\ncluster_NgxEditorjsPluginsModule\n\n\n\ncluster_NgxEditorjsPluginsModule_imports\n\n\n\ncluster_NgxEditorjsPluginsModule_exports\n\n\n\ncluster_NgxTinynodesComponentsModule\n\n\n\ncluster_NgxTinynodesComponentsModule_imports\n\n\n\ncluster_NgxTinynodesComponentsModule_exports\n\n\n\ncluster_NgxTinynodesMaterialFormFieldDemo\n\n\n\ncluster_NgxTinynodesMaterialFormFieldDemo_declarations\n\n\n\ncluster_NgxTinynodesMatJsonOutputModule\n\n\n\ncluster_NgxTinynodesMatJsonOutputModule_declarations\n\n\n\ncluster_NgxTinynodesMatJsonOutputModule_exports\n\n\n\ncluster_NgxTinynodesMatTagInputModule\n\n\n\ncluster_NgxTinynodesMatTagInputModule_declarations\n\n\n\ncluster_NgxTinynodesMatTagInputModule_NgxTinynodesMatTagInputComponent_providers\n\n\n\ncluster_NgxTinynodesMatTagInputModule_exports\n\n\n\ncluster_PageStoreModule\n\n\n\ncluster_PageStoreModule_providers\n\n\n\n\nNgxEditorJSDemoHomeComponent\n\nNgxEditorJSDemoHomeComponent\n\n\n\nNgxEditorjsDemoModule\n\nNgxEditorjsDemoModule\n\nNgxEditorjsDemoModule -->\n\nNgxEditorJSDemoHomeComponent->NgxEditorjsDemoModule\n\n\n\n\n\nPageContainerComponent\n\nPageContainerComponent\n\nNgxEditorjsDemoModule -->\n\nPageContainerComponent->NgxEditorjsDemoModule\n\n\n\n\n\nPageContainerComponent \n\nPageContainerComponent \n\nPageContainerComponent  -->\n\nNgxEditorjsDemoModule->PageContainerComponent \n\n\n\n\n\nPageStoreModule \n\nPageStoreModule \n\nPageStoreModule  -->\n\nNgxEditorjsDemoModule->PageStoreModule \n\n\n\n\n\nNgxEditorJSDemoMaterialModule\n\nNgxEditorJSDemoMaterialModule\n\nNgxEditorjsDemoModule -->\n\nNgxEditorJSDemoMaterialModule->NgxEditorjsDemoModule\n\n\n\n\n\nNgxTinynodesMaterialFormFieldDemo\n\nNgxTinynodesMaterialFormFieldDemo\n\nNgxTinynodesMaterialFormFieldDemo -->\n\nNgxEditorJSDemoMaterialModule->NgxTinynodesMaterialFormFieldDemo\n\n\n\n\n\nNgxEditorJSModule\n\nNgxEditorJSModule\n\nNgxEditorjsDemoModule -->\n\nNgxEditorJSModule->NgxEditorjsDemoModule\n\n\n\n\n\nNgxEditorJSComponent \n\nNgxEditorJSComponent \n\nNgxEditorJSComponent  -->\n\nNgxEditorJSModule->NgxEditorJSComponent \n\n\n\n\n\nNgxEditorJSDirective \n\nNgxEditorJSDirective \n\nNgxEditorJSDirective  -->\n\nNgxEditorJSModule->NgxEditorJSDirective \n\n\n\n\n\nNgxEditorJSMatFieldComponent \n\nNgxEditorJSMatFieldComponent \n\nNgxEditorJSMatFieldComponent  -->\n\nNgxEditorJSModule->NgxEditorJSMatFieldComponent \n\n\n\nNgxTinynodesMaterialFormFieldDemo -->\n\nNgxEditorJSModule->NgxTinynodesMaterialFormFieldDemo\n\n\n\n\n\nNgxEditorjsPluginsModule\n\nNgxEditorjsPluginsModule\n\nNgxEditorjsDemoModule -->\n\nNgxEditorjsPluginsModule->NgxEditorjsDemoModule\n\n\n\n\n\nNgxEditorJSPluginServiceModule \n\nNgxEditorJSPluginServiceModule \n\nNgxEditorJSPluginServiceModule  -->\n\nNgxEditorjsPluginsModule->NgxEditorJSPluginServiceModule \n\n\n\n\n\nPluginCodeModule \n\nPluginCodeModule \n\nPluginCodeModule  -->\n\nNgxEditorjsPluginsModule->PluginCodeModule \n\n\n\n\n\nPluginEmbedModule \n\nPluginEmbedModule \n\nPluginEmbedModule  -->\n\nNgxEditorjsPluginsModule->PluginEmbedModule \n\n\n\n\n\nPluginHeaderModule \n\nPluginHeaderModule \n\nPluginHeaderModule  -->\n\nNgxEditorjsPluginsModule->PluginHeaderModule \n\n\n\n\n\nPluginImageModule \n\nPluginImageModule \n\nPluginImageModule  -->\n\nNgxEditorjsPluginsModule->PluginImageModule \n\n\n\n\n\nPluginInlineCodeModule \n\nPluginInlineCodeModule \n\nPluginInlineCodeModule  -->\n\nNgxEditorjsPluginsModule->PluginInlineCodeModule \n\n\n\n\n\nPluginLinkModule \n\nPluginLinkModule \n\nPluginLinkModule  -->\n\nNgxEditorjsPluginsModule->PluginLinkModule \n\n\n\n\n\nPluginListModule \n\nPluginListModule \n\nPluginListModule  -->\n\nNgxEditorjsPluginsModule->PluginListModule \n\n\n\n\n\nPluginMarkerModule \n\nPluginMarkerModule \n\nPluginMarkerModule  -->\n\nNgxEditorjsPluginsModule->PluginMarkerModule \n\n\n\n\n\nPluginParagraphModule \n\nPluginParagraphModule \n\nPluginParagraphModule  -->\n\nNgxEditorjsPluginsModule->PluginParagraphModule \n\n\n\n\n\nPluginQuoteModule \n\nPluginQuoteModule \n\nPluginQuoteModule  -->\n\nNgxEditorjsPluginsModule->PluginQuoteModule \n\n\n\n\n\nPluginSimpleImageModule \n\nPluginSimpleImageModule \n\nPluginSimpleImageModule  -->\n\nNgxEditorjsPluginsModule->PluginSimpleImageModule \n\n\n\n\n\nPluginWarningModule \n\nPluginWarningModule \n\nPluginWarningModule  -->\n\nNgxEditorjsPluginsModule->PluginWarningModule \n\n\n\n\n\nPageStoreModule\n\nPageStoreModule\n\nNgxEditorjsDemoModule -->\n\nPageStoreModule->NgxEditorjsDemoModule\n\n\n\nNgxTinynodesMaterialFormFieldDemo -->\n\nPageStoreModule->NgxTinynodesMaterialFormFieldDemo\n\n\n\n\n\nNgxEditorJSComponent\n\nNgxEditorJSComponent\n\nNgxEditorJSModule -->\n\nNgxEditorJSComponent->NgxEditorJSModule\n\n\n\n\n\nNgxEditorJSDirective\n\nNgxEditorJSDirective\n\nNgxEditorJSModule -->\n\nNgxEditorJSDirective->NgxEditorJSModule\n\n\n\n\n\nNgxEditorJSMatFieldComponent\n\nNgxEditorJSMatFieldComponent\n\nNgxEditorJSModule -->\n\nNgxEditorJSMatFieldComponent->NgxEditorJSModule\n\n\n\n\n\nNgxEditorJSService\n\nNgxEditorJSService\n\nNgxEditorJSModule -->\n\nNgxEditorJSService->NgxEditorJSModule\n\n\n\n\n\nNgxEditorJSPluginService\n\nNgxEditorJSPluginService\n\n\n\nNgxEditorJSPluginServiceModule\n\nNgxEditorJSPluginServiceModule\n\nNgxEditorJSPluginServiceModule -->\n\nNgxEditorJSPluginService->NgxEditorJSPluginServiceModule\n\n\n\nNgxEditorjsPluginsModule -->\n\nNgxEditorJSPluginServiceModule->NgxEditorjsPluginsModule\n\n\n\n\n\nPluginCodeModule\n\nPluginCodeModule\n\nNgxEditorjsPluginsModule -->\n\nPluginCodeModule->NgxEditorjsPluginsModule\n\n\n\nNgxTinynodesMaterialFormFieldDemo -->\n\nPluginCodeModule->NgxTinynodesMaterialFormFieldDemo\n\n\n\n\n\nPluginEmbedModule\n\nPluginEmbedModule\n\nNgxEditorjsPluginsModule -->\n\nPluginEmbedModule->NgxEditorjsPluginsModule\n\n\n\n\n\nPluginHeaderModule\n\nPluginHeaderModule\n\nNgxEditorjsPluginsModule -->\n\nPluginHeaderModule->NgxEditorjsPluginsModule\n\n\n\nNgxTinynodesMaterialFormFieldDemo -->\n\nPluginHeaderModule->NgxTinynodesMaterialFormFieldDemo\n\n\n\n\n\nPluginImageModule\n\nPluginImageModule\n\nNgxEditorjsPluginsModule -->\n\nPluginImageModule->NgxEditorjsPluginsModule\n\n\n\n\n\nPluginInlineCodeModule\n\nPluginInlineCodeModule\n\nNgxEditorjsPluginsModule -->\n\nPluginInlineCodeModule->NgxEditorjsPluginsModule\n\n\n\n\n\nPluginLinkModule\n\nPluginLinkModule\n\nNgxEditorjsPluginsModule -->\n\nPluginLinkModule->NgxEditorjsPluginsModule\n\n\n\nNgxTinynodesMaterialFormFieldDemo -->\n\nPluginLinkModule->NgxTinynodesMaterialFormFieldDemo\n\n\n\n\n\nPluginListModule\n\nPluginListModule\n\nNgxEditorjsPluginsModule -->\n\nPluginListModule->NgxEditorjsPluginsModule\n\n\n\nNgxTinynodesMaterialFormFieldDemo -->\n\nPluginListModule->NgxTinynodesMaterialFormFieldDemo\n\n\n\n\n\nPluginMarkerModule\n\nPluginMarkerModule\n\nNgxEditorjsPluginsModule -->\n\nPluginMarkerModule->NgxEditorjsPluginsModule\n\n\n\nNgxTinynodesMaterialFormFieldDemo -->\n\nPluginMarkerModule->NgxTinynodesMaterialFormFieldDemo\n\n\n\n\n\nPluginParagraphModule\n\nPluginParagraphModule\n\nNgxEditorjsPluginsModule -->\n\nPluginParagraphModule->NgxEditorjsPluginsModule\n\n\n\nNgxTinynodesMaterialFormFieldDemo -->\n\nPluginParagraphModule->NgxTinynodesMaterialFormFieldDemo\n\n\n\n\n\nPluginQuoteModule\n\nPluginQuoteModule\n\nNgxEditorjsPluginsModule -->\n\nPluginQuoteModule->NgxEditorjsPluginsModule\n\n\n\n\n\nPluginSimpleImageModule\n\nPluginSimpleImageModule\n\nNgxEditorjsPluginsModule -->\n\nPluginSimpleImageModule->NgxEditorjsPluginsModule\n\n\n\nNgxTinynodesMaterialFormFieldDemo -->\n\nPluginSimpleImageModule->NgxTinynodesMaterialFormFieldDemo\n\n\n\n\n\nPluginWarningModule\n\nPluginWarningModule\n\nNgxEditorjsPluginsModule -->\n\nPluginWarningModule->NgxEditorjsPluginsModule\n\n\n\n\n\nNgxTinynodesMatJsonOutputModule\n\nNgxTinynodesMatJsonOutputModule\n\n\n\nNgxTinynodesComponentsModule\n\nNgxTinynodesComponentsModule\n\nNgxTinynodesComponentsModule -->\n\nNgxTinynodesMatJsonOutputModule->NgxTinynodesComponentsModule\n\n\n\n\n\nNgxTinynodesMatJsonOutputComponent \n\nNgxTinynodesMatJsonOutputComponent \n\nNgxTinynodesMatJsonOutputComponent  -->\n\nNgxTinynodesMatJsonOutputModule->NgxTinynodesMatJsonOutputComponent \n\n\n\n\n\nNgxTinynodesMatTagInputModule\n\nNgxTinynodesMatTagInputModule\n\nNgxTinynodesComponentsModule -->\n\nNgxTinynodesMatTagInputModule->NgxTinynodesComponentsModule\n\n\n\n\n\nNgxTinynodesMatTagInputComponent \n\nNgxTinynodesMatTagInputComponent \n\nNgxTinynodesMatTagInputComponent  -->\n\nNgxTinynodesMatTagInputModule->NgxTinynodesMatTagInputComponent \n\n\n\n\n\nNgxTinynodesMatJsonOutputModule \n\nNgxTinynodesMatJsonOutputModule \n\nNgxTinynodesMatJsonOutputModule  -->\n\nNgxTinynodesComponentsModule->NgxTinynodesMatJsonOutputModule \n\n\n\n\n\nNgxTinynodesMatTagInputModule \n\nNgxTinynodesMatTagInputModule \n\nNgxTinynodesMatTagInputModule  -->\n\nNgxTinynodesComponentsModule->NgxTinynodesMatTagInputModule \n\n\n\n\n\nNgxTinynodesMaterialFormFieldDemoComponent\n\nNgxTinynodesMaterialFormFieldDemoComponent\n\nNgxTinynodesMaterialFormFieldDemo -->\n\nNgxTinynodesMaterialFormFieldDemoComponent->NgxTinynodesMaterialFormFieldDemo\n\n\n\n\n\nNgxTinynodesMatJsonOutputComponent\n\nNgxTinynodesMatJsonOutputComponent\n\nNgxTinynodesMatJsonOutputModule -->\n\nNgxTinynodesMatJsonOutputComponent->NgxTinynodesMatJsonOutputModule\n\n\n\n\n\nNgxTinynodesMatTagInputComponent\n\nNgxTinynodesMatTagInputComponent\n\nNgxTinynodesMatTagInputModule -->\n\nNgxTinynodesMatTagInputComponent->NgxTinynodesMatTagInputModule\n\n\n\n\n\nTAG_COMPONENT_VALUE_ACCESSOR\n\nTAG_COMPONENT_VALUE_ACCESSOR\n\nNgxTinynodesMatTagInputComponent -->\n\nTAG_COMPONENT_VALUE_ACCESSOR->NgxTinynodesMatTagInputComponent\n\n\n\n\n\nTAG_COMPONENT_FIELD_CONTROL\n\nTAG_COMPONENT_FIELD_CONTROL\n\nNgxTinynodesMatTagInputComponent -->\n\nTAG_COMPONENT_FIELD_CONTROL->NgxTinynodesMatTagInputComponent\n\n\n\n\n\nPagesQuery\n\nPagesQuery\n\nPageStoreModule -->\n\nPagesQuery->PageStoreModule\n\n\n\n\n\nPagesService\n\nPagesService\n\nPageStoreModule -->\n\nPagesService->PageStoreModule\n\n\n\n\n\nPagesStore\n\nPagesStore\n\nPageStoreModule -->\n\nPagesStore->PageStoreModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n  \n\n    \n        \n            \n                \n                    \n                    \n                        24 Modules\n                    \n                \n            \n        \n        \n            \n                \n                    \n                    7 Components\n                \n            \n        \n        \n            \n                \n                    \n                    1 Directive\n                \n            \n        \n        \n            \n                \n                    \n                    6 Injectables\n                \n            \n        \n        \n            \n                \n                    \n                    2 Classes\n                \n            \n        \n        \n            \n                \n                    \n                    32 Interfaces\n                \n            \n        \n    \n\n\n \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"todo.html":{"url":"todo.html","title":"getting-started - todo","body":"\n                   \n\nngx-tinynodes Todo\nGeneral Todos\n\n Add CI pipeline for publishing modules\n Publish doc changes and tags back to repo\n\nngx-editorjs\n\n Add full EditorJS config support\n Add config options as @Input on component and directive\n Add autosave option support to module config\n Expose EditorJS CoreAPI via service helpers (e.g. blocks, selection, etc)\n ~~Provide peer-dependency ngrx/effects via library to control service~~\n\nngx-editorjs-demo\n\n Add store for page\n Add controls for setting editor\n Add Save feature\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/typealiases.html":{"url":"miscellaneous/typealiases.html","title":"miscellaneous-typealiases - typealiases","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous\n  Type aliases\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            BlockTypes   (libs/.../blocks.ts)\n                        \n                        \n                            EditorJSPlugin   (libs/.../plugins.ts)\n                        \n                        \n                            ListStyle   (libs/.../blocks.ts)\n                        \n                        \n                            PluginProperty   (libs/.../plugins.ts)\n                        \n                        \n                            PluginType   (libs/.../plugins.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    libs/ngx-editorjs/ngx-editorjs/src/lib/types/blocks.ts\n    \n    \n        \n            \n                \n                    \n                    BlockTypes\n                \n            \n            \n                \n                    Type of all the basic block type\n\n                \n            \n            \n                \n                        ParagraphBlock | HeaderBlock | ImageBlock | ListBlock | Block\n\n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    ListStyle\n                \n            \n            \n                \n                    Available list styles, supports ordered and unordered.\nA custom string can also be added\n\n                \n            \n            \n                \n                        \"ordered\" | \"unordered\" | string\n\n                \n            \n        \n    \n    libs/ngx-editorjs/ngx-editorjs-plugins/src/lib/types/plugins.ts\n    \n    \n        \n            \n                \n                    \n                    EditorJSPlugin\n                \n            \n            \n                \n                    The EditorJS tool settings for this plugin\n\n                \n            \n            \n                \n                        ToolConstructable | ToolSettings\n\n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    PluginProperty\n                \n            \n            \n                \n                    A plugin property\n\n                \n            \n            \n                \n                            string\n\n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    PluginType\n                \n            \n            \n                \n                    The types of plugins supported via the plugin type property\n\n                \n            \n            \n                \n                            PluginTypes.Block | PluginTypes.Inline | string\n\n                \n            \n        \n    \n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/variables.html":{"url":"miscellaneous/variables.html","title":"miscellaneous-variables - variables","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous\n  Variables\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            context   (libs/.../test.ts)\n                        \n                        \n                            DEFAULT_HOLDER_ID   (libs/.../editor-config.ts)\n                        \n                        \n                            EDITIOR_JS_INSTANCE   (libs/.../config.ts)\n                        \n                        \n                            EDITOR_JS_TOOL_INJECTOR   (libs/.../plugins.ts)\n                        \n                        \n                            EDITORJS_FORM_VALUE_ACCESSOR   (libs/.../editorjs.component.ts)\n                        \n                        \n                            EDITORJS_MATERIAL_FIELD_CONTROL   (libs/.../editorjs-mat-field.component.ts)\n                        \n                        \n                            EDITORJS_MODULE_IMPORT   (libs/.../injector.ts)\n                        \n                        \n                            EditorJSInstance   (libs/.../injector.ts)\n                        \n                        \n                            FOR_ROOT_OPTIONS_TOKEN   (libs/.../config.ts)\n                        \n                        \n                            MAP_DEFAULTS   (libs/.../injector.ts)\n                        \n                        \n                            NGX_EDITORJS_CONFIG   (libs/.../config.ts)\n                        \n                        \n                            ngxEditorjsDemoRoutes   (libs/.../ngx-editorjs-demo.routes.ts)\n                        \n                        \n                            PLUGIN_CONFIG   (libs/.../plugins.ts)\n                        \n                        \n                            PluginClasses   (libs/.../plugins.ts)\n                        \n                        \n                            require   (libs/.../test.ts)\n                        \n                        \n                            TAG_COMPONENT_FIELD_CONTROL   (libs/.../mat-tag-input.component.ts)\n                        \n                        \n                            TAG_COMPONENT_VALUE_ACCESSOR   (libs/.../mat-tag-input.component.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    libs/ngx-tinynodes-components/src/test.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            context\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : require.context('./', true, /\\.spec\\.ts$/)\n                        \n                    \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            require\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         any\n\n                        \n                    \n\n\n            \n        \n\n    libs/ngx-editorjs/ngx-editorjs/src/lib/config/editor-config.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            DEFAULT_HOLDER_ID\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Default value : 'editor-js'\n                        \n                    \n\n                \n                    \n                        The default holder ID to attach EditorJS to\n\n                    \n                \n\n            \n        \n\n    libs/ngx-editorjs/ngx-editorjs/src/lib/types/config.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            EDITIOR_JS_INSTANCE\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : new InjectionToken('EDITIOR_JS_INSTANCE')\n                        \n                    \n\n                \n                    \n                        Get the EditorJS instance injected into the app\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            FOR_ROOT_OPTIONS_TOKEN\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : new InjectionToken('FOR_ROOT_OPTIONS_TOKEN')\n                        \n                    \n\n                \n                    \n                        Internal token for injecting the NgxEditorJSConfig into the config factory\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            NGX_EDITORJS_CONFIG\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : new InjectionToken('NGX_EDITORJS_CONFIG')\n                        \n                    \n\n                \n                    \n                        Injection token provied for NgxEditorJSConfig\n\n                    \n                \n\n            \n        \n\n    libs/ngx-editorjs/ngx-editorjs-plugins/src/lib/types/plugins.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            EDITOR_JS_TOOL_INJECTOR\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : new InjectionToken('EDITOR_JS_TOOL_INJECTOR')\n                        \n                    \n\n                \n                    \n                        The Injection token for initial plugins as defined in the ngx-editorjs module\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            PLUGIN_CONFIG\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : new InjectionToken('PLUGIN_CONFIG')\n                        \n                    \n\n                \n                    \n                        Injection token for a plugin config\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            PluginClasses\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : new InjectionToken('PluginClasses')\n                        \n                    \n\n                \n                    \n                        Injection token for the plugin config map\n\n                    \n                \n\n            \n        \n\n    libs/ngx-editorjs/ngx-editorjs/src/lib/containers/editorjs/editorjs.component.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            EDITORJS_FORM_VALUE_ACCESSOR\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Provider\n\n                        \n                    \n                    \n                        \n                            Default value : {\n  provide: NG_VALUE_ACCESSOR,\n  useExisting: forwardRef(() => NgxEditorJSComponent),\n  multi: true\n}\n                        \n                    \n\n                \n                    \n                        The NgxEditorJSBaseComponent Provider for NG_VALUE_ACCESSOR\n\n                    \n                \n\n            \n        \n\n    libs/ngx-editorjs/ngx-editorjs/src/lib/containers/editorjs-mat-field/editorjs-mat-field.component.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            EDITORJS_MATERIAL_FIELD_CONTROL\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Provider\n\n                        \n                    \n                    \n                        \n                            Default value : {\n  provide: MatFormFieldControl,\n  useExisting: forwardRef(() => NgxEditorJSMatFieldComponent),\n  multi: true\n}\n                        \n                    \n\n                \n                    \n                        Provider for the EditorJS Material Field Component\n\n                    \n                \n\n            \n        \n\n    libs/ngx-editorjs/ngx-editorjs/src/lib/types/injector.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            EDITORJS_MODULE_IMPORT\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : new InjectionToken('EDITORJS_MODULE_IMPORT')\n                        \n                    \n\n                \n                    \n                        Injection token for the EditorJS class\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            EditorJSInstance\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : new InjectionToken('EditorJSInstance')\n                        \n                    \n\n                \n                    \n                        The EditorJS class injector\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            MAP_DEFAULTS\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     []\n\n                        \n                    \n                    \n                        \n                            Default value : [\n  ['lastChangeMap', { time: 0, blocks: [], version: EditorJS.version }],\n  ['isReadyMap', false],\n  ['hasSavedMap', false]\n]\n                        \n                    \n\n                \n                    \n                        Default values for each internal map\n\n                    \n                \n\n            \n        \n\n    libs/ngx-editorjs/ngx-editorjs-demo/src/lib/ngx-editorjs-demo.routes.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            ngxEditorjsDemoRoutes\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     Route[]\n\n                        \n                    \n                    \n                        \n                            Default value : [\n  {\n    path: 'ngx-editorjs-demo',\n    component: NgxEditorJSDemoHomeComponent\n  },\n  {\n    path: 'ngx-editorjs-demo/angular-component',\n    component: PageContainerComponent\n  },\n  {\n    path: 'ngx-editorjs-demo/angular-form',\n    loadChildren: () =>\n      import('./demos/material-form-field/material-form-field.module').then(m => m.NgxTinynodesMaterialFormFieldDemo)\n  }\n]\n                        \n                    \n\n\n            \n        \n\n    libs/ngx-tinynodes-components/src/lib/components/mat-tag-input/mat-tag-input.component.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            TAG_COMPONENT_FIELD_CONTROL\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Provider\n\n                        \n                    \n                    \n                        \n                            Default value : {\n  provide: MatFormFieldControl,\n  useExisting: forwardRef(() => NgxTinynodesMatTagInputComponent),\n  multi: true\n}\n                        \n                    \n\n                \n                    \n                        Provider for Material field support\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            TAG_COMPONENT_VALUE_ACCESSOR\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Provider\n\n                        \n                    \n                    \n                        \n                            Default value : {\n  provide: NG_VALUE_ACCESSOR,\n  useExisting: forwardRef(() => NgxTinynodesMatTagInputComponent),\n  multi: true\n}\n                        \n                    \n\n                \n                    \n                        Tag Value Accessor\n\n                    \n                \n\n            \n        \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"}}
}
