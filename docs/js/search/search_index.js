var COMPODOC_SEARCH_INDEX = {
    "index": {"version":"2.3.6","fields":["title","body"],"fieldVectors":[["title/components/AppContainerComponent.html",[0,1.521,1,2.309]],["body/components/AppContainerComponent.html",[0,2.521,1,2.832,2,1.891,3,0.097,4,0.189,5,1.407,6,1.099,7,1.313,8,1.46,9,0.07,10,3.071,11,2.298,12,0.209,13,3.133,14,1.262,15,1.294,16,3.875,17,3.601,18,1.564,19,3.41,20,4.083,21,1.407,22,4.321,23,1.778,24,2.308,25,5.088,26,2.308,27,4.104,28,0.324,29,0.771,30,3.921,31,5.088,32,3.255,33,6.694,34,7.011,35,1.294,36,4.104,37,3.689,38,4.092,39,2.191,40,3.09,41,2.618,42,3.601,43,2.147,44,5.088,45,4.504,46,4.504,47,1.294,48,2.298,49,3.025,50,6.297,51,5.782,52,2.277,53,5.782,54,1.568,55,4.104,56,1.76,57,0.008,58,1.53,59,0.786,60,0.916,61,1.836,62,1.159,63,2.462,64,2.076,65,2.01,66,2.596,67,1.76,68,2.308,69,4.104,70,2.596,71,4.68,72,5.782,73,2.076,74,2.178,75,2.447,76,2.596,77,3.632,78,2.596,79,5.782,80,3.632,81,1.235,82,2.596,83,3.632,84,3.255,85,1.74,86,4.104,87,3.09,88,4.104,89,2.702,90,1.865,91,2.492,92,2.596,93,3.632,94,2.596,95,3.632,96,2.618,97,1.743,98,5.088,99,2.102,100,4.104,101,2.596,102,2.4,103,2.596,104,2.596,105,2.662,106,2.596,107,2.596,108,2.596,109,2.596,110,5.118,111,2.596,112,2.596,113,3.09,114,0.349,115,2.4,116,2.102,117,0.382,118,1.584,119,0.819,120,1.407,121,1.358,122,1.099,123,2.905,124,1.74,125,1.46,126,2.298,127,0.091,128,0.249,129,2.596,130,2.596,131,3.875,132,2.596,133,2.596,134,2.596,135,2.596,136,1.631,137,2.596,138,1.948,139,2.596,140,2.596,141,2.596,142,2.298,143,2.298,144,2.596,145,1.015,146,2.596,147,2.596,148,2.596,149,1.955,150,1.955,151,2.298,152,1.272,153,2.596,154,2.596,155,3.084,156,1.838,157,2.757,158,1.955,159,2.596,160,2.01,161,2.298,162,3.632,163,3.632,164,2.298,165,2.298,166,2.298,167,2.298,168,2.298,169,1.162,170,0.898,171,1.407,172,3.632,173,2.832,174,4.504,175,2.298,176,2.298,177,1.584,178,2.308,179,2.75,180,0.632,181,3.632,182,2.298,183,2.102,184,2.298,185,3.322,186,2.298,187,2.298,188,2.298,189,1.955,190,1.519,191,2.298,192,2.102,193,0.898,194,2.308,195,1.836,196,1.129,197,3.252,198,1.46,199,1.46,200,1.233,201,1.435,202,1.272,203,2.308,204,1.196,205,1.358,206,1.46,207,1.272,208,1.46,209,1.46,210,1.162,211,1.196,212,1.46,213,1.233,214,0.302,215,1.294,216,1.46,217,1.272,218,1.46,219,1.272,220,1.233,221,1.46,222,1.196,223,1.46,224,1.233,225,1.272,226,1.407,227,1.129,228,1.407,229,1.46,230,0.002,231,0.004,232,0.002]],["title/modules/AppModule.html",[233,0.867,234,3.337]],["body/modules/AppModule.html",[1,4.288,3,0.151,4,0.151,9,0.11,10,1.51,12,0.327,13,3.11,14,1.579,23,1.581,57,0.008,61,1.817,67,1.985,71,4.645,114,0.477,117,0.598,118,2.476,119,2.099,120,3.607,126,3.593,127,0.143,128,0.39,193,1.404,201,1.363,204,3.65,207,3.88,214,0.299,215,1.809,225,3.88,230,0.004,231,0.005,232,0.004,233,1.224,234,6.554,235,1.473,236,1.587,237,2.895,238,2.895,239,1.587,240,1.587,241,3.593,242,3.593,243,3.593,244,3.593,245,5.607,246,5.309,247,5.309,248,4.463,249,5.607,250,5.309,251,2.568,252,1.718,253,1.672,254,4.06,255,5.738,256,4.062,257,4.645,258,3.11,259,4.645,260,5.738,261,3.286,262,2.302,263,5.738,264,3.593,265,3.593,266,5.079,267,4.645,268,2.59,269,5.738,270,4.06,271,4.06,272,2.903,273,3.593,274,3.593,275,1.988,276,4.06,277,3.593,278,3.593,279,3.286,280,3.057,281,4.06,282,4.06,283,4.06,284,4.06,285,3.286,286,4.06,287,4.06,288,4.06,289,3.593,290,3.593,291,3.593,292,3.057,293,5.738,294,4.06,295,4.06,296,2.874,297,4.06,298,4.06,299,4.06,300,4.06,301,4.06]],["title/modules/AppRoutingModule.html",[233,0.867,245,3.337]],["body/modules/AppRoutingModule.html",[0,1.949,3,0.225,4,0.225,9,0.163,10,2.246,12,0.486,13,3.274,14,1.77,15,2.355,57,0.008,61,3.343,114,0.423,117,0.89,127,0.262,128,0.58,204,3.442,205,3.908,230,0.005,231,0.007,232,0.005,233,1.374,235,2.192,240,2.362,245,5.287,258,3.274,262,2.997,290,5.348,291,5.348,302,4.89,303,4.89,304,7.47,305,4.766,306,7.47,307,6.047,308,6.047,309,3.398,310,4.549,311,2.628,312,4.89,313,6.612,314,5.348,315,5.348,316,4.549,317,6.042]],["title/injectables/AppService.html",[49,2.467,318,1.097]],["body/injectables/AppService.html",[3,0.127,4,0.127,9,0.092,12,0.536,13,3.613,14,1.685,15,1.594,23,1.772,28,0.425,30,2.861,32,2.622,35,2.102,39,2.442,40,3.807,43,2.645,47,1.594,49,2.645,54,1.367,56,2.579,57,0.008,58,1.628,59,0.93,60,1.2,63,2.356,74,2.742,75,1.442,80,4.475,81,1.463,84,2.199,85,2.285,89,2.479,97,2.248,105,4.238,114,0.414,117,0.502,122,1.442,123,3.579,125,1.917,127,0.12,128,0.327,136,2.009,138,3.381,145,2.784,173,2.476,215,2.352,230,0.003,231,0.004,232,0.003,239,1.977,259,5.396,261,2.759,275,3.884,318,1.176,319,1.333,320,0.491,321,3.017,322,3.165,323,4.092,324,1.594,325,2.259,326,3.807,327,2.957,328,4.475,329,4.475,330,3.579,331,2.759,332,3.899,333,3.613,334,6.601,335,3.409,336,2.74,337,3.389,338,5.04,339,4.759,340,4.475,341,4.475,342,1.024,343,3.409,344,1.669,345,4.092,346,4.475,347,5.763,348,4.475,349,3.409,350,3.579,351,2.134,352,4.475,353,1.692,354,3.409,355,3.807,356,3.017,357,3.409,358,2.476,359,1.491,360,2.567,361,1.299,362,2.74,363,1.724,364,1.724,365,2.622,366,2.285,367,2.759,368,2.413,369,3.017,370,3.017,371,3.017,372,3.017,373,3.017,374,3.017,375,3.807,376,4.538,377,3.017,378,3.017,379,3.409,380,3.409,381,3.017,382,3.017,383,3.017,384,3.017,385,3.017,386,3.017,387,1.368,388,3.017,389,3.017,390,3.017,391,3.017]],["title/injectables/AppService-1.html",[49,2.078,318,0.924,392,1.374]],["body/injectables/AppService-1.html",[3,0.132,4,0.132,9,0.096,10,2.813,12,0.547,13,3.682,14,1.706,15,1.641,28,0.442,30,2.928,32,2.683,35,2.143,39,2.467,40,5.116,43,2.723,47,1.641,49,2.723,54,1.39,56,2.503,57,0.008,58,1.58,59,0.903,60,1.11,74,2.774,75,1.501,84,2.264,89,2.527,97,2.281,105,4.281,114,0.418,117,0.522,122,1.501,123,3.685,125,1.994,127,0.125,128,0.341,136,2.042,138,3.436,145,2.83,173,1.737,215,2.385,230,0.003,231,0.005,232,0.003,239,2.035,259,5.5,261,2.871,275,3.928,318,1.211,319,1.387,322,3.226,323,4.214,324,1.641,325,2.248,326,3.919,327,3.045,328,4.608,329,4.608,330,3.685,331,2.871,332,3.974,333,3.682,334,6.696,336,2.821,337,3.489,338,5.123,339,4.827,340,4.608,341,4.608,342,1.039,344,1.718,345,4.214,346,4.608,347,5.858,348,4.608,350,3.685,351,2.184,352,4.608,353,1.72,355,3.919,356,3.139,358,2.55,359,1.535,360,2.67,361,1.352,362,2.821,363,1.794,364,1.794,365,2.264,366,2.377,367,2.871,368,2.51,369,3.139,370,3.139,371,3.139,372,3.139,373,3.139,374,3.139,375,2.67,376,3.919,377,3.139,378,3.139,381,3.139,382,3.139,383,3.139,384,3.139,385,3.139,386,3.139,387,1.423,388,3.139,389,3.139,390,3.139,391,3.139,393,3.139,394,3.546,395,3.546,396,3.546,397,3.546,398,3.546,399,3.546]],["title/interfaces/ApplicationData.html",[362,2.555,400,0.236]],["body/interfaces/ApplicationData.html",[3,0.183,4,0.183,9,0.133,12,0.592,14,1.428,23,1.555,28,0.613,29,1.23,52,2.928,57,0.008,59,0.816,60,1.324,61,2.928,68,4.41,81,1.785,84,3.199,89,3.38,114,0.256,127,0.258,145,3.283,169,3.509,170,2.263,177,3.991,178,2.764,190,3.827,230,0.004,231,0.006,232,0.004,309,2.764,320,0.324,342,1.177,351,2.777,353,1.748,359,1.449,362,3.546,387,3.146,400,0.408,401,1.05,402,3.701,403,4.385,404,4.385,405,2.558,406,4.385,407,4.929,408,5.255,409,3.602,410,2.407,411,3.136,412,4.175,413,2.2,414,2.998,415,4.486,416,2.998,417,3.294,418,2.2,419,3.294,420,3.294,421,3.294,422,2.764]],["title/interfaces/ApplicationData-1.html",[362,2.153,392,1.374,400,0.198]],["body/interfaces/ApplicationData-1.html",[3,0.183,4,0.183,9,0.133,10,1.831,12,0.592,14,1.43,23,1.17,28,0.614,29,1.231,52,2.932,57,0.008,59,0.817,60,1.325,61,2.932,68,4.413,81,1.787,84,3.202,89,3.381,114,0.257,127,0.258,145,3.285,169,3.512,170,2.266,177,3.996,178,2.769,190,3.832,230,0.004,231,0.006,232,0.004,309,2.769,342,1.178,351,2.779,353,1.749,359,1.452,362,3.55,387,3.148,400,0.408,401,1.052,403,4.391,404,4.391,405,2.561,406,4.391,407,4.934,408,5.259,409,3.606,410,2.412,411,3.142,412,4.18,413,2.204,414,3.003,415,4.49,416,3.003,417,3.3,418,2.204,419,3.3,420,3.3,421,3.3,422,2.769,423,3.708]],["title/modules/ApplicationDataModule.html",[233,0.867,246,3.16]],["body/modules/ApplicationDataModule.html",[3,0.216,4,0.216,9,0.157,12,0.467,14,1.59,23,1.892,49,4.593,57,0.008,97,2.196,114,0.436,117,0.854,127,0.204,128,0.557,193,2.007,230,0.005,231,0.006,232,0.005,233,1.464,235,2.105,236,2.269,237,2.524,238,2.524,239,3.113,240,2.269,246,6.136,251,3.26,252,2.455,253,2.39,262,2.922,320,0.382,332,5.135,333,4.757,367,4.697,368,4.107,410,3.568,424,5.136,425,5.136,426,5.802,427,3.685,428,7.284,429,5.896,430,4.882,431,5.802]],["title/injectables/ApplicationQuery.html",[318,1.097,332,2.758]],["body/injectables/ApplicationQuery.html",[3,0.219,4,0.219,9,0.159,12,0.592,14,1.605,23,1.748,47,1.858,54,1.132,56,2.038,57,0.008,58,1.286,59,0.735,60,1.061,97,2.217,114,0.438,117,0.868,127,0.207,128,0.77,138,2.798,230,0.005,231,0.006,232,0.005,272,2.981,275,4.379,318,1.711,319,2.304,320,0.485,325,1.987,332,4.302,333,4.551,338,6.117,366,3.95,368,4.171,427,3.721,432,5.216,433,6.51,434,2.268,435,4.77,436,5.893,437,2.373,438,3.112,439,2.637,440,4.171,441,4.77]],["title/injectables/ApplicationQuery-1.html",[318,0.924,332,2.324,392,1.374]],["body/injectables/ApplicationQuery-1.html",[3,0.22,4,0.22,9,0.16,10,2.743,12,0.594,14,1.61,47,1.867,54,1.137,56,2.047,57,0.008,58,1.292,59,0.739,60,1.065,97,2.224,114,0.439,117,0.872,127,0.208,128,0.772,138,2.811,230,0.005,231,0.006,232,0.005,272,2.995,275,4.383,318,1.716,319,2.314,325,1.993,332,4.314,333,4.558,338,6.125,366,3.968,368,4.19,427,3.731,433,6.529,434,2.274,435,4.792,437,2.379,438,3.121,439,2.649,440,4.19,441,4.792,442,5.24,443,5.92]],["title/interfaces/ApplicationState.html",[400,0.236,439,2.11]],["body/interfaces/ApplicationState.html",[3,0.167,4,0.167,9,0.122,12,0.362,14,1.73,23,1.466,28,0.562,29,1.159,57,0.008,58,1.346,59,0.878,65,3.445,81,1.707,89,2.293,97,2.281,114,0.322,119,1.42,127,0.287,145,3.384,152,3.021,180,0.951,201,1.623,214,0.427,215,2.81,230,0.004,231,0.005,232,0.004,320,0.297,324,1.42,325,2.389,342,0.619,344,1.487,351,2.807,353,1.671,358,3.021,359,1.819,363,2.278,364,2.278,365,3.846,387,3.473,400,0.419,401,0.962,409,2.206,418,2.015,434,1.388,439,2.76,444,2.874,445,3.342,446,3.469,447,2.683,448,2.278,449,2.138,450,2.356,451,2.441,452,2.138,453,1.74,454,3.12,455,2.278]],["title/interfaces/ApplicationState-1.html",[392,1.374,400,0.198,439,1.778]],["body/interfaces/ApplicationState-1.html",[3,0.17,4,0.17,9,0.124,10,1.701,12,0.368,14,1.739,23,1.087,28,0.571,29,1.171,57,0.008,58,1.36,59,0.885,65,3.473,81,1.721,89,2.318,97,2.296,114,0.325,119,1.442,127,0.289,145,3.395,180,0.961,201,1.631,214,0.429,215,2.795,230,0.004,231,0.005,232,0.004,324,1.442,325,2.395,342,0.628,344,1.51,351,2.697,353,1.685,358,3.053,359,1.838,363,2.314,364,2.314,365,3.856,387,3.484,400,0.42,401,0.977,418,2.047,434,1.41,439,2.789,445,3.378,446,3.506,447,2.712,448,2.314,449,2.172,450,2.393,451,2.479,452,2.172,453,1.759,454,3.153,455,2.314,456,2.918]],["title/injectables/ApplicationStore.html",[318,1.097,333,2.555]],["body/injectables/ApplicationStore.html",[3,0.226,4,0.226,9,0.164,12,0.488,14,1.902,23,1.78,47,2.562,54,1.165,57,0.008,58,1.325,97,2.558,114,0.424,117,0.894,127,0.213,128,0.583,145,2.373,230,0.005,231,0.007,232,0.005,272,3.07,275,4.269,318,1.743,319,2.373,320,0.493,325,2.024,333,4.06,365,2.64,366,4.068,387,2.435,427,3.789,434,2.309,439,2.716,457,5.372,458,6.07,459,5.021,460,5.64,461,4.296,462,2.716]],["title/injectables/ApplicationStore-1.html",[318,0.924,333,2.153,392,1.374]],["body/injectables/ApplicationStore-1.html",[3,0.227,4,0.227,9,0.165,10,2.793,12,0.491,14,1.905,47,2.567,54,1.171,57,0.008,58,1.331,97,2.562,114,0.425,117,0.898,127,0.214,128,0.586,145,2.384,230,0.005,231,0.007,232,0.005,272,3.085,275,4.275,318,1.747,319,2.384,325,2.03,333,4.071,365,2.652,366,4.087,387,2.446,427,3.8,434,2.316,439,2.729,459,5.035,460,5.656,461,4.316,462,2.729,463,5.397,464,6.098]],["title/interfaces/BasePlugin.html",[400,0.236,465,1.843]],["body/interfaces/BasePlugin.html",[3,0.182,4,0.182,9,0.132,12,0.393,14,1.067,28,0.61,29,1.225,35,2.467,54,0.939,57,0.008,59,0.813,60,1.565,90,2.103,114,0.34,117,0.72,127,0.286,128,0.47,136,1.839,201,1.001,214,0.383,230,0.004,231,0.006,232,0.004,233,1.199,311,2.836,320,0.322,324,1.541,342,1.007,353,1.859,361,1.863,400,0.407,401,1.044,465,3.059,466,3.46,467,4.369,468,3.41,469,2.865,470,3.813,471,4.258,472,4.093,473,3.832,474,4.369,475,2.749,476,3.282,477,4.916,478,1.238,479,2.013,480,2.649,481,3.276,482,2.126,483,2.749,484,3.119,485,1.773,486,3.533,487,3.533,488,2.836,489,2.859,490,3.119,491,2.981,492,2.187,493,2.649,494,3.119]],["title/interfaces/BasePlugin-1.html",[392,1.374,400,0.198,465,1.553]],["body/interfaces/BasePlugin-1.html",[3,0.181,4,0.181,9,0.132,12,0.393,14,1.065,28,0.609,29,1.224,35,2.465,54,0.937,57,0.008,59,0.812,60,1.564,90,2.1,114,0.34,117,0.718,127,0.286,128,0.469,136,1.837,201,0.999,214,0.408,230,0.004,231,0.006,232,0.004,233,1.197,311,2.832,320,0.321,324,1.538,342,1.006,353,1.858,361,1.86,400,0.407,401,1.042,465,3.057,467,4.364,468,3.406,469,2.864,470,3.808,471,4.257,472,4.09,473,3.829,474,4.364,475,2.744,476,3.279,477,4.911,478,1.236,479,2.01,480,2.644,481,3.27,482,2.122,483,2.744,484,3.113,485,1.77,486,3.528,487,3.528,488,2.832,489,2.854,490,3.113,491,2.976,492,2.183,493,2.644,494,3.113,495,3.453]],["title/interfaces/Block.html",[180,0.727,400,0.236]],["body/interfaces/Block.html",[3,0.142,4,0.142,6,1.618,9,0.103,12,0.308,28,0.477,29,1.323,54,0.734,57,0.008,59,1.16,60,1.267,62,1.698,81,1.563,127,0.293,160,3.448,169,2.461,170,2.832,171,2.98,180,1.419,214,0.427,230,0.003,231,0.005,232,0.003,305,2.44,320,0.362,325,2.287,342,1.177,344,2.462,353,1.307,392,1.323,400,0.44,401,0.817,405,1.495,413,2.461,434,2.17,438,1.618,469,1.179,496,2.072,497,2.151,498,3.824,499,2.392,500,2.072,501,3.092,502,3.092,503,2.001,504,1.873,505,3.092,506,2.877,507,2.992,508,2.877,509,3.296,510,2.877,511,2.237,512,1.534,513,2.877,514,3.436,515,3.216,516,2.151,517,3.257,518,2.237,519,2.237,520,2.237,521,2.237,522,2.237,523,2.877,524,2.072,525,2.151]],["title/interfaces/BlocksMap.html",[400,0.236,526,2.555]],["body/interfaces/BlocksMap.html",[3,0.182,4,0.182,9,0.132,12,0.394,54,0.94,57,0.008,59,0.814,73,3.302,81,1.584,91,2.398,97,1.476,114,0.383,121,4.834,122,2.072,127,0.294,180,1.257,214,0.459,230,0.004,231,0.006,232,0.004,320,0.43,342,1.176,344,1.616,353,2.146,361,3.443,400,0.419,401,1.046,437,1.58,453,1.382,478,1.24,497,2.754,512,2.619,526,3.537,527,3.125,528,6.053,529,4.164,530,4.897,531,3.125,532,3.981,533,2.477,534,2.987,535,2.562,536,2.987,537,2.477,538,2.017,539,2.654,540,3.125,541,2.477,542,2.072,543,2.654]],["title/interfaces/ChangeMap.html",[400,0.236,543,2.555]],["body/interfaces/ChangeMap.html",[3,0.181,4,0.181,9,0.132,12,0.393,54,0.937,57,0.008,59,0.812,73,3.293,81,1.58,91,2.39,97,1.471,114,0.382,121,4.832,122,2.065,127,0.294,180,1.129,214,0.459,230,0.004,231,0.006,232,0.004,320,0.429,342,1.175,344,1.61,353,2.145,361,3.441,400,0.419,401,1.042,437,1.574,453,1.377,478,1.236,497,2.744,512,3.137,526,2.644,527,3.113,528,6.05,529,3.113,531,3.113,532,3.971,533,2.468,534,2.976,535,2.552,536,2.976,537,2.468,538,2.01,539,2.644,540,4.154,541,3.293,542,2.755,543,3.528,544,4.879]],["title/classes/Changed.html",[128,0.453,545,2.238]],["body/classes/Changed.html",[3,0.174,4,0.174,9,0.127,18,3.157,28,0.585,29,1.191,32,3.684,39,1.911,47,1.478,54,1.379,56,1.621,57,0.008,58,1.023,59,1.126,60,0.844,62,1.068,63,1.833,114,0.331,127,0.297,128,0.772,201,1.645,214,0.455,230,0.004,231,0.006,232,0.004,320,0.507,325,1.713,342,1.104,447,2.039,478,1.187,533,4.357,538,3.31,545,3.815,546,2.742,547,4.692,548,2.859,549,4.43,550,3.318,551,5.083,552,6.338,553,4.688,554,4.486,555,3.142,556,4.2,557,2.636,558,4.039,559,3.565,560,1.931,561,4.039,562,2.991,563,4.2,564,3.318,565,5.386,566,3.4,567,3.318,568,3.318,569,3.318,570,3.142]],["title/interfaces/CreateEditorJSOptions.html",[400,0.236,571,3.337]],["body/interfaces/CreateEditorJSOptions.html",[3,0.184,4,0.184,9,0.134,12,0.398,28,0.618,29,1.236,57,0.008,58,1.081,59,0.921,60,1.514,81,1.792,90,1.597,114,0.258,127,0.259,214,0.385,230,0.004,231,0.006,232,0.004,320,0.326,342,1.08,344,1.635,359,2.319,400,0.369,401,1.058,410,3.221,437,2.537,447,2.154,453,1.397,462,2.943,478,1.254,479,2.709,482,3.421,533,3.326,542,2.783,549,4.115,557,2.785,560,2.04,571,4.654,572,3.729,573,3.729,574,3.698,575,4.56,576,3.519,577,5.567,578,4.6,579,4.196,580,4.383,581,4.654,582,3.505,583,4.009,584,3.505,585,2.351,586,3.319,587,3.464,588,4.654,589,3.16,590,5.323,591,3.02,592,5.323,593,2.785,594,5.323,595,5.323]],["title/interfaces/DemoData.html",[365,2.051,400,0.236]],["body/interfaces/DemoData.html",[3,0.17,4,0.17,9,0.123,12,0.367,14,1.546,23,1.479,28,0.57,29,1.17,57,0.008,58,1.794,59,0.777,65,3.049,81,1.108,89,1.698,97,2.136,114,0.325,119,1.44,127,0.289,145,3.113,152,3.049,180,0.96,201,1.683,214,0.439,215,2.879,230,0.004,231,0.005,232,0.004,320,0.301,324,1.44,325,2.444,342,0.973,344,2.338,351,2.509,353,1.683,358,2.236,359,1.346,363,2.31,364,2.31,365,3.658,387,3.195,400,0.428,401,0.976,409,2.236,418,2.786,434,1.408,439,2.043,444,2.913,445,2.474,446,2.568,447,2.708,448,2.31,449,2.956,450,2.389,451,2.474,452,2.168,453,1.757,454,3.15,455,2.31]],["title/interfaces/DemoData-1.html",[365,1.728,392,1.374,400,0.198]],["body/interfaces/DemoData-1.html",[3,0.172,4,0.172,9,0.125,10,1.725,12,0.373,14,1.559,23,1.102,28,0.579,29,1.183,57,0.008,58,1.802,59,0.785,65,3.082,81,1.126,89,1.725,97,2.153,114,0.328,119,1.463,127,0.29,145,3.13,180,0.97,201,1.691,214,0.441,215,2.872,230,0.004,231,0.006,232,0.004,324,1.463,325,2.449,342,0.981,344,2.357,351,2.229,353,1.697,358,2.272,359,1.368,363,2.346,364,2.346,365,3.673,387,3.212,400,0.429,401,0.991,418,2.816,434,1.43,439,2.076,445,2.514,446,2.609,447,2.737,448,2.346,449,2.988,450,2.427,451,2.514,452,2.202,453,1.776,454,3.183,455,2.346,456,2.96]],["title/interfaces/EditorJSAction.html",[400,0.236,582,3.337]],["body/interfaces/EditorJSAction.html",[3,0.188,4,0.188,9,0.137,12,0.408,28,0.632,29,1.255,57,0.008,58,1.457,59,0.833,60,1.344,81,1.23,90,1.634,114,0.264,127,0.262,214,0.389,230,0.004,231,0.006,232,0.004,320,0.334,342,1.09,344,2.464,359,1.968,400,0.396,401,1.082,410,2.481,437,2.56,447,2.204,453,1.43,462,2.267,478,1.283,479,2.087,482,2.904,533,4.284,542,2.144,549,4.682,557,2.849,560,2.087,571,3.586,572,3.815,573,3.815,574,2.849,575,3.618,576,2.267,577,3.586,578,3.904,579,3.233,580,5.909,581,5.617,582,4.725,583,4.101,584,3.586,585,2.405,586,3.396,587,3.49,588,4.725,589,3.233,590,5.403,591,3.09,592,5.403,593,2.849,594,5.403,595,5.403]],["title/interfaces/EditorJSConfig.html",[400,0.236,596,3.008]],["body/interfaces/EditorJSConfig.html",[3,0.152,4,0.152,9,0.111,12,0.329,28,0.51,29,1.084,52,2.582,57,0.008,58,1.259,59,1.04,60,1.62,61,1.831,62,1.808,81,1.928,90,2.156,114,0.301,117,0.603,127,0.269,157,3.127,180,1.224,195,2.582,214,0.435,230,0.004,231,0.005,232,0.004,296,2.896,311,2.907,320,0.27,324,2.289,325,2.146,342,1.164,359,1.701,400,0.288,401,0.874,437,2.156,462,2.582,475,2.301,478,1.036,479,3.271,486,2.217,487,3.127,507,2.315,512,2.681,541,2.919,556,4.245,566,3.071,574,2.301,576,2.991,578,3.375,596,3.681,597,3.08,598,4.865,599,4.631,600,4.865,601,4.865,602,4.865,603,5.323,604,5.107,605,4.344,606,3.519,607,3.519,608,3.681,609,3.867,610,3.867,611,5.107,612,4.084,613,2.658,614,4.084,615,3.867,616,3.867,617,3.519,618,3.867,619,3.519,620,5.137,621,4.084,622,2.896,623,3.312,624,2.07,625,4.076,626,3.312,627,2.742,628,3.312,629,1.885,630,3.312,631,2.742,632,2.896,633,3.312,634,2.896,635,3.08,636,3.312]],["title/interfaces/EditorJSInstanceConfig.html",[400,0.236,637,3.55]],["body/interfaces/EditorJSInstanceConfig.html",[3,0.181,4,0.181,9,0.131,12,0.391,28,0.606,29,1.221,57,0.008,59,0.912,60,1.506,62,1.107,75,2.748,90,2.095,114,0.382,117,0.716,127,0.286,128,0.467,173,2.381,180,1.001,214,0.424,230,0.004,231,0.006,232,0.004,311,3.182,320,0.32,342,1.005,361,1.853,400,0.324,401,1.039,437,2.095,453,2.064,462,2.175,468,3.398,472,4.084,475,2.734,478,1.231,479,3.216,486,2.634,487,2.634,517,3.285,526,2.634,537,2.459,538,2.675,539,2.634,542,2.748,543,2.634,566,3.542,574,2.734,578,5.079,587,3.675,622,3.441,624,4.115,629,2.24,637,4.89,638,3.66,639,5.257,640,5.878,641,6.91,642,5.878,643,5.257,644,3.101,645,3.66,646,3.441,647,3.935,648,3.441,649,3.935,650,3.258,651,3.258]],["title/interfaces/EditorJSMaterialForm.html",[400,0.236,652,3.816]],["body/interfaces/EditorJSMaterialForm.html",[0,2.226,2,1.149,3,0.093,4,0.093,9,0.067,12,0.201,14,0.544,17,2.813,18,0.95,19,3.321,20,2.424,22,1.304,24,1.402,26,1.402,30,2.931,32,1.085,37,1.591,38,1.765,39,2.226,47,0.786,57,0.009,59,0.311,60,0.892,62,0.568,63,3.022,64,1.261,73,1.261,75,2.392,81,1.596,90,0.804,91,2.427,97,2.556,102,5.143,114,0.395,115,2.324,116,2.018,117,0.367,118,1.521,122,1.055,124,1.671,125,1.402,127,0.174,128,0.382,136,1.947,138,3.594,149,1.877,150,1.877,155,3.38,173,1.221,190,2.324,195,1.116,201,1.014,210,1.778,214,0.36,222,1.831,227,2.155,230,0.002,231,0.003,232,0.002,239,0.975,256,2.813,305,1.591,311,1.085,320,0.164,322,1.887,337,1.671,339,3.161,342,0.68,350,1.765,359,2.5,400,0.248,401,0.533,411,1.591,427,1.261,434,1.527,437,1.282,438,1.055,459,4.625,462,2.217,468,3.229,471,1.221,542,1.055,575,1.351,581,1.765,587,1.682,593,1.402,607,4.209,609,1.671,613,2.844,619,3.447,629,1.149,644,1.591,652,4.997,653,2.018,654,1.877,655,2.018,656,5.002,657,3.216,658,2.018,659,2.493,660,2.493,661,3.974,662,3.216,663,3.974,664,3.974,665,5.652,666,1.671,667,4.385,668,2.018,669,2.018,670,2.427,671,1.765,672,2.207,673,3.765,674,3.216,675,2.018,676,2.018,677,1.765,678,2.207,679,1.765,680,1.671,681,1.671,682,2.493,683,2.493,684,3.321,685,2.493,686,5.652,687,3.517,688,2.493,689,2.493,690,2.786,691,2.493,692,3.517,693,2.493,694,3.517,695,2.493,696,2.493,697,7.164,698,2.493,699,3.974,700,2.493,701,2.493,702,5.586,703,2.493,704,4.954,705,2.493,706,2.493,707,2.493,708,2.018,709,2.493,710,3.974,711,2.493,712,2.493,713,2.493,714,2.493,715,6.577,716,2.493,717,3.974,718,2.493,719,2.493,720,2.493,721,2.493,722,3.974,723,2.493,724,2.018,725,2.992,726,2.207,727,2.207,728,3.974,729,2.493,730,2.493,731,2.493,732,2.493,733,2.493,734,3.974,735,2.493,736,2.493,737,3.974,738,2.493,739,2.493,740,2.493,741,2.813,742,3.216,743,2.493,744,2.493,745,2.207,746,1.765,747,4.01,748,2.018,749,2.992,750,2.207,751,1.877,752,2.207,753,3.974,754,2.018,755,2.493,756,2.207,757,2.207,758,2.207,759,2.207,760,2.493,761,2.493,762,2.207,763,2.207,764,2.207,765,2.018,766,2.493,767,2.493,768,2.493,769,2.493,770,2.493,771,2.493,772,2.018,773,2.493,774,2.207,775,2.018,776,2.207,777,2.018]],["title/interfaces/EditorMap.html",[400,0.236,536,2.875]],["body/interfaces/EditorMap.html",[3,0.183,4,0.183,9,0.133,12,0.396,54,0.944,57,0.008,59,0.816,73,3.31,81,1.588,91,2.407,97,1.482,114,0.384,121,4.82,122,2.08,127,0.295,180,1.134,214,0.464,230,0.004,231,0.006,232,0.004,320,0.431,342,1.177,344,1.622,353,2.147,361,3.445,400,0.42,401,1.05,437,1.585,453,1.387,478,1.245,497,2.764,512,2.625,526,2.664,527,3.136,528,6.057,529,3.136,531,3.136,532,3.991,533,2.486,534,2.998,535,3.423,536,3.991,537,2.486,538,2.025,539,2.664,540,3.136,541,2.486,542,2.08,543,2.664,778,4.915]],["title/interfaces/EventMap.html",[400,0.236,534,2.875]],["body/interfaces/EventMap.html",[3,0.182,4,0.182,9,0.132,12,0.394,54,0.94,57,0.008,59,0.814,73,3.714,81,1.584,91,3.197,97,1.476,114,0.383,121,4.817,122,2.072,127,0.294,180,1.132,214,0.459,230,0.004,231,0.006,232,0.004,320,0.43,342,1.176,344,1.616,353,2.146,361,3.443,400,0.419,401,1.046,437,2.105,453,1.382,478,1.24,497,2.754,512,2.619,526,2.654,527,3.125,528,6.053,529,3.125,531,3.125,532,4.477,533,2.477,534,3.981,535,2.562,536,2.987,537,2.477,538,2.017,539,2.654,540,3.125,541,2.477,542,2.072,543,2.654,779,4.897]],["title/interfaces/EventType.html",[400,0.236,532,2.875]],["body/interfaces/EventType.html",[3,0.18,4,0.18,9,0.131,12,0.39,28,0.605,29,1.219,57,0.008,59,1.083,60,1.167,73,3.696,81,1.574,91,2.376,97,1.463,114,0.381,121,4.772,122,2.053,127,0.294,180,1.126,214,0.459,230,0.004,231,0.006,232,0.004,320,0.32,342,1.192,344,2.412,353,2.11,361,3.385,400,0.418,401,1.037,437,1.565,453,1.369,478,1.229,512,2.602,526,2.629,527,3.096,528,5.952,529,3.096,531,4.139,532,4.457,533,3.946,534,2.959,535,2.538,536,2.959,537,2.454,538,1.999,539,2.629,540,3.096,541,2.454,542,2.053,543,2.629]],["title/components/FormContainerComponent.html",[0,1.521,200,2.238]],["body/components/FormContainerComponent.html",[0,2.232,1,0.705,2,1.156,3,0.054,4,0.054,5,0.78,6,0.609,7,0.728,8,0.81,9,0.039,10,0.535,12,0.321,13,1.36,14,0.548,15,1.26,17,3.522,18,0.957,19,2.236,20,2.763,21,0.78,22,3.691,23,1.182,24,1.411,26,1.411,28,0.18,29,0.472,30,3.71,32,1.738,35,0.791,37,2.549,39,2.52,43,1.313,47,1.26,49,2.09,54,1.513,56,1.382,57,0.008,58,1.51,59,0.799,60,0.719,61,1.788,62,1.41,63,2.852,67,2.747,68,3.01,74,2.216,75,2.4,81,1.208,84,0.626,89,1.85,90,2.232,91,2.219,96,3.175,97,1.989,102,3.318,105,3.113,113,3.008,114,0.323,117,0.212,119,1.429,121,0.753,122,0.609,123,1.776,124,0.965,125,0.81,127,0.051,128,0.138,131,2.236,136,1.404,138,2.541,142,1.274,143,1.274,152,1.956,155,0.705,156,3.522,157,1.36,158,1.89,160,1.634,170,1.382,173,1.956,178,0.81,180,0.698,193,0.498,194,1.411,195,1.123,196,0.626,197,2.246,198,0.81,199,0.81,200,1.897,201,1.445,202,3.945,203,1.411,204,0.663,205,0.753,206,0.81,207,0.705,208,0.81,209,0.81,210,0.644,211,0.663,212,0.81,213,0.683,214,0.453,215,2.364,216,0.81,217,0.705,218,0.81,219,0.705,220,1.584,221,0.81,222,0.663,223,0.81,224,0.683,225,0.705,226,0.78,227,0.626,228,0.78,229,0.81,230,0.001,231,0.002,232,0.003,252,2.106,256,1.776,311,0.626,320,0.523,322,2.94,324,0.791,325,1.94,326,1.084,327,1.468,330,1.019,336,1.36,337,1.682,342,0.345,350,1.776,351,0.51,355,1.89,359,1.467,392,0.868,413,1.123,416,1.531,437,1.726,438,0.609,452,1.192,453,2.205,469,0.774,479,0.593,485,0.911,499,1.092,507,1.603,509,1.374,510,0.753,512,1.339,514,1.156,537,0.728,542,1.062,559,2.246,560,3.005,566,2.518,575,4.335,587,3.276,589,1.601,591,3.46,608,3.175,613,1.156,617,1.531,619,1.531,624,1.27,629,1.156,642,3.008,666,0.965,670,1.956,673,3.264,684,0.965,741,2.827,780,7.029,781,6.428,782,1.084,783,2.221,784,2.031,785,2.221,786,2.221,787,2.701,788,2.031,789,3.336,790,5.013,791,4.404,792,3.995,793,2.51,794,2.51,795,2.221,796,3.587,797,1.274,798,3.415,799,3.536,800,3.536,801,3.995,802,3.995,803,1.439,804,2.221,805,2.221,806,2.51,807,1.439,808,1.274,809,2.031,810,2.51,811,1.439,812,3.995,813,3.995,814,2.336,815,1.439,816,2.221,817,2.221,818,1.439,819,1.439,820,2.51,821,1.439,822,4.028,823,2.221,824,1.439,825,4.592,826,2.51,827,1.439,828,1.439,829,2.51,830,2.51,831,1.776,832,4.531,833,3.336,834,1.439,835,1.274,836,3.536,837,1.439,838,2.221,839,1.439,840,1.274,841,1.439,842,1.439,843,1.439,844,1.439,845,1.439,846,1.439,847,1.439,848,1.439,849,1.439,850,1.165,851,1.439,852,2.031,853,1.439,854,1.274,855,1.274,856,1.165,857,1.274,858,1.274,859,1.084,860,1.274,861,1.274,862,1.274,863,1.274,864,1.439,865,1.439,866,1.439,867,1.439,868,1.439,869,1.439,870,3.008,871,1.439,872,1.439,873,3.536,874,1.274,875,1.274,876,1.019,877,1.274,878,3.336,879,1.274,880,1.274,881,1.274,882,1.274,883,1.274,884,1.274,885,1.776,886,1.584,887,3.037,888,1.274,889,1.274,890,1.274,891,2.51,892,2.51,893,2.51,894,2.031,895,2.221,896,3.995,897,3.008,898,3.995,899,3.536,900,2.51,901,2.51,902,2.677,903,2.51,904,2.51,905,2.51,906,1.89,907,2.221,908,2.51,909,2.221,910,2.221,911,1.274,912,1.274,913,1.274,914,1.274,915,1.274,916,1.274,917,2.031,918,2.221,919,2.031,920,2.221,921,2.031,922,2.221,923,2.031,924,2.031,925,2.51,926,2.51,927,2.51,928,2.51,929,2.362,930,1.274,931,2.701,932,1.165,933,1.165,934,1.274,935,1.439]],["title/interfaces/Header.html",[400,0.236,509,1.942]],["body/interfaces/Header.html",[3,0.144,4,0.144,6,1.64,9,0.105,12,0.312,28,0.483,29,1.219,57,0.008,59,1.148,60,1.275,62,1.776,81,1.574,127,0.294,160,4.024,169,2.484,170,2.842,171,3.008,180,1.41,214,0.407,230,0.003,231,0.005,232,0.003,320,0.255,325,2.17,342,1.166,344,2.141,353,0.921,392,1.92,400,0.437,401,0.828,405,1.515,413,2.484,434,2.183,438,1.64,469,1.195,496,2.1,499,1.686,500,2.1,501,3.122,502,3.122,503,2.027,504,1.898,505,3.122,506,2.904,507,3.008,508,2.904,509,3.539,510,4.081,511,3.247,512,2.602,513,2.904,514,3.454,515,3.247,516,2.179,517,3.281,518,2.266,519,2.266,520,2.266,521,2.266,522,2.266,523,2.904,524,2.1,525,2.179]],["title/interfaces/HeaderBlock.html",[400,0.236,513,2.467]],["body/interfaces/HeaderBlock.html",[3,0.147,4,0.147,6,1.674,9,0.107,12,0.318,28,0.494,29,1.233,57,0.008,59,1.153,60,1.287,62,1.721,81,1.593,127,0.295,160,3.502,169,2.521,170,2.857,171,3.053,180,1.421,214,0.422,230,0.003,231,0.005,232,0.003,320,0.261,325,2.122,342,1.135,344,2.166,353,0.94,392,1.368,400,0.442,401,0.845,405,1.547,413,2.521,434,2.33,438,1.674,469,1.22,496,2.144,499,1.721,500,2.144,501,3.168,502,3.168,503,2.07,504,1.938,505,3.168,506,2.948,507,3.032,508,2.948,509,3.403,510,2.948,511,2.314,512,1.587,513,3.433,514,3.482,515,3.295,516,2.225,517,3.319,518,2.314,519,2.314,520,2.314,521,2.314,522,2.314,523,2.948,524,2.144,525,2.225]],["title/components/HomePageComponent.html",[0,1.521,204,2.172]],["body/components/HomePageComponent.html",[0,2.253,1,2.176,2,3.466,3,0.165,4,0.165,5,2.408,6,1.88,7,2.248,8,2.499,9,0.12,10,2.597,21,2.408,22,4.738,23,2.095,24,3.437,26,3.437,28,0.554,32,1.933,39,1.339,43,3.197,47,1.401,48,3.933,49,3.935,54,1.173,56,1.537,57,0.008,58,1.721,59,0.554,60,0.8,61,2.735,64,3.091,65,2.993,67,2.416,84,1.933,89,2.933,114,0.319,117,0.654,119,1.401,120,2.408,127,0.156,128,0.427,136,1.254,151,3.933,152,2.176,155,2.176,170,2.113,193,1.537,194,3.437,195,2.735,196,1.933,197,4.23,198,2.499,199,2.499,200,2.11,201,1.71,202,2.176,203,3.437,204,3.466,205,4.449,206,2.499,207,2.176,208,2.499,209,2.499,210,1.988,211,2.047,212,2.499,213,2.11,214,0.392,215,2.372,216,2.499,217,2.176,218,2.499,219,2.176,220,2.11,221,2.499,222,2.047,223,2.499,224,2.11,225,2.176,226,2.408,227,1.933,228,2.408,229,2.499,230,0.004,231,0.005,232,0.004,257,4.946,330,3.145,430,5.042,499,2.658,885,4.325,887,4.096,936,6.182,937,3.933,938,6.985,939,6.111,940,4.443,941,4.443,942,2.978,943,6.111,944,4.601,945,5.409,946,4.601,947,6.111,948,6.111,949,4.946,950,5.409,951,3.899,952,4.325,953,5.409,954,6.111,955,3.727,956,6.111]],["title/interfaces/Image.html",[400,0.236,514,2.172]],["body/interfaces/Image.html",[3,0.137,4,0.137,6,1.555,9,0.099,12,0.296,28,0.458,29,1.183,57,0.008,59,1.15,60,1.595,62,1.744,81,2.004,127,0.29,160,3.385,169,2.391,170,2.801,171,2.895,180,1.402,214,0.4,230,0.003,231,0.005,232,0.003,320,0.242,325,2.136,342,1.18,344,2.078,353,0.873,392,1.271,400,0.433,401,0.785,405,1.437,413,3.428,434,2.131,438,1.555,469,1.133,496,1.992,499,1.599,500,1.992,501,3.005,502,3.005,503,1.923,504,1.8,505,3.005,506,2.795,507,2.946,508,2.795,509,3.336,510,2.795,511,2.149,512,1.474,513,2.795,514,3.732,515,4.481,516,3.005,517,3.875,518,4.042,519,3.125,520,4.042,521,3.125,522,4.042,523,2.795,524,1.992,525,2.067]],["title/interfaces/ImageBlock.html",[400,0.236,523,2.467]],["body/interfaces/ImageBlock.html",[3,0.147,4,0.147,6,1.674,9,0.107,12,0.318,28,0.494,29,1.233,57,0.008,59,1.153,60,1.287,62,1.721,81,1.593,127,0.295,160,3.502,169,2.521,170,2.857,171,3.053,180,1.421,214,0.422,230,0.003,231,0.005,232,0.003,320,0.261,325,2.122,342,1.135,344,2.166,353,0.94,392,1.368,400,0.442,401,0.845,405,1.547,413,2.521,434,2.33,438,1.674,469,1.22,496,2.144,499,1.721,500,2.144,501,3.168,502,3.168,503,2.07,504,1.938,505,3.168,506,2.948,507,3.032,508,2.948,509,3.329,510,2.948,511,2.314,512,1.587,513,2.948,514,3.619,515,3.295,516,2.225,517,3.319,518,2.314,519,2.314,520,2.314,521,2.314,522,2.314,523,3.433,524,2.144,525,2.225]],["title/interfaces/InjectorMethodOption.html",[400,0.236,651,3.16]],["body/interfaces/InjectorMethodOption.html",[3,0.184,4,0.184,9,0.134,12,0.398,28,0.617,29,1.234,57,0.008,59,0.92,60,1.569,62,1.126,75,2.779,90,2.118,114,0.385,117,0.728,127,0.287,128,0.475,173,2.421,180,1.211,214,0.439,230,0.004,231,0.006,232,0.004,311,3.208,320,0.326,342,1.124,361,1.884,400,0.328,401,1.056,437,1.594,453,2.422,462,2.212,468,2.586,475,2.78,478,1.252,479,2.705,486,2.679,487,2.679,517,2.5,526,2.679,537,2.5,538,2.036,539,2.679,542,2.092,543,2.679,566,3.733,574,3.693,578,4.314,587,3.733,622,4.648,624,3.975,629,2.277,637,3.722,638,3.722,639,4.001,640,3.722,641,4.375,642,4.945,643,4.001,644,3.154,645,3.722,646,3.499,647,4.001,648,3.499,649,4.001,650,4.402,651,4.402]],["title/interfaces/List.html",[170,1.631,400,0.236]],["body/interfaces/List.html",[3,0.144,4,0.144,6,1.64,9,0.105,12,0.312,28,0.483,29,1.219,57,0.008,59,1.15,60,1.275,62,1.776,81,1.574,127,0.294,160,3.469,169,3.491,170,3.002,171,4.227,180,1.41,214,0.407,230,0.003,231,0.005,232,0.003,320,0.255,325,2.17,342,1.128,344,2.575,353,0.921,392,1.34,400,0.437,401,0.828,405,1.515,413,2.484,434,2.183,438,1.64,469,1.195,496,2.1,499,1.686,500,2.1,501,3.122,502,3.122,503,2.027,504,1.898,505,3.983,506,2.904,507,3.008,508,2.904,509,3.309,510,2.904,511,2.266,512,1.555,513,2.904,514,3.454,515,3.247,516,2.179,517,3.281,518,2.266,519,2.266,520,2.266,521,2.266,522,2.266,523,2.904,524,2.1,525,2.179]],["title/interfaces/ListBlock.html",[400,0.236,506,2.467]],["body/interfaces/ListBlock.html",[3,0.146,4,0.146,6,1.664,9,0.106,12,0.316,28,0.491,29,1.229,57,0.008,59,1.152,60,1.283,62,1.785,81,1.587,127,0.295,160,3.493,169,2.51,170,2.945,171,3.04,180,1.42,214,0.43,230,0.003,231,0.005,232,0.003,320,0.259,325,2.118,342,1.133,344,2.159,353,0.934,392,1.36,400,0.439,401,0.84,405,1.538,413,2.51,434,2.324,438,2.374,469,1.729,496,2.131,499,1.711,500,2.131,501,3.155,502,3.155,503,2.057,504,1.926,505,3.155,506,3.421,507,3.025,508,2.935,509,3.323,510,2.935,511,2.3,512,1.578,513,2.935,514,3.474,515,3.281,516,2.212,517,3.308,518,2.3,519,2.3,520,2.3,521,2.3,522,2.3,523,2.935,524,2.131,525,2.212]],["title/modules/MaterialModule.html",[233,0.867,247,3.16]],["body/modules/MaterialModule.html",[3,0.235,4,0.235,9,0.171,10,2.354,12,0.51,57,0.008,64,3.889,102,4.497,114,0.401,117,0.932,118,3.862,127,0.222,128,0.608,230,0.006,231,0.007,232,0.006,233,1.414,235,2.297,240,2.476,247,5.153,258,3.431,262,3.084,292,6.233,323,6.223,468,4.022,629,3.542,957,6.332,958,5.788,959,8.279,960,8.279,961,7.328,962,7.328,963,6.701]],["title/interfaces/MenuGroup.html",[351,1.67,400,0.236]],["body/interfaces/MenuGroup.html",[3,0.175,4,0.175,9,0.127,12,0.579,14,1.027,23,1.51,28,0.587,29,1.194,52,3.219,57,0.008,59,0.898,60,1.525,61,2.843,68,4.912,81,1.142,84,3.129,89,3.408,114,0.245,127,0.253,145,2.484,169,3.951,170,1.627,177,3.875,178,2.646,190,3.716,230,0.004,231,0.006,232,0.004,309,2.646,320,0.31,342,1.224,351,2.548,353,2.048,359,1.873,362,2.55,387,1.888,400,0.385,401,1.005,402,3.542,403,3.153,404,3.153,405,1.839,406,3.153,407,4.822,408,5.163,409,3.941,410,2.304,411,3.002,412,4.59,413,2.105,414,2.869,415,4.699,416,3.875,417,4.258,418,2.843,419,4.258,420,4.258,421,4.258,422,3.573]],["title/interfaces/MenuGroup-1.html",[351,1.407,392,1.374,400,0.198]],["body/interfaces/MenuGroup-1.html",[3,0.175,4,0.175,9,0.127,10,1.752,12,0.579,14,1.029,23,1.12,28,0.588,29,1.195,52,3.222,57,0.008,59,0.898,60,1.526,61,2.847,68,4.914,81,1.144,84,3.132,89,3.408,114,0.246,127,0.253,145,2.487,169,3.953,170,1.63,177,3.88,178,2.651,190,3.721,230,0.004,231,0.006,232,0.004,309,2.651,342,1.224,351,2.55,353,2.049,359,1.876,362,2.554,387,1.891,400,0.385,401,1.007,403,3.159,404,3.159,405,1.843,406,3.159,407,4.826,408,5.167,409,3.943,410,2.308,411,3.007,412,4.594,413,2.109,414,2.875,415,4.702,416,3.88,417,4.264,418,2.847,419,4.264,420,4.264,421,4.264,422,3.577,423,3.549]],["title/interfaces/MenuItem.html",[400,0.236,409,2.309]],["body/interfaces/MenuItem.html",[3,0.168,4,0.168,9,0.122,12,0.675,14,0.986,23,1.674,28,0.564,29,1.162,52,3.153,57,0.008,59,0.99,60,1.605,61,3.39,68,4.462,81,1.097,84,2.689,89,3.375,114,0.236,127,0.247,145,2.417,169,3.39,170,1.563,177,4.996,178,3.477,190,4.792,230,0.004,231,0.005,232,0.004,309,2.541,320,0.298,342,1.252,351,2.19,353,1.674,359,1.332,362,2.449,387,1.813,400,0.379,401,0.966,402,3.403,403,3.029,404,3.029,405,1.767,406,3.029,407,5.491,408,5.723,409,4.012,410,3.028,411,3.945,412,4.496,413,2.767,414,4.621,415,5.115,416,2.756,417,3.029,418,2.022,419,3.029,420,3.029,421,3.029,422,2.541]],["title/interfaces/MenuItem-1.html",[392,1.374,400,0.198,409,1.946]],["body/interfaces/MenuItem-1.html",[3,0.168,4,0.168,9,0.122,10,1.683,12,0.675,14,0.988,23,1.471,28,0.565,29,1.163,52,3.156,57,0.008,59,0.99,60,1.605,61,3.393,68,4.465,81,1.099,84,2.692,89,3.376,114,0.236,127,0.248,145,2.42,169,3.393,170,1.566,177,4.999,178,3.481,190,4.794,230,0.004,231,0.005,232,0.004,309,2.546,342,1.253,351,2.192,353,1.676,359,1.335,362,2.453,387,1.816,400,0.379,401,0.967,403,3.034,404,3.034,405,1.77,406,3.034,407,5.494,408,5.726,409,4.015,410,3.032,411,3.949,412,4.5,413,2.77,414,4.624,415,5.118,416,2.761,417,3.034,418,2.026,419,3.034,420,3.034,421,3.034,422,2.546,423,3.408]],["title/classes/MockEditorJS.html",[128,0.453,964,3.337]],["body/classes/MockEditorJS.html",[3,0.184,4,0.184,9,0.134,18,1.891,28,0.619,29,1.237,39,1.496,47,2.076,52,2.946,54,1.617,56,1.716,57,0.008,58,1.083,59,1.05,60,0.893,75,2.1,114,0.385,127,0.259,128,0.756,136,2.221,230,0.004,231,0.006,232,0.004,320,0.566,342,0.904,453,2.221,465,2.574,469,1.53,471,3.225,472,2.596,476,2.946,478,1.257,546,2.902,560,2.044,576,3.307,591,3.026,593,4.156,596,5.022,814,2.902,876,3.512,942,3.325,964,4.66,965,3.736,966,5.23,967,5.981,968,4.8,969,4.392,970,6.584,971,4.961,972,4.961,973,5.564,974,4.961,975,4.961,976,4.016,977,4.016,978,4.66,979,4.016,980,3.512,981,5.981,982,4.016,983,4.016,984,5.329,985,4.016,986,4.016,987,3.325,988,4.016]],["title/injectables/MockNgZone.html",[318,1.097,989,3.816]],["body/injectables/MockNgZone.html",[3,0.197,4,0.197,9,0.144,12,0.427,28,0.663,29,1.294,35,2.171,47,2.409,54,1.608,56,2.381,57,0.008,58,1.503,59,0.953,60,1.239,62,1.21,63,2.077,74,2.642,75,2.913,90,2.221,114,0.277,117,0.782,127,0.186,128,0.51,136,1.943,230,0.005,231,0.006,232,0.005,318,1.601,319,2.077,320,0.565,414,3.239,434,2.122,461,3.759,462,2.377,472,4.488,989,5.573,990,7.593,991,7.593,992,4.701,993,6.885,994,6.885,995,8.373,996,7.639,997,6.094,998,6.885,999,8.082,1000,6.885,1001,6.885,1002,5.311,1003,6.542,1004,6.885,1005,5.311,1006,5.311,1007,5.407,1008,6.885,1009,5.311,1010,5.311]],["title/classes/MockPlugin.html",[128,0.453,980,3.337]],["body/classes/MockPlugin.html",[3,0.195,4,0.195,9,0.142,18,2.604,28,0.655,35,2.154,39,2.29,47,1.655,52,3.057,54,1.312,57,0.008,74,2.363,75,2.221,114,0.396,127,0.267,128,0.773,136,2.27,230,0.005,231,0.006,232,0.005,320,0.5,342,0.938,453,1.928,465,2.969,469,2.48,471,4.085,476,3.399,478,1.329,546,3.069,560,2.162,576,3.057,591,3.201,593,2.951,596,4.359,814,3.069,876,3.714,942,3.517,964,3.714,965,3.951,966,3.714,967,4.248,968,4.166,973,5.143,976,4.248,977,4.248,978,4.835,979,4.248,980,4.835,981,6.148,982,4.248,983,4.248,984,5.529,985,4.248,986,4.248,987,3.517,988,4.248,1011,5.248,1012,5.248]],["title/components/NavBarComponent.html",[0,1.521,207,2.309]],["body/components/NavBarComponent.html",[0,2.7,1,1.903,2,2.563,3,0.144,4,0.144,5,2.106,6,1.645,7,1.966,8,2.186,9,0.105,10,2.637,12,0.313,13,3.015,14,1.214,15,1.754,21,2.106,22,4.648,23,1.989,24,3.128,26,3.128,28,0.485,40,4.892,41,3.549,54,1.248,57,0.008,58,1.548,59,0.694,62,0.885,63,1.519,67,1.344,68,4.521,73,2.814,83,6.278,84,3.265,89,2.989,90,1.254,114,0.29,115,3.8,117,0.572,119,1.225,120,2.106,127,0.136,128,0.373,131,3.728,155,1.903,157,3.015,160,2.725,161,3.44,162,4.924,163,4.924,164,3.44,165,3.44,166,3.44,167,3.44,168,3.44,169,1.739,170,1.344,171,2.106,172,4.924,173,3.474,174,5.75,175,3.44,176,3.44,177,2.37,178,3.128,179,3.728,180,0.857,181,4.924,182,3.44,183,3.146,184,3.44,185,4.503,186,3.44,187,3.44,188,3.44,189,2.926,190,2.273,191,3.44,192,3.146,193,1.344,194,3.128,195,2.489,196,1.691,197,3.989,198,2.186,199,2.186,200,1.845,201,1.646,202,1.903,203,3.128,204,1.791,205,2.033,206,2.186,207,3.474,208,4.624,209,2.186,210,1.739,211,1.791,212,2.186,213,1.845,214,0.37,215,1.754,216,2.186,217,1.903,218,2.186,219,1.903,220,1.845,221,2.186,222,1.791,223,2.186,224,1.845,225,1.903,226,2.106,227,1.691,228,2.106,229,2.186,230,0.003,231,0.005,232,0.003,285,5.741,351,2.301,359,1.64,608,3.549,629,2.563,690,3.128,1007,4.598,1013,6.278,1014,3.44,1015,7.092,1016,5.563,1017,5.563,1018,5.563,1019,6.497,1020,5.563,1021,4.188,1022,3.886,1023,3.886,1024,3.886,1025,5.563,1026,3.886,1027,5.563]],["title/components/NgxEditorJSBaseComponent.html",[0,1.521,210,2.11]],["body/components/NgxEditorJSBaseComponent.html",[0,2.363,1,0.842,2,2.074,3,0.064,4,0.064,5,0.931,7,1.93,8,0.966,9,0.046,12,0.362,15,0.542,18,1.114,19,2.557,20,3.348,21,0.931,22,3.76,23,1.069,28,0.214,29,0.549,32,1.271,35,0.922,37,2.872,38,3.186,39,2.572,41,1.865,43,1.529,47,0.542,52,1.308,54,1.609,56,1.898,57,0.008,58,1.535,59,0.997,60,0.988,62,1.516,63,2.681,67,0.594,73,1.93,74,2.577,75,2.901,81,1.092,84,0.747,90,1.889,91,2.471,96,1.865,97,1.357,105,3.76,114,0.335,115,4.01,117,0.253,122,0.727,125,0.966,127,0.103,128,0.165,136,1.652,138,2.606,149,1.294,150,1.294,155,0.842,157,1.584,173,1.868,180,1.148,193,0.594,194,1.644,195,3.147,196,0.747,197,2.531,198,0.966,199,0.966,200,0.816,201,1.199,202,2.688,203,1.644,204,0.792,205,0.899,206,0.966,207,0.842,208,0.966,209,0.966,210,2.258,211,0.792,212,0.966,213,0.816,214,0.395,215,0.922,216,0.966,217,0.842,218,0.966,219,0.842,220,0.816,221,0.966,222,0.792,223,0.966,224,0.816,225,0.842,226,0.931,227,0.747,228,0.931,229,0.966,230,0.002,231,0.003,232,0.002,239,1.143,268,1.865,305,1.865,311,0.747,320,0.555,322,2.78,324,1.419,327,2.633,336,2.439,339,1.865,342,0.914,358,1.432,359,1.818,361,0.655,400,0.146,405,1.143,410,2.205,415,1.783,427,0.869,437,1.989,440,1.216,453,2.028,459,1.959,462,1.308,472,1.529,478,0.435,479,1.204,482,1.958,507,1.173,512,2.579,537,1.479,538,1.204,541,1.479,542,1.905,545,2.137,559,1.644,560,1.204,566,2.323,575,3.716,577,2.7,581,2.069,586,1.959,587,1.905,589,1.865,593,1.644,598,3.382,599,2.434,600,2.557,601,2.557,602,2.557,603,3.382,606,2.745,607,1.783,608,2.872,609,2.557,610,1.959,612,2.069,613,1.347,614,2.069,615,1.959,616,1.959,617,1.783,618,1.959,619,3.348,620,2.7,621,2.069,624,2.777,629,2.074,640,3.799,657,3.643,658,1.391,662,2.366,666,1.152,670,2.205,671,1.216,673,3.76,675,1.391,676,1.391,680,1.959,690,0.966,694,1.521,702,2.366,708,1.391,742,3.088,745,2.587,747,3.088,748,4.443,749,5.695,751,2.201,772,4.084,775,2.366,777,1.391,790,3.088,814,2.633,822,3.643,870,2.872,966,2.7,1003,3.643,1007,4.145,1021,2.201,1028,1.391,1029,2.923,1030,3.376,1031,3.088,1032,3.376,1033,3.376,1034,3.376,1035,3.643,1036,2.587,1037,2.587,1038,2.587,1039,3.984,1040,2.587,1041,2.872,1042,3.088,1043,1.521,1044,2.923,1045,1.718,1046,2.201,1047,1.718,1048,1.718,1049,1.718,1050,1.718,1051,1.718,1052,2.069,1053,3.186,1054,1.718,1055,1.718,1056,1.718,1057,1.718,1058,1.718,1059,1.718,1060,2.366,1061,1.718,1062,3.984,1063,2.587,1064,3.376,1065,3.984,1066,1.718,1067,2.366,1068,2.587,1069,2.587,1070,2.587,1071,3.984,1072,1.718,1073,1.71,1074,1.718,1075,1.718,1076,2.587,1077,1.718,1078,2.587,1079,3.017,1080,2.587,1081,1.718,1082,2.587,1083,1.718,1084,2.587,1085,1.718,1086,1.718,1087,1.718,1088,1.718,1089,2.587,1090,5.183,1091,1.718,1092,1.718,1093,1.718,1094,1.718,1095,2.587,1096,2.366,1097,2.923,1098,1.391,1099,1.521,1100,1.718,1101,1.718,1102,1.718,1103,1.718,1104,1.718,1105,1.718,1106,1.521,1107,1.718,1108,1.718,1109,1.718,1110,1.718,1111,1.718,1112,1.718,1113,1.718,1114,2.587,1115,1.718,1116,1.718,1117,1.718,1118,1.718,1119,1.718]],["title/components/NgxEditorJSComponent.html",[0,1.521,211,2.172]],["body/components/NgxEditorJSComponent.html",[0,2.509,1,1.101,2,1.685,3,0.084,4,0.084,5,1.219,6,0.952,7,1.85,8,1.265,9,0.061,12,0.428,14,0.798,20,2.23,21,1.219,22,4.183,23,1.265,24,2.056,26,2.056,28,0.281,29,0.687,32,1.591,35,1.153,37,4.221,38,4.683,39,2.411,41,2.333,47,0.709,52,1.006,54,1.69,56,2.171,57,0.008,58,1.637,59,1.059,60,1.241,62,1.669,63,2.696,67,0.778,73,1.137,74,2.69,75,3.101,81,0.888,84,0.978,90,1.18,91,1.791,96,1.435,97,1.102,99,1.82,105,3.064,114,0.327,116,1.82,117,0.331,124,1.507,125,1.265,127,0.079,128,0.216,131,2.451,136,0.635,138,1.068,149,1.693,150,1.693,155,1.101,157,2.504,160,1.101,173,1.101,178,1.265,180,1.02,185,1.82,193,0.778,194,2.056,195,2.961,196,2.01,197,2.994,198,1.265,199,1.265,200,1.068,201,1.46,202,2.263,203,2.056,204,1.036,205,1.176,206,1.265,207,1.101,208,1.265,209,1.265,210,3.938,211,2.453,212,1.265,213,1.068,214,0.399,215,1.153,216,1.265,217,1.101,218,1.265,219,1.101,220,1.068,221,1.265,222,1.036,223,1.265,224,1.068,225,1.101,226,1.219,227,2.316,228,1.219,229,1.265,230,0.002,231,0.003,232,0.002,268,1.435,320,0.386,322,2.194,324,1.153,327,2.139,336,1.982,342,0.804,358,1.101,359,1.57,392,0.778,410,1.101,415,1.371,434,1.127,437,1.717,438,1.547,440,1.592,453,1.771,459,1.507,462,1.006,471,1.791,472,1.913,479,0.926,482,1.591,507,0.902,512,2.518,516,2.056,537,1.137,541,1.137,542,1.547,545,1.736,559,1.265,560,0.926,566,1.547,575,3.402,577,2.588,581,1.592,587,2.656,589,1.435,593,1.265,598,3.097,599,2.333,600,2.451,601,2.451,602,2.451,603,3.097,606,2.23,607,1.371,609,1.507,610,1.507,612,1.592,613,1.036,614,1.592,615,1.507,616,1.507,617,1.371,618,1.507,619,2.819,620,1.592,621,1.592,624,2.338,629,1.685,640,3.48,657,4.309,658,1.82,668,1.82,669,1.82,670,3.075,671,1.592,672,1.99,673,3.247,677,2.588,678,3.237,679,2.588,680,2.451,681,2.451,684,1.507,708,1.82,724,2.96,725,2.753,726,3.237,727,4.09,742,1.82,747,4.309,748,3.741,749,5.646,750,1.99,751,1.693,762,1.99,763,1.99,764,1.99,772,2.96,774,1.99,775,1.82,776,1.99,777,1.82,790,2.96,814,2.139,822,2.96,929,3.768,931,3.741,934,1.99,953,1.99,1003,2.96,1007,3.271,1021,2.753,1032,3.237,1033,3.237,1034,3.237,1035,3.741,1036,3.237,1037,3.237,1038,3.237,1039,4.09,1040,3.237,1041,2.753,1042,2.96,1043,1.99,1046,1.693,1052,1.592,1053,2.588,1060,1.82,1062,1.99,1063,1.99,1064,3.237,1065,3.237,1067,1.82,1068,1.99,1069,1.99,1070,1.99,1071,3.237,1073,1.315,1076,1.99,1078,1.99,1079,2.451,1080,1.99,1082,1.99,1084,1.99,1089,1.99,1090,4.09,1120,1.99,1121,4.621,1122,3.657,1123,3.657,1124,3.657,1125,8.666,1126,2.249,1127,2.249,1128,2.249,1129,2.249,1130,2.249,1131,2.249,1132,2.249,1133,2.249,1134,2.249,1135,2.249,1136,2.249,1137,2.249,1138,2.249,1139,2.249,1140,2.249,1141,2.249,1142,2.249,1143,2.249,1144,2.249,1145,2.249,1146,2.249,1147,2.249,1148,2.249,1149,2.249,1150,2.249,1151,2.249,1152,2.249,1153,2.249,1154,3.657,1155,3.657,1156,2.249,1157,2.249,1158,2.249,1159,2.249,1160,2.249,1161,2.249]],["title/interfaces/NgxEditorJSConfig.html",[400,0.236,625,2.875]],["body/interfaces/NgxEditorJSConfig.html",[3,0.179,4,0.179,9,0.13,12,0.387,28,0.6,29,1.212,52,2.151,57,0.008,58,1.049,59,0.6,60,1.16,61,2.151,62,1.656,81,1.565,90,2.346,114,0.336,117,0.708,127,0.285,157,2.605,180,1.121,195,2.151,214,0.462,230,0.004,231,0.006,232,0.004,296,4.563,311,3.164,320,0.317,324,2.033,325,1.742,342,0.999,359,1.418,400,0.322,401,1.027,437,2.08,462,2.151,475,2.704,478,1.218,479,3.437,486,2.605,487,3.494,507,1.929,512,1.929,541,2.432,556,3.771,566,2.034,574,3.626,576,2.885,578,4.546,596,3.068,597,3.62,598,3.222,599,3.068,600,3.222,601,3.222,602,3.222,603,4.321,604,4.255,605,3.62,606,2.932,607,2.932,608,3.068,609,3.222,610,3.222,611,4.255,612,3.403,613,2.215,614,3.403,615,3.222,616,3.222,617,2.932,618,3.222,619,2.932,620,4.563,621,3.403,622,4.563,623,5.218,624,3.261,625,4.74,626,3.892,627,3.222,628,3.892,629,2.215,630,3.892,631,3.222,632,3.403,633,3.892,634,3.403,635,3.62,636,3.892]],["title/interfaces/NgxEditorJSDemo.html",[400,0.236,452,2.238]],["body/interfaces/NgxEditorJSDemo.html",[3,0.17,4,0.17,9,0.123,12,0.367,14,1.546,23,1.479,28,0.57,29,1.17,57,0.008,58,1.359,59,0.777,65,3.049,81,1.108,89,1.698,97,2.136,114,0.325,119,1.44,127,0.289,145,3.113,152,4.025,180,1.173,201,1.683,214,0.439,215,2.866,230,0.004,231,0.005,232,0.004,320,0.301,324,1.963,325,2.372,342,0.627,344,1.507,351,2.82,353,1.683,358,2.236,359,1.346,363,2.31,364,2.31,365,3.575,387,3.195,400,0.428,401,0.976,409,2.236,418,2.043,434,1.408,439,2.043,444,2.913,445,2.474,446,2.568,447,2.708,448,2.31,449,2.168,450,3.257,451,3.374,452,2.956,453,2.319,454,3.15,455,2.31]],["title/interfaces/NgxEditorJSDemo-1.html",[392,1.374,400,0.198,452,1.886]],["body/interfaces/NgxEditorJSDemo-1.html",[3,0.175,4,0.175,9,0.127,10,1.752,12,0.379,14,1.572,23,1.12,28,0.588,29,1.195,57,0.008,58,1.388,59,0.588,65,3.116,81,1.144,89,1.752,97,2.171,114,0.332,119,1.486,127,0.291,145,3.148,180,1.188,201,1.699,214,0.442,215,2.849,230,0.004,231,0.006,232,0.004,324,2.006,325,2.386,342,0.647,344,1.556,351,2.253,353,1.711,358,2.308,359,1.39,363,2.384,364,2.384,365,3.608,387,3.23,400,0.431,401,1.007,418,2.109,434,1.453,439,2.109,445,2.554,446,2.651,447,2.767,448,2.384,449,2.238,450,3.328,451,3.447,452,3.02,453,2.341,454,3.218,455,2.384,456,3.007]],["title/interfaces/NgxEditorJSDemoData.html",[400,0.236,454,2.385]],["body/interfaces/NgxEditorJSDemoData.html",[3,0.176,4,0.176,9,0.128,12,0.382,14,1.577,23,1.519,57,0.008,58,1.395,65,3.131,81,1.152,89,1.765,97,2.179,114,0.333,119,1.497,127,0.292,145,3.155,152,3.131,180,0.985,201,1.702,214,0.443,215,2.867,230,0.004,231,0.006,232,0.004,320,0.313,324,1.497,325,2.39,342,0.652,344,1.567,351,2.56,353,1.717,358,2.325,359,1.4,363,2.401,364,2.401,365,3.695,387,3.238,400,0.424,401,1.014,409,2.325,418,2.124,434,1.971,439,2.124,444,3.029,445,2.573,446,2.67,447,2.781,448,2.401,449,2.254,450,2.484,451,2.573,452,2.254,453,1.804,454,3.656,455,2.401]],["title/interfaces/NgxEditorJSDemoData-1.html",[392,1.374,400,0.198,454,2.01]],["body/interfaces/NgxEditorJSDemoData-1.html",[3,0.179,4,0.179,9,0.13,10,1.794,12,0.388,14,1.59,23,1.147,57,0.008,58,1.41,65,3.165,81,1.171,89,1.794,97,2.197,114,0.337,119,1.521,127,0.293,145,3.173,180,0.996,201,1.71,214,0.445,215,2.859,230,0.004,231,0.006,232,0.004,324,1.521,325,2.397,342,0.663,344,1.593,351,2.289,353,1.731,358,2.363,359,1.423,363,2.441,364,2.441,365,3.711,387,3.256,400,0.426,401,1.031,418,2.159,434,1.992,439,2.159,445,2.615,446,2.714,447,2.811,448,2.441,449,2.291,450,2.524,451,2.615,452,2.291,453,1.824,454,3.686,455,2.441,456,3.079]],["title/components/NgxEditorJSDemoHomeComponent.html",[0,1.521,213,2.238]],["body/components/NgxEditorJSDemoHomeComponent.html",[0,2.786,1,2.184,2,3.471,3,0.166,4,0.166,5,2.416,6,1.886,7,2.255,8,2.507,9,0.121,14,1.337,15,1.931,21,2.416,22,4.74,23,1.79,24,3.445,26,3.445,57,0.008,58,1.644,64,4.306,65,3.69,67,1.542,84,1.939,102,4.406,114,0.233,117,0.657,119,2.572,127,0.157,128,0.428,152,3,155,2.184,193,1.542,194,3.445,195,2.741,196,1.939,197,4.236,198,2.507,199,2.507,200,2.117,201,1.768,202,3.868,203,3.445,204,2.054,205,4.453,206,2.507,207,2.184,208,2.507,209,2.507,210,1.995,211,2.054,212,2.507,213,3.577,214,0.46,215,2.842,216,2.507,217,2.184,218,2.507,219,2.184,220,2.117,221,2.507,222,2.054,223,2.507,224,2.117,225,2.184,226,2.416,227,1.939,228,2.416,229,2.507,230,0.004,231,0.005,232,0.004,233,1.385,320,0.294,410,3.69,437,1.976,524,3.319,585,2.908,587,3.188,644,4.807,681,4.105,782,3.357,787,5.664,788,4.958,885,4.335,944,4.612,1079,5.049,1162,3.946,1163,3.609,1164,4.105,1165,6.125,1166,4.612,1167,3.582,1168,5.421,1169,5.421]],["title/components/NgxEditorJSDemoInfoComponent.html",[0,1.521,217,2.309]],["body/components/NgxEditorJSDemoInfoComponent.html",[0,2.459,1,1.607,2,2.264,3,0.243,4,0.122,5,1.778,6,1.389,7,1.66,8,1.845,9,0.089,18,1.873,21,1.778,22,4.521,23,2.053,24,2.764,26,2.764,28,0.409,29,0.924,30,2.797,35,1.55,39,1.972,41,3.136,43,2.571,54,1.506,56,1.135,57,0.008,58,1.529,59,0.874,60,0.591,62,0.747,63,1.921,67,1.135,68,4.509,71,3.978,74,2.038,75,2.493,81,1.701,84,1.427,89,2.605,90,1.585,97,1.972,105,3.082,113,5.537,114,0.307,115,4.098,117,0.483,121,1.717,122,1.389,127,0.115,128,0.315,131,3.294,136,0.926,152,3.602,155,1.607,157,2.663,158,2.471,193,1.135,194,2.764,195,2.199,196,1.427,197,3.679,198,1.845,199,1.845,200,1.558,201,1.642,202,1.607,203,2.764,204,1.512,205,1.717,206,1.845,207,1.607,208,1.845,209,1.845,210,1.468,211,1.512,212,1.845,213,1.558,214,0.384,215,2.702,216,1.845,217,3.204,218,1.845,219,1.607,220,1.558,221,1.845,222,1.512,223,1.845,224,1.558,225,1.607,226,1.778,227,1.427,228,1.778,229,1.845,230,0.003,231,0.004,232,0.003,320,0.528,336,2.663,342,0.675,350,3.478,351,2.087,355,3.7,363,1.66,375,2.471,376,2.471,416,2.997,656,5.215,684,2.199,741,4.631,752,5.791,791,6.509,795,4.35,823,4.35,825,6.347,836,4.35,862,2.905,863,2.905,887,3.294,906,3.7,929,3.478,932,2.656,933,2.656,1167,2.874,1170,7.097,1171,6.49,1172,2.905,1173,5.892,1174,4.915,1175,5.215,1176,7.006,1177,5.892,1178,3.282,1179,3.282,1180,3.282,1181,3.282,1182,3.282,1183,3.282,1184,3.282,1185,3.282,1186,3.282,1187,3.282,1188,3.282,1189,2.407,1190,4.35,1191,4.915,1192,4.915,1193,4.915,1194,4.35,1195,4.915,1196,3.7,1197,4.915,1198,3.282]],["title/directives/NgxEditorJSDirective.html",[196,2.051,227,2.051]],["body/directives/NgxEditorJSDirective.html",[0,2.246,2,1.49,3,0.072,4,0.072,7,1.635,9,0.052,12,0.391,13,1.752,15,1.019,18,1.232,19,2.789,20,2.538,21,1.049,22,1.691,28,0.242,29,0.608,30,3.203,32,1.406,35,1.019,37,3.101,38,3.44,39,2.381,41,2.063,43,1.691,47,0.611,52,1.447,54,1.616,56,1.439,57,0.008,58,1.179,59,0.974,60,0.749,62,1.411,63,1.627,64,1.635,74,2.333,75,2.471,81,1.417,85,1.298,87,3.659,90,1.999,93,2.862,97,1.465,105,3.242,114,0.305,115,4.181,117,0.285,121,1.013,122,0.819,127,0.068,128,0.186,136,1.748,138,2.307,156,2.288,157,1.752,173,0.948,180,1.04,195,3.493,196,3.436,201,0.662,202,1.583,214,0.412,226,1.049,227,1.406,228,1.752,230,0.002,231,0.003,232,0.002,268,2.063,311,1.406,320,0.558,322,3.203,324,1.532,327,3.415,336,2.634,342,1.004,359,1.915,437,2.447,453,2.104,459,2.167,462,1.447,478,0.491,479,2.405,482,2.114,492,1.447,507,1.297,512,1.297,517,2.458,538,1.332,541,1.635,542,1.761,545,1.535,560,1.332,566,2.748,575,2.634,576,2.613,577,3.44,578,3.624,586,3.914,587,3.259,588,2.288,593,1.818,598,4.153,599,2.655,600,3.622,601,3.622,602,3.257,603,3.914,606,1.972,607,2.964,608,2.655,610,2.167,612,2.288,613,3.207,614,2.288,615,2.167,616,2.167,617,1.972,618,2.167,619,1.972,620,2.946,621,2.288,670,3.181,671,1.371,680,2.167,681,2.167,684,2.167,690,1.818,741,3.825,746,3.44,749,1.458,751,3.659,759,2.862,814,1.133,870,1.458,876,2.288,897,2.434,942,1.298,968,1.181,987,1.298,1007,3.825,1021,2.434,1041,3.133,1042,3.369,1046,2.434,1052,2.288,1053,3.44,1060,5.92,1098,1.567,1106,1.714,1114,1.714,1166,2.434,1167,1.891,1199,7.491,1200,1.714,1201,3.44,1202,2.862,1203,4.162,1204,4.86,1205,4.86,1206,3.233,1207,1.936,1208,4.86,1209,3.934,1210,3.233,1211,4.162,1212,2.862,1213,1.936,1214,1.936,1215,1.936,1216,1.936,1217,1.936,1218,1.936,1219,1.936,1220,1.936,1221,1.936,1222,1.936,1223,1.936,1224,1.936,1225,1.936,1226,3.233,1227,1.936,1228,1.936,1229,3.233,1230,4.86,1231,1.936,1232,2.862,1233,3.233,1234,3.233,1235,3.233,1236,2.862,1237,3.233,1238,3.233,1239,3.101,1240,1.936,1241,3.233,1242,1.936,1243,1.936,1244,1.714,1245,1.936,1246,1.936,1247,1.936,1248,1.936,1249,1.936,1250,1.936,1251,1.936,1252,1.936,1253,2.434,1254,1.936,1255,1.936,1256,1.936,1257,1.936,1258,1.936,1259,6.196,1260,1.936,1261,1.936,1262,1.936,1263,1.936,1264,1.936,1265,1.936,1266,1.936,1267,1.936,1268,1.936,1269,1.936,1270,1.936,1271,1.936,1272,1.936,1273,1.936,1274,1.936,1275,3.233,1276,1.936,1277,1.714,1278,1.936,1279,1.936,1280,1.936,1281,1.936,1282,1.936,1283,1.936,1284,1.936,1285,1.936,1286,1.936,1287,1.936,1288,1.936,1289,1.567,1290,1.936,1291,1.936]],["title/injectables/NgxEditorJSEffects.html",[318,1.097,1292,3.816]],["body/injectables/NgxEditorJSEffects.html",[3,0.177,4,0.177,9,0.129,28,0.595,29,1.206,30,2.266,32,2.791,47,1.505,54,1.232,56,1.651,57,0.008,58,1.042,59,0.595,60,0.859,62,1.087,63,1.866,90,2.069,99,3.863,105,3.791,114,0.444,117,0.703,119,1.505,122,2.02,125,2.684,127,0.168,128,0.459,136,2.187,180,0.736,214,0.422,230,0.004,231,0.006,232,0.004,318,1.492,319,1.866,320,0.477,325,1.733,361,1.819,453,2.349,462,2.871,478,1.209,549,4.356,557,2.684,558,4.784,560,2.985,561,4.076,566,2.715,584,5.893,670,3.795,814,3.752,942,3.199,968,3.913,987,4.3,1067,5.193,1096,3.863,1209,5.866,1289,5.193,1292,5.193,1293,6.414,1294,4.225,1295,4.773,1296,4.773,1297,6.416,1298,6.416,1299,7.749,1300,6.416,1301,7.247,1302,6.416,1303,6.416,1304,6.416,1305,6.416,1306,4.773,1307,4.773,1308,4.773,1309,3.594,1310,4.773,1311,4.773,1312,4.773,1313,4.773,1314,4.773]],["title/modules/NgxEditorJSModule.html",[233,0.867,248,2.758]],["body/modules/NgxEditorJSModule.html",[3,0.128,4,0.128,9,0.093,12,0.41,14,1.462,15,1.606,16,4.491,35,1.086,47,1.086,54,0.661,56,1.191,57,0.008,58,0.752,59,0.43,60,1.462,61,2.28,62,1.16,64,2.577,74,1.191,85,2.309,114,0.46,117,0.507,118,2.101,119,1.606,127,0.179,128,0.489,136,1.711,138,1.635,155,2.495,193,1.191,210,3.796,211,3.908,214,0.404,222,3.908,227,3.69,230,0.003,231,0.004,232,0.003,233,1.315,235,1.25,236,1.347,237,2.638,238,1.498,239,2.62,240,2.371,248,5.314,251,2.28,252,1.458,253,1.419,258,1.867,262,2.433,296,3.606,305,2.198,320,0.336,336,2.761,427,3.787,437,2.161,438,2.156,470,2.98,472,2.666,478,0.873,479,2.76,576,3.466,624,3.389,625,4.566,627,3.415,631,2.309,632,4.292,646,4.292,648,3.606,650,2.309,654,2.593,666,2.309,668,2.788,669,2.788,670,3.667,671,2.438,687,4.51,690,2.865,944,3.836,958,3.836,1167,4.652,1315,3.049,1316,3.049,1317,3.049,1318,3.049,1319,5.299,1320,4.379,1321,4.124,1322,2.788,1323,5.367,1324,4.51,1325,3.444,1326,3.444,1327,5.931,1328,5.931,1329,6.063,1330,3.415,1331,2.198,1332,5.095,1333,5.095,1334,4.51,1335,4.51,1336,4.124,1337,3.444,1338,3.444,1339,3.444,1340,3.444,1341,3.444,1342,3.444,1343,3.444,1344,3.049,1345,3.049,1346,3.049,1347,3.444,1348,5.095,1349,4.124,1350,2.788,1351,5.095,1352,3.444,1353,3.444]],["title/injectables/NgxEditorJSPluginService.html",[318,1.097,1320,2.758]],["body/injectables/NgxEditorJSPluginService.html",[3,0.124,4,0.124,9,0.09,12,0.531,14,1.441,15,1.572,16,2.241,28,0.417,29,0.937,30,2.829,35,1.572,39,2.569,43,2.608,47,1.054,54,1.473,56,2.443,57,0.008,58,1.616,59,0.924,60,1.381,62,1.357,63,1.949,74,2.787,75,2.109,77,5.845,114,0.26,117,0.492,127,0.117,128,0.634,136,2.09,138,3.643,214,0.26,230,0.003,231,0.004,232,0.003,233,0.615,256,3.528,275,3.862,318,1.159,319,1.307,320,0.519,322,3.516,324,1.572,342,1.158,353,1.949,361,3.278,405,1.949,437,1.608,448,2.521,449,2.366,465,2.896,469,2.751,471,1.638,480,4.273,482,2.168,483,3.351,485,1.808,488,3.741,489,1.956,493,3.827,535,2.608,576,2.23,587,2.109,623,4.034,634,4.674,643,4.034,754,2.707,902,4.964,1052,3.528,1320,2.915,1354,2.96,1355,4.984,1356,5.958,1357,4.984,1358,5.845,1359,3.344,1360,4.984,1361,6.604,1362,4.984,1363,4.984,1364,4.984,1365,3.344,1366,4.984,1367,3.344,1368,4.984,1369,3.344,1370,6.604,1371,4.984,1372,3.344,1373,3.753,1374,3.344,1375,3.344,1376,4.984,1377,2.96,1378,1.956,1379,2.96,1380,3.344,1381,3.344,1382,3.344,1383,3.344,1384,3.344,1385,6.604,1386,2.96,1387,3.344,1388,3.344,1389,3.344,1390,3.344,1391,3.344,1392,4.984,1393,4.984,1394,4.984]],["title/injectables/NgxEditorJSService.html",[318,1.097,670,2.309]],["body/injectables/NgxEditorJSService.html",[3,0.08,4,0.08,9,0.058,12,0.173,15,1.111,16,1.44,20,2.731,28,0.268,29,0.662,30,3.33,32,2.487,35,1.111,39,2.646,43,1.843,47,1.111,52,1.576,54,1.498,56,2.557,57,0.008,58,1.726,59,0.922,60,1.358,62,1.02,63,1.377,64,1.782,74,2.768,75,2.866,90,1.982,91,2.193,96,3.305,97,1.561,105,4.137,114,0.377,117,0.316,121,2.342,122,0.909,124,1.44,125,1.208,127,0.075,128,0.206,136,2.086,138,3.704,180,0.69,214,0.439,230,0.002,231,0.003,232,0.002,311,0.934,318,0.819,319,0.84,320,0.521,322,2.126,324,0.677,336,1.909,342,0.295,359,1.039,360,1.617,361,2.18,375,1.617,376,1.617,422,1.981,437,2.788,448,1.087,449,1.672,453,2.168,462,0.961,478,0.544,482,0.934,488,1.948,492,1.576,529,1.37,531,3.305,535,1.843,537,2.62,538,1.451,540,2.247,541,1.782,542,2.192,545,1.672,549,3.214,556,2.06,557,1.208,560,2.355,566,3.768,571,3.666,574,1.208,575,1.164,576,1.576,578,3.03,579,1.37,582,1.52,585,1.02,587,2.745,588,4.348,589,3.305,591,2.731,593,3.216,613,3.121,624,3.651,625,3.159,627,1.44,629,1.623,650,1.44,651,5.818,670,2.537,690,1.981,692,4.585,746,2.493,809,1.739,852,3.624,886,2.459,906,3.371,923,2.851,966,3.169,969,1.901,973,2.652,1035,3.624,1041,3.371,1052,2.493,1098,1.739,1164,2.361,1189,1.725,1209,3.624,1239,1.37,1244,3.963,1277,4.585,1319,3.666,1320,3.03,1328,3.118,1344,1.901,1345,1.901,1377,1.901,1379,1.901,1395,1.901,1396,6.143,1397,2.148,1398,2.148,1399,2.148,1400,3.522,1401,3.522,1402,2.148,1403,2.148,1404,2.148,1405,5.18,1406,3.522,1407,2.652,1408,3.522,1409,3.522,1410,2.148,1411,2.148,1412,2.148,1413,2.148,1414,5.18,1415,4.585,1416,2.148,1417,2.148,1418,2.148,1419,2.148,1420,2.148,1421,2.148,1422,2.148,1423,2.148,1424,4.193,1425,2.148,1426,2.148,1427,2.652,1428,2.148,1429,2.148,1430,2.148,1431,2.148,1432,3.522,1433,2.148,1434,2.148,1435,2.148,1436,2.148,1437,2.148,1438,2.148,1439,2.148,1440,2.148,1441,5.718,1442,2.148,1443,2.148,1444,2.148,1445,2.148,1446,2.148,1447,2.148,1448,2.148,1449,2.148,1450,2.148,1451,2.148,1452,2.148,1453,1.901,1454,2.148,1455,2.148,1456,2.148,1457,2.148,1458,2.148,1459,2.148,1460,2.148,1461,2.148,1462,2.148,1463,2.148,1464,2.148,1465,2.148,1466,2.148,1467,2.148,1468,2.148,1469,2.148]],["title/modules/NgxEditorjsDemoModule.html",[233,0.867,249,3.337]],["body/modules/NgxEditorjsDemoModule.html",[3,0.143,4,0.143,9,0.104,10,1.426,23,0.911,57,0.008,114,0.468,117,0.565,118,2.339,119,2.033,127,0.135,128,0.368,193,1.326,200,4.181,201,1.128,213,3.691,214,0.39,219,3.807,224,4.181,230,0.003,231,0.005,232,0.003,233,0.705,235,1.392,236,1.5,237,2.805,238,1.668,239,2.154,240,2.521,247,5.21,248,4.547,249,6.646,250,5.21,251,2.466,252,1.623,253,1.58,258,2.986,262,2.211,278,3.395,279,3.105,292,4.149,308,3.105,309,2.157,320,0.253,427,1.94,488,1.668,493,2.986,576,1.716,666,2.571,781,3.105,856,3.105,961,4.877,963,4.46,1163,3.105,1330,3.693,1331,2.447,1334,4.877,1335,4.877,1349,3.105,1470,3.395,1471,3.395,1472,3.395,1473,3.395,1474,6.132,1475,4.96,1476,4.741,1477,4.96,1478,4.96,1479,4.96,1480,4.741,1481,4.96,1482,2.888,1483,2.888,1484,5.51,1485,5.51,1486,4.877,1487,4.877,1488,5.51,1489,5.51,1490,4.46,1491,3.835,1492,3.105,1493,6.449,1494,3.105,1495,3.835,1496,3.835,1497,3.835,1498,3.835,1499,3.835,1500,3.835,1501,3.835,1502,3.835,1503,3.835]],["title/modules/NgxEditorjsNgrxModule.html",[233,0.867,1504,3.55]],["body/modules/NgxEditorjsNgrxModule.html",[3,0.212,4,0.212,9,0.155,12,0.46,15,2.275,57,0.008,96,4.603,114,0.433,117,0.842,119,1.802,127,0.201,128,0.549,193,1.976,214,0.447,230,0.005,231,0.006,232,0.005,233,1.575,235,2.073,236,2.234,237,2.486,238,2.486,239,2.234,240,2.234,248,5.115,251,3.228,252,2.418,253,2.354,258,3.91,262,2.894,275,3.534,320,0.376,359,2.127,437,2.327,470,4.22,492,3.228,584,5.106,690,4.057,1309,4.302,1330,4.835,1331,3.646,1504,6.584,1505,5.058,1506,5.714,1507,5.714,1508,5.714,1509,6.386,1510,5.84,1511,7.214,1512,7.214,1513,5.714,1514,5.714,1515,5.714,1516,5.714]],["title/modules/NgxEditorjsPluginsModule.html",[233,0.867,1517,3.55]],["body/modules/NgxEditorjsPluginsModule.html",[3,0.155,4,0.155,9,0.113,12,0.336,15,1.845,57,0.008,114,0.459,117,0.615,127,0.147,128,0.401,179,3.923,180,0.902,193,1.444,214,0.382,230,0.004,231,0.005,232,0.004,233,1.243,235,2.798,236,1.633,237,1.816,238,1.816,239,1.633,240,2.642,251,2.619,252,1.767,253,1.72,258,3.172,262,2.348,320,0.275,427,2.961,468,3.062,482,2.546,499,2.546,579,3.734,644,3.734,1166,4.407,1330,3.923,1331,2.664,1475,5.614,1476,5.366,1477,5.614,1478,5.614,1479,5.614,1480,5.366,1481,5.614,1517,7.069,1518,3.696,1519,3.696,1520,3.696,1521,5.897,1522,4.176,1523,4.176,1524,4.738,1525,5.853,1526,5.853,1527,5.853,1528,5.853,1529,5.181,1530,4.176,1531,4.176,1532,4.176,1533,4.176,1534,4.176,1535,4.176,1536,4.176,1537,4.176,1538,3.144,1539,4.176]],["title/modules/NgxHideableHeaderDemoModule.html",[233,0.867,1540,3.816]],["body/modules/NgxHideableHeaderDemoModule.html",[3,0.245,4,0.245,9,0.178,57,0.008,114,0.44,117,0.972,127,0.277,128,0.634,230,0.006,231,0.007,232,0.006,235,2.395,258,3.578,262,3.163,307,6.381,308,6.381,309,3.713,311,2.872,320,0.435,509,3.247,1330,5.284,1331,4.212,1482,4.971,1483,4.971,1540,6.381,1541,5.936,1542,5.344]],["title/modules/NgxTinynodesCoreMaterialModule.html",[233,0.867,1543,3.337]],["body/modules/NgxTinynodesCoreMaterialModule.html",[3,0.241,4,0.241,9,0.175,23,1.854,57,0.008,114,0.436,117,0.955,118,3.957,120,3.516,127,0.228,128,0.623,230,0.006,231,0.007,232,0.006,235,2.354,240,2.537,258,3.516,262,3.13,292,6.299,320,0.427,962,7.405,963,6.772,1330,5.607,1331,4.14,1486,7.405,1487,7.405,1543,5.522,1544,5.743,1545,6.488]],["title/modules/NgxTinynodesCoreModule.html",[233,0.867,250,3.16]],["body/modules/NgxTinynodesCoreModule.html",[3,0.193,4,0.193,9,0.14,12,0.417,15,2.525,23,1.974,49,3.546,57,0.008,97,2.043,114,0.418,117,0.764,120,4.092,127,0.182,128,0.498,193,1.794,201,1.062,217,4.462,230,0.005,231,0.006,232,0.005,233,1.389,235,1.882,236,2.028,237,3.285,238,2.256,239,2.028,240,2.952,246,6.166,250,6.138,251,3.033,252,2.195,253,2.136,258,3.673,262,2.72,289,4.59,320,0.342,325,1.831,430,4.543,492,3.033,784,5.487,897,5.104,958,5.104,1171,4.198,1543,6.448,1544,4.59,1546,4.59,1547,4.59,1548,4.59,1549,4.59,1550,5.186,1551,6.778,1552,6,1553,5.186,1554,5.186,1555,5.186]],["title/classes/NotReady.html",[128,0.453,563,2.758]],["body/classes/NotReady.html",[3,0.174,4,0.174,9,0.127,18,3.157,28,0.585,29,1.191,32,3.684,39,1.911,47,1.478,54,1.379,56,1.621,57,0.008,58,1.023,59,1.126,60,0.844,62,1.068,63,1.833,114,0.331,127,0.297,128,0.772,201,1.645,214,0.455,230,0.004,231,0.006,232,0.004,320,0.507,325,1.713,342,1.104,447,2.039,478,1.187,533,4.357,538,3.31,545,3.652,546,2.742,547,4.692,548,2.859,549,4.43,550,3.318,551,5.083,554,3.318,555,3.142,556,4.2,557,2.636,558,4.039,559,3.565,560,1.931,561,4.039,562,2.991,563,4.499,564,3.318,565,5.386,566,3.4,567,3.318,568,4.486,569,3.318,570,3.142,1556,6.338,1557,4.688]],["title/interfaces/Page.html",[67,1.631,400,0.236]],["body/interfaces/Page.html",[3,0.225,4,0.225,9,0.164,28,0.755,29,1.406,42,6.001,57,0.008,59,1.058,67,2.587,114,0.39,119,1.909,127,0.285,180,1.153,214,0.39,220,4.025,230,0.005,231,0.007,232,0.005,272,3.063,320,0.399,342,1.164,353,1.439,400,0.406,401,1.294,434,1.867,453,2.392,613,4.246,831,6.001,1558,4.559,1559,5.682]],["title/interfaces/PageBlock.html",[400,0.236,1559,3.16]],["body/interfaces/PageBlock.html",[3,0.235,4,0.235,9,0.171,28,0.79,29,1.445,42,4.482,57,0.008,59,0.79,67,2.19,114,0.401,119,1.997,127,0.291,180,1.276,214,0.401,220,3.65,230,0.006,231,0.007,232,0.006,272,3.203,320,0.417,342,1.056,353,1.505,400,0.414,401,1.353,434,2.37,453,1.787,613,4.274,831,4.482,1558,4.768,1559,5.549]],["title/components/PageContainerComponent.html",[0,1.521,224,2.238]],["body/components/PageContainerComponent.html",[0,2.131,1,1.098,2,1.68,3,0.083,4,0.083,5,1.214,6,0.948,7,1.134,8,1.26,9,0.061,10,0.833,12,0.293,13,1.976,14,0.796,15,1.675,17,3.76,18,1.39,19,3.09,20,3.566,21,1.214,22,4.18,23,1.489,24,2.051,26,2.051,28,0.28,29,0.685,30,3.475,32,2.006,35,1.15,37,3.39,39,2.409,43,1.908,47,1.675,49,2.779,54,1.467,56,0.775,57,0.008,58,1.276,59,0.455,60,0.403,61,2.377,62,1.332,63,1.803,67,2.916,74,2.022,75,2.248,84,0.975,89,2.33,90,1.714,91,2.864,105,2.412,114,0.371,117,0.33,119,1.844,121,1.172,122,0.948,123,1.586,124,1.502,125,1.26,127,0.079,128,0.215,131,2.444,136,1.65,138,2.522,152,2.602,155,1.098,156,2.581,157,1.976,158,2.746,170,1.837,180,1.018,193,0.775,194,2.051,195,1.632,196,0.975,197,2.988,198,1.26,199,1.26,200,1.064,201,1.591,202,1.098,203,2.051,204,1.032,205,1.172,206,1.26,207,1.098,208,1.26,209,1.26,210,1.003,211,1.032,212,1.26,213,1.064,214,0.456,215,2.62,216,1.26,217,1.098,218,1.26,219,1.098,220,2.189,221,1.26,222,1.032,223,1.26,224,2.522,225,1.098,226,1.214,227,0.975,228,1.214,229,1.26,230,0.002,231,0.003,232,0.004,252,2.914,256,2.581,320,0.512,322,3.269,324,1.15,325,1.978,330,1.586,336,1.976,337,2.444,342,0.308,351,0.794,360,1.687,361,0.854,392,0.775,413,1.632,437,1.714,452,1.731,453,2.326,469,1.124,485,1.323,499,1.586,507,1.463,509,1.502,514,1.68,542,1.543,559,2.988,560,2.836,566,3.013,587,3.488,591,4.2,608,3.731,613,1.68,617,2.224,624,1.845,629,1.68,642,2.746,670,2.602,684,1.502,741,2.581,754,1.814,782,1.687,783,3.228,784,2.952,785,3.228,786,3.228,787,3.732,788,2.952,796,4.428,797,1.984,798,4.215,799,4.702,800,4.702,804,3.228,805,3.228,808,1.984,816,3.228,817,3.228,825,2.952,835,3.228,838,3.228,840,1.984,850,1.814,852,1.814,854,1.984,855,1.984,856,1.814,857,1.984,858,1.984,859,1.687,860,1.984,861,1.984,870,4,873,1.984,874,1.984,875,1.984,877,1.984,879,1.984,880,1.984,881,1.984,882,1.984,883,1.984,884,1.984,886,1.731,887,3.561,888,1.984,889,1.984,890,1.984,902,2.444,906,2.746,907,3.228,909,3.228,910,3.228,911,1.984,912,1.984,913,1.984,914,1.984,915,1.984,916,1.984,917,2.952,918,3.228,919,2.952,920,3.228,921,2.952,922,3.228,923,2.952,929,2.581,930,1.984,931,1.814,932,1.814,933,1.814,1096,2.952,1492,6.29,1560,6.878,1561,5.847,1562,2.241,1563,2.241,1564,2.241,1565,2.241,1566,2.241,1567,2.241,1568,2.241,1569,2.241,1570,2.241,1571,3.647,1572,2.241,1573,2.241,1574,2.241,1575,2.241,1576,2.241,1577,2.241]],["title/modules/PageStoreModule.html",[233,0.867,1474,3.337]],["body/modules/PageStoreModule.html",[3,0.208,4,0.208,9,0.152,12,0.451,57,0.008,67,2.465,114,0.43,117,0.825,127,0.197,128,0.538,193,1.938,201,1.459,214,0.409,215,2.247,230,0.005,231,0.006,232,0.005,233,1.566,235,2.034,236,2.191,237,2.438,238,2.438,239,3.064,240,2.191,251,3.189,252,2.372,253,2.309,262,2.859,275,3.491,320,0.369,470,4.168,605,5.366,629,3.283,796,4.777,798,5.552,1073,4.168,1474,6.444,1509,6.308,1510,5.769,1578,4.961,1579,4.961,1580,5.832,1581,5.307,1582,5.605,1583,5.769,1584,6.308,1585,4.961,1586,5.605,1587,4.537]],["title/injectables/PagesQuery.html",[318,1.097,1580,3.16]],["body/injectables/PagesQuery.html",[3,0.236,4,0.236,9,0.172,47,2.001,54,1.219,56,2.195,57,0.008,58,1.385,59,0.792,60,1.142,67,2.195,114,0.45,117,0.935,127,0.223,128,0.61,214,0.402,230,0.006,231,0.007,232,0.006,272,3.211,275,3.771,318,1.791,319,2.482,320,0.507,434,2.373,435,5.138,440,4.493,441,5.138,1580,5.16,1581,5.255,1587,5.138,1588,5.618,1589,8.287,1590,6.347,1591,4.779,1592,4.493]],["title/injectables/PagesService.html",[318,1.097,798,3.008]],["body/injectables/PagesService.html",[3,0.123,4,0.123,9,0.089,12,0.528,15,1.558,28,0.412,29,0.929,30,2.81,32,3.208,35,1.558,39,2.119,42,2.34,43,2.586,47,1.042,52,2.212,54,1.594,56,2.644,57,0.008,58,1.668,59,1.021,60,1.446,67,3.182,74,2.644,75,3.121,85,2.216,90,1.066,105,3.999,114,0.399,117,0.487,119,1.042,122,1.399,127,0.116,128,0.318,136,0.933,138,2.81,180,1.28,214,0.444,230,0.003,231,0.004,232,0.003,272,1.672,275,4.067,311,1.438,318,1.15,319,1.293,320,0.554,322,2.346,327,2.891,331,2.676,338,4.648,405,1.932,453,2.157,492,2.212,504,2.421,560,2.036,565,2.216,613,4.041,680,3.312,746,3.498,796,5.483,798,3.153,831,2.34,850,2.676,902,4.401,1166,3.721,1386,4.374,1424,4,1559,5.123,1580,4.711,1581,4.287,1585,2.926,1587,2.676,1591,2.489,1593,2.926,1594,4.942,1595,4.942,1596,4.942,1597,4.942,1598,4.942,1599,4.942,1600,3.306,1601,4.942,1602,3.306,1603,7.029,1604,4.942,1605,3.306,1606,4.942,1607,3.498,1608,4.942,1609,3.306,1610,4.942,1611,3.306,1612,4.942,1613,3.306,1614,4.942,1615,3.306,1616,3.306,1617,3.306,1618,6.567,1619,4.942,1620,3.306,1621,3.306,1622,3.306,1623,4.942,1624,3.306,1625,3.306,1626,5.918,1627,4.942,1628,3.306,1629,3.306,1630,3.306]],["title/interfaces/PagesState.html",[400,0.236,1592,3.337]],["body/interfaces/PagesState.html",[3,0.242,4,0.242,9,0.176,47,2.051,57,0.008,58,1.419,67,2.249,114,0.437,117,0.958,127,0.274,128,0.625,214,0.339,230,0.006,231,0.007,232,0.006,272,3.29,318,1.817,320,0.428,400,0.325,401,1.39,434,2.582,460,5.883,461,4.603,796,4.359,1581,3.967,1591,4.897,1592,5.53,1631,5.265,1632,7.413,1633,6.916]],["title/injectables/PagesStore.html",[318,1.097,1581,2.875]],["body/injectables/PagesStore.html",[3,0.238,4,0.238,9,0.173,47,2.624,54,1.231,57,0.008,58,1.399,67,2.217,114,0.434,117,0.944,127,0.272,128,0.616,214,0.404,230,0.006,231,0.007,232,0.006,272,3.242,318,1.801,319,2.506,320,0.51,400,0.32,434,2.566,460,5.831,461,4.536,796,4.295,1581,4.723,1591,4.826,1592,4.536,1631,5.188,1632,6.855,1633,7.366,1634,6.409]],["title/interfaces/Paragraph.html",[400,0.236,507,1.892]],["body/interfaces/Paragraph.html",[3,0.146,4,0.146,6,1.667,9,0.106,12,0.317,28,0.491,29,1.23,57,0.008,59,1.146,60,1.284,62,1.786,81,1.589,127,0.295,160,4.042,169,2.513,170,2.854,171,3.043,180,1.413,214,0.409,230,0.003,231,0.005,232,0.003,320,0.259,325,2.181,342,1.17,344,2.16,353,0.936,392,1.362,400,0.439,401,0.842,405,1.54,413,2.513,434,2.2,438,1.667,469,1.214,496,2.134,499,1.713,500,2.134,501,3.158,502,3.158,503,2.061,504,1.929,505,3.158,506,2.938,507,3.311,508,2.938,509,3.325,510,2.938,511,2.304,512,1.58,513,2.938,514,3.476,515,3.285,516,2.215,517,3.311,518,2.304,519,2.304,520,2.304,521,2.304,522,2.304,523,2.938,524,2.134,525,2.215]],["title/interfaces/ParagraphBlock.html",[400,0.236,508,2.467]],["body/interfaces/ParagraphBlock.html",[3,0.147,4,0.147,6,1.674,9,0.107,12,0.318,28,0.494,29,1.233,57,0.008,59,1.153,60,1.287,62,1.721,81,1.593,127,0.295,160,3.502,169,2.521,170,2.857,171,3.053,180,1.421,214,0.422,230,0.003,231,0.005,232,0.003,320,0.261,325,2.122,342,1.135,344,2.166,353,0.94,392,1.368,400,0.442,401,0.845,405,1.547,413,2.521,434,2.33,438,1.674,469,1.22,496,2.144,499,1.721,500,2.144,501,3.168,502,3.168,503,2.07,504,1.938,505,3.168,506,2.948,507,3.151,508,3.433,509,3.329,510,2.948,511,2.314,512,1.587,513,2.948,514,3.482,515,3.295,516,2.225,517,3.319,518,2.314,519,2.314,520,2.314,521,2.314,522,2.314,523,2.948,524,2.144,525,2.225]],["title/injectables/PluginCode.html",[318,1.097,1635,3.337]],["body/injectables/PluginCode.html",[3,0.223,4,0.223,9,0.162,12,0.482,18,2.282,28,0.747,35,2.342,39,2.435,54,1.15,57,0.008,74,3.003,114,0.441,117,0.882,127,0.21,128,0.575,136,1.689,180,1.145,214,0.441,230,0.005,231,0.007,232,0.005,318,1.728,319,2.341,320,0.489,465,2.904,469,2.794,473,3.638,476,3.885,478,1.517,485,3.064,885,5.257,1378,3.502,1635,5.257,1636,5.299,1637,5.987,1638,5.987]],["title/modules/PluginCodeModule.html",[233,0.867,1475,3.008]],["body/modules/PluginCodeModule.html",[3,0.226,4,0.226,9,0.164,12,0.488,15,2.362,57,0.008,62,1.706,114,0.391,117,0.894,127,0.213,128,0.583,180,1.155,193,2.099,214,0.424,230,0.005,231,0.007,232,0.005,233,1.494,235,2.202,236,2.373,237,2.64,238,2.64,239,3.177,240,2.373,251,3.352,252,2.568,253,2.5,262,3.005,320,0.4,485,2.718,585,3.557,886,3.557,1189,3.669,1475,5.664,1635,6.283,1639,5.372,1640,5.372,1641,6.07,1642,4.06,1643,3.55,1644,6.07,1645,3.702,1646,6.07]],["title/interfaces/PluginConfig.html",[400,0.236,480,2.555]],["body/interfaces/PluginConfig.html",[3,0.19,4,0.19,9,0.138,12,0.411,14,1.114,35,2.116,54,1.288,57,0.008,60,1.349,90,2.164,114,0.35,117,0.752,127,0.29,128,0.645,136,1.441,201,1.045,214,0.35,230,0.004,231,0.006,232,0.004,233,1.378,311,2.919,320,0.442,324,1.61,342,1.093,353,2.017,361,1.946,400,0.398,401,1.091,465,3.233,466,3.614,467,3.422,468,2.671,469,2.831,470,2.986,471,3.671,473,3.671,474,3.422,475,2.871,476,3.354,477,5.023,478,1.293,479,2.764,480,3.636,481,4.497,482,2.221,483,2.871,484,3.258,485,1.852,486,3.636,487,3.636,488,2.919,489,2.986,490,3.258,491,3.114,492,2.285,493,2.767,494,3.258,497,2.871,1647,5.106]],["title/interfaces/PluginConfig-1.html",[392,1.374,400,0.198,480,2.153]],["body/interfaces/PluginConfig-1.html",[3,0.189,4,0.189,9,0.138,12,0.409,14,1.11,35,2.11,54,1.285,57,0.008,60,1.346,90,2.159,114,0.349,117,0.749,127,0.29,128,0.643,136,1.435,201,1.041,214,0.415,230,0.004,231,0.006,232,0.004,233,1.376,311,2.911,320,0.441,324,1.604,342,1.092,353,2.014,361,1.939,400,0.397,401,1.087,465,3.228,467,3.409,468,2.661,469,2.829,470,2.975,471,3.664,473,3.664,474,3.409,475,2.86,476,3.347,477,5.013,478,1.288,479,2.757,480,3.627,481,4.485,482,2.212,483,2.86,484,3.245,485,1.845,486,3.627,487,3.627,488,2.911,489,2.975,490,3.245,491,3.102,492,2.276,493,2.756,494,3.245,495,3.6,497,2.86,1648,5.086]],["title/injectables/PluginHeader.html",[318,1.097,1649,3.16]],["body/injectables/PluginHeader.html",[3,0.222,4,0.222,9,0.162,12,0.481,18,2.277,28,0.745,35,2.339,39,2.432,54,1.147,57,0.008,74,3.001,114,0.44,117,0.88,127,0.21,128,0.574,136,1.686,180,1.143,214,0.44,230,0.005,231,0.007,232,0.005,318,1.725,319,2.335,320,0.489,465,2.9,469,2.793,473,4.133,476,3.61,478,1.513,485,3.061,509,3.055,1378,3.494,1649,4.971,1650,5.287,1651,5.973,1652,4.835]],["title/modules/PluginHeaderModule.html",[233,0.867,1476,2.875]],["body/modules/PluginHeaderModule.html",[3,0.225,4,0.225,9,0.164,12,0.487,15,2.359,57,0.008,62,1.703,114,0.39,117,0.892,127,0.213,128,0.582,180,1.153,193,2.094,214,0.423,230,0.005,231,0.007,232,0.005,233,1.493,235,2.197,236,2.368,237,2.634,238,2.634,239,3.174,240,2.368,251,3.348,252,2.563,253,2.494,262,3.001,320,0.399,485,2.714,509,3.081,585,3.552,886,3.552,1189,3.664,1476,5.411,1642,4.054,1643,3.542,1645,3.693,1649,5.947,1653,5.36,1654,5.36,1655,6.056,1656,6.056,1657,6.056]],["title/injectables/PluginImage.html",[318,1.097,1658,3.337]],["body/injectables/PluginImage.html",[3,0.222,4,0.222,9,0.162,12,0.481,18,2.277,28,0.745,35,2.339,39,2.432,54,1.147,57,0.008,74,3.001,114,0.44,117,0.88,127,0.21,128,0.574,136,1.686,180,1.143,214,0.44,230,0.005,231,0.007,232,0.005,318,1.725,319,2.335,320,0.489,465,2.9,469,2.793,473,4.133,476,3.61,478,1.513,485,3.061,514,3.417,1378,3.494,1658,5.25,1659,5.287,1660,5.973,1661,5.973]],["title/modules/PluginImageModule.html",[233,0.867,1521,3.16]],["body/modules/PluginImageModule.html",[3,0.226,4,0.226,9,0.164,12,0.488,15,2.362,57,0.008,62,1.706,114,0.391,117,0.894,127,0.213,128,0.583,180,1.155,193,2.099,214,0.424,230,0.005,231,0.007,232,0.005,233,1.494,235,2.202,236,2.373,237,2.64,238,2.64,239,3.177,240,2.373,251,3.352,252,2.568,253,2.5,262,3.005,320,0.4,485,2.718,585,3.557,886,3.557,1189,3.669,1521,5.95,1642,4.06,1643,3.55,1645,3.702,1658,6.283,1662,5.372,1663,5.372,1664,6.07,1665,5.372,1666,5.372]],["title/injectables/PluginLink.html",[318,1.097,1667,3.337]],["body/injectables/PluginLink.html",[3,0.223,4,0.223,9,0.162,12,0.482,18,2.282,28,0.747,35,2.342,39,2.435,54,1.15,57,0.008,74,3.003,114,0.441,117,0.882,127,0.21,128,0.575,136,1.689,180,1.145,214,0.441,230,0.005,231,0.007,232,0.005,318,1.728,319,2.341,320,0.489,414,4.53,465,2.904,469,2.794,473,4.136,476,3.614,478,1.517,485,3.064,1378,3.502,1667,5.257,1668,5.299,1669,5.987,1670,5.987]],["title/modules/PluginLinkModule.html",[233,0.867,1477,3.008]],["body/modules/PluginLinkModule.html",[3,0.226,4,0.226,9,0.164,12,0.488,15,2.362,57,0.008,62,1.706,114,0.391,117,0.894,127,0.213,128,0.583,180,1.155,193,2.099,214,0.424,230,0.005,231,0.007,232,0.005,233,1.494,235,2.202,236,2.373,237,2.64,238,2.64,239,3.177,240,2.373,251,3.352,252,2.568,253,2.5,262,3.005,320,0.4,485,2.718,585,3.557,886,3.557,1189,3.669,1477,5.664,1642,4.06,1643,3.55,1645,3.702,1667,6.283,1671,5.372,1672,5.372,1673,6.07,1674,6.07,1675,6.07]],["title/injectables/PluginList.html",[318,1.097,1676,3.16]],["body/injectables/PluginList.html",[3,0.222,4,0.222,9,0.162,12,0.481,18,2.277,28,0.745,35,2.339,39,2.432,54,1.147,57,0.008,74,3.001,114,0.44,117,0.88,127,0.21,128,0.574,136,1.686,170,2.565,180,1.143,214,0.44,230,0.005,231,0.007,232,0.005,318,1.725,319,2.335,320,0.489,465,2.9,469,2.793,473,4.133,476,3.61,478,1.513,485,3.061,1378,3.494,1676,4.971,1677,5.287,1678,5.973,1679,5.287]],["title/modules/PluginListModule.html",[233,0.867,1478,3.008]],["body/modules/PluginListModule.html",[3,0.225,4,0.225,9,0.164,12,0.487,15,2.359,57,0.008,62,1.703,114,0.39,117,0.892,127,0.213,128,0.582,180,1.153,193,2.094,214,0.423,230,0.005,231,0.007,232,0.005,233,1.493,235,2.197,236,2.368,237,2.634,238,2.634,239,3.174,240,2.368,251,3.348,252,2.563,253,2.494,262,3.001,320,0.399,485,2.714,585,3.552,886,3.552,1189,3.664,1478,5.661,1642,4.054,1643,3.542,1645,3.693,1676,5.947,1680,5.36,1681,5.36,1682,6.056,1683,6.056,1684,6.056]],["title/injectables/PluginMarker.html",[318,1.097,1685,3.337]],["body/injectables/PluginMarker.html",[3,0.209,4,0.209,9,0.152,12,0.453,18,2.146,28,0.702,35,2.253,39,2.626,54,1.372,57,0.008,74,3.098,114,0.431,117,0.829,127,0.198,128,0.541,136,2.016,179,4.789,214,0.445,230,0.005,231,0.006,232,0.005,318,1.662,319,2.201,320,0.517,342,0.773,465,2.794,469,2.809,471,4.267,473,4.045,476,3.513,478,1.426,485,2.997,1378,3.292,1685,5.058,1686,4.982,1687,7.31,1688,5.629,1689,5.629,1690,5.629,1691,5.629]],["title/modules/PluginMarkerModule.html",[233,0.867,1479,3.008]],["body/modules/PluginMarkerModule.html",[3,0.225,4,0.225,9,0.164,12,0.487,15,2.359,57,0.008,62,1.703,114,0.39,117,0.892,127,0.213,128,0.582,179,5.014,193,2.094,214,0.423,230,0.005,231,0.007,232,0.005,233,1.493,235,2.197,236,2.368,237,2.634,238,2.634,239,3.174,240,2.368,251,3.348,252,2.563,253,2.494,262,3.001,320,0.399,485,2.714,585,3.552,886,3.552,1189,3.664,1479,5.661,1642,4.054,1643,3.542,1645,3.693,1685,6.28,1687,6.621,1692,5.36,1693,5.36,1694,6.056,1695,6.056,1696,6.056]],["title/injectables/PluginParagraph.html",[318,1.097,1697,3.16]],["body/injectables/PluginParagraph.html",[3,0.223,4,0.223,9,0.162,12,0.482,18,2.282,28,0.747,35,2.342,39,2.435,54,1.15,57,0.008,74,3.003,114,0.441,117,0.882,127,0.21,128,0.575,136,1.689,180,1.145,214,0.441,230,0.005,231,0.007,232,0.005,318,1.728,319,2.341,320,0.489,465,2.904,469,2.794,473,4.136,476,3.614,478,1.517,485,3.064,507,2.98,1378,3.502,1697,4.978,1698,5.299,1699,5.987,1700,4.508]],["title/modules/PluginParagraphModule.html",[233,0.867,1480,2.875]],["body/modules/PluginParagraphModule.html",[3,0.226,4,0.226,9,0.164,12,0.488,15,2.362,57,0.008,62,1.706,114,0.391,117,0.894,127,0.213,128,0.583,180,1.155,193,2.099,214,0.424,230,0.005,231,0.007,232,0.005,233,1.494,235,2.202,236,2.373,237,2.64,238,2.64,239,3.177,240,2.373,251,3.352,252,2.568,253,2.5,262,3.005,320,0.4,485,2.718,585,3.557,886,3.557,1189,3.669,1480,5.414,1642,4.06,1643,3.55,1645,3.702,1697,5.95,1701,5.372,1702,5.372,1703,6.07,1704,6.07,1705,6.07]],["title/injectables/PluginSimpleImage.html",[318,1.097,1706,3.337]],["body/injectables/PluginSimpleImage.html",[3,0.219,4,0.219,9,0.159,12,0.474,18,2.246,28,0.735,35,2.319,39,2.417,54,1.132,57,0.008,74,2.989,114,0.438,117,0.868,127,0.207,128,0.566,136,1.663,180,1.134,214,0.438,230,0.005,231,0.006,232,0.005,318,1.711,319,2.304,320,0.485,465,2.876,469,2.786,473,3.603,476,3.588,478,1.493,485,2.669,514,3.694,587,3.112,919,5.954,1378,3.447,1538,5.538,1706,5.206,1707,5.954,1708,5.216,1709,6.51,1710,5.893,1711,5.893]],["title/modules/PluginSimpleImageModule.html",[233,0.867,1481,3.008]],["body/modules/PluginSimpleImageModule.html",[3,0.222,4,0.222,9,0.162,12,0.481,15,2.339,57,0.008,114,0.387,117,0.88,127,0.21,128,0.574,180,1.143,193,2.066,214,0.421,230,0.005,231,0.007,232,0.005,233,1.484,235,2.167,236,2.335,237,2.598,238,2.598,239,3.154,240,2.335,251,3.319,252,2.528,253,2.46,262,2.976,320,0.393,482,3.227,485,2.691,514,3.417,585,3.522,886,3.522,1189,3.633,1481,5.642,1538,4.497,1642,4.02,1643,3.494,1645,3.643,1665,5.287,1666,5.287,1706,6.259,1707,4.835,1709,7.141,1712,5.287,1713,5.287,1714,5.973]],["title/classes/Ready.html",[128,0.453,538,1.942]],["body/classes/Ready.html",[3,0.174,4,0.174,9,0.127,18,3.157,28,0.585,29,1.191,32,3.684,39,1.911,47,1.478,54,1.379,56,1.621,57,0.008,58,1.023,59,1.126,60,0.844,62,1.068,63,1.833,114,0.331,127,0.297,128,0.772,201,1.645,214,0.455,230,0.004,231,0.006,232,0.004,320,0.507,325,1.713,342,1.104,447,2.039,478,1.187,533,4.357,538,3.412,545,3.652,546,2.742,547,4.692,548,2.859,549,4.43,550,3.318,551,5.083,554,3.318,555,3.142,556,4.2,557,2.636,558,4.039,559,3.565,560,1.931,561,4.039,562,2.991,563,4.2,564,3.318,565,5.386,566,3.4,567,3.318,568,3.318,569,4.486,570,3.142,1715,6.338,1716,4.688]],["title/interfaces/ReadyMap.html",[400,0.236,539,2.555]],["body/interfaces/ReadyMap.html",[3,0.181,4,0.181,9,0.132,12,0.393,54,0.937,57,0.008,59,0.812,73,3.293,81,1.898,91,2.39,97,1.963,114,0.382,121,4.832,122,2.065,127,0.294,180,1.129,214,0.459,230,0.004,231,0.006,232,0.004,320,0.429,342,1.175,344,1.61,353,2.145,361,3.441,400,0.419,401,1.042,437,1.574,453,1.377,478,1.236,497,2.744,512,2.612,526,2.644,527,3.113,528,6.05,529,3.113,531,3.113,532,3.971,533,2.468,534,2.976,535,2.552,536,2.976,537,3.293,538,2.682,539,3.528,540,3.113,541,2.468,542,2.065,543,2.644,1717,4.879]],["title/classes/SaveEnd.html",[128,0.453,561,2.651]],["body/classes/SaveEnd.html",[3,0.174,4,0.174,9,0.127,18,3.157,28,0.585,29,1.191,32,3.684,39,1.911,47,1.478,54,1.379,56,1.621,57,0.008,58,1.023,59,1.126,60,0.844,62,1.068,63,1.833,114,0.331,127,0.297,128,0.772,201,1.645,214,0.455,230,0.004,231,0.006,232,0.004,320,0.507,325,1.713,342,1.104,447,2.039,478,1.187,533,4.357,538,3.31,545,3.652,546,2.742,547,4.692,548,2.859,549,4.43,550,3.318,551,5.083,554,3.318,555,3.142,556,4.2,557,2.636,558,4.039,559,3.565,560,1.931,561,4.326,562,2.991,563,4.2,564,3.318,565,5.386,566,3.4,567,4.486,568,3.318,569,3.318,570,3.142,1718,6.338,1719,4.688]],["title/classes/SaveStart.html",[128,0.453,558,2.651]],["body/classes/SaveStart.html",[3,0.174,4,0.174,9,0.127,18,3.157,28,0.585,29,1.191,32,3.684,39,1.911,47,1.478,54,1.379,56,1.621,57,0.008,58,1.023,59,1.126,60,0.844,62,1.068,63,1.833,114,0.331,127,0.297,128,0.772,201,1.645,214,0.455,230,0.004,231,0.006,232,0.004,320,0.507,325,1.713,342,1.104,447,2.039,478,1.187,533,4.357,538,3.31,545,3.652,546,2.742,547,4.692,548,2.859,549,4.43,550,3.318,551,5.083,554,3.318,555,3.142,556,4.2,557,2.636,558,4.326,559,3.565,560,1.931,561,4.039,562,2.991,563,4.2,564,4.486,565,5.386,566,3.4,567,3.318,568,3.318,569,3.318,570,3.142,1720,6.338,1721,4.688]],["title/components/SidebarComponent.html",[0,1.521,225,2.309]],["body/components/SidebarComponent.html",[0,2.357,1,2.376,2,2.989,3,0.18,4,0.18,5,2.629,6,2.053,7,2.454,8,2.729,9,0.131,10,2.717,21,2.629,22,4.793,23,2.03,24,3.648,26,3.648,28,0.605,41,4.139,45,6.468,46,6.468,54,1.246,57,0.008,58,1.703,59,0.809,67,1.678,84,3.179,114,0.338,115,4.274,117,0.715,119,1.53,120,2.629,127,0.17,128,0.466,155,2.376,193,1.678,194,3.648,195,2.903,196,2.111,197,4.387,198,2.729,199,2.729,200,2.304,201,1.749,202,2.376,203,3.648,204,2.235,205,2.538,206,2.729,207,2.376,208,2.729,209,2.729,210,2.171,211,2.235,212,2.729,213,2.304,214,0.407,215,2.045,216,2.729,217,2.376,218,2.729,219,2.376,220,2.304,221,2.729,222,2.235,223,2.729,224,2.304,225,3.821,226,2.629,227,2.111,228,2.629,229,2.729,230,0.004,231,0.006,232,0.004,351,2.88,1722,6.468,1723,4.295,1724,7.307,1725,6.487,1726,4.852,1727,4.852,1728,6.487,1729,7.801,1730,6.487]],["title/interfaces/Tag.html",[220,2.238,400,0.236]],["body/interfaces/Tag.html",[3,0.236,4,0.236,9,0.172,28,0.794,29,1.449,42,4.503,57,0.008,59,0.794,67,2.2,114,0.402,119,2.006,127,0.291,180,1.188,214,0.402,220,3.939,230,0.006,231,0.007,232,0.006,272,3.219,320,0.419,342,1.184,353,2.049,400,0.415,401,1.359,434,1.961,453,1.795,613,4.07,831,4.503,1558,4.791,1559,5.168]],["title/classes/TestClass.html",[128,0.453,978,3.337]],["body/classes/TestClass.html",[3,0.199,4,0.199,9,0.144,18,2.037,28,0.667,35,2.179,39,1.611,47,2.416,52,3.754,54,1.327,57,0.008,74,1.848,75,2.261,114,0.4,127,0.269,128,0.778,136,2.286,230,0.005,231,0.006,232,0.005,320,0.505,342,0.734,453,1.95,465,2.702,469,1.647,471,3.385,476,3.093,478,1.354,546,3.125,560,2.201,576,3.093,591,3.259,593,3.005,596,4.41,814,3.125,876,3.782,942,3.581,964,3.782,965,4.023,966,3.782,967,4.325,968,4.215,973,5.204,976,4.325,977,4.325,978,5.423,979,4.325,980,3.782,981,6.201,982,4.325,983,4.325,984,5.595,985,4.325,986,4.325,987,3.581,988,4.325,1731,5.344,1732,5.344]],["title/interfaces/TinynodeDemos.html",[400,0.236,455,2.385]],["body/interfaces/TinynodeDemos.html",[3,0.172,4,0.172,9,0.125,12,0.372,14,1.556,23,1.694,28,0.577,29,1.18,57,0.008,58,1.37,59,0.577,65,3.492,81,1.122,89,1.719,97,2.149,114,0.328,119,1.457,127,0.29,145,3.127,152,3.075,180,0.968,201,1.782,214,0.459,215,2.883,230,0.004,231,0.006,232,0.004,320,0.304,324,1.457,325,2.378,342,0.635,344,1.526,351,2.525,353,1.694,358,2.264,359,1.363,363,2.338,364,2.338,365,3.588,387,3.208,400,0.422,401,0.988,409,2.264,418,2.068,434,1.425,439,2.068,444,2.949,445,2.505,446,2.599,447,2.731,448,2.338,449,2.195,450,2.418,451,2.505,452,2.195,453,1.772,454,3.869,455,3.176]],["title/interfaces/TinynodeDemos-1.html",[392,1.374,400,0.198,455,2.01]],["body/interfaces/TinynodeDemos-1.html",[3,0.175,4,0.175,9,0.127,10,1.746,12,0.378,14,1.569,23,1.508,28,0.586,29,1.193,57,0.008,58,1.385,59,0.586,65,3.52,81,1.14,89,1.746,97,2.167,114,0.331,119,1.481,127,0.291,145,3.144,180,0.978,201,1.788,214,0.46,215,2.877,230,0.004,231,0.006,232,0.004,324,1.481,325,2.385,342,0.645,344,1.55,351,2.248,353,1.708,358,2.3,359,1.385,363,2.376,364,2.376,365,3.605,387,3.226,400,0.423,401,1.003,418,2.102,434,1.448,439,2.102,445,2.545,446,2.641,447,2.761,448,2.376,449,2.23,450,2.457,451,2.545,452,2.23,453,1.791,454,3.894,455,3.21,456,2.996]],["title/interfaces/ToolSettingsMap.html",[400,0.236,483,2.651]],["body/interfaces/ToolSettingsMap.html",[3,0.189,4,0.189,9,0.138,12,0.409,14,1.11,35,2.11,54,1.285,57,0.008,60,1.346,90,2.159,114,0.349,117,0.749,127,0.29,128,0.489,136,1.435,201,1.041,214,0.349,230,0.004,231,0.006,232,0.004,233,1.231,311,2.911,320,0.441,324,1.604,342,1.092,353,2.014,361,2.551,400,0.397,401,1.087,465,2.925,466,3.6,467,3.409,468,2.661,469,2.816,470,2.975,471,3.664,473,4.044,474,3.409,475,2.86,476,3.557,477,5.327,478,1.288,479,2.095,480,2.756,481,3.409,482,2.911,483,3.764,484,4.27,485,2.428,486,3.627,487,3.627,488,2.911,489,2.975,490,3.245,491,3.102,492,2.276,493,2.756,494,3.245,497,2.86,1733,5.086]],["title/interfaces/ToolSettingsMap-1.html",[392,1.374,400,0.198,483,2.234]],["body/interfaces/ToolSettingsMap-1.html",[3,0.188,4,0.188,9,0.137,12,0.408,14,1.106,35,2.105,54,1.282,57,0.008,60,1.344,90,2.153,114,0.348,117,0.746,127,0.29,128,0.487,136,1.43,201,1.037,214,0.414,230,0.004,231,0.006,232,0.004,233,1.228,311,2.904,320,0.44,324,1.597,342,1.09,353,2.012,361,2.545,400,0.396,401,1.082,465,2.919,467,3.396,468,2.651,469,2.814,470,2.963,471,3.657,473,4.039,474,3.396,475,2.849,476,3.551,477,5.319,478,1.283,479,2.087,480,2.746,481,3.396,482,2.904,483,3.754,484,4.259,485,2.422,486,3.618,487,3.618,488,2.904,489,2.963,490,3.233,491,3.09,492,2.267,493,2.746,494,3.233,495,3.586,497,2.849,1734,5.066]],["title/changelog.html",[1735,2.812,1736,2.812,1737,2.324]],["body/changelog.html",[0,1.759,13,2.956,14,1.19,15,1.72,23,1.296,57,0.006,61,3.134,62,1.242,64,2.759,90,2.495,96,4.469,119,2.439,120,2.956,180,0.841,214,0.404,215,2.439,230,0.005,231,0.006,232,0.005,233,1.288,240,2.132,327,3.19,422,3.067,430,5.185,437,1.759,488,3.673,504,2.671,510,2.853,542,2.964,606,3.327,650,3.656,677,3.861,679,3.861,680,3.656,681,3.656,725,4.107,886,2.59,894,5.669,946,4.107,949,6.262,950,4.828,952,3.861,955,3.327,968,3.327,1079,3.656,1164,3.656,1194,4.828,1524,4.415,1583,4.415,1607,3.861,1737,4.096,1738,5.454,1739,5.454,1740,4.107,1741,5.454,1742,5.454,1743,5.825,1744,7.004,1745,5.454,1746,5.669,1747,5.454,1748,5.454,1749,7.004,1750,5.454,1751,5.454,1752,5.454,1753,4.828,1754,5.454,1755,5.454,1756,5.454,1757,5.454,1758,4.415,1759,5.454,1760,5.454,1761,5.454,1762,7.004,1763,7.004,1764,5.454,1765,4.828,1766,6.199,1767,4.828,1768,4.415,1769,5.454,1770,5.454,1771,3.48,1772,5.454,1773,5.454,1774,5.454,1775,5.454,1776,5.454,1777,5.454,1778,5.454,1779,5.454,1780,5.454,1781,5.454,1782,5.454,1783,5.454,1784,5.454,1785,4.828,1786,4.828,1787,4.828]],["title/contributing.html",[1735,2.812,1736,2.812,1788,3.516]],["body/contributing.html",[9,0.102,17,2.68,30,2.592,39,1.646,54,0.727,56,1.309,57,0.005,73,1.915,90,1.761,113,2.85,183,3.064,230,0.005,231,0.005,232,0.003,236,1.48,280,4.82,345,3.064,400,0.189,405,1.48,445,2.052,492,2.443,510,1.981,535,2.856,542,2.31,549,1.981,562,2.416,579,4.085,589,2.416,606,2.309,624,1.915,639,3.064,677,3.864,679,2.68,859,2.85,885,5.646,968,3.905,1046,5.276,1167,3.193,1175,3.351,1189,2.674,1196,2.85,1232,3.351,1236,3.351,1239,2.416,1358,3.351,1415,4.832,1427,2.85,1529,3.351,1552,3.351,1607,2.68,1766,4.832,1767,3.351,1771,5.564,1785,4.832,1786,3.351,1787,3.351,1788,4.832,1789,4.832,1790,5.667,1791,3.786,1792,3.786,1793,3.786,1794,3.351,1795,3.786,1796,3.786,1797,3.351,1798,7.977,1799,5.459,1800,3.786,1801,6.402,1802,3.786,1803,2.85,1804,3.786,1805,3.786,1806,4.419,1807,3.064,1808,3.786,1809,3.786,1810,3.786,1811,3.786,1812,3.786,1813,7.008,1814,3.064,1815,3.786,1816,3.064,1817,3.786,1818,3.786,1819,4.419,1820,3.351,1821,3.786,1822,3.786,1823,4.832,1824,3.786,1825,3.786,1826,5.459,1827,3.786,1828,3.786,1829,5.459,1830,3.786,1831,7.429,1832,3.786,1833,7.429,1834,5.459,1835,3.351,1836,5.459,1837,3.786,1838,3.786,1839,3.786,1840,3.786,1841,3.786,1842,3.786,1843,3.786,1844,5.459,1845,3.786,1846,3.786,1847,5.459,1848,3.786,1849,3.786,1850,3.786,1851,5.459,1852,3.786,1853,5.459,1854,7.429,1855,3.786,1856,3.786,1857,3.786,1858,5.459,1859,3.786,1860,3.786,1861,3.786,1862,3.786,1863,3.786,1864,3.786,1865,3.786,1866,3.786,1867,3.786,1868,3.786,1869,3.786,1870,3.786,1871,3.786,1872,3.786,1873,5.459,1874,6.402,1875,3.786,1876,3.786,1877,3.786,1878,3.786,1879,3.786,1880,3.786,1881,3.786,1882,3.786,1883,5.459,1884,3.786,1885,3.786,1886,3.351,1887,3.786,1888,3.786,1889,3.786,1890,3.786,1891,5.459,1892,3.786,1893,3.786,1894,3.786,1895,5.459,1896,3.786,1897,3.351,1898,3.786,1899,3.786,1900,3.786,1901,3.786,1902,3.786,1903,5.459,1904,3.786,1905,3.786,1906,5.459,1907,3.786,1908,3.786,1909,3.786,1910,3.786,1911,3.786,1912,3.786,1913,3.786,1914,3.786,1915,3.786,1916,3.786,1917,3.786,1918,5.459,1919,3.786,1920,3.786,1921,3.786,1922,3.786,1923,3.786,1924,3.786,1925,3.786,1926,3.351,1927,5.459,1928,5.459,1929,5.459,1930,3.786,1931,3.786,1932,3.786,1933,3.786,1934,3.786,1935,3.786,1936,3.786,1937,3.786,1938,3.786,1939,3.786,1940,3.786,1941,5.459,1942,3.786,1943,5.459,1944,3.786,1945,3.786,1946,3.351,1947,3.786,1948,3.786,1949,5.459,1950,3.351,1951,3.786,1952,3.786,1953,3.786,1954,3.786,1955,3.786,1956,3.786,1957,3.786,1958,3.786,1959,3.786,1960,3.786,1961,3.786,1962,3.786,1963,3.786,1964,3.786,1965,3.786,1966,3.786,1967,3.786,1968,3.786,1969,3.786,1970,3.786,1971,3.786,1972,3.786,1973,3.786,1974,3.786,1975,3.786,1976,3.786,1977,3.786,1978,3.786,1979,3.786,1980,3.786]],["title/coverage.html",[1981,5.632]],["body/coverage.html",[0,2.406,1,1.011,9,0.056,10,3.039,11,1.827,23,1.805,49,1.783,57,0.008,59,0.257,67,0.714,90,0.666,128,0.64,155,2.952,170,0.714,173,4.168,180,0.318,192,1.671,196,0.898,200,0.98,204,0.951,207,1.011,210,0.924,211,0.951,213,0.98,214,0.461,217,1.011,219,1.011,220,0.98,222,0.951,224,0.98,225,1.011,227,0.898,230,0.002,231,0.003,232,0.002,280,2.566,285,1.671,302,1.671,303,1.671,312,1.671,318,1.945,320,0.62,321,1.827,332,1.994,333,1.847,351,1.207,362,1.847,365,1.483,393,1.827,400,0.453,402,3.278,409,1.669,423,3.278,432,1.827,439,1.525,442,1.827,444,3.571,452,1.618,454,1.724,455,1.724,456,3.571,457,1.827,463,1.827,465,1.333,466,3.961,472,2.645,480,1.847,483,1.917,489,1.994,493,1.847,495,3.961,496,3.745,506,1.08,507,0.828,508,1.08,509,1.794,513,1.08,514,0.951,523,1.08,526,1.118,527,3.845,532,1.259,534,1.259,536,1.259,538,0.85,539,1.118,543,1.118,545,0.98,547,3.413,548,3.413,558,1.161,561,1.161,563,1.207,571,1.461,572,2.566,573,2.566,582,1.461,596,1.317,597,4.214,625,1.259,627,1.383,632,1.461,635,1.554,637,1.554,638,4.214,645,1.554,646,1.461,648,1.461,651,1.383,652,1.671,653,3.524,654,3.278,655,3.524,670,1.011,674,1.671,780,1.827,781,1.671,782,3.278,798,1.317,929,6.611,936,1.827,937,1.827,955,1.259,964,1.461,965,3.278,978,1.461,980,1.461,989,1.671,990,1.827,991,1.827,992,1.827,1013,1.827,1014,1.827,1028,2.759,1031,1.671,1120,1.827,1162,1.827,1163,1.671,1170,1.827,1171,1.671,1172,1.827,1199,1.827,1200,1.827,1253,1.554,1292,1.671,1293,1.827,1294,1.827,1319,1.461,1320,1.207,1321,1.671,1322,1.671,1336,1.671,1350,1.671,1354,1.827,1395,1.827,1482,2.566,1483,1.554,1490,1.671,1492,1.671,1494,1.671,1538,1.554,1541,2.566,1542,1.671,1558,3.278,1559,1.383,1560,1.827,1580,1.383,1581,1.259,1588,1.827,1592,1.461,1593,1.827,1631,2.759,1635,1.461,1636,1.827,1649,1.383,1650,1.827,1658,1.461,1659,1.827,1667,1.461,1668,1.827,1676,1.383,1677,1.827,1685,1.461,1686,1.827,1697,1.383,1698,1.827,1706,1.461,1707,1.671,1708,1.827,1722,1.827,1723,1.827,1981,1.827,1982,2.064,1983,2.064,1984,1.827,1985,8.304,1986,1.827,1987,6.911,1988,8.698,1989,2.064,1990,2.064,1991,5.056,1992,2.064,1993,2.064,1994,6.376,1995,7.458,1996,8.241,1997,3.409,1998,4.354,1999,5.596,2000,1.827,2001,1.827,2002,3.854,2003,3.854,2004,2.064,2005,2.064,2006,1.827,2007,1.827,2008,1.827,2009,2.064,2010,3.409,2011,1.827,2012,2.064,2013,2.064,2014,2.064,2015,5.596,2016,2.759,2017,3.524,2018,1.827,2019,1.827,2020,2.064,2021,2.064,2022,2.064,2023,2.064,2024,2.064,2025,2.064,2026,2.064,2027,2.064,2028,2.064,2029,2.064,2030,2.064,2031,2.064,2032,2.064,2033,2.064,2034,2.064,2035,2.064,2036,2.064,2037,2.064,2038,2.064,2039,2.064,2040,2.064,2041,2.064]],["title/dependencies.html",[236,2.209,1758,3.216]],["body/dependencies.html",[57,0.008,117,0.86,118,3.562,120,3.165,122,2.472,201,1.498,230,0.005,231,0.006,232,0.005,236,2.284,264,5.17,265,5.17,267,5.921,268,4.667,272,3.7,273,5.17,274,5.17,275,2.861,277,5.17,279,4.728,309,3.285,478,1.48,509,2.406,555,3.915,666,3.915,951,3.727,1309,4.398,1331,3.727,1541,4.398,1652,4.728,1679,5.17,1700,4.398,1803,4.398,2042,5.841,2043,9.021,2044,5.841,2045,7.315,2046,5.841,2047,5.841,2048,5.841,2049,5.841,2050,5.841,2051,5.841,2052,5.841,2053,5.841,2054,5.841,2055,5.841,2056,7.315,2057,5.17,2058,5.841,2059,5.841,2060,5.841,2061,5.841,2062,5.841,2063,5.841,2064,5.841,2065,5.841,2066,5.841,2067,5.841]],["title/miscellaneous/enumerations.html",[2068,2.423,2069,5.002]],["body/miscellaneous/enumerations.html",[10,2.075,14,1.551,23,1.326,28,0.696,57,0.008,63,3.653,97,2.143,145,3.219,201,1.741,214,0.453,230,0.005,231,0.006,232,0.005,320,0.515,364,4.165,365,3.581,387,3.303,444,3.561,447,3.092,448,3.595,456,3.561,538,3.221,545,3.375,547,3.404,548,4.335,557,4.63,558,3.139,559,3.997,560,2.299,561,3.139,562,3.561,563,3.264,572,4.202,573,5.351,583,4.518,584,3.95,585,2.65,588,5.031,590,5.753,592,5.753,594,5.753,595,5.753,2068,3.404,2069,4.94,2070,5.581,2071,5.581,2072,4.94,2073,4.202]],["title/miscellaneous/functions.html",[429,4.574,2068,2.423]],["body/miscellaneous/functions.html",[12,0.595,14,1.298,23,1.413,28,0.742,56,2.784,57,0.008,58,1.757,59,0.742,60,1.516,74,2.784,85,4.957,128,0.571,136,1.678,201,1.218,214,0.439,215,1.875,230,0.005,231,0.007,232,0.005,233,1.36,305,3.794,320,0.555,429,4.813,472,3.111,479,2.449,480,3.222,482,2.587,576,3.77,578,3.478,625,3.627,631,3.985,746,5.699,1253,5.569,1321,4.813,1322,5.987,1336,5.987,1346,5.263,1350,5.987,1373,4.477,1490,6.517,1819,4.813,2008,5.263,2016,4.813,2017,6.819,2019,5.263,2068,3.627,2073,4.477,2074,5.263,2075,5.946,2076,5.946,2077,5.946,2078,5.946,2079,5.946]],["title/index.html",[28,0.496,1735,2.812,1736,2.812]],["body/index.html",[0,2.299,2,3.283,14,1.71,15,2.6,23,1.332,57,0.006,62,1.276,64,4.307,65,2.745,102,3.278,119,2.471,152,2.745,180,0.864,195,2.508,196,2.438,201,1.604,202,3.491,214,0.467,215,2.247,230,0.005,231,0.006,232,0.005,233,1.311,236,2.191,240,2.191,253,2.309,257,4.537,316,4.22,322,2.661,359,2.101,430,4.777,437,1.808,488,3.1,535,2.932,585,2.661,673,3.418,677,5.044,886,2.661,887,3.757,944,5.366,946,5.366,951,3.576,952,3.967,955,5.029,958,5.9,997,4.961,1167,4.583,1196,4.22,1201,3.967,1427,5.9,1510,5.769,1524,4.537,1737,4.583,1771,5.261,1789,6.936,2080,5.605,2081,5.605,2082,5.605,2083,5.605,2084,4.961,2085,4.961,2086,5.605,2087,4.777,2088,7.127,2089,4.961,2090,4.961,2091,4.537,2092,5.605]],["title/license.html",[1735,2.812,1736,2.812,2093,3.973]],["body/license.html",[23,1.388,57,0.006,73,2.955,91,2.861,230,0.005,231,0.006,232,0.005,253,2.406,438,2.472,549,3.056,679,5.653,955,3.562,1053,4.134,1167,4.278,1743,4.398,1814,4.728,1819,4.728,1823,6.474,1835,5.17,1946,5.17,1950,5.17,2089,5.17,2090,5.17,2094,5.17,2095,5.841,2096,5.841,2097,7.986,2098,5.841,2099,5.841,2100,5.841,2101,5.841,2102,5.841,2103,7.315,2104,9.1,2105,5.841,2106,5.841,2107,5.841,2108,7.315,2109,5.841,2110,5.841,2111,5.841,2112,5.17,2113,5.841,2114,5.841,2115,5.841,2116,5.841,2117,7.315,2118,5.841,2119,5.841,2120,5.841,2121,5.841,2122,5.841,2123,5.841,2124,7.315,2125,7.315,2126,5.841,2127,5.841,2128,5.841,2129,5.841,2130,5.841,2131,5.841,2132,5.841,2133,5.841,2134,5.841,2135,5.841,2136,5.841,2137,5.841,2138,5.841,2139,5.841,2140,5.841,2141,5.841,2142,5.841,2143,5.841,2144,5.841,2145,5.841,2146,5.841,2147,5.841,2148,5.841,2149,5.841,2150,5.841]],["title/modules.html",[235,2.309]],["body/modules.html",[57,0.006,230,0.005,231,0.006,232,0.005,234,4.027,235,2.064,245,4.027,246,4.822,247,3.813,248,3.328,249,4.027,250,4.822,268,6.002,405,3.242,1073,5.502,1474,4.027,1475,3.63,1476,3.47,1477,3.63,1478,3.63,1479,3.63,1480,3.47,1481,3.63,1504,4.284,1517,4.284,1521,3.813,1540,4.605,1543,4.027,2151,9.407,2152,9.473,2153,8.291]],["title/overview.html",[2154,5.632]],["body/overview.html",[1,3.614,2,1.373,49,3.259,57,0.008,193,1.031,196,1.297,200,3.503,204,2.56,207,2.722,210,3.302,211,3.399,213,2.638,217,3.614,219,2.722,222,3.399,224,3.503,225,2.722,227,3.209,230,0.003,231,0.004,232,0.003,233,0.548,234,6.299,235,1.082,236,1.165,237,1.297,238,1.297,239,1.165,240,1.165,241,2.639,242,2.639,243,2.639,244,2.639,245,3.933,246,5.965,247,4.175,248,5.205,249,6.511,250,5.738,251,2.045,252,1.261,253,1.228,319,1.165,332,3.643,333,3.376,392,1.031,401,0.637,424,2.639,425,2.639,546,1.744,670,2.722,798,3.545,1315,2.639,1316,2.639,1317,2.639,1318,2.639,1319,3.933,1320,3.25,1470,2.639,1471,2.639,1472,2.639,1473,2.639,1474,5.89,1475,5.082,1476,4.858,1477,5.082,1478,5.082,1479,5.082,1480,4.858,1481,5.082,1504,4.69,1505,2.639,1517,6.771,1518,2.639,1519,2.639,1520,2.639,1521,5.23,1543,5.222,1546,2.639,1547,2.639,1548,2.639,1549,2.639,1578,2.639,1579,2.639,1580,3.724,1581,3.389,1635,3.933,1639,2.639,1640,2.639,1649,3.724,1653,2.639,1654,2.639,1658,3.933,1662,2.639,1663,2.639,1667,3.933,1671,2.639,1672,2.639,1676,3.724,1680,2.639,1681,2.639,1685,3.933,1692,2.639,1693,2.639,1697,3.724,1701,2.639,1702,2.639,1706,3.933,1712,2.639,1713,2.639,2154,2.639,2155,4.045,2156,2.981,2157,2.981,2158,2.981]],["title/todo.html",[450,2.078,1735,2.812,1736,2.812]],["body/todo.html",[0,2.013,23,1.483,57,0.007,67,2.159,115,3.651,196,2.715,201,1.685,214,0.447,215,1.968,230,0.005,231,0.007,232,0.005,233,1.148,235,2.265,275,3.057,316,4.7,322,3.618,412,3.983,418,2.793,427,3.158,450,3.266,453,1.761,492,3.41,560,2.571,574,3.51,575,3.383,576,3.682,587,2.641,622,4.418,690,3.51,899,5.525,902,6.065,921,5.053,924,5.053,1073,4.458,1239,3.983,1309,4.7,1407,4.7,1643,3.651,1740,4.7,1886,5.525,1897,5.525,2094,5.525,2112,5.525,2159,6.242,2160,6.242,2161,6.242,2162,5.525,2163,6.242,2164,6.242,2165,6.242,2166,6.242,2167,5.525,2168,5.525]],["title/miscellaneous/typealiases.html",[2068,2.423,2169,5.651]],["body/miscellaneous/typealiases.html",[6,2.705,28,0.798,57,0.008,59,1.037,170,2.211,180,1.192,214,0.334,230,0.006,231,0.007,232,0.006,320,0.509,342,1.062,405,2.5,496,3.465,500,3.465,501,4.349,502,4.349,503,3.345,504,3.131,505,4.349,506,3.345,508,3.345,513,3.345,523,3.345,524,3.465,525,4.349,538,2.634,545,3.036,547,3.899,548,4.716,558,3.596,561,3.596,563,3.739,570,5.183,2068,3.899,2073,4.814,2170,6.393,2171,7.733]],["title/miscellaneous/variables.html",[1807,4.574,2068,2.423]],["body/miscellaneous/variables.html",[0,2.494,10,2.485,13,1.857,14,1.319,15,1.08,23,0.814,28,0.427,54,0.975,57,0.008,59,1.044,61,1.533,62,2.061,63,3.527,90,2.616,102,2.969,128,0.329,155,2.961,173,1.678,200,1.627,201,1.461,202,2.486,204,1.579,205,2.655,210,1.533,213,1.627,214,0.451,215,1.08,219,2.486,222,1.579,224,1.627,230,0.003,231,0.004,232,0.003,233,0.933,280,5.032,302,2.774,303,4.108,307,4.893,310,2.58,312,4.108,313,6.316,314,3.033,315,3.033,316,2.58,320,0.544,324,1.6,339,4.768,342,0.471,361,1.306,427,3.381,437,1.105,449,2.41,462,2.271,466,2.425,486,4.049,487,4.191,488,2.907,489,3.909,490,3.238,491,3.095,492,2.271,493,3.622,494,3.238,495,2.425,509,2.49,526,1.857,537,1.733,539,1.857,543,1.857,566,1.45,576,1.533,587,1.45,597,2.58,609,4.782,613,1.579,625,3.095,626,2.774,627,3.402,628,2.774,629,2.338,630,2.774,631,2.297,632,3.592,633,2.774,634,2.425,635,3.821,636,2.774,638,2.58,644,2.186,645,3.821,646,3.592,647,2.774,648,3.592,649,2.774,653,2.774,654,2.58,655,4.108,662,5.41,667,4.492,673,3.095,674,4.108,675,5.41,676,5.41,690,1.927,1028,2.774,1031,4.108,1073,2.004,1095,4.492,1099,3.033,1201,2.425,1482,3.821,1483,3.821,1494,4.108,1541,4.551,1542,4.108,1807,2.774,1984,3.033,1986,4.492,2000,3.033,2001,3.033,2002,3.033,2003,3.033,2006,4.492,2007,4.492,2011,4.492,2016,2.774,2017,4.108,2018,4.492,2057,3.033,2068,2.09,2072,3.033,2073,3.821,2074,3.033,2172,3.427,2173,6.045,2174,3.427,2175,6.045,2176,3.427,2177,3.427,2178,3.427,2179,6.683,2180,5.075,2181,5.075,2182,3.427,2183,5.075]],["title/additional-documentation/tinynodes-library-docs.html",[23,0.718,67,1.045,499,1.314,1164,2.025,1740,2.275]],["body/additional-documentation/tinynodes-library-docs.html",[23,1.643,57,0.007,110,6.119,201,1.415,230,0.006,231,0.007,232,0.006,326,5.205,946,5.205,949,5.596,951,5.169,952,4.893,1189,3.386,1583,5.596,1642,3.746,1737,4.043,1765,6.119,1768,5.596,1790,6.119,1797,6.119,1806,5.596,1814,5.596,2087,4.633,2091,5.596,2184,6.119,2185,8.101,2186,6.913]],["title/additional-documentation/tinynodes-library-docs/ngx-editorjs-readme.html",[67,1.045,201,0.619,214,0.158,499,1.314,2087,2.025]],["body/additional-documentation/tinynodes-library-docs/ngx-editorjs-readme.html",[0,2.156,2,1.579,5,1.857,7,1.733,12,0.276,14,1.108,15,1.6,29,0.644,30,2.41,57,0.008,59,0.427,60,0.617,62,1.522,63,1.34,64,3.78,74,1.185,87,2.58,90,1.95,102,2.004,114,0.39,117,0.505,119,2.107,127,0.178,128,0.329,136,0.967,152,1.678,156,3.592,157,1.857,170,1.185,173,1.678,180,1.03,195,2.271,196,1.491,201,0.702,202,2.961,210,1.533,211,1.579,214,0.471,215,2.107,227,1.491,230,0.003,231,0.004,232,0.003,233,1.374,234,2.425,237,1.491,238,1.491,239,1.34,248,2.969,253,1.411,258,1.857,262,2.036,266,4.492,267,2.774,268,2.186,296,2.425,305,2.186,322,2.41,324,1.08,325,1.633,336,1.857,339,2.186,347,4.108,353,1.436,359,1.782,361,1.306,400,0.171,410,2.961,422,2.854,427,3.058,437,2.156,438,1.45,449,1.627,453,0.967,462,1.533,468,2.655,469,1.565,472,2.655,478,1.286,479,2.939,482,2.63,488,2.63,491,3.095,492,2.271,493,2.75,503,3.163,507,2.036,509,1.411,535,2.655,541,1.733,549,1.793,556,2.004,566,2.558,574,3.4,575,2.75,576,2.271,579,2.186,585,1.627,586,2.297,587,2.558,598,4.051,599,2.186,600,2.297,601,3.402,602,2.297,603,3.402,606,2.09,607,2.09,610,2.297,613,1.579,615,2.297,616,2.297,617,2.09,618,3.402,619,2.09,624,1.733,631,2.297,634,2.425,644,3.238,670,1.678,673,2.09,681,3.402,702,2.774,724,2.774,725,2.58,756,3.033,757,3.033,758,3.033,809,2.774,814,2.969,886,3.77,887,2.297,895,5.35,897,3.821,924,2.774,945,3.033,951,3.857,952,2.425,955,2.09,968,2.09,987,2.297,1073,2.004,1079,3.402,1164,4.051,1167,4.371,1168,3.033,1189,1.678,1190,4.492,1196,2.58,1201,2.425,1202,3.033,1239,2.186,1289,2.774,1319,3.592,1320,2.969,1323,4.492,1324,3.033,1327,4.492,1349,2.774,1373,2.58,1427,2.58,1453,4.492,1476,2.09,1478,2.186,1480,2.09,1642,2.75,1649,3.402,1676,3.402,1697,3.402,1700,2.58,1737,2.004,1740,4.551,1771,2.186,1803,4.551,1820,3.033,2084,3.033,2085,3.033,2168,3.033,2187,5.075,2188,3.427,2189,3.427,2190,3.427,2191,3.427,2192,3.427,2193,3.427,2194,3.033,2195,3.427,2196,3.427,2197,3.427,2198,3.427,2199,3.033,2200,3.427,2201,6.045,2202,3.427,2203,5.075,2204,3.427,2205,3.427,2206,3.427,2207,3.427,2208,3.427,2209,3.427]],["title/additional-documentation/tinynodes-library-docs/ngx-editorjs-readme/ngx-editorjs-changelog.html",[67,1.045,201,0.619,214,0.158,499,1.314,1737,1.767]],["body/additional-documentation/tinynodes-library-docs/ngx-editorjs-readme/ngx-editorjs-changelog.html",[0,2.3,2,2.585,7,1.989,9,0.106,14,0.858,15,1.24,16,3.76,29,0.739,30,1.867,35,1.769,39,1.186,57,0.005,60,0.708,62,1.717,64,3.308,74,1.36,87,4.224,95,3.481,102,3.281,114,0.205,115,2.3,119,1.24,120,2.131,128,0.539,170,1.36,189,4.224,195,2.51,196,2.845,201,0.805,211,2.585,214,0.458,215,1.24,222,1.812,227,1.711,230,0.003,231,0.005,232,0.003,233,1.311,248,2.3,318,0.915,322,3.58,324,1.24,325,1.063,327,2.3,337,2.636,339,2.509,342,0.54,359,1.654,400,0.196,405,2.557,410,2.748,422,3.155,430,2.636,437,2.529,438,3.19,449,1.867,465,1.538,469,2.016,471,2.748,472,2.057,479,2.694,482,2.44,484,2.509,488,3.588,492,2.927,500,2.131,503,2.057,504,4.171,507,1.578,509,1.62,517,2.838,535,3.421,545,3.722,566,1.664,574,2.212,575,2.131,576,1.76,579,2.509,586,2.636,587,2.374,599,2.509,605,2.961,607,2.399,613,1.812,624,2.838,629,2.585,650,2.636,651,2.636,670,2.748,673,2.399,690,2.212,765,3.183,859,4.224,894,7.045,902,2.636,951,3.579,955,3.989,1030,3.481,1053,3.971,1073,3.281,1079,2.636,1164,5.053,1167,3.281,1169,3.481,1201,2.784,1212,3.481,1239,2.509,1253,2.961,1320,2.3,1373,2.961,1407,2.961,1584,3.481,1607,5.047,1737,3.825,1743,6.211,1746,3.183,1753,3.481,1758,4.541,1768,3.183,1771,4.811,1794,3.481,1816,3.183,1926,3.481,2087,2.636,2091,5.772,2155,3.481,2162,3.481,2184,3.481,2194,3.481,2210,3.481,2211,3.481,2212,3.481,2213,3.481,2214,3.481,2215,3.481,2216,3.933,2217,7.301,2218,3.933,2219,3.933,2220,3.933,2221,5.61,2222,3.933,2223,3.933,2224,3.933,2225,3.933,2226,3.933,2227,3.933,2228,3.933,2229,3.933,2230,3.933,2231,3.933,2232,5.61,2233,3.933,2234,3.481,2235,3.933,2236,3.933,2237,3.481,2238,5.61,2239,3.933,2240,3.481,2241,6.54,2242,3.933,2243,3.481,2244,3.933,2245,3.933,2246,3.933,2247,3.933,2248,3.933,2249,5.61,2250,3.933,2251,3.933,2252,3.481,2253,3.933,2254,3.933]],["title/additional-documentation/tinynodes-library-docs/ngx-editorjs-plugins-readme.html",[67,0.933,201,0.553,214,0.141,488,1.174,499,1.174,2087,1.809]],["body/additional-documentation/tinynodes-library-docs/ngx-editorjs-plugins-readme.html",[9,0.144,12,0.428,14,1.162,15,2.822,16,4.62,57,0.008,58,1.162,62,1.212,64,3.868,119,1.678,152,2.607,160,2.607,170,1.841,179,3.567,180,1.347,201,1.09,214,0.422,230,0.005,231,0.006,232,0.005,233,0.979,235,2.501,236,2.081,359,1.569,469,2.125,488,3.326,492,2.382,587,3.697,917,4.308,951,3.396,1073,4.032,1475,3.396,1476,3.246,1477,3.396,1479,3.396,1480,3.246,1481,3.396,1521,3.567,1642,4.799,1652,4.308,1700,4.007,1771,3.396,1803,5.19,2087,5.935,2167,4.711,2199,4.711,2255,5.322,2256,5.322,2257,5.322,2258,5.322,2259,5.322,2260,5.322,2261,5.322]],["title/additional-documentation/tinynodes-library-docs/ngx-editorjs-plugins-readme/ngx-editorjs-plugins-changelog.html",[67,0.933,201,0.553,214,0.141,488,1.174,499,1.174,1737,1.578]],["body/additional-documentation/tinynodes-library-docs/ngx-editorjs-plugins-readme/ngx-editorjs-plugins-changelog.html",[9,0.175,39,1.951,57,0.007,62,1.474,120,3.507,189,4.873,230,0.006,231,0.007,232,0.006,233,1.537,324,2.041,438,2.739,451,3.507,488,2.815,504,3.17,545,3.073,629,2.982,765,5.239,886,3.073,955,3.947,1189,3.17,1239,4.129,1320,4.556,1407,4.873,1424,5.239,1607,5.514,1737,4.556,1743,6.293,1746,5.239,1771,4.97,1806,5.239,1816,5.239,2210,5.728,2211,5.728,2212,5.728,2213,5.728,2214,5.728,2215,5.728,2217,7.397,2234,5.728,2237,5.728,2240,5.728,2243,5.728,2252,5.728,2262,6.472]],["title/routes.html",[310,4.791]],["body/routes.html",[57,0.007,230,0.006,231,0.007,232,0.006,310,5.555]]],"invertedIndex":[["",{"_index":57,"title":{},"body":{"components/AppContainerComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"injectables/AppService.html":{},"injectables/AppService-1.html":{},"interfaces/ApplicationData.html":{},"interfaces/ApplicationData-1.html":{},"modules/ApplicationDataModule.html":{},"injectables/ApplicationQuery.html":{},"injectables/ApplicationQuery-1.html":{},"interfaces/ApplicationState.html":{},"interfaces/ApplicationState-1.html":{},"injectables/ApplicationStore.html":{},"injectables/ApplicationStore-1.html":{},"interfaces/BasePlugin.html":{},"interfaces/BasePlugin-1.html":{},"interfaces/Block.html":{},"interfaces/BlocksMap.html":{},"interfaces/ChangeMap.html":{},"classes/Changed.html":{},"interfaces/CreateEditorJSOptions.html":{},"interfaces/DemoData.html":{},"interfaces/DemoData-1.html":{},"interfaces/EditorJSAction.html":{},"interfaces/EditorJSConfig.html":{},"interfaces/EditorJSInstanceConfig.html":{},"interfaces/EditorJSMaterialForm.html":{},"interfaces/EditorMap.html":{},"interfaces/EventMap.html":{},"interfaces/EventType.html":{},"components/FormContainerComponent.html":{},"interfaces/Header.html":{},"interfaces/HeaderBlock.html":{},"components/HomePageComponent.html":{},"interfaces/Image.html":{},"interfaces/ImageBlock.html":{},"interfaces/InjectorMethodOption.html":{},"interfaces/List.html":{},"interfaces/ListBlock.html":{},"modules/MaterialModule.html":{},"interfaces/MenuGroup.html":{},"interfaces/MenuGroup-1.html":{},"interfaces/MenuItem.html":{},"interfaces/MenuItem-1.html":{},"classes/MockEditorJS.html":{},"injectables/MockNgZone.html":{},"classes/MockPlugin.html":{},"components/NavBarComponent.html":{},"components/NgxEditorJSBaseComponent.html":{},"components/NgxEditorJSComponent.html":{},"interfaces/NgxEditorJSConfig.html":{},"interfaces/NgxEditorJSDemo.html":{},"interfaces/NgxEditorJSDemo-1.html":{},"interfaces/NgxEditorJSDemoData.html":{},"interfaces/NgxEditorJSDemoData-1.html":{},"components/NgxEditorJSDemoHomeComponent.html":{},"components/NgxEditorJSDemoInfoComponent.html":{},"directives/NgxEditorJSDirective.html":{},"injectables/NgxEditorJSEffects.html":{},"modules/NgxEditorJSModule.html":{},"injectables/NgxEditorJSPluginService.html":{},"injectables/NgxEditorJSService.html":{},"modules/NgxEditorjsDemoModule.html":{},"modules/NgxEditorjsNgrxModule.html":{},"modules/NgxEditorjsPluginsModule.html":{},"modules/NgxHideableHeaderDemoModule.html":{},"modules/NgxTinynodesCoreMaterialModule.html":{},"modules/NgxTinynodesCoreModule.html":{},"classes/NotReady.html":{},"interfaces/Page.html":{},"interfaces/PageBlock.html":{},"components/PageContainerComponent.html":{},"modules/PageStoreModule.html":{},"injectables/PagesQuery.html":{},"injectables/PagesService.html":{},"interfaces/PagesState.html":{},"injectables/PagesStore.html":{},"interfaces/Paragraph.html":{},"interfaces/ParagraphBlock.html":{},"injectables/PluginCode.html":{},"modules/PluginCodeModule.html":{},"interfaces/PluginConfig.html":{},"interfaces/PluginConfig-1.html":{},"injectables/PluginHeader.html":{},"modules/PluginHeaderModule.html":{},"injectables/PluginImage.html":{},"modules/PluginImageModule.html":{},"injectables/PluginLink.html":{},"modules/PluginLinkModule.html":{},"injectables/PluginList.html":{},"modules/PluginListModule.html":{},"injectables/PluginMarker.html":{},"modules/PluginMarkerModule.html":{},"injectables/PluginParagraph.html":{},"modules/PluginParagraphModule.html":{},"injectables/PluginSimpleImage.html":{},"modules/PluginSimpleImageModule.html":{},"classes/Ready.html":{},"interfaces/ReadyMap.html":{},"classes/SaveEnd.html":{},"classes/SaveStart.html":{},"components/SidebarComponent.html":{},"interfaces/Tag.html":{},"classes/TestClass.html":{},"interfaces/TinynodeDemos.html":{},"interfaces/TinynodeDemos-1.html":{},"interfaces/ToolSettingsMap.html":{},"interfaces/ToolSettingsMap-1.html":{},"changelog.html":{},"contributing.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"index.html":{},"license.html":{},"modules.html":{},"overview.html":{},"todo.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{},"additional-documentation/tinynodes-library-docs.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-readme.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-readme/ngx-editorjs-changelog.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-plugins-readme.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-plugins-readme/ngx-editorjs-plugins-changelog.html":{},"routes.html":{}}}],["0",{"_index":173,"title":{},"body":{"components/AppContainerComponent.html":{},"injectables/AppService.html":{},"injectables/AppService-1.html":{},"interfaces/EditorJSInstanceConfig.html":{},"interfaces/EditorJSMaterialForm.html":{},"components/FormContainerComponent.html":{},"interfaces/InjectorMethodOption.html":{},"components/NavBarComponent.html":{},"components/NgxEditorJSBaseComponent.html":{},"components/NgxEditorJSComponent.html":{},"directives/NgxEditorJSDirective.html":{},"coverage.html":{},"miscellaneous/variables.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-readme.html":{}}}],["0.0.5",{"_index":2062,"title":{},"body":{"dependencies.html":{}}}],["0.12.2",{"_index":2061,"title":{},"body":{"dependencies.html":{}}}],["0.8.26",{"_index":2067,"title":{},"body":{"dependencies.html":{}}}],["0/1",{"_index":1987,"title":{},"body":{"coverage.html":{}}}],["0/2",{"_index":1999,"title":{},"body":{"coverage.html":{}}}],["0/3",{"_index":1991,"title":{},"body":{"coverage.html":{}}}],["0/4",{"_index":2015,"title":{},"body":{"coverage.html":{}}}],["0/5",{"_index":2012,"title":{},"body":{"coverage.html":{}}}],["0/7",{"_index":2037,"title":{},"body":{"coverage.html":{}}}],["05",{"_index":2217,"title":{},"body":{"additional-documentation/tinynodes-library-docs/ngx-editorjs-readme/ngx-editorjs-changelog.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-plugins-readme/ngx-editorjs-plugins-changelog.html":{}}}],["1",{"_index":392,"title":{"injectables/AppService-1.html":{},"interfaces/ApplicationData-1.html":{},"injectables/ApplicationQuery-1.html":{},"interfaces/ApplicationState-1.html":{},"injectables/ApplicationStore-1.html":{},"interfaces/BasePlugin-1.html":{},"interfaces/DemoData-1.html":{},"interfaces/MenuGroup-1.html":{},"interfaces/MenuItem-1.html":{},"interfaces/NgxEditorJSDemo-1.html":{},"interfaces/NgxEditorJSDemoData-1.html":{},"interfaces/PluginConfig-1.html":{},"interfaces/TinynodeDemos-1.html":{},"interfaces/ToolSettingsMap-1.html":{}},"body":{"interfaces/Block.html":{},"components/FormContainerComponent.html":{},"interfaces/Header.html":{},"interfaces/HeaderBlock.html":{},"interfaces/Image.html":{},"interfaces/ImageBlock.html":{},"interfaces/List.html":{},"interfaces/ListBlock.html":{},"components/NgxEditorJSComponent.html":{},"components/PageContainerComponent.html":{},"interfaces/Paragraph.html":{},"interfaces/ParagraphBlock.html":{},"overview.html":{}}}],["1.0.0",{"_index":2252,"title":{},"body":{"additional-documentation/tinynodes-library-docs/ngx-editorjs-readme/ngx-editorjs-changelog.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-plugins-readme/ngx-editorjs-plugins-changelog.html":{}}}],["1.0.4",{"_index":2051,"title":{},"body":{"dependencies.html":{}}}],["1.1.0",{"_index":2243,"title":{},"body":{"additional-documentation/tinynodes-library-docs/ngx-editorjs-readme/ngx-editorjs-changelog.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-plugins-readme/ngx-editorjs-plugins-changelog.html":{}}}],["1.1.1",{"_index":2240,"title":{},"body":{"additional-documentation/tinynodes-library-docs/ngx-editorjs-readme/ngx-editorjs-changelog.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-plugins-readme/ngx-editorjs-plugins-changelog.html":{}}}],["1.1.2",{"_index":2236,"title":{},"body":{"additional-documentation/tinynodes-library-docs/ngx-editorjs-readme/ngx-editorjs-changelog.html":{}}}],["1.2",{"_index":1763,"title":{},"body":{"changelog.html":{}}}],["1.2.0",{"_index":2233,"title":{},"body":{"additional-documentation/tinynodes-library-docs/ngx-editorjs-readme/ngx-editorjs-changelog.html":{}}}],["1.3.0",{"_index":2227,"title":{},"body":{"additional-documentation/tinynodes-library-docs/ngx-editorjs-readme/ngx-editorjs-changelog.html":{}}}],["1.3.2",{"_index":2222,"title":{},"body":{"additional-documentation/tinynodes-library-docs/ngx-editorjs-readme/ngx-editorjs-changelog.html":{}}}],["1.3.4",{"_index":2054,"title":{},"body":{"dependencies.html":{}}}],["1.4",{"_index":1978,"title":{},"body":{"contributing.html":{}}}],["1.4.0",{"_index":2216,"title":{},"body":{"additional-documentation/tinynodes-library-docs/ngx-editorjs-readme/ngx-editorjs-changelog.html":{}}}],["1/1",{"_index":1988,"title":{},"body":{"coverage.html":{}}}],["1/3",{"_index":2034,"title":{},"body":{"coverage.html":{}}}],["1/6",{"_index":2036,"title":{},"body":{"coverage.html":{}}}],["10",{"_index":2241,"title":{},"body":{"additional-documentation/tinynodes-library-docs/ngx-editorjs-readme/ngx-editorjs-changelog.html":{}}}],["10/11",{"_index":1993,"title":{},"body":{"coverage.html":{}}}],["100",{"_index":929,"title":{},"body":{"components/FormContainerComponent.html":{},"components/NgxEditorJSComponent.html":{},"components/NgxEditorJSDemoInfoComponent.html":{},"components/PageContainerComponent.html":{},"coverage.html":{}}}],["100vh",{"_index":158,"title":{},"body":{"components/AppContainerComponent.html":{},"components/FormContainerComponent.html":{},"components/NgxEditorJSDemoInfoComponent.html":{},"components/PageContainerComponent.html":{}}}],["11",{"_index":2237,"title":{},"body":{"additional-documentation/tinynodes-library-docs/ngx-editorjs-readme/ngx-editorjs-changelog.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-plugins-readme/ngx-editorjs-plugins-changelog.html":{}}}],["12",{"_index":2156,"title":{},"body":{"overview.html":{}}}],["12/14",{"_index":2031,"title":{},"body":{"coverage.html":{}}}],["12th",{"_index":1760,"title":{},"body":{"changelog.html":{}}}],["13",{"_index":2234,"title":{},"body":{"additional-documentation/tinynodes-library-docs/ngx-editorjs-readme/ngx-editorjs-changelog.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-plugins-readme/ngx-editorjs-plugins-changelog.html":{}}}],["13th",{"_index":1756,"title":{},"body":{"changelog.html":{}}}],["14/36",{"_index":2005,"title":{},"body":{"coverage.html":{}}}],["15",{"_index":189,"title":{},"body":{"components/AppContainerComponent.html":{},"components/NavBarComponent.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-readme/ngx-editorjs-changelog.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-plugins-readme/ngx-editorjs-plugins-changelog.html":{}}}],["15th",{"_index":1742,"title":{},"body":{"changelog.html":{}}}],["16",{"_index":2035,"title":{},"body":{"coverage.html":{}}}],["19/19",{"_index":2009,"title":{},"body":{"coverage.html":{}}}],["1em",{"_index":1161,"title":{},"body":{"components/NgxEditorJSComponent.html":{}}}],["2.0.8",{"_index":2060,"title":{},"body":{"dependencies.html":{}}}],["2.13.0",{"_index":2052,"title":{},"body":{"dependencies.html":{}}}],["2.2.3",{"_index":2053,"title":{},"body":{"dependencies.html":{}}}],["2.5.0",{"_index":2055,"title":{},"body":{"dependencies.html":{}}}],["2.5.4",{"_index":2058,"title":{},"body":{"dependencies.html":{}}}],["2/2",{"_index":1996,"title":{},"body":{"coverage.html":{}}}],["2019",{"_index":1743,"title":{},"body":{"changelog.html":{},"license.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-readme/ngx-editorjs-changelog.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-plugins-readme/ngx-editorjs-plugins-changelog.html":{}}}],["22",{"_index":2155,"title":{},"body":{"overview.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-readme/ngx-editorjs-changelog.html":{}}}],["22/22",{"_index":2026,"title":{},"body":{"coverage.html":{}}}],["24/27",{"_index":2030,"title":{},"body":{"coverage.html":{}}}],["250px",{"_index":159,"title":{},"body":{"components/AppContainerComponent.html":{}}}],["26/28",{"_index":2021,"title":{},"body":{"coverage.html":{}}}],["27/31",{"_index":2025,"title":{},"body":{"coverage.html":{}}}],["2px",{"_index":1157,"title":{},"body":{"components/NgxEditorJSComponent.html":{}}}],["3.0.2",{"_index":2050,"title":{},"body":{"dependencies.html":{}}}],["3/3",{"_index":1995,"title":{},"body":{"coverage.html":{}}}],["3/4",{"_index":1990,"title":{},"body":{"coverage.html":{}}}],["30px",{"_index":181,"title":{},"body":{"components/AppContainerComponent.html":{},"components/NavBarComponent.html":{}}}],["33",{"_index":2033,"title":{},"body":{"coverage.html":{}}}],["36",{"_index":2013,"title":{},"body":{"coverage.html":{}}}],["38",{"_index":2004,"title":{},"body":{"coverage.html":{}}}],["4",{"_index":1577,"title":{},"body":{"components/PageContainerComponent.html":{}}}],["4/11",{"_index":2014,"title":{},"body":{"coverage.html":{}}}],["4/4",{"_index":1994,"title":{},"body":{"coverage.html":{}}}],["48",{"_index":2158,"title":{},"body":{"overview.html":{}}}],["5/5",{"_index":1997,"title":{},"body":{"coverage.html":{}}}],["5/8",{"_index":2039,"title":{},"body":{"coverage.html":{}}}],["50/53",{"_index":2023,"title":{},"body":{"coverage.html":{}}}],["5px",{"_index":184,"title":{},"body":{"components/AppContainerComponent.html":{},"components/NavBarComponent.html":{}}}],["6",{"_index":511,"title":{},"body":{"interfaces/Block.html":{},"interfaces/Header.html":{},"interfaces/HeaderBlock.html":{},"interfaces/Image.html":{},"interfaces/ImageBlock.html":{},"interfaces/List.html":{},"interfaces/ListBlock.html":{},"interfaces/Paragraph.html":{},"interfaces/ParagraphBlock.html":{}}}],["6.3.3",{"_index":2065,"title":{},"body":{"dependencies.html":{}}}],["6.9.0",{"_index":2064,"title":{},"body":{"dependencies.html":{}}}],["6/6",{"_index":1998,"title":{},"body":{"coverage.html":{}}}],["62",{"_index":2038,"title":{},"body":{"coverage.html":{}}}],["7",{"_index":2086,"title":{},"body":{"index.html":{}}}],["7.0.0",{"_index":2047,"title":{},"body":{"dependencies.html":{}}}],["7.1.5",{"_index":2063,"title":{},"body":{"dependencies.html":{}}}],["7.2.15",{"_index":2043,"title":{},"body":{"dependencies.html":{}}}],["7.3.7",{"_index":2045,"title":{},"body":{"dependencies.html":{}}}],["7.4.0",{"_index":2056,"title":{},"body":{"dependencies.html":{}}}],["7/7",{"_index":2032,"title":{},"body":{"coverage.html":{}}}],["75",{"_index":1989,"title":{},"body":{"coverage.html":{}}}],["768px",{"_index":132,"title":{},"body":{"components/AppContainerComponent.html":{}}}],["8",{"_index":2157,"title":{},"body":{"overview.html":{}}}],["85",{"_index":192,"title":{},"body":{"components/AppContainerComponent.html":{},"components/NavBarComponent.html":{},"coverage.html":{}}}],["87",{"_index":2024,"title":{},"body":{"coverage.html":{}}}],["88",{"_index":2029,"title":{},"body":{"coverage.html":{}}}],["9/9",{"_index":2010,"title":{},"body":{"coverage.html":{}}}],["90",{"_index":1992,"title":{},"body":{"coverage.html":{}}}],["92",{"_index":2020,"title":{},"body":{"coverage.html":{}}}],["94",{"_index":2022,"title":{},"body":{"coverage.html":{}}}],["_disabled",{"_index":716,"title":{},"body":{"interfaces/EditorJSMaterialForm.html":{}}}],["_empty",{"_index":721,"title":{},"body":{"interfaces/EditorJSMaterialForm.html":{}}}],["_focused",{"_index":703,"title":{},"body":{"interfaces/EditorJSMaterialForm.html":{}}}],["_placeholder",{"_index":698,"title":{},"body":{"interfaces/EditorJSMaterialForm.html":{}}}],["_required",{"_index":709,"title":{},"body":{"interfaces/EditorJSMaterialForm.html":{}}}],["_value",{"_index":1032,"title":{},"body":{"components/NgxEditorJSBaseComponent.html":{},"components/NgxEditorJSComponent.html":{}}}],["a:active",{"_index":166,"title":{},"body":{"components/AppContainerComponent.html":{},"components/NavBarComponent.html":{}}}],["a:hover",{"_index":165,"title":{},"body":{"components/AppContainerComponent.html":{},"components/NavBarComponent.html":{}}}],["above",{"_index":2123,"title":{},"body":{"license.html":{}}}],["abusive",{"_index":1944,"title":{},"body":{"contributing.html":{}}}],["acceptable",{"_index":1901,"title":{},"body":{"contributing.html":{}}}],["accepting",{"_index":1865,"title":{},"body":{"contributing.html":{}}}],["access",{"_index":724,"title":{},"body":{"interfaces/EditorJSMaterialForm.html":{},"components/NgxEditorJSComponent.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-readme.html":{}}}],["accessor",{"_index":1099,"title":{},"body":{"components/NgxEditorJSBaseComponent.html":{},"miscellaneous/variables.html":{}}}],["accessors",{"_index":43,"title":{},"body":{"components/AppContainerComponent.html":{},"injectables/AppService.html":{},"injectables/AppService-1.html":{},"components/FormContainerComponent.html":{},"components/HomePageComponent.html":{},"components/NgxEditorJSBaseComponent.html":{},"components/NgxEditorJSDemoInfoComponent.html":{},"directives/NgxEditorJSDirective.html":{},"injectables/NgxEditorJSPluginService.html":{},"injectables/NgxEditorJSService.html":{},"components/PageContainerComponent.html":{},"injectables/PagesService.html":{}}}],["account",{"_index":1935,"title":{},"body":{"contributing.html":{}}}],["acting",{"_index":1936,"title":{},"body":{"contributing.html":{}}}],["action",{"_index":549,"title":{},"body":{"classes/Changed.html":{},"interfaces/CreateEditorJSOptions.html":{},"interfaces/EditorJSAction.html":{},"injectables/NgxEditorJSEffects.html":{},"injectables/NgxEditorJSService.html":{},"classes/NotReady.html":{},"classes/Ready.html":{},"classes/SaveEnd.html":{},"classes/SaveStart.html":{},"contributing.html":{},"license.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-readme.html":{}}}],["action.action",{"_index":1436,"title":{},"body":{"injectables/NgxEditorJSService.html":{}}}],["action.payload.holder",{"_index":1305,"title":{},"body":{"injectables/NgxEditorJSEffects.html":{}}}],["actions",{"_index":584,"title":{},"body":{"interfaces/CreateEditorJSOptions.html":{},"interfaces/EditorJSAction.html":{},"injectables/NgxEditorJSEffects.html":{},"modules/NgxEditorjsNgrxModule.html":{},"miscellaneous/enumerations.html":{}}}],["actions/ngx",{"_index":1310,"title":{},"body":{"injectables/NgxEditorJSEffects.html":{}}}],["active",{"_index":904,"title":{},"body":{"components/FormContainerComponent.html":{}}}],["actual_component",{"_index":229,"title":{},"body":{"components/AppContainerComponent.html":{},"components/FormContainerComponent.html":{},"components/HomePageComponent.html":{},"components/NavBarComponent.html":{},"components/NgxEditorJSBaseComponent.html":{},"components/NgxEditorJSComponent.html":{},"components/NgxEditorJSDemoHomeComponent.html":{},"components/NgxEditorJSDemoInfoComponent.html":{},"components/PageContainerComponent.html":{},"components/SidebarComponent.html":{}}}],["adapted",{"_index":1976,"title":{},"body":{"contributing.html":{}}}],["add",{"_index":902,"title":{},"body":{"components/FormContainerComponent.html":{},"injectables/NgxEditorJSPluginService.html":{},"components/PageContainerComponent.html":{},"injectables/PagesService.html":{},"todo.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-readme/ngx-editorjs-changelog.html":{}}}],["add(key",{"_index":1364,"title":{},"body":{"injectables/NgxEditorJSPluginService.html":{}}}],["add(page",{"_index":1599,"title":{},"body":{"injectables/PagesService.html":{}}}],["addblock",{"_index":1594,"title":{},"body":{"injectables/PagesService.html":{}}}],["addblock(pageid",{"_index":1601,"title":{},"body":{"injectables/PagesService.html":{}}}],["added",{"_index":504,"title":{},"body":{"interfaces/Block.html":{},"interfaces/Header.html":{},"interfaces/HeaderBlock.html":{},"interfaces/Image.html":{},"interfaces/ImageBlock.html":{},"interfaces/List.html":{},"interfaces/ListBlock.html":{},"injectables/PagesService.html":{},"interfaces/Paragraph.html":{},"interfaces/ParagraphBlock.html":{},"changelog.html":{},"miscellaneous/typealiases.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-readme/ngx-editorjs-changelog.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-plugins-readme/ngx-editorjs-plugins-changelog.html":{}}}],["adding",{"_index":491,"title":{},"body":{"interfaces/BasePlugin.html":{},"interfaces/BasePlugin-1.html":{},"interfaces/PluginConfig.html":{},"interfaces/PluginConfig-1.html":{},"interfaces/ToolSettingsMap.html":{},"interfaces/ToolSettingsMap-1.html":{},"miscellaneous/variables.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-readme.html":{}}}],["additional",{"_index":499,"title":{"additional-documentation/tinynodes-library-docs.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-readme.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-readme/ngx-editorjs-changelog.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-plugins-readme.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-plugins-readme/ngx-editorjs-plugins-changelog.html":{}},"body":{"interfaces/Block.html":{},"components/FormContainerComponent.html":{},"interfaces/Header.html":{},"interfaces/HeaderBlock.html":{},"components/HomePageComponent.html":{},"interfaces/Image.html":{},"interfaces/ImageBlock.html":{},"interfaces/List.html":{},"interfaces/ListBlock.html":{},"modules/NgxEditorjsPluginsModule.html":{},"components/PageContainerComponent.html":{},"interfaces/Paragraph.html":{},"interfaces/ParagraphBlock.html":{}}}],["address",{"_index":1891,"title":{},"body":{"contributing.html":{}}}],["adheres",{"_index":2214,"title":{},"body":{"additional-documentation/tinynodes-library-docs/ngx-editorjs-readme/ngx-editorjs-changelog.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-plugins-readme/ngx-editorjs-plugins-changelog.html":{}}}],["advances",{"_index":1880,"title":{},"body":{"contributing.html":{}}}],["aftercontentinit",{"_index":19,"title":{},"body":{"components/AppContainerComponent.html":{},"interfaces/EditorJSMaterialForm.html":{},"components/FormContainerComponent.html":{},"components/NgxEditorJSBaseComponent.html":{},"directives/NgxEditorJSDirective.html":{},"components/PageContainerComponent.html":{}}}],["age",{"_index":1839,"title":{},"body":{"contributing.html":{}}}],["aggregate",{"_index":403,"title":{},"body":{"interfaces/ApplicationData.html":{},"interfaces/ApplicationData-1.html":{},"interfaces/MenuGroup.html":{},"interfaces/MenuGroup-1.html":{},"interfaces/MenuItem.html":{},"interfaces/MenuItem-1.html":{}}}],["akitangdevtools",{"_index":276,"title":{},"body":{"modules/AppModule.html":{}}}],["akitangdevtools.forroot",{"_index":300,"title":{},"body":{"modules/AppModule.html":{}}}],["akitangrouterstoremodule",{"_index":271,"title":{},"body":{"modules/AppModule.html":{}}}],["akitangrouterstoremodule.forroot",{"_index":301,"title":{},"body":{"modules/AppModule.html":{}}}],["aliases",{"_index":2170,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["align",{"_index":185,"title":{},"body":{"components/AppContainerComponent.html":{},"components/NavBarComponent.html":{},"components/NgxEditorJSComponent.html":{}}}],["aligned",{"_index":1914,"title":{},"body":{"contributing.html":{}}}],["allow",{"_index":470,"title":{},"body":{"interfaces/BasePlugin.html":{},"interfaces/BasePlugin-1.html":{},"modules/NgxEditorJSModule.html":{},"modules/NgxEditorjsNgrxModule.html":{},"modules/PageStoreModule.html":{},"interfaces/PluginConfig.html":{},"interfaces/PluginConfig-1.html":{},"interfaces/ToolSettingsMap.html":{},"interfaces/ToolSettingsMap-1.html":{}}}],["allows",{"_index":618,"title":{},"body":{"interfaces/EditorJSConfig.html":{},"components/NgxEditorJSBaseComponent.html":{},"components/NgxEditorJSComponent.html":{},"interfaces/NgxEditorJSConfig.html":{},"directives/NgxEditorJSDirective.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-readme.html":{}}}],["along",{"_index":2198,"title":{},"body":{"additional-documentation/tinynodes-library-docs/ngx-editorjs-readme.html":{}}}],["and/or",{"_index":2115,"title":{},"body":{"license.html":{}}}],["angular",{"_index":64,"title":{},"body":{"components/AppContainerComponent.html":{},"interfaces/EditorJSMaterialForm.html":{},"components/HomePageComponent.html":{},"modules/MaterialModule.html":{},"components/NgxEditorJSDemoHomeComponent.html":{},"directives/NgxEditorJSDirective.html":{},"modules/NgxEditorJSModule.html":{},"injectables/NgxEditorJSService.html":{},"changelog.html":{},"index.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-readme.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-readme/ngx-editorjs-changelog.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-plugins-readme.html":{}}}],["angular/animations",{"_index":2042,"title":{},"body":{"dependencies.html":{}}}],["angular/cdk",{"_index":2044,"title":{},"body":{"dependencies.html":{}}}],["angular/cdk/a11y",{"_index":658,"title":{},"body":{"interfaces/EditorJSMaterialForm.html":{},"components/NgxEditorJSBaseComponent.html":{},"components/NgxEditorJSComponent.html":{}}}],["angular/cdk/coercion",{"_index":660,"title":{},"body":{"interfaces/EditorJSMaterialForm.html":{}}}],["angular/cdk/layout",{"_index":126,"title":{},"body":{"components/AppContainerComponent.html":{},"modules/AppModule.html":{}}}],["angular/common",{"_index":1331,"title":{},"body":{"modules/NgxEditorJSModule.html":{},"modules/NgxEditorjsDemoModule.html":{},"modules/NgxEditorjsNgrxModule.html":{},"modules/NgxEditorjsPluginsModule.html":{},"modules/NgxHideableHeaderDemoModule.html":{},"modules/NgxTinynodesCoreMaterialModule.html":{},"dependencies.html":{}}}],["angular/common/http",{"_index":261,"title":{},"body":{"modules/AppModule.html":{},"injectables/AppService.html":{},"injectables/AppService-1.html":{}}}],["angular/compiler",{"_index":2046,"title":{},"body":{"dependencies.html":{}}}],["angular/core",{"_index":117,"title":{},"body":{"components/AppContainerComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"injectables/AppService.html":{},"injectables/AppService-1.html":{},"modules/ApplicationDataModule.html":{},"injectables/ApplicationQuery.html":{},"injectables/ApplicationQuery-1.html":{},"injectables/ApplicationStore.html":{},"injectables/ApplicationStore-1.html":{},"interfaces/BasePlugin.html":{},"interfaces/BasePlugin-1.html":{},"interfaces/EditorJSConfig.html":{},"interfaces/EditorJSInstanceConfig.html":{},"interfaces/EditorJSMaterialForm.html":{},"components/FormContainerComponent.html":{},"components/HomePageComponent.html":{},"interfaces/InjectorMethodOption.html":{},"modules/MaterialModule.html":{},"injectables/MockNgZone.html":{},"components/NavBarComponent.html":{},"components/NgxEditorJSBaseComponent.html":{},"components/NgxEditorJSComponent.html":{},"interfaces/NgxEditorJSConfig.html":{},"components/NgxEditorJSDemoHomeComponent.html":{},"components/NgxEditorJSDemoInfoComponent.html":{},"directives/NgxEditorJSDirective.html":{},"injectables/NgxEditorJSEffects.html":{},"modules/NgxEditorJSModule.html":{},"injectables/NgxEditorJSPluginService.html":{},"injectables/NgxEditorJSService.html":{},"modules/NgxEditorjsDemoModule.html":{},"modules/NgxEditorjsNgrxModule.html":{},"modules/NgxEditorjsPluginsModule.html":{},"modules/NgxHideableHeaderDemoModule.html":{},"modules/NgxTinynodesCoreMaterialModule.html":{},"modules/NgxTinynodesCoreModule.html":{},"components/PageContainerComponent.html":{},"modules/PageStoreModule.html":{},"injectables/PagesQuery.html":{},"injectables/PagesService.html":{},"interfaces/PagesState.html":{},"injectables/PagesStore.html":{},"injectables/PluginCode.html":{},"modules/PluginCodeModule.html":{},"interfaces/PluginConfig.html":{},"interfaces/PluginConfig-1.html":{},"injectables/PluginHeader.html":{},"modules/PluginHeaderModule.html":{},"injectables/PluginImage.html":{},"modules/PluginImageModule.html":{},"injectables/PluginLink.html":{},"modules/PluginLinkModule.html":{},"injectables/PluginList.html":{},"modules/PluginListModule.html":{},"injectables/PluginMarker.html":{},"modules/PluginMarkerModule.html":{},"injectables/PluginParagraph.html":{},"modules/PluginParagraphModule.html":{},"injectables/PluginSimpleImage.html":{},"modules/PluginSimpleImageModule.html":{},"components/SidebarComponent.html":{},"interfaces/ToolSettingsMap.html":{},"interfaces/ToolSettingsMap-1.html":{},"dependencies.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-readme.html":{}}}],["angular/core/src/render3/jit/compiler_facade_interface",{"_index":1094,"title":{},"body":{"components/NgxEditorJSBaseComponent.html":{}}}],["angular/flex",{"_index":264,"title":{},"body":{"modules/AppModule.html":{},"dependencies.html":{}}}],["angular/forms",{"_index":666,"title":{},"body":{"interfaces/EditorJSMaterialForm.html":{},"components/FormContainerComponent.html":{},"components/NgxEditorJSBaseComponent.html":{},"modules/NgxEditorJSModule.html":{},"modules/NgxEditorjsDemoModule.html":{},"dependencies.html":{}}}],["angular/material",{"_index":118,"title":{},"body":{"components/AppContainerComponent.html":{},"modules/AppModule.html":{},"interfaces/EditorJSMaterialForm.html":{},"modules/MaterialModule.html":{},"modules/NgxEditorJSModule.html":{},"modules/NgxEditorjsDemoModule.html":{},"modules/NgxTinynodesCoreMaterialModule.html":{},"dependencies.html":{}}}],["angular/platform",{"_index":267,"title":{},"body":{"modules/AppModule.html":{},"dependencies.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-readme.html":{}}}],["angular/router",{"_index":309,"title":{},"body":{"modules/AppRoutingModule.html":{},"interfaces/ApplicationData.html":{},"interfaces/ApplicationData-1.html":{},"interfaces/MenuGroup.html":{},"interfaces/MenuGroup-1.html":{},"interfaces/MenuItem.html":{},"interfaces/MenuItem-1.html":{},"modules/NgxEditorjsDemoModule.html":{},"modules/NgxHideableHeaderDemoModule.html":{},"dependencies.html":{}}}],["any).onready",{"_index":988,"title":{},"body":{"classes/MockEditorJS.html":{},"classes/MockPlugin.html":{},"classes/TestClass.html":{}}}],["aot",{"_index":2249,"title":{},"body":{"additional-documentation/tinynodes-library-docs/ngx-editorjs-readme/ngx-editorjs-changelog.html":{}}}],["api",{"_index":585,"title":{},"body":{"interfaces/CreateEditorJSOptions.html":{},"interfaces/EditorJSAction.html":{},"components/NgxEditorJSDemoHomeComponent.html":{},"injectables/NgxEditorJSService.html":{},"modules/PluginCodeModule.html":{},"modules/PluginHeaderModule.html":{},"modules/PluginImageModule.html":{},"modules/PluginLinkModule.html":{},"modules/PluginListModule.html":{},"modules/PluginMarkerModule.html":{},"modules/PluginParagraphModule.html":{},"modules/PluginSimpleImageModule.html":{},"miscellaneous/enumerations.html":{},"index.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-readme.html":{}}}],["api](https://editorjs.io/api",{"_index":1459,"title":{},"body":{"injectables/NgxEditorJSService.html":{}}}],["app",{"_index":61,"title":{},"body":{"components/AppContainerComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"interfaces/ApplicationData.html":{},"interfaces/ApplicationData-1.html":{},"interfaces/EditorJSConfig.html":{},"components/FormContainerComponent.html":{},"components/HomePageComponent.html":{},"interfaces/MenuGroup.html":{},"interfaces/MenuGroup-1.html":{},"interfaces/MenuItem.html":{},"interfaces/MenuItem-1.html":{},"interfaces/NgxEditorJSConfig.html":{},"modules/NgxEditorJSModule.html":{},"components/PageContainerComponent.html":{},"changelog.html":{},"miscellaneous/variables.html":{}}}],["app.component",{"_index":2202,"title":{},"body":{"additional-documentation/tinynodes-library-docs/ngx-editorjs-readme.html":{}}}],["app.component.html",{"_index":27,"title":{},"body":{"components/AppContainerComponent.html":{}}}],["app.component.scss",{"_index":25,"title":{},"body":{"components/AppContainerComponent.html":{}}}],["appcomponent",{"_index":2201,"title":{},"body":{"additional-documentation/tinynodes-library-docs/ngx-editorjs-readme.html":{}}}],["appcontainercomponent",{"_index":1,"title":{"components/AppContainerComponent.html":{}},"body":{"components/AppContainerComponent.html":{},"modules/AppModule.html":{},"components/FormContainerComponent.html":{},"components/HomePageComponent.html":{},"components/NavBarComponent.html":{},"components/NgxEditorJSBaseComponent.html":{},"components/NgxEditorJSComponent.html":{},"components/NgxEditorJSDemoHomeComponent.html":{},"components/NgxEditorJSDemoInfoComponent.html":{},"components/PageContainerComponent.html":{},"components/SidebarComponent.html":{},"coverage.html":{},"overview.html":{}}}],["appear",{"_index":909,"title":{},"body":{"components/FormContainerComponent.html":{},"components/PageContainerComponent.html":{}}}],["appearance",{"_index":1848,"title":{},"body":{"contributing.html":{}}}],["application",{"_index":14,"title":{},"body":{"components/AppContainerComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"injectables/AppService.html":{},"injectables/AppService-1.html":{},"interfaces/ApplicationData.html":{},"interfaces/ApplicationData-1.html":{},"modules/ApplicationDataModule.html":{},"injectables/ApplicationQuery.html":{},"injectables/ApplicationQuery-1.html":{},"interfaces/ApplicationState.html":{},"interfaces/ApplicationState-1.html":{},"injectables/ApplicationStore.html":{},"injectables/ApplicationStore-1.html":{},"interfaces/BasePlugin.html":{},"interfaces/BasePlugin-1.html":{},"interfaces/DemoData.html":{},"interfaces/DemoData-1.html":{},"interfaces/EditorJSMaterialForm.html":{},"components/FormContainerComponent.html":{},"interfaces/MenuGroup.html":{},"interfaces/MenuGroup-1.html":{},"interfaces/MenuItem.html":{},"interfaces/MenuItem-1.html":{},"components/NavBarComponent.html":{},"components/NgxEditorJSComponent.html":{},"interfaces/NgxEditorJSDemo.html":{},"interfaces/NgxEditorJSDemo-1.html":{},"interfaces/NgxEditorJSDemoData.html":{},"interfaces/NgxEditorJSDemoData-1.html":{},"components/NgxEditorJSDemoHomeComponent.html":{},"modules/NgxEditorJSModule.html":{},"injectables/NgxEditorJSPluginService.html":{},"components/PageContainerComponent.html":{},"interfaces/PluginConfig.html":{},"interfaces/PluginConfig-1.html":{},"interfaces/TinynodeDemos.html":{},"interfaces/TinynodeDemos-1.html":{},"interfaces/ToolSettingsMap.html":{},"interfaces/ToolSettingsMap-1.html":{},"changelog.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"index.html":{},"miscellaneous/variables.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-readme.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-readme/ngx-editorjs-changelog.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-plugins-readme.html":{}}}],["application.model",{"_index":366,"title":{},"body":{"injectables/AppService.html":{},"injectables/AppService-1.html":{},"injectables/ApplicationQuery.html":{},"injectables/ApplicationQuery-1.html":{},"injectables/ApplicationStore.html":{},"injectables/ApplicationStore-1.html":{}}}],["application.query",{"_index":367,"title":{},"body":{"injectables/AppService.html":{},"injectables/AppService-1.html":{},"modules/ApplicationDataModule.html":{}}}],["application.service",{"_index":431,"title":{},"body":{"modules/ApplicationDataModule.html":{}}}],["application.store",{"_index":368,"title":{},"body":{"injectables/AppService.html":{},"injectables/AppService-1.html":{},"modules/ApplicationDataModule.html":{},"injectables/ApplicationQuery.html":{},"injectables/ApplicationQuery-1.html":{}}}],["applicationdata",{"_index":362,"title":{"interfaces/ApplicationData.html":{},"interfaces/ApplicationData-1.html":{}},"body":{"injectables/AppService.html":{},"injectables/AppService-1.html":{},"interfaces/ApplicationData.html":{},"interfaces/ApplicationData-1.html":{},"interfaces/MenuGroup.html":{},"interfaces/MenuGroup-1.html":{},"interfaces/MenuItem.html":{},"interfaces/MenuItem-1.html":{},"coverage.html":{}}}],["applicationdatamodule",{"_index":246,"title":{"modules/ApplicationDataModule.html":{}},"body":{"modules/AppModule.html":{},"modules/ApplicationDataModule.html":{},"modules/NgxTinynodesCoreModule.html":{},"modules.html":{},"overview.html":{}}}],["applicationquery",{"_index":332,"title":{"injectables/ApplicationQuery.html":{},"injectables/ApplicationQuery-1.html":{}},"body":{"injectables/AppService.html":{},"injectables/AppService-1.html":{},"modules/ApplicationDataModule.html":{},"injectables/ApplicationQuery.html":{},"injectables/ApplicationQuery-1.html":{},"coverage.html":{},"overview.html":{}}}],["applicationstate",{"_index":439,"title":{"interfaces/ApplicationState.html":{},"interfaces/ApplicationState-1.html":{}},"body":{"injectables/ApplicationQuery.html":{},"injectables/ApplicationQuery-1.html":{},"interfaces/ApplicationState.html":{},"interfaces/ApplicationState-1.html":{},"injectables/ApplicationStore.html":{},"injectables/ApplicationStore-1.html":{},"interfaces/DemoData.html":{},"interfaces/DemoData-1.html":{},"interfaces/NgxEditorJSDemo.html":{},"interfaces/NgxEditorJSDemo-1.html":{},"interfaces/NgxEditorJSDemoData.html":{},"interfaces/NgxEditorJSDemoData-1.html":{},"interfaces/TinynodeDemos.html":{},"interfaces/TinynodeDemos-1.html":{},"coverage.html":{}}}],["applicationstatekeys",{"_index":364,"title":{},"body":{"injectables/AppService.html":{},"injectables/AppService-1.html":{},"interfaces/ApplicationState.html":{},"interfaces/ApplicationState-1.html":{},"interfaces/DemoData.html":{},"interfaces/DemoData-1.html":{},"interfaces/NgxEditorJSDemo.html":{},"interfaces/NgxEditorJSDemo-1.html":{},"interfaces/NgxEditorJSDemoData.html":{},"interfaces/NgxEditorJSDemoData-1.html":{},"interfaces/TinynodeDemos.html":{},"interfaces/TinynodeDemos-1.html":{},"miscellaneous/enumerations.html":{}}}],["applicationstatekeys.hidden",{"_index":374,"title":{},"body":{"injectables/AppService.html":{},"injectables/AppService-1.html":{}}}],["applicationstore",{"_index":333,"title":{"injectables/ApplicationStore.html":{},"injectables/ApplicationStore-1.html":{}},"body":{"injectables/AppService.html":{},"injectables/AppService-1.html":{},"modules/ApplicationDataModule.html":{},"injectables/ApplicationQuery.html":{},"injectables/ApplicationQuery-1.html":{},"injectables/ApplicationStore.html":{},"injectables/ApplicationStore-1.html":{},"coverage.html":{},"overview.html":{}}}],["applies",{"_index":1925,"title":{},"body":{"contributing.html":{}}}],["appmodule",{"_index":234,"title":{"modules/AppModule.html":{}},"body":{"modules/AppModule.html":{},"modules.html":{},"overview.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-readme.html":{}}}],["appointed",{"_index":1937,"title":{},"body":{"contributing.html":{}}}],["appropriate",{"_index":1903,"title":{},"body":{"contributing.html":{}}}],["approutes",{"_index":312,"title":{},"body":{"modules/AppRoutingModule.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["approutingmodule",{"_index":245,"title":{"modules/AppRoutingModule.html":{}},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"modules.html":{},"overview.html":{}}}],["apps",{"_index":406,"title":{},"body":{"interfaces/ApplicationData.html":{},"interfaces/ApplicationData-1.html":{},"interfaces/MenuGroup.html":{},"interfaces/MenuGroup-1.html":{},"interfaces/MenuItem.html":{},"interfaces/MenuItem-1.html":{}}}],["apps/.../app",{"_index":2172,"title":{},"body":{"miscellaneous/variables.html":{}}}],["apps/.../app.po.ts",{"_index":2178,"title":{},"body":{"miscellaneous/variables.html":{}}}],["apps/.../application.model.ts",{"_index":2071,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["apps/.../environment.prod.ts",{"_index":2176,"title":{},"body":{"miscellaneous/variables.html":{}}}],["apps/.../environment.ts",{"_index":2177,"title":{},"body":{"miscellaneous/variables.html":{}}}],["apps/ngx",{"_index":10,"title":{},"body":{"components/AppContainerComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"injectables/AppService-1.html":{},"interfaces/ApplicationData-1.html":{},"injectables/ApplicationQuery-1.html":{},"interfaces/ApplicationState-1.html":{},"injectables/ApplicationStore-1.html":{},"interfaces/DemoData-1.html":{},"components/FormContainerComponent.html":{},"components/HomePageComponent.html":{},"modules/MaterialModule.html":{},"interfaces/MenuGroup-1.html":{},"interfaces/MenuItem-1.html":{},"components/NavBarComponent.html":{},"interfaces/NgxEditorJSDemo-1.html":{},"interfaces/NgxEditorJSDemoData-1.html":{},"modules/NgxEditorjsDemoModule.html":{},"components/PageContainerComponent.html":{},"components/SidebarComponent.html":{},"interfaces/TinynodeDemos-1.html":{},"coverage.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/variables.html":{}}}],["appservice",{"_index":49,"title":{"injectables/AppService.html":{},"injectables/AppService-1.html":{}},"body":{"components/AppContainerComponent.html":{},"injectables/AppService.html":{},"injectables/AppService-1.html":{},"modules/ApplicationDataModule.html":{},"components/FormContainerComponent.html":{},"components/HomePageComponent.html":{},"modules/NgxTinynodesCoreModule.html":{},"components/PageContainerComponent.html":{},"coverage.html":{},"overview.html":{}}}],["area",{"_index":617,"title":{},"body":{"interfaces/EditorJSConfig.html":{},"components/FormContainerComponent.html":{},"components/NgxEditorJSBaseComponent.html":{},"components/NgxEditorJSComponent.html":{},"interfaces/NgxEditorJSConfig.html":{},"directives/NgxEditorJSDirective.html":{},"components/PageContainerComponent.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-readme.html":{}}}],["aria",{"_index":411,"title":{},"body":{"interfaces/ApplicationData.html":{},"interfaces/ApplicationData-1.html":{},"interfaces/EditorJSMaterialForm.html":{},"interfaces/MenuGroup.html":{},"interfaces/MenuGroup-1.html":{},"interfaces/MenuItem.html":{},"interfaces/MenuItem-1.html":{}}}],["arising",{"_index":2148,"title":{},"body":{"license.html":{}}}],["array",{"_index":1052,"title":{},"body":{"components/NgxEditorJSBaseComponent.html":{},"components/NgxEditorJSComponent.html":{},"directives/NgxEditorJSDirective.html":{},"injectables/NgxEditorJSPluginService.html":{},"injectables/NgxEditorJSService.html":{}}}],["arrayadd",{"_index":1616,"title":{},"body":{"injectables/PagesService.html":{}}}],["arrayadd(entity.blocks",{"_index":1628,"title":{},"body":{"injectables/PagesService.html":{}}}],["arrayremove",{"_index":1617,"title":{},"body":{"injectables/PagesService.html":{}}}],["arrayremove(entity.blocks",{"_index":1629,"title":{},"body":{"injectables/PagesService.html":{}}}],["asjson",{"_index":1561,"title":{},"body":{"components/PageContainerComponent.html":{}}}],["associated",{"_index":2105,"title":{},"body":{"license.html":{}}}],["async",{"_index":906,"title":{},"body":{"components/FormContainerComponent.html":{},"components/NgxEditorJSDemoInfoComponent.html":{},"injectables/NgxEditorJSService.html":{},"components/PageContainerComponent.html":{}}}],["attach",{"_index":1201,"title":{},"body":{"directives/NgxEditorJSDirective.html":{},"index.html":{},"miscellaneous/variables.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-readme.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-readme/ngx-editorjs-changelog.html":{}}}],["attached",{"_index":1212,"title":{},"body":{"directives/NgxEditorJSDirective.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-readme/ngx-editorjs-changelog.html":{}}}],["attacks",{"_index":1885,"title":{},"body":{"contributing.html":{}}}],["attention",{"_index":1879,"title":{},"body":{"contributing.html":{}}}],["attr.aria",{"_index":685,"title":{},"body":{"interfaces/EditorJSMaterialForm.html":{}}}],["attributes",{"_index":678,"title":{},"body":{"interfaces/EditorJSMaterialForm.html":{},"components/NgxEditorJSComponent.html":{}}}],["attribution",{"_index":1975,"title":{},"body":{"contributing.html":{}}}],["authors",{"_index":2139,"title":{},"body":{"license.html":{}}}],["auto",{"_index":182,"title":{},"body":{"components/AppContainerComponent.html":{},"components/NavBarComponent.html":{}}}],["autofocus",{"_index":598,"title":{},"body":{"interfaces/EditorJSConfig.html":{},"components/NgxEditorJSBaseComponent.html":{},"components/NgxEditorJSComponent.html":{},"interfaces/NgxEditorJSConfig.html":{},"directives/NgxEditorJSDirective.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-readme.html":{}}}],["autofocused",{"_index":604,"title":{},"body":{"interfaces/EditorJSConfig.html":{},"interfaces/NgxEditorJSConfig.html":{}}}],["autosave",{"_index":575,"title":{},"body":{"interfaces/CreateEditorJSOptions.html":{},"interfaces/EditorJSAction.html":{},"interfaces/EditorJSMaterialForm.html":{},"components/FormContainerComponent.html":{},"components/NgxEditorJSBaseComponent.html":{},"components/NgxEditorJSComponent.html":{},"directives/NgxEditorJSDirective.html":{},"injectables/NgxEditorJSService.html":{},"todo.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-readme.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-readme/ngx-editorjs-changelog.html":{}}}],["autosavetime",{"_index":813,"title":{},"body":{"components/FormContainerComponent.html":{}}}],["available",{"_index":405,"title":{},"body":{"interfaces/ApplicationData.html":{},"interfaces/ApplicationData-1.html":{},"interfaces/Block.html":{},"interfaces/Header.html":{},"interfaces/HeaderBlock.html":{},"interfaces/Image.html":{},"interfaces/ImageBlock.html":{},"interfaces/List.html":{},"interfaces/ListBlock.html":{},"interfaces/MenuGroup.html":{},"interfaces/MenuGroup-1.html":{},"interfaces/MenuItem.html":{},"interfaces/MenuItem-1.html":{},"components/NgxEditorJSBaseComponent.html":{},"injectables/NgxEditorJSPluginService.html":{},"injectables/PagesService.html":{},"interfaces/Paragraph.html":{},"interfaces/ParagraphBlock.html":{},"contributing.html":{},"modules.html":{},"miscellaneous/typealiases.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-readme/ngx-editorjs-changelog.html":{}}}],["await",{"_index":1457,"title":{},"body":{"injectables/NgxEditorJSService.html":{}}}],["back",{"_index":1407,"title":{},"body":{"injectables/NgxEditorJSService.html":{},"todo.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-readme/ngx-editorjs-changelog.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-plugins-readme/ngx-editorjs-plugins-changelog.html":{}}}],["background",{"_index":519,"title":{},"body":{"interfaces/Block.html":{},"interfaces/Header.html":{},"interfaces/HeaderBlock.html":{},"interfaces/Image.html":{},"interfaces/ImageBlock.html":{},"interfaces/List.html":{},"interfaces/ListBlock.html":{},"interfaces/Paragraph.html":{},"interfaces/ParagraphBlock.html":{}}}],["ban",{"_index":1915,"title":{},"body":{"contributing.html":{}}}],["bar",{"_index":1018,"title":{},"body":{"components/NavBarComponent.html":{}}}],["bar'},{'name",{"_index":209,"title":{},"body":{"components/AppContainerComponent.html":{},"components/FormContainerComponent.html":{},"components/HomePageComponent.html":{},"components/NavBarComponent.html":{},"components/NgxEditorJSBaseComponent.html":{},"components/NgxEditorJSComponent.html":{},"components/NgxEditorJSDemoHomeComponent.html":{},"components/NgxEditorJSDemoInfoComponent.html":{},"components/PageContainerComponent.html":{},"components/SidebarComponent.html":{}}}],["bar.component",{"_index":286,"title":{},"body":{"modules/AppModule.html":{}}}],["bar.component.html",{"_index":1020,"title":{},"body":{"components/NavBarComponent.html":{}}}],["bar.component.scss",{"_index":1019,"title":{},"body":{"components/NavBarComponent.html":{}}}],["bar.component.ts",{"_index":1014,"title":{},"body":{"components/NavBarComponent.html":{},"coverage.html":{}}}],["bar.component.ts:18",{"_index":1023,"title":{},"body":{"components/NavBarComponent.html":{}}}],["bar.component.ts:21",{"_index":1022,"title":{},"body":{"components/NavBarComponent.html":{}}}],["bar.component.ts:27",{"_index":1024,"title":{},"body":{"components/NavBarComponent.html":{}}}],["bar/nav",{"_index":285,"title":{},"body":{"modules/AppModule.html":{},"components/NavBarComponent.html":{},"coverage.html":{}}}],["base",{"_index":305,"title":{},"body":{"modules/AppRoutingModule.html":{},"interfaces/Block.html":{},"interfaces/EditorJSMaterialForm.html":{},"components/NgxEditorJSBaseComponent.html":{},"modules/NgxEditorJSModule.html":{},"miscellaneous/functions.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-readme.html":{}}}],["base/container.class",{"_index":672,"title":{},"body":{"interfaces/EditorJSMaterialForm.html":{},"components/NgxEditorJSComponent.html":{}}}],["based",{"_index":765,"title":{},"body":{"interfaces/EditorJSMaterialForm.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-readme/ngx-editorjs-changelog.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-plugins-readme/ngx-editorjs-plugins-changelog.html":{}}}],["baseplugin",{"_index":465,"title":{"interfaces/BasePlugin.html":{},"interfaces/BasePlugin-1.html":{}},"body":{"interfaces/BasePlugin.html":{},"interfaces/BasePlugin-1.html":{},"classes/MockEditorJS.html":{},"classes/MockPlugin.html":{},"injectables/NgxEditorJSPluginService.html":{},"injectables/PluginCode.html":{},"interfaces/PluginConfig.html":{},"interfaces/PluginConfig-1.html":{},"injectables/PluginHeader.html":{},"injectables/PluginImage.html":{},"injectables/PluginLink.html":{},"injectables/PluginList.html":{},"injectables/PluginMarker.html":{},"injectables/PluginParagraph.html":{},"injectables/PluginSimpleImage.html":{},"classes/TestClass.html":{},"interfaces/ToolSettingsMap.html":{},"interfaces/ToolSettingsMap-1.html":{},"coverage.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-readme/ngx-editorjs-changelog.html":{}}}],["bash",{"_index":2199,"title":{},"body":{"additional-documentation/tinynodes-library-docs/ngx-editorjs-readme.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-plugins-readme.html":{}}}],["basic",{"_index":524,"title":{},"body":{"interfaces/Block.html":{},"interfaces/Header.html":{},"interfaces/HeaderBlock.html":{},"interfaces/Image.html":{},"interfaces/ImageBlock.html":{},"interfaces/List.html":{},"interfaces/ListBlock.html":{},"components/NgxEditorJSDemoHomeComponent.html":{},"interfaces/Paragraph.html":{},"interfaces/ParagraphBlock.html":{},"miscellaneous/typealiases.html":{}}}],["basis",{"_index":927,"title":{},"body":{"components/FormContainerComponent.html":{}}}],["before",{"_index":1415,"title":{},"body":{"injectables/NgxEditorJSService.html":{},"contributing.html":{}}}],["behavior",{"_index":1854,"title":{},"body":{"contributing.html":{}}}],["behaviors",{"_index":1919,"title":{},"body":{"contributing.html":{}}}],["behaviorsubject",{"_index":121,"title":{},"body":{"components/AppContainerComponent.html":{},"interfaces/BlocksMap.html":{},"interfaces/ChangeMap.html":{},"interfaces/EditorMap.html":{},"interfaces/EventMap.html":{},"interfaces/EventType.html":{},"components/FormContainerComponent.html":{},"components/NgxEditorJSDemoInfoComponent.html":{},"directives/NgxEditorJSDirective.html":{},"injectables/NgxEditorJSService.html":{},"components/PageContainerComponent.html":{},"interfaces/ReadyMap.html":{}}}],["behaviorsubject(0",{"_index":826,"title":{},"body":{"components/FormContainerComponent.html":{}}}],["behaviorsubject(false",{"_index":93,"title":{},"body":{"components/AppContainerComponent.html":{},"directives/NgxEditorJSDirective.html":{}}}],["behaviorsubject(true",{"_index":836,"title":{},"body":{"components/FormContainerComponent.html":{},"components/NgxEditorJSDemoInfoComponent.html":{}}}],["behaviorsubject(undefined",{"_index":838,"title":{},"body":{"components/FormContainerComponent.html":{},"components/PageContainerComponent.html":{}}}],["being",{"_index":1859,"title":{},"body":{"contributing.html":{}}}],["below",{"_index":887,"title":{},"body":{"components/FormContainerComponent.html":{},"components/HomePageComponent.html":{},"components/NgxEditorJSDemoInfoComponent.html":{},"components/PageContainerComponent.html":{},"index.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-readme.html":{}}}],["best",{"_index":1869,"title":{},"body":{"contributing.html":{}}}],["beta.24",{"_index":2048,"title":{},"body":{"dependencies.html":{}}}],["binding",{"_index":728,"title":{},"body":{"interfaces/EditorJSMaterialForm.html":{}}}],["block",{"_index":180,"title":{"interfaces/Block.html":{}},"body":{"components/AppContainerComponent.html":{},"interfaces/ApplicationState.html":{},"interfaces/ApplicationState-1.html":{},"interfaces/Block.html":{},"interfaces/BlocksMap.html":{},"interfaces/ChangeMap.html":{},"interfaces/DemoData.html":{},"interfaces/DemoData-1.html":{},"interfaces/EditorJSConfig.html":{},"interfaces/EditorJSInstanceConfig.html":{},"interfaces/EditorMap.html":{},"interfaces/EventMap.html":{},"interfaces/EventType.html":{},"components/FormContainerComponent.html":{},"interfaces/Header.html":{},"interfaces/HeaderBlock.html":{},"interfaces/Image.html":{},"interfaces/ImageBlock.html":{},"interfaces/InjectorMethodOption.html":{},"interfaces/List.html":{},"interfaces/ListBlock.html":{},"components/NavBarComponent.html":{},"components/NgxEditorJSBaseComponent.html":{},"components/NgxEditorJSComponent.html":{},"interfaces/NgxEditorJSConfig.html":{},"interfaces/NgxEditorJSDemo.html":{},"interfaces/NgxEditorJSDemo-1.html":{},"interfaces/NgxEditorJSDemoData.html":{},"interfaces/NgxEditorJSDemoData-1.html":{},"directives/NgxEditorJSDirective.html":{},"injectables/NgxEditorJSEffects.html":{},"injectables/NgxEditorJSService.html":{},"modules/NgxEditorjsPluginsModule.html":{},"interfaces/Page.html":{},"interfaces/PageBlock.html":{},"components/PageContainerComponent.html":{},"injectables/PagesService.html":{},"interfaces/Paragraph.html":{},"interfaces/ParagraphBlock.html":{},"injectables/PluginCode.html":{},"modules/PluginCodeModule.html":{},"injectables/PluginHeader.html":{},"modules/PluginHeaderModule.html":{},"injectables/PluginImage.html":{},"modules/PluginImageModule.html":{},"injectables/PluginLink.html":{},"modules/PluginLinkModule.html":{},"injectables/PluginList.html":{},"modules/PluginListModule.html":{},"injectables/PluginParagraph.html":{},"modules/PluginParagraphModule.html":{},"injectables/PluginSimpleImage.html":{},"modules/PluginSimpleImageModule.html":{},"interfaces/ReadyMap.html":{},"interfaces/Tag.html":{},"interfaces/TinynodeDemos.html":{},"interfaces/TinynodeDemos-1.html":{},"changelog.html":{},"coverage.html":{},"index.html":{},"miscellaneous/typealiases.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-readme.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-plugins-readme.html":{}}}],["block.id",{"_index":1630,"title":{},"body":{"injectables/PagesService.html":{}}}],["blockplaceholder",{"_index":599,"title":{},"body":{"interfaces/EditorJSConfig.html":{},"components/NgxEditorJSBaseComponent.html":{},"components/NgxEditorJSComponent.html":{},"interfaces/NgxEditorJSConfig.html":{},"directives/NgxEditorJSDirective.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-readme.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-readme/ngx-editorjs-changelog.html":{}}}],["blocks",{"_index":453,"title":{},"body":{"interfaces/ApplicationState.html":{},"interfaces/ApplicationState-1.html":{},"interfaces/BlocksMap.html":{},"interfaces/ChangeMap.html":{},"interfaces/CreateEditorJSOptions.html":{},"interfaces/DemoData.html":{},"interfaces/DemoData-1.html":{},"interfaces/EditorJSAction.html":{},"interfaces/EditorJSInstanceConfig.html":{},"interfaces/EditorMap.html":{},"interfaces/EventMap.html":{},"interfaces/EventType.html":{},"components/FormContainerComponent.html":{},"interfaces/InjectorMethodOption.html":{},"classes/MockEditorJS.html":{},"classes/MockPlugin.html":{},"components/NgxEditorJSBaseComponent.html":{},"components/NgxEditorJSComponent.html":{},"interfaces/NgxEditorJSDemo.html":{},"interfaces/NgxEditorJSDemo-1.html":{},"interfaces/NgxEditorJSDemoData.html":{},"interfaces/NgxEditorJSDemoData-1.html":{},"directives/NgxEditorJSDirective.html":{},"injectables/NgxEditorJSEffects.html":{},"injectables/NgxEditorJSService.html":{},"interfaces/Page.html":{},"interfaces/PageBlock.html":{},"components/PageContainerComponent.html":{},"injectables/PagesService.html":{},"interfaces/ReadyMap.html":{},"interfaces/Tag.html":{},"classes/TestClass.html":{},"interfaces/TinynodeDemos.html":{},"interfaces/TinynodeDemos-1.html":{},"todo.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-readme.html":{}}}],["blocks.subscribe",{"_index":1304,"title":{},"body":{"injectables/NgxEditorJSEffects.html":{}}}],["blocksmap",{"_index":526,"title":{"interfaces/BlocksMap.html":{}},"body":{"interfaces/BlocksMap.html":{},"interfaces/ChangeMap.html":{},"interfaces/EditorJSInstanceConfig.html":{},"interfaces/EditorMap.html":{},"interfaces/EventMap.html":{},"interfaces/EventType.html":{},"interfaces/InjectorMethodOption.html":{},"interfaces/ReadyMap.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["blocktypes",{"_index":525,"title":{},"body":{"interfaces/Block.html":{},"interfaces/Header.html":{},"interfaces/HeaderBlock.html":{},"interfaces/Image.html":{},"interfaces/ImageBlock.html":{},"interfaces/List.html":{},"interfaces/ListBlock.html":{},"interfaces/Paragraph.html":{},"interfaces/ParagraphBlock.html":{},"miscellaneous/typealiases.html":{}}}],["body",{"_index":1175,"title":{},"body":{"components/NgxEditorJSDemoInfoComponent.html":{},"contributing.html":{}}}],["boolean",{"_index":81,"title":{},"body":{"components/AppContainerComponent.html":{},"injectables/AppService.html":{},"interfaces/ApplicationData.html":{},"interfaces/ApplicationData-1.html":{},"interfaces/ApplicationState.html":{},"interfaces/ApplicationState-1.html":{},"interfaces/Block.html":{},"interfaces/BlocksMap.html":{},"interfaces/ChangeMap.html":{},"interfaces/CreateEditorJSOptions.html":{},"interfaces/DemoData.html":{},"interfaces/DemoData-1.html":{},"interfaces/EditorJSAction.html":{},"interfaces/EditorJSConfig.html":{},"interfaces/EditorJSMaterialForm.html":{},"interfaces/EditorMap.html":{},"interfaces/EventMap.html":{},"interfaces/EventType.html":{},"components/FormContainerComponent.html":{},"interfaces/Header.html":{},"interfaces/HeaderBlock.html":{},"interfaces/Image.html":{},"interfaces/ImageBlock.html":{},"interfaces/List.html":{},"interfaces/ListBlock.html":{},"interfaces/MenuGroup.html":{},"interfaces/MenuGroup-1.html":{},"interfaces/MenuItem.html":{},"interfaces/MenuItem-1.html":{},"components/NgxEditorJSBaseComponent.html":{},"components/NgxEditorJSComponent.html":{},"interfaces/NgxEditorJSConfig.html":{},"interfaces/NgxEditorJSDemo.html":{},"interfaces/NgxEditorJSDemo-1.html":{},"interfaces/NgxEditorJSDemoData.html":{},"interfaces/NgxEditorJSDemoData-1.html":{},"components/NgxEditorJSDemoInfoComponent.html":{},"directives/NgxEditorJSDirective.html":{},"interfaces/Paragraph.html":{},"interfaces/ParagraphBlock.html":{},"interfaces/ReadyMap.html":{},"interfaces/TinynodeDemos.html":{},"interfaces/TinynodeDemos-1.html":{}}}],["bootstrap",{"_index":238,"title":{},"body":{"modules/AppModule.html":{},"modules/ApplicationDataModule.html":{},"modules/NgxEditorJSModule.html":{},"modules/NgxEditorjsDemoModule.html":{},"modules/NgxEditorjsNgrxModule.html":{},"modules/NgxEditorjsPluginsModule.html":{},"modules/NgxTinynodesCoreModule.html":{},"modules/PageStoreModule.html":{},"modules/PluginCodeModule.html":{},"modules/PluginHeaderModule.html":{},"modules/PluginImageModule.html":{},"modules/PluginLinkModule.html":{},"modules/PluginListModule.html":{},"modules/PluginMarkerModule.html":{},"modules/PluginParagraphModule.html":{},"modules/PluginSimpleImageModule.html":{},"overview.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-readme.html":{}}}],["border",{"_index":516,"title":{},"body":{"interfaces/Block.html":{},"interfaces/Header.html":{},"interfaces/HeaderBlock.html":{},"interfaces/Image.html":{},"interfaces/ImageBlock.html":{},"interfaces/List.html":{},"interfaces/ListBlock.html":{},"components/NgxEditorJSComponent.html":{},"interfaces/Paragraph.html":{},"interfaces/ParagraphBlock.html":{}}}],["both",{"_index":1926,"title":{},"body":{"contributing.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-readme/ngx-editorjs-changelog.html":{}}}],["bottom",{"_index":616,"title":{},"body":{"interfaces/EditorJSConfig.html":{},"components/NgxEditorJSBaseComponent.html":{},"components/NgxEditorJSComponent.html":{},"interfaces/NgxEditorJSConfig.html":{},"directives/NgxEditorJSDirective.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-readme.html":{}}}],["box",{"_index":2084,"title":{},"body":{"index.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-readme.html":{}}}],["break",{"_index":1777,"title":{},"body":{"changelog.html":{}}}],["browse",{"_index":2152,"title":{},"body":{"modules.html":{}}}],["browser",{"_index":268,"title":{},"body":{"modules/AppModule.html":{},"components/NgxEditorJSBaseComponent.html":{},"components/NgxEditorJSComponent.html":{},"directives/NgxEditorJSDirective.html":{},"dependencies.html":{},"modules.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-readme.html":{}}}],["browser/animations",{"_index":270,"title":{},"body":{"modules/AppModule.html":{}}}],["browseranimationsmodule",{"_index":269,"title":{},"body":{"modules/AppModule.html":{}}}],["browsermodule",{"_index":266,"title":{},"body":{"modules/AppModule.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-readme.html":{}}}],["bug",{"_index":1768,"title":{},"body":{"changelog.html":{},"additional-documentation/tinynodes-library-docs.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-readme/ngx-editorjs-changelog.html":{}}}],["build",{"_index":1766,"title":{},"body":{"changelog.html":{},"contributing.html":{}}}],["builder",{"_index":806,"title":{},"body":{"components/FormContainerComponent.html":{}}}],["builds",{"_index":255,"title":{},"body":{"modules/AppModule.html":{}}}],["calc(300px",{"_index":1198,"title":{},"body":{"components/NgxEditorJSDemoInfoComponent.html":{}}}],["call",{"_index":642,"title":{},"body":{"interfaces/EditorJSInstanceConfig.html":{},"components/FormContainerComponent.html":{},"interfaces/InjectorMethodOption.html":{},"components/PageContainerComponent.html":{}}}],["called",{"_index":751,"title":{},"body":{"interfaces/EditorJSMaterialForm.html":{},"components/NgxEditorJSBaseComponent.html":{},"components/NgxEditorJSComponent.html":{},"directives/NgxEditorJSDirective.html":{}}}],["calling",{"_index":531,"title":{},"body":{"interfaces/BlocksMap.html":{},"interfaces/ChangeMap.html":{},"interfaces/EditorMap.html":{},"interfaces/EventMap.html":{},"interfaces/EventType.html":{},"injectables/NgxEditorJSService.html":{},"interfaces/ReadyMap.html":{}}}],["calls",{"_index":1405,"title":{},"body":{"injectables/NgxEditorJSService.html":{}}}],["caption",{"_index":515,"title":{},"body":{"interfaces/Block.html":{},"interfaces/Header.html":{},"interfaces/HeaderBlock.html":{},"interfaces/Image.html":{},"interfaces/ImageBlock.html":{},"interfaces/List.html":{},"interfaces/ListBlock.html":{},"interfaces/Paragraph.html":{},"interfaces/ParagraphBlock.html":{}}}],["card",{"_index":930,"title":{},"body":{"components/FormContainerComponent.html":{},"components/PageContainerComponent.html":{}}}],["case",{"_index":1441,"title":{},"body":{"injectables/NgxEditorJSService.html":{}}}],["cd",{"_index":799,"title":{},"body":{"components/FormContainerComponent.html":{},"components/PageContainerComponent.html":{}}}],["center",{"_index":186,"title":{},"body":{"components/AppContainerComponent.html":{},"components/NavBarComponent.html":{}}}],["change",{"_index":542,"title":{},"body":{"interfaces/BlocksMap.html":{},"interfaces/ChangeMap.html":{},"interfaces/CreateEditorJSOptions.html":{},"interfaces/EditorJSAction.html":{},"interfaces/EditorJSInstanceConfig.html":{},"interfaces/EditorJSMaterialForm.html":{},"interfaces/EditorMap.html":{},"interfaces/EventMap.html":{},"interfaces/EventType.html":{},"components/FormContainerComponent.html":{},"interfaces/InjectorMethodOption.html":{},"components/NgxEditorJSBaseComponent.html":{},"components/NgxEditorJSComponent.html":{},"directives/NgxEditorJSDirective.html":{},"injectables/NgxEditorJSService.html":{},"components/PageContainerComponent.html":{},"interfaces/ReadyMap.html":{},"changelog.html":{},"contributing.html":{}}}],["changed",{"_index":545,"title":{"classes/Changed.html":{}},"body":{"classes/Changed.html":{},"components/NgxEditorJSBaseComponent.html":{},"components/NgxEditorJSComponent.html":{},"directives/NgxEditorJSDirective.html":{},"injectables/NgxEditorJSService.html":{},"classes/NotReady.html":{},"classes/Ready.html":{},"classes/SaveEnd.html":{},"classes/SaveStart.html":{},"coverage.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/typealiases.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-readme/ngx-editorjs-changelog.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-plugins-readme/ngx-editorjs-plugins-changelog.html":{}}}],["changedetection",{"_index":785,"title":{},"body":{"components/FormContainerComponent.html":{},"components/PageContainerComponent.html":{}}}],["changedetectionstrategy",{"_index":854,"title":{},"body":{"components/FormContainerComponent.html":{},"components/PageContainerComponent.html":{}}}],["changedetectionstrategy.onpush",{"_index":786,"title":{},"body":{"components/FormContainerComponent.html":{},"components/PageContainerComponent.html":{}}}],["changedetectorref",{"_index":800,"title":{},"body":{"components/FormContainerComponent.html":{},"components/PageContainerComponent.html":{}}}],["changelog",{"_index":1737,"title":{"changelog.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-readme/ngx-editorjs-changelog.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-plugins-readme/ngx-editorjs-plugins-changelog.html":{}},"body":{"changelog.html":{},"index.html":{},"additional-documentation/tinynodes-library-docs.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-readme.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-readme/ngx-editorjs-changelog.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-plugins-readme/ngx-editorjs-plugins-changelog.html":{}}}],["changelog.md",{"_index":2242,"title":{},"body":{"additional-documentation/tinynodes-library-docs/ngx-editorjs-readme/ngx-editorjs-changelog.html":{}}}],["changelogs",{"_index":1739,"title":{},"body":{"changelog.html":{}}}],["changemap",{"_index":543,"title":{"interfaces/ChangeMap.html":{}},"body":{"interfaces/BlocksMap.html":{},"interfaces/ChangeMap.html":{},"interfaces/EditorJSInstanceConfig.html":{},"interfaces/EditorMap.html":{},"interfaces/EventMap.html":{},"interfaces/EventType.html":{},"interfaces/InjectorMethodOption.html":{},"interfaces/ReadyMap.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["changes",{"_index":1239,"title":{},"body":{"directives/NgxEditorJSDirective.html":{},"injectables/NgxEditorJSService.html":{},"contributing.html":{},"todo.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-readme.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-readme/ngx-editorjs-changelog.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-plugins-readme/ngx-editorjs-plugins-changelog.html":{}}}],["changes.blocks",{"_index":1265,"title":{},"body":{"directives/NgxEditorJSDirective.html":{}}}],["changes.blocks.currentvalue",{"_index":1269,"title":{},"body":{"directives/NgxEditorJSDirective.html":{}}}],["changes.blocks.firstchange",{"_index":1266,"title":{},"body":{"directives/NgxEditorJSDirective.html":{}}}],["changeskeys",{"_index":1270,"title":{},"body":{"directives/NgxEditorJSDirective.html":{}}}],["changeskeys.includes(key",{"_index":1274,"title":{},"body":{"directives/NgxEditorJSDirective.html":{}}}],["charge",{"_index":2100,"title":{},"body":{"license.html":{}}}],["check",{"_index":923,"title":{},"body":{"components/FormContainerComponent.html":{},"injectables/NgxEditorJSService.html":{},"components/PageContainerComponent.html":{}}}],["checkchildren",{"_index":1065,"title":{},"body":{"components/NgxEditorJSBaseComponent.html":{},"components/NgxEditorJSComponent.html":{}}}],["checkchildren).pipe",{"_index":1110,"title":{},"body":{"components/NgxEditorJSBaseComponent.html":{}}}],["checked",{"_index":1069,"title":{},"body":{"components/NgxEditorJSBaseComponent.html":{},"components/NgxEditorJSComponent.html":{}}}],["child.label",{"_index":1729,"title":{},"body":{"components/SidebarComponent.html":{}}}],["children",{"_index":415,"title":{},"body":{"interfaces/ApplicationData.html":{},"interfaces/ApplicationData-1.html":{},"interfaces/MenuGroup.html":{},"interfaces/MenuGroup-1.html":{},"interfaces/MenuItem.html":{},"interfaces/MenuItem-1.html":{},"components/NgxEditorJSBaseComponent.html":{},"components/NgxEditorJSComponent.html":{}}}],["ci",{"_index":2160,"title":{},"body":{"todo.html":{}}}],["circumstances",{"_index":1956,"title":{},"body":{"contributing.html":{}}}],["claim",{"_index":2142,"title":{},"body":{"license.html":{}}}],["clarified",{"_index":1942,"title":{},"body":{"contributing.html":{}}}],["clarifying",{"_index":1900,"title":{},"body":{"contributing.html":{}}}],["clash",{"_index":2219,"title":{},"body":{"additional-documentation/tinynodes-library-docs/ngx-editorjs-readme/ngx-editorjs-changelog.html":{}}}],["class",{"_index":128,"title":{"classes/Changed.html":{},"classes/MockEditorJS.html":{},"classes/MockPlugin.html":{},"classes/NotReady.html":{},"classes/Ready.html":{},"classes/SaveEnd.html":{},"classes/SaveStart.html":{},"classes/TestClass.html":{}},"body":{"components/AppContainerComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"injectables/AppService.html":{},"injectables/AppService-1.html":{},"modules/ApplicationDataModule.html":{},"injectables/ApplicationQuery.html":{},"injectables/ApplicationQuery-1.html":{},"injectables/ApplicationStore.html":{},"injectables/ApplicationStore-1.html":{},"interfaces/BasePlugin.html":{},"interfaces/BasePlugin-1.html":{},"classes/Changed.html":{},"interfaces/EditorJSInstanceConfig.html":{},"interfaces/EditorJSMaterialForm.html":{},"components/FormContainerComponent.html":{},"components/HomePageComponent.html":{},"interfaces/InjectorMethodOption.html":{},"modules/MaterialModule.html":{},"classes/MockEditorJS.html":{},"injectables/MockNgZone.html":{},"classes/MockPlugin.html":{},"components/NavBarComponent.html":{},"components/NgxEditorJSBaseComponent.html":{},"components/NgxEditorJSComponent.html":{},"components/NgxEditorJSDemoHomeComponent.html":{},"components/NgxEditorJSDemoInfoComponent.html":{},"directives/NgxEditorJSDirective.html":{},"injectables/NgxEditorJSEffects.html":{},"modules/NgxEditorJSModule.html":{},"injectables/NgxEditorJSPluginService.html":{},"injectables/NgxEditorJSService.html":{},"modules/NgxEditorjsDemoModule.html":{},"modules/NgxEditorjsNgrxModule.html":{},"modules/NgxEditorjsPluginsModule.html":{},"modules/NgxHideableHeaderDemoModule.html":{},"modules/NgxTinynodesCoreMaterialModule.html":{},"modules/NgxTinynodesCoreModule.html":{},"classes/NotReady.html":{},"components/PageContainerComponent.html":{},"modules/PageStoreModule.html":{},"injectables/PagesQuery.html":{},"injectables/PagesService.html":{},"interfaces/PagesState.html":{},"injectables/PagesStore.html":{},"injectables/PluginCode.html":{},"modules/PluginCodeModule.html":{},"interfaces/PluginConfig.html":{},"interfaces/PluginConfig-1.html":{},"injectables/PluginHeader.html":{},"modules/PluginHeaderModule.html":{},"injectables/PluginImage.html":{},"modules/PluginImageModule.html":{},"injectables/PluginLink.html":{},"modules/PluginLinkModule.html":{},"injectables/PluginList.html":{},"modules/PluginListModule.html":{},"injectables/PluginMarker.html":{},"modules/PluginMarkerModule.html":{},"injectables/PluginParagraph.html":{},"modules/PluginParagraphModule.html":{},"injectables/PluginSimpleImage.html":{},"modules/PluginSimpleImageModule.html":{},"classes/Ready.html":{},"classes/SaveEnd.html":{},"classes/SaveStart.html":{},"components/SidebarComponent.html":{},"classes/TestClass.html":{},"interfaces/ToolSettingsMap.html":{},"interfaces/ToolSettingsMap-1.html":{},"coverage.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-readme.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-readme/ngx-editorjs-changelog.html":{}}}],["classes",{"_index":546,"title":{},"body":{"classes/Changed.html":{},"classes/MockEditorJS.html":{},"classes/MockPlugin.html":{},"classes/NotReady.html":{},"classes/Ready.html":{},"classes/SaveEnd.html":{},"classes/SaveStart.html":{},"classes/TestClass.html":{},"overview.html":{}}}],["clear",{"_index":591,"title":{},"body":{"interfaces/CreateEditorJSOptions.html":{},"interfaces/EditorJSAction.html":{},"components/FormContainerComponent.html":{},"classes/MockEditorJS.html":{},"classes/MockPlugin.html":{},"injectables/NgxEditorJSService.html":{},"components/PageContainerComponent.html":{},"classes/TestClass.html":{}}}],["clear(undefined",{"_index":1398,"title":{},"body":{"injectables/NgxEditorJSService.html":{}}}],["cleareditor",{"_index":592,"title":{},"body":{"interfaces/CreateEditorJSOptions.html":{},"interfaces/EditorJSAction.html":{},"miscellaneous/enumerations.html":{}}}],["clears",{"_index":1400,"title":{},"body":{"injectables/NgxEditorJSService.html":{}}}],["click",{"_index":741,"title":{},"body":{"interfaces/EditorJSMaterialForm.html":{},"components/FormContainerComponent.html":{},"components/NgxEditorJSDemoInfoComponent.html":{},"directives/NgxEditorJSDirective.html":{},"components/PageContainerComponent.html":{}}}],["click)=\"disableautosave()\">disable",{"_index":891,"title":{},"body":{"components/FormContainerComponent.html":{}}}],["client",{"_index":340,"title":{},"body":{"injectables/AppService.html":{},"injectables/AppService-1.html":{}}}],["close",{"_index":1191,"title":{},"body":{"components/NgxEditorJSDemoInfoComponent.html":{}}}],["cluster_applicationdatamodule",{"_index":424,"title":{},"body":{"modules/ApplicationDataModule.html":{},"overview.html":{}}}],["cluster_applicationdatamodule_providers",{"_index":425,"title":{},"body":{"modules/ApplicationDataModule.html":{},"overview.html":{}}}],["cluster_appmodule",{"_index":241,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_appmodule_bootstrap",{"_index":244,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_appmodule_declarations",{"_index":242,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_appmodule_imports",{"_index":243,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_ngxeditorjsdemomodule",{"_index":1470,"title":{},"body":{"modules/NgxEditorjsDemoModule.html":{},"overview.html":{}}}],["cluster_ngxeditorjsdemomodule_declarations",{"_index":1471,"title":{},"body":{"modules/NgxEditorjsDemoModule.html":{},"overview.html":{}}}],["cluster_ngxeditorjsdemomodule_exports",{"_index":1473,"title":{},"body":{"modules/NgxEditorjsDemoModule.html":{},"overview.html":{}}}],["cluster_ngxeditorjsdemomodule_imports",{"_index":1472,"title":{},"body":{"modules/NgxEditorjsDemoModule.html":{},"overview.html":{}}}],["cluster_ngxeditorjsmodule",{"_index":1315,"title":{},"body":{"modules/NgxEditorJSModule.html":{},"overview.html":{}}}],["cluster_ngxeditorjsmodule_declarations",{"_index":1316,"title":{},"body":{"modules/NgxEditorJSModule.html":{},"overview.html":{}}}],["cluster_ngxeditorjsmodule_exports",{"_index":1317,"title":{},"body":{"modules/NgxEditorJSModule.html":{},"overview.html":{}}}],["cluster_ngxeditorjsmodule_providers",{"_index":1318,"title":{},"body":{"modules/NgxEditorJSModule.html":{},"overview.html":{}}}],["cluster_ngxeditorjsngrxmodule",{"_index":1505,"title":{},"body":{"modules/NgxEditorjsNgrxModule.html":{},"overview.html":{}}}],["cluster_ngxeditorjsngrxmodule_imports",{"_index":1506,"title":{},"body":{"modules/NgxEditorjsNgrxModule.html":{}}}],["cluster_ngxeditorjspluginsmodule",{"_index":1518,"title":{},"body":{"modules/NgxEditorjsPluginsModule.html":{},"overview.html":{}}}],["cluster_ngxeditorjspluginsmodule_exports",{"_index":1520,"title":{},"body":{"modules/NgxEditorjsPluginsModule.html":{},"overview.html":{}}}],["cluster_ngxeditorjspluginsmodule_imports",{"_index":1519,"title":{},"body":{"modules/NgxEditorjsPluginsModule.html":{},"overview.html":{}}}],["cluster_ngxtinynodescoremodule",{"_index":1546,"title":{},"body":{"modules/NgxTinynodesCoreModule.html":{},"overview.html":{}}}],["cluster_ngxtinynodescoremodule_declarations",{"_index":1547,"title":{},"body":{"modules/NgxTinynodesCoreModule.html":{},"overview.html":{}}}],["cluster_ngxtinynodescoremodule_exports",{"_index":1549,"title":{},"body":{"modules/NgxTinynodesCoreModule.html":{},"overview.html":{}}}],["cluster_ngxtinynodescoremodule_imports",{"_index":1548,"title":{},"body":{"modules/NgxTinynodesCoreModule.html":{},"overview.html":{}}}],["cluster_pagestoremodule",{"_index":1578,"title":{},"body":{"modules/PageStoreModule.html":{},"overview.html":{}}}],["cluster_pagestoremodule_providers",{"_index":1579,"title":{},"body":{"modules/PageStoreModule.html":{},"overview.html":{}}}],["cluster_plugincodemodule",{"_index":1639,"title":{},"body":{"modules/PluginCodeModule.html":{},"overview.html":{}}}],["cluster_plugincodemodule_providers",{"_index":1640,"title":{},"body":{"modules/PluginCodeModule.html":{},"overview.html":{}}}],["cluster_pluginheadermodule",{"_index":1653,"title":{},"body":{"modules/PluginHeaderModule.html":{},"overview.html":{}}}],["cluster_pluginheadermodule_providers",{"_index":1654,"title":{},"body":{"modules/PluginHeaderModule.html":{},"overview.html":{}}}],["cluster_pluginimagemodule",{"_index":1662,"title":{},"body":{"modules/PluginImageModule.html":{},"overview.html":{}}}],["cluster_pluginimagemodule_providers",{"_index":1663,"title":{},"body":{"modules/PluginImageModule.html":{},"overview.html":{}}}],["cluster_pluginlinkmodule",{"_index":1671,"title":{},"body":{"modules/PluginLinkModule.html":{},"overview.html":{}}}],["cluster_pluginlinkmodule_providers",{"_index":1672,"title":{},"body":{"modules/PluginLinkModule.html":{},"overview.html":{}}}],["cluster_pluginlistmodule",{"_index":1680,"title":{},"body":{"modules/PluginListModule.html":{},"overview.html":{}}}],["cluster_pluginlistmodule_providers",{"_index":1681,"title":{},"body":{"modules/PluginListModule.html":{},"overview.html":{}}}],["cluster_pluginmarkermodule",{"_index":1692,"title":{},"body":{"modules/PluginMarkerModule.html":{},"overview.html":{}}}],["cluster_pluginmarkermodule_providers",{"_index":1693,"title":{},"body":{"modules/PluginMarkerModule.html":{},"overview.html":{}}}],["cluster_pluginparagraphmodule",{"_index":1701,"title":{},"body":{"modules/PluginParagraphModule.html":{},"overview.html":{}}}],["cluster_pluginparagraphmodule_providers",{"_index":1702,"title":{},"body":{"modules/PluginParagraphModule.html":{},"overview.html":{}}}],["cluster_pluginsimpleimagemodule",{"_index":1712,"title":{},"body":{"modules/PluginSimpleImageModule.html":{},"overview.html":{}}}],["cluster_pluginsimpleimagemodule_providers",{"_index":1713,"title":{},"body":{"modules/PluginSimpleImageModule.html":{},"overview.html":{}}}],["cmd+shift+m",{"_index":1691,"title":{},"body":{"injectables/PluginMarker.html":{}}}],["code",{"_index":885,"title":{},"body":{"components/FormContainerComponent.html":{},"components/HomePageComponent.html":{},"components/NgxEditorJSDemoHomeComponent.html":{},"injectables/PluginCode.html":{},"contributing.html":{}}}],["code.plugin",{"_index":1644,"title":{},"body":{"modules/PluginCodeModule.html":{}}}],["coercebooleanproperty",{"_index":659,"title":{},"body":{"interfaces/EditorJSMaterialForm.html":{}}}],["coercebooleanproperty(disabled",{"_index":720,"title":{},"body":{"interfaces/EditorJSMaterialForm.html":{}}}],["coercebooleanproperty(focused",{"_index":707,"title":{},"body":{"interfaces/EditorJSMaterialForm.html":{}}}],["coercebooleanproperty(required",{"_index":714,"title":{},"body":{"interfaces/EditorJSMaterialForm.html":{}}}],["collection",{"_index":944,"title":{},"body":{"components/HomePageComponent.html":{},"components/NgxEditorJSDemoHomeComponent.html":{},"modules/NgxEditorJSModule.html":{},"index.html":{}}}],["color",{"_index":163,"title":{},"body":{"components/AppContainerComponent.html":{},"components/NavBarComponent.html":{}}}],["column",{"_index":935,"title":{},"body":{"components/FormContainerComponent.html":{}}}],["comma",{"_index":901,"title":{},"body":{"components/FormContainerComponent.html":{}}}],["comments",{"_index":1883,"title":{},"body":{"contributing.html":{}}}],["commits",{"_index":1910,"title":{},"body":{"contributing.html":{}}}],["common",{"_index":1772,"title":{},"body":{"changelog.html":{}}}],["commonmodule",{"_index":1330,"title":{},"body":{"modules/NgxEditorJSModule.html":{},"modules/NgxEditorjsDemoModule.html":{},"modules/NgxEditorjsNgrxModule.html":{},"modules/NgxEditorjsPluginsModule.html":{},"modules/NgxHideableHeaderDemoModule.html":{},"modules/NgxTinynodesCoreMaterialModule.html":{}}}],["community",{"_index":1833,"title":{},"body":{"contributing.html":{}}}],["compatible",{"_index":2187,"title":{},"body":{"additional-documentation/tinynodes-library-docs/ngx-editorjs-readme.html":{}}}],["complaints",{"_index":1951,"title":{},"body":{"contributing.html":{}}}],["completes",{"_index":1408,"title":{},"body":{"injectables/NgxEditorJSService.html":{}}}],["completly",{"_index":1754,"title":{},"body":{"changelog.html":{}}}],["compodoc",{"_index":2184,"title":{},"body":{"additional-documentation/tinynodes-library-docs.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-readme/ngx-editorjs-changelog.html":{}}}],["component",{"_index":0,"title":{"components/AppContainerComponent.html":{},"components/FormContainerComponent.html":{},"components/HomePageComponent.html":{},"components/NavBarComponent.html":{},"components/NgxEditorJSBaseComponent.html":{},"components/NgxEditorJSComponent.html":{},"components/NgxEditorJSDemoHomeComponent.html":{},"components/NgxEditorJSDemoInfoComponent.html":{},"components/PageContainerComponent.html":{},"components/SidebarComponent.html":{}},"body":{"components/AppContainerComponent.html":{},"modules/AppRoutingModule.html":{},"interfaces/EditorJSMaterialForm.html":{},"components/FormContainerComponent.html":{},"components/HomePageComponent.html":{},"components/NavBarComponent.html":{},"components/NgxEditorJSBaseComponent.html":{},"components/NgxEditorJSComponent.html":{},"components/NgxEditorJSDemoHomeComponent.html":{},"components/NgxEditorJSDemoInfoComponent.html":{},"directives/NgxEditorJSDirective.html":{},"components/PageContainerComponent.html":{},"components/SidebarComponent.html":{},"changelog.html":{},"coverage.html":{},"index.html":{},"todo.html":{},"miscellaneous/variables.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-readme.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-readme/ngx-editorjs-changelog.html":{}}}],["component'},{'name",{"_index":221,"title":{},"body":{"components/AppContainerComponent.html":{},"components/FormContainerComponent.html":{},"components/HomePageComponent.html":{},"components/NavBarComponent.html":{},"components/NgxEditorJSBaseComponent.html":{},"components/NgxEditorJSComponent.html":{},"components/NgxEditorJSDemoHomeComponent.html":{},"components/NgxEditorJSDemoInfoComponent.html":{},"components/PageContainerComponent.html":{},"components/SidebarComponent.html":{}}}],["component/sidebar.component",{"_index":288,"title":{},"body":{"modules/AppModule.html":{}}}],["component/sidebar.component.ts",{"_index":1723,"title":{},"body":{"components/SidebarComponent.html":{},"coverage.html":{}}}],["component/sidebar.component.ts:11",{"_index":1727,"title":{},"body":{"components/SidebarComponent.html":{}}}],["component/sidebar.component.ts:14",{"_index":1726,"title":{},"body":{"components/SidebarComponent.html":{}}}],["component/tag.component",{"_index":1501,"title":{},"body":{"modules/NgxEditorjsDemoModule.html":{}}}],["component/tag.component.ts",{"_index":2003,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["component_template",{"_index":198,"title":{},"body":{"components/AppContainerComponent.html":{},"components/FormContainerComponent.html":{},"components/HomePageComponent.html":{},"components/NavBarComponent.html":{},"components/NgxEditorJSBaseComponent.html":{},"components/NgxEditorJSComponent.html":{},"components/NgxEditorJSDemoHomeComponent.html":{},"components/NgxEditorJSDemoInfoComponent.html":{},"components/PageContainerComponent.html":{},"components/SidebarComponent.html":{}}}],["components",{"_index":2,"title":{},"body":{"components/AppContainerComponent.html":{},"interfaces/EditorJSMaterialForm.html":{},"components/FormContainerComponent.html":{},"components/HomePageComponent.html":{},"components/NavBarComponent.html":{},"components/NgxEditorJSBaseComponent.html":{},"components/NgxEditorJSComponent.html":{},"components/NgxEditorJSDemoHomeComponent.html":{},"components/NgxEditorJSDemoInfoComponent.html":{},"directives/NgxEditorJSDirective.html":{},"components/PageContainerComponent.html":{},"components/SidebarComponent.html":{},"index.html":{},"overview.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-readme.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-readme/ngx-editorjs-changelog.html":{}}}],["components/demo",{"_index":1554,"title":{},"body":{"modules/NgxTinynodesCoreModule.html":{}}}],["components/nav",{"_index":284,"title":{},"body":{"modules/AppModule.html":{}}}],["components/sidebar",{"_index":287,"title":{},"body":{"modules/AppModule.html":{}}}],["components/tag",{"_index":1500,"title":{},"body":{"modules/NgxEditorjsDemoModule.html":{}}}],["conditions",{"_index":2122,"title":{},"body":{"license.html":{}}}],["conduct",{"_index":1798,"title":{},"body":{"contributing.html":{}}}],["confidentiality",{"_index":1959,"title":{},"body":{"contributing.html":{}}}],["config",{"_index":576,"title":{},"body":{"interfaces/CreateEditorJSOptions.html":{},"interfaces/EditorJSAction.html":{},"interfaces/EditorJSConfig.html":{},"classes/MockEditorJS.html":{},"classes/MockPlugin.html":{},"interfaces/NgxEditorJSConfig.html":{},"directives/NgxEditorJSDirective.html":{},"modules/NgxEditorJSModule.html":{},"injectables/NgxEditorJSPluginService.html":{},"injectables/NgxEditorJSService.html":{},"modules/NgxEditorjsDemoModule.html":{},"classes/TestClass.html":{},"miscellaneous/functions.html":{},"todo.html":{},"miscellaneous/variables.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-readme.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-readme/ngx-editorjs-changelog.html":{}}}],["config.data",{"_index":1288,"title":{},"body":{"directives/NgxEditorJSDirective.html":{}}}],["config.ts",{"_index":2017,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["config/editor",{"_index":1254,"title":{},"body":{"directives/NgxEditorJSDirective.html":{}}}],["config/module",{"_index":1337,"title":{},"body":{"modules/NgxEditorJSModule.html":{}}}],["configuration",{"_index":479,"title":{},"body":{"interfaces/BasePlugin.html":{},"interfaces/BasePlugin-1.html":{},"interfaces/CreateEditorJSOptions.html":{},"interfaces/EditorJSAction.html":{},"interfaces/EditorJSConfig.html":{},"interfaces/EditorJSInstanceConfig.html":{},"components/FormContainerComponent.html":{},"interfaces/InjectorMethodOption.html":{},"components/NgxEditorJSBaseComponent.html":{},"components/NgxEditorJSComponent.html":{},"interfaces/NgxEditorJSConfig.html":{},"directives/NgxEditorJSDirective.html":{},"modules/NgxEditorJSModule.html":{},"interfaces/PluginConfig.html":{},"interfaces/PluginConfig-1.html":{},"interfaces/ToolSettingsMap.html":{},"interfaces/ToolSettingsMap-1.html":{},"miscellaneous/functions.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-readme.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-readme/ngx-editorjs-changelog.html":{}}}],["configurations",{"_index":1373,"title":{},"body":{"injectables/NgxEditorJSPluginService.html":{},"miscellaneous/functions.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-readme.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-readme/ngx-editorjs-changelog.html":{}}}],["configured",{"_index":2254,"title":{},"body":{"additional-documentation/tinynodes-library-docs/ngx-editorjs-readme/ngx-editorjs-changelog.html":{}}}],["configuring",{"_index":2208,"title":{},"body":{"additional-documentation/tinynodes-library-docs/ngx-editorjs-readme.html":{}}}],["connection",{"_index":2149,"title":{},"body":{"license.html":{}}}],["considered",{"_index":1894,"title":{},"body":{"contributing.html":{}}}],["console.log",{"_index":2226,"title":{},"body":{"additional-documentation/tinynodes-library-docs/ngx-editorjs-readme/ngx-editorjs-changelog.html":{}}}],["const",{"_index":311,"title":{},"body":{"modules/AppRoutingModule.html":{},"interfaces/BasePlugin.html":{},"interfaces/BasePlugin-1.html":{},"interfaces/EditorJSConfig.html":{},"interfaces/EditorJSInstanceConfig.html":{},"interfaces/EditorJSMaterialForm.html":{},"components/FormContainerComponent.html":{},"interfaces/InjectorMethodOption.html":{},"components/NgxEditorJSBaseComponent.html":{},"interfaces/NgxEditorJSConfig.html":{},"directives/NgxEditorJSDirective.html":{},"injectables/NgxEditorJSService.html":{},"modules/NgxHideableHeaderDemoModule.html":{},"injectables/PagesService.html":{},"interfaces/PluginConfig.html":{},"interfaces/PluginConfig-1.html":{},"interfaces/ToolSettingsMap.html":{},"interfaces/ToolSettingsMap-1.html":{}}}],["constructive",{"_index":1866,"title":{},"body":{"contributing.html":{}}}],["constructor",{"_index":47,"title":{},"body":{"components/AppContainerComponent.html":{},"injectables/AppService.html":{},"injectables/AppService-1.html":{},"injectables/ApplicationQuery.html":{},"injectables/ApplicationQuery-1.html":{},"injectables/ApplicationStore.html":{},"injectables/ApplicationStore-1.html":{},"classes/Changed.html":{},"interfaces/EditorJSMaterialForm.html":{},"components/FormContainerComponent.html":{},"components/HomePageComponent.html":{},"classes/MockEditorJS.html":{},"injectables/MockNgZone.html":{},"classes/MockPlugin.html":{},"components/NgxEditorJSBaseComponent.html":{},"components/NgxEditorJSComponent.html":{},"directives/NgxEditorJSDirective.html":{},"injectables/NgxEditorJSEffects.html":{},"modules/NgxEditorJSModule.html":{},"injectables/NgxEditorJSPluginService.html":{},"injectables/NgxEditorJSService.html":{},"classes/NotReady.html":{},"components/PageContainerComponent.html":{},"injectables/PagesQuery.html":{},"injectables/PagesService.html":{},"interfaces/PagesState.html":{},"injectables/PagesStore.html":{},"classes/Ready.html":{},"classes/SaveEnd.html":{},"classes/SaveStart.html":{},"classes/TestClass.html":{}}}],["constructor(@inject(userplugins",{"_index":1381,"title":{},"body":{"injectables/NgxEditorJSPluginService.html":{}}}],["constructor(actions",{"_index":1295,"title":{},"body":{"injectables/NgxEditorJSEffects.html":{}}}],["constructor(app",{"_index":48,"title":{},"body":{"components/AppContainerComponent.html":{},"components/HomePageComponent.html":{}}}],["constructor(config",{"_index":969,"title":{},"body":{"classes/MockEditorJS.html":{},"injectables/NgxEditorJSService.html":{}}}],["constructor(el",{"_index":1207,"title":{},"body":{"directives/NgxEditorJSDirective.html":{}}}],["constructor(pagesservice",{"_index":797,"title":{},"body":{"components/FormContainerComponent.html":{},"components/PageContainerComponent.html":{}}}],["constructor(payload",{"_index":550,"title":{},"body":{"classes/Changed.html":{},"classes/NotReady.html":{},"classes/Ready.html":{},"classes/SaveEnd.html":{},"classes/SaveStart.html":{}}}],["constructor(private",{"_index":942,"title":{},"body":{"components/HomePageComponent.html":{},"classes/MockEditorJS.html":{},"classes/MockPlugin.html":{},"directives/NgxEditorJSDirective.html":{},"injectables/NgxEditorJSEffects.html":{},"classes/TestClass.html":{}}}],["constructor(protected",{"_index":440,"title":{},"body":{"injectables/ApplicationQuery.html":{},"injectables/ApplicationQuery-1.html":{},"components/NgxEditorJSBaseComponent.html":{},"components/NgxEditorJSComponent.html":{},"injectables/PagesQuery.html":{}}}],["constructor(public",{"_index":565,"title":{},"body":{"classes/Changed.html":{},"classes/NotReady.html":{},"injectables/PagesService.html":{},"classes/Ready.html":{},"classes/SaveEnd.html":{},"classes/SaveStart.html":{}}}],["constructor(query",{"_index":331,"title":{},"body":{"injectables/AppService.html":{},"injectables/AppService-1.html":{},"injectables/PagesService.html":{}}}],["constructor(service",{"_index":1043,"title":{},"body":{"components/NgxEditorJSBaseComponent.html":{},"components/NgxEditorJSComponent.html":{}}}],["constructor(store",{"_index":435,"title":{},"body":{"injectables/ApplicationQuery.html":{},"injectables/ApplicationQuery-1.html":{},"injectables/PagesQuery.html":{}}}],["constructor(userplugins",{"_index":1359,"title":{},"body":{"injectables/NgxEditorJSPluginService.html":{}}}],["constructs",{"_index":1124,"title":{},"body":{"components/NgxEditorJSComponent.html":{}}}],["contacting",{"_index":1948,"title":{},"body":{"contributing.html":{}}}],["contain",{"_index":420,"title":{},"body":{"interfaces/ApplicationData.html":{},"interfaces/ApplicationData-1.html":{},"interfaces/MenuGroup.html":{},"interfaces/MenuGroup-1.html":{},"interfaces/MenuItem.html":{},"interfaces/MenuItem-1.html":{}}}],["container",{"_index":17,"title":{},"body":{"components/AppContainerComponent.html":{},"interfaces/EditorJSMaterialForm.html":{},"components/FormContainerComponent.html":{},"components/PageContainerComponent.html":{},"contributing.html":{}}}],["container'},{'name",{"_index":203,"title":{},"body":{"components/AppContainerComponent.html":{},"components/FormContainerComponent.html":{},"components/HomePageComponent.html":{},"components/NavBarComponent.html":{},"components/NgxEditorJSBaseComponent.html":{},"components/NgxEditorJSComponent.html":{},"components/NgxEditorJSDemoHomeComponent.html":{},"components/NgxEditorJSDemoInfoComponent.html":{},"components/PageContainerComponent.html":{},"components/SidebarComponent.html":{}}}],["container.component",{"_index":1493,"title":{},"body":{"modules/NgxEditorjsDemoModule.html":{}}}],["container.component.html",{"_index":788,"title":{},"body":{"components/FormContainerComponent.html":{},"components/NgxEditorJSDemoHomeComponent.html":{},"components/PageContainerComponent.html":{}}}],["container.component.scss",{"_index":787,"title":{},"body":{"components/FormContainerComponent.html":{},"components/NgxEditorJSDemoHomeComponent.html":{},"components/PageContainerComponent.html":{}}}],["container.component.ts",{"_index":782,"title":{},"body":{"components/FormContainerComponent.html":{},"components/NgxEditorJSDemoHomeComponent.html":{},"components/PageContainerComponent.html":{},"coverage.html":{}}}],["container.component.ts:102",{"_index":808,"title":{},"body":{"components/FormContainerComponent.html":{},"components/PageContainerComponent.html":{}}}],["container.component.ts:109",{"_index":848,"title":{},"body":{"components/FormContainerComponent.html":{}}}],["container.component.ts:111",{"_index":803,"title":{},"body":{"components/FormContainerComponent.html":{}}}],["container.component.ts:114",{"_index":1563,"title":{},"body":{"components/PageContainerComponent.html":{}}}],["container.component.ts:145",{"_index":834,"title":{},"body":{"components/FormContainerComponent.html":{}}}],["container.component.ts:154",{"_index":849,"title":{},"body":{"components/FormContainerComponent.html":{}}}],["container.component.ts:161",{"_index":851,"title":{},"body":{"components/FormContainerComponent.html":{}}}],["container.component.ts:168",{"_index":853,"title":{},"body":{"components/FormContainerComponent.html":{}}}],["container.component.ts:175",{"_index":819,"title":{},"body":{"components/FormContainerComponent.html":{}}}],["container.component.ts:184",{"_index":807,"title":{},"body":{"components/FormContainerComponent.html":{}}}],["container.component.ts:193",{"_index":818,"title":{},"body":{"components/FormContainerComponent.html":{}}}],["container.component.ts:247",{"_index":815,"title":{},"body":{"components/FormContainerComponent.html":{}}}],["container.component.ts:25",{"_index":1566,"title":{},"body":{"components/PageContainerComponent.html":{}}}],["container.component.ts:26",{"_index":842,"title":{},"body":{"components/FormContainerComponent.html":{}}}],["container.component.ts:30",{"_index":840,"title":{},"body":{"components/FormContainerComponent.html":{},"components/PageContainerComponent.html":{}}}],["container.component.ts:35",{"_index":835,"title":{},"body":{"components/FormContainerComponent.html":{},"components/PageContainerComponent.html":{}}}],["container.component.ts:40",{"_index":828,"title":{},"body":{"components/FormContainerComponent.html":{}}}],["container.component.ts:45",{"_index":841,"title":{},"body":{"components/FormContainerComponent.html":{}}}],["container.component.ts:50",{"_index":839,"title":{},"body":{"components/FormContainerComponent.html":{}}}],["container.component.ts:54",{"_index":1567,"title":{},"body":{"components/PageContainerComponent.html":{}}}],["container.component.ts:55",{"_index":844,"title":{},"body":{"components/FormContainerComponent.html":{}}}],["container.component.ts:61",{"_index":1568,"title":{},"body":{"components/PageContainerComponent.html":{}}}],["container.component.ts:62",{"_index":824,"title":{},"body":{"components/FormContainerComponent.html":{}}}],["container.component.ts:68",{"_index":1569,"title":{},"body":{"components/PageContainerComponent.html":{}}}],["container.component.ts:69",{"_index":827,"title":{},"body":{"components/FormContainerComponent.html":{}}}],["container.component.ts:74",{"_index":837,"title":{},"body":{"components/FormContainerComponent.html":{}}}],["container.component.ts:75",{"_index":1565,"title":{},"body":{"components/PageContainerComponent.html":{}}}],["container.component.ts:79",{"_index":846,"title":{},"body":{"components/FormContainerComponent.html":{}}}],["container.component.ts:82",{"_index":1562,"title":{},"body":{"components/PageContainerComponent.html":{}}}],["container.component.ts:87",{"_index":821,"title":{},"body":{"components/FormContainerComponent.html":{}}}],["container.component.ts:89",{"_index":1564,"title":{},"body":{"components/PageContainerComponent.html":{}}}],["container.component.ts:95",{"_index":811,"title":{},"body":{"components/FormContainerComponent.html":{}}}],["container/form",{"_index":781,"title":{},"body":{"components/FormContainerComponent.html":{},"modules/NgxEditorjsDemoModule.html":{},"coverage.html":{}}}],["container/home",{"_index":1163,"title":{},"body":{"components/NgxEditorJSDemoHomeComponent.html":{},"modules/NgxEditorjsDemoModule.html":{},"coverage.html":{}}}],["container/page",{"_index":1492,"title":{},"body":{"modules/NgxEditorjsDemoModule.html":{},"components/PageContainerComponent.html":{},"coverage.html":{}}}],["containers",{"_index":2192,"title":{},"body":{"additional-documentation/tinynodes-library-docs/ngx-editorjs-readme.html":{}}}],["containers/app/app.component",{"_index":283,"title":{},"body":{"modules/AppModule.html":{}}}],["containers/base/container.class",{"_index":1338,"title":{},"body":{"modules/NgxEditorJSModule.html":{}}}],["containers/editorjs",{"_index":1339,"title":{},"body":{"modules/NgxEditorJSModule.html":{}}}],["containers/editorjs/editorjs.component",{"_index":1341,"title":{},"body":{"modules/NgxEditorJSModule.html":{}}}],["containers/form",{"_index":1498,"title":{},"body":{"modules/NgxEditorjsDemoModule.html":{}}}],["containers/home",{"_index":1499,"title":{},"body":{"modules/NgxEditorjsDemoModule.html":{}}}],["containers/page",{"_index":1491,"title":{},"body":{"modules/NgxEditorjsDemoModule.html":{}}}],["containing",{"_index":528,"title":{},"body":{"interfaces/BlocksMap.html":{},"interfaces/ChangeMap.html":{},"interfaces/EditorMap.html":{},"interfaces/EventMap.html":{},"interfaces/EventType.html":{},"interfaces/ReadyMap.html":{}}}],["contains",{"_index":948,"title":{},"body":{"components/HomePageComponent.html":{}}}],["content",{"_index":156,"title":{},"body":{"components/AppContainerComponent.html":{},"components/FormContainerComponent.html":{},"directives/NgxEditorJSDirective.html":{},"components/PageContainerComponent.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-readme.html":{}}}],["continue",{"_index":1782,"title":{},"body":{"changelog.html":{}}}],["contract",{"_index":2146,"title":{},"body":{"license.html":{}}}],["contributes",{"_index":1855,"title":{},"body":{"contributing.html":{}}}],["contributing",{"_index":1788,"title":{"contributing.html":{}},"body":{"contributing.html":{}}}],["contributions",{"_index":1913,"title":{},"body":{"contributing.html":{}}}],["contributor",{"_index":1918,"title":{},"body":{"contributing.html":{}}}],["contributors",{"_index":1830,"title":{},"body":{"contributing.html":{}}}],["control",{"_index":690,"title":{},"body":{"interfaces/EditorJSMaterialForm.html":{},"components/NavBarComponent.html":{},"components/NgxEditorJSBaseComponent.html":{},"directives/NgxEditorJSDirective.html":{},"modules/NgxEditorJSModule.html":{},"injectables/NgxEditorJSService.html":{},"modules/NgxEditorjsNgrxModule.html":{},"todo.html":{},"miscellaneous/variables.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-readme/ngx-editorjs-changelog.html":{}}}],["controlling",{"_index":2232,"title":{},"body":{"additional-documentation/tinynodes-library-docs/ngx-editorjs-readme/ngx-editorjs-changelog.html":{}}}],["controls",{"_index":921,"title":{},"body":{"components/FormContainerComponent.html":{},"components/PageContainerComponent.html":{},"todo.html":{}}}],["controltype",{"_index":691,"title":{},"body":{"interfaces/EditorJSMaterialForm.html":{}}}],["controlvalueaccessor",{"_index":1030,"title":{},"body":{"components/NgxEditorJSBaseComponent.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-readme/ngx-editorjs-changelog.html":{}}}],["copies",{"_index":2117,"title":{},"body":{"license.html":{}}}],["copy",{"_index":2103,"title":{},"body":{"license.html":{}}}],["copyright",{"_index":2097,"title":{},"body":{"license.html":{}}}],["core",{"_index":120,"title":{},"body":{"components/AppContainerComponent.html":{},"modules/AppModule.html":{},"components/HomePageComponent.html":{},"components/NavBarComponent.html":{},"modules/NgxTinynodesCoreMaterialModule.html":{},"modules/NgxTinynodesCoreModule.html":{},"components/SidebarComponent.html":{},"changelog.html":{},"dependencies.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-readme/ngx-editorjs-changelog.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-plugins-readme/ngx-editorjs-plugins-changelog.html":{}}}],["core.module.ts",{"_index":1550,"title":{},"body":{"modules/NgxTinynodesCoreModule.html":{}}}],["core/src",{"_index":856,"title":{},"body":{"components/FormContainerComponent.html":{},"modules/NgxEditorjsDemoModule.html":{},"components/PageContainerComponent.html":{}}}],["core/src/lib/components/demo",{"_index":1170,"title":{},"body":{"components/NgxEditorJSDemoInfoComponent.html":{},"coverage.html":{}}}],["core/src/lib/ngx",{"_index":1544,"title":{},"body":{"modules/NgxTinynodesCoreMaterialModule.html":{},"modules/NgxTinynodesCoreModule.html":{}}}],["core/src/lib/stores/app/application.model",{"_index":857,"title":{},"body":{"components/FormContainerComponent.html":{},"components/PageContainerComponent.html":{}}}],["core/src/lib/stores/app/application.model.ts",{"_index":444,"title":{},"body":{"interfaces/ApplicationState.html":{},"interfaces/DemoData.html":{},"interfaces/NgxEditorJSDemo.html":{},"interfaces/NgxEditorJSDemoData.html":{},"interfaces/TinynodeDemos.html":{},"coverage.html":{},"miscellaneous/enumerations.html":{}}}],["core/src/lib/stores/app/application.module.ts",{"_index":426,"title":{},"body":{"modules/ApplicationDataModule.html":{}}}],["core/src/lib/stores/app/application.query.ts",{"_index":432,"title":{},"body":{"injectables/ApplicationQuery.html":{},"coverage.html":{}}}],["core/src/lib/stores/app/application.query.ts:10",{"_index":436,"title":{},"body":{"injectables/ApplicationQuery.html":{}}}],["core/src/lib/stores/app/application.service.ts",{"_index":321,"title":{},"body":{"injectables/AppService.html":{},"coverage.html":{}}}],["core/src/lib/stores/app/application.service.ts:15",{"_index":335,"title":{},"body":{"injectables/AppService.html":{}}}],["core/src/lib/stores/app/application.service.ts:34",{"_index":357,"title":{},"body":{"injectables/AppService.html":{}}}],["core/src/lib/stores/app/application.service.ts:41",{"_index":354,"title":{},"body":{"injectables/AppService.html":{}}}],["core/src/lib/stores/app/application.service.ts:52",{"_index":343,"title":{},"body":{"injectables/AppService.html":{}}}],["core/src/lib/stores/app/application.service.ts:65",{"_index":349,"title":{},"body":{"injectables/AppService.html":{}}}],["core/src/lib/stores/app/application.store.ts",{"_index":457,"title":{},"body":{"injectables/ApplicationStore.html":{},"coverage.html":{}}}],["core/src/lib/stores/app/application.store.ts:10",{"_index":458,"title":{},"body":{"injectables/ApplicationStore.html":{}}}],["core/src/lib/types/app.ts",{"_index":402,"title":{},"body":{"interfaces/ApplicationData.html":{},"interfaces/MenuGroup.html":{},"interfaces/MenuItem.html":{},"coverage.html":{}}}],["coreapi",{"_index":2164,"title":{},"body":{"todo.html":{}}}],["corrective",{"_index":1905,"title":{},"body":{"contributing.html":{}}}],["correctly",{"_index":2185,"title":{},"body":{"additional-documentation/tinynodes-library-docs.html":{}}}],["covenant",{"_index":1977,"title":{},"body":{"contributing.html":{}}}],["covenant.org/version/1/4",{"_index":1980,"title":{},"body":{"contributing.html":{}}}],["cover",{"_index":1774,"title":{},"body":{"changelog.html":{}}}],["coverage",{"_index":1981,"title":{"coverage.html":{}},"body":{"coverage.html":{}}}],["create",{"_index":586,"title":{},"body":{"interfaces/CreateEditorJSOptions.html":{},"interfaces/EditorJSAction.html":{},"components/NgxEditorJSBaseComponent.html":{},"directives/NgxEditorJSDirective.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-readme.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-readme/ngx-editorjs-changelog.html":{}}}],["createconfig",{"_index":1204,"title":{},"body":{"directives/NgxEditorJSDirective.html":{}}}],["created",{"_index":680,"title":{},"body":{"interfaces/EditorJSMaterialForm.html":{},"components/NgxEditorJSBaseComponent.html":{},"components/NgxEditorJSComponent.html":{},"directives/NgxEditorJSDirective.html":{},"injectables/PagesService.html":{},"changelog.html":{}}}],["createeditor",{"_index":588,"title":{},"body":{"interfaces/CreateEditorJSOptions.html":{},"interfaces/EditorJSAction.html":{},"directives/NgxEditorJSDirective.html":{},"injectables/NgxEditorJSService.html":{},"miscellaneous/enumerations.html":{}}}],["createeditor(config",{"_index":1226,"title":{},"body":{"directives/NgxEditorJSDirective.html":{}}}],["createeditor(options",{"_index":1401,"title":{},"body":{"injectables/NgxEditorJSService.html":{}}}],["createeditorjsconfig",{"_index":1253,"title":{},"body":{"directives/NgxEditorJSDirective.html":{},"coverage.html":{},"miscellaneous/functions.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-readme/ngx-editorjs-changelog.html":{}}}],["createeditorjsconfig(inputconfig",{"_index":2077,"title":{},"body":{"miscellaneous/functions.html":{}}}],["createeditorjsinstance",{"_index":1350,"title":{},"body":{"modules/NgxEditorJSModule.html":{},"coverage.html":{},"miscellaneous/functions.html":{}}}],["createeditorjsinstance(editorjs",{"_index":1346,"title":{},"body":{"modules/NgxEditorJSModule.html":{},"miscellaneous/functions.html":{}}}],["createeditorjsoptions",{"_index":571,"title":{"interfaces/CreateEditorJSOptions.html":{}},"body":{"interfaces/CreateEditorJSOptions.html":{},"interfaces/EditorJSAction.html":{},"injectables/NgxEditorJSService.html":{},"coverage.html":{}}}],["createmoduleconfig",{"_index":1336,"title":{},"body":{"modules/NgxEditorJSModule.html":{},"coverage.html":{},"miscellaneous/functions.html":{}}}],["createmoduleconfig(config",{"_index":2079,"title":{},"body":{"miscellaneous/functions.html":{}}}],["createngxeditorjsdemotools",{"_index":1490,"title":{},"body":{"modules/NgxEditorjsDemoModule.html":{},"coverage.html":{},"miscellaneous/functions.html":{}}}],["creates",{"_index":746,"title":{},"body":{"interfaces/EditorJSMaterialForm.html":{},"directives/NgxEditorJSDirective.html":{},"injectables/NgxEditorJSService.html":{},"injectables/PagesService.html":{},"miscellaneous/functions.html":{}}}],["createtools",{"_index":2203,"title":{},"body":{"additional-documentation/tinynodes-library-docs/ngx-editorjs-readme.html":{}}}],["creating",{"_index":639,"title":{},"body":{"interfaces/EditorJSInstanceConfig.html":{},"interfaces/InjectorMethodOption.html":{},"contributing.html":{}}}],["creation",{"_index":605,"title":{},"body":{"interfaces/EditorJSConfig.html":{},"interfaces/NgxEditorJSConfig.html":{},"modules/PageStoreModule.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-readme/ngx-editorjs-changelog.html":{}}}],["criticism",{"_index":1867,"title":{},"body":{"contributing.html":{}}}],["current",{"_index":96,"title":{},"body":{"components/AppContainerComponent.html":{},"components/FormContainerComponent.html":{},"components/NgxEditorJSBaseComponent.html":{},"components/NgxEditorJSComponent.html":{},"injectables/NgxEditorJSService.html":{},"modules/NgxEditorjsNgrxModule.html":{},"changelog.html":{}}}],["currently",{"_index":1583,"title":{},"body":{"modules/PageStoreModule.html":{},"changelog.html":{},"additional-documentation/tinynodes-library-docs.html":{}}}],["cursor",{"_index":175,"title":{},"body":{"components/AppContainerComponent.html":{},"components/NavBarComponent.html":{}}}],["custom",{"_index":503,"title":{},"body":{"interfaces/Block.html":{},"interfaces/Header.html":{},"interfaces/HeaderBlock.html":{},"interfaces/Image.html":{},"interfaces/ImageBlock.html":{},"interfaces/List.html":{},"interfaces/ListBlock.html":{},"interfaces/Paragraph.html":{},"interfaces/ParagraphBlock.html":{},"miscellaneous/typealiases.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-readme.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-readme/ngx-editorjs-changelog.html":{}}}],["cy.get('h1",{"_index":2182,"title":{},"body":{"miscellaneous/variables.html":{}}}],["cycle",{"_index":758,"title":{},"body":{"interfaces/EditorJSMaterialForm.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-readme.html":{}}}],["damages",{"_index":2143,"title":{},"body":{"license.html":{}}}],["darkgray",{"_index":1159,"title":{},"body":{"components/NgxEditorJSComponent.html":{}}}],["data",{"_index":325,"title":{},"body":{"injectables/AppService.html":{},"injectables/AppService-1.html":{},"injectables/ApplicationQuery.html":{},"injectables/ApplicationQuery-1.html":{},"interfaces/ApplicationState.html":{},"interfaces/ApplicationState-1.html":{},"injectables/ApplicationStore.html":{},"injectables/ApplicationStore-1.html":{},"interfaces/Block.html":{},"classes/Changed.html":{},"interfaces/DemoData.html":{},"interfaces/DemoData-1.html":{},"interfaces/EditorJSConfig.html":{},"components/FormContainerComponent.html":{},"interfaces/Header.html":{},"interfaces/HeaderBlock.html":{},"interfaces/Image.html":{},"interfaces/ImageBlock.html":{},"interfaces/List.html":{},"interfaces/ListBlock.html":{},"interfaces/NgxEditorJSConfig.html":{},"interfaces/NgxEditorJSDemo.html":{},"interfaces/NgxEditorJSDemo-1.html":{},"interfaces/NgxEditorJSDemoData.html":{},"interfaces/NgxEditorJSDemoData-1.html":{},"injectables/NgxEditorJSEffects.html":{},"modules/NgxTinynodesCoreModule.html":{},"classes/NotReady.html":{},"components/PageContainerComponent.html":{},"interfaces/Paragraph.html":{},"interfaces/ParagraphBlock.html":{},"classes/Ready.html":{},"classes/SaveEnd.html":{},"classes/SaveStart.html":{},"interfaces/TinynodeDemos.html":{},"interfaces/TinynodeDemos-1.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-readme.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-readme/ngx-editorjs-changelog.html":{}}}],["data.blocks",{"_index":884,"title":{},"body":{"components/FormContainerComponent.html":{},"components/PageContainerComponent.html":{}}}],["data.json').subscribe((appdata",{"_index":370,"title":{},"body":{"injectables/AppService.html":{},"injectables/AppService-1.html":{}}}],["data.length",{"_index":380,"title":{},"body":{"injectables/AppService.html":{}}}],["date.now",{"_index":987,"title":{},"body":{"classes/MockEditorJS.html":{},"classes/MockPlugin.html":{},"directives/NgxEditorJSDirective.html":{},"injectables/NgxEditorJSEffects.html":{},"classes/TestClass.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-readme.html":{}}}],["datorama/akita",{"_index":272,"title":{},"body":{"modules/AppModule.html":{},"injectables/ApplicationQuery.html":{},"injectables/ApplicationQuery-1.html":{},"injectables/ApplicationStore.html":{},"injectables/ApplicationStore-1.html":{},"interfaces/Page.html":{},"interfaces/PageBlock.html":{},"injectables/PagesQuery.html":{},"injectables/PagesService.html":{},"interfaces/PagesState.html":{},"injectables/PagesStore.html":{},"interfaces/Tag.html":{},"dependencies.html":{}}}],["deal",{"_index":2106,"title":{},"body":{"license.html":{}}}],["dealings",{"_index":2150,"title":{},"body":{"license.html":{}}}],["declarations",{"_index":237,"title":{},"body":{"modules/AppModule.html":{},"modules/ApplicationDataModule.html":{},"modules/NgxEditorJSModule.html":{},"modules/NgxEditorjsDemoModule.html":{},"modules/NgxEditorjsNgrxModule.html":{},"modules/NgxEditorjsPluginsModule.html":{},"modules/NgxTinynodesCoreModule.html":{},"modules/PageStoreModule.html":{},"modules/PluginCodeModule.html":{},"modules/PluginHeaderModule.html":{},"modules/PluginImageModule.html":{},"modules/PluginLinkModule.html":{},"modules/PluginListModule.html":{},"modules/PluginMarkerModule.html":{},"modules/PluginParagraphModule.html":{},"modules/PluginSimpleImageModule.html":{},"overview.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-readme.html":{}}}],["decoration",{"_index":161,"title":{},"body":{"components/AppContainerComponent.html":{},"components/NavBarComponent.html":{}}}],["decorators",{"_index":99,"title":{},"body":{"components/AppContainerComponent.html":{},"components/NgxEditorJSComponent.html":{},"injectables/NgxEditorJSEffects.html":{}}}],["deem",{"_index":1920,"title":{},"body":{"contributing.html":{}}}],["deemed",{"_index":1954,"title":{},"body":{"contributing.html":{}}}],["default",{"_index":62,"title":{},"body":{"components/AppContainerComponent.html":{},"interfaces/Block.html":{},"classes/Changed.html":{},"interfaces/EditorJSConfig.html":{},"interfaces/EditorJSInstanceConfig.html":{},"interfaces/EditorJSMaterialForm.html":{},"components/FormContainerComponent.html":{},"interfaces/Header.html":{},"interfaces/HeaderBlock.html":{},"interfaces/Image.html":{},"interfaces/ImageBlock.html":{},"interfaces/InjectorMethodOption.html":{},"interfaces/List.html":{},"interfaces/ListBlock.html":{},"injectables/MockNgZone.html":{},"components/NavBarComponent.html":{},"components/NgxEditorJSBaseComponent.html":{},"components/NgxEditorJSComponent.html":{},"interfaces/NgxEditorJSConfig.html":{},"components/NgxEditorJSDemoInfoComponent.html":{},"directives/NgxEditorJSDirective.html":{},"injectables/NgxEditorJSEffects.html":{},"modules/NgxEditorJSModule.html":{},"injectables/NgxEditorJSPluginService.html":{},"injectables/NgxEditorJSService.html":{},"classes/NotReady.html":{},"components/PageContainerComponent.html":{},"interfaces/Paragraph.html":{},"interfaces/ParagraphBlock.html":{},"modules/PluginCodeModule.html":{},"modules/PluginHeaderModule.html":{},"modules/PluginImageModule.html":{},"modules/PluginLinkModule.html":{},"modules/PluginListModule.html":{},"modules/PluginMarkerModule.html":{},"modules/PluginParagraphModule.html":{},"classes/Ready.html":{},"classes/SaveEnd.html":{},"classes/SaveStart.html":{},"changelog.html":{},"index.html":{},"miscellaneous/variables.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-readme.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-readme/ngx-editorjs-changelog.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-plugins-readme.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-plugins-readme/ngx-editorjs-plugins-changelog.html":{}}}],["default_holder_id",{"_index":2018,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["defaults",{"_index":1328,"title":{},"body":{"modules/NgxEditorJSModule.html":{},"injectables/NgxEditorJSService.html":{}}}],["define",{"_index":621,"title":{},"body":{"interfaces/EditorJSConfig.html":{},"components/NgxEditorJSBaseComponent.html":{},"components/NgxEditorJSComponent.html":{},"interfaces/NgxEditorJSConfig.html":{},"directives/NgxEditorJSDirective.html":{}}}],["defined",{"_index":54,"title":{},"body":{"components/AppContainerComponent.html":{},"injectables/AppService.html":{},"injectables/AppService-1.html":{},"injectables/ApplicationQuery.html":{},"injectables/ApplicationQuery-1.html":{},"injectables/ApplicationStore.html":{},"injectables/ApplicationStore-1.html":{},"interfaces/BasePlugin.html":{},"interfaces/BasePlugin-1.html":{},"interfaces/Block.html":{},"interfaces/BlocksMap.html":{},"interfaces/ChangeMap.html":{},"classes/Changed.html":{},"interfaces/EditorMap.html":{},"interfaces/EventMap.html":{},"components/FormContainerComponent.html":{},"components/HomePageComponent.html":{},"classes/MockEditorJS.html":{},"injectables/MockNgZone.html":{},"classes/MockPlugin.html":{},"components/NavBarComponent.html":{},"components/NgxEditorJSBaseComponent.html":{},"components/NgxEditorJSComponent.html":{},"components/NgxEditorJSDemoInfoComponent.html":{},"directives/NgxEditorJSDirective.html":{},"injectables/NgxEditorJSEffects.html":{},"modules/NgxEditorJSModule.html":{},"injectables/NgxEditorJSPluginService.html":{},"injectables/NgxEditorJSService.html":{},"classes/NotReady.html":{},"components/PageContainerComponent.html":{},"injectables/PagesQuery.html":{},"injectables/PagesService.html":{},"injectables/PagesStore.html":{},"injectables/PluginCode.html":{},"interfaces/PluginConfig.html":{},"interfaces/PluginConfig-1.html":{},"injectables/PluginHeader.html":{},"injectables/PluginImage.html":{},"injectables/PluginLink.html":{},"injectables/PluginList.html":{},"injectables/PluginMarker.html":{},"injectables/PluginParagraph.html":{},"injectables/PluginSimpleImage.html":{},"classes/Ready.html":{},"interfaces/ReadyMap.html":{},"classes/SaveEnd.html":{},"classes/SaveStart.html":{},"components/SidebarComponent.html":{},"classes/TestClass.html":{},"interfaces/ToolSettingsMap.html":{},"interfaces/ToolSettingsMap-1.html":{},"contributing.html":{},"miscellaneous/variables.html":{}}}],["defines",{"_index":467,"title":{},"body":{"interfaces/BasePlugin.html":{},"interfaces/BasePlugin-1.html":{},"interfaces/PluginConfig.html":{},"interfaces/PluginConfig-1.html":{},"interfaces/ToolSettingsMap.html":{},"interfaces/ToolSettingsMap-1.html":{}}}],["deigned",{"_index":2204,"title":{},"body":{"additional-documentation/tinynodes-library-docs/ngx-editorjs-readme.html":{}}}],["delayed",{"_index":1764,"title":{},"body":{"changelog.html":{}}}],["delete",{"_index":1386,"title":{},"body":{"injectables/NgxEditorJSPluginService.html":{},"injectables/PagesService.html":{}}}],["delete(pageid",{"_index":1604,"title":{},"body":{"injectables/PagesService.html":{}}}],["demo",{"_index":215,"title":{},"body":{"components/AppContainerComponent.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"injectables/AppService-1.html":{},"interfaces/ApplicationState.html":{},"interfaces/ApplicationState-1.html":{},"interfaces/DemoData.html":{},"interfaces/DemoData-1.html":{},"components/FormContainerComponent.html":{},"components/HomePageComponent.html":{},"components/NavBarComponent.html":{},"components/NgxEditorJSBaseComponent.html":{},"components/NgxEditorJSComponent.html":{},"interfaces/NgxEditorJSDemo.html":{},"interfaces/NgxEditorJSDemo-1.html":{},"interfaces/NgxEditorJSDemoData.html":{},"interfaces/NgxEditorJSDemoData-1.html":{},"components/NgxEditorJSDemoHomeComponent.html":{},"components/NgxEditorJSDemoInfoComponent.html":{},"components/PageContainerComponent.html":{},"modules/PageStoreModule.html":{},"components/SidebarComponent.html":{},"interfaces/TinynodeDemos.html":{},"interfaces/TinynodeDemos-1.html":{},"changelog.html":{},"miscellaneous/functions.html":{},"index.html":{},"todo.html":{},"miscellaneous/variables.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-readme.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-readme/ngx-editorjs-changelog.html":{}}}],["demo.module.ts",{"_index":1483,"title":{},"body":{"modules/NgxEditorjsDemoModule.html":{},"modules/NgxHideableHeaderDemoModule.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["demo.name",{"_index":383,"title":{},"body":{"injectables/AppService.html":{},"injectables/AppService-1.html":{}}}],["demo.routes",{"_index":1495,"title":{},"body":{"modules/NgxEditorjsDemoModule.html":{}}}],["demo.routes.ts",{"_index":2011,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["demo/angular",{"_index":2183,"title":{},"body":{"miscellaneous/variables.html":{}}}],["demo/src/lib/components/tag",{"_index":2002,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["demo/src/lib/config/index.ts",{"_index":2008,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["demo/src/lib/containers/form",{"_index":780,"title":{},"body":{"components/FormContainerComponent.html":{},"coverage.html":{}}}],["demo/src/lib/containers/home",{"_index":1162,"title":{},"body":{"components/NgxEditorJSDemoHomeComponent.html":{},"coverage.html":{}}}],["demo/src/lib/containers/page",{"_index":1560,"title":{},"body":{"components/PageContainerComponent.html":{},"coverage.html":{}}}],["demo/src/lib/ngx",{"_index":1482,"title":{},"body":{"modules/NgxEditorjsDemoModule.html":{},"modules/NgxHideableHeaderDemoModule.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["demo/src/lib/store/pages/pages.models.ts",{"_index":1558,"title":{},"body":{"interfaces/Page.html":{},"interfaces/PageBlock.html":{},"interfaces/Tag.html":{},"coverage.html":{}}}],["demo/src/lib/store/pages/pages.module.ts",{"_index":1582,"title":{},"body":{"modules/PageStoreModule.html":{}}}],["demo/src/lib/store/pages/pages.query.ts",{"_index":1588,"title":{},"body":{"injectables/PagesQuery.html":{},"coverage.html":{}}}],["demo/src/lib/store/pages/pages.query.ts:7",{"_index":1590,"title":{},"body":{"injectables/PagesQuery.html":{}}}],["demo/src/lib/store/pages/pages.service.ts",{"_index":1593,"title":{},"body":{"injectables/PagesService.html":{},"coverage.html":{}}}],["demo/src/lib/store/pages/pages.service.ts:15",{"_index":1598,"title":{},"body":{"injectables/PagesService.html":{}}}],["demo/src/lib/store/pages/pages.service.ts:17",{"_index":1614,"title":{},"body":{"injectables/PagesService.html":{}}}],["demo/src/lib/store/pages/pages.service.ts:24",{"_index":1615,"title":{},"body":{"injectables/PagesService.html":{}}}],["demo/src/lib/store/pages/pages.service.ts:32",{"_index":1600,"title":{},"body":{"injectables/PagesService.html":{}}}],["demo/src/lib/store/pages/pages.service.ts:47",{"_index":1613,"title":{},"body":{"injectables/PagesService.html":{}}}],["demo/src/lib/store/pages/pages.service.ts:56",{"_index":1605,"title":{},"body":{"injectables/PagesService.html":{}}}],["demo/src/lib/store/pages/pages.service.ts:60",{"_index":1611,"title":{},"body":{"injectables/PagesService.html":{}}}],["demo/src/lib/store/pages/pages.service.ts:64",{"_index":1602,"title":{},"body":{"injectables/PagesService.html":{}}}],["demo/src/lib/store/pages/pages.service.ts:70",{"_index":1609,"title":{},"body":{"injectables/PagesService.html":{}}}],["demo/src/lib/store/pages/pages.store.ts",{"_index":1631,"title":{},"body":{"interfaces/PagesState.html":{},"injectables/PagesStore.html":{},"coverage.html":{}}}],["demo/src/lib/store/pages/pages.store.ts:9",{"_index":1634,"title":{},"body":{"injectables/PagesStore.html":{}}}],["demo](https://tinynodes",{"_index":294,"title":{},"body":{"modules/AppModule.html":{}}}],["demodata",{"_index":365,"title":{"interfaces/DemoData.html":{},"interfaces/DemoData-1.html":{}},"body":{"injectables/AppService.html":{},"injectables/AppService-1.html":{},"interfaces/ApplicationState.html":{},"interfaces/ApplicationState-1.html":{},"injectables/ApplicationStore.html":{},"injectables/ApplicationStore-1.html":{},"interfaces/DemoData.html":{},"interfaces/DemoData-1.html":{},"interfaces/NgxEditorJSDemo.html":{},"interfaces/NgxEditorJSDemo-1.html":{},"interfaces/NgxEditorJSDemoData.html":{},"interfaces/NgxEditorJSDemoData-1.html":{},"interfaces/TinynodeDemos.html":{},"interfaces/TinynodeDemos-1.html":{},"coverage.html":{},"miscellaneous/enumerations.html":{}}}],["demodata.find(demo",{"_index":382,"title":{},"body":{"injectables/AppService.html":{},"injectables/AppService-1.html":{}}}],["demoname",{"_index":346,"title":{},"body":{"injectables/AppService.html":{},"injectables/AppService-1.html":{}}}],["demoname).data",{"_index":384,"title":{},"body":{"injectables/AppService.html":{},"injectables/AppService-1.html":{}}}],["demos",{"_index":65,"title":{},"body":{"components/AppContainerComponent.html":{},"interfaces/ApplicationState.html":{},"interfaces/ApplicationState-1.html":{},"interfaces/DemoData.html":{},"interfaces/DemoData-1.html":{},"components/HomePageComponent.html":{},"interfaces/NgxEditorJSDemo.html":{},"interfaces/NgxEditorJSDemo-1.html":{},"interfaces/NgxEditorJSDemoData.html":{},"interfaces/NgxEditorJSDemoData-1.html":{},"components/NgxEditorJSDemoHomeComponent.html":{},"interfaces/TinynodeDemos.html":{},"interfaces/TinynodeDemos-1.html":{},"index.html":{}}}],["dependencies",{"_index":236,"title":{"dependencies.html":{}},"body":{"modules/AppModule.html":{},"modules/ApplicationDataModule.html":{},"modules/NgxEditorJSModule.html":{},"modules/NgxEditorjsDemoModule.html":{},"modules/NgxEditorjsNgrxModule.html":{},"modules/NgxEditorjsPluginsModule.html":{},"modules/NgxTinynodesCoreModule.html":{},"modules/PageStoreModule.html":{},"modules/PluginCodeModule.html":{},"modules/PluginHeaderModule.html":{},"modules/PluginImageModule.html":{},"modules/PluginLinkModule.html":{},"modules/PluginListModule.html":{},"modules/PluginMarkerModule.html":{},"modules/PluginParagraphModule.html":{},"modules/PluginSimpleImageModule.html":{},"contributing.html":{},"dependencies.html":{},"index.html":{},"overview.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-plugins-readme.html":{}}}],["dependency",{"_index":2168,"title":{},"body":{"todo.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-readme.html":{}}}],["deps",{"_index":1351,"title":{},"body":{"modules/NgxEditorJSModule.html":{}}}],["describedby",{"_index":686,"title":{},"body":{"interfaces/EditorJSMaterialForm.html":{}}}],["describes",{"_index":417,"title":{},"body":{"interfaces/ApplicationData.html":{},"interfaces/ApplicationData-1.html":{},"interfaces/MenuGroup.html":{},"interfaces/MenuGroup-1.html":{},"interfaces/MenuItem.html":{},"interfaces/MenuItem-1.html":{}}}],["describing",{"_index":580,"title":{},"body":{"interfaces/CreateEditorJSOptions.html":{},"interfaces/EditorJSAction.html":{}}}],["description",{"_index":12,"title":{},"body":{"components/AppContainerComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"injectables/AppService.html":{},"injectables/AppService-1.html":{},"interfaces/ApplicationData.html":{},"interfaces/ApplicationData-1.html":{},"modules/ApplicationDataModule.html":{},"injectables/ApplicationQuery.html":{},"injectables/ApplicationQuery-1.html":{},"interfaces/ApplicationState.html":{},"interfaces/ApplicationState-1.html":{},"injectables/ApplicationStore.html":{},"injectables/ApplicationStore-1.html":{},"interfaces/BasePlugin.html":{},"interfaces/BasePlugin-1.html":{},"interfaces/Block.html":{},"interfaces/BlocksMap.html":{},"interfaces/ChangeMap.html":{},"interfaces/CreateEditorJSOptions.html":{},"interfaces/DemoData.html":{},"interfaces/DemoData-1.html":{},"interfaces/EditorJSAction.html":{},"interfaces/EditorJSConfig.html":{},"interfaces/EditorJSInstanceConfig.html":{},"interfaces/EditorJSMaterialForm.html":{},"interfaces/EditorMap.html":{},"interfaces/EventMap.html":{},"interfaces/EventType.html":{},"components/FormContainerComponent.html":{},"interfaces/Header.html":{},"interfaces/HeaderBlock.html":{},"interfaces/Image.html":{},"interfaces/ImageBlock.html":{},"interfaces/InjectorMethodOption.html":{},"interfaces/List.html":{},"interfaces/ListBlock.html":{},"modules/MaterialModule.html":{},"interfaces/MenuGroup.html":{},"interfaces/MenuGroup-1.html":{},"interfaces/MenuItem.html":{},"interfaces/MenuItem-1.html":{},"injectables/MockNgZone.html":{},"components/NavBarComponent.html":{},"components/NgxEditorJSBaseComponent.html":{},"components/NgxEditorJSComponent.html":{},"interfaces/NgxEditorJSConfig.html":{},"interfaces/NgxEditorJSDemo.html":{},"interfaces/NgxEditorJSDemo-1.html":{},"interfaces/NgxEditorJSDemoData.html":{},"interfaces/NgxEditorJSDemoData-1.html":{},"directives/NgxEditorJSDirective.html":{},"modules/NgxEditorJSModule.html":{},"injectables/NgxEditorJSPluginService.html":{},"injectables/NgxEditorJSService.html":{},"modules/NgxEditorjsNgrxModule.html":{},"modules/NgxEditorjsPluginsModule.html":{},"modules/NgxTinynodesCoreModule.html":{},"components/PageContainerComponent.html":{},"modules/PageStoreModule.html":{},"injectables/PagesService.html":{},"interfaces/Paragraph.html":{},"interfaces/ParagraphBlock.html":{},"injectables/PluginCode.html":{},"modules/PluginCodeModule.html":{},"interfaces/PluginConfig.html":{},"interfaces/PluginConfig-1.html":{},"injectables/PluginHeader.html":{},"modules/PluginHeaderModule.html":{},"injectables/PluginImage.html":{},"modules/PluginImageModule.html":{},"injectables/PluginLink.html":{},"modules/PluginLinkModule.html":{},"injectables/PluginList.html":{},"modules/PluginListModule.html":{},"injectables/PluginMarker.html":{},"modules/PluginMarkerModule.html":{},"injectables/PluginParagraph.html":{},"modules/PluginParagraphModule.html":{},"injectables/PluginSimpleImage.html":{},"modules/PluginSimpleImageModule.html":{},"interfaces/ReadyMap.html":{},"interfaces/TinynodeDemos.html":{},"interfaces/TinynodeDemos-1.html":{},"interfaces/ToolSettingsMap.html":{},"interfaces/ToolSettingsMap-1.html":{},"miscellaneous/functions.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-readme.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-plugins-readme.html":{}}}],["destroy",{"_index":593,"title":{},"body":{"interfaces/CreateEditorJSOptions.html":{},"interfaces/EditorJSAction.html":{},"interfaces/EditorJSMaterialForm.html":{},"classes/MockEditorJS.html":{},"classes/MockPlugin.html":{},"components/NgxEditorJSBaseComponent.html":{},"components/NgxEditorJSComponent.html":{},"directives/NgxEditorJSDirective.html":{},"injectables/NgxEditorJSService.html":{},"classes/TestClass.html":{}}}],["destroy(undefined",{"_index":1403,"title":{},"body":{"injectables/NgxEditorJSService.html":{}}}],["destroyed",{"_index":79,"title":{},"body":{"components/AppContainerComponent.html":{}}}],["destroyeditor",{"_index":594,"title":{},"body":{"interfaces/CreateEditorJSOptions.html":{},"interfaces/EditorJSAction.html":{},"miscellaneous/enumerations.html":{}}}],["destroys",{"_index":1409,"title":{},"body":{"injectables/NgxEditorJSService.html":{}}}],["destructive",{"_index":1235,"title":{},"body":{"directives/NgxEditorJSDirective.html":{}}}],["details",{"_index":1189,"title":{},"body":{"components/NgxEditorJSDemoInfoComponent.html":{},"injectables/NgxEditorJSService.html":{},"modules/PluginCodeModule.html":{},"modules/PluginHeaderModule.html":{},"modules/PluginImageModule.html":{},"modules/PluginLinkModule.html":{},"modules/PluginListModule.html":{},"modules/PluginMarkerModule.html":{},"modules/PluginParagraphModule.html":{},"modules/PluginSimpleImageModule.html":{},"contributing.html":{},"additional-documentation/tinynodes-library-docs.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-readme.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-plugins-readme/ngx-editorjs-plugins-changelog.html":{}}}],["detection",{"_index":804,"title":{},"body":{"components/FormContainerComponent.html":{},"components/PageContainerComponent.html":{}}}],["determined",{"_index":1972,"title":{},"body":{"contributing.html":{}}}],["developers",{"_index":1822,"title":{},"body":{"contributing.html":{}}}],["development",{"_index":1510,"title":{},"body":{"modules/NgxEditorjsNgrxModule.html":{},"modules/PageStoreModule.html":{},"index.html":{}}}],["devlog",{"_index":1761,"title":{},"body":{"changelog.html":{}}}],["diary",{"_index":2080,"title":{},"body":{"index.html":{}}}],["differing",{"_index":1861,"title":{},"body":{"contributing.html":{}}}],["direction",{"_index":934,"title":{},"body":{"components/FormContainerComponent.html":{},"components/NgxEditorJSComponent.html":{}}}],["directive",{"_index":196,"title":{"directives/NgxEditorJSDirective.html":{}},"body":{"components/AppContainerComponent.html":{},"components/FormContainerComponent.html":{},"components/HomePageComponent.html":{},"components/NavBarComponent.html":{},"components/NgxEditorJSBaseComponent.html":{},"components/NgxEditorJSComponent.html":{},"components/NgxEditorJSDemoHomeComponent.html":{},"components/NgxEditorJSDemoInfoComponent.html":{},"directives/NgxEditorJSDirective.html":{},"components/PageContainerComponent.html":{},"components/SidebarComponent.html":{},"coverage.html":{},"index.html":{},"overview.html":{},"todo.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-readme.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-readme/ngx-editorjs-changelog.html":{}}}],["directives",{"_index":226,"title":{},"body":{"components/AppContainerComponent.html":{},"components/FormContainerComponent.html":{},"components/HomePageComponent.html":{},"components/NavBarComponent.html":{},"components/NgxEditorJSBaseComponent.html":{},"components/NgxEditorJSComponent.html":{},"components/NgxEditorJSDemoHomeComponent.html":{},"components/NgxEditorJSDemoInfoComponent.html":{},"directives/NgxEditorJSDirective.html":{},"components/PageContainerComponent.html":{},"components/SidebarComponent.html":{}}}],["directives/ngx",{"_index":668,"title":{},"body":{"interfaces/EditorJSMaterialForm.html":{},"components/NgxEditorJSComponent.html":{},"modules/NgxEditorJSModule.html":{}}}],["disability",{"_index":1841,"title":{},"body":{"contributing.html":{}}}],["disable",{"_index":809,"title":{},"body":{"components/FormContainerComponent.html":{},"injectables/NgxEditorJSService.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-readme.html":{}}}],["disableautosave",{"_index":792,"title":{},"body":{"components/FormContainerComponent.html":{}}}],["disabled",{"_index":715,"title":{},"body":{"interfaces/EditorJSMaterialForm.html":{}}}],["disabled(disabled",{"_index":719,"title":{},"body":{"interfaces/EditorJSMaterialForm.html":{}}}],["discuss",{"_index":1791,"title":{},"body":{"contributing.html":{}}}],["dispatch",{"_index":1314,"title":{},"body":{"injectables/NgxEditorJSEffects.html":{}}}],["display",{"_index":178,"title":{},"body":{"components/AppContainerComponent.html":{},"interfaces/ApplicationData.html":{},"interfaces/ApplicationData-1.html":{},"components/FormContainerComponent.html":{},"interfaces/MenuGroup.html":{},"interfaces/MenuGroup-1.html":{},"interfaces/MenuItem.html":{},"interfaces/MenuItem-1.html":{},"components/NavBarComponent.html":{},"components/NgxEditorJSComponent.html":{}}}],["displays",{"_index":1017,"title":{},"body":{"components/NavBarComponent.html":{}}}],["distinctuntilchanged",{"_index":123,"title":{},"body":{"components/AppContainerComponent.html":{},"injectables/AppService.html":{},"injectables/AppService-1.html":{},"components/FormContainerComponent.html":{},"components/PageContainerComponent.html":{}}}],["distribute",{"_index":2113,"title":{},"body":{"license.html":{}}}],["doc",{"_index":2162,"title":{},"body":{"todo.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-readme/ngx-editorjs-changelog.html":{}}}],["docheck",{"_index":661,"title":{},"body":{"interfaces/EditorJSMaterialForm.html":{}}}],["docs",{"_index":1164,"title":{"additional-documentation/tinynodes-library-docs.html":{}},"body":{"components/NgxEditorJSDemoHomeComponent.html":{},"injectables/NgxEditorJSService.html":{},"changelog.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-readme.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-readme/ngx-editorjs-changelog.html":{}}}],["document.createelement('div",{"_index":979,"title":{},"body":{"classes/MockEditorJS.html":{},"classes/MockPlugin.html":{},"classes/TestClass.html":{}}}],["documentation",{"_index":955,"title":{},"body":{"components/HomePageComponent.html":{},"changelog.html":{},"coverage.html":{},"index.html":{},"license.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-readme.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-readme/ngx-editorjs-changelog.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-plugins-readme/ngx-editorjs-plugins-changelog.html":{}}}],["documented",{"_index":2211,"title":{},"body":{"additional-documentation/tinynodes-library-docs/ngx-editorjs-readme/ngx-editorjs-changelog.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-plugins-readme/ngx-editorjs-plugins-changelog.html":{}}}],["doing",{"_index":1805,"title":{},"body":{"contributing.html":{}}}],["dom",{"_index":7,"title":{},"body":{"components/AppContainerComponent.html":{},"components/FormContainerComponent.html":{},"components/HomePageComponent.html":{},"components/NavBarComponent.html":{},"components/NgxEditorJSBaseComponent.html":{},"components/NgxEditorJSComponent.html":{},"components/NgxEditorJSDemoHomeComponent.html":{},"components/NgxEditorJSDemoInfoComponent.html":{},"directives/NgxEditorJSDirective.html":{},"components/PageContainerComponent.html":{},"components/SidebarComponent.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-readme.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-readme/ngx-editorjs-changelog.html":{}}}],["download",{"_index":2195,"title":{},"body":{"additional-documentation/tinynodes-library-docs/ngx-editorjs-readme.html":{}}}],["due",{"_index":1765,"title":{},"body":{"changelog.html":{},"additional-documentation/tinynodes-library-docs.html":{}}}],["dynamic",{"_index":2049,"title":{},"body":{"dependencies.html":{}}}],["e",{"_index":1930,"title":{},"body":{"contributing.html":{}}}],["e.g",{"_index":418,"title":{},"body":{"interfaces/ApplicationData.html":{},"interfaces/ApplicationData-1.html":{},"interfaces/ApplicationState.html":{},"interfaces/ApplicationState-1.html":{},"interfaces/DemoData.html":{},"interfaces/DemoData-1.html":{},"interfaces/MenuGroup.html":{},"interfaces/MenuGroup-1.html":{},"interfaces/MenuItem.html":{},"interfaces/MenuItem-1.html":{},"interfaces/NgxEditorJSDemo.html":{},"interfaces/NgxEditorJSDemo-1.html":{},"interfaces/NgxEditorJSDemoData.html":{},"interfaces/NgxEditorJSDemoData-1.html":{},"interfaces/TinynodeDemos.html":{},"interfaces/TinynodeDemos-1.html":{},"todo.html":{}}}],["e2e/src/support/app.po.ts",{"_index":1984,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["each",{"_index":644,"title":{},"body":{"interfaces/EditorJSInstanceConfig.html":{},"interfaces/EditorJSMaterialForm.html":{},"interfaces/InjectorMethodOption.html":{},"components/NgxEditorJSDemoHomeComponent.html":{},"modules/NgxEditorjsPluginsModule.html":{},"miscellaneous/variables.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-readme.html":{}}}],["easily",{"_index":1525,"title":{},"body":{"modules/NgxEditorjsPluginsModule.html":{}}}],["edit",{"_index":1908,"title":{},"body":{"contributing.html":{}}}],["editior_js_instance",{"_index":635,"title":{},"body":{"interfaces/EditorJSConfig.html":{},"interfaces/NgxEditorJSConfig.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["editor",{"_index":587,"title":{},"body":{"interfaces/CreateEditorJSOptions.html":{},"interfaces/EditorJSAction.html":{},"interfaces/EditorJSInstanceConfig.html":{},"interfaces/EditorJSMaterialForm.html":{},"components/FormContainerComponent.html":{},"interfaces/InjectorMethodOption.html":{},"components/NgxEditorJSBaseComponent.html":{},"components/NgxEditorJSComponent.html":{},"components/NgxEditorJSDemoHomeComponent.html":{},"directives/NgxEditorJSDirective.html":{},"injectables/NgxEditorJSPluginService.html":{},"injectables/NgxEditorJSService.html":{},"components/PageContainerComponent.html":{},"injectables/PluginSimpleImage.html":{},"todo.html":{},"miscellaneous/variables.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-readme.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-readme/ngx-editorjs-changelog.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-plugins-readme.html":{}}}],["editor's",{"_index":615,"title":{},"body":{"interfaces/EditorJSConfig.html":{},"components/NgxEditorJSBaseComponent.html":{},"components/NgxEditorJSComponent.html":{},"interfaces/NgxEditorJSConfig.html":{},"directives/NgxEditorJSDirective.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-readme.html":{}}}],["editoraction.action",{"_index":1440,"title":{},"body":{"injectables/NgxEditorJSService.html":{}}}],["editoractions",{"_index":1396,"title":{},"body":{"injectables/NgxEditorJSService.html":{}}}],["editorconfig",{"_index":578,"title":{},"body":{"interfaces/CreateEditorJSOptions.html":{},"interfaces/EditorJSAction.html":{},"interfaces/EditorJSConfig.html":{},"interfaces/EditorJSInstanceConfig.html":{},"interfaces/InjectorMethodOption.html":{},"interfaces/NgxEditorJSConfig.html":{},"directives/NgxEditorJSDirective.html":{},"injectables/NgxEditorJSService.html":{},"miscellaneous/functions.html":{}}}],["editorel",{"_index":727,"title":{},"body":{"interfaces/EditorJSMaterialForm.html":{},"components/NgxEditorJSComponent.html":{}}}],["editorform",{"_index":789,"title":{},"body":{"components/FormContainerComponent.html":{}}}],["editorform.value.pagename",{"_index":903,"title":{},"body":{"components/FormContainerComponent.html":{}}}],["editorform.valuechanges",{"_index":905,"title":{},"body":{"components/FormContainerComponent.html":{}}}],["editorjs",{"_index":214,"title":{"additional-documentation/tinynodes-library-docs/ngx-editorjs-readme.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-readme/ngx-editorjs-changelog.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-plugins-readme.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-plugins-readme/ngx-editorjs-plugins-changelog.html":{}},"body":{"components/AppContainerComponent.html":{},"modules/AppModule.html":{},"interfaces/ApplicationState.html":{},"interfaces/ApplicationState-1.html":{},"interfaces/BasePlugin.html":{},"interfaces/BasePlugin-1.html":{},"interfaces/Block.html":{},"interfaces/BlocksMap.html":{},"interfaces/ChangeMap.html":{},"classes/Changed.html":{},"interfaces/CreateEditorJSOptions.html":{},"interfaces/DemoData.html":{},"interfaces/DemoData-1.html":{},"interfaces/EditorJSAction.html":{},"interfaces/EditorJSConfig.html":{},"interfaces/EditorJSInstanceConfig.html":{},"interfaces/EditorJSMaterialForm.html":{},"interfaces/EditorMap.html":{},"interfaces/EventMap.html":{},"interfaces/EventType.html":{},"components/FormContainerComponent.html":{},"interfaces/Header.html":{},"interfaces/HeaderBlock.html":{},"components/HomePageComponent.html":{},"interfaces/Image.html":{},"interfaces/ImageBlock.html":{},"interfaces/InjectorMethodOption.html":{},"interfaces/List.html":{},"interfaces/ListBlock.html":{},"components/NavBarComponent.html":{},"components/NgxEditorJSBaseComponent.html":{},"components/NgxEditorJSComponent.html":{},"interfaces/NgxEditorJSConfig.html":{},"interfaces/NgxEditorJSDemo.html":{},"interfaces/NgxEditorJSDemo-1.html":{},"interfaces/NgxEditorJSDemoData.html":{},"interfaces/NgxEditorJSDemoData-1.html":{},"components/NgxEditorJSDemoHomeComponent.html":{},"components/NgxEditorJSDemoInfoComponent.html":{},"directives/NgxEditorJSDirective.html":{},"injectables/NgxEditorJSEffects.html":{},"modules/NgxEditorJSModule.html":{},"injectables/NgxEditorJSPluginService.html":{},"injectables/NgxEditorJSService.html":{},"modules/NgxEditorjsDemoModule.html":{},"modules/NgxEditorjsNgrxModule.html":{},"modules/NgxEditorjsPluginsModule.html":{},"classes/NotReady.html":{},"interfaces/Page.html":{},"interfaces/PageBlock.html":{},"components/PageContainerComponent.html":{},"modules/PageStoreModule.html":{},"injectables/PagesQuery.html":{},"injectables/PagesService.html":{},"interfaces/PagesState.html":{},"injectables/PagesStore.html":{},"interfaces/Paragraph.html":{},"interfaces/ParagraphBlock.html":{},"injectables/PluginCode.html":{},"modules/PluginCodeModule.html":{},"interfaces/PluginConfig.html":{},"interfaces/PluginConfig-1.html":{},"injectables/PluginHeader.html":{},"modules/PluginHeaderModule.html":{},"injectables/PluginImage.html":{},"modules/PluginImageModule.html":{},"injectables/PluginLink.html":{},"modules/PluginLinkModule.html":{},"injectables/PluginList.html":{},"modules/PluginListModule.html":{},"injectables/PluginMarker.html":{},"modules/PluginMarkerModule.html":{},"injectables/PluginParagraph.html":{},"modules/PluginParagraphModule.html":{},"injectables/PluginSimpleImage.html":{},"modules/PluginSimpleImageModule.html":{},"classes/Ready.html":{},"interfaces/ReadyMap.html":{},"classes/SaveEnd.html":{},"classes/SaveStart.html":{},"components/SidebarComponent.html":{},"interfaces/Tag.html":{},"interfaces/TinynodeDemos.html":{},"interfaces/TinynodeDemos-1.html":{},"interfaces/ToolSettingsMap.html":{},"interfaces/ToolSettingsMap-1.html":{},"changelog.html":{},"coverage.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"index.html":{},"todo.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-readme.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-readme/ngx-editorjs-changelog.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-plugins-readme.html":{}}}],["editorjs'},{'name",{"_index":212,"title":{},"body":{"components/AppContainerComponent.html":{},"components/FormContainerComponent.html":{},"components/HomePageComponent.html":{},"components/NavBarComponent.html":{},"components/NgxEditorJSBaseComponent.html":{},"components/NgxEditorJSComponent.html":{},"components/NgxEditorJSDemoHomeComponent.html":{},"components/NgxEditorJSDemoInfoComponent.html":{},"components/PageContainerComponent.html":{},"components/SidebarComponent.html":{}}}],["editorjs.actions",{"_index":1311,"title":{},"body":{"injectables/NgxEditorJSEffects.html":{}}}],["editorjs.actions.ts",{"_index":548,"title":{},"body":{"classes/Changed.html":{},"classes/NotReady.html":{},"classes/Ready.html":{},"classes/SaveEnd.html":{},"classes/SaveStart.html":{},"coverage.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/typealiases.html":{}}}],["editorjs.actions.ts:13",{"_index":1720,"title":{},"body":{"classes/SaveStart.html":{}}}],["editorjs.actions.ts:14",{"_index":1721,"title":{},"body":{"classes/SaveStart.html":{}}}],["editorjs.actions.ts:18",{"_index":1718,"title":{},"body":{"classes/SaveEnd.html":{}}}],["editorjs.actions.ts:19",{"_index":1719,"title":{},"body":{"classes/SaveEnd.html":{}}}],["editorjs.actions.ts:23",{"_index":1556,"title":{},"body":{"classes/NotReady.html":{}}}],["editorjs.actions.ts:24",{"_index":1557,"title":{},"body":{"classes/NotReady.html":{}}}],["editorjs.actions.ts:28",{"_index":1715,"title":{},"body":{"classes/Ready.html":{}}}],["editorjs.actions.ts:29",{"_index":1716,"title":{},"body":{"classes/Ready.html":{}}}],["editorjs.actions.ts:33",{"_index":552,"title":{},"body":{"classes/Changed.html":{}}}],["editorjs.actions.ts:34",{"_index":553,"title":{},"body":{"classes/Changed.html":{}}}],["editorjs.component.html",{"_index":1122,"title":{},"body":{"components/NgxEditorJSComponent.html":{}}}],["editorjs.component.scss",{"_index":1121,"title":{},"body":{"components/NgxEditorJSComponent.html":{}}}],["editorjs.directive",{"_index":669,"title":{},"body":{"interfaces/EditorJSMaterialForm.html":{},"components/NgxEditorJSComponent.html":{},"modules/NgxEditorJSModule.html":{}}}],["editorjs.directive.ts",{"_index":1200,"title":{},"body":{"directives/NgxEditorJSDirective.html":{},"coverage.html":{}}}],["editorjs.directive.ts:103",{"_index":1216,"title":{},"body":{"directives/NgxEditorJSDirective.html":{}}}],["editorjs.directive.ts:109",{"_index":1224,"title":{},"body":{"directives/NgxEditorJSDirective.html":{}}}],["editorjs.directive.ts:118",{"_index":1223,"title":{},"body":{"directives/NgxEditorJSDirective.html":{}}}],["editorjs.directive.ts:124",{"_index":1210,"title":{},"body":{"directives/NgxEditorJSDirective.html":{}}}],["editorjs.directive.ts:136",{"_index":1245,"title":{},"body":{"directives/NgxEditorJSDirective.html":{}}}],["editorjs.directive.ts:143",{"_index":1247,"title":{},"body":{"directives/NgxEditorJSDirective.html":{}}}],["editorjs.directive.ts:150",{"_index":1249,"title":{},"body":{"directives/NgxEditorJSDirective.html":{}}}],["editorjs.directive.ts:157",{"_index":1251,"title":{},"body":{"directives/NgxEditorJSDirective.html":{}}}],["editorjs.directive.ts:165",{"_index":1227,"title":{},"body":{"directives/NgxEditorJSDirective.html":{}}}],["editorjs.directive.ts:181",{"_index":1231,"title":{},"body":{"directives/NgxEditorJSDirective.html":{}}}],["editorjs.directive.ts:201",{"_index":1228,"title":{},"body":{"directives/NgxEditorJSDirective.html":{}}}],["editorjs.directive.ts:213",{"_index":1240,"title":{},"body":{"directives/NgxEditorJSDirective.html":{}}}],["editorjs.directive.ts:220",{"_index":1225,"title":{},"body":{"directives/NgxEditorJSDirective.html":{}}}],["editorjs.directive.ts:36",{"_index":1243,"title":{},"body":{"directives/NgxEditorJSDirective.html":{}}}],["editorjs.directive.ts:41",{"_index":1242,"title":{},"body":{"directives/NgxEditorJSDirective.html":{}}}],["editorjs.directive.ts:47",{"_index":1218,"title":{},"body":{"directives/NgxEditorJSDirective.html":{}}}],["editorjs.directive.ts:53",{"_index":1213,"title":{},"body":{"directives/NgxEditorJSDirective.html":{}}}],["editorjs.directive.ts:59",{"_index":1217,"title":{},"body":{"directives/NgxEditorJSDirective.html":{}}}],["editorjs.directive.ts:65",{"_index":1220,"title":{},"body":{"directives/NgxEditorJSDirective.html":{}}}],["editorjs.directive.ts:71",{"_index":1221,"title":{},"body":{"directives/NgxEditorJSDirective.html":{}}}],["editorjs.directive.ts:77",{"_index":1215,"title":{},"body":{"directives/NgxEditorJSDirective.html":{}}}],["editorjs.directive.ts:83",{"_index":1222,"title":{},"body":{"directives/NgxEditorJSDirective.html":{}}}],["editorjs.directive.ts:90",{"_index":1219,"title":{},"body":{"directives/NgxEditorJSDirective.html":{}}}],["editorjs.directive.ts:97",{"_index":1214,"title":{},"body":{"directives/NgxEditorJSDirective.html":{}}}],["editorjs.effects.ts",{"_index":1294,"title":{},"body":{"injectables/NgxEditorJSEffects.html":{},"coverage.html":{}}}],["editorjs.effects.ts:10",{"_index":1296,"title":{},"body":{"injectables/NgxEditorJSEffects.html":{}}}],["editorjs.effects.ts:14",{"_index":1307,"title":{},"body":{"injectables/NgxEditorJSEffects.html":{}}}],["editorjs.module.ts",{"_index":1322,"title":{},"body":{"modules/NgxEditorJSModule.html":{},"coverage.html":{},"miscellaneous/functions.html":{}}}],["editorjs.module.ts:63",{"_index":1326,"title":{},"body":{"modules/NgxEditorJSModule.html":{}}}],["editorjs.version",{"_index":1289,"title":{},"body":{"directives/NgxEditorJSDirective.html":{},"injectables/NgxEditorJSEffects.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-readme.html":{}}}],["editorjs/code",{"_index":1638,"title":{},"body":{"injectables/PluginCode.html":{}}}],["editorjs/editorjs",{"_index":478,"title":{},"body":{"interfaces/BasePlugin.html":{},"interfaces/BasePlugin-1.html":{},"interfaces/BlocksMap.html":{},"interfaces/ChangeMap.html":{},"classes/Changed.html":{},"interfaces/CreateEditorJSOptions.html":{},"interfaces/EditorJSAction.html":{},"interfaces/EditorJSConfig.html":{},"interfaces/EditorJSInstanceConfig.html":{},"interfaces/EditorMap.html":{},"interfaces/EventMap.html":{},"interfaces/EventType.html":{},"interfaces/InjectorMethodOption.html":{},"classes/MockEditorJS.html":{},"classes/MockPlugin.html":{},"components/NgxEditorJSBaseComponent.html":{},"interfaces/NgxEditorJSConfig.html":{},"directives/NgxEditorJSDirective.html":{},"injectables/NgxEditorJSEffects.html":{},"modules/NgxEditorJSModule.html":{},"injectables/NgxEditorJSService.html":{},"classes/NotReady.html":{},"injectables/PluginCode.html":{},"interfaces/PluginConfig.html":{},"interfaces/PluginConfig-1.html":{},"injectables/PluginHeader.html":{},"injectables/PluginImage.html":{},"injectables/PluginLink.html":{},"injectables/PluginList.html":{},"injectables/PluginMarker.html":{},"injectables/PluginParagraph.html":{},"injectables/PluginSimpleImage.html":{},"classes/Ready.html":{},"interfaces/ReadyMap.html":{},"classes/SaveEnd.html":{},"classes/SaveStart.html":{},"classes/TestClass.html":{},"interfaces/ToolSettingsMap.html":{},"interfaces/ToolSettingsMap-1.html":{},"dependencies.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-readme.html":{}}}],["editorjs/header",{"_index":1652,"title":{},"body":{"injectables/PluginHeader.html":{},"dependencies.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-plugins-readme.html":{}}}],["editorjs/image",{"_index":1661,"title":{},"body":{"injectables/PluginImage.html":{}}}],["editorjs/link",{"_index":1670,"title":{},"body":{"injectables/PluginLink.html":{}}}],["editorjs/list",{"_index":1679,"title":{},"body":{"injectables/PluginList.html":{},"dependencies.html":{}}}],["editorjs/marker",{"_index":1690,"title":{},"body":{"injectables/PluginMarker.html":{}}}],["editorjs/paragraph",{"_index":1700,"title":{},"body":{"injectables/PluginParagraph.html":{},"dependencies.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-readme.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-plugins-readme.html":{}}}],["editorjs/simple",{"_index":1711,"title":{},"body":{"injectables/PluginSimpleImage.html":{}}}],["editorjs/src",{"_index":855,"title":{},"body":{"components/FormContainerComponent.html":{},"components/PageContainerComponent.html":{}}}],["editorjs/src/lib/config/editor",{"_index":2016,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["editorjs/src/lib/config/module",{"_index":2019,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["editorjs/src/lib/containers/base/container.class.ts",{"_index":1028,"title":{},"body":{"components/NgxEditorJSBaseComponent.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["editorjs/src/lib/containers/base/container.class.ts:104",{"_index":1091,"title":{},"body":{"components/NgxEditorJSBaseComponent.html":{}}}],["editorjs/src/lib/containers/base/container.class.ts:110",{"_index":1058,"title":{},"body":{"components/NgxEditorJSBaseComponent.html":{}}}],["editorjs/src/lib/containers/base/container.class.ts:117",{"_index":1072,"title":{},"body":{"components/NgxEditorJSBaseComponent.html":{}}}],["editorjs/src/lib/containers/base/container.class.ts:131",{"_index":1085,"title":{},"body":{"components/NgxEditorJSBaseComponent.html":{}}}],["editorjs/src/lib/containers/base/container.class.ts:137",{"_index":1059,"title":{},"body":{"components/NgxEditorJSBaseComponent.html":{}}}],["editorjs/src/lib/containers/base/container.class.ts:142",{"_index":1088,"title":{},"body":{"components/NgxEditorJSBaseComponent.html":{}}}],["editorjs/src/lib/containers/base/container.class.ts:150",{"_index":1057,"title":{},"body":{"components/NgxEditorJSBaseComponent.html":{}}}],["editorjs/src/lib/containers/base/container.class.ts:155",{"_index":1086,"title":{},"body":{"components/NgxEditorJSBaseComponent.html":{}}}],["editorjs/src/lib/containers/base/container.class.ts:163",{"_index":1083,"title":{},"body":{"components/NgxEditorJSBaseComponent.html":{}}}],["editorjs/src/lib/containers/base/container.class.ts:170",{"_index":1077,"title":{},"body":{"components/NgxEditorJSBaseComponent.html":{}}}],["editorjs/src/lib/containers/base/container.class.ts:177",{"_index":1081,"title":{},"body":{"components/NgxEditorJSBaseComponent.html":{}}}],["editorjs/src/lib/containers/base/container.class.ts:188",{"_index":1066,"title":{},"body":{"components/NgxEditorJSBaseComponent.html":{}}}],["editorjs/src/lib/containers/base/container.class.ts:210",{"_index":1074,"title":{},"body":{"components/NgxEditorJSBaseComponent.html":{}}}],["editorjs/src/lib/containers/base/container.class.ts:212",{"_index":1075,"title":{},"body":{"components/NgxEditorJSBaseComponent.html":{}}}],["editorjs/src/lib/containers/base/container.class.ts:222",{"_index":1093,"title":{},"body":{"components/NgxEditorJSBaseComponent.html":{}}}],["editorjs/src/lib/containers/base/container.class.ts:229",{"_index":1061,"title":{},"body":{"components/NgxEditorJSBaseComponent.html":{}}}],["editorjs/src/lib/containers/base/container.class.ts:31",{"_index":1087,"title":{},"body":{"components/NgxEditorJSBaseComponent.html":{}}}],["editorjs/src/lib/containers/base/container.class.ts:36",{"_index":1045,"title":{},"body":{"components/NgxEditorJSBaseComponent.html":{}}}],["editorjs/src/lib/containers/base/container.class.ts:42",{"_index":1049,"title":{},"body":{"components/NgxEditorJSBaseComponent.html":{}}}],["editorjs/src/lib/containers/base/container.class.ts:48",{"_index":1050,"title":{},"body":{"components/NgxEditorJSBaseComponent.html":{}}}],["editorjs/src/lib/containers/base/container.class.ts:54",{"_index":1054,"title":{},"body":{"components/NgxEditorJSBaseComponent.html":{}}}],["editorjs/src/lib/containers/base/container.class.ts:60",{"_index":1055,"title":{},"body":{"components/NgxEditorJSBaseComponent.html":{}}}],["editorjs/src/lib/containers/base/container.class.ts:66",{"_index":1048,"title":{},"body":{"components/NgxEditorJSBaseComponent.html":{}}}],["editorjs/src/lib/containers/base/container.class.ts:72",{"_index":1056,"title":{},"body":{"components/NgxEditorJSBaseComponent.html":{}}}],["editorjs/src/lib/containers/base/container.class.ts:79",{"_index":1051,"title":{},"body":{"components/NgxEditorJSBaseComponent.html":{}}}],["editorjs/src/lib/containers/base/container.class.ts:86",{"_index":1047,"title":{},"body":{"components/NgxEditorJSBaseComponent.html":{}}}],["editorjs/src/lib/containers/base/container.class.ts:92",{"_index":1044,"title":{},"body":{"components/NgxEditorJSBaseComponent.html":{}}}],["editorjs/src/lib/containers/editorjs",{"_index":653,"title":{},"body":{"interfaces/EditorJSMaterialForm.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["editorjs/src/lib/containers/editorjs/editorjs.component.ts",{"_index":1120,"title":{},"body":{"components/NgxEditorJSComponent.html":{},"coverage.html":{}}}],["editorjs/src/lib/containers/editorjs/editorjs.component.ts:25",{"_index":1123,"title":{},"body":{"components/NgxEditorJSComponent.html":{}}}],["editorjs/src/lib/containers/editorjs/editorjs.component.ts:35",{"_index":1139,"title":{},"body":{"components/NgxEditorJSComponent.html":{}}}],["editorjs/src/lib/containers/editorjs/editorjs.component.ts:43",{"_index":1140,"title":{},"body":{"components/NgxEditorJSComponent.html":{}}}],["editorjs/src/lib/directives/ngx",{"_index":1199,"title":{},"body":{"directives/NgxEditorJSDirective.html":{},"coverage.html":{}}}],["editorjs/src/lib/ngx",{"_index":1321,"title":{},"body":{"modules/NgxEditorJSModule.html":{},"coverage.html":{},"miscellaneous/functions.html":{}}}],["editorjs/src/lib/services/editorjs",{"_index":2027,"title":{},"body":{"coverage.html":{}}}],["editorjs/src/lib/services/editorjs.service.ts",{"_index":1395,"title":{},"body":{"injectables/NgxEditorJSService.html":{},"coverage.html":{}}}],["editorjs/src/lib/services/editorjs.service.ts:102",{"_index":1421,"title":{},"body":{"injectables/NgxEditorJSService.html":{}}}],["editorjs/src/lib/services/editorjs.service.ts:111",{"_index":1413,"title":{},"body":{"injectables/NgxEditorJSService.html":{}}}],["editorjs/src/lib/services/editorjs.service.ts:119",{"_index":1419,"title":{},"body":{"injectables/NgxEditorJSService.html":{}}}],["editorjs/src/lib/services/editorjs.service.ts:129",{"_index":1426,"title":{},"body":{"injectables/NgxEditorJSService.html":{}}}],["editorjs/src/lib/services/editorjs.service.ts:139",{"_index":1423,"title":{},"body":{"injectables/NgxEditorJSService.html":{}}}],["editorjs/src/lib/services/editorjs.service.ts:147",{"_index":1399,"title":{},"body":{"injectables/NgxEditorJSService.html":{}}}],["editorjs/src/lib/services/editorjs.service.ts:157",{"_index":1404,"title":{},"body":{"injectables/NgxEditorJSService.html":{}}}],["editorjs/src/lib/services/editorjs.service.ts:19",{"_index":1429,"title":{},"body":{"injectables/NgxEditorJSService.html":{}}}],["editorjs/src/lib/services/editorjs.service.ts:23",{"_index":1428,"title":{},"body":{"injectables/NgxEditorJSService.html":{}}}],["editorjs/src/lib/services/editorjs.service.ts:30",{"_index":1431,"title":{},"body":{"injectables/NgxEditorJSService.html":{}}}],["editorjs/src/lib/services/editorjs.service.ts:32",{"_index":1397,"title":{},"body":{"injectables/NgxEditorJSService.html":{}}}],["editorjs/src/lib/services/editorjs.service.ts:70",{"_index":1402,"title":{},"body":{"injectables/NgxEditorJSService.html":{}}}],["editorjs/src/lib/services/editorjs.service.ts:85",{"_index":1417,"title":{},"body":{"injectables/NgxEditorJSService.html":{}}}],["editorjs/src/lib/services/editorjs.service.ts:93",{"_index":1411,"title":{},"body":{"injectables/NgxEditorJSService.html":{}}}],["editorjs/src/lib/services/plugins.service.ts",{"_index":1354,"title":{},"body":{"injectables/NgxEditorJSPluginService.html":{},"coverage.html":{}}}],["editorjs/src/lib/services/plugins.service.ts:15",{"_index":1360,"title":{},"body":{"injectables/NgxEditorJSPluginService.html":{}}}],["editorjs/src/lib/services/plugins.service.ts:32",{"_index":1365,"title":{},"body":{"injectables/NgxEditorJSPluginService.html":{}}}],["editorjs/src/lib/services/plugins.service.ts:40",{"_index":1372,"title":{},"body":{"injectables/NgxEditorJSPluginService.html":{}}}],["editorjs/src/lib/services/plugins.service.ts:49",{"_index":1367,"title":{},"body":{"injectables/NgxEditorJSPluginService.html":{}}}],["editorjs/src/lib/services/plugins.service.ts:56",{"_index":1375,"title":{},"body":{"injectables/NgxEditorJSPluginService.html":{}}}],["editorjs/src/lib/services/plugins.service.ts:64",{"_index":1369,"title":{},"body":{"injectables/NgxEditorJSPluginService.html":{}}}],["editorjs/src/lib/types/blocks.ts",{"_index":496,"title":{},"body":{"interfaces/Block.html":{},"interfaces/Header.html":{},"interfaces/HeaderBlock.html":{},"interfaces/Image.html":{},"interfaces/ImageBlock.html":{},"interfaces/List.html":{},"interfaces/ListBlock.html":{},"interfaces/Paragraph.html":{},"interfaces/ParagraphBlock.html":{},"coverage.html":{},"miscellaneous/typealiases.html":{}}}],["editorjs/src/lib/types/blocks.ts:13",{"_index":498,"title":{},"body":{"interfaces/Block.html":{}}}],["editorjs/src/lib/types/config.ts",{"_index":597,"title":{},"body":{"interfaces/EditorJSConfig.html":{},"interfaces/NgxEditorJSConfig.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["editorjs/src/lib/types/editorjs",{"_index":572,"title":{},"body":{"interfaces/CreateEditorJSOptions.html":{},"interfaces/EditorJSAction.html":{},"coverage.html":{},"miscellaneous/enumerations.html":{}}}],["editorjs/src/lib/types/injector.ts",{"_index":638,"title":{},"body":{"interfaces/EditorJSInstanceConfig.html":{},"interfaces/InjectorMethodOption.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["editorjs/src/lib/types/maps.ts",{"_index":527,"title":{},"body":{"interfaces/BlocksMap.html":{},"interfaces/ChangeMap.html":{},"interfaces/EditorMap.html":{},"interfaces/EventMap.html":{},"interfaces/EventType.html":{},"interfaces/ReadyMap.html":{},"coverage.html":{}}}],["editorjs/src/lib/types/maps.ts:16",{"_index":779,"title":{},"body":{"interfaces/EventMap.html":{}}}],["editorjs/src/lib/types/maps.ts:26",{"_index":778,"title":{},"body":{"interfaces/EditorMap.html":{}}}],["editorjs/src/lib/types/maps.ts:36",{"_index":530,"title":{},"body":{"interfaces/BlocksMap.html":{}}}],["editorjs/src/lib/types/maps.ts:46",{"_index":1717,"title":{},"body":{"interfaces/ReadyMap.html":{}}}],["editorjs/src/lib/types/maps.ts:56",{"_index":544,"title":{},"body":{"interfaces/ChangeMap.html":{}}}],["editorjs/src/lib/types/plugins.ts",{"_index":466,"title":{},"body":{"interfaces/BasePlugin.html":{},"interfaces/PluginConfig.html":{},"interfaces/ToolSettingsMap.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["editorjs/src/lib/types/plugins.ts:17",{"_index":1733,"title":{},"body":{"interfaces/ToolSettingsMap.html":{}}}],["editorjs/src/lib/types/plugins.ts:7",{"_index":1647,"title":{},"body":{"interfaces/PluginConfig.html":{}}}],["editorjs/src/testing/ng",{"_index":990,"title":{},"body":{"injectables/MockNgZone.html":{},"coverage.html":{}}}],["editorjs/src/testing/shared.ts",{"_index":965,"title":{},"body":{"classes/MockEditorJS.html":{},"classes/MockPlugin.html":{},"classes/TestClass.html":{},"coverage.html":{}}}],["editorjs/src/testing/shared.ts:13",{"_index":1011,"title":{},"body":{"classes/MockPlugin.html":{}}}],["editorjs/src/testing/shared.ts:16",{"_index":1012,"title":{},"body":{"classes/MockPlugin.html":{}}}],["editorjs/src/testing/shared.ts:22",{"_index":971,"title":{},"body":{"classes/MockEditorJS.html":{}}}],["editorjs/src/testing/shared.ts:23",{"_index":974,"title":{},"body":{"classes/MockEditorJS.html":{}}}],["editorjs/src/testing/shared.ts:24",{"_index":975,"title":{},"body":{"classes/MockEditorJS.html":{}}}],["editorjs/src/testing/shared.ts:25",{"_index":972,"title":{},"body":{"classes/MockEditorJS.html":{}}}],["editorjs/src/testing/shared.ts:27",{"_index":970,"title":{},"body":{"classes/MockEditorJS.html":{}}}],["editorjs/src/testing/shared.ts:5",{"_index":1731,"title":{},"body":{"classes/TestClass.html":{}}}],["editorjs/src/testing/shared.ts:7",{"_index":1732,"title":{},"body":{"classes/TestClass.html":{}}}],["editorjs@1.2.0",{"_index":1757,"title":{},"body":{"changelog.html":{}}}],["editorjs@1.3.2",{"_index":1745,"title":{},"body":{"changelog.html":{}}}],["editorjs](http://editorjs.io",{"_index":1347,"title":{},"body":{"modules/NgxEditorJSModule.html":{}}}],["editorjs_form_value_accessor",{"_index":1031,"title":{},"body":{"components/NgxEditorJSBaseComponent.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["editorjs_material_field_control",{"_index":674,"title":{},"body":{"interfaces/EditorJSMaterialForm.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["editorjs_module_import",{"_index":646,"title":{},"body":{"interfaces/EditorJSInstanceConfig.html":{},"interfaces/InjectorMethodOption.html":{},"modules/NgxEditorJSModule.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["editorjsaction",{"_index":582,"title":{"interfaces/EditorJSAction.html":{}},"body":{"interfaces/CreateEditorJSOptions.html":{},"interfaces/EditorJSAction.html":{},"injectables/NgxEditorJSService.html":{},"coverage.html":{}}}],["editorjsactiontypes",{"_index":557,"title":{},"body":{"classes/Changed.html":{},"interfaces/CreateEditorJSOptions.html":{},"interfaces/EditorJSAction.html":{},"injectables/NgxEditorJSEffects.html":{},"injectables/NgxEditorJSService.html":{},"classes/NotReady.html":{},"classes/Ready.html":{},"classes/SaveEnd.html":{},"classes/SaveStart.html":{},"miscellaneous/enumerations.html":{}}}],["editorjsactiontypes.changed",{"_index":554,"title":{},"body":{"classes/Changed.html":{},"classes/NotReady.html":{},"classes/Ready.html":{},"classes/SaveEnd.html":{},"classes/SaveStart.html":{}}}],["editorjsactiontypes.cleareditor",{"_index":1444,"title":{},"body":{"injectables/NgxEditorJSService.html":{}}}],["editorjsactiontypes.createeditor",{"_index":1442,"title":{},"body":{"injectables/NgxEditorJSService.html":{}}}],["editorjsactiontypes.destroyeditor",{"_index":1446,"title":{},"body":{"injectables/NgxEditorJSService.html":{}}}],["editorjsactiontypes.notready",{"_index":568,"title":{},"body":{"classes/Changed.html":{},"classes/NotReady.html":{},"classes/Ready.html":{},"classes/SaveEnd.html":{},"classes/SaveStart.html":{}}}],["editorjsactiontypes.ready",{"_index":569,"title":{},"body":{"classes/Changed.html":{},"classes/NotReady.html":{},"classes/Ready.html":{},"classes/SaveEnd.html":{},"classes/SaveStart.html":{}}}],["editorjsactiontypes.saveeditor",{"_index":1448,"title":{},"body":{"injectables/NgxEditorJSService.html":{}}}],["editorjsactiontypes.saveend",{"_index":567,"title":{},"body":{"classes/Changed.html":{},"classes/NotReady.html":{},"classes/Ready.html":{},"classes/SaveEnd.html":{},"classes/SaveStart.html":{}}}],["editorjsactiontypes.savestart",{"_index":564,"title":{},"body":{"classes/Changed.html":{},"classes/NotReady.html":{},"classes/Ready.html":{},"classes/SaveEnd.html":{},"classes/SaveStart.html":{}}}],["editorjsactiontypes.updateeditor",{"_index":1450,"title":{},"body":{"injectables/NgxEditorJSService.html":{}}}],["editorjsbasecomponent",{"_index":2218,"title":{},"body":{"additional-documentation/tinynodes-library-docs/ngx-editorjs-readme/ngx-editorjs-changelog.html":{}}}],["editorjsconfig",{"_index":596,"title":{"interfaces/EditorJSConfig.html":{}},"body":{"interfaces/EditorJSConfig.html":{},"classes/MockEditorJS.html":{},"classes/MockPlugin.html":{},"interfaces/NgxEditorJSConfig.html":{},"classes/TestClass.html":{},"coverage.html":{}}}],["editorjsinstance",{"_index":648,"title":{},"body":{"interfaces/EditorJSInstanceConfig.html":{},"interfaces/InjectorMethodOption.html":{},"modules/NgxEditorJSModule.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["editorjsinstanceconfig",{"_index":637,"title":{"interfaces/EditorJSInstanceConfig.html":{}},"body":{"interfaces/EditorJSInstanceConfig.html":{},"interfaces/InjectorMethodOption.html":{},"coverage.html":{}}}],["editorjsmaterialform",{"_index":652,"title":{"interfaces/EditorJSMaterialForm.html":{}},"body":{"interfaces/EditorJSMaterialForm.html":{},"coverage.html":{}}}],["editorjsplugin",{"_index":2250,"title":{},"body":{"additional-documentation/tinynodes-library-docs/ngx-editorjs-readme/ngx-editorjs-changelog.html":{}}}],["editormap",{"_index":536,"title":{"interfaces/EditorMap.html":{}},"body":{"interfaces/BlocksMap.html":{},"interfaces/ChangeMap.html":{},"interfaces/EditorMap.html":{},"interfaces/EventMap.html":{},"interfaces/EventType.html":{},"interfaces/ReadyMap.html":{},"coverage.html":{}}}],["editorservice",{"_index":1209,"title":{},"body":{"directives/NgxEditorJSDirective.html":{},"injectables/NgxEditorJSEffects.html":{},"injectables/NgxEditorJSService.html":{}}}],["edits",{"_index":1912,"title":{},"body":{"contributing.html":{}}}],["effect",{"_index":1067,"title":{},"body":{"components/NgxEditorJSBaseComponent.html":{},"components/NgxEditorJSComponent.html":{},"injectables/NgxEditorJSEffects.html":{}}}],["effect({dispatch",{"_index":1306,"title":{},"body":{"injectables/NgxEditorJSEffects.html":{}}}],["effects",{"_index":1513,"title":{},"body":{"modules/NgxEditorjsNgrxModule.html":{}}}],["effects](https://ngrx.io/guide/effects",{"_index":1515,"title":{},"body":{"modules/NgxEditorjsNgrxModule.html":{}}}],["effectsmodule",{"_index":1514,"title":{},"body":{"modules/NgxEditorjsNgrxModule.html":{}}}],["effectsmodule.forfeature",{"_index":1516,"title":{},"body":{"modules/NgxEditorjsNgrxModule.html":{}}}],["el",{"_index":1211,"title":{},"body":{"directives/NgxEditorJSDirective.html":{}}}],["electronic",{"_index":1890,"title":{},"body":{"contributing.html":{}}}],["element",{"_index":195,"title":{},"body":{"components/AppContainerComponent.html":{},"interfaces/EditorJSConfig.html":{},"interfaces/EditorJSMaterialForm.html":{},"components/FormContainerComponent.html":{},"components/HomePageComponent.html":{},"components/NavBarComponent.html":{},"components/NgxEditorJSBaseComponent.html":{},"components/NgxEditorJSComponent.html":{},"interfaces/NgxEditorJSConfig.html":{},"components/NgxEditorJSDemoHomeComponent.html":{},"components/NgxEditorJSDemoInfoComponent.html":{},"directives/NgxEditorJSDirective.html":{},"components/PageContainerComponent.html":{},"components/SidebarComponent.html":{},"index.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-readme.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-readme/ngx-editorjs-changelog.html":{}}}],["elementref",{"_index":1208,"title":{},"body":{"directives/NgxEditorJSDirective.html":{}}}],["elements",{"_index":529,"title":{},"body":{"interfaces/BlocksMap.html":{},"interfaces/ChangeMap.html":{},"interfaces/EditorMap.html":{},"interfaces/EventMap.html":{},"interfaces/EventType.html":{},"injectables/NgxEditorJSService.html":{},"interfaces/ReadyMap.html":{}}}],["email",{"_index":1795,"title":{},"body":{"contributing.html":{}}}],["empathy",{"_index":1871,"title":{},"body":{"contributing.html":{}}}],["empty",{"_index":459,"title":{},"body":{"injectables/ApplicationStore.html":{},"injectables/ApplicationStore-1.html":{},"interfaces/EditorJSMaterialForm.html":{},"components/NgxEditorJSBaseComponent.html":{},"components/NgxEditorJSComponent.html":{},"directives/NgxEditorJSDirective.html":{}}}],["empty(empty",{"_index":723,"title":{},"body":{"interfaces/EditorJSMaterialForm.html":{}}}],["enable",{"_index":812,"title":{},"body":{"components/FormContainerComponent.html":{}}}],["enableautosave",{"_index":793,"title":{},"body":{"components/FormContainerComponent.html":{}}}],["enableautosave(autosavetime",{"_index":810,"title":{},"body":{"components/FormContainerComponent.html":{}}}],["enabled",{"_index":893,"title":{},"body":{"components/FormContainerComponent.html":{}}}],["enablelongstacktrace",{"_index":1009,"title":{},"body":{"injectables/MockNgZone.html":{}}}],["enables",{"_index":925,"title":{},"body":{"components/FormContainerComponent.html":{}}}],["end",{"_index":562,"title":{},"body":{"classes/Changed.html":{},"classes/NotReady.html":{},"classes/Ready.html":{},"classes/SaveEnd.html":{},"classes/SaveStart.html":{},"contributing.html":{},"miscellaneous/enumerations.html":{}}}],["enforce",{"_index":1966,"title":{},"body":{"contributing.html":{}}}],["enforcement",{"_index":1943,"title":{},"body":{"contributing.html":{}}}],["ensure",{"_index":1802,"title":{},"body":{"contributing.html":{}}}],["enter",{"_index":898,"title":{},"body":{"components/FormContainerComponent.html":{}}}],["entity",{"_index":1627,"title":{},"body":{"injectables/PagesService.html":{}}}],["entitystate",{"_index":1632,"title":{},"body":{"interfaces/PagesState.html":{},"injectables/PagesStore.html":{}}}],["entitystore",{"_index":1633,"title":{},"body":{"interfaces/PagesState.html":{},"injectables/PagesStore.html":{}}}],["entrycomponents",{"_index":1484,"title":{},"body":{"modules/NgxEditorjsDemoModule.html":{}}}],["enum",{"_index":447,"title":{},"body":{"interfaces/ApplicationState.html":{},"interfaces/ApplicationState-1.html":{},"classes/Changed.html":{},"interfaces/CreateEditorJSOptions.html":{},"interfaces/DemoData.html":{},"interfaces/DemoData-1.html":{},"interfaces/EditorJSAction.html":{},"interfaces/NgxEditorJSDemo.html":{},"interfaces/NgxEditorJSDemo-1.html":{},"interfaces/NgxEditorJSDemoData.html":{},"interfaces/NgxEditorJSDemoData-1.html":{},"classes/NotReady.html":{},"classes/Ready.html":{},"classes/SaveEnd.html":{},"classes/SaveStart.html":{},"interfaces/TinynodeDemos.html":{},"interfaces/TinynodeDemos-1.html":{},"miscellaneous/enumerations.html":{}}}],["enumerations",{"_index":2069,"title":{"miscellaneous/enumerations.html":{}},"body":{"miscellaneous/enumerations.html":{}}}],["environment",{"_index":280,"title":{},"body":{"modules/AppModule.html":{},"contributing.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["environment.production",{"_index":299,"title":{},"body":{"modules/AppModule.html":{}}}],["environments/environment",{"_index":281,"title":{},"body":{"modules/AppModule.html":{}}}],["error",{"_index":692,"title":{},"body":{"interfaces/EditorJSMaterialForm.html":{},"injectables/NgxEditorJSService.html":{}}}],["error('error",{"_index":1278,"title":{},"body":{"directives/NgxEditorJSDirective.html":{}}}],["errorstate",{"_index":693,"title":{},"body":{"interfaces/EditorJSMaterialForm.html":{}}}],["etc",{"_index":412,"title":{},"body":{"interfaces/ApplicationData.html":{},"interfaces/ApplicationData-1.html":{},"interfaces/MenuGroup.html":{},"interfaces/MenuGroup-1.html":{},"interfaces/MenuItem.html":{},"interfaces/MenuItem-1.html":{},"todo.html":{}}}],["ethnicity",{"_index":1842,"title":{},"body":{"contributing.html":{}}}],["event",{"_index":73,"title":{},"body":{"components/AppContainerComponent.html":{},"interfaces/BlocksMap.html":{},"interfaces/ChangeMap.html":{},"interfaces/EditorJSMaterialForm.html":{},"interfaces/EditorMap.html":{},"interfaces/EventMap.html":{},"interfaces/EventType.html":{},"components/NavBarComponent.html":{},"components/NgxEditorJSBaseComponent.html":{},"components/NgxEditorJSComponent.html":{},"interfaces/ReadyMap.html":{},"contributing.html":{},"license.html":{}}}],["eventemitter",{"_index":1007,"title":{},"body":{"injectables/MockNgZone.html":{},"components/NavBarComponent.html":{},"components/NgxEditorJSBaseComponent.html":{},"components/NgxEditorJSComponent.html":{},"directives/NgxEditorJSDirective.html":{}}}],["eventemitter(false",{"_index":1008,"title":{},"body":{"injectables/MockNgZone.html":{}}}],["eventmap",{"_index":534,"title":{"interfaces/EventMap.html":{}},"body":{"interfaces/BlocksMap.html":{},"interfaces/ChangeMap.html":{},"interfaces/EditorMap.html":{},"interfaces/EventMap.html":{},"interfaces/EventType.html":{},"interfaces/ReadyMap.html":{},"coverage.html":{}}}],["events",{"_index":2189,"title":{},"body":{"additional-documentation/tinynodes-library-docs/ngx-editorjs-readme.html":{}}}],["eventtype",{"_index":532,"title":{"interfaces/EventType.html":{}},"body":{"interfaces/BlocksMap.html":{},"interfaces/ChangeMap.html":{},"interfaces/EditorMap.html":{},"interfaces/EventMap.html":{},"interfaces/EventType.html":{},"interfaces/ReadyMap.html":{},"coverage.html":{}}}],["everyone",{"_index":1837,"title":{},"body":{"contributing.html":{}}}],["example",{"_index":681,"title":{},"body":{"interfaces/EditorJSMaterialForm.html":{},"components/NgxEditorJSComponent.html":{},"components/NgxEditorJSDemoHomeComponent.html":{},"directives/NgxEditorJSDirective.html":{},"changelog.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-readme.html":{}}}],["examples",{"_index":1813,"title":{},"body":{"contributing.html":{}}}],["exclude",{"_index":1370,"title":{},"body":{"injectables/NgxEditorJSPluginService.html":{}}}],["exclude.includes(key",{"_index":1390,"title":{},"body":{"injectables/NgxEditorJSPluginService.html":{}}}],["excludetools",{"_index":1452,"title":{},"body":{"injectables/NgxEditorJSService.html":{}}}],["existing",{"_index":1238,"title":{},"body":{"directives/NgxEditorJSDirective.html":{}}}],["expanded",{"_index":1773,"title":{},"body":{"changelog.html":{}}}],["expected",{"_index":1902,"title":{},"body":{"contributing.html":{}}}],["experience",{"_index":1836,"title":{},"body":{"contributing.html":{}}}],["experiences",{"_index":1863,"title":{},"body":{"contributing.html":{}}}],["explicit",{"_index":1892,"title":{},"body":{"contributing.html":{}}}],["export",{"_index":127,"title":{},"body":{"components/AppContainerComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"injectables/AppService.html":{},"injectables/AppService-1.html":{},"interfaces/ApplicationData.html":{},"interfaces/ApplicationData-1.html":{},"modules/ApplicationDataModule.html":{},"injectables/ApplicationQuery.html":{},"injectables/ApplicationQuery-1.html":{},"interfaces/ApplicationState.html":{},"interfaces/ApplicationState-1.html":{},"injectables/ApplicationStore.html":{},"injectables/ApplicationStore-1.html":{},"interfaces/BasePlugin.html":{},"interfaces/BasePlugin-1.html":{},"interfaces/Block.html":{},"interfaces/BlocksMap.html":{},"interfaces/ChangeMap.html":{},"classes/Changed.html":{},"interfaces/CreateEditorJSOptions.html":{},"interfaces/DemoData.html":{},"interfaces/DemoData-1.html":{},"interfaces/EditorJSAction.html":{},"interfaces/EditorJSConfig.html":{},"interfaces/EditorJSInstanceConfig.html":{},"interfaces/EditorJSMaterialForm.html":{},"interfaces/EditorMap.html":{},"interfaces/EventMap.html":{},"interfaces/EventType.html":{},"components/FormContainerComponent.html":{},"interfaces/Header.html":{},"interfaces/HeaderBlock.html":{},"components/HomePageComponent.html":{},"interfaces/Image.html":{},"interfaces/ImageBlock.html":{},"interfaces/InjectorMethodOption.html":{},"interfaces/List.html":{},"interfaces/ListBlock.html":{},"modules/MaterialModule.html":{},"interfaces/MenuGroup.html":{},"interfaces/MenuGroup-1.html":{},"interfaces/MenuItem.html":{},"interfaces/MenuItem-1.html":{},"classes/MockEditorJS.html":{},"injectables/MockNgZone.html":{},"classes/MockPlugin.html":{},"components/NavBarComponent.html":{},"components/NgxEditorJSBaseComponent.html":{},"components/NgxEditorJSComponent.html":{},"interfaces/NgxEditorJSConfig.html":{},"interfaces/NgxEditorJSDemo.html":{},"interfaces/NgxEditorJSDemo-1.html":{},"interfaces/NgxEditorJSDemoData.html":{},"interfaces/NgxEditorJSDemoData-1.html":{},"components/NgxEditorJSDemoHomeComponent.html":{},"components/NgxEditorJSDemoInfoComponent.html":{},"directives/NgxEditorJSDirective.html":{},"injectables/NgxEditorJSEffects.html":{},"modules/NgxEditorJSModule.html":{},"injectables/NgxEditorJSPluginService.html":{},"injectables/NgxEditorJSService.html":{},"modules/NgxEditorjsDemoModule.html":{},"modules/NgxEditorjsNgrxModule.html":{},"modules/NgxEditorjsPluginsModule.html":{},"modules/NgxHideableHeaderDemoModule.html":{},"modules/NgxTinynodesCoreMaterialModule.html":{},"modules/NgxTinynodesCoreModule.html":{},"classes/NotReady.html":{},"interfaces/Page.html":{},"interfaces/PageBlock.html":{},"components/PageContainerComponent.html":{},"modules/PageStoreModule.html":{},"injectables/PagesQuery.html":{},"injectables/PagesService.html":{},"interfaces/PagesState.html":{},"injectables/PagesStore.html":{},"interfaces/Paragraph.html":{},"interfaces/ParagraphBlock.html":{},"injectables/PluginCode.html":{},"modules/PluginCodeModule.html":{},"interfaces/PluginConfig.html":{},"interfaces/PluginConfig-1.html":{},"injectables/PluginHeader.html":{},"modules/PluginHeaderModule.html":{},"injectables/PluginImage.html":{},"modules/PluginImageModule.html":{},"injectables/PluginLink.html":{},"modules/PluginLinkModule.html":{},"injectables/PluginList.html":{},"modules/PluginListModule.html":{},"injectables/PluginMarker.html":{},"modules/PluginMarkerModule.html":{},"injectables/PluginParagraph.html":{},"modules/PluginParagraphModule.html":{},"injectables/PluginSimpleImage.html":{},"modules/PluginSimpleImageModule.html":{},"classes/Ready.html":{},"interfaces/ReadyMap.html":{},"classes/SaveEnd.html":{},"classes/SaveStart.html":{},"components/SidebarComponent.html":{},"interfaces/Tag.html":{},"classes/TestClass.html":{},"interfaces/TinynodeDemos.html":{},"interfaces/TinynodeDemos-1.html":{},"interfaces/ToolSettingsMap.html":{},"interfaces/ToolSettingsMap-1.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-readme.html":{}}}],["exported",{"_index":484,"title":{},"body":{"interfaces/BasePlugin.html":{},"interfaces/BasePlugin-1.html":{},"interfaces/PluginConfig.html":{},"interfaces/PluginConfig-1.html":{},"interfaces/ToolSettingsMap.html":{},"interfaces/ToolSettingsMap-1.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-readme/ngx-editorjs-changelog.html":{}}}],["exports",{"_index":240,"title":{},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"modules/ApplicationDataModule.html":{},"modules/MaterialModule.html":{},"modules/NgxEditorJSModule.html":{},"modules/NgxEditorjsDemoModule.html":{},"modules/NgxEditorjsNgrxModule.html":{},"modules/NgxEditorjsPluginsModule.html":{},"modules/NgxTinynodesCoreMaterialModule.html":{},"modules/NgxTinynodesCoreModule.html":{},"modules/PageStoreModule.html":{},"modules/PluginCodeModule.html":{},"modules/PluginHeaderModule.html":{},"modules/PluginImageModule.html":{},"modules/PluginLinkModule.html":{},"modules/PluginListModule.html":{},"modules/PluginMarkerModule.html":{},"modules/PluginParagraphModule.html":{},"modules/PluginSimpleImageModule.html":{},"changelog.html":{},"index.html":{},"overview.html":{}}}],["expose",{"_index":2163,"title":{},"body":{"todo.html":{}}}],["exposed",{"_index":1808,"title":{},"body":{"contributing.html":{}}}],["express",{"_index":2130,"title":{},"body":{"license.html":{}}}],["expression",{"_index":1845,"title":{},"body":{"contributing.html":{}}}],["extendable",{"_index":2205,"title":{},"body":{"additional-documentation/tinynodes-library-docs/ngx-editorjs-readme.html":{}}}],["extended",{"_index":1029,"title":{},"body":{"components/NgxEditorJSBaseComponent.html":{}}}],["extending",{"_index":481,"title":{},"body":{"interfaces/BasePlugin.html":{},"interfaces/BasePlugin-1.html":{},"interfaces/PluginConfig.html":{},"interfaces/PluginConfig-1.html":{},"interfaces/ToolSettingsMap.html":{},"interfaces/ToolSettingsMap-1.html":{}}}],["extends",{"_index":434,"title":{},"body":{"injectables/ApplicationQuery.html":{},"injectables/ApplicationQuery-1.html":{},"interfaces/ApplicationState.html":{},"interfaces/ApplicationState-1.html":{},"injectables/ApplicationStore.html":{},"injectables/ApplicationStore-1.html":{},"interfaces/Block.html":{},"interfaces/DemoData.html":{},"interfaces/DemoData-1.html":{},"interfaces/EditorJSMaterialForm.html":{},"interfaces/Header.html":{},"interfaces/HeaderBlock.html":{},"interfaces/Image.html":{},"interfaces/ImageBlock.html":{},"interfaces/List.html":{},"interfaces/ListBlock.html":{},"injectables/MockNgZone.html":{},"components/NgxEditorJSComponent.html":{},"interfaces/NgxEditorJSDemo.html":{},"interfaces/NgxEditorJSDemo-1.html":{},"interfaces/NgxEditorJSDemoData.html":{},"interfaces/NgxEditorJSDemoData-1.html":{},"interfaces/Page.html":{},"interfaces/PageBlock.html":{},"injectables/PagesQuery.html":{},"interfaces/PagesState.html":{},"injectables/PagesStore.html":{},"interfaces/Paragraph.html":{},"interfaces/ParagraphBlock.html":{},"interfaces/Tag.html":{},"interfaces/TinynodeDemos.html":{},"interfaces/TinynodeDemos-1.html":{}}}],["face",{"_index":1968,"title":{},"body":{"contributing.html":{}}}],["factory",{"_index":631,"title":{},"body":{"interfaces/EditorJSConfig.html":{},"interfaces/NgxEditorJSConfig.html":{},"modules/NgxEditorJSModule.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-readme.html":{}}}],["failed",{"_index":2246,"title":{},"body":{"additional-documentation/tinynodes-library-docs/ngx-editorjs-readme/ngx-editorjs-changelog.html":{}}}],["fair",{"_index":1904,"title":{},"body":{"contributing.html":{}}}],["faith",{"_index":1967,"title":{},"body":{"contributing.html":{}}}],["false",{"_index":462,"title":{},"body":{"injectables/ApplicationStore.html":{},"injectables/ApplicationStore-1.html":{},"interfaces/CreateEditorJSOptions.html":{},"interfaces/EditorJSAction.html":{},"interfaces/EditorJSConfig.html":{},"interfaces/EditorJSInstanceConfig.html":{},"interfaces/EditorJSMaterialForm.html":{},"interfaces/InjectorMethodOption.html":{},"injectables/MockNgZone.html":{},"components/NgxEditorJSBaseComponent.html":{},"components/NgxEditorJSComponent.html":{},"interfaces/NgxEditorJSConfig.html":{},"directives/NgxEditorJSDirective.html":{},"injectables/NgxEditorJSEffects.html":{},"injectables/NgxEditorJSService.html":{},"miscellaneous/variables.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-readme.html":{}}}],["fb",{"_index":801,"title":{},"body":{"components/FormContainerComponent.html":{}}}],["feature",{"_index":924,"title":{},"body":{"components/FormContainerComponent.html":{},"todo.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-readme.html":{}}}],["features",{"_index":958,"title":{},"body":{"modules/MaterialModule.html":{},"modules/NgxEditorJSModule.html":{},"modules/NgxTinynodesCoreModule.html":{},"index.html":{}}}],["field",{"_index":673,"title":{},"body":{"interfaces/EditorJSMaterialForm.html":{},"components/FormContainerComponent.html":{},"components/NgxEditorJSBaseComponent.html":{},"components/NgxEditorJSComponent.html":{},"index.html":{},"miscellaneous/variables.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-readme.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-readme/ngx-editorjs-changelog.html":{}}}],["field'},{'name",{"_index":223,"title":{},"body":{"components/AppContainerComponent.html":{},"components/FormContainerComponent.html":{},"components/HomePageComponent.html":{},"components/NavBarComponent.html":{},"components/NgxEditorJSBaseComponent.html":{},"components/NgxEditorJSComponent.html":{},"components/NgxEditorJSDemoHomeComponent.html":{},"components/NgxEditorJSDemoInfoComponent.html":{},"components/PageContainerComponent.html":{},"components/SidebarComponent.html":{}}}],["field.component",{"_index":1340,"title":{},"body":{"modules/NgxEditorJSModule.html":{}}}],["field.component.html",{"_index":682,"title":{},"body":{"interfaces/EditorJSMaterialForm.html":{}}}],["field.component.scss",{"_index":683,"title":{},"body":{"interfaces/EditorJSMaterialForm.html":{}}}],["field.component.ts",{"_index":655,"title":{},"body":{"interfaces/EditorJSMaterialForm.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["field/editorjs",{"_index":654,"title":{},"body":{"interfaces/EditorJSMaterialForm.html":{},"modules/NgxEditorJSModule.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["file",{"_index":9,"title":{},"body":{"components/AppContainerComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"injectables/AppService.html":{},"injectables/AppService-1.html":{},"interfaces/ApplicationData.html":{},"interfaces/ApplicationData-1.html":{},"modules/ApplicationDataModule.html":{},"injectables/ApplicationQuery.html":{},"injectables/ApplicationQuery-1.html":{},"interfaces/ApplicationState.html":{},"interfaces/ApplicationState-1.html":{},"injectables/ApplicationStore.html":{},"injectables/ApplicationStore-1.html":{},"interfaces/BasePlugin.html":{},"interfaces/BasePlugin-1.html":{},"interfaces/Block.html":{},"interfaces/BlocksMap.html":{},"interfaces/ChangeMap.html":{},"classes/Changed.html":{},"interfaces/CreateEditorJSOptions.html":{},"interfaces/DemoData.html":{},"interfaces/DemoData-1.html":{},"interfaces/EditorJSAction.html":{},"interfaces/EditorJSConfig.html":{},"interfaces/EditorJSInstanceConfig.html":{},"interfaces/EditorJSMaterialForm.html":{},"interfaces/EditorMap.html":{},"interfaces/EventMap.html":{},"interfaces/EventType.html":{},"components/FormContainerComponent.html":{},"interfaces/Header.html":{},"interfaces/HeaderBlock.html":{},"components/HomePageComponent.html":{},"interfaces/Image.html":{},"interfaces/ImageBlock.html":{},"interfaces/InjectorMethodOption.html":{},"interfaces/List.html":{},"interfaces/ListBlock.html":{},"modules/MaterialModule.html":{},"interfaces/MenuGroup.html":{},"interfaces/MenuGroup-1.html":{},"interfaces/MenuItem.html":{},"interfaces/MenuItem-1.html":{},"classes/MockEditorJS.html":{},"injectables/MockNgZone.html":{},"classes/MockPlugin.html":{},"components/NavBarComponent.html":{},"components/NgxEditorJSBaseComponent.html":{},"components/NgxEditorJSComponent.html":{},"interfaces/NgxEditorJSConfig.html":{},"interfaces/NgxEditorJSDemo.html":{},"interfaces/NgxEditorJSDemo-1.html":{},"interfaces/NgxEditorJSDemoData.html":{},"interfaces/NgxEditorJSDemoData-1.html":{},"components/NgxEditorJSDemoHomeComponent.html":{},"components/NgxEditorJSDemoInfoComponent.html":{},"directives/NgxEditorJSDirective.html":{},"injectables/NgxEditorJSEffects.html":{},"modules/NgxEditorJSModule.html":{},"injectables/NgxEditorJSPluginService.html":{},"injectables/NgxEditorJSService.html":{},"modules/NgxEditorjsDemoModule.html":{},"modules/NgxEditorjsNgrxModule.html":{},"modules/NgxEditorjsPluginsModule.html":{},"modules/NgxHideableHeaderDemoModule.html":{},"modules/NgxTinynodesCoreMaterialModule.html":{},"modules/NgxTinynodesCoreModule.html":{},"classes/NotReady.html":{},"interfaces/Page.html":{},"interfaces/PageBlock.html":{},"components/PageContainerComponent.html":{},"modules/PageStoreModule.html":{},"injectables/PagesQuery.html":{},"injectables/PagesService.html":{},"interfaces/PagesState.html":{},"injectables/PagesStore.html":{},"interfaces/Paragraph.html":{},"interfaces/ParagraphBlock.html":{},"injectables/PluginCode.html":{},"modules/PluginCodeModule.html":{},"interfaces/PluginConfig.html":{},"interfaces/PluginConfig-1.html":{},"injectables/PluginHeader.html":{},"modules/PluginHeaderModule.html":{},"injectables/PluginImage.html":{},"modules/PluginImageModule.html":{},"injectables/PluginLink.html":{},"modules/PluginLinkModule.html":{},"injectables/PluginList.html":{},"modules/PluginListModule.html":{},"injectables/PluginMarker.html":{},"modules/PluginMarkerModule.html":{},"injectables/PluginParagraph.html":{},"modules/PluginParagraphModule.html":{},"injectables/PluginSimpleImage.html":{},"modules/PluginSimpleImageModule.html":{},"classes/Ready.html":{},"interfaces/ReadyMap.html":{},"classes/SaveEnd.html":{},"classes/SaveStart.html":{},"components/SidebarComponent.html":{},"interfaces/Tag.html":{},"classes/TestClass.html":{},"interfaces/TinynodeDemos.html":{},"interfaces/TinynodeDemos-1.html":{},"interfaces/ToolSettingsMap.html":{},"interfaces/ToolSettingsMap-1.html":{},"contributing.html":{},"coverage.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-readme/ngx-editorjs-changelog.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-plugins-readme.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-plugins-readme/ngx-editorjs-plugins-changelog.html":{}}}],["filed",{"_index":1769,"title":{},"body":{"changelog.html":{}}}],["files",{"_index":1814,"title":{},"body":{"contributing.html":{},"license.html":{},"additional-documentation/tinynodes-library-docs.html":{}}}],["filter",{"_index":360,"title":{},"body":{"injectables/AppService.html":{},"injectables/AppService-1.html":{},"injectables/NgxEditorJSService.html":{},"components/PageContainerComponent.html":{}}}],["filter(([key",{"_index":1389,"title":{},"body":{"injectables/NgxEditorJSPluginService.html":{}}}],["filter((data",{"_index":379,"title":{},"body":{"injectables/AppService.html":{}}}],["filter(data",{"_index":399,"title":{},"body":{"injectables/AppService-1.html":{}}}],["filter(menus",{"_index":386,"title":{},"body":{"injectables/AppService.html":{},"injectables/AppService-1.html":{}}}],["finaltools",{"_index":1394,"title":{},"body":{"injectables/NgxEditorJSPluginService.html":{}}}],["find",{"_index":952,"title":{},"body":{"components/HomePageComponent.html":{},"changelog.html":{},"index.html":{},"additional-documentation/tinynodes-library-docs.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-readme.html":{}}}],["first",{"_index":606,"title":{},"body":{"interfaces/EditorJSConfig.html":{},"components/NgxEditorJSBaseComponent.html":{},"components/NgxEditorJSComponent.html":{},"interfaces/NgxEditorJSConfig.html":{},"directives/NgxEditorJSDirective.html":{},"changelog.html":{},"contributing.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-readme.html":{}}}],["fitness",{"_index":2135,"title":{},"body":{"license.html":{}}}],["fixed",{"_index":2223,"title":{},"body":{"additional-documentation/tinynodes-library-docs/ngx-editorjs-readme/ngx-editorjs-changelog.html":{}}}],["fixes",{"_index":2244,"title":{},"body":{"additional-documentation/tinynodes-library-docs/ngx-editorjs-readme/ngx-editorjs-changelog.html":{}}}],["flex",{"_index":931,"title":{},"body":{"components/FormContainerComponent.html":{},"components/NgxEditorJSComponent.html":{},"components/PageContainerComponent.html":{}}}],["flexlayoutmodule",{"_index":263,"title":{},"body":{"modules/AppModule.html":{}}}],["float",{"_index":731,"title":{},"body":{"interfaces/EditorJSMaterialForm.html":{}}}],["fm",{"_index":747,"title":{},"body":{"interfaces/EditorJSMaterialForm.html":{},"components/NgxEditorJSBaseComponent.html":{},"components/NgxEditorJSComponent.html":{}}}],["fn",{"_index":1003,"title":{},"body":{"injectables/MockNgZone.html":{},"components/NgxEditorJSBaseComponent.html":{},"components/NgxEditorJSComponent.html":{}}}],["focus",{"_index":619,"title":{},"body":{"interfaces/EditorJSConfig.html":{},"interfaces/EditorJSMaterialForm.html":{},"components/FormContainerComponent.html":{},"components/NgxEditorJSBaseComponent.html":{},"components/NgxEditorJSComponent.html":{},"interfaces/NgxEditorJSConfig.html":{},"directives/NgxEditorJSDirective.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-readme.html":{}}}],["focused",{"_index":702,"title":{},"body":{"interfaces/EditorJSMaterialForm.html":{},"components/NgxEditorJSBaseComponent.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-readme.html":{}}}],["focused(focused",{"_index":706,"title":{},"body":{"interfaces/EditorJSMaterialForm.html":{}}}],["focusing",{"_index":1868,"title":{},"body":{"contributing.html":{}}}],["focusmonitor",{"_index":657,"title":{},"body":{"interfaces/EditorJSMaterialForm.html":{},"components/NgxEditorJSBaseComponent.html":{},"components/NgxEditorJSComponent.html":{}}}],["folder",{"_index":2088,"title":{},"body":{"index.html":{}}}],["follow",{"_index":1799,"title":{},"body":{"contributing.html":{}}}],["following",{"_index":2121,"title":{},"body":{"license.html":{}}}],["for_root_options_token",{"_index":632,"title":{},"body":{"interfaces/EditorJSConfig.html":{},"interfaces/NgxEditorJSConfig.html":{},"modules/NgxEditorJSModule.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["foreach(([key",{"_index":1383,"title":{},"body":{"injectables/NgxEditorJSPluginService.html":{}}}],["form",{"_index":202,"title":{},"body":{"components/AppContainerComponent.html":{},"components/FormContainerComponent.html":{},"components/HomePageComponent.html":{},"components/NavBarComponent.html":{},"components/NgxEditorJSBaseComponent.html":{},"components/NgxEditorJSComponent.html":{},"components/NgxEditorJSDemoHomeComponent.html":{},"components/NgxEditorJSDemoInfoComponent.html":{},"directives/NgxEditorJSDirective.html":{},"components/PageContainerComponent.html":{},"components/SidebarComponent.html":{},"index.html":{},"miscellaneous/variables.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-readme.html":{}}}],["format",{"_index":2212,"title":{},"body":{"additional-documentation/tinynodes-library-docs/ngx-editorjs-readme/ngx-editorjs-changelog.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-plugins-readme/ngx-editorjs-plugins-changelog.html":{}}}],["formatted",{"_index":1571,"title":{},"body":{"components/PageContainerComponent.html":{}}}],["formbuilder",{"_index":802,"title":{},"body":{"components/FormContainerComponent.html":{}}}],["formcontainercomponent",{"_index":200,"title":{"components/FormContainerComponent.html":{}},"body":{"components/AppContainerComponent.html":{},"components/FormContainerComponent.html":{},"components/HomePageComponent.html":{},"components/NavBarComponent.html":{},"components/NgxEditorJSBaseComponent.html":{},"components/NgxEditorJSComponent.html":{},"components/NgxEditorJSDemoHomeComponent.html":{},"components/NgxEditorJSDemoInfoComponent.html":{},"modules/NgxEditorjsDemoModule.html":{},"components/PageContainerComponent.html":{},"components/SidebarComponent.html":{},"coverage.html":{},"overview.html":{},"miscellaneous/variables.html":{}}}],["formcontrol",{"_index":832,"title":{},"body":{"components/FormContainerComponent.html":{}}}],["forms",{"_index":1079,"title":{},"body":{"components/NgxEditorJSBaseComponent.html":{},"components/NgxEditorJSComponent.html":{},"components/NgxEditorJSDemoHomeComponent.html":{},"changelog.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-readme.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-readme/ngx-editorjs-changelog.html":{}}}],["formsmodule",{"_index":1333,"title":{},"body":{"modules/NgxEditorJSModule.html":{}}}],["forroot",{"_index":1323,"title":{},"body":{"modules/NgxEditorJSModule.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-readme.html":{}}}],["forroot(@optional",{"_index":1353,"title":{},"body":{"modules/NgxEditorJSModule.html":{}}}],["forroot(config",{"_index":1325,"title":{},"body":{"modules/NgxEditorJSModule.html":{}}}],["forwardref",{"_index":662,"title":{},"body":{"interfaces/EditorJSMaterialForm.html":{},"components/NgxEditorJSBaseComponent.html":{},"miscellaneous/variables.html":{}}}],["fostering",{"_index":1828,"title":{},"body":{"contributing.html":{}}}],["framework",{"_index":2191,"title":{},"body":{"additional-documentation/tinynodes-library-docs/ngx-editorjs-readme.html":{}}}],["free",{"_index":1835,"title":{},"body":{"contributing.html":{},"license.html":{}}}],["full",{"_index":316,"title":{},"body":{"modules/AppRoutingModule.html":{},"index.html":{},"todo.html":{},"miscellaneous/variables.html":{}}}],["fully",{"_index":2081,"title":{},"body":{"index.html":{}}}],["function",{"_index":472,"title":{},"body":{"interfaces/BasePlugin.html":{},"interfaces/BasePlugin-1.html":{},"interfaces/EditorJSInstanceConfig.html":{},"classes/MockEditorJS.html":{},"injectables/MockNgZone.html":{},"components/NgxEditorJSBaseComponent.html":{},"components/NgxEditorJSComponent.html":{},"modules/NgxEditorJSModule.html":{},"coverage.html":{},"miscellaneous/functions.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-readme.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-readme/ngx-editorjs-changelog.html":{}}}],["functions",{"_index":429,"title":{"miscellaneous/functions.html":{}},"body":{"modules/ApplicationDataModule.html":{},"miscellaneous/functions.html":{}}}],["furnished",{"_index":2120,"title":{},"body":{"license.html":{}}}],["further",{"_index":1941,"title":{},"body":{"contributing.html":{}}}],["future",{"_index":2206,"title":{},"body":{"additional-documentation/tinynodes-library-docs/ngx-editorjs-readme.html":{}}}],["gender",{"_index":1843,"title":{},"body":{"contributing.html":{}}}],["general",{"_index":2094,"title":{},"body":{"license.html":{},"todo.html":{}}}],["generate",{"_index":2228,"title":{},"body":{"additional-documentation/tinynodes-library-docs/ngx-editorjs-readme/ngx-editorjs-changelog.html":{}}}],["generated",{"_index":2091,"title":{},"body":{"index.html":{},"additional-documentation/tinynodes-library-docs.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-readme/ngx-editorjs-changelog.html":{}}}],["get(key",{"_index":1366,"title":{},"body":{"injectables/NgxEditorJSPluginService.html":{}}}],["getasjson",{"_index":1570,"title":{},"body":{"components/PageContainerComponent.html":{}}}],["getautosave",{"_index":847,"title":{},"body":{"components/FormContainerComponent.html":{}}}],["getblocks",{"_index":852,"title":{},"body":{"components/FormContainerComponent.html":{},"injectables/NgxEditorJSService.html":{},"components/PageContainerComponent.html":{}}}],["getblocks(undefined",{"_index":1410,"title":{},"body":{"injectables/NgxEditorJSService.html":{}}}],["getchanged",{"_index":1035,"title":{},"body":{"components/NgxEditorJSBaseComponent.html":{},"components/NgxEditorJSComponent.html":{},"injectables/NgxEditorJSService.html":{}}}],["getchanged(undefined",{"_index":1412,"title":{},"body":{"injectables/NgxEditorJSService.html":{}}}],["getdemodata",{"_index":329,"title":{},"body":{"injectables/AppService.html":{},"injectables/AppService-1.html":{}}}],["getdemodata('ngx",{"_index":881,"title":{},"body":{"components/FormContainerComponent.html":{},"components/PageContainerComponent.html":{}}}],["getdemodata(demoname",{"_index":341,"title":{},"body":{"injectables/AppService.html":{},"injectables/AppService-1.html":{}}}],["geteditor",{"_index":1244,"title":{},"body":{"directives/NgxEditorJSDirective.html":{},"injectables/NgxEditorJSService.html":{}}}],["geteditor(undefined",{"_index":1416,"title":{},"body":{"injectables/NgxEditorJSService.html":{}}}],["geteditoractions",{"_index":1430,"title":{},"body":{"injectables/NgxEditorJSService.html":{}}}],["getelement",{"_index":1246,"title":{},"body":{"directives/NgxEditorJSDirective.html":{}}}],["getfocusmonitor",{"_index":1036,"title":{},"body":{"components/NgxEditorJSBaseComponent.html":{},"components/NgxEditorJSComponent.html":{}}}],["getfocusmonitor(element",{"_index":1063,"title":{},"body":{"components/NgxEditorJSBaseComponent.html":{},"components/NgxEditorJSComponent.html":{}}}],["getgreeting",{"_index":1986,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["gethidden",{"_index":356,"title":{},"body":{"injectables/AppService.html":{},"injectables/AppService-1.html":{}}}],["getispanelopen",{"_index":1185,"title":{},"body":{"components/NgxEditorJSDemoInfoComponent.html":{}}}],["getisready",{"_index":1092,"title":{},"body":{"components/NgxEditorJSBaseComponent.html":{}}}],["getissaved",{"_index":845,"title":{},"body":{"components/FormContainerComponent.html":{}}}],["getmainmenu",{"_index":106,"title":{},"body":{"components/AppContainerComponent.html":{}}}],["getmenu",{"_index":330,"title":{},"body":{"injectables/AppService.html":{},"injectables/AppService-1.html":{},"components/FormContainerComponent.html":{},"components/HomePageComponent.html":{},"components/PageContainerComponent.html":{}}}],["getmenu(key",{"_index":348,"title":{},"body":{"injectables/AppService.html":{},"injectables/AppService-1.html":{}}}],["getopensourcemenu",{"_index":111,"title":{},"body":{"components/AppContainerComponent.html":{}}}],["getpages",{"_index":850,"title":{},"body":{"components/FormContainerComponent.html":{},"components/PageContainerComponent.html":{},"injectables/PagesService.html":{}}}],["getpanelopen",{"_index":843,"title":{},"body":{"components/FormContainerComponent.html":{}}}],["getplugins",{"_index":1374,"title":{},"body":{"injectables/NgxEditorJSPluginService.html":{}}}],["getprojectsmenu",{"_index":108,"title":{},"body":{"components/AppContainerComponent.html":{}}}],["gets",{"_index":350,"title":{},"body":{"injectables/AppService.html":{},"injectables/AppService-1.html":{},"interfaces/EditorJSMaterialForm.html":{},"components/FormContainerComponent.html":{},"components/NgxEditorJSDemoInfoComponent.html":{}}}],["getservice",{"_index":1248,"title":{},"body":{"directives/NgxEditorJSDirective.html":{}}}],["getsidebarhidden",{"_index":103,"title":{},"body":{"components/AppContainerComponent.html":{}}}],["getters",{"_index":2247,"title":{},"body":{"additional-documentation/tinynodes-library-docs/ngx-editorjs-readme/ngx-editorjs-changelog.html":{}}}],["gettimer",{"_index":1037,"title":{},"body":{"components/NgxEditorJSBaseComponent.html":{},"components/NgxEditorJSComponent.html":{}}}],["gettimer(time",{"_index":1070,"title":{},"body":{"components/NgxEditorJSBaseComponent.html":{},"components/NgxEditorJSComponent.html":{}}}],["getting",{"_index":1735,"title":{"changelog.html":{},"contributing.html":{},"index.html":{},"license.html":{},"todo.html":{}},"body":{}}],["gettools",{"_index":1357,"title":{},"body":{"injectables/NgxEditorJSPluginService.html":{}}}],["gettools(exclude",{"_index":1368,"title":{},"body":{"injectables/NgxEditorJSPluginService.html":{}}}],["gettouched",{"_index":1250,"title":{},"body":{"directives/NgxEditorJSDirective.html":{}}}],["github",{"_index":1642,"title":{},"body":{"modules/PluginCodeModule.html":{},"modules/PluginHeaderModule.html":{},"modules/PluginImageModule.html":{},"modules/PluginLinkModule.html":{},"modules/PluginListModule.html":{},"modules/PluginMarkerModule.html":{},"modules/PluginParagraphModule.html":{},"modules/PluginSimpleImageModule.html":{},"additional-documentation/tinynodes-library-docs.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-readme.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-plugins-readme.html":{}}}],["goes",{"_index":1197,"title":{},"body":{"components/NgxEditorJSDemoInfoComponent.html":{}}}],["good",{"_index":1787,"title":{},"body":{"changelog.html":{},"contributing.html":{}}}],["gracefully",{"_index":1864,"title":{},"body":{"contributing.html":{}}}],["granted",{"_index":2099,"title":{},"body":{"license.html":{}}}],["graph",{"_index":2153,"title":{},"body":{"modules.html":{}}}],["group",{"_index":416,"title":{},"body":{"interfaces/ApplicationData.html":{},"interfaces/ApplicationData-1.html":{},"components/FormContainerComponent.html":{},"interfaces/MenuGroup.html":{},"interfaces/MenuGroup-1.html":{},"interfaces/MenuItem.html":{},"interfaces/MenuItem-1.html":{},"components/NgxEditorJSDemoInfoComponent.html":{}}}],["groups",{"_index":404,"title":{},"body":{"interfaces/ApplicationData.html":{},"interfaces/ApplicationData-1.html":{},"interfaces/MenuGroup.html":{},"interfaces/MenuGroup-1.html":{},"interfaces/MenuItem.html":{},"interfaces/MenuItem-1.html":{}}}],["guid",{"_index":1618,"title":{},"body":{"injectables/PagesService.html":{}}}],["hammerjs",{"_index":2059,"title":{},"body":{"dependencies.html":{}}}],["handle",{"_index":1750,"title":{},"body":{"changelog.html":{}}}],["handler",{"_index":433,"title":{},"body":{"injectables/ApplicationQuery.html":{},"injectables/ApplicationQuery-1.html":{}}}],["harassing",{"_index":1945,"title":{},"body":{"contributing.html":{}}}],["harassment",{"_index":1834,"title":{},"body":{"contributing.html":{}}}],["harmful",{"_index":1923,"title":{},"body":{"contributing.html":{}}}],["haschanged",{"_index":1041,"title":{},"body":{"components/NgxEditorJSBaseComponent.html":{},"components/NgxEditorJSComponent.html":{},"directives/NgxEditorJSDirective.html":{},"injectables/NgxEditorJSService.html":{}}}],["haschanged(undefined",{"_index":1418,"title":{},"body":{"injectables/NgxEditorJSService.html":{}}}],["header",{"_index":509,"title":{"interfaces/Header.html":{}},"body":{"interfaces/Block.html":{},"components/FormContainerComponent.html":{},"interfaces/Header.html":{},"interfaces/HeaderBlock.html":{},"interfaces/Image.html":{},"interfaces/ImageBlock.html":{},"interfaces/List.html":{},"interfaces/ListBlock.html":{},"modules/NgxHideableHeaderDemoModule.html":{},"components/PageContainerComponent.html":{},"interfaces/Paragraph.html":{},"interfaces/ParagraphBlock.html":{},"injectables/PluginHeader.html":{},"modules/PluginHeaderModule.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/variables.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-readme.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-readme/ngx-editorjs-changelog.html":{}}}],["header.plugin",{"_index":1656,"title":{},"body":{"modules/PluginHeaderModule.html":{}}}],["headerblock",{"_index":513,"title":{"interfaces/HeaderBlock.html":{}},"body":{"interfaces/Block.html":{},"interfaces/Header.html":{},"interfaces/HeaderBlock.html":{},"interfaces/Image.html":{},"interfaces/ImageBlock.html":{},"interfaces/List.html":{},"interfaces/ListBlock.html":{},"interfaces/Paragraph.html":{},"interfaces/ParagraphBlock.html":{},"coverage.html":{},"miscellaneous/typealiases.html":{}}}],["height",{"_index":157,"title":{},"body":{"components/AppContainerComponent.html":{},"interfaces/EditorJSConfig.html":{},"components/FormContainerComponent.html":{},"components/NavBarComponent.html":{},"components/NgxEditorJSBaseComponent.html":{},"components/NgxEditorJSComponent.html":{},"interfaces/NgxEditorJSConfig.html":{},"components/NgxEditorJSDemoInfoComponent.html":{},"directives/NgxEditorJSDirective.html":{},"components/PageContainerComponent.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-readme.html":{}}}],["helper",{"_index":428,"title":{},"body":{"modules/ApplicationDataModule.html":{}}}],["helpers",{"_index":2165,"title":{},"body":{"todo.html":{}}}],["here",{"_index":326,"title":{},"body":{"injectables/AppService.html":{},"injectables/AppService-1.html":{},"components/FormContainerComponent.html":{},"additional-documentation/tinynodes-library-docs.html":{}}}],["hereby",{"_index":2098,"title":{},"body":{"license.html":{}}}],["hidden",{"_index":145,"title":{},"body":{"components/AppContainerComponent.html":{},"injectables/AppService.html":{},"injectables/AppService-1.html":{},"interfaces/ApplicationData.html":{},"interfaces/ApplicationData-1.html":{},"interfaces/ApplicationState.html":{},"interfaces/ApplicationState-1.html":{},"injectables/ApplicationStore.html":{},"injectables/ApplicationStore-1.html":{},"interfaces/DemoData.html":{},"interfaces/DemoData-1.html":{},"interfaces/MenuGroup.html":{},"interfaces/MenuGroup-1.html":{},"interfaces/MenuItem.html":{},"interfaces/MenuItem-1.html":{},"interfaces/NgxEditorJSDemo.html":{},"interfaces/NgxEditorJSDemo-1.html":{},"interfaces/NgxEditorJSDemoData.html":{},"interfaces/NgxEditorJSDemoData-1.html":{},"interfaces/TinynodeDemos.html":{},"interfaces/TinynodeDemos-1.html":{},"miscellaneous/enumerations.html":{}}}],["hide",{"_index":88,"title":{},"body":{"components/AppContainerComponent.html":{}}}],["hideable",{"_index":1541,"title":{},"body":{"modules/NgxHideableHeaderDemoModule.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/variables.html":{}}}],["hides",{"_index":2209,"title":{},"body":{"additional-documentation/tinynodes-library-docs/ngx-editorjs-readme.html":{}}}],["hidetoolbar",{"_index":600,"title":{},"body":{"interfaces/EditorJSConfig.html":{},"components/NgxEditorJSBaseComponent.html":{},"components/NgxEditorJSComponent.html":{},"interfaces/NgxEditorJSConfig.html":{},"directives/NgxEditorJSDirective.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-readme.html":{}}}],["hold",{"_index":614,"title":{},"body":{"interfaces/EditorJSConfig.html":{},"components/NgxEditorJSBaseComponent.html":{},"components/NgxEditorJSComponent.html":{},"interfaces/NgxEditorJSConfig.html":{},"directives/NgxEditorJSDirective.html":{}}}],["holder",{"_index":566,"title":{},"body":{"classes/Changed.html":{},"interfaces/EditorJSConfig.html":{},"interfaces/EditorJSInstanceConfig.html":{},"components/FormContainerComponent.html":{},"interfaces/InjectorMethodOption.html":{},"components/NgxEditorJSBaseComponent.html":{},"components/NgxEditorJSComponent.html":{},"interfaces/NgxEditorJSConfig.html":{},"directives/NgxEditorJSDirective.html":{},"injectables/NgxEditorJSEffects.html":{},"injectables/NgxEditorJSService.html":{},"classes/NotReady.html":{},"components/PageContainerComponent.html":{},"classes/Ready.html":{},"classes/SaveEnd.html":{},"classes/SaveStart.html":{},"miscellaneous/variables.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-readme.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-readme/ngx-editorjs-changelog.html":{}}}],["holders",{"_index":2140,"title":{},"body":{"license.html":{}}}],["home",{"_index":205,"title":{},"body":{"components/AppContainerComponent.html":{},"modules/AppRoutingModule.html":{},"components/FormContainerComponent.html":{},"components/HomePageComponent.html":{},"components/NavBarComponent.html":{},"components/NgxEditorJSBaseComponent.html":{},"components/NgxEditorJSComponent.html":{},"components/NgxEditorJSDemoHomeComponent.html":{},"components/NgxEditorJSDemoInfoComponent.html":{},"components/PageContainerComponent.html":{},"components/SidebarComponent.html":{},"miscellaneous/variables.html":{}}}],["home'},{'name",{"_index":216,"title":{},"body":{"components/AppContainerComponent.html":{},"components/FormContainerComponent.html":{},"components/HomePageComponent.html":{},"components/NavBarComponent.html":{},"components/NgxEditorJSBaseComponent.html":{},"components/NgxEditorJSComponent.html":{},"components/NgxEditorJSDemoHomeComponent.html":{},"components/NgxEditorJSDemoInfoComponent.html":{},"components/PageContainerComponent.html":{},"components/SidebarComponent.html":{}}}],["homepagecomponent",{"_index":204,"title":{"components/HomePageComponent.html":{}},"body":{"components/AppContainerComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"components/FormContainerComponent.html":{},"components/HomePageComponent.html":{},"components/NavBarComponent.html":{},"components/NgxEditorJSBaseComponent.html":{},"components/NgxEditorJSComponent.html":{},"components/NgxEditorJSDemoHomeComponent.html":{},"components/NgxEditorJSDemoInfoComponent.html":{},"components/PageContainerComponent.html":{},"components/SidebarComponent.html":{},"coverage.html":{},"overview.html":{},"miscellaneous/variables.html":{}}}],["host",{"_index":684,"title":{},"body":{"interfaces/EditorJSMaterialForm.html":{},"components/FormContainerComponent.html":{},"components/NgxEditorJSComponent.html":{},"components/NgxEditorJSDemoInfoComponent.html":{},"directives/NgxEditorJSDirective.html":{},"components/PageContainerComponent.html":{}}}],["hostbinding",{"_index":663,"title":{},"body":{"interfaces/EditorJSMaterialForm.html":{}}}],["hostbinding('attr.aria",{"_index":736,"title":{},"body":{"interfaces/EditorJSMaterialForm.html":{}}}],["hostbinding('class.floating",{"_index":732,"title":{},"body":{"interfaces/EditorJSMaterialForm.html":{}}}],["hostlistener",{"_index":1252,"title":{},"body":{"directives/NgxEditorJSDirective.html":{}}}],["hostlistener('click",{"_index":1255,"title":{},"body":{"directives/NgxEditorJSDirective.html":{}}}],["hostlisteners",{"_index":1206,"title":{},"body":{"directives/NgxEditorJSDirective.html":{}}}],["html",{"_index":194,"title":{},"body":{"components/AppContainerComponent.html":{},"components/FormContainerComponent.html":{},"components/HomePageComponent.html":{},"components/NavBarComponent.html":{},"components/NgxEditorJSBaseComponent.html":{},"components/NgxEditorJSComponent.html":{},"components/NgxEditorJSDemoHomeComponent.html":{},"components/NgxEditorJSDemoInfoComponent.html":{},"components/PageContainerComponent.html":{},"components/SidebarComponent.html":{}}}],["htmlelement",{"_index":1064,"title":{},"body":{"components/NgxEditorJSBaseComponent.html":{},"components/NgxEditorJSComponent.html":{}}}],["http",{"_index":334,"title":{},"body":{"injectables/AppService.html":{},"injectables/AppService-1.html":{}}}],["http://contributor",{"_index":1979,"title":{},"body":{"contributing.html":{}}}],["httpclient",{"_index":259,"title":{},"body":{"modules/AppModule.html":{},"injectables/AppService.html":{},"injectables/AppService-1.html":{}}}],["httpclientmodule",{"_index":260,"title":{},"body":{"modules/AppModule.html":{}}}],["i'll",{"_index":1781,"title":{},"body":{"changelog.html":{}}}],["i'm",{"_index":1748,"title":{},"body":{"changelog.html":{}}}],["i've",{"_index":1749,"title":{},"body":{"changelog.html":{}}}],["icon",{"_index":177,"title":{},"body":{"components/AppContainerComponent.html":{},"interfaces/ApplicationData.html":{},"interfaces/ApplicationData-1.html":{},"interfaces/MenuGroup.html":{},"interfaces/MenuGroup-1.html":{},"interfaces/MenuItem.html":{},"interfaces/MenuItem-1.html":{},"components/NavBarComponent.html":{}}}],["id",{"_index":613,"title":{},"body":{"interfaces/EditorJSConfig.html":{},"interfaces/EditorJSMaterialForm.html":{},"components/FormContainerComponent.html":{},"components/NgxEditorJSBaseComponent.html":{},"components/NgxEditorJSComponent.html":{},"interfaces/NgxEditorJSConfig.html":{},"directives/NgxEditorJSDirective.html":{},"injectables/NgxEditorJSService.html":{},"interfaces/Page.html":{},"interfaces/PageBlock.html":{},"components/PageContainerComponent.html":{},"injectables/PagesService.html":{},"interfaces/Tag.html":{},"miscellaneous/variables.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-readme.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-readme/ngx-editorjs-changelog.html":{}}}],["identifier",{"_index":1982,"title":{},"body":{"coverage.html":{}}}],["identity",{"_index":1844,"title":{},"body":{"contributing.html":{}}}],["ids",{"_index":737,"title":{},"body":{"interfaces/EditorJSMaterialForm.html":{}}}],["ids.join",{"_index":740,"title":{},"body":{"interfaces/EditorJSMaterialForm.html":{}}}],["ignore",{"_index":1272,"title":{},"body":{"directives/NgxEditorJSDirective.html":{}}}],["image",{"_index":514,"title":{"interfaces/Image.html":{}},"body":{"interfaces/Block.html":{},"components/FormContainerComponent.html":{},"interfaces/Header.html":{},"interfaces/HeaderBlock.html":{},"interfaces/Image.html":{},"interfaces/ImageBlock.html":{},"interfaces/List.html":{},"interfaces/ListBlock.html":{},"components/PageContainerComponent.html":{},"interfaces/Paragraph.html":{},"interfaces/ParagraphBlock.html":{},"injectables/PluginImage.html":{},"injectables/PluginSimpleImage.html":{},"modules/PluginSimpleImageModule.html":{},"coverage.html":{}}}],["image.module",{"_index":1539,"title":{},"body":{"modules/NgxEditorjsPluginsModule.html":{}}}],["image.module.ts",{"_index":1714,"title":{},"body":{"modules/PluginSimpleImageModule.html":{}}}],["image.plugin",{"_index":1665,"title":{},"body":{"modules/PluginImageModule.html":{},"modules/PluginSimpleImageModule.html":{}}}],["image.plugin.ts",{"_index":1708,"title":{},"body":{"injectables/PluginSimpleImage.html":{},"coverage.html":{}}}],["image.plugin.ts:14",{"_index":1710,"title":{},"body":{"injectables/PluginSimpleImage.html":{}}}],["image/simple",{"_index":1538,"title":{},"body":{"modules/NgxEditorjsPluginsModule.html":{},"injectables/PluginSimpleImage.html":{},"modules/PluginSimpleImageModule.html":{},"coverage.html":{}}}],["imageblock",{"_index":523,"title":{"interfaces/ImageBlock.html":{}},"body":{"interfaces/Block.html":{},"interfaces/Header.html":{},"interfaces/HeaderBlock.html":{},"interfaces/Image.html":{},"interfaces/ImageBlock.html":{},"interfaces/List.html":{},"interfaces/ListBlock.html":{},"interfaces/Paragraph.html":{},"interfaces/ParagraphBlock.html":{},"coverage.html":{},"miscellaneous/typealiases.html":{}}}],["imagery",{"_index":1877,"title":{},"body":{"contributing.html":{}}}],["implementation",{"_index":994,"title":{},"body":{"injectables/MockNgZone.html":{}}}],["implemented",{"_index":2196,"title":{},"body":{"additional-documentation/tinynodes-library-docs/ngx-editorjs-readme.html":{}}}],["implements",{"_index":18,"title":{},"body":{"components/AppContainerComponent.html":{},"classes/Changed.html":{},"interfaces/EditorJSMaterialForm.html":{},"components/FormContainerComponent.html":{},"classes/MockEditorJS.html":{},"classes/MockPlugin.html":{},"components/NgxEditorJSBaseComponent.html":{},"components/NgxEditorJSDemoInfoComponent.html":{},"directives/NgxEditorJSDirective.html":{},"classes/NotReady.html":{},"components/PageContainerComponent.html":{},"injectables/PluginCode.html":{},"injectables/PluginHeader.html":{},"injectables/PluginImage.html":{},"injectables/PluginLink.html":{},"injectables/PluginList.html":{},"injectables/PluginMarker.html":{},"injectables/PluginParagraph.html":{},"injectables/PluginSimpleImage.html":{},"classes/Ready.html":{},"classes/SaveEnd.html":{},"classes/SaveStart.html":{},"classes/TestClass.html":{}}}],["implied",{"_index":2131,"title":{},"body":{"license.html":{}}}],["import",{"_index":114,"title":{},"body":{"components/AppContainerComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"injectables/AppService.html":{},"injectables/AppService-1.html":{},"interfaces/ApplicationData.html":{},"interfaces/ApplicationData-1.html":{},"modules/ApplicationDataModule.html":{},"injectables/ApplicationQuery.html":{},"injectables/ApplicationQuery-1.html":{},"interfaces/ApplicationState.html":{},"interfaces/ApplicationState-1.html":{},"injectables/ApplicationStore.html":{},"injectables/ApplicationStore-1.html":{},"interfaces/BasePlugin.html":{},"interfaces/BasePlugin-1.html":{},"interfaces/BlocksMap.html":{},"interfaces/ChangeMap.html":{},"classes/Changed.html":{},"interfaces/CreateEditorJSOptions.html":{},"interfaces/DemoData.html":{},"interfaces/DemoData-1.html":{},"interfaces/EditorJSAction.html":{},"interfaces/EditorJSConfig.html":{},"interfaces/EditorJSInstanceConfig.html":{},"interfaces/EditorJSMaterialForm.html":{},"interfaces/EditorMap.html":{},"interfaces/EventMap.html":{},"interfaces/EventType.html":{},"components/FormContainerComponent.html":{},"components/HomePageComponent.html":{},"interfaces/InjectorMethodOption.html":{},"modules/MaterialModule.html":{},"interfaces/MenuGroup.html":{},"interfaces/MenuGroup-1.html":{},"interfaces/MenuItem.html":{},"interfaces/MenuItem-1.html":{},"classes/MockEditorJS.html":{},"injectables/MockNgZone.html":{},"classes/MockPlugin.html":{},"components/NavBarComponent.html":{},"components/NgxEditorJSBaseComponent.html":{},"components/NgxEditorJSComponent.html":{},"interfaces/NgxEditorJSConfig.html":{},"interfaces/NgxEditorJSDemo.html":{},"interfaces/NgxEditorJSDemo-1.html":{},"interfaces/NgxEditorJSDemoData.html":{},"interfaces/NgxEditorJSDemoData-1.html":{},"components/NgxEditorJSDemoHomeComponent.html":{},"components/NgxEditorJSDemoInfoComponent.html":{},"directives/NgxEditorJSDirective.html":{},"injectables/NgxEditorJSEffects.html":{},"modules/NgxEditorJSModule.html":{},"injectables/NgxEditorJSPluginService.html":{},"injectables/NgxEditorJSService.html":{},"modules/NgxEditorjsDemoModule.html":{},"modules/NgxEditorjsNgrxModule.html":{},"modules/NgxEditorjsPluginsModule.html":{},"modules/NgxHideableHeaderDemoModule.html":{},"modules/NgxTinynodesCoreMaterialModule.html":{},"modules/NgxTinynodesCoreModule.html":{},"classes/NotReady.html":{},"interfaces/Page.html":{},"interfaces/PageBlock.html":{},"components/PageContainerComponent.html":{},"modules/PageStoreModule.html":{},"injectables/PagesQuery.html":{},"injectables/PagesService.html":{},"interfaces/PagesState.html":{},"injectables/PagesStore.html":{},"injectables/PluginCode.html":{},"modules/PluginCodeModule.html":{},"interfaces/PluginConfig.html":{},"interfaces/PluginConfig-1.html":{},"injectables/PluginHeader.html":{},"modules/PluginHeaderModule.html":{},"injectables/PluginImage.html":{},"modules/PluginImageModule.html":{},"injectables/PluginLink.html":{},"modules/PluginLinkModule.html":{},"injectables/PluginList.html":{},"modules/PluginListModule.html":{},"injectables/PluginMarker.html":{},"modules/PluginMarkerModule.html":{},"injectables/PluginParagraph.html":{},"modules/PluginParagraphModule.html":{},"injectables/PluginSimpleImage.html":{},"modules/PluginSimpleImageModule.html":{},"classes/Ready.html":{},"interfaces/ReadyMap.html":{},"classes/SaveEnd.html":{},"classes/SaveStart.html":{},"components/SidebarComponent.html":{},"interfaces/Tag.html":{},"classes/TestClass.html":{},"interfaces/TinynodeDemos.html":{},"interfaces/TinynodeDemos-1.html":{},"interfaces/ToolSettingsMap.html":{},"interfaces/ToolSettingsMap-1.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-readme.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-readme/ngx-editorjs-changelog.html":{}}}],["imported",{"_index":2194,"title":{},"body":{"additional-documentation/tinynodes-library-docs/ngx-editorjs-readme.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-readme/ngx-editorjs-changelog.html":{}}}],["importing",{"_index":1527,"title":{},"body":{"modules/NgxEditorjsPluginsModule.html":{}}}],["imports",{"_index":258,"title":{},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"modules/MaterialModule.html":{},"modules/NgxEditorJSModule.html":{},"modules/NgxEditorjsDemoModule.html":{},"modules/NgxEditorjsNgrxModule.html":{},"modules/NgxEditorjsPluginsModule.html":{},"modules/NgxHideableHeaderDemoModule.html":{},"modules/NgxTinynodesCoreMaterialModule.html":{},"modules/NgxTinynodesCoreModule.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-readme.html":{}}}],["improved",{"_index":2238,"title":{},"body":{"additional-documentation/tinynodes-library-docs/ngx-editorjs-readme/ngx-editorjs-changelog.html":{}}}],["improvements",{"_index":1753,"title":{},"body":{"changelog.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-readme/ngx-editorjs-changelog.html":{}}}],["inappropriate",{"_index":1895,"title":{},"body":{"contributing.html":{}}}],["incident",{"_index":1962,"title":{},"body":{"contributing.html":{}}}],["include",{"_index":579,"title":{},"body":{"interfaces/CreateEditorJSOptions.html":{},"interfaces/EditorJSAction.html":{},"injectables/NgxEditorJSService.html":{},"modules/NgxEditorjsPluginsModule.html":{},"contributing.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-readme.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-readme/ngx-editorjs-changelog.html":{}}}],["included",{"_index":1053,"title":{},"body":{"components/NgxEditorJSBaseComponent.html":{},"components/NgxEditorJSComponent.html":{},"directives/NgxEditorJSDirective.html":{},"license.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-readme/ngx-editorjs-changelog.html":{}}}],["includes",{"_index":1552,"title":{},"body":{"modules/NgxTinynodesCoreModule.html":{},"contributing.html":{}}}],["includetools",{"_index":577,"title":{},"body":{"interfaces/CreateEditorJSOptions.html":{},"interfaces/EditorJSAction.html":{},"components/NgxEditorJSBaseComponent.html":{},"components/NgxEditorJSComponent.html":{},"directives/NgxEditorJSDirective.html":{}}}],["including",{"_index":2108,"title":{},"body":{"license.html":{}}}],["inclusive",{"_index":1857,"title":{},"body":{"contributing.html":{}}}],["increase",{"_index":1811,"title":{},"body":{"contributing.html":{}}}],["index",{"_index":28,"title":{"index.html":{}},"body":{"components/AppContainerComponent.html":{},"injectables/AppService.html":{},"injectables/AppService-1.html":{},"interfaces/ApplicationData.html":{},"interfaces/ApplicationData-1.html":{},"interfaces/ApplicationState.html":{},"interfaces/ApplicationState-1.html":{},"interfaces/BasePlugin.html":{},"interfaces/BasePlugin-1.html":{},"interfaces/Block.html":{},"classes/Changed.html":{},"interfaces/CreateEditorJSOptions.html":{},"interfaces/DemoData.html":{},"interfaces/DemoData-1.html":{},"interfaces/EditorJSAction.html":{},"interfaces/EditorJSConfig.html":{},"interfaces/EditorJSInstanceConfig.html":{},"interfaces/EventType.html":{},"components/FormContainerComponent.html":{},"interfaces/Header.html":{},"interfaces/HeaderBlock.html":{},"components/HomePageComponent.html":{},"interfaces/Image.html":{},"interfaces/ImageBlock.html":{},"interfaces/InjectorMethodOption.html":{},"interfaces/List.html":{},"interfaces/ListBlock.html":{},"interfaces/MenuGroup.html":{},"interfaces/MenuGroup-1.html":{},"interfaces/MenuItem.html":{},"interfaces/MenuItem-1.html":{},"classes/MockEditorJS.html":{},"injectables/MockNgZone.html":{},"classes/MockPlugin.html":{},"components/NavBarComponent.html":{},"components/NgxEditorJSBaseComponent.html":{},"components/NgxEditorJSComponent.html":{},"interfaces/NgxEditorJSConfig.html":{},"interfaces/NgxEditorJSDemo.html":{},"interfaces/NgxEditorJSDemo-1.html":{},"components/NgxEditorJSDemoInfoComponent.html":{},"directives/NgxEditorJSDirective.html":{},"injectables/NgxEditorJSEffects.html":{},"injectables/NgxEditorJSPluginService.html":{},"injectables/NgxEditorJSService.html":{},"classes/NotReady.html":{},"interfaces/Page.html":{},"interfaces/PageBlock.html":{},"components/PageContainerComponent.html":{},"injectables/PagesService.html":{},"interfaces/Paragraph.html":{},"interfaces/ParagraphBlock.html":{},"injectables/PluginCode.html":{},"injectables/PluginHeader.html":{},"injectables/PluginImage.html":{},"injectables/PluginLink.html":{},"injectables/PluginList.html":{},"injectables/PluginMarker.html":{},"injectables/PluginParagraph.html":{},"injectables/PluginSimpleImage.html":{},"classes/Ready.html":{},"classes/SaveEnd.html":{},"classes/SaveStart.html":{},"components/SidebarComponent.html":{},"interfaces/Tag.html":{},"classes/TestClass.html":{},"interfaces/TinynodeDemos.html":{},"interfaces/TinynodeDemos-1.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["indexable",{"_index":497,"title":{},"body":{"interfaces/Block.html":{},"interfaces/BlocksMap.html":{},"interfaces/ChangeMap.html":{},"interfaces/EditorMap.html":{},"interfaces/EventMap.html":{},"interfaces/PluginConfig.html":{},"interfaces/PluginConfig-1.html":{},"interfaces/ReadyMap.html":{},"interfaces/ToolSettingsMap.html":{},"interfaces/ToolSettingsMap-1.html":{}}}],["individual",{"_index":1529,"title":{},"body":{"modules/NgxEditorjsPluginsModule.html":{},"contributing.html":{}}}],["info",{"_index":3,"title":{},"body":{"components/AppContainerComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"injectables/AppService.html":{},"injectables/AppService-1.html":{},"interfaces/ApplicationData.html":{},"interfaces/ApplicationData-1.html":{},"modules/ApplicationDataModule.html":{},"injectables/ApplicationQuery.html":{},"injectables/ApplicationQuery-1.html":{},"interfaces/ApplicationState.html":{},"interfaces/ApplicationState-1.html":{},"injectables/ApplicationStore.html":{},"injectables/ApplicationStore-1.html":{},"interfaces/BasePlugin.html":{},"interfaces/BasePlugin-1.html":{},"interfaces/Block.html":{},"interfaces/BlocksMap.html":{},"interfaces/ChangeMap.html":{},"classes/Changed.html":{},"interfaces/CreateEditorJSOptions.html":{},"interfaces/DemoData.html":{},"interfaces/DemoData-1.html":{},"interfaces/EditorJSAction.html":{},"interfaces/EditorJSConfig.html":{},"interfaces/EditorJSInstanceConfig.html":{},"interfaces/EditorJSMaterialForm.html":{},"interfaces/EditorMap.html":{},"interfaces/EventMap.html":{},"interfaces/EventType.html":{},"components/FormContainerComponent.html":{},"interfaces/Header.html":{},"interfaces/HeaderBlock.html":{},"components/HomePageComponent.html":{},"interfaces/Image.html":{},"interfaces/ImageBlock.html":{},"interfaces/InjectorMethodOption.html":{},"interfaces/List.html":{},"interfaces/ListBlock.html":{},"modules/MaterialModule.html":{},"interfaces/MenuGroup.html":{},"interfaces/MenuGroup-1.html":{},"interfaces/MenuItem.html":{},"interfaces/MenuItem-1.html":{},"classes/MockEditorJS.html":{},"injectables/MockNgZone.html":{},"classes/MockPlugin.html":{},"components/NavBarComponent.html":{},"components/NgxEditorJSBaseComponent.html":{},"components/NgxEditorJSComponent.html":{},"interfaces/NgxEditorJSConfig.html":{},"interfaces/NgxEditorJSDemo.html":{},"interfaces/NgxEditorJSDemo-1.html":{},"interfaces/NgxEditorJSDemoData.html":{},"interfaces/NgxEditorJSDemoData-1.html":{},"components/NgxEditorJSDemoHomeComponent.html":{},"components/NgxEditorJSDemoInfoComponent.html":{},"directives/NgxEditorJSDirective.html":{},"injectables/NgxEditorJSEffects.html":{},"modules/NgxEditorJSModule.html":{},"injectables/NgxEditorJSPluginService.html":{},"injectables/NgxEditorJSService.html":{},"modules/NgxEditorjsDemoModule.html":{},"modules/NgxEditorjsNgrxModule.html":{},"modules/NgxEditorjsPluginsModule.html":{},"modules/NgxHideableHeaderDemoModule.html":{},"modules/NgxTinynodesCoreMaterialModule.html":{},"modules/NgxTinynodesCoreModule.html":{},"classes/NotReady.html":{},"interfaces/Page.html":{},"interfaces/PageBlock.html":{},"components/PageContainerComponent.html":{},"modules/PageStoreModule.html":{},"injectables/PagesQuery.html":{},"injectables/PagesService.html":{},"interfaces/PagesState.html":{},"injectables/PagesStore.html":{},"interfaces/Paragraph.html":{},"interfaces/ParagraphBlock.html":{},"injectables/PluginCode.html":{},"modules/PluginCodeModule.html":{},"interfaces/PluginConfig.html":{},"interfaces/PluginConfig-1.html":{},"injectables/PluginHeader.html":{},"modules/PluginHeaderModule.html":{},"injectables/PluginImage.html":{},"modules/PluginImageModule.html":{},"injectables/PluginLink.html":{},"modules/PluginLinkModule.html":{},"injectables/PluginList.html":{},"modules/PluginListModule.html":{},"injectables/PluginMarker.html":{},"modules/PluginMarkerModule.html":{},"injectables/PluginParagraph.html":{},"modules/PluginParagraphModule.html":{},"injectables/PluginSimpleImage.html":{},"modules/PluginSimpleImageModule.html":{},"classes/Ready.html":{},"interfaces/ReadyMap.html":{},"classes/SaveEnd.html":{},"classes/SaveStart.html":{},"components/SidebarComponent.html":{},"interfaces/Tag.html":{},"classes/TestClass.html":{},"interfaces/TinynodeDemos.html":{},"interfaces/TinynodeDemos-1.html":{},"interfaces/ToolSettingsMap.html":{},"interfaces/ToolSettingsMap-1.html":{}}}],["info'},{'name",{"_index":218,"title":{},"body":{"components/AppContainerComponent.html":{},"components/FormContainerComponent.html":{},"components/HomePageComponent.html":{},"components/NavBarComponent.html":{},"components/NgxEditorJSBaseComponent.html":{},"components/NgxEditorJSComponent.html":{},"components/NgxEditorJSDemoHomeComponent.html":{},"components/NgxEditorJSDemoInfoComponent.html":{},"components/PageContainerComponent.html":{},"components/SidebarComponent.html":{}}}],["info.component",{"_index":1555,"title":{},"body":{"modules/NgxTinynodesCoreModule.html":{}}}],["info.component.html",{"_index":1174,"title":{},"body":{"components/NgxEditorJSDemoInfoComponent.html":{}}}],["info.component.scss",{"_index":1173,"title":{},"body":{"components/NgxEditorJSDemoInfoComponent.html":{}}}],["info.component.ts",{"_index":1172,"title":{},"body":{"components/NgxEditorJSDemoInfoComponent.html":{},"coverage.html":{}}}],["info.component.ts:14",{"_index":1184,"title":{},"body":{"components/NgxEditorJSDemoInfoComponent.html":{}}}],["info.component.ts:20",{"_index":1180,"title":{},"body":{"components/NgxEditorJSDemoInfoComponent.html":{}}}],["info.component.ts:26",{"_index":1179,"title":{},"body":{"components/NgxEditorJSDemoInfoComponent.html":{}}}],["info.component.ts:32",{"_index":1181,"title":{},"body":{"components/NgxEditorJSDemoInfoComponent.html":{}}}],["info.component.ts:35",{"_index":1178,"title":{},"body":{"components/NgxEditorJSDemoInfoComponent.html":{}}}],["info.component.ts:37",{"_index":1182,"title":{},"body":{"components/NgxEditorJSDemoInfoComponent.html":{}}}],["info.component.ts:46",{"_index":1186,"title":{},"body":{"components/NgxEditorJSDemoInfoComponent.html":{}}}],["info.component.ts:53",{"_index":1183,"title":{},"body":{"components/NgxEditorJSDemoInfoComponent.html":{}}}],["info/demo",{"_index":1171,"title":{},"body":{"components/NgxEditorJSDemoInfoComponent.html":{},"modules/NgxTinynodesCoreModule.html":{},"coverage.html":{}}}],["information",{"_index":1196,"title":{},"body":{"components/NgxEditorJSDemoInfoComponent.html":{},"contributing.html":{},"index.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-readme.html":{}}}],["inherited",{"_index":1125,"title":{},"body":{"components/NgxEditorJSComponent.html":{}}}],["init",{"_index":816,"title":{},"body":{"components/FormContainerComponent.html":{},"components/PageContainerComponent.html":{}}}],["initial",{"_index":324,"title":{},"body":{"injectables/AppService.html":{},"injectables/AppService-1.html":{},"interfaces/ApplicationState.html":{},"interfaces/ApplicationState-1.html":{},"interfaces/BasePlugin.html":{},"interfaces/BasePlugin-1.html":{},"interfaces/DemoData.html":{},"interfaces/DemoData-1.html":{},"interfaces/EditorJSConfig.html":{},"components/FormContainerComponent.html":{},"components/NgxEditorJSBaseComponent.html":{},"components/NgxEditorJSComponent.html":{},"interfaces/NgxEditorJSConfig.html":{},"interfaces/NgxEditorJSDemo.html":{},"interfaces/NgxEditorJSDemo-1.html":{},"interfaces/NgxEditorJSDemoData.html":{},"interfaces/NgxEditorJSDemoData-1.html":{},"directives/NgxEditorJSDirective.html":{},"injectables/NgxEditorJSPluginService.html":{},"injectables/NgxEditorJSService.html":{},"components/PageContainerComponent.html":{},"interfaces/PluginConfig.html":{},"interfaces/PluginConfig-1.html":{},"interfaces/TinynodeDemos.html":{},"interfaces/TinynodeDemos-1.html":{},"interfaces/ToolSettingsMap.html":{},"interfaces/ToolSettingsMap-1.html":{},"miscellaneous/variables.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-readme.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-readme/ngx-editorjs-changelog.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-plugins-readme/ngx-editorjs-plugins-changelog.html":{}}}],["initialblock",{"_index":601,"title":{},"body":{"interfaces/EditorJSConfig.html":{},"components/NgxEditorJSBaseComponent.html":{},"components/NgxEditorJSComponent.html":{},"interfaces/NgxEditorJSConfig.html":{},"directives/NgxEditorJSDirective.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-readme.html":{}}}],["initialized",{"_index":77,"title":{},"body":{"components/AppContainerComponent.html":{},"injectables/NgxEditorJSPluginService.html":{}}}],["initialplugins",{"_index":489,"title":{},"body":{"interfaces/BasePlugin.html":{},"interfaces/BasePlugin-1.html":{},"injectables/NgxEditorJSPluginService.html":{},"interfaces/PluginConfig.html":{},"interfaces/PluginConfig-1.html":{},"interfaces/ToolSettingsMap.html":{},"interfaces/ToolSettingsMap-1.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["inject",{"_index":1377,"title":{},"body":{"injectables/NgxEditorJSPluginService.html":{},"injectables/NgxEditorJSService.html":{}}}],["inject(ngx_editorjs_config",{"_index":1437,"title":{},"body":{"injectables/NgxEditorJSService.html":{}}}],["injectable",{"_index":318,"title":{"injectables/AppService.html":{},"injectables/AppService-1.html":{},"injectables/ApplicationQuery.html":{},"injectables/ApplicationQuery-1.html":{},"injectables/ApplicationStore.html":{},"injectables/ApplicationStore-1.html":{},"injectables/MockNgZone.html":{},"injectables/NgxEditorJSEffects.html":{},"injectables/NgxEditorJSPluginService.html":{},"injectables/NgxEditorJSService.html":{},"injectables/PagesQuery.html":{},"injectables/PagesService.html":{},"injectables/PagesStore.html":{},"injectables/PluginCode.html":{},"injectables/PluginHeader.html":{},"injectables/PluginImage.html":{},"injectables/PluginLink.html":{},"injectables/PluginList.html":{},"injectables/PluginMarker.html":{},"injectables/PluginParagraph.html":{},"injectables/PluginSimpleImage.html":{}},"body":{"injectables/AppService.html":{},"injectables/AppService-1.html":{},"injectables/ApplicationQuery.html":{},"injectables/ApplicationQuery-1.html":{},"injectables/ApplicationStore.html":{},"injectables/ApplicationStore-1.html":{},"injectables/MockNgZone.html":{},"injectables/NgxEditorJSEffects.html":{},"injectables/NgxEditorJSPluginService.html":{},"injectables/NgxEditorJSService.html":{},"injectables/PagesQuery.html":{},"injectables/PagesService.html":{},"interfaces/PagesState.html":{},"injectables/PagesStore.html":{},"injectables/PluginCode.html":{},"injectables/PluginHeader.html":{},"injectables/PluginImage.html":{},"injectables/PluginLink.html":{},"injectables/PluginList.html":{},"injectables/PluginMarker.html":{},"injectables/PluginParagraph.html":{},"injectables/PluginSimpleImage.html":{},"coverage.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-readme/ngx-editorjs-changelog.html":{}}}],["injectables",{"_index":319,"title":{},"body":{"injectables/AppService.html":{},"injectables/AppService-1.html":{},"injectables/ApplicationQuery.html":{},"injectables/ApplicationQuery-1.html":{},"injectables/ApplicationStore.html":{},"injectables/ApplicationStore-1.html":{},"injectables/MockNgZone.html":{},"injectables/NgxEditorJSEffects.html":{},"injectables/NgxEditorJSPluginService.html":{},"injectables/NgxEditorJSService.html":{},"injectables/PagesQuery.html":{},"injectables/PagesService.html":{},"injectables/PagesStore.html":{},"injectables/PluginCode.html":{},"injectables/PluginHeader.html":{},"injectables/PluginImage.html":{},"injectables/PluginLink.html":{},"injectables/PluginList.html":{},"injectables/PluginMarker.html":{},"injectables/PluginParagraph.html":{},"injectables/PluginSimpleImage.html":{},"overview.html":{}}}],["injected",{"_index":634,"title":{},"body":{"interfaces/EditorJSConfig.html":{},"interfaces/NgxEditorJSConfig.html":{},"injectables/NgxEditorJSPluginService.html":{},"miscellaneous/variables.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-readme.html":{}}}],["injecting",{"_index":630,"title":{},"body":{"interfaces/EditorJSConfig.html":{},"interfaces/NgxEditorJSConfig.html":{},"miscellaneous/variables.html":{}}}],["injection",{"_index":486,"title":{},"body":{"interfaces/BasePlugin.html":{},"interfaces/BasePlugin-1.html":{},"interfaces/EditorJSConfig.html":{},"interfaces/EditorJSInstanceConfig.html":{},"interfaces/InjectorMethodOption.html":{},"interfaces/NgxEditorJSConfig.html":{},"interfaces/PluginConfig.html":{},"interfaces/PluginConfig-1.html":{},"interfaces/ToolSettingsMap.html":{},"interfaces/ToolSettingsMap-1.html":{},"miscellaneous/variables.html":{}}}],["injectiontoken",{"_index":475,"title":{},"body":{"interfaces/BasePlugin.html":{},"interfaces/BasePlugin-1.html":{},"interfaces/EditorJSConfig.html":{},"interfaces/EditorJSInstanceConfig.html":{},"interfaces/InjectorMethodOption.html":{},"interfaces/NgxEditorJSConfig.html":{},"interfaces/PluginConfig.html":{},"interfaces/PluginConfig-1.html":{},"interfaces/ToolSettingsMap.html":{},"interfaces/ToolSettingsMap-1.html":{}}}],["injectiontoken('editior_js_instance",{"_index":636,"title":{},"body":{"interfaces/EditorJSConfig.html":{},"interfaces/NgxEditorJSConfig.html":{},"miscellaneous/variables.html":{}}}],["injectiontoken('editorjs_module_import",{"_index":647,"title":{},"body":{"interfaces/EditorJSInstanceConfig.html":{},"interfaces/InjectorMethodOption.html":{},"miscellaneous/variables.html":{}}}],["injectiontoken('editorjsinstance",{"_index":649,"title":{},"body":{"interfaces/EditorJSInstanceConfig.html":{},"interfaces/InjectorMethodOption.html":{},"miscellaneous/variables.html":{}}}],["injectiontoken('for_root_options_token",{"_index":633,"title":{},"body":{"interfaces/EditorJSConfig.html":{},"interfaces/NgxEditorJSConfig.html":{},"miscellaneous/variables.html":{}}}],["injectiontoken('initialplugins",{"_index":490,"title":{},"body":{"interfaces/BasePlugin.html":{},"interfaces/BasePlugin-1.html":{},"interfaces/PluginConfig.html":{},"interfaces/PluginConfig-1.html":{},"interfaces/ToolSettingsMap.html":{},"interfaces/ToolSettingsMap-1.html":{},"miscellaneous/variables.html":{}}}],["injectiontoken('ngx_editorjs_config",{"_index":628,"title":{},"body":{"interfaces/EditorJSConfig.html":{},"interfaces/NgxEditorJSConfig.html":{},"miscellaneous/variables.html":{}}}],["injectiontoken('userplugins",{"_index":494,"title":{},"body":{"interfaces/BasePlugin.html":{},"interfaces/BasePlugin-1.html":{},"interfaces/PluginConfig.html":{},"interfaces/PluginConfig-1.html":{},"interfaces/ToolSettingsMap.html":{},"interfaces/ToolSettingsMap-1.html":{},"miscellaneous/variables.html":{}}}],["injector",{"_index":650,"title":{},"body":{"interfaces/EditorJSInstanceConfig.html":{},"interfaces/InjectorMethodOption.html":{},"modules/NgxEditorJSModule.html":{},"injectables/NgxEditorJSService.html":{},"changelog.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-readme/ngx-editorjs-changelog.html":{}}}],["injector.ts",{"_index":2028,"title":{},"body":{"coverage.html":{}}}],["injectormethodoption",{"_index":651,"title":{"interfaces/InjectorMethodOption.html":{}},"body":{"interfaces/EditorJSInstanceConfig.html":{},"interfaces/InjectorMethodOption.html":{},"injectables/NgxEditorJSService.html":{},"coverage.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-readme/ngx-editorjs-changelog.html":{}}}],["inline",{"_index":179,"title":{},"body":{"components/AppContainerComponent.html":{},"components/NavBarComponent.html":{},"modules/NgxEditorjsPluginsModule.html":{},"injectables/PluginMarker.html":{},"modules/PluginMarkerModule.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-plugins-readme.html":{}}}],["input",{"_index":115,"title":{},"body":{"components/AppContainerComponent.html":{},"interfaces/EditorJSMaterialForm.html":{},"components/NavBarComponent.html":{},"components/NgxEditorJSBaseComponent.html":{},"components/NgxEditorJSDemoInfoComponent.html":{},"directives/NgxEditorJSDirective.html":{},"components/SidebarComponent.html":{},"todo.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-readme/ngx-editorjs-changelog.html":{}}}],["input('disabled",{"_index":718,"title":{},"body":{"interfaces/EditorJSMaterialForm.html":{}}}],["input('focused",{"_index":705,"title":{},"body":{"interfaces/EditorJSMaterialForm.html":{}}}],["input('placeholder",{"_index":700,"title":{},"body":{"interfaces/EditorJSMaterialForm.html":{}}}],["input('required",{"_index":712,"title":{},"body":{"interfaces/EditorJSMaterialForm.html":{}}}],["input('value",{"_index":695,"title":{},"body":{"interfaces/EditorJSMaterialForm.html":{}}}],["inputconfig",{"_index":2078,"title":{},"body":{"miscellaneous/functions.html":{}}}],["inputs",{"_index":41,"title":{},"body":{"components/AppContainerComponent.html":{},"components/NavBarComponent.html":{},"components/NgxEditorJSBaseComponent.html":{},"components/NgxEditorJSComponent.html":{},"components/NgxEditorJSDemoInfoComponent.html":{},"directives/NgxEditorJSDirective.html":{},"components/SidebarComponent.html":{}}}],["inside",{"_index":756,"title":{},"body":{"interfaces/EditorJSMaterialForm.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-readme.html":{}}}],["install",{"_index":1803,"title":{},"body":{"contributing.html":{},"dependencies.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-readme.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-plugins-readme.html":{}}}],["installed",{"_index":2200,"title":{},"body":{"additional-documentation/tinynodes-library-docs/ngx-editorjs-readme.html":{}}}],["installing",{"_index":2197,"title":{},"body":{"additional-documentation/tinynodes-library-docs/ngx-editorjs-readme.html":{}}}],["instance",{"_index":437,"title":{},"body":{"injectables/ApplicationQuery.html":{},"injectables/ApplicationQuery-1.html":{},"interfaces/BlocksMap.html":{},"interfaces/ChangeMap.html":{},"interfaces/CreateEditorJSOptions.html":{},"interfaces/EditorJSAction.html":{},"interfaces/EditorJSConfig.html":{},"interfaces/EditorJSInstanceConfig.html":{},"interfaces/EditorJSMaterialForm.html":{},"interfaces/EditorMap.html":{},"interfaces/EventMap.html":{},"interfaces/EventType.html":{},"components/FormContainerComponent.html":{},"interfaces/InjectorMethodOption.html":{},"components/NgxEditorJSBaseComponent.html":{},"components/NgxEditorJSComponent.html":{},"interfaces/NgxEditorJSConfig.html":{},"components/NgxEditorJSDemoHomeComponent.html":{},"directives/NgxEditorJSDirective.html":{},"modules/NgxEditorJSModule.html":{},"injectables/NgxEditorJSPluginService.html":{},"injectables/NgxEditorJSService.html":{},"modules/NgxEditorjsNgrxModule.html":{},"components/PageContainerComponent.html":{},"interfaces/ReadyMap.html":{},"changelog.html":{},"index.html":{},"miscellaneous/variables.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-readme.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-readme/ngx-editorjs-changelog.html":{}}}],["instances",{"_index":535,"title":{},"body":{"interfaces/BlocksMap.html":{},"interfaces/ChangeMap.html":{},"interfaces/EditorMap.html":{},"interfaces/EventMap.html":{},"interfaces/EventType.html":{},"injectables/NgxEditorJSPluginService.html":{},"injectables/NgxEditorJSService.html":{},"interfaces/ReadyMap.html":{},"contributing.html":{},"index.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-readme.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-readme/ngx-editorjs-changelog.html":{}}}],["instructions",{"_index":1192,"title":{},"body":{"components/NgxEditorJSDemoInfoComponent.html":{}}}],["insulting/derogatory",{"_index":1882,"title":{},"body":{"contributing.html":{}}}],["interact",{"_index":2085,"title":{},"body":{"index.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-readme.html":{}}}],["interactions",{"_index":1800,"title":{},"body":{"contributing.html":{}}}],["interest",{"_index":1827,"title":{},"body":{"contributing.html":{}}}],["interface",{"_index":400,"title":{"interfaces/ApplicationData.html":{},"interfaces/ApplicationData-1.html":{},"interfaces/ApplicationState.html":{},"interfaces/ApplicationState-1.html":{},"interfaces/BasePlugin.html":{},"interfaces/BasePlugin-1.html":{},"interfaces/Block.html":{},"interfaces/BlocksMap.html":{},"interfaces/ChangeMap.html":{},"interfaces/CreateEditorJSOptions.html":{},"interfaces/DemoData.html":{},"interfaces/DemoData-1.html":{},"interfaces/EditorJSAction.html":{},"interfaces/EditorJSConfig.html":{},"interfaces/EditorJSInstanceConfig.html":{},"interfaces/EditorJSMaterialForm.html":{},"interfaces/EditorMap.html":{},"interfaces/EventMap.html":{},"interfaces/EventType.html":{},"interfaces/Header.html":{},"interfaces/HeaderBlock.html":{},"interfaces/Image.html":{},"interfaces/ImageBlock.html":{},"interfaces/InjectorMethodOption.html":{},"interfaces/List.html":{},"interfaces/ListBlock.html":{},"interfaces/MenuGroup.html":{},"interfaces/MenuGroup-1.html":{},"interfaces/MenuItem.html":{},"interfaces/MenuItem-1.html":{},"interfaces/NgxEditorJSConfig.html":{},"interfaces/NgxEditorJSDemo.html":{},"interfaces/NgxEditorJSDemo-1.html":{},"interfaces/NgxEditorJSDemoData.html":{},"interfaces/NgxEditorJSDemoData-1.html":{},"interfaces/Page.html":{},"interfaces/PageBlock.html":{},"interfaces/PagesState.html":{},"interfaces/Paragraph.html":{},"interfaces/ParagraphBlock.html":{},"interfaces/PluginConfig.html":{},"interfaces/PluginConfig-1.html":{},"interfaces/ReadyMap.html":{},"interfaces/Tag.html":{},"interfaces/TinynodeDemos.html":{},"interfaces/TinynodeDemos-1.html":{},"interfaces/ToolSettingsMap.html":{},"interfaces/ToolSettingsMap-1.html":{}},"body":{"interfaces/ApplicationData.html":{},"interfaces/ApplicationData-1.html":{},"interfaces/ApplicationState.html":{},"interfaces/ApplicationState-1.html":{},"interfaces/BasePlugin.html":{},"interfaces/BasePlugin-1.html":{},"interfaces/Block.html":{},"interfaces/BlocksMap.html":{},"interfaces/ChangeMap.html":{},"interfaces/CreateEditorJSOptions.html":{},"interfaces/DemoData.html":{},"interfaces/DemoData-1.html":{},"interfaces/EditorJSAction.html":{},"interfaces/EditorJSConfig.html":{},"interfaces/EditorJSInstanceConfig.html":{},"interfaces/EditorJSMaterialForm.html":{},"interfaces/EditorMap.html":{},"interfaces/EventMap.html":{},"interfaces/EventType.html":{},"interfaces/Header.html":{},"interfaces/HeaderBlock.html":{},"interfaces/Image.html":{},"interfaces/ImageBlock.html":{},"interfaces/InjectorMethodOption.html":{},"interfaces/List.html":{},"interfaces/ListBlock.html":{},"interfaces/MenuGroup.html":{},"interfaces/MenuGroup-1.html":{},"interfaces/MenuItem.html":{},"interfaces/MenuItem-1.html":{},"components/NgxEditorJSBaseComponent.html":{},"interfaces/NgxEditorJSConfig.html":{},"interfaces/NgxEditorJSDemo.html":{},"interfaces/NgxEditorJSDemo-1.html":{},"interfaces/NgxEditorJSDemoData.html":{},"interfaces/NgxEditorJSDemoData-1.html":{},"interfaces/Page.html":{},"interfaces/PageBlock.html":{},"interfaces/PagesState.html":{},"injectables/PagesStore.html":{},"interfaces/Paragraph.html":{},"interfaces/ParagraphBlock.html":{},"interfaces/PluginConfig.html":{},"interfaces/PluginConfig-1.html":{},"interfaces/ReadyMap.html":{},"interfaces/Tag.html":{},"interfaces/TinynodeDemos.html":{},"interfaces/TinynodeDemos-1.html":{},"interfaces/ToolSettingsMap.html":{},"interfaces/ToolSettingsMap-1.html":{},"contributing.html":{},"coverage.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-readme.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-readme/ngx-editorjs-changelog.html":{}}}],["interfaces",{"_index":401,"title":{},"body":{"interfaces/ApplicationData.html":{},"interfaces/ApplicationData-1.html":{},"interfaces/ApplicationState.html":{},"interfaces/ApplicationState-1.html":{},"interfaces/BasePlugin.html":{},"interfaces/BasePlugin-1.html":{},"interfaces/Block.html":{},"interfaces/BlocksMap.html":{},"interfaces/ChangeMap.html":{},"interfaces/CreateEditorJSOptions.html":{},"interfaces/DemoData.html":{},"interfaces/DemoData-1.html":{},"interfaces/EditorJSAction.html":{},"interfaces/EditorJSConfig.html":{},"interfaces/EditorJSInstanceConfig.html":{},"interfaces/EditorJSMaterialForm.html":{},"interfaces/EditorMap.html":{},"interfaces/EventMap.html":{},"interfaces/EventType.html":{},"interfaces/Header.html":{},"interfaces/HeaderBlock.html":{},"interfaces/Image.html":{},"interfaces/ImageBlock.html":{},"interfaces/InjectorMethodOption.html":{},"interfaces/List.html":{},"interfaces/ListBlock.html":{},"interfaces/MenuGroup.html":{},"interfaces/MenuGroup-1.html":{},"interfaces/MenuItem.html":{},"interfaces/MenuItem-1.html":{},"interfaces/NgxEditorJSConfig.html":{},"interfaces/NgxEditorJSDemo.html":{},"interfaces/NgxEditorJSDemo-1.html":{},"interfaces/NgxEditorJSDemoData.html":{},"interfaces/NgxEditorJSDemoData-1.html":{},"interfaces/Page.html":{},"interfaces/PageBlock.html":{},"interfaces/PagesState.html":{},"interfaces/Paragraph.html":{},"interfaces/ParagraphBlock.html":{},"interfaces/PluginConfig.html":{},"interfaces/PluginConfig-1.html":{},"interfaces/ReadyMap.html":{},"interfaces/Tag.html":{},"interfaces/TinynodeDemos.html":{},"interfaces/TinynodeDemos-1.html":{},"interfaces/ToolSettingsMap.html":{},"interfaces/ToolSettingsMap-1.html":{},"overview.html":{}}}],["internal",{"_index":629,"title":{},"body":{"interfaces/EditorJSConfig.html":{},"interfaces/EditorJSInstanceConfig.html":{},"interfaces/EditorJSMaterialForm.html":{},"components/FormContainerComponent.html":{},"interfaces/InjectorMethodOption.html":{},"modules/MaterialModule.html":{},"components/NavBarComponent.html":{},"components/NgxEditorJSBaseComponent.html":{},"components/NgxEditorJSComponent.html":{},"interfaces/NgxEditorJSConfig.html":{},"injectables/NgxEditorJSService.html":{},"components/PageContainerComponent.html":{},"modules/PageStoreModule.html":{},"miscellaneous/variables.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-readme/ngx-editorjs-changelog.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-plugins-readme/ngx-editorjs-plugins-changelog.html":{}}}],["internally",{"_index":1747,"title":{},"body":{"changelog.html":{}}}],["interval.interval",{"_index":1103,"title":{},"body":{"components/NgxEditorJSBaseComponent.html":{}}}],["investigated",{"_index":1953,"title":{},"body":{"contributing.html":{}}}],["ispanelopen",{"_index":1176,"title":{},"body":{"components/NgxEditorJSDemoInfoComponent.html":{}}}],["isready",{"_index":966,"title":{},"body":{"classes/MockEditorJS.html":{},"classes/MockPlugin.html":{},"components/NgxEditorJSBaseComponent.html":{},"injectables/NgxEditorJSService.html":{},"classes/TestClass.html":{}}}],["isready(undefined",{"_index":1420,"title":{},"body":{"injectables/NgxEditorJSService.html":{}}}],["issaved",{"_index":790,"title":{},"body":{"components/FormContainerComponent.html":{},"components/NgxEditorJSBaseComponent.html":{},"components/NgxEditorJSComponent.html":{}}}],["issue",{"_index":1794,"title":{},"body":{"contributing.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-readme/ngx-editorjs-changelog.html":{}}}],["issues",{"_index":1767,"title":{},"body":{"changelog.html":{},"contributing.html":{}}}],["istouched",{"_index":1042,"title":{},"body":{"components/NgxEditorJSBaseComponent.html":{},"components/NgxEditorJSComponent.html":{},"directives/NgxEditorJSDirective.html":{}}}],["it's",{"_index":87,"title":{},"body":{"components/AppContainerComponent.html":{},"directives/NgxEditorJSDirective.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-readme.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-readme/ngx-editorjs-changelog.html":{}}}],["item",{"_index":408,"title":{},"body":{"interfaces/ApplicationData.html":{},"interfaces/ApplicationData-1.html":{},"interfaces/MenuGroup.html":{},"interfaces/MenuGroup-1.html":{},"interfaces/MenuItem.html":{},"interfaces/MenuItem-1.html":{}}}],["items",{"_index":169,"title":{},"body":{"components/AppContainerComponent.html":{},"interfaces/ApplicationData.html":{},"interfaces/ApplicationData-1.html":{},"interfaces/Block.html":{},"interfaces/Header.html":{},"interfaces/HeaderBlock.html":{},"interfaces/Image.html":{},"interfaces/ImageBlock.html":{},"interfaces/List.html":{},"interfaces/ListBlock.html":{},"interfaces/MenuGroup.html":{},"interfaces/MenuGroup-1.html":{},"interfaces/MenuItem.html":{},"interfaces/MenuItem-1.html":{},"components/NavBarComponent.html":{},"interfaces/Paragraph.html":{},"interfaces/ParagraphBlock.html":{}}}],["js",{"_index":2057,"title":{},"body":{"dependencies.html":{},"miscellaneous/variables.html":{}}}],["js/code",{"_index":1646,"title":{},"body":{"modules/PluginCodeModule.html":{}}}],["js/header",{"_index":1657,"title":{},"body":{"modules/PluginHeaderModule.html":{}}}],["js/image",{"_index":1666,"title":{},"body":{"modules/PluginImageModule.html":{},"modules/PluginSimpleImageModule.html":{}}}],["js/link",{"_index":1675,"title":{},"body":{"modules/PluginLinkModule.html":{}}}],["js/list",{"_index":1684,"title":{},"body":{"modules/PluginListModule.html":{}}}],["js/marker",{"_index":1696,"title":{},"body":{"modules/PluginMarkerModule.html":{}}}],["js/paragraph",{"_index":1705,"title":{},"body":{"modules/PluginParagraphModule.html":{}}}],["json",{"_index":907,"title":{},"body":{"components/FormContainerComponent.html":{},"components/PageContainerComponent.html":{}}}],["json.stringify(blocks",{"_index":1576,"title":{},"body":{"components/PageContainerComponent.html":{}}}],["keep",{"_index":2213,"title":{},"body":{"additional-documentation/tinynodes-library-docs/ngx-editorjs-readme/ngx-editorjs-changelog.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-plugins-readme/ngx-editorjs-plugins-changelog.html":{}}}],["key",{"_index":353,"title":{},"body":{"injectables/AppService.html":{},"injectables/AppService-1.html":{},"interfaces/ApplicationData.html":{},"interfaces/ApplicationData-1.html":{},"interfaces/ApplicationState.html":{},"interfaces/ApplicationState-1.html":{},"interfaces/BasePlugin.html":{},"interfaces/BasePlugin-1.html":{},"interfaces/Block.html":{},"interfaces/BlocksMap.html":{},"interfaces/ChangeMap.html":{},"interfaces/DemoData.html":{},"interfaces/DemoData-1.html":{},"interfaces/EditorMap.html":{},"interfaces/EventMap.html":{},"interfaces/EventType.html":{},"interfaces/Header.html":{},"interfaces/HeaderBlock.html":{},"interfaces/Image.html":{},"interfaces/ImageBlock.html":{},"interfaces/List.html":{},"interfaces/ListBlock.html":{},"interfaces/MenuGroup.html":{},"interfaces/MenuGroup-1.html":{},"interfaces/MenuItem.html":{},"interfaces/MenuItem-1.html":{},"interfaces/NgxEditorJSDemo.html":{},"interfaces/NgxEditorJSDemo-1.html":{},"interfaces/NgxEditorJSDemoData.html":{},"interfaces/NgxEditorJSDemoData-1.html":{},"injectables/NgxEditorJSPluginService.html":{},"interfaces/Page.html":{},"interfaces/PageBlock.html":{},"interfaces/Paragraph.html":{},"interfaces/ParagraphBlock.html":{},"interfaces/PluginConfig.html":{},"interfaces/PluginConfig-1.html":{},"interfaces/ReadyMap.html":{},"interfaces/Tag.html":{},"interfaces/TinynodeDemos.html":{},"interfaces/TinynodeDemos-1.html":{},"interfaces/ToolSettingsMap.html":{},"interfaces/ToolSettingsMap-1.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-readme.html":{}}}],["keys",{"_index":448,"title":{},"body":{"interfaces/ApplicationState.html":{},"interfaces/ApplicationState-1.html":{},"interfaces/DemoData.html":{},"interfaces/DemoData-1.html":{},"interfaces/NgxEditorJSDemo.html":{},"interfaces/NgxEditorJSDemo-1.html":{},"interfaces/NgxEditorJSDemoData.html":{},"interfaces/NgxEditorJSDemoData-1.html":{},"injectables/NgxEditorJSPluginService.html":{},"injectables/NgxEditorJSService.html":{},"interfaces/TinynodeDemos.html":{},"interfaces/TinynodeDemos-1.html":{},"miscellaneous/enumerations.html":{}}}],["kind",{"_index":2129,"title":{},"body":{"license.html":{}}}],["label",{"_index":190,"title":{},"body":{"components/AppContainerComponent.html":{},"interfaces/ApplicationData.html":{},"interfaces/ApplicationData-1.html":{},"interfaces/EditorJSMaterialForm.html":{},"interfaces/MenuGroup.html":{},"interfaces/MenuGroup-1.html":{},"interfaces/MenuItem.html":{},"interfaces/MenuItem-1.html":{},"components/NavBarComponent.html":{}}}],["language",{"_index":1858,"title":{},"body":{"contributing.html":{}}}],["last",{"_index":541,"title":{},"body":{"interfaces/BlocksMap.html":{},"interfaces/ChangeMap.html":{},"interfaces/EditorJSConfig.html":{},"interfaces/EditorMap.html":{},"interfaces/EventMap.html":{},"interfaces/EventType.html":{},"components/NgxEditorJSBaseComponent.html":{},"components/NgxEditorJSComponent.html":{},"interfaces/NgxEditorJSConfig.html":{},"directives/NgxEditorJSDirective.html":{},"injectables/NgxEditorJSService.html":{},"interfaces/ReadyMap.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-readme.html":{}}}],["layer",{"_index":1804,"title":{},"body":{"contributing.html":{}}}],["layout",{"_index":265,"title":{},"body":{"modules/AppModule.html":{},"dependencies.html":{}}}],["layoutmodule",{"_index":293,"title":{},"body":{"modules/AppModule.html":{}}}],["leadership",{"_index":1974,"title":{},"body":{"contributing.html":{}}}],["left",{"_index":953,"title":{},"body":{"components/HomePageComponent.html":{},"components/NgxEditorJSComponent.html":{}}}],["legend",{"_index":193,"title":{},"body":{"components/AppContainerComponent.html":{},"modules/AppModule.html":{},"modules/ApplicationDataModule.html":{},"components/FormContainerComponent.html":{},"components/HomePageComponent.html":{},"components/NavBarComponent.html":{},"components/NgxEditorJSBaseComponent.html":{},"components/NgxEditorJSComponent.html":{},"components/NgxEditorJSDemoHomeComponent.html":{},"components/NgxEditorJSDemoInfoComponent.html":{},"modules/NgxEditorJSModule.html":{},"modules/NgxEditorjsDemoModule.html":{},"modules/NgxEditorjsNgrxModule.html":{},"modules/NgxEditorjsPluginsModule.html":{},"modules/NgxTinynodesCoreModule.html":{},"components/PageContainerComponent.html":{},"modules/PageStoreModule.html":{},"modules/PluginCodeModule.html":{},"modules/PluginHeaderModule.html":{},"modules/PluginImageModule.html":{},"modules/PluginLinkModule.html":{},"modules/PluginListModule.html":{},"modules/PluginMarkerModule.html":{},"modules/PluginParagraphModule.html":{},"modules/PluginSimpleImageModule.html":{},"components/SidebarComponent.html":{},"overview.html":{}}}],["level",{"_index":510,"title":{},"body":{"interfaces/Block.html":{},"components/FormContainerComponent.html":{},"interfaces/Header.html":{},"interfaces/HeaderBlock.html":{},"interfaces/Image.html":{},"interfaces/ImageBlock.html":{},"interfaces/List.html":{},"interfaces/ListBlock.html":{},"interfaces/Paragraph.html":{},"interfaces/ParagraphBlock.html":{},"changelog.html":{},"contributing.html":{}}}],["liability",{"_index":2144,"title":{},"body":{"license.html":{}}}],["liable",{"_index":2141,"title":{},"body":{"license.html":{}}}],["lib/types/config",{"_index":977,"title":{},"body":{"classes/MockEditorJS.html":{},"classes/MockPlugin.html":{},"classes/TestClass.html":{}}}],["lib/types/plugins",{"_index":976,"title":{},"body":{"classes/MockEditorJS.html":{},"classes/MockPlugin.html":{},"classes/TestClass.html":{}}}],["libraries",{"_index":946,"title":{},"body":{"components/HomePageComponent.html":{},"changelog.html":{},"index.html":{},"additional-documentation/tinynodes-library-docs.html":{}}}],["library",{"_index":1740,"title":{"additional-documentation/tinynodes-library-docs.html":{}},"body":{"changelog.html":{},"todo.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-readme.html":{}}}],["libs/.../application.model.ts",{"_index":2070,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["libs/.../blocks.ts",{"_index":2171,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["libs/.../config.ts",{"_index":2173,"title":{},"body":{"miscellaneous/variables.html":{}}}],["libs/.../container.class.ts",{"_index":2174,"title":{},"body":{"miscellaneous/variables.html":{}}}],["libs/.../editor",{"_index":2074,"title":{},"body":{"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["libs/.../editorjs",{"_index":2072,"title":{},"body":{"miscellaneous/enumerations.html":{},"miscellaneous/variables.html":{}}}],["libs/.../index.ts",{"_index":2076,"title":{},"body":{"miscellaneous/functions.html":{}}}],["libs/.../injector.ts",{"_index":2175,"title":{},"body":{"miscellaneous/variables.html":{}}}],["libs/.../module",{"_index":2075,"title":{},"body":{"miscellaneous/functions.html":{}}}],["libs/.../ngx",{"_index":2073,"title":{},"body":{"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["libs/.../plugins.ts",{"_index":2179,"title":{},"body":{"miscellaneous/variables.html":{}}}],["libs/.../tag.component.ts",{"_index":2180,"title":{},"body":{"miscellaneous/variables.html":{}}}],["libs/ngx",{"_index":320,"title":{},"body":{"injectables/AppService.html":{},"interfaces/ApplicationData.html":{},"modules/ApplicationDataModule.html":{},"injectables/ApplicationQuery.html":{},"interfaces/ApplicationState.html":{},"injectables/ApplicationStore.html":{},"interfaces/BasePlugin.html":{},"interfaces/BasePlugin-1.html":{},"interfaces/Block.html":{},"interfaces/BlocksMap.html":{},"interfaces/ChangeMap.html":{},"classes/Changed.html":{},"interfaces/CreateEditorJSOptions.html":{},"interfaces/DemoData.html":{},"interfaces/EditorJSAction.html":{},"interfaces/EditorJSConfig.html":{},"interfaces/EditorJSInstanceConfig.html":{},"interfaces/EditorJSMaterialForm.html":{},"interfaces/EditorMap.html":{},"interfaces/EventMap.html":{},"interfaces/EventType.html":{},"components/FormContainerComponent.html":{},"interfaces/Header.html":{},"interfaces/HeaderBlock.html":{},"interfaces/Image.html":{},"interfaces/ImageBlock.html":{},"interfaces/InjectorMethodOption.html":{},"interfaces/List.html":{},"interfaces/ListBlock.html":{},"interfaces/MenuGroup.html":{},"interfaces/MenuItem.html":{},"classes/MockEditorJS.html":{},"injectables/MockNgZone.html":{},"classes/MockPlugin.html":{},"components/NgxEditorJSBaseComponent.html":{},"components/NgxEditorJSComponent.html":{},"interfaces/NgxEditorJSConfig.html":{},"interfaces/NgxEditorJSDemo.html":{},"interfaces/NgxEditorJSDemoData.html":{},"components/NgxEditorJSDemoHomeComponent.html":{},"components/NgxEditorJSDemoInfoComponent.html":{},"directives/NgxEditorJSDirective.html":{},"injectables/NgxEditorJSEffects.html":{},"modules/NgxEditorJSModule.html":{},"injectables/NgxEditorJSPluginService.html":{},"injectables/NgxEditorJSService.html":{},"modules/NgxEditorjsDemoModule.html":{},"modules/NgxEditorjsNgrxModule.html":{},"modules/NgxEditorjsPluginsModule.html":{},"modules/NgxHideableHeaderDemoModule.html":{},"modules/NgxTinynodesCoreMaterialModule.html":{},"modules/NgxTinynodesCoreModule.html":{},"classes/NotReady.html":{},"interfaces/Page.html":{},"interfaces/PageBlock.html":{},"components/PageContainerComponent.html":{},"modules/PageStoreModule.html":{},"injectables/PagesQuery.html":{},"injectables/PagesService.html":{},"interfaces/PagesState.html":{},"injectables/PagesStore.html":{},"interfaces/Paragraph.html":{},"interfaces/ParagraphBlock.html":{},"injectables/PluginCode.html":{},"modules/PluginCodeModule.html":{},"interfaces/PluginConfig.html":{},"interfaces/PluginConfig-1.html":{},"injectables/PluginHeader.html":{},"modules/PluginHeaderModule.html":{},"injectables/PluginImage.html":{},"modules/PluginImageModule.html":{},"injectables/PluginLink.html":{},"modules/PluginLinkModule.html":{},"injectables/PluginList.html":{},"modules/PluginListModule.html":{},"injectables/PluginMarker.html":{},"modules/PluginMarkerModule.html":{},"injectables/PluginParagraph.html":{},"modules/PluginParagraphModule.html":{},"injectables/PluginSimpleImage.html":{},"modules/PluginSimpleImageModule.html":{},"classes/Ready.html":{},"interfaces/ReadyMap.html":{},"classes/SaveEnd.html":{},"classes/SaveStart.html":{},"interfaces/Tag.html":{},"classes/TestClass.html":{},"interfaces/TinynodeDemos.html":{},"interfaces/ToolSettingsMap.html":{},"interfaces/ToolSettingsMap-1.html":{},"coverage.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["licence",{"_index":2096,"title":{},"body":{"license.html":{}}}],["license",{"_index":2093,"title":{"license.html":{}},"body":{}}],["life",{"_index":757,"title":{},"body":{"interfaces/EditorJSMaterialForm.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-readme.html":{}}}],["lightgray",{"_index":167,"title":{},"body":{"components/AppContainerComponent.html":{},"components/NavBarComponent.html":{}}}],["limitation",{"_index":2109,"title":{},"body":{"license.html":{}}}],["limited",{"_index":2132,"title":{},"body":{"license.html":{}}}],["line",{"_index":191,"title":{},"body":{"components/AppContainerComponent.html":{},"components/NavBarComponent.html":{}}}],["link",{"_index":414,"title":{},"body":{"interfaces/ApplicationData.html":{},"interfaces/ApplicationData-1.html":{},"interfaces/MenuGroup.html":{},"interfaces/MenuGroup-1.html":{},"interfaces/MenuItem.html":{},"interfaces/MenuItem-1.html":{},"injectables/MockNgZone.html":{},"injectables/PluginLink.html":{}}}],["link.label",{"_index":1195,"title":{},"body":{"components/NgxEditorJSDemoInfoComponent.html":{}}}],["link.plugin",{"_index":1674,"title":{},"body":{"modules/PluginLinkModule.html":{}}}],["links",{"_index":152,"title":{},"body":{"components/AppContainerComponent.html":{},"interfaces/ApplicationState.html":{},"interfaces/DemoData.html":{},"components/FormContainerComponent.html":{},"components/HomePageComponent.html":{},"interfaces/NgxEditorJSDemo.html":{},"interfaces/NgxEditorJSDemoData.html":{},"components/NgxEditorJSDemoHomeComponent.html":{},"components/NgxEditorJSDemoInfoComponent.html":{},"components/PageContainerComponent.html":{},"interfaces/TinynodeDemos.html":{},"index.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-readme.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-plugins-readme.html":{}}}],["list",{"_index":170,"title":{"interfaces/List.html":{}},"body":{"components/AppContainerComponent.html":{},"interfaces/ApplicationData.html":{},"interfaces/ApplicationData-1.html":{},"interfaces/Block.html":{},"components/FormContainerComponent.html":{},"interfaces/Header.html":{},"interfaces/HeaderBlock.html":{},"components/HomePageComponent.html":{},"interfaces/Image.html":{},"interfaces/ImageBlock.html":{},"interfaces/List.html":{},"interfaces/ListBlock.html":{},"interfaces/MenuGroup.html":{},"interfaces/MenuGroup-1.html":{},"interfaces/MenuItem.html":{},"interfaces/MenuItem-1.html":{},"components/NavBarComponent.html":{},"components/PageContainerComponent.html":{},"interfaces/Paragraph.html":{},"interfaces/ParagraphBlock.html":{},"injectables/PluginList.html":{},"coverage.html":{},"miscellaneous/typealiases.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-readme.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-readme/ngx-editorjs-changelog.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-plugins-readme.html":{}}}],["list.plugin",{"_index":1683,"title":{},"body":{"modules/PluginListModule.html":{}}}],["listblock",{"_index":506,"title":{"interfaces/ListBlock.html":{}},"body":{"interfaces/Block.html":{},"interfaces/Header.html":{},"interfaces/HeaderBlock.html":{},"interfaces/Image.html":{},"interfaces/ImageBlock.html":{},"interfaces/List.html":{},"interfaces/ListBlock.html":{},"interfaces/Paragraph.html":{},"interfaces/ParagraphBlock.html":{},"coverage.html":{},"miscellaneous/typealiases.html":{}}}],["listed",{"_index":2255,"title":{},"body":{"additional-documentation/tinynodes-library-docs/ngx-editorjs-plugins-readme.html":{}}}],["listener",{"_index":759,"title":{},"body":{"interfaces/EditorJSMaterialForm.html":{},"directives/NgxEditorJSDirective.html":{}}}],["liststyle",{"_index":505,"title":{},"body":{"interfaces/Block.html":{},"interfaces/Header.html":{},"interfaces/HeaderBlock.html":{},"interfaces/Image.html":{},"interfaces/ImageBlock.html":{},"interfaces/List.html":{},"interfaces/ListBlock.html":{},"interfaces/Paragraph.html":{},"interfaces/ParagraphBlock.html":{},"miscellaneous/typealiases.html":{}}}],["literal",{"_index":551,"title":{},"body":{"classes/Changed.html":{},"classes/NotReady.html":{},"classes/Ready.html":{},"classes/SaveEnd.html":{},"classes/SaveStart.html":{}}}],["load",{"_index":347,"title":{},"body":{"injectables/AppService.html":{},"injectables/AppService-1.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-readme.html":{}}}],["loaded",{"_index":446,"title":{},"body":{"interfaces/ApplicationState.html":{},"interfaces/ApplicationState-1.html":{},"interfaces/DemoData.html":{},"interfaces/DemoData-1.html":{},"interfaces/NgxEditorJSDemo.html":{},"interfaces/NgxEditorJSDemo-1.html":{},"interfaces/NgxEditorJSDemoData.html":{},"interfaces/NgxEditorJSDemoData-1.html":{},"interfaces/TinynodeDemos.html":{},"interfaces/TinynodeDemos-1.html":{}}}],["loader",{"_index":298,"title":{},"body":{"modules/AppModule.html":{}}}],["loading",{"_index":784,"title":{},"body":{"components/FormContainerComponent.html":{},"modules/NgxTinynodesCoreModule.html":{},"components/PageContainerComponent.html":{}}}],["loads",{"_index":323,"title":{},"body":{"injectables/AppService.html":{},"injectables/AppService-1.html":{},"modules/MaterialModule.html":{}}}],["locations",{"_index":1810,"title":{},"body":{"contributing.html":{}}}],["longer",{"_index":2239,"title":{},"body":{"additional-documentation/tinynodes-library-docs/ngx-editorjs-readme/ngx-editorjs-changelog.html":{}}}],["lot",{"_index":1752,"title":{},"body":{"changelog.html":{}}}],["lots",{"_index":2229,"title":{},"body":{"additional-documentation/tinynodes-library-docs/ngx-editorjs-readme/ngx-editorjs-changelog.html":{}}}],["lt;code",{"_index":916,"title":{},"body":{"components/FormContainerComponent.html":{},"components/PageContainerComponent.html":{}}}],["lt;h1",{"_index":912,"title":{},"body":{"components/FormContainerComponent.html":{},"components/PageContainerComponent.html":{}}}],["lt;h6",{"_index":913,"title":{},"body":{"components/FormContainerComponent.html":{},"components/PageContainerComponent.html":{}}}],["lt;img",{"_index":918,"title":{},"body":{"components/FormContainerComponent.html":{},"components/PageContainerComponent.html":{}}}],["lt;li",{"_index":915,"title":{},"body":{"components/FormContainerComponent.html":{},"components/PageContainerComponent.html":{}}}],["lt;ol",{"_index":914,"title":{},"body":{"components/FormContainerComponent.html":{},"components/PageContainerComponent.html":{}}}],["lt;p",{"_index":911,"title":{},"body":{"components/FormContainerComponent.html":{},"components/PageContainerComponent.html":{}}}],["mail",{"_index":1931,"title":{},"body":{"contributing.html":{}}}],["main",{"_index":13,"title":{},"body":{"components/AppContainerComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"injectables/AppService.html":{},"injectables/AppService-1.html":{},"components/FormContainerComponent.html":{},"components/NavBarComponent.html":{},"directives/NgxEditorJSDirective.html":{},"components/PageContainerComponent.html":{},"changelog.html":{},"miscellaneous/variables.html":{}}}],["mainmenu",{"_index":44,"title":{},"body":{"components/AppContainerComponent.html":{}}}],["maintain",{"_index":1958,"title":{},"body":{"contributing.html":{}}}],["maintainers",{"_index":1831,"title":{},"body":{"contributing.html":{}}}],["make",{"_index":1793,"title":{},"body":{"contributing.html":{}}}],["makes",{"_index":643,"title":{},"body":{"interfaces/EditorJSInstanceConfig.html":{},"interfaces/InjectorMethodOption.html":{},"injectables/NgxEditorJSPluginService.html":{}}}],["making",{"_index":1785,"title":{},"body":{"changelog.html":{},"contributing.html":{}}}],["managing",{"_index":1751,"title":{},"body":{"changelog.html":{}}}],["manually",{"_index":2258,"title":{},"body":{"additional-documentation/tinynodes-library-docs/ngx-editorjs-plugins-readme.html":{}}}],["map",{"_index":361,"title":{},"body":{"injectables/AppService.html":{},"injectables/AppService-1.html":{},"interfaces/BasePlugin.html":{},"interfaces/BasePlugin-1.html":{},"interfaces/BlocksMap.html":{},"interfaces/ChangeMap.html":{},"interfaces/EditorJSInstanceConfig.html":{},"interfaces/EditorMap.html":{},"interfaces/EventMap.html":{},"interfaces/EventType.html":{},"interfaces/InjectorMethodOption.html":{},"components/NgxEditorJSBaseComponent.html":{},"injectables/NgxEditorJSEffects.html":{},"injectables/NgxEditorJSPluginService.html":{},"injectables/NgxEditorJSService.html":{},"components/PageContainerComponent.html":{},"interfaces/PluginConfig.html":{},"interfaces/PluginConfig-1.html":{},"interfaces/ReadyMap.html":{},"interfaces/ToolSettingsMap.html":{},"interfaces/ToolSettingsMap-1.html":{},"miscellaneous/variables.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-readme.html":{}}}],["map((action",{"_index":1299,"title":{},"body":{"injectables/NgxEditorJSEffects.html":{}}}],["map((demodata",{"_index":381,"title":{},"body":{"injectables/AppService.html":{},"injectables/AppService-1.html":{}}}],["map(blocks",{"_index":1575,"title":{},"body":{"components/PageContainerComponent.html":{}}}],["map(interval",{"_index":1102,"title":{},"body":{"components/NgxEditorJSBaseComponent.html":{}}}],["map(menus",{"_index":389,"title":{},"body":{"injectables/AppService.html":{},"injectables/AppService-1.html":{}}}],["map(origin",{"_index":1111,"title":{},"body":{"components/NgxEditorJSBaseComponent.html":{}}}],["map_defaults",{"_index":645,"title":{},"body":{"interfaces/EditorJSInstanceConfig.html":{},"interfaces/InjectorMethodOption.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["maps",{"_index":1406,"title":{},"body":{"injectables/NgxEditorJSService.html":{}}}],["margin",{"_index":174,"title":{},"body":{"components/AppContainerComponent.html":{},"components/NavBarComponent.html":{}}}],["markdown",{"_index":279,"title":{},"body":{"modules/AppModule.html":{},"modules/NgxEditorjsDemoModule.html":{},"dependencies.html":{}}}],["markdownmodule",{"_index":278,"title":{},"body":{"modules/AppModule.html":{},"modules/NgxEditorjsDemoModule.html":{}}}],["markdownmodule.forchild",{"_index":1503,"title":{},"body":{"modules/NgxEditorjsDemoModule.html":{}}}],["markdownmodule.forroot",{"_index":297,"title":{},"body":{"modules/AppModule.html":{}}}],["marker",{"_index":1687,"title":{},"body":{"injectables/PluginMarker.html":{},"modules/PluginMarkerModule.html":{}}}],["marker.plugin",{"_index":1695,"title":{},"body":{"modules/PluginMarkerModule.html":{}}}],["marking",{"_index":2261,"title":{},"body":{"additional-documentation/tinynodes-library-docs/ngx-editorjs-plugins-readme.html":{}}}],["mat",{"_index":155,"title":{},"body":{"components/AppContainerComponent.html":{},"interfaces/EditorJSMaterialForm.html":{},"components/FormContainerComponent.html":{},"components/HomePageComponent.html":{},"components/NavBarComponent.html":{},"components/NgxEditorJSBaseComponent.html":{},"components/NgxEditorJSComponent.html":{},"components/NgxEditorJSDemoHomeComponent.html":{},"components/NgxEditorJSDemoInfoComponent.html":{},"modules/NgxEditorJSModule.html":{},"components/PageContainerComponent.html":{},"components/SidebarComponent.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["matbadgemodule",{"_index":1489,"title":{},"body":{"modules/NgxEditorjsDemoModule.html":{}}}],["matbuttonmodule",{"_index":292,"title":{},"body":{"modules/AppModule.html":{},"modules/MaterialModule.html":{},"modules/NgxEditorjsDemoModule.html":{},"modules/NgxTinynodesCoreMaterialModule.html":{}}}],["matcardmodule",{"_index":963,"title":{},"body":{"modules/MaterialModule.html":{},"modules/NgxEditorjsDemoModule.html":{},"modules/NgxTinynodesCoreMaterialModule.html":{}}}],["matcher",{"_index":50,"title":{},"body":{"components/AppContainerComponent.html":{}}}],["matching",{"_index":231,"title":{},"body":{"components/AppContainerComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"injectables/AppService.html":{},"injectables/AppService-1.html":{},"interfaces/ApplicationData.html":{},"interfaces/ApplicationData-1.html":{},"modules/ApplicationDataModule.html":{},"injectables/ApplicationQuery.html":{},"injectables/ApplicationQuery-1.html":{},"interfaces/ApplicationState.html":{},"interfaces/ApplicationState-1.html":{},"injectables/ApplicationStore.html":{},"injectables/ApplicationStore-1.html":{},"interfaces/BasePlugin.html":{},"interfaces/BasePlugin-1.html":{},"interfaces/Block.html":{},"interfaces/BlocksMap.html":{},"interfaces/ChangeMap.html":{},"classes/Changed.html":{},"interfaces/CreateEditorJSOptions.html":{},"interfaces/DemoData.html":{},"interfaces/DemoData-1.html":{},"interfaces/EditorJSAction.html":{},"interfaces/EditorJSConfig.html":{},"interfaces/EditorJSInstanceConfig.html":{},"interfaces/EditorJSMaterialForm.html":{},"interfaces/EditorMap.html":{},"interfaces/EventMap.html":{},"interfaces/EventType.html":{},"components/FormContainerComponent.html":{},"interfaces/Header.html":{},"interfaces/HeaderBlock.html":{},"components/HomePageComponent.html":{},"interfaces/Image.html":{},"interfaces/ImageBlock.html":{},"interfaces/InjectorMethodOption.html":{},"interfaces/List.html":{},"interfaces/ListBlock.html":{},"modules/MaterialModule.html":{},"interfaces/MenuGroup.html":{},"interfaces/MenuGroup-1.html":{},"interfaces/MenuItem.html":{},"interfaces/MenuItem-1.html":{},"classes/MockEditorJS.html":{},"injectables/MockNgZone.html":{},"classes/MockPlugin.html":{},"components/NavBarComponent.html":{},"components/NgxEditorJSBaseComponent.html":{},"components/NgxEditorJSComponent.html":{},"interfaces/NgxEditorJSConfig.html":{},"interfaces/NgxEditorJSDemo.html":{},"interfaces/NgxEditorJSDemo-1.html":{},"interfaces/NgxEditorJSDemoData.html":{},"interfaces/NgxEditorJSDemoData-1.html":{},"components/NgxEditorJSDemoHomeComponent.html":{},"components/NgxEditorJSDemoInfoComponent.html":{},"directives/NgxEditorJSDirective.html":{},"injectables/NgxEditorJSEffects.html":{},"modules/NgxEditorJSModule.html":{},"injectables/NgxEditorJSPluginService.html":{},"injectables/NgxEditorJSService.html":{},"modules/NgxEditorjsDemoModule.html":{},"modules/NgxEditorjsNgrxModule.html":{},"modules/NgxEditorjsPluginsModule.html":{},"modules/NgxHideableHeaderDemoModule.html":{},"modules/NgxTinynodesCoreMaterialModule.html":{},"modules/NgxTinynodesCoreModule.html":{},"classes/NotReady.html":{},"interfaces/Page.html":{},"interfaces/PageBlock.html":{},"components/PageContainerComponent.html":{},"modules/PageStoreModule.html":{},"injectables/PagesQuery.html":{},"injectables/PagesService.html":{},"interfaces/PagesState.html":{},"injectables/PagesStore.html":{},"interfaces/Paragraph.html":{},"interfaces/ParagraphBlock.html":{},"injectables/PluginCode.html":{},"modules/PluginCodeModule.html":{},"interfaces/PluginConfig.html":{},"interfaces/PluginConfig-1.html":{},"injectables/PluginHeader.html":{},"modules/PluginHeaderModule.html":{},"injectables/PluginImage.html":{},"modules/PluginImageModule.html":{},"injectables/PluginLink.html":{},"modules/PluginLinkModule.html":{},"injectables/PluginList.html":{},"modules/PluginListModule.html":{},"injectables/PluginMarker.html":{},"modules/PluginMarkerModule.html":{},"injectables/PluginParagraph.html":{},"modules/PluginParagraphModule.html":{},"injectables/PluginSimpleImage.html":{},"modules/PluginSimpleImageModule.html":{},"classes/Ready.html":{},"interfaces/ReadyMap.html":{},"classes/SaveEnd.html":{},"classes/SaveStart.html":{},"components/SidebarComponent.html":{},"interfaces/Tag.html":{},"classes/TestClass.html":{},"interfaces/TinynodeDemos.html":{},"interfaces/TinynodeDemos-1.html":{},"interfaces/ToolSettingsMap.html":{},"interfaces/ToolSettingsMap-1.html":{},"changelog.html":{},"contributing.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"index.html":{},"license.html":{},"modules.html":{},"overview.html":{},"todo.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{},"additional-documentation/tinynodes-library-docs.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-readme.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-readme/ngx-editorjs-changelog.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-plugins-readme.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-plugins-readme/ngx-editorjs-plugins-changelog.html":{},"routes.html":{}}}],["matchipsmodule",{"_index":1488,"title":{},"body":{"modules/NgxEditorjsDemoModule.html":{}}}],["matchview",{"_index":36,"title":{},"body":{"components/AppContainerComponent.html":{}}}],["matchview(event",{"_index":69,"title":{},"body":{"components/AppContainerComponent.html":{}}}],["materia",{"_index":908,"title":{},"body":{"components/FormContainerComponent.html":{}}}],["material",{"_index":102,"title":{},"body":{"components/AppContainerComponent.html":{},"interfaces/EditorJSMaterialForm.html":{},"components/FormContainerComponent.html":{},"modules/MaterialModule.html":{},"components/NgxEditorJSDemoHomeComponent.html":{},"index.html":{},"miscellaneous/variables.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-readme.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-readme/ngx-editorjs-changelog.html":{}}}],["material.module",{"_index":289,"title":{},"body":{"modules/AppModule.html":{},"modules/NgxTinynodesCoreModule.html":{}}}],["material.module.ts",{"_index":1545,"title":{},"body":{"modules/NgxTinynodesCoreMaterialModule.html":{}}}],["materialmodule",{"_index":247,"title":{"modules/MaterialModule.html":{}},"body":{"modules/AppModule.html":{},"modules/MaterialModule.html":{},"modules/NgxEditorjsDemoModule.html":{},"modules.html":{},"overview.html":{}}}],["matexpansionmodule",{"_index":1487,"title":{},"body":{"modules/NgxEditorjsDemoModule.html":{},"modules/NgxTinynodesCoreMaterialModule.html":{}}}],["matformfieldcontrol",{"_index":667,"title":{},"body":{"interfaces/EditorJSMaterialForm.html":{},"miscellaneous/variables.html":{}}}],["matformfieldmodule",{"_index":1334,"title":{},"body":{"modules/NgxEditorJSModule.html":{},"modules/NgxEditorjsDemoModule.html":{}}}],["matgridlistmodule",{"_index":1486,"title":{},"body":{"modules/NgxEditorjsDemoModule.html":{},"modules/NgxTinynodesCoreMaterialModule.html":{}}}],["maticonmodule",{"_index":961,"title":{},"body":{"modules/MaterialModule.html":{},"modules/NgxEditorjsDemoModule.html":{}}}],["matinputmodule",{"_index":1335,"title":{},"body":{"modules/NgxEditorJSModule.html":{},"modules/NgxEditorjsDemoModule.html":{}}}],["matlistmodule",{"_index":962,"title":{},"body":{"modules/MaterialModule.html":{},"modules/NgxTinynodesCoreMaterialModule.html":{}}}],["matsidenav",{"_index":98,"title":{},"body":{"components/AppContainerComponent.html":{}}}],["matsidenavmodule",{"_index":959,"title":{},"body":{"modules/MaterialModule.html":{}}}],["mattoolbarmodule",{"_index":960,"title":{},"body":{"modules/MaterialModule.html":{}}}],["me@tane.dev",{"_index":1950,"title":{},"body":{"contributing.html":{},"license.html":{}}}],["means",{"_index":1234,"title":{},"body":{"directives/NgxEditorJSDirective.html":{}}}],["meantime",{"_index":1780,"title":{},"body":{"changelog.html":{}}}],["media",{"_index":1934,"title":{},"body":{"contributing.html":{}}}],["mediamatcher",{"_index":51,"title":{},"body":{"components/AppContainerComponent.html":{}}}],["mediaquerylist",{"_index":86,"title":{},"body":{"components/AppContainerComponent.html":{}}}],["members",{"_index":1873,"title":{},"body":{"contributing.html":{}}}],["men",{"_index":352,"title":{},"body":{"injectables/AppService.html":{},"injectables/AppService-1.html":{}}}],["menu",{"_index":89,"title":{},"body":{"components/AppContainerComponent.html":{},"injectables/AppService.html":{},"injectables/AppService-1.html":{},"interfaces/ApplicationData.html":{},"interfaces/ApplicationData-1.html":{},"interfaces/ApplicationState.html":{},"interfaces/ApplicationState-1.html":{},"interfaces/DemoData.html":{},"interfaces/DemoData-1.html":{},"components/FormContainerComponent.html":{},"components/HomePageComponent.html":{},"interfaces/MenuGroup.html":{},"interfaces/MenuGroup-1.html":{},"interfaces/MenuItem.html":{},"interfaces/MenuItem-1.html":{},"components/NavBarComponent.html":{},"interfaces/NgxEditorJSDemo.html":{},"interfaces/NgxEditorJSDemo-1.html":{},"interfaces/NgxEditorJSDemoData.html":{},"interfaces/NgxEditorJSDemoData-1.html":{},"components/NgxEditorJSDemoInfoComponent.html":{},"components/PageContainerComponent.html":{},"interfaces/TinynodeDemos.html":{},"interfaces/TinynodeDemos-1.html":{}}}],["menu.key",{"_index":391,"title":{},"body":{"injectables/AppService.html":{},"injectables/AppService-1.html":{}}}],["menu.label",{"_index":956,"title":{},"body":{"components/HomePageComponent.html":{}}}],["menugroup",{"_index":351,"title":{"interfaces/MenuGroup.html":{},"interfaces/MenuGroup-1.html":{}},"body":{"injectables/AppService.html":{},"injectables/AppService-1.html":{},"interfaces/ApplicationData.html":{},"interfaces/ApplicationData-1.html":{},"interfaces/ApplicationState.html":{},"interfaces/ApplicationState-1.html":{},"interfaces/DemoData.html":{},"interfaces/DemoData-1.html":{},"components/FormContainerComponent.html":{},"interfaces/MenuGroup.html":{},"interfaces/MenuGroup-1.html":{},"interfaces/MenuItem.html":{},"interfaces/MenuItem-1.html":{},"components/NavBarComponent.html":{},"interfaces/NgxEditorJSDemo.html":{},"interfaces/NgxEditorJSDemo-1.html":{},"interfaces/NgxEditorJSDemoData.html":{},"interfaces/NgxEditorJSDemoData-1.html":{},"components/NgxEditorJSDemoInfoComponent.html":{},"components/PageContainerComponent.html":{},"components/SidebarComponent.html":{},"interfaces/TinynodeDemos.html":{},"interfaces/TinynodeDemos-1.html":{},"coverage.html":{}}}],["menuitem",{"_index":409,"title":{"interfaces/MenuItem.html":{},"interfaces/MenuItem-1.html":{}},"body":{"interfaces/ApplicationData.html":{},"interfaces/ApplicationData-1.html":{},"interfaces/ApplicationState.html":{},"interfaces/DemoData.html":{},"interfaces/MenuGroup.html":{},"interfaces/MenuGroup-1.html":{},"interfaces/MenuItem.html":{},"interfaces/MenuItem-1.html":{},"interfaces/NgxEditorJSDemo.html":{},"interfaces/NgxEditorJSDemoData.html":{},"interfaces/TinynodeDemos.html":{},"coverage.html":{}}}],["menuitem.label",{"_index":1027,"title":{},"body":{"components/NavBarComponent.html":{}}}],["menus",{"_index":387,"title":{},"body":{"injectables/AppService.html":{},"injectables/AppService-1.html":{},"interfaces/ApplicationData.html":{},"interfaces/ApplicationData-1.html":{},"interfaces/ApplicationState.html":{},"interfaces/ApplicationState-1.html":{},"injectables/ApplicationStore.html":{},"injectables/ApplicationStore-1.html":{},"interfaces/DemoData.html":{},"interfaces/DemoData-1.html":{},"interfaces/MenuGroup.html":{},"interfaces/MenuGroup-1.html":{},"interfaces/MenuItem.html":{},"interfaces/MenuItem-1.html":{},"interfaces/NgxEditorJSDemo.html":{},"interfaces/NgxEditorJSDemo-1.html":{},"interfaces/NgxEditorJSDemoData.html":{},"interfaces/NgxEditorJSDemoData-1.html":{},"interfaces/TinynodeDemos.html":{},"interfaces/TinynodeDemos-1.html":{},"miscellaneous/enumerations.html":{}}}],["menus.find(menu",{"_index":390,"title":{},"body":{"injectables/AppService.html":{},"injectables/AppService-1.html":{}}}],["menus.length",{"_index":388,"title":{},"body":{"injectables/AppService.html":{},"injectables/AppService-1.html":{}}}],["merchantability",{"_index":2134,"title":{},"body":{"license.html":{}}}],["merge",{"_index":1819,"title":{},"body":{"contributing.html":{},"miscellaneous/functions.html":{},"license.html":{}}}],["merged",{"_index":1362,"title":{},"body":{"injectables/NgxEditorJSPluginService.html":{}}}],["mergemap",{"_index":1313,"title":{},"body":{"injectables/NgxEditorJSEffects.html":{}}}],["mergemap(([action",{"_index":1303,"title":{},"body":{"injectables/NgxEditorJSEffects.html":{}}}],["metadata",{"_index":21,"title":{},"body":{"components/AppContainerComponent.html":{},"components/FormContainerComponent.html":{},"components/HomePageComponent.html":{},"components/NavBarComponent.html":{},"components/NgxEditorJSBaseComponent.html":{},"components/NgxEditorJSComponent.html":{},"components/NgxEditorJSDemoHomeComponent.html":{},"components/NgxEditorJSDemoInfoComponent.html":{},"directives/NgxEditorJSDirective.html":{},"components/PageContainerComponent.html":{},"components/SidebarComponent.html":{}}}],["method",{"_index":624,"title":{},"body":{"interfaces/EditorJSConfig.html":{},"interfaces/EditorJSInstanceConfig.html":{},"components/FormContainerComponent.html":{},"interfaces/InjectorMethodOption.html":{},"components/NgxEditorJSBaseComponent.html":{},"components/NgxEditorJSComponent.html":{},"interfaces/NgxEditorJSConfig.html":{},"modules/NgxEditorJSModule.html":{},"injectables/NgxEditorJSService.html":{},"components/PageContainerComponent.html":{},"contributing.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-readme.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-readme/ngx-editorjs-changelog.html":{}}}],["methods",{"_index":35,"title":{},"body":{"components/AppContainerComponent.html":{},"injectables/AppService.html":{},"injectables/AppService-1.html":{},"interfaces/BasePlugin.html":{},"interfaces/BasePlugin-1.html":{},"components/FormContainerComponent.html":{},"injectables/MockNgZone.html":{},"classes/MockPlugin.html":{},"components/NgxEditorJSBaseComponent.html":{},"components/NgxEditorJSComponent.html":{},"components/NgxEditorJSDemoInfoComponent.html":{},"directives/NgxEditorJSDirective.html":{},"modules/NgxEditorJSModule.html":{},"injectables/NgxEditorJSPluginService.html":{},"injectables/NgxEditorJSService.html":{},"components/PageContainerComponent.html":{},"injectables/PagesService.html":{},"injectables/PluginCode.html":{},"interfaces/PluginConfig.html":{},"interfaces/PluginConfig-1.html":{},"injectables/PluginHeader.html":{},"injectables/PluginImage.html":{},"injectables/PluginLink.html":{},"injectables/PluginList.html":{},"injectables/PluginMarker.html":{},"injectables/PluginParagraph.html":{},"injectables/PluginSimpleImage.html":{},"classes/TestClass.html":{},"interfaces/ToolSettingsMap.html":{},"interfaces/ToolSettingsMap-1.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-readme/ngx-editorjs-changelog.html":{}}}],["middle",{"_index":188,"title":{},"body":{"components/AppContainerComponent.html":{},"components/NavBarComponent.html":{}}}],["minheight",{"_index":602,"title":{},"body":{"interfaces/EditorJSConfig.html":{},"components/NgxEditorJSBaseComponent.html":{},"components/NgxEditorJSComponent.html":{},"interfaces/NgxEditorJSConfig.html":{},"directives/NgxEditorJSDirective.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-readme.html":{}}}],["minheight'].find(key",{"_index":1273,"title":{},"body":{"directives/NgxEditorJSDirective.html":{}}}],["miscellaneous",{"_index":2068,"title":{"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}},"body":{"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["mit",{"_index":2095,"title":{},"body":{"license.html":{}}}],["mobile",{"_index":72,"title":{},"body":{"components/AppContainerComponent.html":{}}}],["mobileview",{"_index":31,"title":{},"body":{"components/AppContainerComponent.html":{}}}],["mock",{"_index":993,"title":{},"body":{"injectables/MockNgZone.html":{}}}],["mock.ts",{"_index":992,"title":{},"body":{"injectables/MockNgZone.html":{},"coverage.html":{}}}],["mock.ts:16",{"_index":1000,"title":{},"body":{"injectables/MockNgZone.html":{}}}],["mock.ts:22",{"_index":1002,"title":{},"body":{"injectables/MockNgZone.html":{}}}],["mock.ts:26",{"_index":1005,"title":{},"body":{"injectables/MockNgZone.html":{}}}],["mock.ts:30",{"_index":1006,"title":{},"body":{"injectables/MockNgZone.html":{}}}],["mockeditorjs",{"_index":964,"title":{"classes/MockEditorJS.html":{}},"body":{"classes/MockEditorJS.html":{},"classes/MockPlugin.html":{},"classes/TestClass.html":{},"coverage.html":{}}}],["mockngzone",{"_index":989,"title":{"injectables/MockNgZone.html":{}},"body":{"injectables/MockNgZone.html":{},"coverage.html":{}}}],["mockplugin",{"_index":980,"title":{"classes/MockPlugin.html":{}},"body":{"classes/MockEditorJS.html":{},"classes/MockPlugin.html":{},"classes/TestClass.html":{},"coverage.html":{}}}],["modify",{"_index":2111,"title":{},"body":{"license.html":{}}}],["module",{"_index":233,"title":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"modules/ApplicationDataModule.html":{},"modules/MaterialModule.html":{},"modules/NgxEditorJSModule.html":{},"modules/NgxEditorjsDemoModule.html":{},"modules/NgxEditorjsNgrxModule.html":{},"modules/NgxEditorjsPluginsModule.html":{},"modules/NgxHideableHeaderDemoModule.html":{},"modules/NgxTinynodesCoreMaterialModule.html":{},"modules/NgxTinynodesCoreModule.html":{},"modules/PageStoreModule.html":{},"modules/PluginCodeModule.html":{},"modules/PluginHeaderModule.html":{},"modules/PluginImageModule.html":{},"modules/PluginLinkModule.html":{},"modules/PluginListModule.html":{},"modules/PluginMarkerModule.html":{},"modules/PluginParagraphModule.html":{},"modules/PluginSimpleImageModule.html":{}},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"modules/ApplicationDataModule.html":{},"interfaces/BasePlugin.html":{},"interfaces/BasePlugin-1.html":{},"modules/MaterialModule.html":{},"components/NgxEditorJSDemoHomeComponent.html":{},"modules/NgxEditorJSModule.html":{},"injectables/NgxEditorJSPluginService.html":{},"modules/NgxEditorjsDemoModule.html":{},"modules/NgxEditorjsNgrxModule.html":{},"modules/NgxEditorjsPluginsModule.html":{},"modules/NgxTinynodesCoreModule.html":{},"modules/PageStoreModule.html":{},"modules/PluginCodeModule.html":{},"interfaces/PluginConfig.html":{},"interfaces/PluginConfig-1.html":{},"modules/PluginHeaderModule.html":{},"modules/PluginImageModule.html":{},"modules/PluginLinkModule.html":{},"modules/PluginListModule.html":{},"modules/PluginMarkerModule.html":{},"modules/PluginParagraphModule.html":{},"modules/PluginSimpleImageModule.html":{},"interfaces/ToolSettingsMap.html":{},"interfaces/ToolSettingsMap-1.html":{},"changelog.html":{},"miscellaneous/functions.html":{},"index.html":{},"overview.html":{},"todo.html":{},"miscellaneous/variables.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-readme.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-readme/ngx-editorjs-changelog.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-plugins-readme.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-plugins-readme/ngx-editorjs-plugins-changelog.html":{}}}],["modules",{"_index":235,"title":{"modules.html":{}},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"modules/ApplicationDataModule.html":{},"modules/MaterialModule.html":{},"modules/NgxEditorJSModule.html":{},"modules/NgxEditorjsDemoModule.html":{},"modules/NgxEditorjsNgrxModule.html":{},"modules/NgxEditorjsPluginsModule.html":{},"modules/NgxHideableHeaderDemoModule.html":{},"modules/NgxTinynodesCoreMaterialModule.html":{},"modules/NgxTinynodesCoreModule.html":{},"modules/PageStoreModule.html":{},"modules/PluginCodeModule.html":{},"modules/PluginHeaderModule.html":{},"modules/PluginImageModule.html":{},"modules/PluginLinkModule.html":{},"modules/PluginListModule.html":{},"modules/PluginMarkerModule.html":{},"modules/PluginParagraphModule.html":{},"modules/PluginSimpleImageModule.html":{},"modules.html":{},"overview.html":{},"todo.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-plugins-readme.html":{}}}],["modulewithproviders",{"_index":1329,"title":{},"body":{"modules/NgxEditorJSModule.html":{}}}],["monday",{"_index":1755,"title":{},"body":{"changelog.html":{}}}],["monitor",{"_index":748,"title":{},"body":{"interfaces/EditorJSMaterialForm.html":{},"components/NgxEditorJSBaseComponent.html":{},"components/NgxEditorJSComponent.html":{}}}],["monitoring",{"_index":770,"title":{},"body":{"interfaces/EditorJSMaterialForm.html":{}}}],["more",{"_index":422,"title":{},"body":{"interfaces/ApplicationData.html":{},"interfaces/ApplicationData-1.html":{},"interfaces/MenuGroup.html":{},"interfaces/MenuGroup-1.html":{},"interfaces/MenuItem.html":{},"interfaces/MenuItem-1.html":{},"injectables/NgxEditorJSService.html":{},"changelog.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-readme.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-readme/ngx-editorjs-changelog.html":{}}}],["mouseevent",{"_index":742,"title":{},"body":{"interfaces/EditorJSMaterialForm.html":{},"components/NgxEditorJSBaseComponent.html":{},"components/NgxEditorJSComponent.html":{}}}],["moved",{"_index":451,"title":{},"body":{"interfaces/ApplicationState.html":{},"interfaces/ApplicationState-1.html":{},"interfaces/DemoData.html":{},"interfaces/DemoData-1.html":{},"interfaces/NgxEditorJSDemo.html":{},"interfaces/NgxEditorJSDemo-1.html":{},"interfaces/NgxEditorJSDemoData.html":{},"interfaces/NgxEditorJSDemoData-1.html":{},"interfaces/TinynodeDemos.html":{},"interfaces/TinynodeDemos-1.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-plugins-readme/ngx-editorjs-plugins-changelog.html":{}}}],["multi",{"_index":676,"title":{},"body":{"interfaces/EditorJSMaterialForm.html":{},"components/NgxEditorJSBaseComponent.html":{},"miscellaneous/variables.html":{}}}],["multiple",{"_index":1584,"title":{},"body":{"modules/PageStoreModule.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-readme/ngx-editorjs-changelog.html":{}}}],["name",{"_index":58,"title":{},"body":{"components/AppContainerComponent.html":{},"injectables/AppService.html":{},"injectables/AppService-1.html":{},"injectables/ApplicationQuery.html":{},"injectables/ApplicationQuery-1.html":{},"interfaces/ApplicationState.html":{},"interfaces/ApplicationState-1.html":{},"injectables/ApplicationStore.html":{},"injectables/ApplicationStore-1.html":{},"classes/Changed.html":{},"interfaces/CreateEditorJSOptions.html":{},"interfaces/DemoData.html":{},"interfaces/DemoData-1.html":{},"interfaces/EditorJSAction.html":{},"interfaces/EditorJSConfig.html":{},"components/FormContainerComponent.html":{},"components/HomePageComponent.html":{},"classes/MockEditorJS.html":{},"injectables/MockNgZone.html":{},"components/NavBarComponent.html":{},"components/NgxEditorJSBaseComponent.html":{},"components/NgxEditorJSComponent.html":{},"interfaces/NgxEditorJSConfig.html":{},"interfaces/NgxEditorJSDemo.html":{},"interfaces/NgxEditorJSDemo-1.html":{},"interfaces/NgxEditorJSDemoData.html":{},"interfaces/NgxEditorJSDemoData-1.html":{},"components/NgxEditorJSDemoHomeComponent.html":{},"components/NgxEditorJSDemoInfoComponent.html":{},"directives/NgxEditorJSDirective.html":{},"injectables/NgxEditorJSEffects.html":{},"modules/NgxEditorJSModule.html":{},"injectables/NgxEditorJSPluginService.html":{},"injectables/NgxEditorJSService.html":{},"classes/NotReady.html":{},"components/PageContainerComponent.html":{},"injectables/PagesQuery.html":{},"injectables/PagesService.html":{},"interfaces/PagesState.html":{},"injectables/PagesStore.html":{},"classes/Ready.html":{},"classes/SaveEnd.html":{},"classes/SaveStart.html":{},"components/SidebarComponent.html":{},"interfaces/TinynodeDemos.html":{},"interfaces/TinynodeDemos-1.html":{},"miscellaneous/functions.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-plugins-readme.html":{}}}],["nationality",{"_index":1846,"title":{},"body":{"contributing.html":{}}}],["nav",{"_index":208,"title":{},"body":{"components/AppContainerComponent.html":{},"components/FormContainerComponent.html":{},"components/HomePageComponent.html":{},"components/NavBarComponent.html":{},"components/NgxEditorJSBaseComponent.html":{},"components/NgxEditorJSComponent.html":{},"components/NgxEditorJSDemoHomeComponent.html":{},"components/NgxEditorJSDemoInfoComponent.html":{},"components/PageContainerComponent.html":{},"components/SidebarComponent.html":{}}}],["navbar",{"_index":1015,"title":{},"body":{"components/NavBarComponent.html":{}}}],["navbarcomponent",{"_index":207,"title":{"components/NavBarComponent.html":{}},"body":{"components/AppContainerComponent.html":{},"modules/AppModule.html":{},"components/FormContainerComponent.html":{},"components/HomePageComponent.html":{},"components/NavBarComponent.html":{},"components/NgxEditorJSBaseComponent.html":{},"components/NgxEditorJSComponent.html":{},"components/NgxEditorJSDemoHomeComponent.html":{},"components/NgxEditorJSDemoInfoComponent.html":{},"components/PageContainerComponent.html":{},"components/SidebarComponent.html":{},"coverage.html":{},"overview.html":{}}}],["navigation",{"_index":168,"title":{},"body":{"components/AppContainerComponent.html":{},"components/NavBarComponent.html":{}}}],["nbsp",{"_index":1026,"title":{},"body":{"components/NavBarComponent.html":{}}}],["necessary",{"_index":1955,"title":{},"body":{"contributing.html":{}}}],["need",{"_index":897,"title":{},"body":{"components/FormContainerComponent.html":{},"directives/NgxEditorJSDirective.html":{},"modules/NgxTinynodesCoreModule.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-readme.html":{}}}],["new",{"_index":90,"title":{},"body":{"components/AppContainerComponent.html":{},"interfaces/BasePlugin.html":{},"interfaces/BasePlugin-1.html":{},"interfaces/CreateEditorJSOptions.html":{},"interfaces/EditorJSAction.html":{},"interfaces/EditorJSConfig.html":{},"interfaces/EditorJSInstanceConfig.html":{},"interfaces/EditorJSMaterialForm.html":{},"components/FormContainerComponent.html":{},"interfaces/InjectorMethodOption.html":{},"injectables/MockNgZone.html":{},"components/NavBarComponent.html":{},"components/NgxEditorJSBaseComponent.html":{},"components/NgxEditorJSComponent.html":{},"interfaces/NgxEditorJSConfig.html":{},"components/NgxEditorJSDemoInfoComponent.html":{},"directives/NgxEditorJSDirective.html":{},"injectables/NgxEditorJSEffects.html":{},"injectables/NgxEditorJSService.html":{},"components/PageContainerComponent.html":{},"injectables/PagesService.html":{},"interfaces/PluginConfig.html":{},"interfaces/PluginConfig-1.html":{},"interfaces/ToolSettingsMap.html":{},"interfaces/ToolSettingsMap-1.html":{},"changelog.html":{},"contributing.html":{},"coverage.html":{},"miscellaneous/variables.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-readme.html":{}}}],["newpage",{"_index":1621,"title":{},"body":{"injectables/PagesService.html":{}}}],["nextid",{"_index":688,"title":{},"body":{"interfaces/EditorJSMaterialForm.html":{}}}],["ng",{"_index":273,"title":{},"body":{"modules/AppModule.html":{},"dependencies.html":{}}}],["ng_value_accessor",{"_index":1095,"title":{},"body":{"components/NgxEditorJSBaseComponent.html":{},"miscellaneous/variables.html":{}}}],["ngaftercontentinit",{"_index":37,"title":{},"body":{"components/AppContainerComponent.html":{},"interfaces/EditorJSMaterialForm.html":{},"components/FormContainerComponent.html":{},"components/NgxEditorJSBaseComponent.html":{},"components/NgxEditorJSComponent.html":{},"directives/NgxEditorJSDirective.html":{},"components/PageContainerComponent.html":{}}}],["ngcontrol",{"_index":665,"title":{},"body":{"interfaces/EditorJSMaterialForm.html":{}}}],["ngdevtools",{"_index":277,"title":{},"body":{"modules/AppModule.html":{},"dependencies.html":{}}}],["ngdocheck",{"_index":766,"title":{},"body":{"interfaces/EditorJSMaterialForm.html":{}}}],["ngmodule",{"_index":262,"title":{},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"modules/ApplicationDataModule.html":{},"modules/MaterialModule.html":{},"modules/NgxEditorJSModule.html":{},"modules/NgxEditorjsDemoModule.html":{},"modules/NgxEditorjsNgrxModule.html":{},"modules/NgxEditorjsPluginsModule.html":{},"modules/NgxHideableHeaderDemoModule.html":{},"modules/NgxTinynodesCoreMaterialModule.html":{},"modules/NgxTinynodesCoreModule.html":{},"modules/PageStoreModule.html":{},"modules/PluginCodeModule.html":{},"modules/PluginHeaderModule.html":{},"modules/PluginImageModule.html":{},"modules/PluginLinkModule.html":{},"modules/PluginListModule.html":{},"modules/PluginMarkerModule.html":{},"modules/PluginParagraphModule.html":{},"modules/PluginSimpleImageModule.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-readme.html":{}}}],["ngonchanges",{"_index":1205,"title":{},"body":{"directives/NgxEditorJSDirective.html":{}}}],["ngonchanges(changes",{"_index":1229,"title":{},"body":{"directives/NgxEditorJSDirective.html":{}}}],["ngondestroy",{"_index":38,"title":{},"body":{"components/AppContainerComponent.html":{},"interfaces/EditorJSMaterialForm.html":{},"components/NgxEditorJSBaseComponent.html":{},"components/NgxEditorJSComponent.html":{},"directives/NgxEditorJSDirective.html":{}}}],["ngoninit",{"_index":752,"title":{},"body":{"interfaces/EditorJSMaterialForm.html":{},"components/NgxEditorJSDemoInfoComponent.html":{}}}],["ngrx",{"_index":1512,"title":{},"body":{"modules/NgxEditorjsNgrxModule.html":{}}}],["ngrx.module.ts",{"_index":1508,"title":{},"body":{"modules/NgxEditorjsNgrxModule.html":{}}}],["ngrx/effects",{"_index":1309,"title":{},"body":{"injectables/NgxEditorJSEffects.html":{},"modules/NgxEditorjsNgrxModule.html":{},"dependencies.html":{},"todo.html":{}}}],["ngrx/src/lib/actions/ngx",{"_index":547,"title":{},"body":{"classes/Changed.html":{},"classes/NotReady.html":{},"classes/Ready.html":{},"classes/SaveEnd.html":{},"classes/SaveStart.html":{},"coverage.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/typealiases.html":{}}}],["ngrx/src/lib/effects/ngx",{"_index":1293,"title":{},"body":{"injectables/NgxEditorJSEffects.html":{},"coverage.html":{}}}],["ngrx/src/lib/ngx",{"_index":1507,"title":{},"body":{"modules/NgxEditorjsNgrxModule.html":{}}}],["ngrx/store",{"_index":555,"title":{},"body":{"classes/Changed.html":{},"classes/NotReady.html":{},"classes/Ready.html":{},"classes/SaveEnd.html":{},"classes/SaveStart.html":{},"dependencies.html":{}}}],["ngx",{"_index":201,"title":{"additional-documentation/tinynodes-library-docs/ngx-editorjs-readme.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-readme/ngx-editorjs-changelog.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-plugins-readme.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-plugins-readme/ngx-editorjs-plugins-changelog.html":{}},"body":{"components/AppContainerComponent.html":{},"modules/AppModule.html":{},"interfaces/ApplicationState.html":{},"interfaces/ApplicationState-1.html":{},"interfaces/BasePlugin.html":{},"interfaces/BasePlugin-1.html":{},"classes/Changed.html":{},"interfaces/DemoData.html":{},"interfaces/DemoData-1.html":{},"interfaces/EditorJSMaterialForm.html":{},"components/FormContainerComponent.html":{},"components/HomePageComponent.html":{},"components/NavBarComponent.html":{},"components/NgxEditorJSBaseComponent.html":{},"components/NgxEditorJSComponent.html":{},"interfaces/NgxEditorJSDemo.html":{},"interfaces/NgxEditorJSDemo-1.html":{},"interfaces/NgxEditorJSDemoData.html":{},"interfaces/NgxEditorJSDemoData-1.html":{},"components/NgxEditorJSDemoHomeComponent.html":{},"components/NgxEditorJSDemoInfoComponent.html":{},"directives/NgxEditorJSDirective.html":{},"modules/NgxEditorjsDemoModule.html":{},"modules/NgxTinynodesCoreModule.html":{},"classes/NotReady.html":{},"components/PageContainerComponent.html":{},"modules/PageStoreModule.html":{},"interfaces/PluginConfig.html":{},"interfaces/PluginConfig-1.html":{},"classes/Ready.html":{},"classes/SaveEnd.html":{},"classes/SaveStart.html":{},"components/SidebarComponent.html":{},"interfaces/TinynodeDemos.html":{},"interfaces/TinynodeDemos-1.html":{},"interfaces/ToolSettingsMap.html":{},"interfaces/ToolSettingsMap-1.html":{},"dependencies.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"index.html":{},"todo.html":{},"miscellaneous/variables.html":{},"additional-documentation/tinynodes-library-docs.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-readme.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-readme/ngx-editorjs-changelog.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-plugins-readme.html":{}}}],["ngx.firebaseapp.com",{"_index":295,"title":{},"body":{"modules/AppModule.html":{}}}],["ngx_editorjs_config",{"_index":627,"title":{},"body":{"interfaces/EditorJSConfig.html":{},"interfaces/NgxEditorJSConfig.html":{},"modules/NgxEditorJSModule.html":{},"injectables/NgxEditorJSService.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["ngxeditorjs",{"_index":228,"title":{},"body":{"components/AppContainerComponent.html":{},"components/FormContainerComponent.html":{},"components/HomePageComponent.html":{},"components/NavBarComponent.html":{},"components/NgxEditorJSBaseComponent.html":{},"components/NgxEditorJSComponent.html":{},"components/NgxEditorJSDemoHomeComponent.html":{},"components/NgxEditorJSDemoInfoComponent.html":{},"directives/NgxEditorJSDirective.html":{},"components/PageContainerComponent.html":{},"components/SidebarComponent.html":{}}}],["ngxeditorjsactions",{"_index":570,"title":{},"body":{"classes/Changed.html":{},"classes/NotReady.html":{},"classes/Ready.html":{},"classes/SaveEnd.html":{},"classes/SaveStart.html":{},"miscellaneous/typealiases.html":{}}}],["ngxeditorjsbasecomponent",{"_index":210,"title":{"components/NgxEditorJSBaseComponent.html":{}},"body":{"components/AppContainerComponent.html":{},"interfaces/EditorJSMaterialForm.html":{},"components/FormContainerComponent.html":{},"components/HomePageComponent.html":{},"components/NavBarComponent.html":{},"components/NgxEditorJSBaseComponent.html":{},"components/NgxEditorJSComponent.html":{},"components/NgxEditorJSDemoHomeComponent.html":{},"components/NgxEditorJSDemoInfoComponent.html":{},"modules/NgxEditorJSModule.html":{},"components/PageContainerComponent.html":{},"components/SidebarComponent.html":{},"coverage.html":{},"overview.html":{},"miscellaneous/variables.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-readme.html":{}}}],["ngxeditorjsbasecomponent:104",{"_index":1153,"title":{},"body":{"components/NgxEditorJSComponent.html":{}}}],["ngxeditorjsbasecomponent:110",{"_index":1137,"title":{},"body":{"components/NgxEditorJSComponent.html":{}}}],["ngxeditorjsbasecomponent:117",{"_index":1143,"title":{},"body":{"components/NgxEditorJSComponent.html":{}}}],["ngxeditorjsbasecomponent:131",{"_index":1149,"title":{},"body":{"components/NgxEditorJSComponent.html":{}}}],["ngxeditorjsbasecomponent:137",{"_index":1138,"title":{},"body":{"components/NgxEditorJSComponent.html":{}}}],["ngxeditorjsbasecomponent:142",{"_index":1152,"title":{},"body":{"components/NgxEditorJSComponent.html":{}}}],["ngxeditorjsbasecomponent:150",{"_index":1136,"title":{},"body":{"components/NgxEditorJSComponent.html":{}}}],["ngxeditorjsbasecomponent:155",{"_index":1150,"title":{},"body":{"components/NgxEditorJSComponent.html":{}}}],["ngxeditorjsbasecomponent:163",{"_index":1148,"title":{},"body":{"components/NgxEditorJSComponent.html":{}}}],["ngxeditorjsbasecomponent:170",{"_index":1146,"title":{},"body":{"components/NgxEditorJSComponent.html":{}}}],["ngxeditorjsbasecomponent:177",{"_index":1147,"title":{},"body":{"components/NgxEditorJSComponent.html":{}}}],["ngxeditorjsbasecomponent:188",{"_index":1142,"title":{},"body":{"components/NgxEditorJSComponent.html":{}}}],["ngxeditorjsbasecomponent:210",{"_index":1144,"title":{},"body":{"components/NgxEditorJSComponent.html":{}}}],["ngxeditorjsbasecomponent:212",{"_index":1145,"title":{},"body":{"components/NgxEditorJSComponent.html":{}}}],["ngxeditorjsbasecomponent:229",{"_index":1141,"title":{},"body":{"components/NgxEditorJSComponent.html":{}}}],["ngxeditorjsbasecomponent:31",{"_index":1151,"title":{},"body":{"components/NgxEditorJSComponent.html":{}}}],["ngxeditorjsbasecomponent:36",{"_index":1126,"title":{},"body":{"components/NgxEditorJSComponent.html":{}}}],["ngxeditorjsbasecomponent:42",{"_index":1130,"title":{},"body":{"components/NgxEditorJSComponent.html":{}}}],["ngxeditorjsbasecomponent:48",{"_index":1131,"title":{},"body":{"components/NgxEditorJSComponent.html":{}}}],["ngxeditorjsbasecomponent:54",{"_index":1133,"title":{},"body":{"components/NgxEditorJSComponent.html":{}}}],["ngxeditorjsbasecomponent:60",{"_index":1134,"title":{},"body":{"components/NgxEditorJSComponent.html":{}}}],["ngxeditorjsbasecomponent:66",{"_index":1128,"title":{},"body":{"components/NgxEditorJSComponent.html":{}}}],["ngxeditorjsbasecomponent:72",{"_index":1135,"title":{},"body":{"components/NgxEditorJSComponent.html":{}}}],["ngxeditorjsbasecomponent:79",{"_index":1132,"title":{},"body":{"components/NgxEditorJSComponent.html":{}}}],["ngxeditorjsbasecomponent:86",{"_index":1127,"title":{},"body":{"components/NgxEditorJSComponent.html":{}}}],["ngxeditorjsbasecomponent:92",{"_index":1129,"title":{},"body":{"components/NgxEditorJSComponent.html":{}}}],["ngxeditorjscomponent",{"_index":211,"title":{"components/NgxEditorJSComponent.html":{}},"body":{"components/AppContainerComponent.html":{},"components/FormContainerComponent.html":{},"components/HomePageComponent.html":{},"components/NavBarComponent.html":{},"components/NgxEditorJSBaseComponent.html":{},"components/NgxEditorJSComponent.html":{},"components/NgxEditorJSDemoHomeComponent.html":{},"components/NgxEditorJSDemoInfoComponent.html":{},"modules/NgxEditorJSModule.html":{},"components/PageContainerComponent.html":{},"components/SidebarComponent.html":{},"coverage.html":{},"overview.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-readme.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-readme/ngx-editorjs-changelog.html":{}}}],["ngxeditorjsconfig",{"_index":625,"title":{"interfaces/NgxEditorJSConfig.html":{}},"body":{"interfaces/EditorJSConfig.html":{},"interfaces/NgxEditorJSConfig.html":{},"modules/NgxEditorJSModule.html":{},"injectables/NgxEditorJSService.html":{},"coverage.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["ngxeditorjsdemo",{"_index":452,"title":{"interfaces/NgxEditorJSDemo.html":{},"interfaces/NgxEditorJSDemo-1.html":{}},"body":{"interfaces/ApplicationState.html":{},"interfaces/ApplicationState-1.html":{},"interfaces/DemoData.html":{},"interfaces/DemoData-1.html":{},"components/FormContainerComponent.html":{},"interfaces/NgxEditorJSDemo.html":{},"interfaces/NgxEditorJSDemo-1.html":{},"interfaces/NgxEditorJSDemoData.html":{},"interfaces/NgxEditorJSDemoData-1.html":{},"components/PageContainerComponent.html":{},"interfaces/TinynodeDemos.html":{},"interfaces/TinynodeDemos-1.html":{},"coverage.html":{}}}],["ngxeditorjsdemodata",{"_index":454,"title":{"interfaces/NgxEditorJSDemoData.html":{},"interfaces/NgxEditorJSDemoData-1.html":{}},"body":{"interfaces/ApplicationState.html":{},"interfaces/ApplicationState-1.html":{},"interfaces/DemoData.html":{},"interfaces/DemoData-1.html":{},"interfaces/NgxEditorJSDemo.html":{},"interfaces/NgxEditorJSDemo-1.html":{},"interfaces/NgxEditorJSDemoData.html":{},"interfaces/NgxEditorJSDemoData-1.html":{},"interfaces/TinynodeDemos.html":{},"interfaces/TinynodeDemos-1.html":{},"coverage.html":{}}}],["ngxeditorjsdemohomecomponent",{"_index":213,"title":{"components/NgxEditorJSDemoHomeComponent.html":{}},"body":{"components/AppContainerComponent.html":{},"components/FormContainerComponent.html":{},"components/HomePageComponent.html":{},"components/NavBarComponent.html":{},"components/NgxEditorJSBaseComponent.html":{},"components/NgxEditorJSComponent.html":{},"components/NgxEditorJSDemoHomeComponent.html":{},"components/NgxEditorJSDemoInfoComponent.html":{},"modules/NgxEditorjsDemoModule.html":{},"components/PageContainerComponent.html":{},"components/SidebarComponent.html":{},"coverage.html":{},"overview.html":{},"miscellaneous/variables.html":{}}}],["ngxeditorjsdemoinfocomponent",{"_index":217,"title":{"components/NgxEditorJSDemoInfoComponent.html":{}},"body":{"components/AppContainerComponent.html":{},"components/FormContainerComponent.html":{},"components/HomePageComponent.html":{},"components/NavBarComponent.html":{},"components/NgxEditorJSBaseComponent.html":{},"components/NgxEditorJSComponent.html":{},"components/NgxEditorJSDemoHomeComponent.html":{},"components/NgxEditorJSDemoInfoComponent.html":{},"modules/NgxTinynodesCoreModule.html":{},"components/PageContainerComponent.html":{},"components/SidebarComponent.html":{},"coverage.html":{},"overview.html":{}}}],["ngxeditorjsdemomodule",{"_index":249,"title":{"modules/NgxEditorjsDemoModule.html":{}},"body":{"modules/AppModule.html":{},"modules/NgxEditorjsDemoModule.html":{},"modules.html":{},"overview.html":{}}}],["ngxeditorjsdemoroutes",{"_index":1494,"title":{},"body":{"modules/NgxEditorjsDemoModule.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["ngxeditorjsdemotagcomponent",{"_index":219,"title":{},"body":{"components/AppContainerComponent.html":{},"components/FormContainerComponent.html":{},"components/HomePageComponent.html":{},"components/NavBarComponent.html":{},"components/NgxEditorJSBaseComponent.html":{},"components/NgxEditorJSComponent.html":{},"components/NgxEditorJSDemoHomeComponent.html":{},"components/NgxEditorJSDemoInfoComponent.html":{},"modules/NgxEditorjsDemoModule.html":{},"components/PageContainerComponent.html":{},"components/SidebarComponent.html":{},"coverage.html":{},"overview.html":{},"miscellaneous/variables.html":{}}}],["ngxeditorjsdirective",{"_index":227,"title":{"directives/NgxEditorJSDirective.html":{}},"body":{"components/AppContainerComponent.html":{},"interfaces/EditorJSMaterialForm.html":{},"components/FormContainerComponent.html":{},"components/HomePageComponent.html":{},"components/NavBarComponent.html":{},"components/NgxEditorJSBaseComponent.html":{},"components/NgxEditorJSComponent.html":{},"components/NgxEditorJSDemoHomeComponent.html":{},"components/NgxEditorJSDemoInfoComponent.html":{},"directives/NgxEditorJSDirective.html":{},"modules/NgxEditorJSModule.html":{},"components/PageContainerComponent.html":{},"components/SidebarComponent.html":{},"coverage.html":{},"overview.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-readme.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-readme/ngx-editorjs-changelog.html":{}}}],["ngxeditorjsdirective::ngaftercontentinit",{"_index":1279,"title":{},"body":{"directives/NgxEditorJSDirective.html":{}}}],["ngxeditorjseffects",{"_index":1292,"title":{"injectables/NgxEditorJSEffects.html":{}},"body":{"injectables/NgxEditorJSEffects.html":{},"coverage.html":{}}}],["ngxeditorjsinstanceservice",{"_index":1319,"title":{},"body":{"modules/NgxEditorJSModule.html":{},"injectables/NgxEditorJSService.html":{},"coverage.html":{},"overview.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-readme.html":{}}}],["ngxeditorjsmaterialfieldcomponent",{"_index":2188,"title":{},"body":{"additional-documentation/tinynodes-library-docs/ngx-editorjs-readme.html":{}}}],["ngxeditorjsmatfieldcomponent",{"_index":222,"title":{},"body":{"components/AppContainerComponent.html":{},"interfaces/EditorJSMaterialForm.html":{},"components/FormContainerComponent.html":{},"components/HomePageComponent.html":{},"components/NavBarComponent.html":{},"components/NgxEditorJSBaseComponent.html":{},"components/NgxEditorJSComponent.html":{},"components/NgxEditorJSDemoHomeComponent.html":{},"components/NgxEditorJSDemoInfoComponent.html":{},"modules/NgxEditorJSModule.html":{},"components/PageContainerComponent.html":{},"components/SidebarComponent.html":{},"coverage.html":{},"overview.html":{},"miscellaneous/variables.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-readme/ngx-editorjs-changelog.html":{}}}],["ngxeditorjsmatfieldcomponent.nextid",{"_index":730,"title":{},"body":{"interfaces/EditorJSMaterialForm.html":{}}}],["ngxeditorjsmodule",{"_index":248,"title":{"modules/NgxEditorJSModule.html":{}},"body":{"modules/AppModule.html":{},"modules/NgxEditorJSModule.html":{},"modules/NgxEditorjsDemoModule.html":{},"modules/NgxEditorjsNgrxModule.html":{},"modules.html":{},"overview.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-readme.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-readme/ngx-editorjs-changelog.html":{}}}],["ngxeditorjsmodule.forroot",{"_index":296,"title":{},"body":{"modules/AppModule.html":{},"interfaces/EditorJSConfig.html":{},"interfaces/NgxEditorJSConfig.html":{},"modules/NgxEditorJSModule.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-readme.html":{}}}],["ngxeditorjsngrxmodule",{"_index":1504,"title":{"modules/NgxEditorjsNgrxModule.html":{}},"body":{"modules/NgxEditorjsNgrxModule.html":{},"modules.html":{},"overview.html":{}}}],["ngxeditorjspluginservice",{"_index":1320,"title":{"injectables/NgxEditorJSPluginService.html":{}},"body":{"modules/NgxEditorJSModule.html":{},"injectables/NgxEditorJSPluginService.html":{},"injectables/NgxEditorJSService.html":{},"coverage.html":{},"overview.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-readme.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-readme/ngx-editorjs-changelog.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-plugins-readme/ngx-editorjs-plugins-changelog.html":{}}}],["ngxeditorjspluginsmodule",{"_index":1517,"title":{"modules/NgxEditorjsPluginsModule.html":{}},"body":{"modules/NgxEditorjsPluginsModule.html":{},"modules.html":{},"overview.html":{}}}],["ngxeditorjsservice",{"_index":670,"title":{"injectables/NgxEditorJSService.html":{}},"body":{"interfaces/EditorJSMaterialForm.html":{},"components/FormContainerComponent.html":{},"components/NgxEditorJSBaseComponent.html":{},"components/NgxEditorJSComponent.html":{},"directives/NgxEditorJSDirective.html":{},"injectables/NgxEditorJSEffects.html":{},"modules/NgxEditorJSModule.html":{},"injectables/NgxEditorJSService.html":{},"components/PageContainerComponent.html":{},"coverage.html":{},"overview.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-readme.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-readme/ngx-editorjs-changelog.html":{}}}],["ngxhideableheaderdemomodule",{"_index":1540,"title":{"modules/NgxHideableHeaderDemoModule.html":{}},"body":{"modules/NgxHideableHeaderDemoModule.html":{},"modules.html":{}}}],["ngxhideableheaderdemoroutes",{"_index":1542,"title":{},"body":{"modules/NgxHideableHeaderDemoModule.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["ngxtinynodescorematerialmodule",{"_index":1543,"title":{"modules/NgxTinynodesCoreMaterialModule.html":{}},"body":{"modules/NgxTinynodesCoreMaterialModule.html":{},"modules/NgxTinynodesCoreModule.html":{},"modules.html":{},"overview.html":{}}}],["ngxtinynodescoremodule",{"_index":250,"title":{"modules/NgxTinynodesCoreModule.html":{}},"body":{"modules/AppModule.html":{},"modules/NgxEditorjsDemoModule.html":{},"modules/NgxTinynodesCoreModule.html":{},"modules.html":{},"overview.html":{}}}],["ngzone",{"_index":995,"title":{},"body":{"injectables/MockNgZone.html":{}}}],["none",{"_index":162,"title":{},"body":{"components/AppContainerComponent.html":{},"components/NavBarComponent.html":{}}}],["noninfringement",{"_index":2138,"title":{},"body":{"license.html":{}}}],["notable",{"_index":2210,"title":{},"body":{"additional-documentation/tinynodes-library-docs/ngx-editorjs-readme/ngx-editorjs-changelog.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-plugins-readme/ngx-editorjs-plugins-changelog.html":{}}}],["note",{"_index":1797,"title":{},"body":{"contributing.html":{},"additional-documentation/tinynodes-library-docs.html":{}}}],["notice",{"_index":2124,"title":{},"body":{"license.html":{}}}],["notready",{"_index":563,"title":{"classes/NotReady.html":{}},"body":{"classes/Changed.html":{},"classes/NotReady.html":{},"classes/Ready.html":{},"classes/SaveEnd.html":{},"classes/SaveStart.html":{},"coverage.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/typealiases.html":{}}}],["now",{"_index":894,"title":{},"body":{"components/FormContainerComponent.html":{},"changelog.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-readme/ngx-editorjs-changelog.html":{}}}],["npm",{"_index":951,"title":{},"body":{"components/HomePageComponent.html":{},"dependencies.html":{},"index.html":{},"additional-documentation/tinynodes-library-docs.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-readme.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-readme/ngx-editorjs-changelog.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-plugins-readme.html":{}}}],["nrwl/nx",{"_index":1770,"title":{},"body":{"changelog.html":{}}}],["null",{"_index":754,"title":{},"body":{"interfaces/EditorJSMaterialForm.html":{},"injectables/NgxEditorJSPluginService.html":{},"components/PageContainerComponent.html":{}}}],["number",{"_index":512,"title":{},"body":{"interfaces/Block.html":{},"interfaces/BlocksMap.html":{},"interfaces/ChangeMap.html":{},"interfaces/EditorJSConfig.html":{},"interfaces/EditorMap.html":{},"interfaces/EventMap.html":{},"interfaces/EventType.html":{},"components/FormContainerComponent.html":{},"interfaces/Header.html":{},"interfaces/HeaderBlock.html":{},"interfaces/Image.html":{},"interfaces/ImageBlock.html":{},"interfaces/List.html":{},"interfaces/ListBlock.html":{},"components/NgxEditorJSBaseComponent.html":{},"components/NgxEditorJSComponent.html":{},"interfaces/NgxEditorJSConfig.html":{},"directives/NgxEditorJSDirective.html":{},"interfaces/Paragraph.html":{},"interfaces/ParagraphBlock.html":{},"interfaces/ReadyMap.html":{}}}],["numbers",{"_index":1812,"title":{},"body":{"contributing.html":{}}}],["nx",{"_index":2092,"title":{},"body":{"index.html":{}}}],["object",{"_index":449,"title":{},"body":{"interfaces/ApplicationState.html":{},"interfaces/ApplicationState-1.html":{},"interfaces/DemoData.html":{},"interfaces/DemoData-1.html":{},"interfaces/NgxEditorJSDemo.html":{},"interfaces/NgxEditorJSDemo-1.html":{},"interfaces/NgxEditorJSDemoData.html":{},"interfaces/NgxEditorJSDemoData-1.html":{},"injectables/NgxEditorJSPluginService.html":{},"injectables/NgxEditorJSService.html":{},"interfaces/TinynodeDemos.html":{},"interfaces/TinynodeDemos-1.html":{},"miscellaneous/variables.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-readme.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-readme/ngx-editorjs-changelog.html":{}}}],["object.entries",{"_index":1382,"title":{},"body":{"injectables/NgxEditorJSPluginService.html":{}}}],["object.entries(this.pluginsmap",{"_index":1388,"title":{},"body":{"injectables/NgxEditorJSPluginService.html":{}}}],["object.keys(changes",{"_index":1271,"title":{},"body":{"directives/NgxEditorJSDirective.html":{}}}],["obligated",{"_index":1957,"title":{},"body":{"contributing.html":{}}}],["observable",{"_index":105,"title":{},"body":{"components/AppContainerComponent.html":{},"injectables/AppService.html":{},"injectables/AppService-1.html":{},"components/FormContainerComponent.html":{},"components/NgxEditorJSBaseComponent.html":{},"components/NgxEditorJSComponent.html":{},"components/NgxEditorJSDemoInfoComponent.html":{},"directives/NgxEditorJSDirective.html":{},"injectables/NgxEditorJSEffects.html":{},"injectables/NgxEditorJSService.html":{},"components/PageContainerComponent.html":{},"injectables/PagesService.html":{}}}],["obtaining",{"_index":2102,"title":{},"body":{"license.html":{}}}],["offensive",{"_index":1922,"title":{},"body":{"contributing.html":{}}}],["official",{"_index":1929,"title":{},"body":{"contributing.html":{}}}],["officially",{"_index":1775,"title":{},"body":{"changelog.html":{}}}],["offline",{"_index":1940,"title":{},"body":{"contributing.html":{}}}],["oftype",{"_index":1308,"title":{},"body":{"injectables/NgxEditorJSEffects.html":{}}}],["oftype(editorjsactiontypes.savestart",{"_index":1298,"title":{},"body":{"injectables/NgxEditorJSEffects.html":{}}}],["once",{"_index":1820,"title":{},"body":{"contributing.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-readme.html":{}}}],["onchange",{"_index":640,"title":{},"body":{"interfaces/EditorJSInstanceConfig.html":{},"interfaces/InjectorMethodOption.html":{},"components/NgxEditorJSBaseComponent.html":{},"components/NgxEditorJSComponent.html":{}}}],["onchanges",{"_index":1203,"title":{},"body":{"directives/NgxEditorJSDirective.html":{}}}],["onclick",{"_index":1256,"title":{},"body":{"directives/NgxEditorJSDirective.html":{}}}],["oncontainerclick(event",{"_index":743,"title":{},"body":{"interfaces/EditorJSMaterialForm.html":{}}}],["ondestroy",{"_index":20,"title":{},"body":{"components/AppContainerComponent.html":{},"interfaces/EditorJSMaterialForm.html":{},"components/FormContainerComponent.html":{},"components/NgxEditorJSBaseComponent.html":{},"components/NgxEditorJSComponent.html":{},"directives/NgxEditorJSDirective.html":{},"injectables/NgxEditorJSService.html":{},"components/PageContainerComponent.html":{}}}],["one",{"_index":421,"title":{},"body":{"interfaces/ApplicationData.html":{},"interfaces/ApplicationData-1.html":{},"interfaces/MenuGroup.html":{},"interfaces/MenuGroup-1.html":{},"interfaces/MenuItem.html":{},"interfaces/MenuItem-1.html":{}}}],["oninit",{"_index":656,"title":{},"body":{"interfaces/EditorJSMaterialForm.html":{},"components/NgxEditorJSDemoInfoComponent.html":{}}}],["online",{"_index":1939,"title":{},"body":{"contributing.html":{}}}],["onready",{"_index":641,"title":{},"body":{"interfaces/EditorJSInstanceConfig.html":{},"interfaces/InjectorMethodOption.html":{}}}],["onstable",{"_index":996,"title":{},"body":{"injectables/MockNgZone.html":{}}}],["ontouch",{"_index":1033,"title":{},"body":{"components/NgxEditorJSBaseComponent.html":{},"components/NgxEditorJSComponent.html":{}}}],["open",{"_index":113,"title":{},"body":{"components/AppContainerComponent.html":{},"components/FormContainerComponent.html":{},"components/NgxEditorJSDemoInfoComponent.html":{},"contributing.html":{}}}],["opensourcemenu",{"_index":46,"title":{},"body":{"components/AppContainerComponent.html":{},"components/SidebarComponent.html":{}}}],["opensourcemenu.title",{"_index":1730,"title":{},"body":{"components/SidebarComponent.html":{}}}],["option",{"_index":622,"title":{},"body":{"interfaces/EditorJSConfig.html":{},"interfaces/EditorJSInstanceConfig.html":{},"interfaces/InjectorMethodOption.html":{},"interfaces/NgxEditorJSConfig.html":{},"todo.html":{}}}],["optional",{"_index":60,"title":{},"body":{"components/AppContainerComponent.html":{},"injectables/AppService.html":{},"injectables/AppService-1.html":{},"interfaces/ApplicationData.html":{},"interfaces/ApplicationData-1.html":{},"injectables/ApplicationQuery.html":{},"injectables/ApplicationQuery-1.html":{},"interfaces/BasePlugin.html":{},"interfaces/BasePlugin-1.html":{},"interfaces/Block.html":{},"classes/Changed.html":{},"interfaces/CreateEditorJSOptions.html":{},"interfaces/EditorJSAction.html":{},"interfaces/EditorJSConfig.html":{},"interfaces/EditorJSInstanceConfig.html":{},"interfaces/EditorJSMaterialForm.html":{},"interfaces/EventType.html":{},"components/FormContainerComponent.html":{},"interfaces/Header.html":{},"interfaces/HeaderBlock.html":{},"components/HomePageComponent.html":{},"interfaces/Image.html":{},"interfaces/ImageBlock.html":{},"interfaces/InjectorMethodOption.html":{},"interfaces/List.html":{},"interfaces/ListBlock.html":{},"interfaces/MenuGroup.html":{},"interfaces/MenuGroup-1.html":{},"interfaces/MenuItem.html":{},"interfaces/MenuItem-1.html":{},"classes/MockEditorJS.html":{},"injectables/MockNgZone.html":{},"components/NgxEditorJSBaseComponent.html":{},"components/NgxEditorJSComponent.html":{},"interfaces/NgxEditorJSConfig.html":{},"components/NgxEditorJSDemoInfoComponent.html":{},"directives/NgxEditorJSDirective.html":{},"injectables/NgxEditorJSEffects.html":{},"modules/NgxEditorJSModule.html":{},"injectables/NgxEditorJSPluginService.html":{},"injectables/NgxEditorJSService.html":{},"classes/NotReady.html":{},"components/PageContainerComponent.html":{},"injectables/PagesQuery.html":{},"injectables/PagesService.html":{},"interfaces/Paragraph.html":{},"interfaces/ParagraphBlock.html":{},"interfaces/PluginConfig.html":{},"interfaces/PluginConfig-1.html":{},"classes/Ready.html":{},"classes/SaveEnd.html":{},"classes/SaveStart.html":{},"interfaces/ToolSettingsMap.html":{},"interfaces/ToolSettingsMap-1.html":{},"miscellaneous/functions.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-readme.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-readme/ngx-editorjs-changelog.html":{}}}],["options",{"_index":574,"title":{},"body":{"interfaces/CreateEditorJSOptions.html":{},"interfaces/EditorJSAction.html":{},"interfaces/EditorJSConfig.html":{},"interfaces/EditorJSInstanceConfig.html":{},"interfaces/InjectorMethodOption.html":{},"interfaces/NgxEditorJSConfig.html":{},"injectables/NgxEditorJSService.html":{},"todo.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-readme.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-readme/ngx-editorjs-changelog.html":{}}}],["options.config",{"_index":1455,"title":{},"body":{"injectables/NgxEditorJSService.html":{}}}],["ordered",{"_index":501,"title":{},"body":{"interfaces/Block.html":{},"interfaces/Header.html":{},"interfaces/HeaderBlock.html":{},"interfaces/Image.html":{},"interfaces/ImageBlock.html":{},"interfaces/List.html":{},"interfaces/ListBlock.html":{},"interfaces/Paragraph.html":{},"interfaces/ParagraphBlock.html":{},"miscellaneous/typealiases.html":{}}}],["orientation",{"_index":1852,"title":{},"body":{"contributing.html":{}}}],["origin",{"_index":1112,"title":{},"body":{"components/NgxEditorJSBaseComponent.html":{}}}],["others",{"_index":1887,"title":{},"body":{"contributing.html":{}}}],["otherwise",{"_index":1946,"title":{},"body":{"contributing.html":{},"license.html":{}}}],["out",{"_index":253,"title":{},"body":{"modules/AppModule.html":{},"modules/ApplicationDataModule.html":{},"modules/NgxEditorJSModule.html":{},"modules/NgxEditorjsDemoModule.html":{},"modules/NgxEditorjsNgrxModule.html":{},"modules/NgxEditorjsPluginsModule.html":{},"modules/NgxTinynodesCoreModule.html":{},"modules/PageStoreModule.html":{},"modules/PluginCodeModule.html":{},"modules/PluginHeaderModule.html":{},"modules/PluginImageModule.html":{},"modules/PluginLinkModule.html":{},"modules/PluginListModule.html":{},"modules/PluginMarkerModule.html":{},"modules/PluginParagraphModule.html":{},"modules/PluginSimpleImageModule.html":{},"index.html":{},"license.html":{},"overview.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-readme.html":{}}}],["output",{"_index":608,"title":{},"body":{"interfaces/EditorJSConfig.html":{},"components/FormContainerComponent.html":{},"components/NavBarComponent.html":{},"components/NgxEditorJSBaseComponent.html":{},"interfaces/NgxEditorJSConfig.html":{},"directives/NgxEditorJSDirective.html":{},"components/PageContainerComponent.html":{}}}],["outputdata",{"_index":556,"title":{},"body":{"classes/Changed.html":{},"interfaces/EditorJSConfig.html":{},"interfaces/NgxEditorJSConfig.html":{},"injectables/NgxEditorJSService.html":{},"classes/NotReady.html":{},"classes/Ready.html":{},"classes/SaveEnd.html":{},"classes/SaveStart.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-readme.html":{}}}],["outputs",{"_index":1021,"title":{},"body":{"components/NavBarComponent.html":{},"components/NgxEditorJSBaseComponent.html":{},"components/NgxEditorJSComponent.html":{},"directives/NgxEditorJSDirective.html":{}}}],["over",{"_index":1016,"title":{},"body":{"components/NavBarComponent.html":{}}}],["overall",{"_index":1738,"title":{},"body":{"changelog.html":{}}}],["overflow",{"_index":932,"title":{},"body":{"components/FormContainerComponent.html":{},"components/NgxEditorJSDemoInfoComponent.html":{},"components/PageContainerComponent.html":{}}}],["overide",{"_index":817,"title":{},"body":{"components/FormContainerComponent.html":{},"components/PageContainerComponent.html":{}}}],["overview",{"_index":2154,"title":{"overview.html":{}},"body":{"overview.html":{}}}],["owners",{"_index":1796,"title":{},"body":{"contributing.html":{}}}],["package",{"_index":1758,"title":{"dependencies.html":{}},"body":{"changelog.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-readme/ngx-editorjs-changelog.html":{}}}],["padding",{"_index":172,"title":{},"body":{"components/AppContainerComponent.html":{},"components/NavBarComponent.html":{}}}],["page",{"_index":67,"title":{"interfaces/Page.html":{},"additional-documentation/tinynodes-library-docs.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-readme.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-readme/ngx-editorjs-changelog.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-plugins-readme.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-plugins-readme/ngx-editorjs-plugins-changelog.html":{}},"body":{"components/AppContainerComponent.html":{},"modules/AppModule.html":{},"components/FormContainerComponent.html":{},"components/HomePageComponent.html":{},"components/NavBarComponent.html":{},"components/NgxEditorJSBaseComponent.html":{},"components/NgxEditorJSComponent.html":{},"components/NgxEditorJSDemoHomeComponent.html":{},"components/NgxEditorJSDemoInfoComponent.html":{},"interfaces/Page.html":{},"interfaces/PageBlock.html":{},"components/PageContainerComponent.html":{},"modules/PageStoreModule.html":{},"injectables/PagesQuery.html":{},"injectables/PagesService.html":{},"interfaces/PagesState.html":{},"injectables/PagesStore.html":{},"components/SidebarComponent.html":{},"interfaces/Tag.html":{},"coverage.html":{},"todo.html":{}}}],["page'},{'name",{"_index":206,"title":{},"body":{"components/AppContainerComponent.html":{},"components/FormContainerComponent.html":{},"components/HomePageComponent.html":{},"components/NavBarComponent.html":{},"components/NgxEditorJSBaseComponent.html":{},"components/NgxEditorJSComponent.html":{},"components/NgxEditorJSDemoHomeComponent.html":{},"components/NgxEditorJSDemoInfoComponent.html":{},"components/PageContainerComponent.html":{},"components/SidebarComponent.html":{}}}],["page.component",{"_index":291,"title":{},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{}}}],["page.component.html",{"_index":939,"title":{},"body":{"components/HomePageComponent.html":{}}}],["page.component.scss",{"_index":938,"title":{},"body":{"components/HomePageComponent.html":{}}}],["page.component.ts",{"_index":937,"title":{},"body":{"components/HomePageComponent.html":{},"coverage.html":{}}}],["page.component.ts:12",{"_index":941,"title":{},"body":{"components/HomePageComponent.html":{}}}],["page.component.ts:9",{"_index":940,"title":{},"body":{"components/HomePageComponent.html":{}}}],["page.id",{"_index":1623,"title":{},"body":{"injectables/PagesService.html":{}}}],["pageblock",{"_index":1559,"title":{"interfaces/PageBlock.html":{}},"body":{"interfaces/Page.html":{},"interfaces/PageBlock.html":{},"injectables/PagesService.html":{},"interfaces/Tag.html":{},"coverage.html":{}}}],["pagecontainercomponent",{"_index":224,"title":{"components/PageContainerComponent.html":{}},"body":{"components/AppContainerComponent.html":{},"components/FormContainerComponent.html":{},"components/HomePageComponent.html":{},"components/NavBarComponent.html":{},"components/NgxEditorJSBaseComponent.html":{},"components/NgxEditorJSComponent.html":{},"components/NgxEditorJSDemoHomeComponent.html":{},"components/NgxEditorJSDemoInfoComponent.html":{},"modules/NgxEditorjsDemoModule.html":{},"components/PageContainerComponent.html":{},"components/SidebarComponent.html":{},"coverage.html":{},"overview.html":{},"miscellaneous/variables.html":{}}}],["pageeditor",{"_index":833,"title":{},"body":{"components/FormContainerComponent.html":{}}}],["pageid",{"_index":1603,"title":{},"body":{"injectables/PagesService.html":{}}}],["pagename",{"_index":830,"title":{},"body":{"components/FormContainerComponent.html":{}}}],["pages",{"_index":796,"title":{},"body":{"components/FormContainerComponent.html":{},"components/PageContainerComponent.html":{},"modules/PageStoreModule.html":{},"injectables/PagesService.html":{},"interfaces/PagesState.html":{},"injectables/PagesStore.html":{}}}],["pages.models",{"_index":1591,"title":{},"body":{"injectables/PagesQuery.html":{},"injectables/PagesService.html":{},"interfaces/PagesState.html":{},"injectables/PagesStore.html":{}}}],["pages.query",{"_index":1585,"title":{},"body":{"modules/PageStoreModule.html":{},"injectables/PagesService.html":{}}}],["pages.service",{"_index":1586,"title":{},"body":{"modules/PageStoreModule.html":{}}}],["pages.store",{"_index":1587,"title":{},"body":{"modules/PageStoreModule.html":{},"injectables/PagesQuery.html":{},"injectables/PagesService.html":{}}}],["pages/home/home",{"_index":290,"title":{},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{}}}],["pagesquery",{"_index":1580,"title":{"injectables/PagesQuery.html":{}},"body":{"modules/PageStoreModule.html":{},"injectables/PagesQuery.html":{},"injectables/PagesService.html":{},"coverage.html":{},"overview.html":{}}}],["pagesservice",{"_index":798,"title":{"injectables/PagesService.html":{}},"body":{"components/FormContainerComponent.html":{},"components/PageContainerComponent.html":{},"modules/PageStoreModule.html":{},"injectables/PagesService.html":{},"coverage.html":{},"overview.html":{}}}],["pagesstate",{"_index":1592,"title":{"interfaces/PagesState.html":{}},"body":{"injectables/PagesQuery.html":{},"interfaces/PagesState.html":{},"injectables/PagesStore.html":{},"coverage.html":{}}}],["pagesstore",{"_index":1581,"title":{"injectables/PagesStore.html":{}},"body":{"modules/PageStoreModule.html":{},"injectables/PagesQuery.html":{},"injectables/PagesService.html":{},"interfaces/PagesState.html":{},"injectables/PagesStore.html":{},"coverage.html":{},"overview.html":{}}}],["pagestoremodule",{"_index":1474,"title":{"modules/PageStoreModule.html":{}},"body":{"modules/NgxEditorjsDemoModule.html":{},"modules/PageStoreModule.html":{},"modules.html":{},"overview.html":{}}}],["pagetags",{"_index":831,"title":{},"body":{"components/FormContainerComponent.html":{},"interfaces/Page.html":{},"interfaces/PageBlock.html":{},"injectables/PagesService.html":{},"interfaces/Tag.html":{}}}],["pagetitle",{"_index":42,"title":{},"body":{"components/AppContainerComponent.html":{},"interfaces/Page.html":{},"interfaces/PageBlock.html":{},"injectables/PagesService.html":{},"interfaces/Tag.html":{}}}],["panel",{"_index":825,"title":{},"body":{"components/FormContainerComponent.html":{},"components/NgxEditorJSDemoInfoComponent.html":{},"components/PageContainerComponent.html":{}}}],["panelopen",{"_index":791,"title":{},"body":{"components/FormContainerComponent.html":{},"components/NgxEditorJSDemoInfoComponent.html":{}}}],["paragraph",{"_index":507,"title":{"interfaces/Paragraph.html":{}},"body":{"interfaces/Block.html":{},"interfaces/EditorJSConfig.html":{},"components/FormContainerComponent.html":{},"interfaces/Header.html":{},"interfaces/HeaderBlock.html":{},"interfaces/Image.html":{},"interfaces/ImageBlock.html":{},"interfaces/List.html":{},"interfaces/ListBlock.html":{},"components/NgxEditorJSBaseComponent.html":{},"components/NgxEditorJSComponent.html":{},"interfaces/NgxEditorJSConfig.html":{},"directives/NgxEditorJSDirective.html":{},"components/PageContainerComponent.html":{},"interfaces/Paragraph.html":{},"interfaces/ParagraphBlock.html":{},"injectables/PluginParagraph.html":{},"coverage.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-readme.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-readme/ngx-editorjs-changelog.html":{}}}],["paragraph.plugin",{"_index":1704,"title":{},"body":{"modules/PluginParagraphModule.html":{}}}],["paragraphblock",{"_index":508,"title":{"interfaces/ParagraphBlock.html":{}},"body":{"interfaces/Block.html":{},"interfaces/Header.html":{},"interfaces/HeaderBlock.html":{},"interfaces/Image.html":{},"interfaces/ImageBlock.html":{},"interfaces/List.html":{},"interfaces/ListBlock.html":{},"interfaces/Paragraph.html":{},"interfaces/ParagraphBlock.html":{},"coverage.html":{},"miscellaneous/typealiases.html":{}}}],["param",{"_index":138,"title":{},"body":{"components/AppContainerComponent.html":{},"injectables/AppService.html":{},"injectables/AppService-1.html":{},"injectables/ApplicationQuery.html":{},"injectables/ApplicationQuery-1.html":{},"interfaces/EditorJSMaterialForm.html":{},"components/FormContainerComponent.html":{},"components/NgxEditorJSBaseComponent.html":{},"components/NgxEditorJSComponent.html":{},"directives/NgxEditorJSDirective.html":{},"modules/NgxEditorJSModule.html":{},"injectables/NgxEditorJSPluginService.html":{},"injectables/NgxEditorJSService.html":{},"components/PageContainerComponent.html":{},"injectables/PagesService.html":{}}}],["parameter",{"_index":2221,"title":{},"body":{"additional-documentation/tinynodes-library-docs/ngx-editorjs-readme/ngx-editorjs-changelog.html":{}}}],["parameters",{"_index":56,"title":{},"body":{"components/AppContainerComponent.html":{},"injectables/AppService.html":{},"injectables/AppService-1.html":{},"injectables/ApplicationQuery.html":{},"injectables/ApplicationQuery-1.html":{},"classes/Changed.html":{},"components/FormContainerComponent.html":{},"components/HomePageComponent.html":{},"classes/MockEditorJS.html":{},"injectables/MockNgZone.html":{},"components/NgxEditorJSBaseComponent.html":{},"components/NgxEditorJSComponent.html":{},"components/NgxEditorJSDemoInfoComponent.html":{},"directives/NgxEditorJSDirective.html":{},"injectables/NgxEditorJSEffects.html":{},"modules/NgxEditorJSModule.html":{},"injectables/NgxEditorJSPluginService.html":{},"injectables/NgxEditorJSService.html":{},"classes/NotReady.html":{},"components/PageContainerComponent.html":{},"injectables/PagesQuery.html":{},"injectables/PagesService.html":{},"classes/Ready.html":{},"classes/SaveEnd.html":{},"classes/SaveStart.html":{},"contributing.html":{},"miscellaneous/functions.html":{}}}],["parentmodule",{"_index":1352,"title":{},"body":{"modules/NgxEditorJSModule.html":{}}}],["participants",{"_index":1875,"title":{},"body":{"contributing.html":{}}}],["participation",{"_index":1832,"title":{},"body":{"contributing.html":{}}}],["particular",{"_index":2136,"title":{},"body":{"license.html":{}}}],["pass",{"_index":1327,"title":{},"body":{"modules/NgxEditorJSModule.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-readme.html":{}}}],["passed",{"_index":623,"title":{},"body":{"interfaces/EditorJSConfig.html":{},"interfaces/NgxEditorJSConfig.html":{},"injectables/NgxEditorJSPluginService.html":{}}}],["passing",{"_index":2224,"title":{},"body":{"additional-documentation/tinynodes-library-docs/ngx-editorjs-readme/ngx-editorjs-changelog.html":{}}}],["paste",{"_index":917,"title":{},"body":{"components/FormContainerComponent.html":{},"components/PageContainerComponent.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-plugins-readme.html":{}}}],["path",{"_index":313,"title":{},"body":{"modules/AppRoutingModule.html":{},"miscellaneous/variables.html":{}}}],["pathmatch",{"_index":315,"title":{},"body":{"modules/AppRoutingModule.html":{},"miscellaneous/variables.html":{}}}],["paths",{"_index":1233,"title":{},"body":{"directives/NgxEditorJSDirective.html":{}}}],["payload",{"_index":533,"title":{},"body":{"interfaces/BlocksMap.html":{},"interfaces/ChangeMap.html":{},"classes/Changed.html":{},"interfaces/CreateEditorJSOptions.html":{},"interfaces/EditorJSAction.html":{},"interfaces/EditorMap.html":{},"interfaces/EventMap.html":{},"interfaces/EventType.html":{},"classes/NotReady.html":{},"classes/Ready.html":{},"interfaces/ReadyMap.html":{},"classes/SaveEnd.html":{},"classes/SaveStart.html":{}}}],["peer",{"_index":2167,"title":{},"body":{"todo.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-plugins-readme.html":{}}}],["peerdependencies",{"_index":2256,"title":{},"body":{"additional-documentation/tinynodes-library-docs/ngx-editorjs-plugins-readme.html":{}}}],["permanent",{"_index":1970,"title":{},"body":{"contributing.html":{}}}],["permanently",{"_index":1917,"title":{},"body":{"contributing.html":{}}}],["permission",{"_index":1823,"title":{},"body":{"contributing.html":{},"license.html":{}}}],["permit",{"_index":2118,"title":{},"body":{"license.html":{}}}],["person",{"_index":2101,"title":{},"body":{"license.html":{}}}],["personal",{"_index":1847,"title":{},"body":{"contributing.html":{}}}],["persons",{"_index":2119,"title":{},"body":{"license.html":{}}}],["physical",{"_index":1889,"title":{},"body":{"contributing.html":{}}}],["pipe",{"_index":142,"title":{},"body":{"components/AppContainerComponent.html":{},"components/FormContainerComponent.html":{}}}],["pipe(filter(editor",{"_index":1461,"title":{},"body":{"injectables/NgxEditorJSService.html":{}}}],["pipe(take(1",{"_index":882,"title":{},"body":{"components/FormContainerComponent.html":{},"components/PageContainerComponent.html":{}}}],["pipe(takeuntil(this.ondestroy",{"_index":763,"title":{},"body":{"interfaces/EditorJSMaterialForm.html":{},"components/NgxEditorJSComponent.html":{}}}],["pipeline",{"_index":2161,"title":{},"body":{"todo.html":{}}}],["piper",{"_index":2090,"title":{},"body":{"index.html":{},"license.html":{}}}],["placeholder",{"_index":607,"title":{},"body":{"interfaces/EditorJSConfig.html":{},"interfaces/EditorJSMaterialForm.html":{},"components/NgxEditorJSBaseComponent.html":{},"components/NgxEditorJSComponent.html":{},"interfaces/NgxEditorJSConfig.html":{},"directives/NgxEditorJSDirective.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-readme.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-readme/ngx-editorjs-changelog.html":{}}}],["placeholder(placeholder",{"_index":701,"title":{},"body":{"interfaces/EditorJSMaterialForm.html":{}}}],["please",{"_index":1790,"title":{},"body":{"contributing.html":{},"additional-documentation/tinynodes-library-docs.html":{}}}],["pledge",{"_index":1826,"title":{},"body":{"contributing.html":{}}}],["pluck",{"_index":1572,"title":{},"body":{"components/PageContainerComponent.html":{}}}],["plug",{"_index":1526,"title":{},"body":{"modules/NgxEditorjsPluginsModule.html":{}}}],["plugin",{"_index":469,"title":{},"body":{"interfaces/BasePlugin.html":{},"interfaces/BasePlugin-1.html":{},"interfaces/Block.html":{},"components/FormContainerComponent.html":{},"interfaces/Header.html":{},"interfaces/HeaderBlock.html":{},"interfaces/Image.html":{},"interfaces/ImageBlock.html":{},"interfaces/List.html":{},"interfaces/ListBlock.html":{},"classes/MockEditorJS.html":{},"classes/MockPlugin.html":{},"injectables/NgxEditorJSPluginService.html":{},"components/PageContainerComponent.html":{},"interfaces/Paragraph.html":{},"interfaces/ParagraphBlock.html":{},"injectables/PluginCode.html":{},"interfaces/PluginConfig.html":{},"interfaces/PluginConfig-1.html":{},"injectables/PluginHeader.html":{},"injectables/PluginImage.html":{},"injectables/PluginLink.html":{},"injectables/PluginList.html":{},"injectables/PluginMarker.html":{},"injectables/PluginParagraph.html":{},"injectables/PluginSimpleImage.html":{},"classes/TestClass.html":{},"interfaces/ToolSettingsMap.html":{},"interfaces/ToolSettingsMap-1.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-readme.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-readme/ngx-editorjs-changelog.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-plugins-readme.html":{}}}],["plugin.plugin",{"_index":1393,"title":{},"body":{"injectables/NgxEditorJSPluginService.html":{}}}],["plugin.shortcut",{"_index":1392,"title":{},"body":{"injectables/NgxEditorJSPluginService.html":{}}}],["plugincode",{"_index":1635,"title":{"injectables/PluginCode.html":{}},"body":{"injectables/PluginCode.html":{},"modules/PluginCodeModule.html":{},"coverage.html":{},"overview.html":{}}}],["plugincodemodule",{"_index":1475,"title":{"modules/PluginCodeModule.html":{}},"body":{"modules/NgxEditorjsDemoModule.html":{},"modules/NgxEditorjsPluginsModule.html":{},"modules/PluginCodeModule.html":{},"modules.html":{},"overview.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-plugins-readme.html":{}}}],["pluginconfig",{"_index":480,"title":{"interfaces/PluginConfig.html":{},"interfaces/PluginConfig-1.html":{}},"body":{"interfaces/BasePlugin.html":{},"interfaces/BasePlugin-1.html":{},"injectables/NgxEditorJSPluginService.html":{},"interfaces/PluginConfig.html":{},"interfaces/PluginConfig-1.html":{},"interfaces/ToolSettingsMap.html":{},"interfaces/ToolSettingsMap-1.html":{},"coverage.html":{},"miscellaneous/functions.html":{}}}],["pluginheader",{"_index":1649,"title":{"injectables/PluginHeader.html":{}},"body":{"injectables/PluginHeader.html":{},"modules/PluginHeaderModule.html":{},"coverage.html":{},"overview.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-readme.html":{}}}],["pluginheadermodule",{"_index":1476,"title":{"modules/PluginHeaderModule.html":{}},"body":{"modules/NgxEditorjsDemoModule.html":{},"modules/NgxEditorjsPluginsModule.html":{},"modules/PluginHeaderModule.html":{},"modules.html":{},"overview.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-readme.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-plugins-readme.html":{}}}],["pluginilistmodule",{"_index":2260,"title":{},"body":{"additional-documentation/tinynodes-library-docs/ngx-editorjs-plugins-readme.html":{}}}],["pluginimage",{"_index":1658,"title":{"injectables/PluginImage.html":{}},"body":{"injectables/PluginImage.html":{},"modules/PluginImageModule.html":{},"coverage.html":{},"overview.html":{}}}],["pluginimagemodule",{"_index":1521,"title":{"modules/PluginImageModule.html":{}},"body":{"modules/NgxEditorjsPluginsModule.html":{},"modules/PluginImageModule.html":{},"modules.html":{},"overview.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-plugins-readme.html":{}}}],["pluginlink",{"_index":1667,"title":{"injectables/PluginLink.html":{}},"body":{"injectables/PluginLink.html":{},"modules/PluginLinkModule.html":{},"coverage.html":{},"overview.html":{}}}],["pluginlinkmodule",{"_index":1477,"title":{"modules/PluginLinkModule.html":{}},"body":{"modules/NgxEditorjsDemoModule.html":{},"modules/NgxEditorjsPluginsModule.html":{},"modules/PluginLinkModule.html":{},"modules.html":{},"overview.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-plugins-readme.html":{}}}],["pluginlist",{"_index":1676,"title":{"injectables/PluginList.html":{}},"body":{"injectables/PluginList.html":{},"modules/PluginListModule.html":{},"coverage.html":{},"overview.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-readme.html":{}}}],["pluginlistmodule",{"_index":1478,"title":{"modules/PluginListModule.html":{}},"body":{"modules/NgxEditorjsDemoModule.html":{},"modules/NgxEditorjsPluginsModule.html":{},"modules/PluginListModule.html":{},"modules.html":{},"overview.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-readme.html":{}}}],["pluginmarker",{"_index":1685,"title":{"injectables/PluginMarker.html":{}},"body":{"injectables/PluginMarker.html":{},"modules/PluginMarkerModule.html":{},"coverage.html":{},"overview.html":{}}}],["pluginmarkermodule",{"_index":1479,"title":{"modules/PluginMarkerModule.html":{}},"body":{"modules/NgxEditorjsDemoModule.html":{},"modules/NgxEditorjsPluginsModule.html":{},"modules/PluginMarkerModule.html":{},"modules.html":{},"overview.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-plugins-readme.html":{}}}],["pluginparagraph",{"_index":1697,"title":{"injectables/PluginParagraph.html":{}},"body":{"injectables/PluginParagraph.html":{},"modules/PluginParagraphModule.html":{},"coverage.html":{},"overview.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-readme.html":{}}}],["pluginparagraphmodule",{"_index":1480,"title":{"modules/PluginParagraphModule.html":{}},"body":{"modules/NgxEditorjsDemoModule.html":{},"modules/NgxEditorjsPluginsModule.html":{},"modules/PluginParagraphModule.html":{},"modules.html":{},"overview.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-readme.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-plugins-readme.html":{}}}],["plugins",{"_index":488,"title":{"additional-documentation/tinynodes-library-docs/ngx-editorjs-plugins-readme.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-plugins-readme/ngx-editorjs-plugins-changelog.html":{}},"body":{"interfaces/BasePlugin.html":{},"interfaces/BasePlugin-1.html":{},"injectables/NgxEditorJSPluginService.html":{},"injectables/NgxEditorJSService.html":{},"modules/NgxEditorjsDemoModule.html":{},"interfaces/PluginConfig.html":{},"interfaces/PluginConfig-1.html":{},"interfaces/ToolSettingsMap.html":{},"interfaces/ToolSettingsMap-1.html":{},"changelog.html":{},"index.html":{},"miscellaneous/variables.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-readme.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-readme/ngx-editorjs-changelog.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-plugins-readme.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-plugins-readme/ngx-editorjs-plugins-changelog.html":{}}}],["plugins.module.ts",{"_index":1523,"title":{},"body":{"modules/NgxEditorjsPluginsModule.html":{}}}],["plugins.service",{"_index":1434,"title":{},"body":{"injectables/NgxEditorJSService.html":{}}}],["plugins/code/code.module",{"_index":1530,"title":{},"body":{"modules/NgxEditorjsPluginsModule.html":{}}}],["plugins/header/header.module",{"_index":1531,"title":{},"body":{"modules/NgxEditorjsPluginsModule.html":{}}}],["plugins/image/image.module",{"_index":1532,"title":{},"body":{"modules/NgxEditorjsPluginsModule.html":{}}}],["plugins/link/link.module",{"_index":1533,"title":{},"body":{"modules/NgxEditorjsPluginsModule.html":{}}}],["plugins/list/list.module",{"_index":1534,"title":{},"body":{"modules/NgxEditorjsPluginsModule.html":{}}}],["plugins/marker/marker.module",{"_index":1535,"title":{},"body":{"modules/NgxEditorjsPluginsModule.html":{}}}],["plugins/paragraph/paragraph.module",{"_index":1536,"title":{},"body":{"modules/NgxEditorjsPluginsModule.html":{}}}],["plugins/simple",{"_index":1537,"title":{},"body":{"modules/NgxEditorjsPluginsModule.html":{}}}],["plugins/src/lib/ngx",{"_index":1522,"title":{},"body":{"modules/NgxEditorjsPluginsModule.html":{}}}],["plugins/src/lib/plugins/code/code.module.ts",{"_index":1641,"title":{},"body":{"modules/PluginCodeModule.html":{}}}],["plugins/src/lib/plugins/code/code.plugin.ts",{"_index":1636,"title":{},"body":{"injectables/PluginCode.html":{},"coverage.html":{}}}],["plugins/src/lib/plugins/code/code.plugin.ts:14",{"_index":1637,"title":{},"body":{"injectables/PluginCode.html":{}}}],["plugins/src/lib/plugins/header/header.module.ts",{"_index":1655,"title":{},"body":{"modules/PluginHeaderModule.html":{}}}],["plugins/src/lib/plugins/header/header.plugin.ts",{"_index":1650,"title":{},"body":{"injectables/PluginHeader.html":{},"coverage.html":{}}}],["plugins/src/lib/plugins/header/header.plugin.ts:14",{"_index":1651,"title":{},"body":{"injectables/PluginHeader.html":{}}}],["plugins/src/lib/plugins/image/image.module.ts",{"_index":1664,"title":{},"body":{"modules/PluginImageModule.html":{}}}],["plugins/src/lib/plugins/image/image.plugin.ts",{"_index":1659,"title":{},"body":{"injectables/PluginImage.html":{},"coverage.html":{}}}],["plugins/src/lib/plugins/image/image.plugin.ts:14",{"_index":1660,"title":{},"body":{"injectables/PluginImage.html":{}}}],["plugins/src/lib/plugins/link/link.module.ts",{"_index":1673,"title":{},"body":{"modules/PluginLinkModule.html":{}}}],["plugins/src/lib/plugins/link/link.plugin.ts",{"_index":1668,"title":{},"body":{"injectables/PluginLink.html":{},"coverage.html":{}}}],["plugins/src/lib/plugins/link/link.plugin.ts:14",{"_index":1669,"title":{},"body":{"injectables/PluginLink.html":{}}}],["plugins/src/lib/plugins/list/list.module.ts",{"_index":1682,"title":{},"body":{"modules/PluginListModule.html":{}}}],["plugins/src/lib/plugins/list/list.plugin.ts",{"_index":1677,"title":{},"body":{"injectables/PluginList.html":{},"coverage.html":{}}}],["plugins/src/lib/plugins/list/list.plugin.ts:14",{"_index":1678,"title":{},"body":{"injectables/PluginList.html":{}}}],["plugins/src/lib/plugins/marker/marker.module.ts",{"_index":1694,"title":{},"body":{"modules/PluginMarkerModule.html":{}}}],["plugins/src/lib/plugins/marker/marker.plugin.ts",{"_index":1686,"title":{},"body":{"injectables/PluginMarker.html":{},"coverage.html":{}}}],["plugins/src/lib/plugins/marker/marker.plugin.ts:14",{"_index":1688,"title":{},"body":{"injectables/PluginMarker.html":{}}}],["plugins/src/lib/plugins/marker/marker.plugin.ts:20",{"_index":1689,"title":{},"body":{"injectables/PluginMarker.html":{}}}],["plugins/src/lib/plugins/paragraph/paragraph.module.ts",{"_index":1703,"title":{},"body":{"modules/PluginParagraphModule.html":{}}}],["plugins/src/lib/plugins/paragraph/paragraph.plugin.ts",{"_index":1698,"title":{},"body":{"injectables/PluginParagraph.html":{},"coverage.html":{}}}],["plugins/src/lib/plugins/paragraph/paragraph.plugin.ts:14",{"_index":1699,"title":{},"body":{"injectables/PluginParagraph.html":{}}}],["plugins/src/lib/plugins/simple",{"_index":1707,"title":{},"body":{"injectables/PluginSimpleImage.html":{},"modules/PluginSimpleImageModule.html":{},"coverage.html":{}}}],["plugins/src/lib/types/plugins.ts",{"_index":495,"title":{},"body":{"interfaces/BasePlugin-1.html":{},"interfaces/PluginConfig-1.html":{},"interfaces/ToolSettingsMap-1.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["plugins/src/lib/types/plugins.ts:17",{"_index":1734,"title":{},"body":{"interfaces/ToolSettingsMap-1.html":{}}}],["plugins/src/lib/types/plugins.ts:7",{"_index":1648,"title":{},"body":{"interfaces/PluginConfig-1.html":{}}}],["pluginservice",{"_index":2262,"title":{},"body":{"additional-documentation/tinynodes-library-docs/ngx-editorjs-plugins-readme/ngx-editorjs-plugins-changelog.html":{}}}],["pluginsimpleimage",{"_index":1706,"title":{"injectables/PluginSimpleImage.html":{}},"body":{"injectables/PluginSimpleImage.html":{},"modules/PluginSimpleImageModule.html":{},"coverage.html":{},"overview.html":{}}}],["pluginsimpleimagemodule",{"_index":1481,"title":{"modules/PluginSimpleImageModule.html":{}},"body":{"modules/NgxEditorjsDemoModule.html":{},"modules/NgxEditorjsPluginsModule.html":{},"modules/PluginSimpleImageModule.html":{},"modules.html":{},"overview.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-plugins-readme.html":{}}}],["pluginsmap",{"_index":1356,"title":{},"body":{"injectables/NgxEditorJSPluginService.html":{}}}],["pointer",{"_index":176,"title":{},"body":{"components/AppContainerComponent.html":{},"components/NavBarComponent.html":{}}}],["pointing",{"_index":920,"title":{},"body":{"components/FormContainerComponent.html":{},"components/PageContainerComponent.html":{}}}],["policies",{"_index":1963,"title":{},"body":{"contributing.html":{}}}],["political",{"_index":1884,"title":{},"body":{"contributing.html":{}}}],["portions",{"_index":2127,"title":{},"body":{"license.html":{}}}],["ports",{"_index":1809,"title":{},"body":{"contributing.html":{}}}],["position",{"_index":1154,"title":{},"body":{"components/NgxEditorJSComponent.html":{}}}],["positive",{"_index":1856,"title":{},"body":{"contributing.html":{}}}],["possible",{"_index":1528,"title":{},"body":{"modules/NgxEditorjsPluginsModule.html":{}}}],["posted",{"_index":1964,"title":{},"body":{"contributing.html":{}}}],["posting",{"_index":1932,"title":{},"body":{"contributing.html":{}}}],["potential",{"_index":2207,"title":{},"body":{"additional-documentation/tinynodes-library-docs/ngx-editorjs-readme.html":{}}}],["pre",{"_index":2253,"title":{},"body":{"additional-documentation/tinynodes-library-docs/ngx-editorjs-readme/ngx-editorjs-changelog.html":{}}}],["press",{"_index":900,"title":{},"body":{"components/FormContainerComponent.html":{}}}],["pressed",{"_index":1025,"title":{},"body":{"components/NavBarComponent.html":{}}}],["private",{"_index":30,"title":{},"body":{"components/AppContainerComponent.html":{},"injectables/AppService.html":{},"injectables/AppService-1.html":{},"interfaces/EditorJSMaterialForm.html":{},"components/FormContainerComponent.html":{},"components/NgxEditorJSDemoInfoComponent.html":{},"directives/NgxEditorJSDirective.html":{},"injectables/NgxEditorJSEffects.html":{},"injectables/NgxEditorJSPluginService.html":{},"injectables/NgxEditorJSService.html":{},"components/PageContainerComponent.html":{},"injectables/PagesService.html":{},"contributing.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-readme.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-readme/ngx-editorjs-changelog.html":{}}}],["process",{"_index":1236,"title":{},"body":{"directives/NgxEditorJSDirective.html":{},"contributing.html":{}}}],["produced",{"_index":1380,"title":{},"body":{"injectables/NgxEditorJSPluginService.html":{}}}],["production",{"_index":2181,"title":{},"body":{"miscellaneous/variables.html":{}}}],["professional",{"_index":1896,"title":{},"body":{"contributing.html":{}}}],["project",{"_index":1771,"title":{},"body":{"changelog.html":{},"contributing.html":{},"index.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-readme.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-readme/ngx-editorjs-changelog.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-plugins-readme.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-plugins-readme/ngx-editorjs-plugins-changelog.html":{}}}],["project's",{"_index":1973,"title":{},"body":{"contributing.html":{}}}],["projects",{"_index":110,"title":{},"body":{"components/AppContainerComponent.html":{},"additional-documentation/tinynodes-library-docs.html":{}}}],["projectsmenu",{"_index":45,"title":{},"body":{"components/AppContainerComponent.html":{},"components/SidebarComponent.html":{}}}],["projectsmenu.title",{"_index":1728,"title":{},"body":{"components/SidebarComponent.html":{}}}],["promise",{"_index":973,"title":{},"body":{"classes/MockEditorJS.html":{},"classes/MockPlugin.html":{},"injectables/NgxEditorJSService.html":{},"classes/TestClass.html":{}}}],["promise.resolve",{"_index":984,"title":{},"body":{"classes/MockEditorJS.html":{},"classes/MockPlugin.html":{},"classes/TestClass.html":{}}}],["properties",{"_index":29,"title":{},"body":{"components/AppContainerComponent.html":{},"interfaces/ApplicationData.html":{},"interfaces/ApplicationData-1.html":{},"interfaces/ApplicationState.html":{},"interfaces/ApplicationState-1.html":{},"interfaces/BasePlugin.html":{},"interfaces/BasePlugin-1.html":{},"interfaces/Block.html":{},"classes/Changed.html":{},"interfaces/CreateEditorJSOptions.html":{},"interfaces/DemoData.html":{},"interfaces/DemoData-1.html":{},"interfaces/EditorJSAction.html":{},"interfaces/EditorJSConfig.html":{},"interfaces/EditorJSInstanceConfig.html":{},"interfaces/EventType.html":{},"components/FormContainerComponent.html":{},"interfaces/Header.html":{},"interfaces/HeaderBlock.html":{},"interfaces/Image.html":{},"interfaces/ImageBlock.html":{},"interfaces/InjectorMethodOption.html":{},"interfaces/List.html":{},"interfaces/ListBlock.html":{},"interfaces/MenuGroup.html":{},"interfaces/MenuGroup-1.html":{},"interfaces/MenuItem.html":{},"interfaces/MenuItem-1.html":{},"classes/MockEditorJS.html":{},"injectables/MockNgZone.html":{},"components/NgxEditorJSBaseComponent.html":{},"components/NgxEditorJSComponent.html":{},"interfaces/NgxEditorJSConfig.html":{},"interfaces/NgxEditorJSDemo.html":{},"interfaces/NgxEditorJSDemo-1.html":{},"components/NgxEditorJSDemoInfoComponent.html":{},"directives/NgxEditorJSDirective.html":{},"injectables/NgxEditorJSEffects.html":{},"injectables/NgxEditorJSPluginService.html":{},"injectables/NgxEditorJSService.html":{},"classes/NotReady.html":{},"interfaces/Page.html":{},"interfaces/PageBlock.html":{},"components/PageContainerComponent.html":{},"injectables/PagesService.html":{},"interfaces/Paragraph.html":{},"interfaces/ParagraphBlock.html":{},"classes/Ready.html":{},"classes/SaveEnd.html":{},"classes/SaveStart.html":{},"interfaces/Tag.html":{},"interfaces/TinynodeDemos.html":{},"interfaces/TinynodeDemos-1.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-readme.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-readme/ngx-editorjs-changelog.html":{}}}],["property",{"_index":517,"title":{},"body":{"interfaces/Block.html":{},"interfaces/EditorJSInstanceConfig.html":{},"interfaces/Header.html":{},"interfaces/HeaderBlock.html":{},"interfaces/Image.html":{},"interfaces/ImageBlock.html":{},"interfaces/InjectorMethodOption.html":{},"interfaces/List.html":{},"interfaces/ListBlock.html":{},"directives/NgxEditorJSDirective.html":{},"interfaces/Paragraph.html":{},"interfaces/ParagraphBlock.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-readme/ngx-editorjs-changelog.html":{}}}],["protected",{"_index":749,"title":{},"body":{"interfaces/EditorJSMaterialForm.html":{},"components/NgxEditorJSBaseComponent.html":{},"components/NgxEditorJSComponent.html":{},"directives/NgxEditorJSDirective.html":{}}}],["provide",{"_index":427,"title":{},"body":{"modules/ApplicationDataModule.html":{},"injectables/ApplicationQuery.html":{},"injectables/ApplicationQuery-1.html":{},"injectables/ApplicationStore.html":{},"injectables/ApplicationStore-1.html":{},"interfaces/EditorJSMaterialForm.html":{},"components/NgxEditorJSBaseComponent.html":{},"modules/NgxEditorJSModule.html":{},"modules/NgxEditorjsDemoModule.html":{},"modules/NgxEditorjsPluginsModule.html":{},"todo.html":{},"miscellaneous/variables.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-readme.html":{}}}],["provided",{"_index":438,"title":{},"body":{"injectables/ApplicationQuery.html":{},"injectables/ApplicationQuery-1.html":{},"interfaces/Block.html":{},"interfaces/EditorJSMaterialForm.html":{},"components/FormContainerComponent.html":{},"interfaces/Header.html":{},"interfaces/HeaderBlock.html":{},"interfaces/Image.html":{},"interfaces/ImageBlock.html":{},"interfaces/List.html":{},"interfaces/ListBlock.html":{},"components/NgxEditorJSComponent.html":{},"modules/NgxEditorJSModule.html":{},"interfaces/Paragraph.html":{},"interfaces/ParagraphBlock.html":{},"license.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-readme.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-readme/ngx-editorjs-changelog.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-plugins-readme/ngx-editorjs-plugins-changelog.html":{}}}],["providedin",{"_index":1379,"title":{},"body":{"injectables/NgxEditorJSPluginService.html":{},"injectables/NgxEditorJSService.html":{}}}],["provider",{"_index":339,"title":{},"body":{"injectables/AppService.html":{},"injectables/AppService-1.html":{},"interfaces/EditorJSMaterialForm.html":{},"components/NgxEditorJSBaseComponent.html":{},"miscellaneous/variables.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-readme.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-readme/ngx-editorjs-changelog.html":{}}}],["providers",{"_index":239,"title":{},"body":{"modules/AppModule.html":{},"injectables/AppService.html":{},"injectables/AppService-1.html":{},"modules/ApplicationDataModule.html":{},"interfaces/EditorJSMaterialForm.html":{},"components/NgxEditorJSBaseComponent.html":{},"modules/NgxEditorJSModule.html":{},"modules/NgxEditorjsDemoModule.html":{},"modules/NgxEditorjsNgrxModule.html":{},"modules/NgxEditorjsPluginsModule.html":{},"modules/NgxTinynodesCoreModule.html":{},"modules/PageStoreModule.html":{},"modules/PluginCodeModule.html":{},"modules/PluginHeaderModule.html":{},"modules/PluginImageModule.html":{},"modules/PluginLinkModule.html":{},"modules/PluginListModule.html":{},"modules/PluginMarkerModule.html":{},"modules/PluginParagraphModule.html":{},"modules/PluginSimpleImageModule.html":{},"overview.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-readme.html":{}}}],["provides",{"_index":15,"title":{},"body":{"components/AppContainerComponent.html":{},"modules/AppRoutingModule.html":{},"injectables/AppService.html":{},"injectables/AppService-1.html":{},"components/FormContainerComponent.html":{},"components/NavBarComponent.html":{},"components/NgxEditorJSBaseComponent.html":{},"components/NgxEditorJSDemoHomeComponent.html":{},"directives/NgxEditorJSDirective.html":{},"modules/NgxEditorJSModule.html":{},"injectables/NgxEditorJSPluginService.html":{},"injectables/NgxEditorJSService.html":{},"modules/NgxEditorjsNgrxModule.html":{},"modules/NgxEditorjsPluginsModule.html":{},"modules/NgxTinynodesCoreModule.html":{},"components/PageContainerComponent.html":{},"injectables/PagesService.html":{},"modules/PluginCodeModule.html":{},"modules/PluginHeaderModule.html":{},"modules/PluginImageModule.html":{},"modules/PluginLinkModule.html":{},"modules/PluginListModule.html":{},"modules/PluginMarkerModule.html":{},"modules/PluginParagraphModule.html":{},"modules/PluginSimpleImageModule.html":{},"changelog.html":{},"index.html":{},"miscellaneous/variables.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-readme.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-readme/ngx-editorjs-changelog.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-plugins-readme.html":{}}}],["providing",{"_index":1169,"title":{},"body":{"components/NgxEditorJSDemoHomeComponent.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-readme/ngx-editorjs-changelog.html":{}}}],["provied",{"_index":626,"title":{},"body":{"interfaces/EditorJSConfig.html":{},"interfaces/NgxEditorJSConfig.html":{},"miscellaneous/variables.html":{}}}],["public",{"_index":39,"title":{},"body":{"components/AppContainerComponent.html":{},"injectables/AppService.html":{},"injectables/AppService-1.html":{},"classes/Changed.html":{},"interfaces/EditorJSMaterialForm.html":{},"components/FormContainerComponent.html":{},"components/HomePageComponent.html":{},"classes/MockEditorJS.html":{},"classes/MockPlugin.html":{},"components/NgxEditorJSBaseComponent.html":{},"components/NgxEditorJSComponent.html":{},"components/NgxEditorJSDemoInfoComponent.html":{},"directives/NgxEditorJSDirective.html":{},"injectables/NgxEditorJSPluginService.html":{},"injectables/NgxEditorJSService.html":{},"classes/NotReady.html":{},"components/PageContainerComponent.html":{},"injectables/PagesService.html":{},"injectables/PluginCode.html":{},"injectables/PluginHeader.html":{},"injectables/PluginImage.html":{},"injectables/PluginLink.html":{},"injectables/PluginList.html":{},"injectables/PluginMarker.html":{},"injectables/PluginParagraph.html":{},"injectables/PluginSimpleImage.html":{},"classes/Ready.html":{},"classes/SaveEnd.html":{},"classes/SaveStart.html":{},"classes/TestClass.html":{},"contributing.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-readme/ngx-editorjs-changelog.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-plugins-readme/ngx-editorjs-plugins-changelog.html":{}}}],["publish",{"_index":2112,"title":{},"body":{"license.html":{},"todo.html":{}}}],["published",{"_index":1511,"title":{},"body":{"modules/NgxEditorjsNgrxModule.html":{}}}],["publishing",{"_index":1886,"title":{},"body":{"contributing.html":{},"todo.html":{}}}],["pull",{"_index":1801,"title":{},"body":{"contributing.html":{}}}],["purpose",{"_index":2137,"title":{},"body":{"license.html":{}}}],["queried",{"_index":328,"title":{},"body":{"injectables/AppService.html":{},"injectables/AppService-1.html":{}}}],["query",{"_index":338,"title":{},"body":{"injectables/AppService.html":{},"injectables/AppService-1.html":{},"injectables/ApplicationQuery.html":{},"injectables/ApplicationQuery-1.html":{},"injectables/PagesService.html":{}}}],["queryentity",{"_index":1589,"title":{},"body":{"injectables/PagesQuery.html":{}}}],["race",{"_index":1849,"title":{},"body":{"contributing.html":{}}}],["radius",{"_index":1160,"title":{},"body":{"components/NgxEditorJSComponent.html":{}}}],["reactive",{"_index":895,"title":{},"body":{"components/FormContainerComponent.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-readme.html":{}}}],["reactiveformsmodule",{"_index":1485,"title":{},"body":{"modules/NgxEditorjsDemoModule.html":{}}}],["readme",{"_index":2087,"title":{"additional-documentation/tinynodes-library-docs/ngx-editorjs-readme.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-plugins-readme.html":{}},"body":{"index.html":{},"additional-documentation/tinynodes-library-docs.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-readme/ngx-editorjs-changelog.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-plugins-readme.html":{}}}],["readme.md",{"_index":1806,"title":{},"body":{"contributing.html":{},"additional-documentation/tinynodes-library-docs.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-plugins-readme/ngx-editorjs-plugins-changelog.html":{}}}],["readonly",{"_index":32,"title":{},"body":{"components/AppContainerComponent.html":{},"injectables/AppService.html":{},"injectables/AppService-1.html":{},"classes/Changed.html":{},"interfaces/EditorJSMaterialForm.html":{},"components/FormContainerComponent.html":{},"components/HomePageComponent.html":{},"components/NgxEditorJSBaseComponent.html":{},"components/NgxEditorJSComponent.html":{},"directives/NgxEditorJSDirective.html":{},"injectables/NgxEditorJSEffects.html":{},"injectables/NgxEditorJSService.html":{},"classes/NotReady.html":{},"components/PageContainerComponent.html":{},"injectables/PagesService.html":{},"classes/Ready.html":{},"classes/SaveEnd.html":{},"classes/SaveStart.html":{}}}],["ready",{"_index":538,"title":{"classes/Ready.html":{}},"body":{"interfaces/BlocksMap.html":{},"interfaces/ChangeMap.html":{},"classes/Changed.html":{},"interfaces/EditorJSInstanceConfig.html":{},"interfaces/EditorMap.html":{},"interfaces/EventMap.html":{},"interfaces/EventType.html":{},"interfaces/InjectorMethodOption.html":{},"components/NgxEditorJSBaseComponent.html":{},"directives/NgxEditorJSDirective.html":{},"injectables/NgxEditorJSService.html":{},"classes/NotReady.html":{},"classes/Ready.html":{},"interfaces/ReadyMap.html":{},"classes/SaveEnd.html":{},"classes/SaveStart.html":{},"coverage.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/typealiases.html":{}}}],["readymap",{"_index":539,"title":{"interfaces/ReadyMap.html":{}},"body":{"interfaces/BlocksMap.html":{},"interfaces/ChangeMap.html":{},"interfaces/EditorJSInstanceConfig.html":{},"interfaces/EditorMap.html":{},"interfaces/EventMap.html":{},"interfaces/EventType.html":{},"interfaces/InjectorMethodOption.html":{},"interfaces/ReadyMap.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["reasonably",{"_index":1893,"title":{},"body":{"contributing.html":{}}}],["redirectto",{"_index":314,"title":{},"body":{"modules/AppRoutingModule.html":{},"miscellaneous/variables.html":{}}}],["reduce((finaltools",{"_index":1391,"title":{},"body":{"injectables/NgxEditorJSPluginService.html":{}}}],["ref",{"_index":805,"title":{},"body":{"components/FormContainerComponent.html":{},"components/PageContainerComponent.html":{}}}],["refactored",{"_index":2220,"title":{},"body":{"additional-documentation/tinynodes-library-docs/ngx-editorjs-readme/ngx-editorjs-changelog.html":{}}}],["regard",{"_index":1960,"title":{},"body":{"contributing.html":{}}}],["regardless",{"_index":1838,"title":{},"body":{"contributing.html":{}}}],["regenerated",{"_index":2245,"title":{},"body":{"additional-documentation/tinynodes-library-docs/ngx-editorjs-readme/ngx-editorjs-changelog.html":{}}}],["register",{"_index":1078,"title":{},"body":{"components/NgxEditorJSBaseComponent.html":{},"components/NgxEditorJSComponent.html":{}}}],["registered",{"_index":1376,"title":{},"body":{"injectables/NgxEditorJSPluginService.html":{}}}],["registeronchange",{"_index":1038,"title":{},"body":{"components/NgxEditorJSBaseComponent.html":{},"components/NgxEditorJSComponent.html":{}}}],["registeronchange(fn",{"_index":1076,"title":{},"body":{"components/NgxEditorJSBaseComponent.html":{},"components/NgxEditorJSComponent.html":{}}}],["registerontouched",{"_index":1039,"title":{},"body":{"components/NgxEditorJSBaseComponent.html":{},"components/NgxEditorJSComponent.html":{}}}],["registerontouched(fn",{"_index":1080,"title":{},"body":{"components/NgxEditorJSBaseComponent.html":{},"components/NgxEditorJSComponent.html":{}}}],["regular",{"_index":926,"title":{},"body":{"components/FormContainerComponent.html":{}}}],["reject",{"_index":1909,"title":{},"body":{"contributing.html":{}}}],["related",{"_index":1194,"title":{},"body":{"components/NgxEditorJSDemoInfoComponent.html":{},"changelog.html":{}}}],["relative",{"_index":1155,"title":{},"body":{"components/NgxEditorJSComponent.html":{}}}],["release",{"_index":1746,"title":{},"body":{"changelog.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-readme/ngx-editorjs-changelog.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-plugins-readme/ngx-editorjs-plugins-changelog.html":{}}}],["released",{"_index":949,"title":{},"body":{"components/HomePageComponent.html":{},"changelog.html":{},"additional-documentation/tinynodes-library-docs.html":{}}}],["religion",{"_index":1850,"title":{},"body":{"contributing.html":{}}}],["remaining",{"_index":771,"title":{},"body":{"interfaces/EditorJSMaterialForm.html":{}}}],["remove",{"_index":1358,"title":{},"body":{"injectables/NgxEditorJSPluginService.html":{},"contributing.html":{}}}],["remove(key",{"_index":1371,"title":{},"body":{"injectables/NgxEditorJSPluginService.html":{}}}],["removeblock",{"_index":1595,"title":{},"body":{"injectables/PagesService.html":{}}}],["removeblock(pageid",{"_index":1608,"title":{},"body":{"injectables/PagesService.html":{}}}],["removed",{"_index":1607,"title":{},"body":{"injectables/PagesService.html":{},"changelog.html":{},"contributing.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-readme/ngx-editorjs-changelog.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-plugins-readme/ngx-editorjs-plugins-changelog.html":{}}}],["removes",{"_index":1606,"title":{},"body":{"injectables/PagesService.html":{}}}],["renamed",{"_index":2251,"title":{},"body":{"additional-documentation/tinynodes-library-docs/ngx-editorjs-readme/ngx-editorjs-changelog.html":{}}}],["render",{"_index":52,"title":{},"body":{"components/AppContainerComponent.html":{},"interfaces/ApplicationData.html":{},"interfaces/ApplicationData-1.html":{},"interfaces/EditorJSConfig.html":{},"interfaces/MenuGroup.html":{},"interfaces/MenuGroup-1.html":{},"interfaces/MenuItem.html":{},"interfaces/MenuItem-1.html":{},"classes/MockEditorJS.html":{},"classes/MockPlugin.html":{},"components/NgxEditorJSBaseComponent.html":{},"components/NgxEditorJSComponent.html":{},"interfaces/NgxEditorJSConfig.html":{},"directives/NgxEditorJSDirective.html":{},"injectables/NgxEditorJSService.html":{},"injectables/PagesService.html":{},"classes/TestClass.html":{}}}],["rendered",{"_index":2186,"title":{},"body":{"additional-documentation/tinynodes-library-docs.html":{}}}],["renderer2",{"_index":53,"title":{},"body":{"components/AppContainerComponent.html":{}}}],["repercussions",{"_index":1971,"title":{},"body":{"contributing.html":{}}}],["replaced",{"_index":2248,"title":{},"body":{"additional-documentation/tinynodes-library-docs/ngx-editorjs-readme/ngx-editorjs-changelog.html":{}}}],["repo",{"_index":1643,"title":{},"body":{"modules/PluginCodeModule.html":{},"modules/PluginHeaderModule.html":{},"modules/PluginImageModule.html":{},"modules/PluginLinkModule.html":{},"modules/PluginListModule.html":{},"modules/PluginMarkerModule.html":{},"modules/PluginParagraphModule.html":{},"modules/PluginSimpleImageModule.html":{},"todo.html":{}}}],["repo](https://github.com/editor",{"_index":1645,"title":{},"body":{"modules/PluginCodeModule.html":{},"modules/PluginHeaderModule.html":{},"modules/PluginImageModule.html":{},"modules/PluginLinkModule.html":{},"modules/PluginListModule.html":{},"modules/PluginMarkerModule.html":{},"modules/PluginParagraphModule.html":{},"modules/PluginSimpleImageModule.html":{}}}],["report",{"_index":1762,"title":{},"body":{"changelog.html":{}}}],["reported",{"_index":1947,"title":{},"body":{"contributing.html":{}}}],["reporter",{"_index":1961,"title":{},"body":{"contributing.html":{}}}],["repository",{"_index":1789,"title":{},"body":{"contributing.html":{},"index.html":{}}}],["represent",{"_index":1815,"title":{},"body":{"contributing.html":{}}}],["representation",{"_index":445,"title":{},"body":{"interfaces/ApplicationState.html":{},"interfaces/ApplicationState-1.html":{},"interfaces/DemoData.html":{},"interfaces/DemoData-1.html":{},"interfaces/NgxEditorJSDemo.html":{},"interfaces/NgxEditorJSDemo-1.html":{},"interfaces/NgxEditorJSDemoData.html":{},"interfaces/NgxEditorJSDemoData-1.html":{},"interfaces/TinynodeDemos.html":{},"interfaces/TinynodeDemos-1.html":{},"contributing.html":{}}}],["representative",{"_index":1938,"title":{},"body":{"contributing.html":{}}}],["representing",{"_index":1928,"title":{},"body":{"contributing.html":{}}}],["request",{"_index":1046,"title":{},"body":{"components/NgxEditorJSBaseComponent.html":{},"components/NgxEditorJSComponent.html":{},"directives/NgxEditorJSDirective.html":{},"contributing.html":{}}}],["requied",{"_index":711,"title":{},"body":{"interfaces/EditorJSMaterialForm.html":{}}}],["required",{"_index":468,"title":{},"body":{"interfaces/BasePlugin.html":{},"interfaces/BasePlugin-1.html":{},"interfaces/EditorJSInstanceConfig.html":{},"interfaces/EditorJSMaterialForm.html":{},"interfaces/InjectorMethodOption.html":{},"modules/MaterialModule.html":{},"modules/NgxEditorjsPluginsModule.html":{},"interfaces/PluginConfig.html":{},"interfaces/PluginConfig-1.html":{},"interfaces/ToolSettingsMap.html":{},"interfaces/ToolSettingsMap-1.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-readme.html":{}}}],["required(required",{"_index":713,"title":{},"body":{"interfaces/EditorJSMaterialForm.html":{}}}],["requires",{"_index":2257,"title":{},"body":{"additional-documentation/tinynodes-library-docs/ngx-editorjs-plugins-readme.html":{}}}],["reset",{"_index":252,"title":{},"body":{"modules/AppModule.html":{},"modules/ApplicationDataModule.html":{},"components/FormContainerComponent.html":{},"modules/NgxEditorJSModule.html":{},"modules/NgxEditorjsDemoModule.html":{},"modules/NgxEditorjsNgrxModule.html":{},"modules/NgxEditorjsPluginsModule.html":{},"modules/NgxTinynodesCoreModule.html":{},"components/PageContainerComponent.html":{},"modules/PageStoreModule.html":{},"modules/PluginCodeModule.html":{},"modules/PluginHeaderModule.html":{},"modules/PluginImageModule.html":{},"modules/PluginLinkModule.html":{},"modules/PluginListModule.html":{},"modules/PluginMarkerModule.html":{},"modules/PluginParagraphModule.html":{},"modules/PluginSimpleImageModule.html":{},"overview.html":{}}}],["resolved",{"_index":1779,"title":{},"body":{"changelog.html":{}}}],["respectful",{"_index":1860,"title":{},"body":{"contributing.html":{}}}],["response",{"_index":1906,"title":{},"body":{"contributing.html":{}}}],["responsibilities",{"_index":1898,"title":{},"body":{"contributing.html":{}}}],["responsibility",{"_index":1907,"title":{},"body":{"contributing.html":{}}}],["responsible",{"_index":1899,"title":{},"body":{"contributing.html":{}}}],["restriction",{"_index":2107,"title":{},"body":{"license.html":{}}}],["result",{"_index":230,"title":{},"body":{"components/AppContainerComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"injectables/AppService.html":{},"injectables/AppService-1.html":{},"interfaces/ApplicationData.html":{},"interfaces/ApplicationData-1.html":{},"modules/ApplicationDataModule.html":{},"injectables/ApplicationQuery.html":{},"injectables/ApplicationQuery-1.html":{},"interfaces/ApplicationState.html":{},"interfaces/ApplicationState-1.html":{},"injectables/ApplicationStore.html":{},"injectables/ApplicationStore-1.html":{},"interfaces/BasePlugin.html":{},"interfaces/BasePlugin-1.html":{},"interfaces/Block.html":{},"interfaces/BlocksMap.html":{},"interfaces/ChangeMap.html":{},"classes/Changed.html":{},"interfaces/CreateEditorJSOptions.html":{},"interfaces/DemoData.html":{},"interfaces/DemoData-1.html":{},"interfaces/EditorJSAction.html":{},"interfaces/EditorJSConfig.html":{},"interfaces/EditorJSInstanceConfig.html":{},"interfaces/EditorJSMaterialForm.html":{},"interfaces/EditorMap.html":{},"interfaces/EventMap.html":{},"interfaces/EventType.html":{},"components/FormContainerComponent.html":{},"interfaces/Header.html":{},"interfaces/HeaderBlock.html":{},"components/HomePageComponent.html":{},"interfaces/Image.html":{},"interfaces/ImageBlock.html":{},"interfaces/InjectorMethodOption.html":{},"interfaces/List.html":{},"interfaces/ListBlock.html":{},"modules/MaterialModule.html":{},"interfaces/MenuGroup.html":{},"interfaces/MenuGroup-1.html":{},"interfaces/MenuItem.html":{},"interfaces/MenuItem-1.html":{},"classes/MockEditorJS.html":{},"injectables/MockNgZone.html":{},"classes/MockPlugin.html":{},"components/NavBarComponent.html":{},"components/NgxEditorJSBaseComponent.html":{},"components/NgxEditorJSComponent.html":{},"interfaces/NgxEditorJSConfig.html":{},"interfaces/NgxEditorJSDemo.html":{},"interfaces/NgxEditorJSDemo-1.html":{},"interfaces/NgxEditorJSDemoData.html":{},"interfaces/NgxEditorJSDemoData-1.html":{},"components/NgxEditorJSDemoHomeComponent.html":{},"components/NgxEditorJSDemoInfoComponent.html":{},"directives/NgxEditorJSDirective.html":{},"injectables/NgxEditorJSEffects.html":{},"modules/NgxEditorJSModule.html":{},"injectables/NgxEditorJSPluginService.html":{},"injectables/NgxEditorJSService.html":{},"modules/NgxEditorjsDemoModule.html":{},"modules/NgxEditorjsNgrxModule.html":{},"modules/NgxEditorjsPluginsModule.html":{},"modules/NgxHideableHeaderDemoModule.html":{},"modules/NgxTinynodesCoreMaterialModule.html":{},"modules/NgxTinynodesCoreModule.html":{},"classes/NotReady.html":{},"interfaces/Page.html":{},"interfaces/PageBlock.html":{},"components/PageContainerComponent.html":{},"modules/PageStoreModule.html":{},"injectables/PagesQuery.html":{},"injectables/PagesService.html":{},"interfaces/PagesState.html":{},"injectables/PagesStore.html":{},"interfaces/Paragraph.html":{},"interfaces/ParagraphBlock.html":{},"injectables/PluginCode.html":{},"modules/PluginCodeModule.html":{},"interfaces/PluginConfig.html":{},"interfaces/PluginConfig-1.html":{},"injectables/PluginHeader.html":{},"modules/PluginHeaderModule.html":{},"injectables/PluginImage.html":{},"modules/PluginImageModule.html":{},"injectables/PluginLink.html":{},"modules/PluginLinkModule.html":{},"injectables/PluginList.html":{},"modules/PluginListModule.html":{},"injectables/PluginMarker.html":{},"modules/PluginMarkerModule.html":{},"injectables/PluginParagraph.html":{},"modules/PluginParagraphModule.html":{},"injectables/PluginSimpleImage.html":{},"modules/PluginSimpleImageModule.html":{},"classes/Ready.html":{},"interfaces/ReadyMap.html":{},"classes/SaveEnd.html":{},"classes/SaveStart.html":{},"components/SidebarComponent.html":{},"interfaces/Tag.html":{},"classes/TestClass.html":{},"interfaces/TinynodeDemos.html":{},"interfaces/TinynodeDemos-1.html":{},"interfaces/ToolSettingsMap.html":{},"interfaces/ToolSettingsMap-1.html":{},"changelog.html":{},"contributing.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"index.html":{},"license.html":{},"modules.html":{},"overview.html":{},"todo.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{},"additional-documentation/tinynodes-library-docs.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-readme.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-readme/ngx-editorjs-changelog.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-plugins-readme.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-plugins-readme/ngx-editorjs-plugins-changelog.html":{},"routes.html":{}}}],["results",{"_index":232,"title":{},"body":{"components/AppContainerComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"injectables/AppService.html":{},"injectables/AppService-1.html":{},"interfaces/ApplicationData.html":{},"interfaces/ApplicationData-1.html":{},"modules/ApplicationDataModule.html":{},"injectables/ApplicationQuery.html":{},"injectables/ApplicationQuery-1.html":{},"interfaces/ApplicationState.html":{},"interfaces/ApplicationState-1.html":{},"injectables/ApplicationStore.html":{},"injectables/ApplicationStore-1.html":{},"interfaces/BasePlugin.html":{},"interfaces/BasePlugin-1.html":{},"interfaces/Block.html":{},"interfaces/BlocksMap.html":{},"interfaces/ChangeMap.html":{},"classes/Changed.html":{},"interfaces/CreateEditorJSOptions.html":{},"interfaces/DemoData.html":{},"interfaces/DemoData-1.html":{},"interfaces/EditorJSAction.html":{},"interfaces/EditorJSConfig.html":{},"interfaces/EditorJSInstanceConfig.html":{},"interfaces/EditorJSMaterialForm.html":{},"interfaces/EditorMap.html":{},"interfaces/EventMap.html":{},"interfaces/EventType.html":{},"components/FormContainerComponent.html":{},"interfaces/Header.html":{},"interfaces/HeaderBlock.html":{},"components/HomePageComponent.html":{},"interfaces/Image.html":{},"interfaces/ImageBlock.html":{},"interfaces/InjectorMethodOption.html":{},"interfaces/List.html":{},"interfaces/ListBlock.html":{},"modules/MaterialModule.html":{},"interfaces/MenuGroup.html":{},"interfaces/MenuGroup-1.html":{},"interfaces/MenuItem.html":{},"interfaces/MenuItem-1.html":{},"classes/MockEditorJS.html":{},"injectables/MockNgZone.html":{},"classes/MockPlugin.html":{},"components/NavBarComponent.html":{},"components/NgxEditorJSBaseComponent.html":{},"components/NgxEditorJSComponent.html":{},"interfaces/NgxEditorJSConfig.html":{},"interfaces/NgxEditorJSDemo.html":{},"interfaces/NgxEditorJSDemo-1.html":{},"interfaces/NgxEditorJSDemoData.html":{},"interfaces/NgxEditorJSDemoData-1.html":{},"components/NgxEditorJSDemoHomeComponent.html":{},"components/NgxEditorJSDemoInfoComponent.html":{},"directives/NgxEditorJSDirective.html":{},"injectables/NgxEditorJSEffects.html":{},"modules/NgxEditorJSModule.html":{},"injectables/NgxEditorJSPluginService.html":{},"injectables/NgxEditorJSService.html":{},"modules/NgxEditorjsDemoModule.html":{},"modules/NgxEditorjsNgrxModule.html":{},"modules/NgxEditorjsPluginsModule.html":{},"modules/NgxHideableHeaderDemoModule.html":{},"modules/NgxTinynodesCoreMaterialModule.html":{},"modules/NgxTinynodesCoreModule.html":{},"classes/NotReady.html":{},"interfaces/Page.html":{},"interfaces/PageBlock.html":{},"components/PageContainerComponent.html":{},"modules/PageStoreModule.html":{},"injectables/PagesQuery.html":{},"injectables/PagesService.html":{},"interfaces/PagesState.html":{},"injectables/PagesStore.html":{},"interfaces/Paragraph.html":{},"interfaces/ParagraphBlock.html":{},"injectables/PluginCode.html":{},"modules/PluginCodeModule.html":{},"interfaces/PluginConfig.html":{},"interfaces/PluginConfig-1.html":{},"injectables/PluginHeader.html":{},"modules/PluginHeaderModule.html":{},"injectables/PluginImage.html":{},"modules/PluginImageModule.html":{},"injectables/PluginLink.html":{},"modules/PluginLinkModule.html":{},"injectables/PluginList.html":{},"modules/PluginListModule.html":{},"injectables/PluginMarker.html":{},"modules/PluginMarkerModule.html":{},"injectables/PluginParagraph.html":{},"modules/PluginParagraphModule.html":{},"injectables/PluginSimpleImage.html":{},"modules/PluginSimpleImageModule.html":{},"classes/Ready.html":{},"interfaces/ReadyMap.html":{},"classes/SaveEnd.html":{},"classes/SaveStart.html":{},"components/SidebarComponent.html":{},"interfaces/Tag.html":{},"classes/TestClass.html":{},"interfaces/TinynodeDemos.html":{},"interfaces/TinynodeDemos-1.html":{},"interfaces/ToolSettingsMap.html":{},"interfaces/ToolSettingsMap-1.html":{},"changelog.html":{},"contributing.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"index.html":{},"license.html":{},"modules.html":{},"overview.html":{},"todo.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{},"additional-documentation/tinynodes-library-docs.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-readme.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-readme/ngx-editorjs-changelog.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-plugins-readme.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-plugins-readme/ngx-editorjs-plugins-changelog.html":{},"routes.html":{}}}],["return",{"_index":136,"title":{},"body":{"components/AppContainerComponent.html":{},"injectables/AppService.html":{},"injectables/AppService-1.html":{},"interfaces/BasePlugin.html":{},"interfaces/BasePlugin-1.html":{},"interfaces/EditorJSMaterialForm.html":{},"components/FormContainerComponent.html":{},"components/HomePageComponent.html":{},"classes/MockEditorJS.html":{},"injectables/MockNgZone.html":{},"classes/MockPlugin.html":{},"components/NgxEditorJSBaseComponent.html":{},"components/NgxEditorJSComponent.html":{},"components/NgxEditorJSDemoInfoComponent.html":{},"directives/NgxEditorJSDirective.html":{},"injectables/NgxEditorJSEffects.html":{},"modules/NgxEditorJSModule.html":{},"injectables/NgxEditorJSPluginService.html":{},"injectables/NgxEditorJSService.html":{},"components/PageContainerComponent.html":{},"injectables/PagesService.html":{},"injectables/PluginCode.html":{},"interfaces/PluginConfig.html":{},"interfaces/PluginConfig-1.html":{},"injectables/PluginHeader.html":{},"injectables/PluginImage.html":{},"injectables/PluginLink.html":{},"injectables/PluginList.html":{},"injectables/PluginMarker.html":{},"injectables/PluginParagraph.html":{},"injectables/PluginSimpleImage.html":{},"classes/TestClass.html":{},"interfaces/ToolSettingsMap.html":{},"interfaces/ToolSettingsMap-1.html":{},"miscellaneous/functions.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-readme.html":{}}}],["returned",{"_index":474,"title":{},"body":{"interfaces/BasePlugin.html":{},"interfaces/BasePlugin-1.html":{},"interfaces/PluginConfig.html":{},"interfaces/PluginConfig-1.html":{},"interfaces/ToolSettingsMap.html":{},"interfaces/ToolSettingsMap-1.html":{}}}],["returns",{"_index":74,"title":{},"body":{"components/AppContainerComponent.html":{},"injectables/AppService.html":{},"injectables/AppService-1.html":{},"components/FormContainerComponent.html":{},"injectables/MockNgZone.html":{},"classes/MockPlugin.html":{},"components/NgxEditorJSBaseComponent.html":{},"components/NgxEditorJSComponent.html":{},"components/NgxEditorJSDemoInfoComponent.html":{},"directives/NgxEditorJSDirective.html":{},"modules/NgxEditorJSModule.html":{},"injectables/NgxEditorJSPluginService.html":{},"injectables/NgxEditorJSService.html":{},"components/PageContainerComponent.html":{},"injectables/PagesService.html":{},"injectables/PluginCode.html":{},"injectables/PluginHeader.html":{},"injectables/PluginImage.html":{},"injectables/PluginLink.html":{},"injectables/PluginList.html":{},"injectables/PluginMarker.html":{},"injectables/PluginParagraph.html":{},"injectables/PluginSimpleImage.html":{},"classes/TestClass.html":{},"miscellaneous/functions.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-readme.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-readme/ngx-editorjs-changelog.html":{}}}],["reviewed",{"_index":1952,"title":{},"body":{"contributing.html":{}}}],["reviewer",{"_index":1825,"title":{},"body":{"contributing.html":{}}}],["right",{"_index":183,"title":{},"body":{"components/AppContainerComponent.html":{},"components/NavBarComponent.html":{},"contributing.html":{}}}],["rights",{"_index":2110,"title":{},"body":{"license.html":{}}}],["robust",{"_index":2231,"title":{},"body":{"additional-documentation/tinynodes-library-docs/ngx-editorjs-readme/ngx-editorjs-changelog.html":{}}}],["rogue",{"_index":2225,"title":{},"body":{"additional-documentation/tinynodes-library-docs/ngx-editorjs-readme/ngx-editorjs-changelog.html":{}}}],["root",{"_index":16,"title":{},"body":{"components/AppContainerComponent.html":{},"modules/NgxEditorJSModule.html":{},"injectables/NgxEditorJSPluginService.html":{},"injectables/NgxEditorJSService.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-readme/ngx-editorjs-changelog.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-plugins-readme.html":{}}}],["root'},{'name",{"_index":199,"title":{},"body":{"components/AppContainerComponent.html":{},"components/FormContainerComponent.html":{},"components/HomePageComponent.html":{},"components/NavBarComponent.html":{},"components/NgxEditorJSBaseComponent.html":{},"components/NgxEditorJSComponent.html":{},"components/NgxEditorJSDemoHomeComponent.html":{},"components/NgxEditorJSDemoInfoComponent.html":{},"components/PageContainerComponent.html":{},"components/SidebarComponent.html":{}}}],["roots",{"_index":306,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["routable",{"_index":783,"title":{},"body":{"components/FormContainerComponent.html":{},"components/PageContainerComponent.html":{}}}],["route",{"_index":307,"title":{},"body":{"modules/AppRoutingModule.html":{},"modules/NgxHideableHeaderDemoModule.html":{},"miscellaneous/variables.html":{}}}],["router",{"_index":274,"title":{},"body":{"modules/AppModule.html":{},"dependencies.html":{}}}],["routerlink",{"_index":407,"title":{},"body":{"interfaces/ApplicationData.html":{},"interfaces/ApplicationData-1.html":{},"interfaces/MenuGroup.html":{},"interfaces/MenuGroup-1.html":{},"interfaces/MenuItem.html":{},"interfaces/MenuItem-1.html":{}}}],["routermodule",{"_index":308,"title":{},"body":{"modules/AppRoutingModule.html":{},"modules/NgxEditorjsDemoModule.html":{},"modules/NgxHideableHeaderDemoModule.html":{}}}],["routermodule.forchild(ngxeditorjsdemoroutes",{"_index":1502,"title":{},"body":{"modules/NgxEditorjsDemoModule.html":{}}}],["routermodule.forroot(approutes",{"_index":317,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["routes",{"_index":310,"title":{"routes.html":{}},"body":{"modules/AppRoutingModule.html":{},"miscellaneous/variables.html":{},"routes.html":{}}}],["routing",{"_index":304,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["routing.module",{"_index":282,"title":{},"body":{"modules/AppModule.html":{}}}],["routing.module.ts",{"_index":303,"title":{},"body":{"modules/AppRoutingModule.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["row",{"_index":1156,"title":{},"body":{"components/NgxEditorJSComponent.html":{}}}],["run",{"_index":997,"title":{},"body":{"injectables/MockNgZone.html":{},"index.html":{}}}],["run(fn",{"_index":1001,"title":{},"body":{"injectables/MockNgZone.html":{}}}],["runoutsideangular",{"_index":998,"title":{},"body":{"injectables/MockNgZone.html":{}}}],["runoutsideangular(fn",{"_index":1004,"title":{},"body":{"injectables/MockNgZone.html":{}}}],["rxjs",{"_index":122,"title":{},"body":{"components/AppContainerComponent.html":{},"injectables/AppService.html":{},"injectables/AppService-1.html":{},"interfaces/BlocksMap.html":{},"interfaces/ChangeMap.html":{},"interfaces/EditorJSMaterialForm.html":{},"interfaces/EditorMap.html":{},"interfaces/EventMap.html":{},"interfaces/EventType.html":{},"components/FormContainerComponent.html":{},"components/NgxEditorJSBaseComponent.html":{},"components/NgxEditorJSDemoInfoComponent.html":{},"directives/NgxEditorJSDirective.html":{},"injectables/NgxEditorJSEffects.html":{},"injectables/NgxEditorJSService.html":{},"components/PageContainerComponent.html":{},"injectables/PagesService.html":{},"interfaces/ReadyMap.html":{},"dependencies.html":{}}}],["rxjs/operators",{"_index":125,"title":{},"body":{"components/AppContainerComponent.html":{},"injectables/AppService.html":{},"injectables/AppService-1.html":{},"interfaces/EditorJSMaterialForm.html":{},"components/FormContainerComponent.html":{},"components/NgxEditorJSBaseComponent.html":{},"components/NgxEditorJSComponent.html":{},"injectables/NgxEditorJSEffects.html":{},"injectables/NgxEditorJSService.html":{},"components/PageContainerComponent.html":{}}}],["sanitizer",{"_index":603,"title":{},"body":{"interfaces/EditorJSConfig.html":{},"components/NgxEditorJSBaseComponent.html":{},"components/NgxEditorJSComponent.html":{},"interfaces/NgxEditorJSConfig.html":{},"directives/NgxEditorJSDirective.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-readme.html":{}}}],["sanitizerconfig",{"_index":620,"title":{},"body":{"interfaces/EditorJSConfig.html":{},"components/NgxEditorJSBaseComponent.html":{},"components/NgxEditorJSComponent.html":{},"interfaces/NgxEditorJSConfig.html":{},"directives/NgxEditorJSDirective.html":{}}}],["save",{"_index":560,"title":{},"body":{"classes/Changed.html":{},"interfaces/CreateEditorJSOptions.html":{},"interfaces/EditorJSAction.html":{},"components/FormContainerComponent.html":{},"classes/MockEditorJS.html":{},"classes/MockPlugin.html":{},"components/NgxEditorJSBaseComponent.html":{},"components/NgxEditorJSComponent.html":{},"directives/NgxEditorJSDirective.html":{},"injectables/NgxEditorJSEffects.html":{},"injectables/NgxEditorJSService.html":{},"classes/NotReady.html":{},"components/PageContainerComponent.html":{},"injectables/PagesService.html":{},"classes/Ready.html":{},"classes/SaveEnd.html":{},"classes/SaveStart.html":{},"classes/TestClass.html":{},"miscellaneous/enumerations.html":{},"todo.html":{}}}],["save(undefined",{"_index":1422,"title":{},"body":{"injectables/NgxEditorJSService.html":{}}}],["saved",{"_index":822,"title":{},"body":{"components/FormContainerComponent.html":{},"components/NgxEditorJSBaseComponent.html":{},"components/NgxEditorJSComponent.html":{}}}],["saveeditor",{"_index":595,"title":{},"body":{"interfaces/CreateEditorJSOptions.html":{},"interfaces/EditorJSAction.html":{},"miscellaneous/enumerations.html":{}}}],["saveend",{"_index":561,"title":{"classes/SaveEnd.html":{}},"body":{"classes/Changed.html":{},"injectables/NgxEditorJSEffects.html":{},"classes/NotReady.html":{},"classes/Ready.html":{},"classes/SaveEnd.html":{},"classes/SaveStart.html":{},"coverage.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/typealiases.html":{}}}],["saver",{"_index":967,"title":{},"body":{"classes/MockEditorJS.html":{},"classes/MockPlugin.html":{},"classes/TestClass.html":{}}}],["savestart",{"_index":558,"title":{"classes/SaveStart.html":{}},"body":{"classes/Changed.html":{},"injectables/NgxEditorJSEffects.html":{},"classes/NotReady.html":{},"classes/Ready.html":{},"classes/SaveEnd.html":{},"classes/SaveStart.html":{},"coverage.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/typealiases.html":{}}}],["saving",{"_index":922,"title":{},"body":{"components/FormContainerComponent.html":{},"components/PageContainerComponent.html":{}}}],["scheme",{"_index":1817,"title":{},"body":{"contributing.html":{}}}],["scope",{"_index":1924,"title":{},"body":{"contributing.html":{}}}],["scripts",{"_index":1776,"title":{},"body":{"changelog.html":{}}}],["scroll",{"_index":933,"title":{},"body":{"components/FormContainerComponent.html":{},"components/NgxEditorJSDemoInfoComponent.html":{},"components/PageContainerComponent.html":{}}}],["searchable",{"_index":2082,"title":{},"body":{"index.html":{}}}],["second",{"_index":1824,"title":{},"body":{"contributing.html":{}}}],["seconds",{"_index":892,"title":{},"body":{"components/FormContainerComponent.html":{}}}],["section",{"_index":1165,"title":{},"body":{"components/NgxEditorJSDemoHomeComponent.html":{}}}],["see",{"_index":886,"title":{},"body":{"components/FormContainerComponent.html":{},"injectables/NgxEditorJSService.html":{},"components/PageContainerComponent.html":{},"modules/PluginCodeModule.html":{},"modules/PluginHeaderModule.html":{},"modules/PluginImageModule.html":{},"modules/PluginLinkModule.html":{},"modules/PluginListModule.html":{},"modules/PluginMarkerModule.html":{},"modules/PluginParagraphModule.html":{},"modules/PluginSimpleImageModule.html":{},"changelog.html":{},"index.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-readme.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-plugins-readme/ngx-editorjs-plugins-changelog.html":{}}}],["selection",{"_index":2166,"title":{},"body":{"todo.html":{}}}],["selector",{"_index":22,"title":{},"body":{"components/AppContainerComponent.html":{},"interfaces/EditorJSMaterialForm.html":{},"components/FormContainerComponent.html":{},"components/HomePageComponent.html":{},"components/NavBarComponent.html":{},"components/NgxEditorJSBaseComponent.html":{},"components/NgxEditorJSComponent.html":{},"components/NgxEditorJSDemoHomeComponent.html":{},"components/NgxEditorJSDemoInfoComponent.html":{},"directives/NgxEditorJSDirective.html":{},"components/PageContainerComponent.html":{},"components/SidebarComponent.html":{}}}],["self",{"_index":664,"title":{},"body":{"interfaces/EditorJSMaterialForm.html":{}}}],["sell",{"_index":2116,"title":{},"body":{"license.html":{}}}],["semantic",{"_index":2215,"title":{},"body":{"additional-documentation/tinynodes-library-docs/ngx-editorjs-readme/ngx-editorjs-changelog.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-plugins-readme/ngx-editorjs-plugins-changelog.html":{}}}],["semver",{"_index":1818,"title":{},"body":{"contributing.html":{}}}],["separately",{"_index":1965,"title":{},"body":{"contributing.html":{}}}],["service",{"_index":322,"title":{},"body":{"injectables/AppService.html":{},"injectables/AppService-1.html":{},"interfaces/EditorJSMaterialForm.html":{},"components/FormContainerComponent.html":{},"components/NgxEditorJSBaseComponent.html":{},"components/NgxEditorJSComponent.html":{},"directives/NgxEditorJSDirective.html":{},"injectables/NgxEditorJSPluginService.html":{},"injectables/NgxEditorJSService.html":{},"components/PageContainerComponent.html":{},"injectables/PagesService.html":{},"index.html":{},"todo.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-readme.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-readme/ngx-editorjs-changelog.html":{}}}],["service.ts",{"_index":573,"title":{},"body":{"interfaces/CreateEditorJSOptions.html":{},"interfaces/EditorJSAction.html":{},"coverage.html":{},"miscellaneous/enumerations.html":{}}}],["services",{"_index":1202,"title":{},"body":{"directives/NgxEditorJSDirective.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-readme.html":{}}}],["services/editorjs",{"_index":1342,"title":{},"body":{"modules/NgxEditorJSModule.html":{}}}],["services/editorjs.service",{"_index":671,"title":{},"body":{"interfaces/EditorJSMaterialForm.html":{},"components/NgxEditorJSBaseComponent.html":{},"components/NgxEditorJSComponent.html":{},"directives/NgxEditorJSDirective.html":{},"modules/NgxEditorJSModule.html":{}}}],["services/plugins.service",{"_index":1343,"title":{},"body":{"modules/NgxEditorJSModule.html":{}}}],["set",{"_index":359,"title":{},"body":{"injectables/AppService.html":{},"injectables/AppService-1.html":{},"interfaces/ApplicationData.html":{},"interfaces/ApplicationData-1.html":{},"interfaces/ApplicationState.html":{},"interfaces/ApplicationState-1.html":{},"interfaces/CreateEditorJSOptions.html":{},"interfaces/DemoData.html":{},"interfaces/DemoData-1.html":{},"interfaces/EditorJSAction.html":{},"interfaces/EditorJSConfig.html":{},"interfaces/EditorJSMaterialForm.html":{},"components/FormContainerComponent.html":{},"interfaces/MenuGroup.html":{},"interfaces/MenuGroup-1.html":{},"interfaces/MenuItem.html":{},"interfaces/MenuItem-1.html":{},"components/NavBarComponent.html":{},"components/NgxEditorJSBaseComponent.html":{},"components/NgxEditorJSComponent.html":{},"interfaces/NgxEditorJSConfig.html":{},"interfaces/NgxEditorJSDemo.html":{},"interfaces/NgxEditorJSDemo-1.html":{},"interfaces/NgxEditorJSDemoData.html":{},"interfaces/NgxEditorJSDemoData-1.html":{},"directives/NgxEditorJSDirective.html":{},"injectables/NgxEditorJSService.html":{},"modules/NgxEditorjsNgrxModule.html":{},"interfaces/TinynodeDemos.html":{},"interfaces/TinynodeDemos-1.html":{},"index.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-readme.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-readme/ngx-editorjs-changelog.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-plugins-readme.html":{}}}],["setblocks",{"_index":1596,"title":{},"body":{"injectables/PagesService.html":{}}}],["setblocks(pageid",{"_index":1610,"title":{},"body":{"injectables/PagesService.html":{}}}],["setdescribedbyids(ids",{"_index":738,"title":{},"body":{"interfaces/EditorJSMaterialForm.html":{}}}],["setissaved",{"_index":794,"title":{},"body":{"components/FormContainerComponent.html":{}}}],["setissaved(issaved",{"_index":820,"title":{},"body":{"components/FormContainerComponent.html":{}}}],["sets",{"_index":336,"title":{},"body":{"injectables/AppService.html":{},"injectables/AppService-1.html":{},"components/FormContainerComponent.html":{},"components/NgxEditorJSBaseComponent.html":{},"components/NgxEditorJSComponent.html":{},"components/NgxEditorJSDemoInfoComponent.html":{},"directives/NgxEditorJSDirective.html":{},"modules/NgxEditorJSModule.html":{},"injectables/NgxEditorJSService.html":{},"components/PageContainerComponent.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-readme.html":{}}}],["setting",{"_index":1897,"title":{},"body":{"contributing.html":{},"todo.html":{}}}],["settings",{"_index":473,"title":{},"body":{"interfaces/BasePlugin.html":{},"interfaces/BasePlugin-1.html":{},"injectables/PluginCode.html":{},"interfaces/PluginConfig.html":{},"interfaces/PluginConfig-1.html":{},"injectables/PluginHeader.html":{},"injectables/PluginImage.html":{},"injectables/PluginLink.html":{},"injectables/PluginList.html":{},"injectables/PluginMarker.html":{},"injectables/PluginParagraph.html":{},"injectables/PluginSimpleImage.html":{},"interfaces/ToolSettingsMap.html":{},"interfaces/ToolSettingsMap-1.html":{}}}],["several",{"_index":1524,"title":{},"body":{"modules/NgxEditorjsPluginsModule.html":{},"changelog.html":{},"index.html":{}}}],["sexual",{"_index":1851,"title":{},"body":{"contributing.html":{}}}],["sexualized",{"_index":1876,"title":{},"body":{"contributing.html":{}}}],["shall",{"_index":2125,"title":{},"body":{"license.html":{}}}],["shared",{"_index":1551,"title":{},"body":{"modules/NgxTinynodesCoreModule.html":{}}}],["shortcut",{"_index":471,"title":{},"body":{"interfaces/BasePlugin.html":{},"interfaces/BasePlugin-1.html":{},"interfaces/EditorJSMaterialForm.html":{},"classes/MockEditorJS.html":{},"classes/MockPlugin.html":{},"components/NgxEditorJSComponent.html":{},"injectables/NgxEditorJSPluginService.html":{},"interfaces/PluginConfig.html":{},"interfaces/PluginConfig-1.html":{},"injectables/PluginMarker.html":{},"classes/TestClass.html":{},"interfaces/ToolSettingsMap.html":{},"interfaces/ToolSettingsMap-1.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-readme/ngx-editorjs-changelog.html":{}}}],["shouldlabelfloat",{"_index":733,"title":{},"body":{"interfaces/EditorJSMaterialForm.html":{}}}],["showing",{"_index":1870,"title":{},"body":{"contributing.html":{}}}],["shown",{"_index":612,"title":{},"body":{"interfaces/EditorJSConfig.html":{},"components/NgxEditorJSBaseComponent.html":{},"components/NgxEditorJSComponent.html":{},"interfaces/NgxEditorJSConfig.html":{},"directives/NgxEditorJSDirective.html":{}}}],["shows",{"_index":1168,"title":{},"body":{"components/NgxEditorJSDemoHomeComponent.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-readme.html":{}}}],["side",{"_index":358,"title":{},"body":{"injectables/AppService.html":{},"injectables/AppService-1.html":{},"interfaces/ApplicationState.html":{},"interfaces/ApplicationState-1.html":{},"interfaces/DemoData.html":{},"interfaces/DemoData-1.html":{},"components/NgxEditorJSBaseComponent.html":{},"components/NgxEditorJSComponent.html":{},"interfaces/NgxEditorJSDemo.html":{},"interfaces/NgxEditorJSDemo-1.html":{},"interfaces/NgxEditorJSDemoData.html":{},"interfaces/NgxEditorJSDemoData-1.html":{},"interfaces/TinynodeDemos.html":{},"interfaces/TinynodeDemos-1.html":{}}}],["sidebar",{"_index":84,"title":{},"body":{"components/AppContainerComponent.html":{},"injectables/AppService.html":{},"injectables/AppService-1.html":{},"interfaces/ApplicationData.html":{},"interfaces/ApplicationData-1.html":{},"components/FormContainerComponent.html":{},"components/HomePageComponent.html":{},"interfaces/MenuGroup.html":{},"interfaces/MenuGroup-1.html":{},"interfaces/MenuItem.html":{},"interfaces/MenuItem-1.html":{},"components/NavBarComponent.html":{},"components/NgxEditorJSBaseComponent.html":{},"components/NgxEditorJSComponent.html":{},"components/NgxEditorJSDemoHomeComponent.html":{},"components/NgxEditorJSDemoInfoComponent.html":{},"components/PageContainerComponent.html":{},"components/SidebarComponent.html":{}}}],["sidebar.component.html",{"_index":1725,"title":{},"body":{"components/SidebarComponent.html":{}}}],["sidebar.component.scss",{"_index":1724,"title":{},"body":{"components/SidebarComponent.html":{}}}],["sidebarcomponent",{"_index":225,"title":{"components/SidebarComponent.html":{}},"body":{"components/AppContainerComponent.html":{},"modules/AppModule.html":{},"components/FormContainerComponent.html":{},"components/HomePageComponent.html":{},"components/NavBarComponent.html":{},"components/NgxEditorJSBaseComponent.html":{},"components/NgxEditorJSComponent.html":{},"components/NgxEditorJSDemoHomeComponent.html":{},"components/NgxEditorJSDemoInfoComponent.html":{},"components/PageContainerComponent.html":{},"components/SidebarComponent.html":{},"coverage.html":{},"overview.html":{}}}],["sidebarhidden",{"_index":33,"title":{},"body":{"components/AppContainerComponent.html":{}}}],["sidenav",{"_index":34,"title":{},"body":{"components/AppContainerComponent.html":{}}}],["sign",{"_index":1821,"title":{},"body":{"contributing.html":{}}}],["simple",{"_index":1709,"title":{},"body":{"injectables/PluginSimpleImage.html":{},"modules/PluginSimpleImageModule.html":{}}}],["simplechanges",{"_index":1230,"title":{},"body":{"directives/NgxEditorJSDirective.html":{}}}],["simpleimage",{"_index":919,"title":{},"body":{"components/FormContainerComponent.html":{},"components/PageContainerComponent.html":{},"injectables/PluginSimpleImage.html":{}}}],["simulatezoneexit",{"_index":999,"title":{},"body":{"injectables/MockNgZone.html":{}}}],["single",{"_index":256,"title":{},"body":{"modules/AppModule.html":{},"interfaces/EditorJSMaterialForm.html":{},"components/FormContainerComponent.html":{},"injectables/NgxEditorJSPluginService.html":{},"components/PageContainerComponent.html":{}}}],["singleton",{"_index":1355,"title":{},"body":{"injectables/NgxEditorJSPluginService.html":{}}}],["site",{"_index":430,"title":{},"body":{"modules/ApplicationDataModule.html":{},"components/HomePageComponent.html":{},"modules/NgxTinynodesCoreModule.html":{},"changelog.html":{},"index.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-readme/ngx-editorjs-changelog.html":{}}}],["sites",{"_index":954,"title":{},"body":{"components/HomePageComponent.html":{}}}],["size",{"_index":1840,"title":{},"body":{"contributing.html":{}}}],["skipself",{"_index":1332,"title":{},"body":{"modules/NgxEditorJSModule.html":{}}}],["small",{"_index":1784,"title":{},"body":{"changelog.html":{}}}],["social",{"_index":1933,"title":{},"body":{"contributing.html":{}}}],["software",{"_index":2104,"title":{},"body":{"license.html":{}}}],["solid",{"_index":1158,"title":{},"body":{"components/NgxEditorJSComponent.html":{}}}],["source",{"_index":4,"title":{},"body":{"components/AppContainerComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"injectables/AppService.html":{},"injectables/AppService-1.html":{},"interfaces/ApplicationData.html":{},"interfaces/ApplicationData-1.html":{},"modules/ApplicationDataModule.html":{},"injectables/ApplicationQuery.html":{},"injectables/ApplicationQuery-1.html":{},"interfaces/ApplicationState.html":{},"interfaces/ApplicationState-1.html":{},"injectables/ApplicationStore.html":{},"injectables/ApplicationStore-1.html":{},"interfaces/BasePlugin.html":{},"interfaces/BasePlugin-1.html":{},"interfaces/Block.html":{},"interfaces/BlocksMap.html":{},"interfaces/ChangeMap.html":{},"classes/Changed.html":{},"interfaces/CreateEditorJSOptions.html":{},"interfaces/DemoData.html":{},"interfaces/DemoData-1.html":{},"interfaces/EditorJSAction.html":{},"interfaces/EditorJSConfig.html":{},"interfaces/EditorJSInstanceConfig.html":{},"interfaces/EditorJSMaterialForm.html":{},"interfaces/EditorMap.html":{},"interfaces/EventMap.html":{},"interfaces/EventType.html":{},"components/FormContainerComponent.html":{},"interfaces/Header.html":{},"interfaces/HeaderBlock.html":{},"components/HomePageComponent.html":{},"interfaces/Image.html":{},"interfaces/ImageBlock.html":{},"interfaces/InjectorMethodOption.html":{},"interfaces/List.html":{},"interfaces/ListBlock.html":{},"modules/MaterialModule.html":{},"interfaces/MenuGroup.html":{},"interfaces/MenuGroup-1.html":{},"interfaces/MenuItem.html":{},"interfaces/MenuItem-1.html":{},"classes/MockEditorJS.html":{},"injectables/MockNgZone.html":{},"classes/MockPlugin.html":{},"components/NavBarComponent.html":{},"components/NgxEditorJSBaseComponent.html":{},"components/NgxEditorJSComponent.html":{},"interfaces/NgxEditorJSConfig.html":{},"interfaces/NgxEditorJSDemo.html":{},"interfaces/NgxEditorJSDemo-1.html":{},"interfaces/NgxEditorJSDemoData.html":{},"interfaces/NgxEditorJSDemoData-1.html":{},"components/NgxEditorJSDemoHomeComponent.html":{},"components/NgxEditorJSDemoInfoComponent.html":{},"directives/NgxEditorJSDirective.html":{},"injectables/NgxEditorJSEffects.html":{},"modules/NgxEditorJSModule.html":{},"injectables/NgxEditorJSPluginService.html":{},"injectables/NgxEditorJSService.html":{},"modules/NgxEditorjsDemoModule.html":{},"modules/NgxEditorjsNgrxModule.html":{},"modules/NgxEditorjsPluginsModule.html":{},"modules/NgxHideableHeaderDemoModule.html":{},"modules/NgxTinynodesCoreMaterialModule.html":{},"modules/NgxTinynodesCoreModule.html":{},"classes/NotReady.html":{},"interfaces/Page.html":{},"interfaces/PageBlock.html":{},"components/PageContainerComponent.html":{},"modules/PageStoreModule.html":{},"injectables/PagesQuery.html":{},"injectables/PagesService.html":{},"interfaces/PagesState.html":{},"injectables/PagesStore.html":{},"interfaces/Paragraph.html":{},"interfaces/ParagraphBlock.html":{},"injectables/PluginCode.html":{},"modules/PluginCodeModule.html":{},"interfaces/PluginConfig.html":{},"interfaces/PluginConfig-1.html":{},"injectables/PluginHeader.html":{},"modules/PluginHeaderModule.html":{},"injectables/PluginImage.html":{},"modules/PluginImageModule.html":{},"injectables/PluginLink.html":{},"modules/PluginLinkModule.html":{},"injectables/PluginList.html":{},"modules/PluginListModule.html":{},"injectables/PluginMarker.html":{},"modules/PluginMarkerModule.html":{},"injectables/PluginParagraph.html":{},"modules/PluginParagraphModule.html":{},"injectables/PluginSimpleImage.html":{},"modules/PluginSimpleImageModule.html":{},"classes/Ready.html":{},"interfaces/ReadyMap.html":{},"classes/SaveEnd.html":{},"classes/SaveStart.html":{},"components/SidebarComponent.html":{},"interfaces/Tag.html":{},"classes/TestClass.html":{},"interfaces/TinynodeDemos.html":{},"interfaces/TinynodeDemos-1.html":{},"interfaces/ToolSettingsMap.html":{},"interfaces/ToolSettingsMap-1.html":{}}}],["spaces",{"_index":1927,"title":{},"body":{"contributing.html":{}}}],["specific",{"_index":345,"title":{},"body":{"injectables/AppService.html":{},"injectables/AppService-1.html":{},"contributing.html":{}}}],["standards",{"_index":1853,"title":{},"body":{"contributing.html":{}}}],["start",{"_index":559,"title":{},"body":{"classes/Changed.html":{},"components/FormContainerComponent.html":{},"components/NgxEditorJSBaseComponent.html":{},"components/NgxEditorJSComponent.html":{},"classes/NotReady.html":{},"components/PageContainerComponent.html":{},"classes/Ready.html":{},"classes/SaveEnd.html":{},"classes/SaveStart.html":{},"miscellaneous/enumerations.html":{}}}],["started",{"_index":1736,"title":{"changelog.html":{},"contributing.html":{},"index.html":{},"license.html":{},"todo.html":{}},"body":{}}],["state",{"_index":97,"title":{},"body":{"components/AppContainerComponent.html":{},"injectables/AppService.html":{},"injectables/AppService-1.html":{},"modules/ApplicationDataModule.html":{},"injectables/ApplicationQuery.html":{},"injectables/ApplicationQuery-1.html":{},"interfaces/ApplicationState.html":{},"interfaces/ApplicationState-1.html":{},"injectables/ApplicationStore.html":{},"injectables/ApplicationStore-1.html":{},"interfaces/BlocksMap.html":{},"interfaces/ChangeMap.html":{},"interfaces/DemoData.html":{},"interfaces/DemoData-1.html":{},"interfaces/EditorJSMaterialForm.html":{},"interfaces/EditorMap.html":{},"interfaces/EventMap.html":{},"interfaces/EventType.html":{},"components/FormContainerComponent.html":{},"components/NgxEditorJSBaseComponent.html":{},"components/NgxEditorJSComponent.html":{},"interfaces/NgxEditorJSDemo.html":{},"interfaces/NgxEditorJSDemo-1.html":{},"interfaces/NgxEditorJSDemoData.html":{},"interfaces/NgxEditorJSDemoData-1.html":{},"components/NgxEditorJSDemoInfoComponent.html":{},"directives/NgxEditorJSDirective.html":{},"injectables/NgxEditorJSService.html":{},"modules/NgxTinynodesCoreModule.html":{},"interfaces/ReadyMap.html":{},"interfaces/TinynodeDemos.html":{},"interfaces/TinynodeDemos-1.html":{},"miscellaneous/enumerations.html":{}}}],["statechanges",{"_index":689,"title":{},"body":{"interfaces/EditorJSMaterialForm.html":{}}}],["statements",{"_index":1983,"title":{},"body":{"coverage.html":{}}}],["static",{"_index":687,"title":{},"body":{"interfaces/EditorJSMaterialForm.html":{},"modules/NgxEditorJSModule.html":{}}}],["status",{"_index":1062,"title":{},"body":{"components/NgxEditorJSBaseComponent.html":{},"components/NgxEditorJSComponent.html":{}}}],["still",{"_index":896,"title":{},"body":{"components/FormContainerComponent.html":{}}}],["store",{"_index":275,"title":{},"body":{"modules/AppModule.html":{},"injectables/AppService.html":{},"injectables/AppService-1.html":{},"injectables/ApplicationQuery.html":{},"injectables/ApplicationQuery-1.html":{},"injectables/ApplicationStore.html":{},"injectables/ApplicationStore-1.html":{},"injectables/NgxEditorJSPluginService.html":{},"modules/NgxEditorjsNgrxModule.html":{},"modules/PageStoreModule.html":{},"injectables/PagesQuery.html":{},"injectables/PagesService.html":{},"dependencies.html":{},"todo.html":{}}}],["store/pages/pages.models",{"_index":860,"title":{},"body":{"components/FormContainerComponent.html":{},"components/PageContainerComponent.html":{}}}],["store/pages/pages.module",{"_index":1496,"title":{},"body":{"modules/NgxEditorjsDemoModule.html":{}}}],["store/pages/pages.service",{"_index":861,"title":{},"body":{"components/FormContainerComponent.html":{},"components/PageContainerComponent.html":{}}}],["storeconfig",{"_index":460,"title":{},"body":{"injectables/ApplicationStore.html":{},"injectables/ApplicationStore-1.html":{},"interfaces/PagesState.html":{},"injectables/PagesStore.html":{}}}],["stored",{"_index":1363,"title":{},"body":{"injectables/NgxEditorJSPluginService.html":{}}}],["stores",{"_index":95,"title":{},"body":{"components/AppContainerComponent.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-readme/ngx-editorjs-changelog.html":{}}}],["stores/app/application.module",{"_index":1553,"title":{},"body":{"modules/NgxTinynodesCoreModule.html":{}}}],["stream",{"_index":1432,"title":{},"body":{"injectables/NgxEditorJSService.html":{}}}],["stretch",{"_index":521,"title":{},"body":{"interfaces/Block.html":{},"interfaces/Header.html":{},"interfaces/HeaderBlock.html":{},"interfaces/Image.html":{},"interfaces/ImageBlock.html":{},"interfaces/List.html":{},"interfaces/ListBlock.html":{},"interfaces/Paragraph.html":{},"interfaces/ParagraphBlock.html":{}}}],["stretched",{"_index":522,"title":{},"body":{"interfaces/Block.html":{},"interfaces/Header.html":{},"interfaces/HeaderBlock.html":{},"interfaces/Image.html":{},"interfaces/ImageBlock.html":{},"interfaces/List.html":{},"interfaces/ListBlock.html":{},"interfaces/Paragraph.html":{},"interfaces/ParagraphBlock.html":{}}}],["string",{"_index":342,"title":{},"body":{"injectables/AppService.html":{},"injectables/AppService-1.html":{},"interfaces/ApplicationData.html":{},"interfaces/ApplicationData-1.html":{},"interfaces/ApplicationState.html":{},"interfaces/ApplicationState-1.html":{},"interfaces/BasePlugin.html":{},"interfaces/BasePlugin-1.html":{},"interfaces/Block.html":{},"interfaces/BlocksMap.html":{},"interfaces/ChangeMap.html":{},"classes/Changed.html":{},"interfaces/CreateEditorJSOptions.html":{},"interfaces/DemoData.html":{},"interfaces/DemoData-1.html":{},"interfaces/EditorJSAction.html":{},"interfaces/EditorJSConfig.html":{},"interfaces/EditorJSInstanceConfig.html":{},"interfaces/EditorJSMaterialForm.html":{},"interfaces/EditorMap.html":{},"interfaces/EventMap.html":{},"interfaces/EventType.html":{},"components/FormContainerComponent.html":{},"interfaces/Header.html":{},"interfaces/HeaderBlock.html":{},"interfaces/Image.html":{},"interfaces/ImageBlock.html":{},"interfaces/InjectorMethodOption.html":{},"interfaces/List.html":{},"interfaces/ListBlock.html":{},"interfaces/MenuGroup.html":{},"interfaces/MenuGroup-1.html":{},"interfaces/MenuItem.html":{},"interfaces/MenuItem-1.html":{},"classes/MockEditorJS.html":{},"classes/MockPlugin.html":{},"components/NgxEditorJSBaseComponent.html":{},"components/NgxEditorJSComponent.html":{},"interfaces/NgxEditorJSConfig.html":{},"interfaces/NgxEditorJSDemo.html":{},"interfaces/NgxEditorJSDemo-1.html":{},"interfaces/NgxEditorJSDemoData.html":{},"interfaces/NgxEditorJSDemoData-1.html":{},"components/NgxEditorJSDemoInfoComponent.html":{},"directives/NgxEditorJSDirective.html":{},"injectables/NgxEditorJSPluginService.html":{},"injectables/NgxEditorJSService.html":{},"classes/NotReady.html":{},"interfaces/Page.html":{},"interfaces/PageBlock.html":{},"components/PageContainerComponent.html":{},"interfaces/Paragraph.html":{},"interfaces/ParagraphBlock.html":{},"interfaces/PluginConfig.html":{},"interfaces/PluginConfig-1.html":{},"injectables/PluginMarker.html":{},"classes/Ready.html":{},"interfaces/ReadyMap.html":{},"classes/SaveEnd.html":{},"classes/SaveStart.html":{},"interfaces/Tag.html":{},"classes/TestClass.html":{},"interfaces/TinynodeDemos.html":{},"interfaces/TinynodeDemos-1.html":{},"interfaces/ToolSettingsMap.html":{},"interfaces/ToolSettingsMap-1.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-readme/ngx-editorjs-changelog.html":{}}}],["style",{"_index":171,"title":{},"body":{"components/AppContainerComponent.html":{},"interfaces/Block.html":{},"interfaces/Header.html":{},"interfaces/HeaderBlock.html":{},"interfaces/Image.html":{},"interfaces/ImageBlock.html":{},"interfaces/List.html":{},"interfaces/ListBlock.html":{},"components/NavBarComponent.html":{},"interfaces/Paragraph.html":{},"interfaces/ParagraphBlock.html":{}}}],["styles",{"_index":6,"title":{},"body":{"components/AppContainerComponent.html":{},"interfaces/Block.html":{},"components/FormContainerComponent.html":{},"interfaces/Header.html":{},"interfaces/HeaderBlock.html":{},"components/HomePageComponent.html":{},"interfaces/Image.html":{},"interfaces/ImageBlock.html":{},"interfaces/List.html":{},"interfaces/ListBlock.html":{},"components/NavBarComponent.html":{},"components/NgxEditorJSComponent.html":{},"components/NgxEditorJSDemoHomeComponent.html":{},"components/NgxEditorJSDemoInfoComponent.html":{},"components/PageContainerComponent.html":{},"interfaces/Paragraph.html":{},"interfaces/ParagraphBlock.html":{},"components/SidebarComponent.html":{},"miscellaneous/typealiases.html":{}}}],["styleurls",{"_index":24,"title":{},"body":{"components/AppContainerComponent.html":{},"interfaces/EditorJSMaterialForm.html":{},"components/FormContainerComponent.html":{},"components/HomePageComponent.html":{},"components/NavBarComponent.html":{},"components/NgxEditorJSComponent.html":{},"components/NgxEditorJSDemoHomeComponent.html":{},"components/NgxEditorJSDemoInfoComponent.html":{},"components/PageContainerComponent.html":{},"components/SidebarComponent.html":{}}}],["subcription",{"_index":773,"title":{},"body":{"interfaces/EditorJSMaterialForm.html":{}}}],["subject",{"_index":91,"title":{},"body":{"components/AppContainerComponent.html":{},"interfaces/BlocksMap.html":{},"interfaces/ChangeMap.html":{},"interfaces/EditorJSMaterialForm.html":{},"interfaces/EditorMap.html":{},"interfaces/EventMap.html":{},"interfaces/EventType.html":{},"components/FormContainerComponent.html":{},"components/NgxEditorJSBaseComponent.html":{},"components/NgxEditorJSComponent.html":{},"injectables/NgxEditorJSService.html":{},"components/PageContainerComponent.html":{},"interfaces/ReadyMap.html":{},"license.html":{}}}],["subjects",{"_index":1241,"title":{},"body":{"directives/NgxEditorJSDirective.html":{}}}],["sublicense",{"_index":2114,"title":{},"body":{"license.html":{}}}],["submission",{"_index":928,"title":{},"body":{"components/FormContainerComponent.html":{}}}],["subscribe",{"_index":760,"title":{},"body":{"interfaces/EditorJSMaterialForm.html":{}}}],["subscribe((data",{"_index":883,"title":{},"body":{"components/FormContainerComponent.html":{},"components/PageContainerComponent.html":{}}}],["subscribe(blocks",{"_index":871,"title":{},"body":{"components/FormContainerComponent.html":{}}}],["subscribe(focused",{"_index":764,"title":{},"body":{"interfaces/EditorJSMaterialForm.html":{},"components/NgxEditorJSComponent.html":{}}}],["subscribe(hidden",{"_index":144,"title":{},"body":{"components/AppContainerComponent.html":{}}}],["subscribed",{"_index":1414,"title":{},"body":{"injectables/NgxEditorJSService.html":{}}}],["subscription",{"_index":1090,"title":{},"body":{"components/NgxEditorJSBaseComponent.html":{},"components/NgxEditorJSComponent.html":{}}}],["substantial",{"_index":2126,"title":{},"body":{"license.html":{}}}],["such",{"_index":1888,"title":{},"body":{"contributing.html":{}}}],["sunday",{"_index":1759,"title":{},"body":{"changelog.html":{}}}],["super",{"_index":461,"title":{},"body":{"injectables/ApplicationStore.html":{},"injectables/ApplicationStore-1.html":{},"injectables/MockNgZone.html":{},"interfaces/PagesState.html":{},"injectables/PagesStore.html":{}}}],["super(service",{"_index":750,"title":{},"body":{"interfaces/EditorJSMaterialForm.html":{},"components/NgxEditorJSComponent.html":{}}}],["super(store",{"_index":441,"title":{},"body":{"injectables/ApplicationQuery.html":{},"injectables/ApplicationQuery-1.html":{},"injectables/PagesQuery.html":{}}}],["support",{"_index":1073,"title":{},"body":{"components/NgxEditorJSBaseComponent.html":{},"components/NgxEditorJSComponent.html":{},"modules/PageStoreModule.html":{},"modules.html":{},"todo.html":{},"miscellaneous/variables.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-readme.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-readme/ngx-editorjs-changelog.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-plugins-readme.html":{}}}],["supported",{"_index":583,"title":{},"body":{"interfaces/CreateEditorJSOptions.html":{},"interfaces/EditorJSAction.html":{},"miscellaneous/enumerations.html":{}}}],["supports",{"_index":500,"title":{},"body":{"interfaces/Block.html":{},"interfaces/Header.html":{},"interfaces/HeaderBlock.html":{},"interfaces/Image.html":{},"interfaces/ImageBlock.html":{},"interfaces/List.html":{},"interfaces/ListBlock.html":{},"interfaces/Paragraph.html":{},"interfaces/ParagraphBlock.html":{},"miscellaneous/typealiases.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-readme/ngx-editorjs-changelog.html":{}}}],["svg",{"_index":2151,"title":{},"body":{"modules.html":{}}}],["switch",{"_index":1439,"title":{},"body":{"injectables/NgxEditorJSService.html":{}}}],["switchmap",{"_index":1312,"title":{},"body":{"injectables/NgxEditorJSEffects.html":{}}}],["t",{"_index":344,"title":{},"body":{"injectables/AppService.html":{},"injectables/AppService-1.html":{},"interfaces/ApplicationState.html":{},"interfaces/ApplicationState-1.html":{},"interfaces/Block.html":{},"interfaces/BlocksMap.html":{},"interfaces/ChangeMap.html":{},"interfaces/CreateEditorJSOptions.html":{},"interfaces/DemoData.html":{},"interfaces/DemoData-1.html":{},"interfaces/EditorJSAction.html":{},"interfaces/EditorMap.html":{},"interfaces/EventMap.html":{},"interfaces/EventType.html":{},"interfaces/Header.html":{},"interfaces/HeaderBlock.html":{},"interfaces/Image.html":{},"interfaces/ImageBlock.html":{},"interfaces/List.html":{},"interfaces/ListBlock.html":{},"interfaces/NgxEditorJSDemo.html":{},"interfaces/NgxEditorJSDemo-1.html":{},"interfaces/NgxEditorJSDemoData.html":{},"interfaces/NgxEditorJSDemoData-1.html":{},"interfaces/Paragraph.html":{},"interfaces/ParagraphBlock.html":{},"interfaces/ReadyMap.html":{},"interfaces/TinynodeDemos.html":{},"interfaces/TinynodeDemos-1.html":{}}}],["table",{"_index":2041,"title":{},"body":{"coverage.html":{}}}],["tablesort(document.getelementbyid('coverage",{"_index":2040,"title":{},"body":{"coverage.html":{}}}],["tag",{"_index":220,"title":{"interfaces/Tag.html":{}},"body":{"components/AppContainerComponent.html":{},"components/FormContainerComponent.html":{},"components/HomePageComponent.html":{},"components/NavBarComponent.html":{},"components/NgxEditorJSBaseComponent.html":{},"components/NgxEditorJSComponent.html":{},"components/NgxEditorJSDemoHomeComponent.html":{},"components/NgxEditorJSDemoInfoComponent.html":{},"interfaces/Page.html":{},"interfaces/PageBlock.html":{},"components/PageContainerComponent.html":{},"components/SidebarComponent.html":{},"interfaces/Tag.html":{},"coverage.html":{}}}],["tag_component_field_control",{"_index":2006,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["tag_component_value_accessor",{"_index":2007,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["tags",{"_index":899,"title":{},"body":{"components/FormContainerComponent.html":{},"todo.html":{}}}],["take",{"_index":859,"title":{},"body":{"components/FormContainerComponent.html":{},"components/PageContainerComponent.html":{},"contributing.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-readme/ngx-editorjs-changelog.html":{}}}],["takes",{"_index":1324,"title":{},"body":{"modules/NgxEditorJSModule.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-readme.html":{}}}],["takeuntil",{"_index":124,"title":{},"body":{"components/AppContainerComponent.html":{},"interfaces/EditorJSMaterialForm.html":{},"components/FormContainerComponent.html":{},"components/NgxEditorJSComponent.html":{},"injectables/NgxEditorJSService.html":{},"components/PageContainerComponent.html":{}}}],["takeuntil(this.ondestroy",{"_index":143,"title":{},"body":{"components/AppContainerComponent.html":{},"components/FormContainerComponent.html":{}}}],["tane",{"_index":2089,"title":{},"body":{"index.html":{},"license.html":{}}}],["tap",{"_index":1096,"title":{},"body":{"components/NgxEditorJSBaseComponent.html":{},"injectables/NgxEditorJSEffects.html":{},"components/PageContainerComponent.html":{}}}],["tap(focused",{"_index":1113,"title":{},"body":{"components/NgxEditorJSBaseComponent.html":{}}}],["team",{"_index":1949,"title":{},"body":{"contributing.html":{}}}],["template",{"_index":5,"title":{},"body":{"components/AppContainerComponent.html":{},"components/FormContainerComponent.html":{},"components/HomePageComponent.html":{},"components/NavBarComponent.html":{},"components/NgxEditorJSBaseComponent.html":{},"components/NgxEditorJSComponent.html":{},"components/NgxEditorJSDemoHomeComponent.html":{},"components/NgxEditorJSDemoInfoComponent.html":{},"components/PageContainerComponent.html":{},"components/SidebarComponent.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-readme.html":{}}}],["templateref",{"_index":1177,"title":{},"body":{"components/NgxEditorJSDemoInfoComponent.html":{}}}],["templateurl",{"_index":26,"title":{},"body":{"components/AppContainerComponent.html":{},"interfaces/EditorJSMaterialForm.html":{},"components/FormContainerComponent.html":{},"components/HomePageComponent.html":{},"components/NavBarComponent.html":{},"components/NgxEditorJSComponent.html":{},"components/NgxEditorJSDemoHomeComponent.html":{},"components/NgxEditorJSDemoInfoComponent.html":{},"components/PageContainerComponent.html":{},"components/SidebarComponent.html":{}}}],["temporarily",{"_index":1916,"title":{},"body":{"contributing.html":{}}}],["temporary",{"_index":1969,"title":{},"body":{"contributing.html":{}}}],["test",{"_index":981,"title":{},"body":{"classes/MockEditorJS.html":{},"classes/MockPlugin.html":{},"classes/TestClass.html":{}}}],["testclass",{"_index":978,"title":{"classes/TestClass.html":{}},"body":{"classes/MockEditorJS.html":{},"classes/MockPlugin.html":{},"classes/TestClass.html":{},"coverage.html":{}}}],["text",{"_index":160,"title":{},"body":{"components/AppContainerComponent.html":{},"interfaces/Block.html":{},"components/FormContainerComponent.html":{},"interfaces/Header.html":{},"interfaces/HeaderBlock.html":{},"interfaces/Image.html":{},"interfaces/ImageBlock.html":{},"interfaces/List.html":{},"interfaces/ListBlock.html":{},"components/NavBarComponent.html":{},"components/NgxEditorJSComponent.html":{},"interfaces/Paragraph.html":{},"interfaces/ParagraphBlock.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-plugins-readme.html":{}}}],["things",{"_index":1193,"title":{},"body":{"components/NgxEditorJSDemoInfoComponent.html":{}}}],["this._disabled",{"_index":717,"title":{},"body":{"interfaces/EditorJSMaterialForm.html":{}}}],["this._empty",{"_index":722,"title":{},"body":{"interfaces/EditorJSMaterialForm.html":{}}}],["this._focused",{"_index":704,"title":{},"body":{"interfaces/EditorJSMaterialForm.html":{}}}],["this._placeholder",{"_index":699,"title":{},"body":{"interfaces/EditorJSMaterialForm.html":{}}}],["this._required",{"_index":710,"title":{},"body":{"interfaces/EditorJSMaterialForm.html":{}}}],["this._value",{"_index":694,"title":{},"body":{"interfaces/EditorJSMaterialForm.html":{},"components/NgxEditorJSBaseComponent.html":{}}}],["this.actions$.pipe",{"_index":1297,"title":{},"body":{"injectables/NgxEditorJSEffects.html":{}}}],["this.add(key",{"_index":1384,"title":{},"body":{"injectables/NgxEditorJSPluginService.html":{}}}],["this.app",{"_index":880,"title":{},"body":{"components/FormContainerComponent.html":{},"components/PageContainerComponent.html":{}}}],["this.app.getmenu('main",{"_index":151,"title":{},"body":{"components/AppContainerComponent.html":{},"components/HomePageComponent.html":{}}}],["this.app.getmenu('other",{"_index":154,"title":{},"body":{"components/AppContainerComponent.html":{}}}],["this.app.getmenu('tinynode",{"_index":153,"title":{},"body":{"components/AppContainerComponent.html":{}}}],["this.app.hidden.pipe(takeuntil(this.ondestroy$)).subscribe(hidden",{"_index":134,"title":{},"body":{"components/AppContainerComponent.html":{}}}],["this.app.togglesidebar(value",{"_index":140,"title":{},"body":{"components/AppContainerComponent.html":{}}}],["this.autofocus",{"_index":1281,"title":{},"body":{"directives/NgxEditorJSDirective.html":{}}}],["this.autosave",{"_index":1114,"title":{},"body":{"components/NgxEditorJSBaseComponent.html":{},"directives/NgxEditorJSDirective.html":{}}}],["this.autosave$.asobservable",{"_index":868,"title":{},"body":{"components/FormContainerComponent.html":{}}}],["this.autosave$.next(0",{"_index":867,"title":{},"body":{"components/FormContainerComponent.html":{}}}],["this.autosave$.next(autosavetime",{"_index":866,"title":{},"body":{"components/FormContainerComponent.html":{}}}],["this.autosave).subscribe",{"_index":1116,"title":{},"body":{"components/NgxEditorJSBaseComponent.html":{}}}],["this.blockplaceholder",{"_index":1284,"title":{},"body":{"directives/NgxEditorJSDirective.html":{}}}],["this.blocks",{"_index":876,"title":{},"body":{"components/FormContainerComponent.html":{},"classes/MockEditorJS.html":{},"classes/MockPlugin.html":{},"directives/NgxEditorJSDirective.html":{},"classes/TestClass.html":{}}}],["this.blocks.length",{"_index":1287,"title":{},"body":{"directives/NgxEditorJSDirective.html":{}}}],["this.blocks.pipe",{"_index":1574,"title":{},"body":{"components/PageContainerComponent.html":{}}}],["this.cd.markforcheck",{"_index":873,"title":{},"body":{"components/FormContainerComponent.html":{},"components/PageContainerComponent.html":{}}}],["this.clear(editoraction.payload",{"_index":1445,"title":{},"body":{"injectables/NgxEditorJSService.html":{}}}],["this.config.editorjs",{"_index":1454,"title":{},"body":{"injectables/NgxEditorJSService.html":{}}}],["this.createeditor(editoraction.payload",{"_index":1443,"title":{},"body":{"injectables/NgxEditorJSService.html":{}}}],["this.createeditor(this.createconfig",{"_index":1275,"title":{},"body":{"directives/NgxEditorJSDirective.html":{}}}],["this.describedby",{"_index":739,"title":{},"body":{"interfaces/EditorJSMaterialForm.html":{}}}],["this.destroy",{"_index":985,"title":{},"body":{"classes/MockEditorJS.html":{},"classes/MockPlugin.html":{},"classes/TestClass.html":{}}}],["this.destroy(editoraction.payload",{"_index":1447,"title":{},"body":{"injectables/NgxEditorJSService.html":{}}}],["this.editor",{"_index":869,"title":{},"body":{"components/FormContainerComponent.html":{}}}],["this.editor.clear",{"_index":879,"title":{},"body":{"components/FormContainerComponent.html":{},"components/PageContainerComponent.html":{}}}],["this.editor.getblocks",{"_index":1573,"title":{},"body":{"components/PageContainerComponent.html":{}}}],["this.editor.save",{"_index":877,"title":{},"body":{"components/FormContainerComponent.html":{},"components/PageContainerComponent.html":{}}}],["this.editor.update",{"_index":889,"title":{},"body":{"components/FormContainerComponent.html":{},"components/PageContainerComponent.html":{}}}],["this.editoractions$.pipe(filter(action",{"_index":1435,"title":{},"body":{"injectables/NgxEditorJSService.html":{}}}],["this.editoractions.pipe(takeuntil(this.ondestroy$)).subscribe(editoraction",{"_index":1438,"title":{},"body":{"injectables/NgxEditorJSService.html":{}}}],["this.editorform.patchvalue",{"_index":872,"title":{},"body":{"components/FormContainerComponent.html":{}}}],["this.editorservice",{"_index":1261,"title":{},"body":{"directives/NgxEditorJSDirective.html":{}}}],["this.editorservice.clear",{"_index":1468,"title":{},"body":{"injectables/NgxEditorJSService.html":{}}}],["this.editorservice.createinstance",{"_index":1458,"title":{},"body":{"injectables/NgxEditorJSService.html":{}}}],["this.editorservice.destroyinstance",{"_index":1469,"title":{},"body":{"injectables/NgxEditorJSService.html":{}}}],["this.editorservice.getblocks",{"_index":1462,"title":{},"body":{"injectables/NgxEditorJSService.html":{}}}],["this.editorservice.getblocks(action.payload.holder",{"_index":1302,"title":{},"body":{"injectables/NgxEditorJSEffects.html":{}}}],["this.editorservice.getchanged",{"_index":1464,"title":{},"body":{"injectables/NgxEditorJSService.html":{}}}],["this.editorservice.getinstance",{"_index":1460,"title":{},"body":{"injectables/NgxEditorJSService.html":{}}}],["this.editorservice.getready",{"_index":1463,"title":{},"body":{"injectables/NgxEditorJSService.html":{}}}],["this.editorservice.onchange",{"_index":1465,"title":{},"body":{"injectables/NgxEditorJSService.html":{}}}],["this.editorservice.save",{"_index":1467,"title":{},"body":{"injectables/NgxEditorJSService.html":{}}}],["this.editorservice.save(action.payload.holder",{"_index":1300,"title":{},"body":{"injectables/NgxEditorJSEffects.html":{}}}],["this.editorservice.update",{"_index":1466,"title":{},"body":{"injectables/NgxEditorJSService.html":{}}}],["this.el.nativeelement",{"_index":1260,"title":{},"body":{"directives/NgxEditorJSDirective.html":{}}}],["this.el.nativeelement.id",{"_index":1276,"title":{},"body":{"directives/NgxEditorJSDirective.html":{}}}],["this.empty",{"_index":735,"title":{},"body":{"interfaces/EditorJSMaterialForm.html":{}}}],["this.errorstate",{"_index":767,"title":{},"body":{"interfaces/EditorJSMaterialForm.html":{}}}],["this.fb.group",{"_index":829,"title":{},"body":{"components/FormContainerComponent.html":{}}}],["this.fm.monitor(element",{"_index":1109,"title":{},"body":{"components/NgxEditorJSBaseComponent.html":{}}}],["this.fm.stopmonitoring(this.editorel.element",{"_index":774,"title":{},"body":{"interfaces/EditorJSMaterialForm.html":{},"components/NgxEditorJSComponent.html":{}}}],["this.focused",{"_index":734,"title":{},"body":{"interfaces/EditorJSMaterialForm.html":{}}}],["this.getfocusmonitor(this.editorel.element",{"_index":762,"title":{},"body":{"interfaces/EditorJSMaterialForm.html":{},"components/NgxEditorJSComponent.html":{}}}],["this.gettimer(this.autosave",{"_index":1115,"title":{},"body":{"components/NgxEditorJSBaseComponent.html":{}}}],["this.haschanged.emit",{"_index":1291,"title":{},"body":{"directives/NgxEditorJSDirective.html":{}}}],["this.haschanged.emit(blocks",{"_index":1107,"title":{},"body":{"components/NgxEditorJSBaseComponent.html":{}}}],["this.haschanged.emit(changes.blocks.currentvalue",{"_index":1267,"title":{},"body":{"directives/NgxEditorJSDirective.html":{}}}],["this.haschanged.emit(this.blocks",{"_index":1290,"title":{},"body":{"directives/NgxEditorJSDirective.html":{}}}],["this.hidetoolbar",{"_index":1282,"title":{},"body":{"directives/NgxEditorJSDirective.html":{}}}],["this.holder",{"_index":870,"title":{},"body":{"components/FormContainerComponent.html":{},"components/NgxEditorJSBaseComponent.html":{},"directives/NgxEditorJSDirective.html":{},"components/PageContainerComponent.html":{}}}],["this.http.get('/assets/app",{"_index":369,"title":{},"body":{"injectables/AppService.html":{},"injectables/AppService-1.html":{}}}],["this.id",{"_index":1259,"title":{},"body":{"directives/NgxEditorJSDirective.html":{}}}],["this.includetools",{"_index":1264,"title":{},"body":{"directives/NgxEditorJSDirective.html":{}}}],["this.initialblock",{"_index":1283,"title":{},"body":{"directives/NgxEditorJSDirective.html":{}}}],["this.isready",{"_index":983,"title":{},"body":{"classes/MockEditorJS.html":{},"classes/MockPlugin.html":{},"classes/TestClass.html":{}}}],["this.issaved$.asobservable",{"_index":864,"title":{},"body":{"components/FormContainerComponent.html":{}}}],["this.issaved$.next(issaved",{"_index":865,"title":{},"body":{"components/FormContainerComponent.html":{}}}],["this.issaved.emit(false",{"_index":745,"title":{},"body":{"interfaces/EditorJSMaterialForm.html":{},"components/NgxEditorJSBaseComponent.html":{}}}],["this.issaved.emit(true",{"_index":1105,"title":{},"body":{"components/NgxEditorJSBaseComponent.html":{}}}],["this.istouched.emit(true",{"_index":1106,"title":{},"body":{"components/NgxEditorJSBaseComponent.html":{},"directives/NgxEditorJSDirective.html":{}}}],["this.matcher.matchmedia('(max",{"_index":130,"title":{},"body":{"components/AppContainerComponent.html":{}}}],["this.menu",{"_index":874,"title":{},"body":{"components/FormContainerComponent.html":{},"components/PageContainerComponent.html":{}}}],["this.menu$.next(data.links",{"_index":888,"title":{},"body":{"components/FormContainerComponent.html":{},"components/PageContainerComponent.html":{}}}],["this.minheight",{"_index":1285,"title":{},"body":{"directives/NgxEditorJSDirective.html":{}}}],["this.mobileview",{"_index":129,"title":{},"body":{"components/AppContainerComponent.html":{}}}],["this.mobileview.addlistener(this.matchview.bind(this",{"_index":133,"title":{},"body":{"components/AppContainerComponent.html":{}}}],["this.mobileview.removelistener(this.matchview",{"_index":148,"title":{},"body":{"components/AppContainerComponent.html":{}}}],["this.ngcontrol",{"_index":753,"title":{},"body":{"interfaces/EditorJSMaterialForm.html":{}}}],["this.ngcontrol.invalid",{"_index":768,"title":{},"body":{"interfaces/EditorJSMaterialForm.html":{}}}],["this.ngcontrol.touched",{"_index":769,"title":{},"body":{"interfaces/EditorJSMaterialForm.html":{}}}],["this.ngcontrol.valueaccessor",{"_index":755,"title":{},"body":{"interfaces/EditorJSMaterialForm.html":{}}}],["this.onchange",{"_index":1108,"title":{},"body":{"components/NgxEditorJSBaseComponent.html":{}}}],["this.ondestroy$.complete",{"_index":150,"title":{},"body":{"components/AppContainerComponent.html":{},"interfaces/EditorJSMaterialForm.html":{},"components/NgxEditorJSBaseComponent.html":{},"components/NgxEditorJSComponent.html":{}}}],["this.ondestroy$.isstopped",{"_index":1117,"title":{},"body":{"components/NgxEditorJSBaseComponent.html":{}}}],["this.ondestroy$.next(true",{"_index":149,"title":{},"body":{"components/AppContainerComponent.html":{},"interfaces/EditorJSMaterialForm.html":{},"components/NgxEditorJSBaseComponent.html":{},"components/NgxEditorJSComponent.html":{}}}],["this.onstable.emit(null",{"_index":1010,"title":{},"body":{"injectables/MockNgZone.html":{}}}],["this.ontouch",{"_index":708,"title":{},"body":{"interfaces/EditorJSMaterialForm.html":{},"components/NgxEditorJSBaseComponent.html":{},"components/NgxEditorJSComponent.html":{}}}],["this.ontouch(event",{"_index":744,"title":{},"body":{"interfaces/EditorJSMaterialForm.html":{}}}],["this.pages",{"_index":1619,"title":{},"body":{"injectables/PagesService.html":{}}}],["this.pagesservice.pages",{"_index":875,"title":{},"body":{"components/FormContainerComponent.html":{},"components/PageContainerComponent.html":{}}}],["this.panelopen",{"_index":1187,"title":{},"body":{"components/NgxEditorJSDemoInfoComponent.html":{}}}],["this.panelopen$.asobservable",{"_index":862,"title":{},"body":{"components/FormContainerComponent.html":{},"components/NgxEditorJSDemoInfoComponent.html":{}}}],["this.panelopen$.next(this.panelopen",{"_index":1188,"title":{},"body":{"components/NgxEditorJSDemoInfoComponent.html":{}}}],["this.panelopen$.next(value",{"_index":863,"title":{},"body":{"components/FormContainerComponent.html":{},"components/NgxEditorJSDemoInfoComponent.html":{}}}],["this.plugins.gettools(options.includetools",{"_index":1456,"title":{},"body":{"injectables/NgxEditorJSService.html":{}}}],["this.pluginsmap",{"_index":1387,"title":{},"body":{"injectables/NgxEditorJSPluginService.html":{}}}],["this.pluginsmap[key",{"_index":1385,"title":{},"body":{"injectables/NgxEditorJSPluginService.html":{}}}],["this.query.select('menus').pipe",{"_index":385,"title":{},"body":{"injectables/AppService.html":{},"injectables/AppService-1.html":{}}}],["this.query.select(applicationstatekeys.demodata).pipe",{"_index":378,"title":{},"body":{"injectables/AppService.html":{},"injectables/AppService-1.html":{}}}],["this.query.select(applicationstatekeys.hidden",{"_index":372,"title":{},"body":{"injectables/AppService.html":{},"injectables/AppService-1.html":{}}}],["this.query.selectall",{"_index":1620,"title":{},"body":{"injectables/PagesService.html":{}}}],["this.reset",{"_index":890,"title":{},"body":{"components/FormContainerComponent.html":{},"components/PageContainerComponent.html":{}}}],["this.sanitizer",{"_index":1286,"title":{},"body":{"directives/NgxEditorJSDirective.html":{}}}],["this.save(editoraction.payload",{"_index":1449,"title":{},"body":{"injectables/NgxEditorJSService.html":{}}}],["this.saver",{"_index":986,"title":{},"body":{"classes/MockEditorJS.html":{},"classes/MockPlugin.html":{},"classes/TestClass.html":{}}}],["this.service.createeditor",{"_index":1263,"title":{},"body":{"directives/NgxEditorJSDirective.html":{}}}],["this.service.destroy",{"_index":1280,"title":{},"body":{"directives/NgxEditorJSDirective.html":{}}}],["this.service.getchanged",{"_index":1119,"title":{},"body":{"components/NgxEditorJSBaseComponent.html":{}}}],["this.service.geteditor",{"_index":1258,"title":{},"body":{"directives/NgxEditorJSDirective.html":{}}}],["this.service.isready",{"_index":1118,"title":{},"body":{"components/NgxEditorJSBaseComponent.html":{}}}],["this.service.save",{"_index":1104,"title":{},"body":{"components/NgxEditorJSBaseComponent.html":{}}}],["this.service.update",{"_index":1268,"title":{},"body":{"directives/NgxEditorJSDirective.html":{}}}],["this.setissaved(true",{"_index":878,"title":{},"body":{"components/FormContainerComponent.html":{}}}],["this.sidebarhidden",{"_index":141,"title":{},"body":{"components/AppContainerComponent.html":{}}}],["this.sidebarhidden$.asobservable",{"_index":137,"title":{},"body":{"components/AppContainerComponent.html":{}}}],["this.sidebarhidden$.next(hidden",{"_index":135,"title":{},"body":{"components/AppContainerComponent.html":{}}}],["this.sidenav.close",{"_index":146,"title":{},"body":{"components/AppContainerComponent.html":{}}}],["this.sidenav.open",{"_index":147,"title":{},"body":{"components/AppContainerComponent.html":{}}}],["this.statechanges.next",{"_index":697,"title":{},"body":{"interfaces/EditorJSMaterialForm.html":{}}}],["this.store._value()[applicationstatekeys.hidden",{"_index":377,"title":{},"body":{"injectables/AppService.html":{},"injectables/AppService-1.html":{}}}],["this.store.add(newpage",{"_index":1622,"title":{},"body":{"injectables/PagesService.html":{}}}],["this.store.remove(pageid",{"_index":1625,"title":{},"body":{"injectables/PagesService.html":{}}}],["this.store.update",{"_index":373,"title":{},"body":{"injectables/AppService.html":{},"injectables/AppService-1.html":{}}}],["this.store.update(appdata",{"_index":371,"title":{},"body":{"injectables/AppService.html":{},"injectables/AppService-1.html":{}}}],["this.store.update(pageid",{"_index":1626,"title":{},"body":{"injectables/PagesService.html":{}}}],["this.store.upsert(page.id",{"_index":1624,"title":{},"body":{"injectables/PagesService.html":{}}}],["this.timersubscription",{"_index":775,"title":{},"body":{"interfaces/EditorJSMaterialForm.html":{},"components/NgxEditorJSBaseComponent.html":{},"components/NgxEditorJSComponent.html":{}}}],["this.timersubscription$.closed",{"_index":776,"title":{},"body":{"interfaces/EditorJSMaterialForm.html":{},"components/NgxEditorJSComponent.html":{}}}],["this.timersubscription$.unsubscribe",{"_index":777,"title":{},"body":{"interfaces/EditorJSMaterialForm.html":{},"components/NgxEditorJSBaseComponent.html":{},"components/NgxEditorJSComponent.html":{}}}],["this.togglesidebar(!event.matches",{"_index":139,"title":{},"body":{"components/AppContainerComponent.html":{}}}],["this.touched$.asobservable",{"_index":1262,"title":{},"body":{"directives/NgxEditorJSDirective.html":{}}}],["this.touched$.next(true",{"_index":1257,"title":{},"body":{"directives/NgxEditorJSDirective.html":{}}}],["this.update(editoraction.payload",{"_index":1451,"title":{},"body":{"injectables/NgxEditorJSService.html":{}}}],["this.version",{"_index":982,"title":{},"body":{"classes/MockEditorJS.html":{},"classes/MockPlugin.html":{},"classes/TestClass.html":{}}}],["threatening",{"_index":1921,"title":{},"body":{"contributing.html":{}}}],["throw",{"_index":1277,"title":{},"body":{"directives/NgxEditorJSDirective.html":{},"injectables/NgxEditorJSService.html":{}}}],["time",{"_index":814,"title":{},"body":{"components/FormContainerComponent.html":{},"classes/MockEditorJS.html":{},"classes/MockPlugin.html":{},"components/NgxEditorJSBaseComponent.html":{},"components/NgxEditorJSComponent.html":{},"directives/NgxEditorJSDirective.html":{},"injectables/NgxEditorJSEffects.html":{},"classes/TestClass.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-readme.html":{}}}],["time).pipe",{"_index":1101,"title":{},"body":{"components/NgxEditorJSBaseComponent.html":{}}}],["timeinterval",{"_index":1097,"title":{},"body":{"components/NgxEditorJSBaseComponent.html":{}}}],["timer",{"_index":772,"title":{},"body":{"interfaces/EditorJSMaterialForm.html":{},"components/NgxEditorJSBaseComponent.html":{},"components/NgxEditorJSComponent.html":{}}}],["timer(timestart",{"_index":1100,"title":{},"body":{"components/NgxEditorJSBaseComponent.html":{}}}],["timers",{"_index":1068,"title":{},"body":{"components/NgxEditorJSBaseComponent.html":{},"components/NgxEditorJSComponent.html":{}}}],["timersubscription",{"_index":1034,"title":{},"body":{"components/NgxEditorJSBaseComponent.html":{},"components/NgxEditorJSComponent.html":{}}}],["timestamp",{"_index":540,"title":{},"body":{"interfaces/BlocksMap.html":{},"interfaces/ChangeMap.html":{},"interfaces/EditorMap.html":{},"interfaces/EventMap.html":{},"interfaces/EventType.html":{},"injectables/NgxEditorJSService.html":{},"interfaces/ReadyMap.html":{}}}],["timestart",{"_index":1071,"title":{},"body":{"components/NgxEditorJSBaseComponent.html":{},"components/NgxEditorJSComponent.html":{}}}],["tinynode",{"_index":2083,"title":{},"body":{"index.html":{}}}],["tinynodedemos",{"_index":455,"title":{"interfaces/TinynodeDemos.html":{},"interfaces/TinynodeDemos-1.html":{}},"body":{"interfaces/ApplicationState.html":{},"interfaces/ApplicationState-1.html":{},"interfaces/DemoData.html":{},"interfaces/DemoData-1.html":{},"interfaces/NgxEditorJSDemo.html":{},"interfaces/NgxEditorJSDemo-1.html":{},"interfaces/NgxEditorJSDemoData.html":{},"interfaces/NgxEditorJSDemoData-1.html":{},"interfaces/TinynodeDemos.html":{},"interfaces/TinynodeDemos-1.html":{},"coverage.html":{}}}],["tinynodes",{"_index":23,"title":{"additional-documentation/tinynodes-library-docs.html":{}},"body":{"components/AppContainerComponent.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"interfaces/ApplicationData.html":{},"interfaces/ApplicationData-1.html":{},"modules/ApplicationDataModule.html":{},"injectables/ApplicationQuery.html":{},"interfaces/ApplicationState.html":{},"interfaces/ApplicationState-1.html":{},"injectables/ApplicationStore.html":{},"interfaces/DemoData.html":{},"interfaces/DemoData-1.html":{},"components/FormContainerComponent.html":{},"components/HomePageComponent.html":{},"interfaces/MenuGroup.html":{},"interfaces/MenuGroup-1.html":{},"interfaces/MenuItem.html":{},"interfaces/MenuItem-1.html":{},"components/NavBarComponent.html":{},"components/NgxEditorJSBaseComponent.html":{},"components/NgxEditorJSComponent.html":{},"interfaces/NgxEditorJSDemo.html":{},"interfaces/NgxEditorJSDemo-1.html":{},"interfaces/NgxEditorJSDemoData.html":{},"interfaces/NgxEditorJSDemoData-1.html":{},"components/NgxEditorJSDemoHomeComponent.html":{},"components/NgxEditorJSDemoInfoComponent.html":{},"modules/NgxEditorjsDemoModule.html":{},"modules/NgxTinynodesCoreMaterialModule.html":{},"modules/NgxTinynodesCoreModule.html":{},"components/PageContainerComponent.html":{},"components/SidebarComponent.html":{},"interfaces/TinynodeDemos.html":{},"interfaces/TinynodeDemos-1.html":{},"changelog.html":{},"coverage.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"index.html":{},"license.html":{},"todo.html":{},"miscellaneous/variables.html":{},"additional-documentation/tinynodes-library-docs.html":{}}}],["tinynodes/ngx",{"_index":119,"title":{},"body":{"components/AppContainerComponent.html":{},"modules/AppModule.html":{},"interfaces/ApplicationState.html":{},"interfaces/ApplicationState-1.html":{},"interfaces/DemoData.html":{},"interfaces/DemoData-1.html":{},"components/FormContainerComponent.html":{},"components/HomePageComponent.html":{},"components/NavBarComponent.html":{},"interfaces/NgxEditorJSDemo.html":{},"interfaces/NgxEditorJSDemo-1.html":{},"interfaces/NgxEditorJSDemoData.html":{},"interfaces/NgxEditorJSDemoData-1.html":{},"components/NgxEditorJSDemoHomeComponent.html":{},"injectables/NgxEditorJSEffects.html":{},"modules/NgxEditorJSModule.html":{},"modules/NgxEditorjsDemoModule.html":{},"modules/NgxEditorjsNgrxModule.html":{},"interfaces/Page.html":{},"interfaces/PageBlock.html":{},"components/PageContainerComponent.html":{},"injectables/PagesService.html":{},"components/SidebarComponent.html":{},"interfaces/Tag.html":{},"interfaces/TinynodeDemos.html":{},"interfaces/TinynodeDemos-1.html":{},"changelog.html":{},"index.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-readme.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-readme/ngx-editorjs-changelog.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-plugins-readme.html":{}}}],["tinynodes/src/app/app",{"_index":302,"title":{},"body":{"modules/AppRoutingModule.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["tinynodes/src/app/app.module.ts",{"_index":254,"title":{},"body":{"modules/AppModule.html":{}}}],["tinynodes/src/app/components/nav",{"_index":1013,"title":{},"body":{"components/NavBarComponent.html":{},"coverage.html":{}}}],["tinynodes/src/app/components/sidebar",{"_index":1722,"title":{},"body":{"components/SidebarComponent.html":{},"coverage.html":{}}}],["tinynodes/src/app/containers/app/app.component.ts",{"_index":11,"title":{},"body":{"components/AppContainerComponent.html":{},"coverage.html":{}}}],["tinynodes/src/app/containers/app/app.component.ts:103",{"_index":107,"title":{},"body":{"components/AppContainerComponent.html":{}}}],["tinynodes/src/app/containers/app/app.component.ts:110",{"_index":109,"title":{},"body":{"components/AppContainerComponent.html":{}}}],["tinynodes/src/app/containers/app/app.component.ts:117",{"_index":112,"title":{},"body":{"components/AppContainerComponent.html":{}}}],["tinynodes/src/app/containers/app/app.component.ts:21",{"_index":66,"title":{},"body":{"components/AppContainerComponent.html":{}}}],["tinynodes/src/app/containers/app/app.component.ts:26",{"_index":101,"title":{},"body":{"components/AppContainerComponent.html":{}}}],["tinynodes/src/app/containers/app/app.component.ts:31",{"_index":92,"title":{},"body":{"components/AppContainerComponent.html":{}}}],["tinynodes/src/app/containers/app/app.component.ts:36",{"_index":94,"title":{},"body":{"components/AppContainerComponent.html":{}}}],["tinynodes/src/app/containers/app/app.component.ts:41",{"_index":55,"title":{},"body":{"components/AppContainerComponent.html":{}}}],["tinynodes/src/app/containers/app/app.component.ts:59",{"_index":104,"title":{},"body":{"components/AppContainerComponent.html":{}}}],["tinynodes/src/app/containers/app/app.component.ts:67",{"_index":70,"title":{},"body":{"components/AppContainerComponent.html":{}}}],["tinynodes/src/app/containers/app/app.component.ts:75",{"_index":82,"title":{},"body":{"components/AppContainerComponent.html":{}}}],["tinynodes/src/app/containers/app/app.component.ts:82",{"_index":76,"title":{},"body":{"components/AppContainerComponent.html":{}}}],["tinynodes/src/app/containers/app/app.component.ts:94",{"_index":78,"title":{},"body":{"components/AppContainerComponent.html":{}}}],["tinynodes/src/app/core/stores/app/application.model.ts",{"_index":456,"title":{},"body":{"interfaces/ApplicationState-1.html":{},"interfaces/DemoData-1.html":{},"interfaces/NgxEditorJSDemo-1.html":{},"interfaces/NgxEditorJSDemoData-1.html":{},"interfaces/TinynodeDemos-1.html":{},"coverage.html":{},"miscellaneous/enumerations.html":{}}}],["tinynodes/src/app/core/stores/app/application.query.ts",{"_index":442,"title":{},"body":{"injectables/ApplicationQuery-1.html":{},"coverage.html":{}}}],["tinynodes/src/app/core/stores/app/application.query.ts:10",{"_index":443,"title":{},"body":{"injectables/ApplicationQuery-1.html":{}}}],["tinynodes/src/app/core/stores/app/application.service.ts",{"_index":393,"title":{},"body":{"injectables/AppService-1.html":{},"coverage.html":{}}}],["tinynodes/src/app/core/stores/app/application.service.ts:15",{"_index":394,"title":{},"body":{"injectables/AppService-1.html":{}}}],["tinynodes/src/app/core/stores/app/application.service.ts:34",{"_index":398,"title":{},"body":{"injectables/AppService-1.html":{}}}],["tinynodes/src/app/core/stores/app/application.service.ts:41",{"_index":397,"title":{},"body":{"injectables/AppService-1.html":{}}}],["tinynodes/src/app/core/stores/app/application.service.ts:49",{"_index":395,"title":{},"body":{"injectables/AppService-1.html":{}}}],["tinynodes/src/app/core/stores/app/application.service.ts:62",{"_index":396,"title":{},"body":{"injectables/AppService-1.html":{}}}],["tinynodes/src/app/core/stores/app/application.store.ts",{"_index":463,"title":{},"body":{"injectables/ApplicationStore-1.html":{},"coverage.html":{}}}],["tinynodes/src/app/core/stores/app/application.store.ts:10",{"_index":464,"title":{},"body":{"injectables/ApplicationStore-1.html":{}}}],["tinynodes/src/app/core/types/app",{"_index":858,"title":{},"body":{"components/FormContainerComponent.html":{},"components/PageContainerComponent.html":{}}}],["tinynodes/src/app/core/types/app.ts",{"_index":423,"title":{},"body":{"interfaces/ApplicationData-1.html":{},"interfaces/MenuGroup-1.html":{},"interfaces/MenuItem-1.html":{},"coverage.html":{}}}],["tinynodes/src/app/material.module",{"_index":1497,"title":{},"body":{"modules/NgxEditorjsDemoModule.html":{}}}],["tinynodes/src/app/material.module.ts",{"_index":957,"title":{},"body":{"modules/MaterialModule.html":{}}}],["tinynodes/src/app/pages/home/home",{"_index":936,"title":{},"body":{"components/HomePageComponent.html":{},"coverage.html":{}}}],["tinynodes/src/environments/environment.prod.ts",{"_index":2000,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["tinynodes/src/environments/environment.ts",{"_index":2001,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["title",{"_index":68,"title":{},"body":{"components/AppContainerComponent.html":{},"interfaces/ApplicationData.html":{},"interfaces/ApplicationData-1.html":{},"components/FormContainerComponent.html":{},"interfaces/MenuGroup.html":{},"interfaces/MenuGroup-1.html":{},"interfaces/MenuItem.html":{},"interfaces/MenuItem-1.html":{},"components/NavBarComponent.html":{},"components/NgxEditorJSDemoInfoComponent.html":{}}}],["today",{"_index":1744,"title":{},"body":{"changelog.html":{}}}],["todo",{"_index":450,"title":{"todo.html":{}},"body":{"interfaces/ApplicationState.html":{},"interfaces/ApplicationState-1.html":{},"interfaces/DemoData.html":{},"interfaces/DemoData-1.html":{},"interfaces/NgxEditorJSDemo.html":{},"interfaces/NgxEditorJSDemo-1.html":{},"interfaces/NgxEditorJSDemoData.html":{},"interfaces/NgxEditorJSDemoData-1.html":{},"interfaces/TinynodeDemos.html":{},"interfaces/TinynodeDemos-1.html":{},"todo.html":{}}}],["todos",{"_index":2159,"title":{},"body":{"todo.html":{}}}],["toggle",{"_index":83,"title":{},"body":{"components/AppContainerComponent.html":{},"components/NavBarComponent.html":{}}}],["togglepanel",{"_index":795,"title":{},"body":{"components/FormContainerComponent.html":{},"components/NgxEditorJSDemoInfoComponent.html":{}}}],["togglepanel(value",{"_index":823,"title":{},"body":{"components/FormContainerComponent.html":{},"components/NgxEditorJSDemoInfoComponent.html":{}}}],["toggles",{"_index":355,"title":{},"body":{"injectables/AppService.html":{},"injectables/AppService-1.html":{},"components/FormContainerComponent.html":{},"components/NgxEditorJSDemoInfoComponent.html":{}}}],["togglesidebar",{"_index":40,"title":{},"body":{"components/AppContainerComponent.html":{},"injectables/AppService.html":{},"injectables/AppService-1.html":{},"components/NavBarComponent.html":{}}}],["togglesidebar(value",{"_index":80,"title":{},"body":{"components/AppContainerComponent.html":{},"injectables/AppService.html":{}}}],["token",{"_index":487,"title":{},"body":{"interfaces/BasePlugin.html":{},"interfaces/BasePlugin-1.html":{},"interfaces/EditorJSConfig.html":{},"interfaces/EditorJSInstanceConfig.html":{},"interfaces/InjectorMethodOption.html":{},"interfaces/NgxEditorJSConfig.html":{},"interfaces/PluginConfig.html":{},"interfaces/PluginConfig-1.html":{},"interfaces/ToolSettingsMap.html":{},"interfaces/ToolSettingsMap-1.html":{},"miscellaneous/variables.html":{}}}],["tool",{"_index":485,"title":{},"body":{"interfaces/BasePlugin.html":{},"interfaces/BasePlugin-1.html":{},"components/FormContainerComponent.html":{},"injectables/NgxEditorJSPluginService.html":{},"components/PageContainerComponent.html":{},"injectables/PluginCode.html":{},"modules/PluginCodeModule.html":{},"interfaces/PluginConfig.html":{},"interfaces/PluginConfig-1.html":{},"injectables/PluginHeader.html":{},"modules/PluginHeaderModule.html":{},"injectables/PluginImage.html":{},"modules/PluginImageModule.html":{},"injectables/PluginLink.html":{},"modules/PluginLinkModule.html":{},"injectables/PluginList.html":{},"modules/PluginListModule.html":{},"injectables/PluginMarker.html":{},"modules/PluginMarkerModule.html":{},"injectables/PluginParagraph.html":{},"modules/PluginParagraphModule.html":{},"injectables/PluginSimpleImage.html":{},"modules/PluginSimpleImageModule.html":{},"interfaces/ToolSettingsMap.html":{},"interfaces/ToolSettingsMap-1.html":{}}}],["toolbar",{"_index":610,"title":{},"body":{"interfaces/EditorJSConfig.html":{},"components/NgxEditorJSBaseComponent.html":{},"components/NgxEditorJSComponent.html":{},"interfaces/NgxEditorJSConfig.html":{},"directives/NgxEditorJSDirective.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-readme.html":{}}}],["toolconstructable",{"_index":477,"title":{},"body":{"interfaces/BasePlugin.html":{},"interfaces/BasePlugin-1.html":{},"interfaces/PluginConfig.html":{},"interfaces/PluginConfig-1.html":{},"interfaces/ToolSettingsMap.html":{},"interfaces/ToolSettingsMap-1.html":{}}}],["tools",{"_index":482,"title":{},"body":{"interfaces/BasePlugin.html":{},"interfaces/BasePlugin-1.html":{},"interfaces/CreateEditorJSOptions.html":{},"interfaces/EditorJSAction.html":{},"components/NgxEditorJSBaseComponent.html":{},"components/NgxEditorJSComponent.html":{},"directives/NgxEditorJSDirective.html":{},"injectables/NgxEditorJSPluginService.html":{},"injectables/NgxEditorJSService.html":{},"modules/NgxEditorjsPluginsModule.html":{},"interfaces/PluginConfig.html":{},"interfaces/PluginConfig-1.html":{},"modules/PluginSimpleImageModule.html":{},"interfaces/ToolSettingsMap.html":{},"interfaces/ToolSettingsMap-1.html":{},"miscellaneous/functions.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-readme.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-readme/ngx-editorjs-changelog.html":{}}}],["toolsettings",{"_index":476,"title":{},"body":{"interfaces/BasePlugin.html":{},"interfaces/BasePlugin-1.html":{},"classes/MockEditorJS.html":{},"classes/MockPlugin.html":{},"injectables/PluginCode.html":{},"interfaces/PluginConfig.html":{},"interfaces/PluginConfig-1.html":{},"injectables/PluginHeader.html":{},"injectables/PluginImage.html":{},"injectables/PluginLink.html":{},"injectables/PluginList.html":{},"injectables/PluginMarker.html":{},"injectables/PluginParagraph.html":{},"injectables/PluginSimpleImage.html":{},"classes/TestClass.html":{},"interfaces/ToolSettingsMap.html":{},"interfaces/ToolSettingsMap-1.html":{}}}],["toolsettingsmap",{"_index":483,"title":{"interfaces/ToolSettingsMap.html":{},"interfaces/ToolSettingsMap-1.html":{}},"body":{"interfaces/BasePlugin.html":{},"interfaces/BasePlugin-1.html":{},"injectables/NgxEditorJSPluginService.html":{},"interfaces/PluginConfig.html":{},"interfaces/PluginConfig-1.html":{},"interfaces/ToolSettingsMap.html":{},"interfaces/ToolSettingsMap-1.html":{},"coverage.html":{}}}],["topnav",{"_index":419,"title":{},"body":{"interfaces/ApplicationData.html":{},"interfaces/ApplicationData-1.html":{},"interfaces/MenuGroup.html":{},"interfaces/MenuGroup-1.html":{},"interfaces/MenuItem.html":{},"interfaces/MenuItem-1.html":{}}}],["tort",{"_index":2147,"title":{},"body":{"license.html":{}}}],["touch",{"_index":1089,"title":{},"body":{"components/NgxEditorJSBaseComponent.html":{},"components/NgxEditorJSComponent.html":{}}}],["touched",{"_index":1060,"title":{},"body":{"components/NgxEditorJSBaseComponent.html":{},"components/NgxEditorJSComponent.html":{},"directives/NgxEditorJSDirective.html":{}}}],["towards",{"_index":1872,"title":{},"body":{"contributing.html":{}}}],["tree",{"_index":8,"title":{},"body":{"components/AppContainerComponent.html":{},"components/FormContainerComponent.html":{},"components/HomePageComponent.html":{},"components/NavBarComponent.html":{},"components/NgxEditorJSBaseComponent.html":{},"components/NgxEditorJSComponent.html":{},"components/NgxEditorJSDemoHomeComponent.html":{},"components/NgxEditorJSDemoInfoComponent.html":{},"components/PageContainerComponent.html":{},"components/SidebarComponent.html":{}}}],["trigger",{"_index":581,"title":{},"body":{"interfaces/CreateEditorJSOptions.html":{},"interfaces/EditorJSAction.html":{},"interfaces/EditorJSMaterialForm.html":{},"components/NgxEditorJSBaseComponent.html":{},"components/NgxEditorJSComponent.html":{}}}],["trolling",{"_index":1881,"title":{},"body":{"contributing.html":{}}}],["true",{"_index":609,"title":{},"body":{"interfaces/EditorJSConfig.html":{},"interfaces/EditorJSMaterialForm.html":{},"components/NgxEditorJSBaseComponent.html":{},"components/NgxEditorJSComponent.html":{},"interfaces/NgxEditorJSConfig.html":{},"miscellaneous/variables.html":{}}}],["two",{"_index":1232,"title":{},"body":{"directives/NgxEditorJSDirective.html":{},"contributing.html":{}}}],["type",{"_index":59,"title":{},"body":{"components/AppContainerComponent.html":{},"injectables/AppService.html":{},"injectables/AppService-1.html":{},"interfaces/ApplicationData.html":{},"interfaces/ApplicationData-1.html":{},"injectables/ApplicationQuery.html":{},"injectables/ApplicationQuery-1.html":{},"interfaces/ApplicationState.html":{},"interfaces/ApplicationState-1.html":{},"interfaces/BasePlugin.html":{},"interfaces/BasePlugin-1.html":{},"interfaces/Block.html":{},"interfaces/BlocksMap.html":{},"interfaces/ChangeMap.html":{},"classes/Changed.html":{},"interfaces/CreateEditorJSOptions.html":{},"interfaces/DemoData.html":{},"interfaces/DemoData-1.html":{},"interfaces/EditorJSAction.html":{},"interfaces/EditorJSConfig.html":{},"interfaces/EditorJSInstanceConfig.html":{},"interfaces/EditorJSMaterialForm.html":{},"interfaces/EditorMap.html":{},"interfaces/EventMap.html":{},"interfaces/EventType.html":{},"components/FormContainerComponent.html":{},"interfaces/Header.html":{},"interfaces/HeaderBlock.html":{},"components/HomePageComponent.html":{},"interfaces/Image.html":{},"interfaces/ImageBlock.html":{},"interfaces/InjectorMethodOption.html":{},"interfaces/List.html":{},"interfaces/ListBlock.html":{},"interfaces/MenuGroup.html":{},"interfaces/MenuGroup-1.html":{},"interfaces/MenuItem.html":{},"interfaces/MenuItem-1.html":{},"classes/MockEditorJS.html":{},"injectables/MockNgZone.html":{},"components/NavBarComponent.html":{},"components/NgxEditorJSBaseComponent.html":{},"components/NgxEditorJSComponent.html":{},"interfaces/NgxEditorJSConfig.html":{},"interfaces/NgxEditorJSDemo.html":{},"interfaces/NgxEditorJSDemo-1.html":{},"components/NgxEditorJSDemoInfoComponent.html":{},"directives/NgxEditorJSDirective.html":{},"injectables/NgxEditorJSEffects.html":{},"modules/NgxEditorJSModule.html":{},"injectables/NgxEditorJSPluginService.html":{},"injectables/NgxEditorJSService.html":{},"classes/NotReady.html":{},"interfaces/Page.html":{},"interfaces/PageBlock.html":{},"components/PageContainerComponent.html":{},"injectables/PagesQuery.html":{},"injectables/PagesService.html":{},"interfaces/Paragraph.html":{},"interfaces/ParagraphBlock.html":{},"classes/Ready.html":{},"interfaces/ReadyMap.html":{},"classes/SaveEnd.html":{},"classes/SaveStart.html":{},"components/SidebarComponent.html":{},"interfaces/Tag.html":{},"interfaces/TinynodeDemos.html":{},"interfaces/TinynodeDemos-1.html":{},"coverage.html":{},"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-readme.html":{}}}],["typealiases",{"_index":2169,"title":{"miscellaneous/typealiases.html":{}},"body":{}}],["typeof",{"_index":375,"title":{},"body":{"injectables/AppService.html":{},"injectables/AppService-1.html":{},"components/NgxEditorJSDemoInfoComponent.html":{},"injectables/NgxEditorJSService.html":{}}}],["types/app",{"_index":363,"title":{},"body":{"injectables/AppService.html":{},"injectables/AppService-1.html":{},"interfaces/ApplicationState.html":{},"interfaces/ApplicationState-1.html":{},"interfaces/DemoData.html":{},"interfaces/DemoData-1.html":{},"interfaces/NgxEditorJSDemo.html":{},"interfaces/NgxEditorJSDemo-1.html":{},"interfaces/NgxEditorJSDemoData.html":{},"interfaces/NgxEditorJSDemoData-1.html":{},"components/NgxEditorJSDemoInfoComponent.html":{},"interfaces/TinynodeDemos.html":{},"interfaces/TinynodeDemos-1.html":{}}}],["types/blocks",{"_index":1098,"title":{},"body":{"components/NgxEditorJSBaseComponent.html":{},"directives/NgxEditorJSDirective.html":{},"injectables/NgxEditorJSService.html":{}}}],["types/config",{"_index":1344,"title":{},"body":{"modules/NgxEditorJSModule.html":{},"injectables/NgxEditorJSService.html":{}}}],["types/editorjs",{"_index":1433,"title":{},"body":{"injectables/NgxEditorJSService.html":{}}}],["types/injector",{"_index":1345,"title":{},"body":{"modules/NgxEditorJSModule.html":{},"injectables/NgxEditorJSService.html":{}}}],["types/plugins",{"_index":1378,"title":{},"body":{"injectables/NgxEditorJSPluginService.html":{},"injectables/PluginCode.html":{},"injectables/PluginHeader.html":{},"injectables/PluginImage.html":{},"injectables/PluginLink.html":{},"injectables/PluginList.html":{},"injectables/PluginMarker.html":{},"injectables/PluginParagraph.html":{},"injectables/PluginSimpleImage.html":{}}}],["typescript",{"_index":945,"title":{},"body":{"components/HomePageComponent.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-readme.html":{}}}],["typing",{"_index":910,"title":{},"body":{"components/FormContainerComponent.html":{},"components/PageContainerComponent.html":{}}}],["ui",{"_index":2190,"title":{},"body":{"additional-documentation/tinynodes-library-docs/ngx-editorjs-readme.html":{}}}],["unacceptable",{"_index":1874,"title":{},"body":{"contributing.html":{}}}],["undefined",{"_index":376,"title":{},"body":{"injectables/AppService.html":{},"injectables/AppService-1.html":{},"components/NgxEditorJSDemoInfoComponent.html":{},"injectables/NgxEditorJSService.html":{}}}],["under",{"_index":950,"title":{},"body":{"components/HomePageComponent.html":{},"changelog.html":{}}}],["underlying",{"_index":725,"title":{},"body":{"interfaces/EditorJSMaterialForm.html":{},"components/NgxEditorJSComponent.html":{},"changelog.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-readme.html":{}}}],["underneath",{"_index":2193,"title":{},"body":{"additional-documentation/tinynodes-library-docs/ngx-editorjs-readme.html":{}}}],["unique",{"_index":729,"title":{},"body":{"interfaces/EditorJSMaterialForm.html":{}}}],["unordered",{"_index":502,"title":{},"body":{"interfaces/Block.html":{},"interfaces/Header.html":{},"interfaces/HeaderBlock.html":{},"interfaces/Image.html":{},"interfaces/ImageBlock.html":{},"interfaces/List.html":{},"interfaces/ListBlock.html":{},"interfaces/Paragraph.html":{},"interfaces/ParagraphBlock.html":{},"miscellaneous/typealiases.html":{}}}],["unsubscribe",{"_index":761,"title":{},"body":{"interfaces/EditorJSMaterialForm.html":{}}}],["until",{"_index":1778,"title":{},"body":{"changelog.html":{}}}],["unwelcome",{"_index":1878,"title":{},"body":{"contributing.html":{}}}],["up",{"_index":337,"title":{},"body":{"injectables/AppService.html":{},"injectables/AppService-1.html":{},"interfaces/EditorJSMaterialForm.html":{},"components/FormContainerComponent.html":{},"components/PageContainerComponent.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-readme/ngx-editorjs-changelog.html":{}}}],["update",{"_index":589,"title":{},"body":{"interfaces/CreateEditorJSOptions.html":{},"interfaces/EditorJSAction.html":{},"components/FormContainerComponent.html":{},"components/NgxEditorJSBaseComponent.html":{},"components/NgxEditorJSComponent.html":{},"injectables/NgxEditorJSService.html":{},"contributing.html":{}}}],["update(undefined",{"_index":1425,"title":{},"body":{"injectables/NgxEditorJSService.html":{}}}],["updated",{"_index":327,"title":{},"body":{"injectables/AppService.html":{},"injectables/AppService-1.html":{},"components/FormContainerComponent.html":{},"components/NgxEditorJSBaseComponent.html":{},"components/NgxEditorJSComponent.html":{},"directives/NgxEditorJSDirective.html":{},"injectables/PagesService.html":{},"changelog.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-readme/ngx-editorjs-changelog.html":{}}}],["updateeditor",{"_index":590,"title":{},"body":{"interfaces/CreateEditorJSOptions.html":{},"interfaces/EditorJSAction.html":{},"miscellaneous/enumerations.html":{}}}],["updates",{"_index":1424,"title":{},"body":{"injectables/NgxEditorJSService.html":{},"injectables/PagesService.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-plugins-readme/ngx-editorjs-plugins-changelog.html":{}}}],["upload",{"_index":2259,"title":{},"body":{"additional-documentation/tinynodes-library-docs/ngx-editorjs-plugins-readme.html":{}}}],["upsert",{"_index":1597,"title":{},"body":{"injectables/PagesService.html":{}}}],["upsert(page",{"_index":1612,"title":{},"body":{"injectables/PagesService.html":{}}}],["url",{"_index":413,"title":{},"body":{"interfaces/ApplicationData.html":{},"interfaces/ApplicationData-1.html":{},"interfaces/Block.html":{},"components/FormContainerComponent.html":{},"interfaces/Header.html":{},"interfaces/HeaderBlock.html":{},"interfaces/Image.html":{},"interfaces/ImageBlock.html":{},"interfaces/List.html":{},"interfaces/ListBlock.html":{},"interfaces/MenuGroup.html":{},"interfaces/MenuGroup-1.html":{},"interfaces/MenuItem.html":{},"interfaces/MenuItem-1.html":{},"components/PageContainerComponent.html":{},"interfaces/Paragraph.html":{},"interfaces/ParagraphBlock.html":{}}}],["usage",{"_index":1190,"title":{},"body":{"components/NgxEditorJSDemoInfoComponent.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-readme.html":{}}}],["use",{"_index":1167,"title":{},"body":{"components/NgxEditorJSDemoHomeComponent.html":{},"components/NgxEditorJSDemoInfoComponent.html":{},"directives/NgxEditorJSDirective.html":{},"modules/NgxEditorJSModule.html":{},"contributing.html":{},"index.html":{},"license.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-readme.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-readme/ngx-editorjs-changelog.html":{}}}],["used",{"_index":410,"title":{},"body":{"interfaces/ApplicationData.html":{},"interfaces/ApplicationData-1.html":{},"modules/ApplicationDataModule.html":{},"interfaces/CreateEditorJSOptions.html":{},"interfaces/EditorJSAction.html":{},"interfaces/MenuGroup.html":{},"interfaces/MenuGroup-1.html":{},"interfaces/MenuItem.html":{},"interfaces/MenuItem-1.html":{},"components/NgxEditorJSBaseComponent.html":{},"components/NgxEditorJSComponent.html":{},"components/NgxEditorJSDemoHomeComponent.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-readme.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-readme/ngx-editorjs-changelog.html":{}}}],["useexisting",{"_index":675,"title":{},"body":{"interfaces/EditorJSMaterialForm.html":{},"components/NgxEditorJSBaseComponent.html":{},"miscellaneous/variables.html":{}}}],["usefactory",{"_index":1349,"title":{},"body":{"modules/NgxEditorJSModule.html":{},"modules/NgxEditorjsDemoModule.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-readme.html":{}}}],["useful",{"_index":1786,"title":{},"body":{"changelog.html":{},"contributing.html":{}}}],["user",{"_index":1361,"title":{},"body":{"injectables/NgxEditorJSPluginService.html":{}}}],["userplugin",{"_index":2235,"title":{},"body":{"additional-documentation/tinynodes-library-docs/ngx-editorjs-readme/ngx-editorjs-changelog.html":{}}}],["userplugins",{"_index":493,"title":{},"body":{"interfaces/BasePlugin.html":{},"interfaces/BasePlugin-1.html":{},"injectables/NgxEditorJSPluginService.html":{},"modules/NgxEditorjsDemoModule.html":{},"interfaces/PluginConfig.html":{},"interfaces/PluginConfig-1.html":{},"interfaces/ToolSettingsMap.html":{},"interfaces/ToolSettingsMap-1.html":{},"coverage.html":{},"miscellaneous/variables.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-readme.html":{}}}],["uses",{"_index":2230,"title":{},"body":{"additional-documentation/tinynodes-library-docs/ngx-editorjs-readme/ngx-editorjs-changelog.html":{}}}],["usevalue",{"_index":1348,"title":{},"body":{"modules/NgxEditorJSModule.html":{}}}],["using",{"_index":677,"title":{},"body":{"interfaces/EditorJSMaterialForm.html":{},"components/NgxEditorJSComponent.html":{},"changelog.html":{},"contributing.html":{},"index.html":{}}}],["value",{"_index":63,"title":{},"body":{"components/AppContainerComponent.html":{},"injectables/AppService.html":{},"classes/Changed.html":{},"interfaces/EditorJSMaterialForm.html":{},"components/FormContainerComponent.html":{},"injectables/MockNgZone.html":{},"components/NavBarComponent.html":{},"components/NgxEditorJSBaseComponent.html":{},"components/NgxEditorJSComponent.html":{},"components/NgxEditorJSDemoInfoComponent.html":{},"directives/NgxEditorJSDirective.html":{},"injectables/NgxEditorJSEffects.html":{},"injectables/NgxEditorJSPluginService.html":{},"injectables/NgxEditorJSService.html":{},"classes/NotReady.html":{},"components/PageContainerComponent.html":{},"classes/Ready.html":{},"classes/SaveEnd.html":{},"classes/SaveStart.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/variables.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-readme.html":{}}}],["value(value",{"_index":696,"title":{},"body":{"interfaces/EditorJSMaterialForm.html":{}}}],["values",{"_index":537,"title":{},"body":{"interfaces/BlocksMap.html":{},"interfaces/ChangeMap.html":{},"interfaces/EditorJSInstanceConfig.html":{},"interfaces/EditorMap.html":{},"interfaces/EventMap.html":{},"interfaces/EventType.html":{},"components/FormContainerComponent.html":{},"interfaces/InjectorMethodOption.html":{},"components/NgxEditorJSBaseComponent.html":{},"components/NgxEditorJSComponent.html":{},"injectables/NgxEditorJSService.html":{},"interfaces/ReadyMap.html":{},"miscellaneous/variables.html":{}}}],["var",{"_index":197,"title":{},"body":{"components/AppContainerComponent.html":{},"components/FormContainerComponent.html":{},"components/HomePageComponent.html":{},"components/NavBarComponent.html":{},"components/NgxEditorJSBaseComponent.html":{},"components/NgxEditorJSComponent.html":{},"components/NgxEditorJSDemoHomeComponent.html":{},"components/NgxEditorJSDemoInfoComponent.html":{},"components/PageContainerComponent.html":{},"components/SidebarComponent.html":{}}}],["variable",{"_index":1985,"title":{},"body":{"coverage.html":{}}}],["variables",{"_index":1807,"title":{"miscellaneous/variables.html":{}},"body":{"contributing.html":{},"miscellaneous/variables.html":{}}}],["version",{"_index":968,"title":{},"body":{"classes/MockEditorJS.html":{},"classes/MockPlugin.html":{},"directives/NgxEditorJSDirective.html":{},"injectables/NgxEditorJSEffects.html":{},"classes/TestClass.html":{},"changelog.html":{},"contributing.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-readme.html":{}}}],["versioning",{"_index":1816,"title":{},"body":{"contributing.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-readme/ngx-editorjs-changelog.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-plugins-readme/ngx-editorjs-plugins-changelog.html":{}}}],["vertical",{"_index":187,"title":{},"body":{"components/AppContainerComponent.html":{},"components/NavBarComponent.html":{}}}],["via",{"_index":492,"title":{},"body":{"interfaces/BasePlugin.html":{},"interfaces/BasePlugin-1.html":{},"directives/NgxEditorJSDirective.html":{},"injectables/NgxEditorJSService.html":{},"modules/NgxEditorjsNgrxModule.html":{},"modules/NgxTinynodesCoreModule.html":{},"injectables/PagesService.html":{},"interfaces/PluginConfig.html":{},"interfaces/PluginConfig-1.html":{},"interfaces/ToolSettingsMap.html":{},"interfaces/ToolSettingsMap-1.html":{},"contributing.html":{},"todo.html":{},"miscellaneous/variables.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-readme.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-readme/ngx-editorjs-changelog.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-plugins-readme.html":{}}}],["view",{"_index":71,"title":{},"body":{"components/AppContainerComponent.html":{},"modules/AppModule.html":{},"components/NgxEditorJSDemoInfoComponent.html":{}}}],["viewchild",{"_index":116,"title":{},"body":{"components/AppContainerComponent.html":{},"interfaces/EditorJSMaterialForm.html":{},"components/NgxEditorJSComponent.html":{}}}],["viewchild(matsidenav",{"_index":100,"title":{},"body":{"components/AppContainerComponent.html":{}}}],["viewchild(ngxeditorjsdirective",{"_index":726,"title":{},"body":{"interfaces/EditorJSMaterialForm.html":{},"components/NgxEditorJSComponent.html":{}}}],["viewpoints",{"_index":1862,"title":{},"body":{"contributing.html":{}}}],["visit",{"_index":257,"title":{},"body":{"modules/AppModule.html":{},"components/HomePageComponent.html":{},"index.html":{}}}],["void",{"_index":75,"title":{},"body":{"components/AppContainerComponent.html":{},"injectables/AppService.html":{},"injectables/AppService-1.html":{},"interfaces/EditorJSInstanceConfig.html":{},"interfaces/EditorJSMaterialForm.html":{},"components/FormContainerComponent.html":{},"interfaces/InjectorMethodOption.html":{},"classes/MockEditorJS.html":{},"injectables/MockNgZone.html":{},"classes/MockPlugin.html":{},"components/NgxEditorJSBaseComponent.html":{},"components/NgxEditorJSComponent.html":{},"components/NgxEditorJSDemoInfoComponent.html":{},"directives/NgxEditorJSDirective.html":{},"injectables/NgxEditorJSPluginService.html":{},"injectables/NgxEditorJSService.html":{},"components/PageContainerComponent.html":{},"injectables/PagesService.html":{},"classes/TestClass.html":{}}}],["wait",{"_index":1237,"title":{},"body":{"directives/NgxEditorJSDirective.html":{}}}],["want",{"_index":1453,"title":{},"body":{"injectables/NgxEditorJSService.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-readme.html":{}}}],["warning",{"_index":1509,"title":{},"body":{"modules/NgxEditorjsNgrxModule.html":{},"modules/PageStoreModule.html":{}}}],["warranties",{"_index":2133,"title":{},"body":{"license.html":{}}}],["warranty",{"_index":2128,"title":{},"body":{"license.html":{}}}],["way",{"_index":1166,"title":{},"body":{"components/NgxEditorJSDemoHomeComponent.html":{},"directives/NgxEditorJSDirective.html":{},"modules/NgxEditorjsPluginsModule.html":{},"injectables/PagesService.html":{}}}],["web",{"_index":947,"title":{},"body":{"components/HomePageComponent.html":{}}}],["wednesday",{"_index":1741,"title":{},"body":{"changelog.html":{}}}],["welcome",{"_index":943,"title":{},"body":{"components/HomePageComponent.html":{}}}],["welcoming",{"_index":1829,"title":{},"body":{"contributing.html":{}}}],["whether",{"_index":2145,"title":{},"body":{"license.html":{}}}],["white",{"_index":164,"title":{},"body":{"components/AppContainerComponent.html":{},"components/NavBarComponent.html":{}}}],["width",{"_index":131,"title":{},"body":{"components/AppContainerComponent.html":{},"components/FormContainerComponent.html":{},"components/NavBarComponent.html":{},"components/NgxEditorJSComponent.html":{},"components/NgxEditorJSDemoInfoComponent.html":{},"components/PageContainerComponent.html":{}}}],["wiki",{"_index":1911,"title":{},"body":{"contributing.html":{}}}],["wish",{"_index":1792,"title":{},"body":{"contributing.html":{}}}],["withbackground",{"_index":520,"title":{},"body":{"interfaces/Block.html":{},"interfaces/Header.html":{},"interfaces/HeaderBlock.html":{},"interfaces/Image.html":{},"interfaces/ImageBlock.html":{},"interfaces/List.html":{},"interfaces/ListBlock.html":{},"interfaces/Paragraph.html":{},"interfaces/ParagraphBlock.html":{}}}],["withborder",{"_index":518,"title":{},"body":{"interfaces/Block.html":{},"interfaces/Header.html":{},"interfaces/HeaderBlock.html":{},"interfaces/Image.html":{},"interfaces/ImageBlock.html":{},"interfaces/List.html":{},"interfaces/ListBlock.html":{},"interfaces/Paragraph.html":{},"interfaces/ParagraphBlock.html":{}}}],["within",{"_index":1427,"title":{},"body":{"injectables/NgxEditorJSService.html":{},"contributing.html":{},"index.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-readme.html":{}}}],["withlatestfrom",{"_index":1301,"title":{},"body":{"injectables/NgxEditorJSEffects.html":{}}}],["without",{"_index":679,"title":{},"body":{"interfaces/EditorJSMaterialForm.html":{},"components/NgxEditorJSComponent.html":{},"changelog.html":{},"contributing.html":{},"license.html":{}}}],["won't",{"_index":611,"title":{},"body":{"interfaces/EditorJSConfig.html":{},"interfaces/NgxEditorJSConfig.html":{}}}],["work",{"_index":1783,"title":{},"body":{"changelog.html":{}}}],["write",{"_index":1084,"title":{},"body":{"components/NgxEditorJSBaseComponent.html":{},"components/NgxEditorJSComponent.html":{}}}],["writevalue",{"_index":1040,"title":{},"body":{"components/NgxEditorJSBaseComponent.html":{},"components/NgxEditorJSComponent.html":{}}}],["writevalue(blocks",{"_index":1082,"title":{},"body":{"components/NgxEditorJSBaseComponent.html":{},"components/NgxEditorJSComponent.html":{}}}],["yes",{"_index":85,"title":{},"body":{"components/AppContainerComponent.html":{},"injectables/AppService.html":{},"directives/NgxEditorJSDirective.html":{},"modules/NgxEditorJSModule.html":{},"injectables/PagesService.html":{},"miscellaneous/functions.html":{}}}],["zone",{"_index":991,"title":{},"body":{"injectables/MockNgZone.html":{},"coverage.html":{}}}],["zone.js",{"_index":2066,"title":{},"body":{"dependencies.html":{}}}],["zoom",{"_index":251,"title":{},"body":{"modules/AppModule.html":{},"modules/ApplicationDataModule.html":{},"modules/NgxEditorJSModule.html":{},"modules/NgxEditorjsDemoModule.html":{},"modules/NgxEditorjsNgrxModule.html":{},"modules/NgxEditorjsPluginsModule.html":{},"modules/NgxTinynodesCoreModule.html":{},"modules/PageStoreModule.html":{},"modules/PluginCodeModule.html":{},"modules/PluginHeaderModule.html":{},"modules/PluginImageModule.html":{},"modules/PluginLinkModule.html":{},"modules/PluginListModule.html":{},"modules/PluginMarkerModule.html":{},"modules/PluginParagraphModule.html":{},"modules/PluginSimpleImageModule.html":{},"overview.html":{}}}]],"pipeline":["stemmer"]},
    "store": {"components/AppContainerComponent.html":{"url":"components/AppContainerComponent.html","title":"component - AppContainerComponent","body":"\n                   \n\n\n\n\n\n  Components\n  AppContainerComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    apps/ngx-tinynodes/src/app/containers/app/app.component.ts\n\n\n    \n        Description\n    \n    \n        The main application component that provides the root container\n\n    \n\n\n    \n        Implements\n    \n    \n                    AfterContentInit\n                    OnDestroy\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                tinynodes-root\n            \n\n            \n                styleUrls\n                app.component.scss\n            \n\n\n\n            \n                templateUrl\n                app.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                mobileView\n                            \n                            \n                                    Private\n                                    Readonly\n                                onDestroy$\n                            \n                            \n                                    Private\n                                    Readonly\n                                sidebarHidden$\n                            \n                            \n                                sidenav\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                matchView\n                            \n                            \n                                ngAfterContentInit\n                            \n                            \n                                ngOnDestroy\n                            \n                            \n                                    Public\n                                toggleSidebar\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                pageTitle\n                            \n                        \n                    \n                \n\n\n\n\n                    \n                        \n                            Accessors\n                        \n                    \n                    \n                        \n                            \n                                \n                                    sidebarHidden\n                                \n                                \n                                    mainMenu\n                                \n                                \n                                    projectsMenu\n                                \n                                \n                                    openSourceMenu\n                                \n                            \n                        \n                    \n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(app: AppService, matcher: MediaMatcher, render: Renderer2)\n                    \n                \n                        \n                            \n                                Defined in apps/ngx-tinynodes/src/app/containers/app/app.component.ts:41\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        app\n                                                  \n                                                        \n                                                                        AppService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        matcher\n                                                  \n                                                        \n                                                                    MediaMatcher\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        render\n                                                  \n                                                        \n                                                                        Renderer2\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        pageTitle\n                    \n                \n                \n                    \n                        Default value : 'Tinynodes Angular Demos'\n                    \n                \n                        \n                            \n                                    Defined in apps/ngx-tinynodes/src/app/containers/app/app.component.ts:21\n                            \n                        \n                \n                    \n                        The page title\n\n                    \n                \n            \n        \n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Private\n                            matchView\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    matchView(event: any)\n                \n            \n\n\n            \n                \n                    Defined in apps/ngx-tinynodes/src/app/containers/app/app.component.ts:67\n                \n            \n\n\n            \n                \n                    View matcher for mobile\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    event\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngAfterContentInit\n                        \n                        \n                    \n                \n            \n            \n                \nngAfterContentInit()\n                \n            \n\n\n            \n                \n                    Defined in apps/ngx-tinynodes/src/app/containers/app/app.component.ts:82\n                \n            \n\n\n            \n                \n                    Component initialized\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngOnDestroy\n                        \n                        \n                    \n                \n            \n            \n                \nngOnDestroy()\n                \n            \n\n\n            \n                \n                    Defined in apps/ngx-tinynodes/src/app/containers/app/app.component.ts:94\n                \n            \n\n\n            \n                \n                    Component destroyed\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            toggleSidebar\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    toggleSidebar(value?: boolean)\n                \n            \n\n\n            \n                \n                    Defined in apps/ngx-tinynodes/src/app/containers/app/app.component.ts:75\n                \n            \n\n\n            \n                \n                    Toggle sidebar\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    value\n                                    \n                                                boolean\n                                    \n\n                                    \n                                        Yes\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            mobileView\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         MediaQueryList\n\n                        \n                    \n                        \n                            \n                                    Defined in apps/ngx-tinynodes/src/app/containers/app/app.component.ts:41\n                            \n                        \n\n                \n                    \n                        If it's a mobile view, hide the menu\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                                Readonly\n                            onDestroy$\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : new Subject()\n                        \n                    \n                        \n                            \n                                    Defined in apps/ngx-tinynodes/src/app/containers/app/app.component.ts:31\n                            \n                        \n\n                \n                    \n                        When the component is destroyed\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                                Readonly\n                            sidebarHidden$\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : new BehaviorSubject(false)\n                        \n                    \n                        \n                            \n                                    Defined in apps/ngx-tinynodes/src/app/containers/app/app.component.ts:36\n                            \n                        \n\n                \n                    \n                        Stores the current sidebar state\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            sidenav\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     MatSidenav\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @ViewChild(MatSidenav)\n                            \n                        \n                    \n                        \n                            \n                                    Defined in apps/ngx-tinynodes/src/app/containers/app/app.component.ts:26\n                            \n                        \n\n                \n                    \n                        The Material sidebar\n\n                    \n                \n\n            \n        \n\n\n    \n    \n        Accessors\n    \n        \n            \n                \n                    \n                        \n                        sidebarHidden\n                    \n                \n\n                \n                    \n                        getsidebarHidden()\n                    \n                \n                            \n                                \n                                    Defined in apps/ngx-tinynodes/src/app/containers/app/app.component.ts:59\n                                \n                            \n                    \n                        \n                                Sidebar State\n\n\n                                \n                                    Returns :     Observable\n\n                                \n                        \n                    \n\n            \n        \n        \n            \n                \n                    \n                        \n                        mainMenu\n                    \n                \n\n                \n                    \n                        getmainMenu()\n                    \n                \n                            \n                                \n                                    Defined in apps/ngx-tinynodes/src/app/containers/app/app.component.ts:103\n                                \n                            \n                    \n                        \n                                Get the application main menu\n\n\n                        \n                    \n\n            \n        \n        \n            \n                \n                    \n                        \n                        projectsMenu\n                    \n                \n\n                \n                    \n                        getprojectsMenu()\n                    \n                \n                            \n                                \n                                    Defined in apps/ngx-tinynodes/src/app/containers/app/app.component.ts:110\n                                \n                            \n                    \n                        \n                                Get the projects menu\n\n\n                        \n                    \n\n            \n        \n        \n            \n                \n                    \n                        \n                        openSourceMenu\n                    \n                \n\n                \n                    \n                        getopenSourceMenu()\n                    \n                \n                            \n                                \n                                    Defined in apps/ngx-tinynodes/src/app/containers/app/app.component.ts:117\n                                \n                            \n                    \n                        \n                                Get the open source menu\n\n\n                        \n                    \n\n            \n        \n\n\n\n\n    \n        import { AfterContentInit, Component, Input, OnDestroy, ViewChild, Renderer2 } from '@angular/core';\nimport { MatSidenav } from '@angular/material';\nimport { AppService } from '@tinynodes/ngx-tinynodes-core';\nimport { BehaviorSubject, Observable, Subject } from 'rxjs';\nimport { distinctUntilChanged, takeUntil } from 'rxjs/operators';\nimport { MediaMatcher } from '@angular/cdk/layout';\n\n/**\n * The main application component that provides the root container\n */\n@Component({\n  selector: 'tinynodes-root',\n  templateUrl: 'app.component.html',\n  styleUrls: ['app.component.scss']\n})\nexport class AppContainerComponent implements AfterContentInit, OnDestroy {\n  /**\n   * The page title\n   */\n  @Input()\n  public pageTitle = 'Tinynodes Angular Demos';\n\n  /**\n   * The Material sidebar\n   */\n  @ViewChild(MatSidenav) sidenav: MatSidenav;\n\n  /**\n   * When the component is destroyed\n   */\n  private readonly onDestroy$ = new Subject();\n\n  /**\n   * Stores the current sidebar state\n   */\n  private readonly sidebarHidden$ = new BehaviorSubject(false);\n\n  /**\n   * If it's a mobile view, hide the menu\n   */\n  private mobileView: MediaQueryList;\n\n  constructor(\n    private readonly app: AppService,\n    private readonly matcher: MediaMatcher,\n    private readonly render: Renderer2\n  ) {\n    this.mobileView = this.matcher.matchMedia('(max-width: 768px)');\n    this.mobileView.addListener(this.matchView.bind(this));\n\n    this.app.hidden.pipe(takeUntil(this.onDestroy$)).subscribe(hidden => {\n      this.sidebarHidden$.next(hidden);\n    });\n  }\n\n  /**\n   * Sidebar State\n   */\n  public get sidebarHidden(): Observable {\n    return this.sidebarHidden$.asObservable();\n  }\n\n  /**\n   * View matcher for mobile\n   * @param event\n   */\n  private matchView(event: any) {\n    this.toggleSidebar(!event.matches);\n  }\n\n  /**\n   * Toggle sidebar\n   * @param value\n   */\n  public toggleSidebar(value?: boolean) {\n    this.app.toggleSidebar(value);\n  }\n\n  /**\n   * Component initialized\n   */\n  ngAfterContentInit() {\n    this.sidebarHidden$\n      .pipe(\n        distinctUntilChanged(),\n        takeUntil(this.onDestroy$)\n      )\n      .subscribe(hidden => (hidden ? this.sidenav.close() : this.sidenav.open()));\n  }\n\n  /**\n   * Component destroyed\n   */\n  ngOnDestroy() {\n    this.mobileView.removeListener(this.matchView);\n    this.onDestroy$.next(true);\n    this.onDestroy$.complete();\n  }\n\n  /**\n   * Get the application main menu\n   */\n  public get mainMenu() {\n    return this.app.getMenu('main-links');\n  }\n\n  /**\n   * Get the projects menu\n   */\n  public get projectsMenu() {\n    return this.app.getMenu('tinynode-projects');\n  }\n\n  /**\n   * Get the open source menu\n   */\n  public get openSourceMenu() {\n    return this.app.getMenu('other-projects');\n  }\n}\n\n    \n\n    \n        \n\n  \n    \n  \n  \n    \n      \n    \n  \n\n\n    \n\n    \n                \n                    app.component.scss\n                \n                mat-sidenav-container,\nmat-sidenav-content,\nmat-sidenav {\n  height: 100vh;\n}\n\nmat-sidenav {\n  width: 250px;\n}\n\na {\n  text-decoration: none;\n  color: white;\n}\n\na:hover,\na:active {\n  color: lightgray;\n}\n\n.navigation-items {\n  list-style: none;\n  padding: 0;\n  margin: 0;\n  cursor: pointer;\n}\n\n.icon {\n  display: inline-block;\n  height: 30px;\n  margin: 0 auto;\n  padding-right: 5px;\n  text-align: center;\n  vertical-align: middle;\n  width: 15%;\n}\n\n.label {\n  display: inline-block;\n  line-height: 30px;\n  margin: 0;\n  width: 85%;\n}\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                          '\n    var COMPONENTS = [{'name': 'AppContainerComponent', 'selector': 'tinynodes-root'},{'name': 'FormContainerComponent', 'selector': 'ngx-form-container'},{'name': 'HomePageComponent', 'selector': 'tinynodes-home-page'},{'name': 'NavBarComponent', 'selector': 'tinynodes-nav-bar'},{'name': 'NgxEditorJSBaseComponent', 'selector': ''},{'name': 'NgxEditorJSComponent', 'selector': 'ngx-editorjs'},{'name': 'NgxEditorJSDemoHomeComponent', 'selector': 'ngx-editorjs-demo-home'},{'name': 'NgxEditorJSDemoInfoComponent', 'selector': 'ngx-editorjs-demo-info'},{'name': 'NgxEditorJSDemoTagComponent', 'selector': 'ngx-editorjs-tag-component'},{'name': 'NgxEditorJSMatFieldComponent', 'selector': 'ngx-editorjs-mat-field'},{'name': 'PageContainerComponent', 'selector': 'ngx-page-container'},{'name': 'SidebarComponent', 'selector': 'tinynodes-sidebar'}];\n    var DIRECTIVES = [{'name': 'NgxEditorJSDirective', 'selector': '[ngxEditorJS]'}];\n    var ACTUAL_COMPONENT = {'name': 'AppContainerComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/AppModule.html":{"url":"modules/AppModule.html","title":"module - AppModule","body":"\n                   \n\n\n\n\n    Modules\n    AppModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_AppModule\n\n\n\ncluster_AppModule_declarations\n\n\n\ncluster_AppModule_imports\n\n\n\ncluster_AppModule_bootstrap\n\n\n\n\nAppContainerComponent\n\nAppContainerComponent\n\n\n\nAppModule\n\nAppModule\n\nAppModule -->\n\nAppContainerComponent->AppModule\n\n\n\n\n\nHomePageComponent\n\nHomePageComponent\n\nAppModule -->\n\nHomePageComponent->AppModule\n\n\n\n\n\nNavBarComponent\n\nNavBarComponent\n\nAppModule -->\n\nNavBarComponent->AppModule\n\n\n\n\n\nSidebarComponent\n\nSidebarComponent\n\nAppModule -->\n\nSidebarComponent->AppModule\n\n\n\n\n\nAppContainerComponent \n\nAppContainerComponent \n\nAppContainerComponent  -->\n\nAppModule->AppContainerComponent \n\n\n\n\n\nAppRoutingModule\n\nAppRoutingModule\n\nAppModule -->\n\nAppRoutingModule->AppModule\n\n\n\n\n\nApplicationDataModule\n\nApplicationDataModule\n\nAppModule -->\n\nApplicationDataModule->AppModule\n\n\n\n\n\nMaterialModule\n\nMaterialModule\n\nAppModule -->\n\nMaterialModule->AppModule\n\n\n\n\n\nNgxEditorJSModule\n\nNgxEditorJSModule\n\nAppModule -->\n\nNgxEditorJSModule->AppModule\n\n\n\n\n\nNgxEditorjsDemoModule\n\nNgxEditorjsDemoModule\n\nAppModule -->\n\nNgxEditorjsDemoModule->AppModule\n\n\n\n\n\nNgxTinynodesCoreModule\n\nNgxTinynodesCoreModule\n\nAppModule -->\n\nNgxTinynodesCoreModule->AppModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            apps/ngx-tinynodes/src/app/app.module.ts\n        \n\n\n        \n            Description\n        \n        \n            The main ngx-tinynodes module that builds the core single page application.\nTo view the application visit the demo\n\n        \n\n\n        \n            \n                \n                    Declarations\n                    \n                        \n                            AppContainerComponent\n                        \n                        \n                            HomePageComponent\n                        \n                        \n                            NavBarComponent\n                        \n                        \n                            SidebarComponent\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            AppRoutingModule\n                        \n                        \n                            ApplicationDataModule\n                        \n                        \n                            MaterialModule\n                        \n                        \n                            NgxEditorJSModule\n                        \n                        \n                            NgxEditorjsDemoModule\n                        \n                        \n                            NgxTinynodesCoreModule\n                        \n                    \n                \n                \n                    Bootstrap\n                    \n                        \n                            AppContainerComponent\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { HttpClient, HttpClientModule } from '@angular/common/http';\nimport { NgModule } from '@angular/core';\nimport { FlexLayoutModule } from '@angular/flex-layout';\nimport { BrowserModule } from '@angular/platform-browser';\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\nimport { AkitaNgRouterStoreModule } from '@datorama/akita-ng-router-store';\nimport { AkitaNgDevtools } from '@datorama/akita-ngdevtools';\nimport { NgxEditorJSModule } from '@tinynodes/ngx-editorjs';\nimport { NgxEditorjsDemoModule } from '@tinynodes/ngx-editorjs-demo';\nimport { MarkdownModule } from 'ngx-markdown';\nimport { environment } from '../environments/environment';\nimport { AppRoutingModule } from './app-routing.module';\nimport { AppContainerComponent } from './containers/app/app.component';\nimport { NavBarComponent } from './components/nav-bar/nav-bar.component';\nimport { SidebarComponent } from './components/sidebar-component/sidebar.component';\nimport { MaterialModule } from './material.module';\nimport { HomePageComponent } from './pages/home/home-page.component';\nimport { MatButtonModule } from '@angular/material';\nimport { ApplicationDataModule, NgxTinynodesCoreModule } from '@tinynodes/ngx-tinynodes-core';\nimport { LayoutModule } from '@angular/cdk/layout';\n\n/**\n * The main `ngx-tinynodes` module that builds the core single page application.\n * To view the application visit [the demo](https://tinynodes-ngx.firebaseapp.com/)\n */\n@NgModule({\n  declarations: [AppContainerComponent, NavBarComponent, SidebarComponent, HomePageComponent],\n  imports: [\n    BrowserModule,\n    LayoutModule,\n    HttpClientModule,\n    BrowserAnimationsModule,\n    MaterialModule,\n    FlexLayoutModule,\n    ApplicationDataModule,\n    AppRoutingModule,\n    NgxTinynodesCoreModule,\n    NgxEditorJSModule.forRoot(),\n    NgxEditorjsDemoModule,\n    MarkdownModule.forRoot({ loader: HttpClient }),\n    environment.production ? [] : [AkitaNgDevtools.forRoot(), AkitaNgRouterStoreModule.forRoot()]\n  ],\n  bootstrap: [AppContainerComponent]\n})\nexport class AppModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/AppRoutingModule.html":{"url":"modules/AppRoutingModule.html","title":"module - AppRoutingModule","body":"\n                   \n\n\n\n\n    Modules\n    AppRoutingModule\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            apps/ngx-tinynodes/src/app/app-routing.module.ts\n        \n\n\n        \n            Description\n        \n        \n            The App routing module provides the base roots of the application\n\n        \n\n\n        \n            \n            \n        \n\n\n    \n\n\n    \n        import { Route, RouterModule } from '@angular/router';\nimport { NgModule } from '@angular/core';\nimport { HomePageComponent } from './pages/home/home-page.component';\n\n/**\n * The main application routes\n */\nexport const appRoutes: Route[] = [\n  {\n    path: '',\n    redirectTo: 'home',\n    pathMatch: 'full'\n  },\n  {\n    path: 'home',\n    component: HomePageComponent\n  }\n];\n\n/**\n * The App routing module provides the base roots of the application\n */\n@NgModule({\n  imports: [RouterModule.forRoot(appRoutes)],\n  exports: [RouterModule]\n})\nexport class AppRoutingModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/AppService.html":{"url":"injectables/AppService.html","title":"injectable - AppService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  AppService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            libs/ngx-tinynodes-core/src/lib/stores/app/application.service.ts\n        \n\n            \n                Description\n            \n            \n                The main application service, this loads the initial data and then provides\nit to the store, from here the main state can be updated and queried.\n\n            \n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                getDemoData\n                            \n                            \n                                    Public\n                                getMenu\n                            \n                            \n                                    Public\n                                toggleSidebar\n                            \n                        \n                    \n                \n\n\n\n\n\n                    \n                        \n                            Accessors\n                        \n                    \n                    \n                        \n                            \n                                \n                                    hidden\n                                \n                            \n                        \n                    \n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(query: ApplicationQuery, store: ApplicationStore, http: HttpClient)\n                    \n                \n                        \n                            \n                                Defined in libs/ngx-tinynodes-core/src/lib/stores/app/application.service.ts:15\n                            \n                        \n\n                \n                    \n                            Sets up the providers for service methods\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        query\n                                                  \n                                                        \n                                                                        ApplicationQuery\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                The application query provider\n\n                                                        \n                                                \n                                                \n                                                        store\n                                                  \n                                                        \n                                                                        ApplicationStore\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                The application store provider\n\n                                                        \n                                                \n                                                \n                                                        http\n                                                  \n                                                        \n                                                                        HttpClient\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                The HTTP client provider\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            getDemoData\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    getDemoData(demoName: string)\n                \n            \n\n\n            \n                \n                    Defined in libs/ngx-tinynodes-core/src/lib/stores/app/application.service.ts:52\n                \n            \n\n            \n                \n                    Type parameters :\n                    \n                        T\n                    \n                \n            \n\n            \n                \n                    Returns the demo data for a specific demo \n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    demoName\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        The name of the demo data to load\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Observable\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            getMenu\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    getMenu(key: string)\n                \n            \n\n\n            \n                \n                    Defined in libs/ngx-tinynodes-core/src/lib/stores/app/application.service.ts:65\n                \n            \n\n            \n                \n                    Type parameters :\n                    \n                        T\n                    \n                \n            \n\n            \n                \n                    Gets a {MenuGroup} from the men data\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    key\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        The key of the menu to load\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Observable>\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            toggleSidebar\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    toggleSidebar(value?: boolean)\n                \n            \n\n\n            \n                \n                    Defined in libs/ngx-tinynodes-core/src/lib/stores/app/application.service.ts:41\n                \n            \n\n\n            \n                \n                    Toggles the sidebar state\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    value\n                                    \n                                                boolean\n                                    \n\n                                    \n                                        Yes\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n            \n    \n        Accessors\n    \n        \n            \n                \n                    \n                        \n                        hidden\n                    \n                \n\n                \n                    \n                        gethidden()\n                    \n                \n                            \n                                \n                                    Defined in libs/ngx-tinynodes-core/src/lib/stores/app/application.service.ts:34\n                                \n                            \n                    \n                        \n                                Returns if the side menu hidden state is set\n\n\n                                \n                                    Returns :     Observable\n\n                                \n                        \n                    \n\n            \n        \n\n    \n\n\n    \n        import { HttpClient } from '@angular/common/http';\nimport { Injectable } from '@angular/core';\nimport { Observable } from 'rxjs';\nimport { distinctUntilChanged, filter, map } from 'rxjs/operators';\nimport { ApplicationData, MenuGroup } from '../../types/app';\nimport { ApplicationStateKeys, DemoData } from './application.model';\nimport { ApplicationQuery } from './application.query';\nimport { ApplicationStore } from './application.store';\n\n/**\n * The main application service, this loads the initial data and then provides\n * it to the store, from here the main state can be updated and queried.\n */\n@Injectable()\nexport class AppService {\n  /**\n   * Sets up the providers for service methods\n   * @param query The application query provider\n   * @param store The application store provider\n   * @param http  The HTTP client provider\n   */\n  constructor(\n    private readonly query: ApplicationQuery,\n    private readonly store: ApplicationStore,\n    private readonly http: HttpClient\n  ) {\n    // Load the application data\n    this.http.get('/assets/app-data.json').subscribe((appData: ApplicationData) => this.store.update(appData));\n  }\n\n  /**\n   * Returns if the side menu hidden state is set\n   */\n  get hidden(): Observable {\n    return this.query.select(ApplicationStateKeys.Hidden);\n  }\n\n  /**\n   * Toggles the sidebar state\n   */\n  public toggleSidebar(value?: boolean) {\n    this.store.update({\n      [ApplicationStateKeys.Hidden]:\n        typeof value !== 'undefined' ? value : !this.store._value()[ApplicationStateKeys.Hidden]\n    });\n  }\n\n  /**\n   * Returns the demo data for a specific demo \n   * @param demoName The name of the demo data to load\n   */\n  public getDemoData(demoName: string): Observable {\n    return this.query.select(ApplicationStateKeys.DemoData).pipe(\n      filter((data: DemoData[]) => typeof data !== 'undefined' && (data && data.length > 0)),\n      map((demoData: DemoData[]) => {\n        return demoData.find(demo => demo.name === demoName).data;\n      })\n    ) as Observable;\n  }\n\n  /**\n   * Gets a {MenuGroup} from the men data\n   * @param key The key of the menu to load\n   */\n  public getMenu(key: string): Observable> {\n    return this.query.select('menus').pipe(\n      distinctUntilChanged(),\n      filter(menus => menus !== undefined && menus.length > 0),\n      map(menus => {\n        return menus.find(menu => menu.key == key);\n      })\n    ) as Observable>;\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/AppService-1.html":{"url":"injectables/AppService-1.html","title":"injectable - AppService-1","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  AppService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/ngx-tinynodes/src/app/core/stores/app/application.service.ts\n        \n\n            \n                Description\n            \n            \n                The main application service, this loads the initial data and then provides\nit to the store, from here the main state can be updated and queried.\n\n            \n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                getDemoData\n                            \n                            \n                                    Public\n                                getMenu\n                            \n                            \n                                    Public\n                                toggleSidebar\n                            \n                        \n                    \n                \n\n\n\n\n\n                    \n                        \n                            Accessors\n                        \n                    \n                    \n                        \n                            \n                                \n                                    hidden\n                                \n                            \n                        \n                    \n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(query: ApplicationQuery, store: ApplicationStore, http: HttpClient)\n                    \n                \n                        \n                            \n                                Defined in apps/ngx-tinynodes/src/app/core/stores/app/application.service.ts:15\n                            \n                        \n\n                \n                    \n                            Sets up the providers for service methods\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        query\n                                                  \n                                                        \n                                                                        ApplicationQuery\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                The application query provider\n\n                                                        \n                                                \n                                                \n                                                        store\n                                                  \n                                                        \n                                                                        ApplicationStore\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                The application store provider\n\n                                                        \n                                                \n                                                \n                                                        http\n                                                  \n                                                        \n                                                                        HttpClient\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                The HTTP client provider\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            getDemoData\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    getDemoData(demoName: string)\n                \n            \n\n\n            \n                \n                    Defined in apps/ngx-tinynodes/src/app/core/stores/app/application.service.ts:49\n                \n            \n\n            \n                \n                    Type parameters :\n                    \n                        T\n                    \n                \n            \n\n            \n                \n                    Returns the demo data for a specific demo \n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    demoName\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        The name of the demo data to load\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Observable\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            getMenu\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    getMenu(key: string)\n                \n            \n\n\n            \n                \n                    Defined in apps/ngx-tinynodes/src/app/core/stores/app/application.service.ts:62\n                \n            \n\n            \n                \n                    Type parameters :\n                    \n                        T\n                    \n                \n            \n\n            \n                \n                    Gets a {MenuGroup} from the men data\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    key\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        The key of the menu to load\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Observable>\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            toggleSidebar\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    toggleSidebar()\n                \n            \n\n\n            \n                \n                    Defined in apps/ngx-tinynodes/src/app/core/stores/app/application.service.ts:41\n                \n            \n\n\n            \n                \n                    Toggles the sidebar state\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n\n            \n    \n        Accessors\n    \n        \n            \n                \n                    \n                        \n                        hidden\n                    \n                \n\n                \n                    \n                        gethidden()\n                    \n                \n                            \n                                \n                                    Defined in apps/ngx-tinynodes/src/app/core/stores/app/application.service.ts:34\n                                \n                            \n                    \n                        \n                                Returns if the side menu hidden state is set\n\n\n                                \n                                    Returns :     Observable\n\n                                \n                        \n                    \n\n            \n        \n\n    \n\n\n    \n        import { HttpClient } from '@angular/common/http';\nimport { Injectable } from '@angular/core';\nimport { Observable } from 'rxjs';\nimport { distinctUntilChanged, filter, map } from 'rxjs/operators';\nimport { ApplicationData, MenuGroup } from '../../types/app';\nimport { ApplicationStateKeys, DemoData } from './application.model';\nimport { ApplicationQuery } from './application.query';\nimport { ApplicationStore } from './application.store';\n\n/**\n * The main application service, this loads the initial data and then provides\n * it to the store, from here the main state can be updated and queried.\n */\n@Injectable()\nexport class AppService {\n  /**\n   * Sets up the providers for service methods\n   * @param query The application query provider\n   * @param store The application store provider\n   * @param http  The HTTP client provider\n   */\n  constructor(\n    private readonly query: ApplicationQuery,\n    private readonly store: ApplicationStore,\n    private readonly http: HttpClient\n  ) {\n    // Load the application data\n    this.http.get('/assets/app-data.json').subscribe((appData: ApplicationData) => this.store.update(appData));\n  }\n\n  /**\n   * Returns if the side menu hidden state is set\n   */\n  get hidden(): Observable {\n    return this.query.select(ApplicationStateKeys.Hidden);\n  }\n\n  /**\n   * Toggles the sidebar state\n   */\n  public toggleSidebar() {\n    this.store.update({ [ApplicationStateKeys.Hidden]: !this.store._value()[ApplicationStateKeys.Hidden] });\n  }\n\n  /**\n   * Returns the demo data for a specific demo \n   * @param demoName The name of the demo data to load\n   */\n  public getDemoData(demoName: string): Observable {\n    return this.query.select(ApplicationStateKeys.DemoData).pipe(\n      filter(data => typeof data !== 'undefined'),\n      map((demoData: DemoData[]) => {\n        return demoData.find(demo => demo.name === demoName).data;\n      })\n    ) as Observable;\n  }\n\n  /**\n   * Gets a {MenuGroup} from the men data\n   * @param key The key of the menu to load\n   */\n  public getMenu(key: string): Observable> {\n    return this.query.select('menus').pipe(\n      distinctUntilChanged(),\n      filter(menus => menus !== undefined && menus.length > 0),\n      map(menus => {\n        return menus.find(menu => menu.key === key);\n      })\n    ) as Observable>;\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/ApplicationData.html":{"url":"interfaces/ApplicationData.html","title":"interface - ApplicationData","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  ApplicationData\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            libs/ngx-tinynodes-core/src/lib/types/app.ts\n        \n\n            \n                Description\n            \n            \n                The aggregate application interface\n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        hidden\n                                \n                                \n                                        menus\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        hidden\n                                    \n                                \n                                \n                                    \n                                        hidden:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    If the sidebar menu is hidden\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        menus\n                                    \n                                \n                                \n                                    \n                                        menus:     MenuGroup[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     MenuGroup[]\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    An list of menu groups available in the apps\n\n                                \n                            \n                        \n                    \n            \n    \n\n\n    \n        import { RouterLink } from '@angular/router';\n\n/**\n * A menu item in the Tinynodes app\n */\nexport interface MenuItem {\n  /**\n   * The display label for the app\n   */\n  label: string;\n  /**\n   * Optional icon for the menu item\n   */\n  icon?: string;\n  /**\n   * Description of the item, used for title, aria, etc\n   */\n  description?: string;\n  /**\n   * The {RouterLink} for the menu item or a string url\n   */\n  link?: RouterLink | string;\n\n  /**\n   * Any children to render in the menu\n   */\n  children?: MenuItem[];\n}\n\n/**\n * A menu group describes a set of menu items with a key and optional title\n */\nexport interface MenuGroup {\n  /**\n   * The key of the menu (e.g. `sidebar`, `topnav`, etc)\n   */\n  key: string;\n  /**\n   * Optional title to render in the menu\n   */\n  title?: string;\n\n  /**\n   * The menu items, can contain one or more items with children\n   */\n  items: MenuItem[];\n}\n\n/**\n * The aggregate application interface\n */\nexport interface ApplicationData {\n  /**\n   * If the sidebar menu is hidden\n   */\n  hidden: boolean;\n\n  /**\n   * An list of menu groups available in the apps\n   */\n  menus: MenuGroup[];\n}\n\n    \n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/ApplicationData-1.html":{"url":"interfaces/ApplicationData-1.html","title":"interface - ApplicationData-1","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  ApplicationData\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/ngx-tinynodes/src/app/core/types/app.ts\n        \n\n            \n                Description\n            \n            \n                The aggregate application interface\n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        hidden\n                                \n                                \n                                        menus\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        hidden\n                                    \n                                \n                                \n                                    \n                                        hidden:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    If the sidebar menu is hidden\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        menus\n                                    \n                                \n                                \n                                    \n                                        menus:     MenuGroup[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     MenuGroup[]\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    An list of menu groups available in the apps\n\n                                \n                            \n                        \n                    \n            \n    \n\n\n    \n        import { RouterLink } from '@angular/router';\n\n/**\n * A menu item in the Tinynodes app\n */\nexport interface MenuItem {\n  /**\n   * The display label for the app\n   */\n  label: string;\n  /**\n   * Optional icon for the menu item\n   */\n  icon?: string;\n  /**\n   * Description of the item, used for title, aria, etc\n   */\n  description?: string;\n  /**\n   * The {RouterLink} for the menu item or a string url\n   */\n  link?: RouterLink | string;\n\n  /**\n   * Any children to render in the menu\n   */\n  children?: MenuItem[];\n}\n\n/**\n * A menu group describes a set of menu items with a key and optional title\n */\nexport interface MenuGroup {\n  /**\n   * The key of the menu (e.g. `sidebar`, `topnav`, etc)\n   */\n  key: string;\n  /**\n   * Optional title to render in the menu\n   */\n  title?: string;\n\n  /**\n   * The menu items, can contain one or more items with children\n   */\n  items: MenuItem[];\n}\n\n/**\n * The aggregate application interface\n */\nexport interface ApplicationData {\n  /**\n   * If the sidebar menu is hidden\n   */\n  hidden: boolean;\n\n  /**\n   * An list of menu groups available in the apps\n   */\n  menus: MenuGroup[];\n}\n\n    \n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/ApplicationDataModule.html":{"url":"modules/ApplicationDataModule.html","title":"module - ApplicationDataModule","body":"\n                   \n\n\n\n\n    Modules\n    ApplicationDataModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_ApplicationDataModule\n\n\n\ncluster_ApplicationDataModule_providers\n\n\n\n\nAppService\n\nAppService\n\n\n\nApplicationDataModule\n\nApplicationDataModule\n\nApplicationDataModule -->\n\nAppService->ApplicationDataModule\n\n\n\n\n\nApplicationQuery\n\nApplicationQuery\n\nApplicationDataModule -->\n\nApplicationQuery->ApplicationDataModule\n\n\n\n\n\nApplicationStore\n\nApplicationStore\n\nApplicationDataModule -->\n\nApplicationStore->ApplicationDataModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            libs/ngx-tinynodes-core/src/lib/stores/app/application.module.ts\n        \n\n\n        \n            Description\n        \n        \n            This module provide the Application state and helper functions that\nare used across the Tinynodes site\n\n        \n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            AppService\n                        \n                        \n                            ApplicationQuery\n                        \n                        \n                            ApplicationStore\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { NgModule } from '@angular/core';\nimport { ApplicationQuery } from './application.query';\nimport { AppService } from './application.service';\nimport { ApplicationStore } from './application.store';\n\n/**\n * This module provide the Application state and helper functions that\n * are used across the Tinynodes site\n */\n@NgModule({\n  providers: [AppService, ApplicationQuery, ApplicationStore]\n})\nexport class ApplicationDataModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/ApplicationQuery.html":{"url":"injectables/ApplicationQuery.html","title":"injectable - ApplicationQuery","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  ApplicationQuery\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            libs/ngx-tinynodes-core/src/lib/stores/app/application.query.ts\n        \n\n            \n                Description\n            \n            \n                The {Query} handler for the Application state data\n\n            \n\n            \n                Extends\n            \n            \n                        Query\n            \n\n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(store: ApplicationStore)\n                    \n                \n                        \n                            \n                                Defined in libs/ngx-tinynodes-core/src/lib/stores/app/application.query.ts:10\n                            \n                        \n\n                \n                    \n                            Provide the store for the class instance\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        store\n                                                  \n                                                        \n                                                                        ApplicationStore\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                Store to be provided\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { Query } from '@datorama/akita';\nimport { ApplicationState } from './application.model';\nimport { ApplicationStore } from './application.store';\n\n/**\n * The {Query} handler for the Application state data\n */\n@Injectable()\nexport class ApplicationQuery extends Query {\n  /**\n   * Provide the store for the class instance\n   * @param store Store to be provided\n   */\n  constructor(protected store: ApplicationStore) {\n    super(store);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/ApplicationQuery-1.html":{"url":"injectables/ApplicationQuery-1.html","title":"injectable - ApplicationQuery-1","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  ApplicationQuery\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/ngx-tinynodes/src/app/core/stores/app/application.query.ts\n        \n\n            \n                Description\n            \n            \n                The {Query} handler for the Application state data\n\n            \n\n            \n                Extends\n            \n            \n                        Query\n            \n\n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(store: ApplicationStore)\n                    \n                \n                        \n                            \n                                Defined in apps/ngx-tinynodes/src/app/core/stores/app/application.query.ts:10\n                            \n                        \n\n                \n                    \n                            Provide the store for the class instance\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        store\n                                                  \n                                                        \n                                                                        ApplicationStore\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                Store to be provided\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { Query } from '@datorama/akita';\nimport { ApplicationState } from './application.model';\nimport { ApplicationStore } from './application.store';\n\n/**\n * The {Query} handler for the Application state data\n */\n@Injectable()\nexport class ApplicationQuery extends Query {\n  /**\n   * Provide the store for the class instance\n   * @param store Store to be provided\n   */\n  constructor(protected store: ApplicationStore) {\n    super(store);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/ApplicationState.html":{"url":"interfaces/ApplicationState.html","title":"interface - ApplicationState","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  ApplicationState\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            libs/ngx-tinynodes-core/src/lib/stores/app/application.model.ts\n        \n\n            \n                Description\n            \n            \n                A representation of the application state\n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        demoData\n                                \n                                \n                                        hidden\n                                \n                                \n                                        menus\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        demoData\n                                    \n                                \n                                \n                                    \n                                        demoData:     DemoData[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     DemoData[]\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Data for demos\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        hidden\n                                    \n                                \n                                \n                                    \n                                        hidden:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    If the side menu is hidden\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        menus\n                                    \n                                \n                                \n                                    \n                                        menus:     MenuGroup[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     MenuGroup[]\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    A set of menus loaded from application data\n\n                                \n                            \n                        \n                    \n            \n    \n\n\n    \n        import { Block } from '@tinynodes/ngx-editorjs';\nimport { MenuGroup, MenuItem } from '../../types/app';\n\n/**\n * An Enum of the keys in the application state\n */\nexport enum ApplicationStateKeys {\n  /**\n   * The hidden state key\n   */\n  Hidden = 'hidden',\n\n  /**\n   * The menus key\n   */\n  Menus = 'menus',\n\n  /**\n   * The demo data key\n   */\n  DemoData = 'demoData'\n}\n\n/**\n * Interface for a demo data object\n */\nexport interface DemoData {\n  /**\n   * The name of the demo (e.g. `ngx-editorjs-demo`)\n   */\n  name: string;\n  /**\n   * The data for the demo as ``\n   */\n  data: T;\n}\n\n/**\n * Interface for `ngx-editorjs-demo` data\n * TODO: This should be moved\n */\nexport interface NgxEditorJSDemo {\n  /**\n   * The initial blocks for the demo\n   */\n  blocks: Block[];\n\n  /**\n   * Links for this demo\n   */\n  links: MenuGroup;\n}\n\n/**\n * The demo data for `ngx-editorjs-demo`\n */\nexport interface NgxEditorJSDemoData extends DemoData {}\n\n/**\n * The demos on tinynodes\n */\nexport interface TinynodeDemos {\n  /**\n   * The `ngx-editorjs-demo` data\n   */\n  'ngx-editorjs-demo': NgxEditorJSDemoData;\n}\n\n/**\n * A representation of the application state\n */\nexport interface ApplicationState {\n  /**\n   * If the side menu is hidden\n   */\n  hidden: boolean;\n\n  /**\n   * A set of menus loaded from application data\n   */\n  menus: MenuGroup[];\n\n  /**\n   * Data for demos\n   */\n  demoData: DemoData[];\n}\n\n    \n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/ApplicationState-1.html":{"url":"interfaces/ApplicationState-1.html","title":"interface - ApplicationState-1","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  ApplicationState\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/ngx-tinynodes/src/app/core/stores/app/application.model.ts\n        \n\n            \n                Description\n            \n            \n                A representation of the application state\n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        demoData\n                                \n                                \n                                        hidden\n                                \n                                \n                                        menus\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        demoData\n                                    \n                                \n                                \n                                    \n                                        demoData:     DemoData[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     DemoData[]\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Data for demos\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        hidden\n                                    \n                                \n                                \n                                    \n                                        hidden:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    If the side menu is hidden\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        menus\n                                    \n                                \n                                \n                                    \n                                        menus:     MenuGroup[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     MenuGroup[]\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    A set of menus loaded from application data\n\n                                \n                            \n                        \n                    \n            \n    \n\n\n    \n        import { Block } from '@tinynodes/ngx-editorjs';\nimport { MenuGroup } from '../../types/app';\n\n/**\n * An Enum of the keys in the application state\n */\nexport enum ApplicationStateKeys {\n  /**\n   * The hidden state key\n   */\n  Hidden = 'hidden',\n\n  /**\n   * The menus key\n   */\n  Menus = 'menus',\n\n  /**\n   * The demo data key\n   */\n  DemoData = 'demoData'\n}\n\n/**\n * Interface for a demo data object\n */\nexport interface DemoData {\n  /**\n   * The name of the demo (e.g. `ngx-editorjs-demo`)\n   */\n  name: string;\n  /**\n   * The data for the demo as ``\n   */\n  data: T;\n}\n\n/**\n * Interface for `ngx-editorjs-demo` data\n * TODO: This should be moved\n */\nexport interface NgxEditorJSDemo {\n  /**\n   * The initial blocks for the demo\n   */\n  blocks: Block[];\n}\n\n/**\n * The demo data for `ngx-editorjs-demo`\n */\nexport interface NgxEditorJSDemoData extends DemoData {}\n\n/**\n * The demos on tinynodes\n */\nexport interface TinynodeDemos {\n  /**\n   * The `ngx-editorjs-demo` data\n   */\n  'ngx-editorjs-demo': NgxEditorJSDemoData;\n}\n\n/**\n * A representation of the application state\n */\nexport interface ApplicationState {\n  /**\n   * If the side menu is hidden\n   */\n  hidden: boolean;\n\n  /**\n   * A set of menus loaded from application data\n   */\n  menus: MenuGroup[];\n\n  /**\n   * Data for demos\n   */\n  demoData: DemoData[];\n}\n\n    \n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/ApplicationStore.html":{"url":"injectables/ApplicationStore.html","title":"injectable - ApplicationStore","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  ApplicationStore\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            libs/ngx-tinynodes-core/src/lib/stores/app/application.store.ts\n        \n\n            \n                Description\n            \n            \n                Store for the Application state data\n\n            \n\n            \n                Extends\n            \n            \n                    Store\n            \n\n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in libs/ngx-tinynodes-core/src/lib/stores/app/application.store.ts:10\n                            \n                        \n\n                \n                    \n                            Provide an empty state for the application\n\n                    \n                \n            \n        \n\n\n\n\n    \n\n\n    \n        import { Store, StoreConfig } from '@datorama/akita';\nimport { Injectable } from '@angular/core';\nimport { ApplicationState } from './application.model';\n\n/**\n * Store for the Application state data\n */\n@Injectable()\n@StoreConfig({ name: 'application' })\nexport class ApplicationStore extends Store {\n  /**\n   * Provide an empty state for the application\n   */\n  constructor() {\n    super({\n      hidden: false,\n      menus: [],\n      demoData: []\n    });\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/ApplicationStore-1.html":{"url":"injectables/ApplicationStore-1.html","title":"injectable - ApplicationStore-1","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  ApplicationStore\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/ngx-tinynodes/src/app/core/stores/app/application.store.ts\n        \n\n            \n                Description\n            \n            \n                Store for the Application state data\n\n            \n\n            \n                Extends\n            \n            \n                    Store\n            \n\n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in apps/ngx-tinynodes/src/app/core/stores/app/application.store.ts:10\n                            \n                        \n\n                \n                    \n                            Provide an empty state for the application\n\n                    \n                \n            \n        \n\n\n\n\n    \n\n\n    \n        import { Store, StoreConfig } from '@datorama/akita';\nimport { Injectable } from '@angular/core';\nimport { ApplicationState } from './application.model';\n\n/**\n * Store for the Application state data\n */\n@Injectable()\n@StoreConfig({ name: 'application' })\nexport class ApplicationStore extends Store {\n  /**\n   * Provide an empty state for the application\n   */\n  constructor() {\n    super({\n      hidden: false,\n      menus: [],\n      demoData: []\n    });\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/BasePlugin.html":{"url":"interfaces/BasePlugin.html","title":"interface - BasePlugin","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  BasePlugin\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            libs/ngx-editorjs/src/lib/types/plugins.ts\n        \n\n            \n                Description\n            \n            \n                Defines the interface for required and optional plugin methods.\nThese methods allow a plugin to return a EditorJS plugin and an optional shortcut\n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        plugin\n                                \n                                \n                                            Optional\n                                        shortcut\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        plugin\n                                    \n                                \n                                \n                                    \n                                        plugin:         function\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         function\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    The plugin settings to be returned\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        shortcut\n                                    \n                                \n                                \n                                    \n                                        shortcut:         function\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         function\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    Optional shortcut for the plugin\n\n                                \n                            \n                        \n                    \n            \n    \n\n\n    \n        import { InjectionToken } from '@angular/core';\nimport { ToolSettings, ToolConstructable } from '@editorjs/editorjs';\n\n/**\n * A Module plugin configuration\n */\nexport interface PluginConfig {\n  /**\n   * The key of the plugin and the plugin class extending `BasePlugin`\n   */\n  [key: string]: BasePlugin;\n}\n\n/**\n * A map of all the tools settings\n */\nexport interface ToolSettingsMap {\n  /**\n   * The key of the plugin and the plugin exported tool settings\n   */\n  [key: string]: ToolConstructable | ToolSettings;\n}\n\n/**\n * Defines the interface for required and optional plugin methods.\n * These methods allow a plugin to return a EditorJS plugin and an optional shortcut\n */\nexport interface BasePlugin {\n  /**\n   * The plugin settings to be returned\n   */\n  plugin: () => ToolConstructable | ToolSettings;\n\n  /**\n   * Optional shortcut for the plugin\n   */\n  shortcut?: () => string;\n}\n\n/**\n * The Injection token for initial plugins as defined in the ngx-editorjs module\n */\nexport const InitialPlugins = new InjectionToken('InitialPlugins');\n\n/**\n * The injection token for adding plugins via your own application\n */\nexport const UserPlugins = new InjectionToken('UserPlugins');\n\n    \n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/BasePlugin-1.html":{"url":"interfaces/BasePlugin-1.html","title":"interface - BasePlugin-1","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  BasePlugin\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            libs/ngx-editorjs-plugins/src/lib/types/plugins.ts\n        \n\n            \n                Description\n            \n            \n                Defines the interface for required and optional plugin methods.\nThese methods allow a plugin to return a EditorJS plugin and an optional shortcut\n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        plugin\n                                \n                                \n                                            Optional\n                                        shortcut\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        plugin\n                                    \n                                \n                                \n                                    \n                                        plugin:         function\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         function\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    The plugin settings to be returned\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        shortcut\n                                    \n                                \n                                \n                                    \n                                        shortcut:         function\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         function\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    Optional shortcut for the plugin\n\n                                \n                            \n                        \n                    \n            \n    \n\n\n    \n        import { InjectionToken } from '@angular/core';\nimport { ToolSettings, ToolConstructable } from '@editorjs/editorjs';\n\n/**\n * A Module plugin configuration\n */\nexport interface PluginConfig {\n  /**\n   * The key of the plugin and the plugin class extending `BasePlugin`\n   */\n  [key: string]: BasePlugin;\n}\n\n/**\n * A map of all the tools settings\n */\nexport interface ToolSettingsMap {\n  /**\n   * The key of the plugin and the plugin exported tool settings\n   */\n  [key: string]: ToolConstructable | ToolSettings;\n}\n\n/**\n * Defines the interface for required and optional plugin methods.\n * These methods allow a plugin to return a EditorJS plugin and an optional shortcut\n */\nexport interface BasePlugin {\n  /**\n   * The plugin settings to be returned\n   */\n  plugin: () => ToolConstructable | ToolSettings;\n\n  /**\n   * Optional shortcut for the plugin\n   */\n  shortcut?: () => string;\n}\n\n/**\n * The Injection token for initial plugins as defined in the ngx-editorjs module\n */\nexport const InitialPlugins = new InjectionToken('InitialPlugins');\n\n/**\n * The injection token for adding plugins via your own application\n */\nexport const UserPlugins = new InjectionToken('UserPlugins');\n\n    \n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/Block.html":{"url":"interfaces/Block.html","title":"interface - Block","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  Block\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            libs/ngx-editorjs/src/lib/types/blocks.ts\n        \n\n            \n                Description\n            \n            \n                Base block type for EditorJS\n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        data\n                                \n                                \n                                        type\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n            \n    Indexable\n        \n            \n                \n                    \n                        [key: string]:        any\n\n                    \n                \n                        \n                            \n                                Defined in libs/ngx-editorjs/src/lib/types/blocks.ts:13\n                            \n                        \n                \n                    \n                        Additional properties on the type\n\n                    \n                \n            \n        \n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        data\n                                    \n                                \n                                \n                                    \n                                        data:     T\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     T\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    The data interface for the block type\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        type\n                                    \n                                \n                                \n                                    \n                                        type:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    The EditorJS block type\n\n                                \n                            \n                        \n                    \n            \n    \n\n\n    \n        export interface Block {\n  /**\n   * The EditorJS block type\n   */\n  type: string;\n\n  /**\n   * The data interface for the block type\n   */\n  data: T;\n\n  /**\n   * Additional properties on the type\n   */\n  [key: string]: any;\n}\n\n/**\n * Available list styles, supports `ordered` and `unordered`.\n * A custom string can also be added\n */\nexport type ListStyle = 'ordered' | 'unordered' | string;\n\n/**\n * Default data type for a list block\n */\nexport interface List {\n  /**\n   * The list style\n   */\n  style: ListStyle;\n  /**\n   * List items of type T\n   */\n  items: T[];\n}\n\n/**\n * The default list block is provided by the EditorJS list plugin\n */\nexport interface ListBlock extends Block> {\n  /**\n   * The EditorJS block type\n   */\n  type: 'list';\n}\n\n/**\n * Default data type for a paragraph block\n */\ninterface Paragraph {\n  /**\n   * The paragraph text\n   */\n  text: string;\n}\n\n/**\n * Interface for a paragraph block\n */\nexport interface ParagraphBlock extends Block {\n  /**\n   * The EditorJS block type\n   */\n  type: 'paragraph';\n}\n\n/**\n * Default data type for a header block\n */\ninterface Header {\n  /**\n   * The header text\n   */\n  text: string;\n  /**\n   * The header level from 1-6\n   */\n  level: number;\n}\n\n/**\n * Interface for a header block\n */\nexport interface HeaderBlock extends Block {\n  /**\n   * The EditorJS block type\n   */\n  type: 'header';\n}\n\n/**\n * Default data type for a header block\n */\nexport interface Image {\n  /**\n   * The image URL\n   */\n  url: string;\n  /**\n   * Optional image caption\n   */\n  caption?: string;\n  /**\n   * Optional border property\n   */\n  withBorder?: boolean;\n\n  /**\n   * Optional background property\n   */\n  withBackground?: boolean;\n\n  /**\n   * Optional stretch property\n   */\n  stretched?: boolean;\n}\n\n/**\n * Interface for a image block\n */\nexport interface ImageBlock extends Block {\n  /**\n   * The EditorJS block type\n   */\n  type: 'image';\n}\n\n/**\n * Type of all the basic block type\n */\nexport type BlockTypes = ParagraphBlock | HeaderBlock | ImageBlock | ListBlock | Block;\n\n    \n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/BlocksMap.html":{"url":"interfaces/BlocksMap.html","title":"interface - BlocksMap","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  BlocksMap\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            libs/ngx-editorjs/src/lib/types/maps.ts\n        \n\n            \n                Description\n            \n            \n                A map containing BehaviorSubject of Block elements from EditorJS\n\n            \n\n\n\n\n            \n    Indexable\n        \n            \n                \n                    \n                        [key: string]:        BehaviorSubject\n\n                    \n                \n                        \n                            \n                                Defined in libs/ngx-editorjs/src/lib/types/maps.ts:36\n                            \n                        \n                \n                    \n                        A map key containing a {BehaviorSubject} of {Block[]}\n\n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import EditorJS from '@editorjs/editorjs';\nimport { BehaviorSubject } from 'rxjs';\nimport { Block } from './blocks';\n\n/**\n * An event type for calling `EditorJS`\n */\nexport interface EventType {\n  type: string;\n  payload?: T;\n}\n\n/**\n * A map containing an event subject for an `EditorJS` instance\n */\nexport interface EventMap {\n  /**\n   * A map key containing a {BehaviorSubject} of {EventType}\n   */\n  [key: string]: BehaviorSubject;\n}\n\n/**\n * A map containing instances of `EditorJS`\n */\nexport interface EditorMap {\n  /**\n   * A map key containing a {BehaviorSubject} of {EditorJS}\n   */\n  [key: string]: BehaviorSubject;\n}\n\n/**\n * A map containing `BehaviorSubject` of `Block` elements from `EditorJS`\n */\nexport interface BlocksMap {\n  /**\n   * A map key containing a {BehaviorSubject} of {Block[]}\n   */\n  [key: string]: BehaviorSubject;\n}\n\n/**\n * A map containing `BehaviorSubject` of `boolean` values of the ready state of `EditorJS`\n */\nexport interface ReadyMap {\n  /**\n   * A map key containing a {BehaviorSubject} of {boolean}\n   */\n  [key: string]: BehaviorSubject;\n}\n\n/**\n * A map containing `BehaviorSubject` of `number` which is the timestamp of the last `EditorJS` change\n */\nexport interface ChangeMap {\n  /**\n   * A map key containing a {BehaviorSubject} of {number}\n   */\n  [key: string]: BehaviorSubject;\n}\n\n    \n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/ChangeMap.html":{"url":"interfaces/ChangeMap.html","title":"interface - ChangeMap","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  ChangeMap\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            libs/ngx-editorjs/src/lib/types/maps.ts\n        \n\n            \n                Description\n            \n            \n                A map containing BehaviorSubject of number which is the timestamp of the last EditorJS change\n\n            \n\n\n\n\n            \n    Indexable\n        \n            \n                \n                    \n                        [key: string]:    BehaviorSubject\n\n                    \n                \n                        \n                            \n                                Defined in libs/ngx-editorjs/src/lib/types/maps.ts:56\n                            \n                        \n                \n                    \n                        A map key containing a {BehaviorSubject} of {number}\n\n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import EditorJS from '@editorjs/editorjs';\nimport { BehaviorSubject } from 'rxjs';\nimport { Block } from './blocks';\n\n/**\n * An event type for calling `EditorJS`\n */\nexport interface EventType {\n  type: string;\n  payload?: T;\n}\n\n/**\n * A map containing an event subject for an `EditorJS` instance\n */\nexport interface EventMap {\n  /**\n   * A map key containing a {BehaviorSubject} of {EventType}\n   */\n  [key: string]: BehaviorSubject;\n}\n\n/**\n * A map containing instances of `EditorJS`\n */\nexport interface EditorMap {\n  /**\n   * A map key containing a {BehaviorSubject} of {EditorJS}\n   */\n  [key: string]: BehaviorSubject;\n}\n\n/**\n * A map containing `BehaviorSubject` of `Block` elements from `EditorJS`\n */\nexport interface BlocksMap {\n  /**\n   * A map key containing a {BehaviorSubject} of {Block[]}\n   */\n  [key: string]: BehaviorSubject;\n}\n\n/**\n * A map containing `BehaviorSubject` of `boolean` values of the ready state of `EditorJS`\n */\nexport interface ReadyMap {\n  /**\n   * A map key containing a {BehaviorSubject} of {boolean}\n   */\n  [key: string]: BehaviorSubject;\n}\n\n/**\n * A map containing `BehaviorSubject` of `number` which is the timestamp of the last `EditorJS` change\n */\nexport interface ChangeMap {\n  /**\n   * A map key containing a {BehaviorSubject} of {number}\n   */\n  [key: string]: BehaviorSubject;\n}\n\n    \n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/Changed.html":{"url":"classes/Changed.html","title":"class - Changed","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  Changed\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            libs/ngx-editorjs-ngrx/src/lib/actions/ngx-editorjs.actions.ts\n        \n\n\n\n            \n                Implements\n            \n            \n                        Action\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                payload\n                            \n                            \n                                    Readonly\n                                type\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(payload: literal type)\n                    \n                \n                        \n                            \n                                Defined in libs/ngx-editorjs-ngrx/src/lib/actions/ngx-editorjs.actions.ts:33\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        payload\n                                                  \n                                                        \n                                                                    literal type\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            payload\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     literal type\n\n                        \n                    \n                        \n                            \n                                    Defined in libs/ngx-editorjs-ngrx/src/lib/actions/ngx-editorjs.actions.ts:34\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                            type\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : EditorJSActionTypes.Changed\n                        \n                    \n                        \n                            \n                                    Defined in libs/ngx-editorjs-ngrx/src/lib/actions/ngx-editorjs.actions.ts:33\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { Action } from '@ngrx/store';\nimport { OutputData } from '@editorjs/editorjs';\n\nexport enum EditorJSActionTypes {\n  SaveStart = '[ngx-editorjs] Start Save',\n  SaveEnd = '[ngx-editorjs] Start End',\n  NotReady = '[ngx-editorjs] Not Ready',\n  Ready = '[ngx-editorjs] Ready',\n  Changed = '[ngx-editorjs] Changed'\n}\n\nexport class SaveStart implements Action {\n  readonly type = EditorJSActionTypes.SaveStart;\n  constructor(public payload: { holder: string }) {}\n}\n\nexport class SaveEnd implements Action {\n  readonly type = EditorJSActionTypes.SaveEnd;\n  constructor(public payload: { holder: string; data: OutputData }) {}\n}\n\nexport class NotReady implements Action {\n  readonly type = EditorJSActionTypes.NotReady;\n  constructor(public payload: { holder: string }) {}\n}\n\nexport class Ready implements Action {\n  readonly type = EditorJSActionTypes.Ready;\n  constructor(public payload: { holder: string }) {}\n}\n\nexport class Changed implements Action {\n  readonly type = EditorJSActionTypes.Changed;\n  constructor(public payload: { holder: string; data: OutputData }) {}\n}\n\nexport type NgxEditorJSActions = SaveStart | SaveEnd | NotReady | Ready | Changed;\n\n    \n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/CreateEditorJSOptions.html":{"url":"interfaces/CreateEditorJSOptions.html","title":"interface - CreateEditorJSOptions","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  CreateEditorJSOptions\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            libs/ngx-editorjs/src/lib/types/editorjs-service.ts\n        \n\n            \n                Description\n            \n            \n                EditorJS options\n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                            Optional\n                                        autoSave\n                                \n                                \n                                        config\n                                \n                                \n                                            Optional\n                                        includeTools\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        autoSave\n                                    \n                                \n                                \n                                    \n                                        autoSave:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    Autosave on change, is set to false\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        config\n                                    \n                                \n                                \n                                    \n                                        config:     EditorConfig\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     EditorConfig\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Configuration\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        includeTools\n                                    \n                                \n                                \n                                    \n                                        includeTools:     string[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string[]\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    Tools to include, Optional - if not set all tools will be used\n\n                                \n                            \n                        \n                    \n            \n    \n\n\n    \n        import { EditorConfig } from '@editorjs/editorjs';\n/**\n * Interface describing an action to trigger EditorJS\n */\nexport interface EditorJSAction {\n  /**\n   * The name of the action to trigger\n   */\n  action: string;\n\n  /**\n   * The payload for the action \n   */\n  payload?: T;\n}\n\n/**\n * Supported actions by the API\n */\nexport enum EditorJSActionTypes {\n  /**\n   * Create a new editor\n   */\n  CreateEditor = 'createEditor',\n\n  /**\n   * Update an editor instance\n   */\n  UpdateEditor = 'updateEditor',\n  /**\n   * Clear a editor instance\n   */\n  ClearEditor = 'clearEditor',\n  /**\n   * Destroy an Editor instance\n   */\n  DestroyEditor = 'destroyEditor',\n  /**\n   * Save the blocks in an editor instance\n   */\n  SaveEditor = 'saveEditor'\n}\n\n/**\n * EditorJS options\n */\nexport interface CreateEditorJSOptions {\n  /**\n   * Configuration\n   */\n  config: EditorConfig;\n  /**\n   * Tools to include, Optional - if not set all tools will be used\n   */\n  includeTools?: string[];\n  /**\n   * Autosave on change, is set to false\n   */\n  autoSave?: boolean;\n}\n\n    \n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/DemoData.html":{"url":"interfaces/DemoData.html","title":"interface - DemoData","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  DemoData\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            libs/ngx-tinynodes-core/src/lib/stores/app/application.model.ts\n        \n\n            \n                Description\n            \n            \n                Interface for a demo data object\n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        data\n                                \n                                \n                                        name\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        data\n                                    \n                                \n                                \n                                    \n                                        data:     T\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     T\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    The data for the demo as \n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        name\n                                    \n                                \n                                \n                                    \n                                        name:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    The name of the demo (e.g. ngx-editorjs-demo)\n\n                                \n                            \n                        \n                    \n            \n    \n\n\n    \n        import { Block } from '@tinynodes/ngx-editorjs';\nimport { MenuGroup, MenuItem } from '../../types/app';\n\n/**\n * An Enum of the keys in the application state\n */\nexport enum ApplicationStateKeys {\n  /**\n   * The hidden state key\n   */\n  Hidden = 'hidden',\n\n  /**\n   * The menus key\n   */\n  Menus = 'menus',\n\n  /**\n   * The demo data key\n   */\n  DemoData = 'demoData'\n}\n\n/**\n * Interface for a demo data object\n */\nexport interface DemoData {\n  /**\n   * The name of the demo (e.g. `ngx-editorjs-demo`)\n   */\n  name: string;\n  /**\n   * The data for the demo as ``\n   */\n  data: T;\n}\n\n/**\n * Interface for `ngx-editorjs-demo` data\n * TODO: This should be moved\n */\nexport interface NgxEditorJSDemo {\n  /**\n   * The initial blocks for the demo\n   */\n  blocks: Block[];\n\n  /**\n   * Links for this demo\n   */\n  links: MenuGroup;\n}\n\n/**\n * The demo data for `ngx-editorjs-demo`\n */\nexport interface NgxEditorJSDemoData extends DemoData {}\n\n/**\n * The demos on tinynodes\n */\nexport interface TinynodeDemos {\n  /**\n   * The `ngx-editorjs-demo` data\n   */\n  'ngx-editorjs-demo': NgxEditorJSDemoData;\n}\n\n/**\n * A representation of the application state\n */\nexport interface ApplicationState {\n  /**\n   * If the side menu is hidden\n   */\n  hidden: boolean;\n\n  /**\n   * A set of menus loaded from application data\n   */\n  menus: MenuGroup[];\n\n  /**\n   * Data for demos\n   */\n  demoData: DemoData[];\n}\n\n    \n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/DemoData-1.html":{"url":"interfaces/DemoData-1.html","title":"interface - DemoData-1","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  DemoData\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/ngx-tinynodes/src/app/core/stores/app/application.model.ts\n        \n\n            \n                Description\n            \n            \n                Interface for a demo data object\n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        data\n                                \n                                \n                                        name\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        data\n                                    \n                                \n                                \n                                    \n                                        data:     T\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     T\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    The data for the demo as \n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        name\n                                    \n                                \n                                \n                                    \n                                        name:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    The name of the demo (e.g. ngx-editorjs-demo)\n\n                                \n                            \n                        \n                    \n            \n    \n\n\n    \n        import { Block } from '@tinynodes/ngx-editorjs';\nimport { MenuGroup } from '../../types/app';\n\n/**\n * An Enum of the keys in the application state\n */\nexport enum ApplicationStateKeys {\n  /**\n   * The hidden state key\n   */\n  Hidden = 'hidden',\n\n  /**\n   * The menus key\n   */\n  Menus = 'menus',\n\n  /**\n   * The demo data key\n   */\n  DemoData = 'demoData'\n}\n\n/**\n * Interface for a demo data object\n */\nexport interface DemoData {\n  /**\n   * The name of the demo (e.g. `ngx-editorjs-demo`)\n   */\n  name: string;\n  /**\n   * The data for the demo as ``\n   */\n  data: T;\n}\n\n/**\n * Interface for `ngx-editorjs-demo` data\n * TODO: This should be moved\n */\nexport interface NgxEditorJSDemo {\n  /**\n   * The initial blocks for the demo\n   */\n  blocks: Block[];\n}\n\n/**\n * The demo data for `ngx-editorjs-demo`\n */\nexport interface NgxEditorJSDemoData extends DemoData {}\n\n/**\n * The demos on tinynodes\n */\nexport interface TinynodeDemos {\n  /**\n   * The `ngx-editorjs-demo` data\n   */\n  'ngx-editorjs-demo': NgxEditorJSDemoData;\n}\n\n/**\n * A representation of the application state\n */\nexport interface ApplicationState {\n  /**\n   * If the side menu is hidden\n   */\n  hidden: boolean;\n\n  /**\n   * A set of menus loaded from application data\n   */\n  menus: MenuGroup[];\n\n  /**\n   * Data for demos\n   */\n  demoData: DemoData[];\n}\n\n    \n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/EditorJSAction.html":{"url":"interfaces/EditorJSAction.html","title":"interface - EditorJSAction","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  EditorJSAction\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            libs/ngx-editorjs/src/lib/types/editorjs-service.ts\n        \n\n            \n                Description\n            \n            \n                Interface describing an action to trigger EditorJS\n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        action\n                                \n                                \n                                            Optional\n                                        payload\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        action\n                                    \n                                \n                                \n                                    \n                                        action:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    The name of the action to trigger\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        payload\n                                    \n                                \n                                \n                                    \n                                        payload:     T\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     T\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    The payload for the action \n\n                                \n                            \n                        \n                    \n            \n    \n\n\n    \n        import { EditorConfig } from '@editorjs/editorjs';\n/**\n * Interface describing an action to trigger EditorJS\n */\nexport interface EditorJSAction {\n  /**\n   * The name of the action to trigger\n   */\n  action: string;\n\n  /**\n   * The payload for the action \n   */\n  payload?: T;\n}\n\n/**\n * Supported actions by the API\n */\nexport enum EditorJSActionTypes {\n  /**\n   * Create a new editor\n   */\n  CreateEditor = 'createEditor',\n\n  /**\n   * Update an editor instance\n   */\n  UpdateEditor = 'updateEditor',\n  /**\n   * Clear a editor instance\n   */\n  ClearEditor = 'clearEditor',\n  /**\n   * Destroy an Editor instance\n   */\n  DestroyEditor = 'destroyEditor',\n  /**\n   * Save the blocks in an editor instance\n   */\n  SaveEditor = 'saveEditor'\n}\n\n/**\n * EditorJS options\n */\nexport interface CreateEditorJSOptions {\n  /**\n   * Configuration\n   */\n  config: EditorConfig;\n  /**\n   * Tools to include, Optional - if not set all tools will be used\n   */\n  includeTools?: string[];\n  /**\n   * Autosave on change, is set to false\n   */\n  autoSave?: boolean;\n}\n\n    \n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/EditorJSConfig.html":{"url":"interfaces/EditorJSConfig.html","title":"interface - EditorJSConfig","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  EditorJSConfig\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            libs/ngx-editorjs/src/lib/types/config.ts\n        \n\n            \n                Description\n            \n            \n                Configuration for the EditorJS instance\n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                            Optional\n                                        autofocus\n                                \n                                \n                                            Optional\n                                        blockPlaceholder\n                                \n                                \n                                            Optional\n                                        data\n                                \n                                \n                                            Optional\n                                        hideToolbar\n                                \n                                \n                                            Optional\n                                        holder\n                                \n                                \n                                            Optional\n                                        initialBlock\n                                \n                                \n                                            Optional\n                                        minHeight\n                                \n                                \n                                            Optional\n                                        sanitizer\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        autofocus\n                                    \n                                \n                                \n                                    \n                                        autofocus:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    If the EditorJS is autofocused on creation (default: false)\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        blockPlaceholder\n                                    \n                                \n                                \n                                    \n                                        blockPlaceholder:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    First Block placeholder\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        data\n                                    \n                                \n                                \n                                    \n                                        data:     OutputData\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     OutputData\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    Any initial output data to render\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        hideToolbar\n                                    \n                                \n                                \n                                    \n                                        hideToolbar:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    If true, toolbar won't be shown\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        holder\n                                    \n                                \n                                \n                                    \n                                        holder:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    ID of the element to hold the config\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        initialBlock\n                                    \n                                \n                                \n                                    \n                                        initialBlock:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    The name of the initial block (default \"paragraph\")\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        minHeight\n                                    \n                                \n                                \n                                    \n                                        minHeight:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    Height of Editor's bottom area that allows to set focus on the last Block\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        sanitizer\n                                    \n                                \n                                \n                                    \n                                        sanitizer:     SanitizerConfig\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     SanitizerConfig\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    Define default sanitizer configuration\n\n                                \n                            \n                        \n                    \n            \n    \n\n\n    \n        import { InjectionToken } from '@angular/core';\nimport EditorJS, { OutputData, SanitizerConfig, EditorConfig } from '@editorjs/editorjs';\n\n/**\n * Configuration for the EditorJS instance\n */\nexport interface EditorJSConfig {\n  /**\n   * If the EditorJS is autofocused on creation (default: false)\n   */\n  autofocus?: boolean;\n\n  /**\n   * Any initial output data to render\n   */\n  data?: OutputData;\n\n  /**\n   * If true, toolbar won't be shown\n   */\n  hideToolbar?: boolean;\n\n  /**\n   * ID of the element to hold the config\n   */\n  holder?: string;\n\n  /**\n   * The name of the initial block (default \"paragraph\")\n   */\n  initialBlock?: string;\n\n  /**\n   * Height of Editor's bottom area that allows to set focus on the last Block\n   */\n  minHeight?: number;\n\n  /**\n   * First Block placeholder\n   */\n  blockPlaceholder?: string;\n\n  /**\n   * Define default sanitizer configuration\n   */\n  sanitizer?: SanitizerConfig;\n}\n\n/**\n * The configuration option that can be passed to the `NgxEditorJSModule.forRoot` method\n */\nexport interface NgxEditorJSConfig {\n  /**\n   * Configuration options for `EditorJS`\n   */\n  editorjs?: EditorConfig;\n}\n\n/**\n * Injection token provied for `NgxEditorJSConfig`\n */\nexport const NGX_EDITORJS_CONFIG = new InjectionToken('NGX_EDITORJS_CONFIG');\n\n/**\n * Internal token for injecting the `NgxEditorJSConfig` into the config factory\n */\nexport const FOR_ROOT_OPTIONS_TOKEN = new InjectionToken('FOR_ROOT_OPTIONS_TOKEN');\n\n/**\n * Get the EditorJS instance injected into the app\n */\nexport const EDITIOR_JS_INSTANCE = new InjectionToken('EDITIOR_JS_INSTANCE');\n\n    \n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/EditorJSInstanceConfig.html":{"url":"interfaces/EditorJSInstanceConfig.html","title":"interface - EditorJSInstanceConfig","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  EditorJSInstanceConfig\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            libs/ngx-editorjs/src/lib/types/injector.ts\n        \n\n            \n                Description\n            \n            \n                Configuration for creating an EditorJS instance\n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        editorConfig\n                                \n                                \n                                            Optional\n                                        onChange\n                                \n                                \n                                            Optional\n                                        onReady\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        editorConfig\n                                    \n                                \n                                \n                                    \n                                        editorConfig:     EditorConfig\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     EditorConfig\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    The editor configuration, this is required with at least the holder property\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        onChange\n                                    \n                                \n                                \n                                    \n                                        onChange:         function\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         function\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    The method to call when the editor makes a change\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        onReady\n                                    \n                                \n                                \n                                    \n                                        onReady:         function\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         function\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    The method to call with an editor is ready\n\n                                \n                            \n                        \n                    \n            \n    \n\n\n    \n        import { InjectionToken } from '@angular/core';\nimport EditorJS, { EditorConfig } from '@editorjs/editorjs';\nimport { Block } from './blocks';\n/**\n * Configuration for creating an EditorJS instance\n */\nexport interface EditorJSInstanceConfig {\n  /**\n   * The editor configuration, this is required with at least the `holder` property\n   */\n  editorConfig: EditorConfig;\n  /**\n   * The method to call when the editor makes a change\n   */\n  onChange?: (holder?: string) => void;\n\n  /**\n   * The method to call with an editor is ready\n   */\n  onReady?: (holder?: string) => void;\n}\n\n/**\n * Default values for each internal map\n */\nexport const MAP_DEFAULTS = [['blocksMap', []], ['changeMap', 0], ['readyMap', false]];\n\n/**\n * Injection token for the EditorJS class\n */\nexport const EDITORJS_MODULE_IMPORT = new InjectionToken('EDITORJS_MODULE_IMPORT');\n\nexport const EditorJSInstance = new InjectionToken('EditorJSInstance');\n\n/**\n * Options for a Injector method\n */\nexport interface InjectorMethodOption {\n  /**\n   * The holder for the option\n   */\n  holder: string;\n  /**\n   * Optional blocks\n   */\n  blocks?: Block[];\n  /**\n   * Optional editor\n   */\n  editor?: EditorJS;\n}\n\n    \n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/EditorJSMaterialForm.html":{"url":"interfaces/EditorJSMaterialForm.html","title":"interface - EditorJSMaterialForm","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  EditorJSMaterialForm\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            libs/ngx-editorjs/src/lib/containers/editorjs-mat-field/editorjs-mat-field.component.ts\n        \n\n            \n                Description\n            \n            \n                Single interface for EditorJSMaterialForm\n\n            \n\n            \n                Extends\n            \n            \n                        OnInit\n            \n\n\n\n\n    \n\n\n    \n        import { FocusMonitor } from '@angular/cdk/a11y';\nimport { coerceBooleanProperty } from '@angular/cdk/coercion';\nimport {\n  AfterContentInit,\n  Component,\n  DoCheck,\n  forwardRef,\n  HostBinding,\n  Input,\n  OnDestroy,\n  OnInit,\n  Optional,\n  Provider,\n  Self,\n  ViewChild\n} from '@angular/core';\nimport { NgControl } from '@angular/forms';\nimport { MatFormFieldControl } from '@angular/material';\nimport { Subject } from 'rxjs';\nimport { takeUntil } from 'rxjs/operators';\nimport { NgxEditorJSDirective } from '../../directives/ngx-editorjs.directive';\nimport { NgxEditorJSService } from '../../services/editorjs.service';\nimport { NgxEditorJSBaseComponent } from '../base/container.class';\n\n/**\n * Provider for the EditorJS Material Field Component\n */\nexport const EDITORJS_MATERIAL_FIELD_CONTROL: Provider = {\n  provide: MatFormFieldControl,\n  useExisting: forwardRef(() => NgxEditorJSMatFieldComponent),\n  multi: true\n};\n\n/**\n * Single interface for EditorJSMaterialForm\n */\nexport interface EditorJSMaterialForm\n  extends OnInit,\n    AfterContentInit,\n    OnDestroy,\n    DoCheck,\n    MatFormFieldControl {}\n\n/**\n * This component is provided as a shortcut to using EditorJS in your\n * application. The attributes are optional and without a default component\n * will be created\n *\n * @example\n * \n *  \n * \n */\n@Component({\n  selector: 'ngx-editorjs-mat-field',\n  templateUrl: 'editorjs-mat-field.component.html',\n  styleUrls: ['editorjs-mat-field.component.scss'],\n  host: {\n    '[id]': 'id',\n    '[attr.aria-describedby]': 'describedBy'\n  },\n  providers: [EDITORJS_MATERIAL_FIELD_CONTROL]\n})\nexport class NgxEditorJSMatFieldComponent extends NgxEditorJSBaseComponent implements EditorJSMaterialForm {\n  /**\n   * Internal Static ID for Material for each editor instance\n   */\n  static nextId = 0;\n  /**\n   * Material state change subject\n   */\n  public stateChanges = new Subject();\n\n  /**\n   * Material control type\n   */\n  public controlType = 'ngx-editorjs-mat-field';\n\n  /**\n   * Material error state\n   */\n  public errorState = false;\n\n  /**\n   * Get the component value\n   */\n  get value(): any {\n    return this._value;\n  }\n\n  /**\n   * Set the component value\n   * @param value The value to set\n   */\n  @Input('value')\n  set value(value: any) {\n    this._value = value;\n    this.stateChanges.next();\n  }\n\n  /**\n   * Material placeholder value\n   */\n  private _placeholder: string;\n\n  /**\n   * Get the Material placeholder value\n   */\n  get placeholder() {\n    return this._placeholder;\n  }\n  /**\n   * Set the material Placeholder value\n   * @input placeholder The placeholder state to set\n   */\n  @Input('placeholder')\n  set placeholder(placeholder: string) {\n    this._placeholder = placeholder;\n    this.stateChanges.next();\n  }\n\n  /**\n   * Material focused state\n   */\n  private _focused: boolean;\n  /**\n   * Get the Material focused state\n   */\n  get focused() {\n    return this._focused;\n  }\n  /**\n   * Set the Material focused state\n   * @param focused The focused state to set\n   */\n  @Input('focused')\n  set focused(focused: boolean) {\n    this._focused = coerceBooleanProperty(focused);\n    if (this._focused) {\n      this.onTouch();\n    }\n    this.stateChanges.next();\n  }\n\n  /**\n   * Material Required Value\n   */\n  private _required = false;\n\n  /**\n   * Get the Material required state\n   */\n  get required() {\n    return this._required;\n  }\n  /**\n   * Set the Material requied state\n   * @param required The required state to set\n   */\n  @Input('required')\n  set required(required: boolean) {\n    this._required = coerceBooleanProperty(required);\n    this.stateChanges.next();\n  }\n\n  /**\n   * Material disabled state\n   */\n  private _disabled = false;\n\n  /**\n   * Get the Material disabled state\n   */\n  get disabled() {\n    return this._disabled;\n  }\n  /**\n   * Set the Material disabled state\n   * @param disabled The disabled state to set\n   */\n  @Input('disabled')\n  set disabled(disabled: boolean) {\n    this._disabled = coerceBooleanProperty(disabled);\n    this.stateChanges.next();\n  }\n\n  /**\n   * Material empty state\n   */\n  private _empty: boolean;\n  /**\n   * Get the Material empty state\n   */\n  public get empty() {\n    return this._empty;\n  }\n  /**\n   * Set the Material empty state\n   * @param empty The empty value\n   */\n  public set empty(empty: boolean) {\n    this._empty = empty;\n  }\n\n  /**\n   * Access to the underlying {NgxEditorJSDirective}\n   */\n  @ViewChild(NgxEditorJSDirective) public editorEl: NgxEditorJSDirective;\n\n  /**\n   * Host binding to the unique ID for this editor for material\n   */\n  @HostBinding()\n  id = `ngx-editorjs-mat-field-${NgxEditorJSMatFieldComponent.nextId++}`;\n\n  /**\n   * Gets if the Material label should float\n   */\n  @HostBinding('class.floating')\n  get shouldLabelFloat() {\n    return this.focused || !this.empty;\n  }\n\n  /**\n   * Host binding for ARIA label\n   */\n  @HostBinding('attr.aria-describedby') describedBy = '';\n\n  /**\n   *\n   * @param ids The IDs of the Material components\n   */\n  public setDescribedByIds(ids: string[]) {\n    this.describedBy = ids.join(' ');\n  }\n\n  /**\n   * Material on container click\n   * @param event The {MouseEvent} for the container click\n   */\n  public onContainerClick(event: MouseEvent) {\n    this.onTouch(event);\n    this.isSaved.emit(false);\n    this.stateChanges.next();\n  }\n\n  /**\n   * Creates the Material field\n   * @param service The {NgxEditorJSService} instance\n   * @param fm Focus monitor for the Material element\n   * @param ngControl The Angular control base class\n   */\n  constructor(\n    protected readonly service: NgxEditorJSService,\n    protected fm: FocusMonitor,\n    @Optional() @Self() public ngControl: NgControl\n  ) {\n    super(service, fm);\n  }\n\n  /**\n   * Called on OnInit\n   */\n  ngOnInit(): void {\n    if (this.ngControl !== null) {\n      this.ngControl.valueAccessor = this;\n    }\n  }\n\n  /**\n   * Inside the AfterContentInit life-cycle we set up a listener for focus\n   * and trigger focus autosave subscribe and unsubscribe\n   */\n  ngAfterContentInit(): void {\n    this.getFocusMonitor(this.editorEl.element)\n      .pipe(takeUntil(this.onDestroy$))\n      .subscribe(focused => {\n        this.focused = focused;\n        this.stateChanges.next();\n      });\n  }\n\n  /**\n   * Set the error state based on the underlying control state\n   */\n  ngDoCheck(): void {\n    if (this.ngControl) {\n      this.errorState = this.ngControl.invalid && this.ngControl.touched;\n      this.stateChanges.next();\n    }\n  }\n\n  /**\n   * Destroy the focus monitoring and any remaining timer subcription\n   */\n  ngOnDestroy(): void {\n    this.fm.stopMonitoring(this.editorEl.element);\n    if (this.timerSubscription$ && !this.timerSubscription$.closed) {\n      this.timerSubscription$.unsubscribe();\n    }\n    this.onDestroy$.next(true);\n    this.onDestroy$.complete();\n  }\n}\n\n    \n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/EditorMap.html":{"url":"interfaces/EditorMap.html","title":"interface - EditorMap","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  EditorMap\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            libs/ngx-editorjs/src/lib/types/maps.ts\n        \n\n            \n                Description\n            \n            \n                A map containing instances of EditorJS\n\n            \n\n\n\n\n            \n    Indexable\n        \n            \n                \n                    \n                        [key: string]:    BehaviorSubject\n\n                    \n                \n                        \n                            \n                                Defined in libs/ngx-editorjs/src/lib/types/maps.ts:26\n                            \n                        \n                \n                    \n                        A map key containing a {BehaviorSubject} of {EditorJS}\n\n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import EditorJS from '@editorjs/editorjs';\nimport { BehaviorSubject } from 'rxjs';\nimport { Block } from './blocks';\n\n/**\n * An event type for calling `EditorJS`\n */\nexport interface EventType {\n  type: string;\n  payload?: T;\n}\n\n/**\n * A map containing an event subject for an `EditorJS` instance\n */\nexport interface EventMap {\n  /**\n   * A map key containing a {BehaviorSubject} of {EventType}\n   */\n  [key: string]: BehaviorSubject;\n}\n\n/**\n * A map containing instances of `EditorJS`\n */\nexport interface EditorMap {\n  /**\n   * A map key containing a {BehaviorSubject} of {EditorJS}\n   */\n  [key: string]: BehaviorSubject;\n}\n\n/**\n * A map containing `BehaviorSubject` of `Block` elements from `EditorJS`\n */\nexport interface BlocksMap {\n  /**\n   * A map key containing a {BehaviorSubject} of {Block[]}\n   */\n  [key: string]: BehaviorSubject;\n}\n\n/**\n * A map containing `BehaviorSubject` of `boolean` values of the ready state of `EditorJS`\n */\nexport interface ReadyMap {\n  /**\n   * A map key containing a {BehaviorSubject} of {boolean}\n   */\n  [key: string]: BehaviorSubject;\n}\n\n/**\n * A map containing `BehaviorSubject` of `number` which is the timestamp of the last `EditorJS` change\n */\nexport interface ChangeMap {\n  /**\n   * A map key containing a {BehaviorSubject} of {number}\n   */\n  [key: string]: BehaviorSubject;\n}\n\n    \n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/EventMap.html":{"url":"interfaces/EventMap.html","title":"interface - EventMap","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  EventMap\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            libs/ngx-editorjs/src/lib/types/maps.ts\n        \n\n            \n                Description\n            \n            \n                A map containing an event subject for an EditorJS instance\n\n            \n\n\n\n\n            \n    Indexable\n        \n            \n                \n                    \n                        [key: string]:        BehaviorSubject\n\n                    \n                \n                        \n                            \n                                Defined in libs/ngx-editorjs/src/lib/types/maps.ts:16\n                            \n                        \n                \n                    \n                        A map key containing a {BehaviorSubject} of {EventType}\n\n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import EditorJS from '@editorjs/editorjs';\nimport { BehaviorSubject } from 'rxjs';\nimport { Block } from './blocks';\n\n/**\n * An event type for calling `EditorJS`\n */\nexport interface EventType {\n  type: string;\n  payload?: T;\n}\n\n/**\n * A map containing an event subject for an `EditorJS` instance\n */\nexport interface EventMap {\n  /**\n   * A map key containing a {BehaviorSubject} of {EventType}\n   */\n  [key: string]: BehaviorSubject;\n}\n\n/**\n * A map containing instances of `EditorJS`\n */\nexport interface EditorMap {\n  /**\n   * A map key containing a {BehaviorSubject} of {EditorJS}\n   */\n  [key: string]: BehaviorSubject;\n}\n\n/**\n * A map containing `BehaviorSubject` of `Block` elements from `EditorJS`\n */\nexport interface BlocksMap {\n  /**\n   * A map key containing a {BehaviorSubject} of {Block[]}\n   */\n  [key: string]: BehaviorSubject;\n}\n\n/**\n * A map containing `BehaviorSubject` of `boolean` values of the ready state of `EditorJS`\n */\nexport interface ReadyMap {\n  /**\n   * A map key containing a {BehaviorSubject} of {boolean}\n   */\n  [key: string]: BehaviorSubject;\n}\n\n/**\n * A map containing `BehaviorSubject` of `number` which is the timestamp of the last `EditorJS` change\n */\nexport interface ChangeMap {\n  /**\n   * A map key containing a {BehaviorSubject} of {number}\n   */\n  [key: string]: BehaviorSubject;\n}\n\n    \n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/EventType.html":{"url":"interfaces/EventType.html","title":"interface - EventType","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  EventType\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            libs/ngx-editorjs/src/lib/types/maps.ts\n        \n\n            \n                Description\n            \n            \n                An event type for calling EditorJS\n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                            Optional\n                                        payload\n                                \n                                \n                                        type\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        payload\n                                    \n                                \n                                \n                                    \n                                        payload:     T\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     T\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        type\n                                    \n                                \n                                \n                                    \n                                        type:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import EditorJS from '@editorjs/editorjs';\nimport { BehaviorSubject } from 'rxjs';\nimport { Block } from './blocks';\n\n/**\n * An event type for calling `EditorJS`\n */\nexport interface EventType {\n  type: string;\n  payload?: T;\n}\n\n/**\n * A map containing an event subject for an `EditorJS` instance\n */\nexport interface EventMap {\n  /**\n   * A map key containing a {BehaviorSubject} of {EventType}\n   */\n  [key: string]: BehaviorSubject;\n}\n\n/**\n * A map containing instances of `EditorJS`\n */\nexport interface EditorMap {\n  /**\n   * A map key containing a {BehaviorSubject} of {EditorJS}\n   */\n  [key: string]: BehaviorSubject;\n}\n\n/**\n * A map containing `BehaviorSubject` of `Block` elements from `EditorJS`\n */\nexport interface BlocksMap {\n  /**\n   * A map key containing a {BehaviorSubject} of {Block[]}\n   */\n  [key: string]: BehaviorSubject;\n}\n\n/**\n * A map containing `BehaviorSubject` of `boolean` values of the ready state of `EditorJS`\n */\nexport interface ReadyMap {\n  /**\n   * A map key containing a {BehaviorSubject} of {boolean}\n   */\n  [key: string]: BehaviorSubject;\n}\n\n/**\n * A map containing `BehaviorSubject` of `number` which is the timestamp of the last `EditorJS` change\n */\nexport interface ChangeMap {\n  /**\n   * A map key containing a {BehaviorSubject} of {number}\n   */\n  [key: string]: BehaviorSubject;\n}\n\n    \n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/FormContainerComponent.html":{"url":"components/FormContainerComponent.html","title":"component - FormContainerComponent","body":"\n                   \n\n\n\n\n\n  Components\n  FormContainerComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    libs/ngx-editorjs-demo/src/lib/containers/form-container/form-container.component.ts\n\n\n    \n        Description\n    \n    \n        The Page Container component provides the main routable page for loading\nthe ngx-editorjs-demo\n\n    \n\n\n    \n        Implements\n    \n    \n                    AfterContentInit\n    \n\n\n\n    Metadata\n    \n        \n\n            \n                changeDetection\n                ChangeDetectionStrategy.OnPush\n            \n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                ngx-form-container\n            \n\n            \n                styleUrls\n                form-container.component.scss\n            \n\n\n\n            \n                templateUrl\n                form-container.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                autoSave$\n                            \n                            \n                                    Private\n                                blocks$\n                            \n                            \n                                    Public\n                                editorForm\n                            \n                            \n                                    Public\n                                holder\n                            \n                            \n                                    Private\n                                isSaved$\n                            \n                            \n                                    Private\n                                menu$\n                            \n                            \n                                    Private\n                                onDestroy$\n                            \n                            \n                                    Private\n                                panelOpen$\n                            \n                            \n                                    Public\n                                title\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                clear\n                            \n                            \n                                    Public\n                                disableAutosave\n                            \n                            \n                                    Public\n                                enableAutosave\n                            \n                            \n                                ngAfterContentInit\n                            \n                            \n                                    Public\n                                reset\n                            \n                            \n                                    Public\n                                save\n                            \n                            \n                                    Public\n                                setIsSaved\n                            \n                            \n                                    Public\n                                togglePanel\n                            \n                        \n                    \n                \n\n\n\n\n\n                    \n                        \n                            Accessors\n                        \n                    \n                    \n                        \n                            \n                                \n                                    panelOpen\n                                \n                                \n                                    isSaved\n                                \n                                \n                                    autosave\n                                \n                                \n                                    menu\n                                \n                                \n                                    pages\n                                \n                                \n                                    blocks\n                                \n                            \n                        \n                    \n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(pagesService: PagesService, app: AppService, editor: NgxEditorJSService, cd: ChangeDetectorRef, fb: FormBuilder)\n                    \n                \n                        \n                            \n                                Defined in libs/ngx-editorjs-demo/src/lib/containers/form-container/form-container.component.ts:111\n                            \n                        \n\n                \n                    \n                            The constructor sets up the blocks to the initial demo data\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        pagesService\n                                                  \n                                                        \n                                                                        PagesService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                The pages service\n\n                                                        \n                                                \n                                                \n                                                        app\n                                                  \n                                                        \n                                                                        AppService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                The application service\n\n                                                        \n                                                \n                                                \n                                                        editor\n                                                  \n                                                        \n                                                                        NgxEditorJSService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                The Editor service\n\n                                                        \n                                                \n                                                \n                                                        cd\n                                                  \n                                                        \n                                                                        ChangeDetectorRef\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                The change detection ref\n\n                                                        \n                                                \n                                                \n                                                        fb\n                                                  \n                                                        \n                                                                        FormBuilder\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                The form builder\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            clear\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    clear()\n                \n            \n\n\n            \n                \n                    Defined in libs/ngx-editorjs-demo/src/lib/containers/form-container/form-container.component.ts:184\n                \n            \n\n\n            \n                \n                    Clear the editor\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            disableAutosave\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    disableAutosave()\n                \n            \n\n\n            \n                \n                    Defined in libs/ngx-editorjs-demo/src/lib/containers/form-container/form-container.component.ts:102\n                \n            \n\n\n            \n                \n                    Disable autosave\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            enableAutosave\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    enableAutosave(autosaveTime: number)\n                \n            \n\n\n            \n                \n                    Defined in libs/ngx-editorjs-demo/src/lib/containers/form-container/form-container.component.ts:95\n                \n            \n\n\n            \n                \n                    Enable autosave, set the value from the autosaveTime\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    autosaveTime\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        Time to set for autosave\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngAfterContentInit\n                        \n                        \n                    \n                \n            \n            \n                \nngAfterContentInit()\n                \n            \n\n\n            \n                \n                    Defined in libs/ngx-editorjs-demo/src/lib/containers/form-container/form-container.component.ts:247\n                \n            \n\n\n            \n                \n                    After the content has init overide the blocks with blocks from the service\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            reset\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    reset()\n                \n            \n\n\n            \n                \n                    Defined in libs/ngx-editorjs-demo/src/lib/containers/form-container/form-container.component.ts:193\n                \n            \n\n\n            \n                \n                    Reset the editor with demo data\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            save\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    save()\n                \n            \n\n\n            \n                \n                    Defined in libs/ngx-editorjs-demo/src/lib/containers/form-container/form-container.component.ts:175\n                \n            \n\n\n            \n                \n                    Call the editor save method\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            setIsSaved\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    setIsSaved(isSaved: boolean)\n                \n            \n\n\n            \n                \n                    Defined in libs/ngx-editorjs-demo/src/lib/containers/form-container/form-container.component.ts:87\n                \n            \n\n\n            \n                \n                    Set the current saved state\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    isSaved\n                                    \n                                                boolean\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        The current saved state\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            togglePanel\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    togglePanel(value: boolean)\n                \n            \n\n\n            \n                \n                    Defined in libs/ngx-editorjs-demo/src/lib/containers/form-container/form-container.component.ts:62\n                \n            \n\n\n            \n                \n                    Toggles the panel state\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    value\n                                    \n                                                boolean\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            autoSave$\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : new BehaviorSubject(0)\n                        \n                    \n                        \n                            \n                                    Defined in libs/ngx-editorjs-demo/src/lib/containers/form-container/form-container.component.ts:69\n                            \n                        \n\n                \n                    \n                        Autosave state\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            blocks$\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Observable\n\n                        \n                    \n                        \n                            \n                                    Defined in libs/ngx-editorjs-demo/src/lib/containers/form-container/form-container.component.ts:40\n                            \n                        \n\n                \n                    \n                        The blocks on the page\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            editorForm\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : this.fb.group({\n    pageName: [''],\n    pageTags: new FormControl([]),\n    pageEditor: new FormControl([])\n  })\n                        \n                    \n                        \n                            \n                                    Defined in libs/ngx-editorjs-demo/src/lib/containers/form-container/form-container.component.ts:145\n                            \n                        \n\n                \n                    \n                        Editor form group\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            holder\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Default value : 'ngx-editorjs-demo'\n                        \n                    \n                        \n                            \n                                    Defined in libs/ngx-editorjs-demo/src/lib/containers/form-container/form-container.component.ts:35\n                            \n                        \n\n                \n                    \n                        The holder ID for this demo\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            isSaved$\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : new BehaviorSubject(true)\n                        \n                    \n                        \n                            \n                                    Defined in libs/ngx-editorjs-demo/src/lib/containers/form-container/form-container.component.ts:74\n                            \n                        \n\n                \n                    \n                        Is saved state\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            menu$\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : new BehaviorSubject(undefined)\n                        \n                    \n                        \n                            \n                                    Defined in libs/ngx-editorjs-demo/src/lib/containers/form-container/form-container.component.ts:50\n                            \n                        \n\n                \n                    \n                        Links for the page\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            onDestroy$\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : new Subject()\n                        \n                    \n                        \n                            \n                                    Defined in libs/ngx-editorjs-demo/src/lib/containers/form-container/form-container.component.ts:30\n                            \n                        \n\n                \n                    \n                        Internal onDestroy$ subject\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            panelOpen$\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : new BehaviorSubject(true)\n                        \n                    \n                        \n                            \n                                    Defined in libs/ngx-editorjs-demo/src/lib/containers/form-container/form-container.component.ts:45\n                            \n                        \n\n                \n                    \n                        If the panel is open or not\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            title\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Default value : 'ngx-editorjs Material Field'\n                        \n                    \n                        \n                            \n                                    Defined in libs/ngx-editorjs-demo/src/lib/containers/form-container/form-container.component.ts:26\n                            \n                        \n\n                \n                    \n                        Title of the page\n\n                    \n                \n\n            \n        \n\n\n    \n    \n        Accessors\n    \n        \n            \n                \n                    \n                        \n                        panelOpen\n                    \n                \n\n                \n                    \n                        getpanelOpen()\n                    \n                \n                            \n                                \n                                    Defined in libs/ngx-editorjs-demo/src/lib/containers/form-container/form-container.component.ts:55\n                                \n                            \n                    \n                        \n                                Gets if the panel is open or not\n\n\n                        \n                    \n\n            \n        \n        \n            \n                \n                    \n                        \n                        isSaved\n                    \n                \n\n                \n                    \n                        getisSaved()\n                    \n                \n                            \n                                \n                                    Defined in libs/ngx-editorjs-demo/src/lib/containers/form-container/form-container.component.ts:79\n                                \n                            \n                    \n                        \n                                Get isSaved state\n\n\n                                \n                                    Returns :     Observable\n\n                                \n                        \n                    \n\n            \n        \n        \n            \n                \n                    \n                        \n                        autosave\n                    \n                \n\n                \n                    \n                        getautosave()\n                    \n                \n                            \n                                \n                                    Defined in libs/ngx-editorjs-demo/src/lib/containers/form-container/form-container.component.ts:109\n                                \n                            \n                    \n                        \n                                Get the current autosave value\n\n\n                        \n                    \n\n            \n        \n        \n            \n                \n                    \n                        \n                        menu\n                    \n                \n\n                \n                    \n                        getmenu()\n                    \n                \n                            \n                                \n                                    Defined in libs/ngx-editorjs-demo/src/lib/containers/form-container/form-container.component.ts:154\n                                \n                            \n                    \n                        \n                                Get the page links\n\n\n                        \n                    \n\n            \n        \n        \n            \n                \n                    \n                        \n                        pages\n                    \n                \n\n                \n                    \n                        getpages()\n                    \n                \n                            \n                                \n                                    Defined in libs/ngx-editorjs-demo/src/lib/containers/form-container/form-container.component.ts:161\n                                \n                            \n                    \n                        \n                                Get a list of pages\n\n\n                                \n                                    Returns :         Observable\n\n                                \n                        \n                    \n\n            \n        \n        \n            \n                \n                    \n                        \n                        blocks\n                    \n                \n\n                \n                    \n                        getblocks()\n                    \n                \n                            \n                                \n                                    Defined in libs/ngx-editorjs-demo/src/lib/containers/form-container/form-container.component.ts:168\n                                \n                            \n                    \n                        \n                                Get the blocks for the container\n\n\n                                \n                                    Returns :         Observable\n\n                                \n                        \n                    \n\n            \n        \n\n\n\n\n    \n        import { AfterContentInit, ChangeDetectionStrategy, ChangeDetectorRef, Component } from '@angular/core';\nimport { FormBuilder, FormControl } from '@angular/forms';\nimport { Block, NgxEditorJSService } from '@tinynodes/ngx-editorjs/src';\nimport { AppService } from '@tinynodes/ngx-tinynodes-core/src';\nimport { NgxEditorJSDemo } from '@tinynodes/ngx-tinynodes-core/src/lib/stores/app/application.model';\nimport { MenuGroup } from 'apps/ngx-tinynodes/src/app/core/types/app';\nimport { BehaviorSubject, Observable, Subject } from 'rxjs';\nimport { distinctUntilChanged, take, takeUntil } from 'rxjs/operators';\nimport { Page } from '../../store/pages/pages.models';\nimport { PagesService } from '../../store/pages/pages.service';\n\n/**\n * The Page Container component provides the main routable page for loading\n * the `ngx-editorjs-demo`\n */\n@Component({\n  selector: 'ngx-form-container',\n  templateUrl: 'form-container.component.html',\n  styleUrls: ['form-container.component.scss'],\n  changeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class FormContainerComponent implements AfterContentInit {\n  /**\n   * Title of the page\n   */\n  public title = 'ngx-editorjs Material Field';\n  /**\n   * Internal onDestroy$ subject\n   */\n  private onDestroy$ = new Subject();\n\n  /**\n   * The holder ID for this demo\n   */\n  public holder = 'ngx-editorjs-demo';\n\n  /**\n   * The blocks on the page\n   */\n  private blocks$: Observable;\n\n  /**\n   * If the panel is open or not\n   */\n  private panelOpen$ = new BehaviorSubject(true);\n\n  /**\n   * Links for the page\n   */\n  private menu$ = new BehaviorSubject(undefined);\n\n  /**\n   * Gets if the panel is open or not\n   */\n  public get panelOpen() {\n    return this.panelOpen$.asObservable();\n  }\n\n  /**\n   * Toggles the panel state\n   */\n  public togglePanel(value: boolean) {\n    this.panelOpen$.next(value);\n  }\n\n  /**\n   * Autosave state\n   */\n  private autoSave$ = new BehaviorSubject(0);\n\n  /**\n   * Is saved state\n   */\n  private isSaved$ = new BehaviorSubject(true);\n\n  /**\n   * Get `isSaved` state\n   */\n  public get isSaved(): Observable {\n    return this.isSaved$.asObservable();\n  }\n\n  /**\n   * Set the current saved state\n   * @param isSaved The current saved state\n   */\n  public setIsSaved(isSaved: boolean) {\n    this.isSaved$.next(isSaved);\n  }\n\n  /**\n   * Enable autosave, set the value from the autosaveTime\n   * @param autosaveTime Time to set for autosave\n   */\n  public enableAutosave(autosaveTime: number) {\n    this.autoSave$.next(autosaveTime);\n  }\n\n  /**\n   * Disable autosave\n   */\n  public disableAutosave() {\n    this.autoSave$.next(0);\n  }\n\n  /**\n   * Get the current autosave value\n   */\n  public get autosave() {\n    return this.autoSave$.asObservable();\n  }\n\n  /**\n   * The constructor sets up the blocks to the initial demo data\n   * @param pagesService The pages service\n   * @param app The application service\n   * @param editor The Editor service\n   * @param cd The change detection ref\n   * @param fb The form builder\n   */\n  constructor(\n    private readonly pagesService: PagesService,\n    private app: AppService,\n    private readonly editor: NgxEditorJSService,\n    private readonly cd: ChangeDetectorRef,\n    private readonly fb: FormBuilder\n  ) {\n    this.editor\n      .getBlocks({ holder: this.holder })\n      .pipe(\n        distinctUntilChanged(),\n        takeUntil(this.onDestroy$)\n      )\n      .subscribe(blocks => {\n        this.editorForm.patchValue({\n          pageEditor: blocks\n        });\n        this.cd.markForCheck();\n      });\n  }\n\n  /**\n   * Editor form group\n   */\n  public editorForm = this.fb.group({\n    pageName: [''],\n    pageTags: new FormControl([]),\n    pageEditor: new FormControl([])\n  });\n\n  /**\n   * Get the page links\n   */\n  public get menu() {\n    return this.menu$;\n  }\n\n  /**\n   * Get a list of pages\n   */\n  get pages(): Observable {\n    return this.pagesService.pages;\n  }\n\n  /**\n   * Get the blocks for the container\n   */\n  get blocks(): Observable {\n    return this.blocks$;\n  }\n\n  /**\n   * Call the editor save method\n   */\n  public save() {\n    this.editor.save({ holder: this.holder });\n    this.setIsSaved(true);\n    this.cd.markForCheck();\n  }\n\n  /**\n   * Clear the editor\n   */\n  public clear() {\n    this.editor.clear({ holder: this.holder });\n    this.setIsSaved(true);\n    this.cd.markForCheck();\n  }\n\n  /**\n   * Reset the editor with demo data\n   */\n  public reset() {\n    this.app\n      .getDemoData('ngx-editorjs-demo')\n      .pipe(take(1))\n      .subscribe((data: NgxEditorJSDemo) => {\n        const blocks = [\n          ...data.blocks,\n          {\n            type: 'header',\n            data: {\n              text: 'Material Form Component',\n              level: 1\n            }\n          },\n          {\n            type: 'paragraph',\n            data: {\n              text:\n                'This component is provided as a Material form component.  Here is the configuration for this field on this page:'\n            }\n          },\n          {\n            type: 'code',\n            data: {\n              code: `\n  \n    \n    \n  \n`\n            }\n          },\n          {\n            type: 'paragraph',\n            data: {\n              text: 'When you save the form, you can see the output below of the form instance values'\n            }\n          }\n        ];\n        this.menu$.next(data.links);\n        this.editor.update({ holder: this.holder, blocks });\n        this.setIsSaved(true);\n        this.cd.markForCheck();\n      });\n  }\n\n  /**\n   * After the content has init overide the blocks with blocks from the service\n   */\n  ngAfterContentInit() {\n    this.reset();\n  }\n}\n\n    \n\n    \n        \n  \n    \n      @tinynodes/ngx-editor Material Field Demo\n      A single page demo of the EditorJS Material Field component\n    \n\n    \n      \n    \n\n    \n      Demo\n      Save\n      Clear\n      \n        Enable Autosave\n      \n       0\" (click)=\"disableAutosave()\">Disable Autosave\n      save\n      \n        Autosave Time\n        \n        seconds\n         0\">\n          EditorJS Autosave is enabled, now when you focus on the component the reactive form value will be updated - You still need to call\n          save to save all the form data.\n      \n    \n    \n      \n        \n          Page Name\n          \n          Enter the name for this page\n        \n        \n          Page Tags\n          \n          Press Enter or , (comma) to add tags\n        \n        \n          Content Editor for {{ editorForm.value.pageName || 'Page Name' }}\n          Click on the editor to active it\n          \n        \n      \n    \n    \n      \n        \n          Output\n          Data from the EditorJS instance\n        \n        \n          {{ editorForm.valueChanges | async | json }}\n        \n      \n    \n     \n  \n\n\n\n  \n    Below is an instance of an {{ title }} EditorJS Materia; component. Click on the area and the block tool will appear, or\n    you can just start typing.\n  \n  \n    The default block is a &lt;p> paragraph, you can also add header &lt;h1> - &lt;h6> blocks, list with\n    &lt;ol> / &lt;li> and &lt;code> blocks.\n  \n\n  \n    You can also paste in an &lt;img> url into the editor and it will start the SimpleImage plugin which provides\n    an &lt;img> tag pointing to the image, and with some additional controls.\n  \n  \n    When saving check the output panel below to see the data results. The Autosave feature enables the `EditorJS` instance to update the\n    form value on a regular basis, but to save the data to a service the form would still need submission.\n  \n\n\n    \n\n    \n                \n                    form-container.component.scss\n                \n                :host {\n  width: 100%;\n  height: 100vh;\n}\n\n.output-card {\n  height: 100vh;\n  flex: 1;\n  width: 100%;\n  overflow: scroll;\n}\n\n.form-content form {\n  display: flex;\n  flex-direction: column;\n}\n\n.form-content > * {\n  width: 100%;\n}\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '            @tinynodes/ngx-editor Material Field Demo      A single page demo of the EditorJS Material Field component                            Demo      Save      Clear              Enable Autosave             0\" (click)=\"disableAutosave()\">Disable Autosave      save              Autosave Time                seconds         0\">          EditorJS Autosave is enabled, now when you focus on the component the reactive form value will be updated - You still need to call          save to save all the form data.                                      Page Name                    Enter the name for this page                          Page Tags                    Press Enter or , (comma) to add tags                          Content Editor for {{ editorForm.value.pageName || \\'Page Name\\' }}          Click on the editor to active it                                                        Output          Data from the EditorJS instance                          {{ editorForm.valueChanges | async | json }}                               Below is an instance of an {{ title }} EditorJS Materia; component. Click on the area and the block tool will appear, or    you can just start typing.        The default block is a  paragraph, you can also add header  -  blocks, list with     /  and  blocks.        You can also paste in an  url into the editor and it will start the SimpleImage plugin which provides    an  tag pointing to the image, and with some additional controls.        When saving check the output panel below to see the data results. The Autosave feature enables the `EditorJS` instance to update the    form value on a regular basis, but to save the data to a service the form would still need submission.  '\n    var COMPONENTS = [{'name': 'AppContainerComponent', 'selector': 'tinynodes-root'},{'name': 'FormContainerComponent', 'selector': 'ngx-form-container'},{'name': 'HomePageComponent', 'selector': 'tinynodes-home-page'},{'name': 'NavBarComponent', 'selector': 'tinynodes-nav-bar'},{'name': 'NgxEditorJSBaseComponent', 'selector': ''},{'name': 'NgxEditorJSComponent', 'selector': 'ngx-editorjs'},{'name': 'NgxEditorJSDemoHomeComponent', 'selector': 'ngx-editorjs-demo-home'},{'name': 'NgxEditorJSDemoInfoComponent', 'selector': 'ngx-editorjs-demo-info'},{'name': 'NgxEditorJSDemoTagComponent', 'selector': 'ngx-editorjs-tag-component'},{'name': 'NgxEditorJSMatFieldComponent', 'selector': 'ngx-editorjs-mat-field'},{'name': 'PageContainerComponent', 'selector': 'ngx-page-container'},{'name': 'SidebarComponent', 'selector': 'tinynodes-sidebar'}];\n    var DIRECTIVES = [{'name': 'NgxEditorJSDirective', 'selector': '[ngxEditorJS]'}];\n    var ACTUAL_COMPONENT = {'name': 'FormContainerComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/Header.html":{"url":"interfaces/Header.html","title":"interface - Header","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  Header\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            libs/ngx-editorjs/src/lib/types/blocks.ts\n        \n\n            \n                Description\n            \n            \n                Default data type for a header block\n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        level\n                                \n                                \n                                        text\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        level\n                                    \n                                \n                                \n                                    \n                                        level:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    The header level from 1-6\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        text\n                                    \n                                \n                                \n                                    \n                                        text:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    The header text\n\n                                \n                            \n                        \n                    \n            \n    \n\n\n    \n        export interface Block {\n  /**\n   * The EditorJS block type\n   */\n  type: string;\n\n  /**\n   * The data interface for the block type\n   */\n  data: T;\n\n  /**\n   * Additional properties on the type\n   */\n  [key: string]: any;\n}\n\n/**\n * Available list styles, supports `ordered` and `unordered`.\n * A custom string can also be added\n */\nexport type ListStyle = 'ordered' | 'unordered' | string;\n\n/**\n * Default data type for a list block\n */\nexport interface List {\n  /**\n   * The list style\n   */\n  style: ListStyle;\n  /**\n   * List items of type T\n   */\n  items: T[];\n}\n\n/**\n * The default list block is provided by the EditorJS list plugin\n */\nexport interface ListBlock extends Block> {\n  /**\n   * The EditorJS block type\n   */\n  type: 'list';\n}\n\n/**\n * Default data type for a paragraph block\n */\ninterface Paragraph {\n  /**\n   * The paragraph text\n   */\n  text: string;\n}\n\n/**\n * Interface for a paragraph block\n */\nexport interface ParagraphBlock extends Block {\n  /**\n   * The EditorJS block type\n   */\n  type: 'paragraph';\n}\n\n/**\n * Default data type for a header block\n */\ninterface Header {\n  /**\n   * The header text\n   */\n  text: string;\n  /**\n   * The header level from 1-6\n   */\n  level: number;\n}\n\n/**\n * Interface for a header block\n */\nexport interface HeaderBlock extends Block {\n  /**\n   * The EditorJS block type\n   */\n  type: 'header';\n}\n\n/**\n * Default data type for a header block\n */\nexport interface Image {\n  /**\n   * The image URL\n   */\n  url: string;\n  /**\n   * Optional image caption\n   */\n  caption?: string;\n  /**\n   * Optional border property\n   */\n  withBorder?: boolean;\n\n  /**\n   * Optional background property\n   */\n  withBackground?: boolean;\n\n  /**\n   * Optional stretch property\n   */\n  stretched?: boolean;\n}\n\n/**\n * Interface for a image block\n */\nexport interface ImageBlock extends Block {\n  /**\n   * The EditorJS block type\n   */\n  type: 'image';\n}\n\n/**\n * Type of all the basic block type\n */\nexport type BlockTypes = ParagraphBlock | HeaderBlock | ImageBlock | ListBlock | Block;\n\n    \n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/HeaderBlock.html":{"url":"interfaces/HeaderBlock.html","title":"interface - HeaderBlock","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  HeaderBlock\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            libs/ngx-editorjs/src/lib/types/blocks.ts\n        \n\n            \n                Description\n            \n            \n                Interface for a header block\n\n            \n\n            \n                Extends\n            \n            \n                        Block\n            \n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        type\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        type\n                                    \n                                \n                                \n                                    \n                                        type:     \n\n                                    \n                                \n\n\n\n\n\n\n\n                            \n                                \n                                    The EditorJS block type\n\n                                \n                            \n                        \n                    \n            \n    \n\n\n    \n        export interface Block {\n  /**\n   * The EditorJS block type\n   */\n  type: string;\n\n  /**\n   * The data interface for the block type\n   */\n  data: T;\n\n  /**\n   * Additional properties on the type\n   */\n  [key: string]: any;\n}\n\n/**\n * Available list styles, supports `ordered` and `unordered`.\n * A custom string can also be added\n */\nexport type ListStyle = 'ordered' | 'unordered' | string;\n\n/**\n * Default data type for a list block\n */\nexport interface List {\n  /**\n   * The list style\n   */\n  style: ListStyle;\n  /**\n   * List items of type T\n   */\n  items: T[];\n}\n\n/**\n * The default list block is provided by the EditorJS list plugin\n */\nexport interface ListBlock extends Block> {\n  /**\n   * The EditorJS block type\n   */\n  type: 'list';\n}\n\n/**\n * Default data type for a paragraph block\n */\ninterface Paragraph {\n  /**\n   * The paragraph text\n   */\n  text: string;\n}\n\n/**\n * Interface for a paragraph block\n */\nexport interface ParagraphBlock extends Block {\n  /**\n   * The EditorJS block type\n   */\n  type: 'paragraph';\n}\n\n/**\n * Default data type for a header block\n */\ninterface Header {\n  /**\n   * The header text\n   */\n  text: string;\n  /**\n   * The header level from 1-6\n   */\n  level: number;\n}\n\n/**\n * Interface for a header block\n */\nexport interface HeaderBlock extends Block {\n  /**\n   * The EditorJS block type\n   */\n  type: 'header';\n}\n\n/**\n * Default data type for a header block\n */\nexport interface Image {\n  /**\n   * The image URL\n   */\n  url: string;\n  /**\n   * Optional image caption\n   */\n  caption?: string;\n  /**\n   * Optional border property\n   */\n  withBorder?: boolean;\n\n  /**\n   * Optional background property\n   */\n  withBackground?: boolean;\n\n  /**\n   * Optional stretch property\n   */\n  stretched?: boolean;\n}\n\n/**\n * Interface for a image block\n */\nexport interface ImageBlock extends Block {\n  /**\n   * The EditorJS block type\n   */\n  type: 'image';\n}\n\n/**\n * Type of all the basic block type\n */\nexport type BlockTypes = ParagraphBlock | HeaderBlock | ImageBlock | ListBlock | Block;\n\n    \n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/HomePageComponent.html":{"url":"components/HomePageComponent.html","title":"component - HomePageComponent","body":"\n                   \n\n\n\n\n\n  Components\n  HomePageComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    apps/ngx-tinynodes/src/app/pages/home/home-page.component.ts\n\n\n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                tinynodes-home-page\n            \n\n            \n                styleUrls\n                home-page.component.scss\n            \n\n\n\n            \n                templateUrl\n                home-page.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n\n\n\n\n\n\n                    \n                        \n                            Accessors\n                        \n                    \n                    \n                        \n                            \n                                \n                                    menu\n                                \n                            \n                        \n                    \n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(app: AppService)\n                    \n                \n                        \n                            \n                                Defined in apps/ngx-tinynodes/src/app/pages/home/home-page.component.ts:9\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        app\n                                                  \n                                                        \n                                                                        AppService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n\n\n    \n    \n        Accessors\n    \n        \n            \n                \n                    \n                        \n                        menu\n                    \n                \n\n                \n                    \n                        getmenu()\n                    \n                \n                            \n                                \n                                    Defined in apps/ngx-tinynodes/src/app/pages/home/home-page.component.ts:12\n                                \n                            \n\n            \n        \n\n\n\n\n    \n        import { Component } from '@angular/core';\nimport { AppService } from '@tinynodes/ngx-tinynodes-core';\n\n@Component({\n  selector: 'tinynodes-home-page',\n  templateUrl: 'home-page.component.html',\n  styleUrls: ['home-page.component.scss']\n})\nexport class HomePageComponent {\n  constructor(private readonly app: AppService) {}\n\n  public get menu() {\n    return this.app.getMenu('main-links');\n  }\n}\n\n    \n\n    \n        \n  \n    \n      Welcome to the Tinynodes Demo Site\n      A collection of Angular and TypeScript libraries for the web\n    \n    \n      \n        This site contains demos of components released under @tinynodes on npm, you can find a list of them on\n        the menu to the left.\n      \n      You can also visit the sites below for additional documentation and code:\n      \n        \n          \n            {{ menu.label }}\n          \n        \n      \n    \n  \n\n\n    \n\n    \n                \n                    home-page.component.scss\n                \n                \n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '            Welcome to the Tinynodes Demo Site      A collection of Angular and TypeScript libraries for the web                      This site contains demos of components released under @tinynodes on npm, you can find a list of them on        the menu to the left.            You can also visit the sites below for additional documentation and code:                                    {{ menu.label }}                              '\n    var COMPONENTS = [{'name': 'AppContainerComponent', 'selector': 'tinynodes-root'},{'name': 'FormContainerComponent', 'selector': 'ngx-form-container'},{'name': 'HomePageComponent', 'selector': 'tinynodes-home-page'},{'name': 'NavBarComponent', 'selector': 'tinynodes-nav-bar'},{'name': 'NgxEditorJSBaseComponent', 'selector': ''},{'name': 'NgxEditorJSComponent', 'selector': 'ngx-editorjs'},{'name': 'NgxEditorJSDemoHomeComponent', 'selector': 'ngx-editorjs-demo-home'},{'name': 'NgxEditorJSDemoInfoComponent', 'selector': 'ngx-editorjs-demo-info'},{'name': 'NgxEditorJSDemoTagComponent', 'selector': 'ngx-editorjs-tag-component'},{'name': 'NgxEditorJSMatFieldComponent', 'selector': 'ngx-editorjs-mat-field'},{'name': 'PageContainerComponent', 'selector': 'ngx-page-container'},{'name': 'SidebarComponent', 'selector': 'tinynodes-sidebar'}];\n    var DIRECTIVES = [{'name': 'NgxEditorJSDirective', 'selector': '[ngxEditorJS]'}];\n    var ACTUAL_COMPONENT = {'name': 'HomePageComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/Image.html":{"url":"interfaces/Image.html","title":"interface - Image","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  Image\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            libs/ngx-editorjs/src/lib/types/blocks.ts\n        \n\n            \n                Description\n            \n            \n                Default data type for a header block\n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                            Optional\n                                        caption\n                                \n                                \n                                            Optional\n                                        stretched\n                                \n                                \n                                        url\n                                \n                                \n                                            Optional\n                                        withBackground\n                                \n                                \n                                            Optional\n                                        withBorder\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        caption\n                                    \n                                \n                                \n                                    \n                                        caption:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    Optional image caption\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        stretched\n                                    \n                                \n                                \n                                    \n                                        stretched:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    Optional stretch property\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        url\n                                    \n                                \n                                \n                                    \n                                        url:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    The image URL\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        withBackground\n                                    \n                                \n                                \n                                    \n                                        withBackground:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    Optional background property\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        withBorder\n                                    \n                                \n                                \n                                    \n                                        withBorder:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    Optional border property\n\n                                \n                            \n                        \n                    \n            \n    \n\n\n    \n        export interface Block {\n  /**\n   * The EditorJS block type\n   */\n  type: string;\n\n  /**\n   * The data interface for the block type\n   */\n  data: T;\n\n  /**\n   * Additional properties on the type\n   */\n  [key: string]: any;\n}\n\n/**\n * Available list styles, supports `ordered` and `unordered`.\n * A custom string can also be added\n */\nexport type ListStyle = 'ordered' | 'unordered' | string;\n\n/**\n * Default data type for a list block\n */\nexport interface List {\n  /**\n   * The list style\n   */\n  style: ListStyle;\n  /**\n   * List items of type T\n   */\n  items: T[];\n}\n\n/**\n * The default list block is provided by the EditorJS list plugin\n */\nexport interface ListBlock extends Block> {\n  /**\n   * The EditorJS block type\n   */\n  type: 'list';\n}\n\n/**\n * Default data type for a paragraph block\n */\ninterface Paragraph {\n  /**\n   * The paragraph text\n   */\n  text: string;\n}\n\n/**\n * Interface for a paragraph block\n */\nexport interface ParagraphBlock extends Block {\n  /**\n   * The EditorJS block type\n   */\n  type: 'paragraph';\n}\n\n/**\n * Default data type for a header block\n */\ninterface Header {\n  /**\n   * The header text\n   */\n  text: string;\n  /**\n   * The header level from 1-6\n   */\n  level: number;\n}\n\n/**\n * Interface for a header block\n */\nexport interface HeaderBlock extends Block {\n  /**\n   * The EditorJS block type\n   */\n  type: 'header';\n}\n\n/**\n * Default data type for a header block\n */\nexport interface Image {\n  /**\n   * The image URL\n   */\n  url: string;\n  /**\n   * Optional image caption\n   */\n  caption?: string;\n  /**\n   * Optional border property\n   */\n  withBorder?: boolean;\n\n  /**\n   * Optional background property\n   */\n  withBackground?: boolean;\n\n  /**\n   * Optional stretch property\n   */\n  stretched?: boolean;\n}\n\n/**\n * Interface for a image block\n */\nexport interface ImageBlock extends Block {\n  /**\n   * The EditorJS block type\n   */\n  type: 'image';\n}\n\n/**\n * Type of all the basic block type\n */\nexport type BlockTypes = ParagraphBlock | HeaderBlock | ImageBlock | ListBlock | Block;\n\n    \n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/ImageBlock.html":{"url":"interfaces/ImageBlock.html","title":"interface - ImageBlock","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  ImageBlock\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            libs/ngx-editorjs/src/lib/types/blocks.ts\n        \n\n            \n                Description\n            \n            \n                Interface for a image block\n\n            \n\n            \n                Extends\n            \n            \n                        Block\n            \n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        type\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        type\n                                    \n                                \n                                \n                                    \n                                        type:     \n\n                                    \n                                \n\n\n\n\n\n\n\n                            \n                                \n                                    The EditorJS block type\n\n                                \n                            \n                        \n                    \n            \n    \n\n\n    \n        export interface Block {\n  /**\n   * The EditorJS block type\n   */\n  type: string;\n\n  /**\n   * The data interface for the block type\n   */\n  data: T;\n\n  /**\n   * Additional properties on the type\n   */\n  [key: string]: any;\n}\n\n/**\n * Available list styles, supports `ordered` and `unordered`.\n * A custom string can also be added\n */\nexport type ListStyle = 'ordered' | 'unordered' | string;\n\n/**\n * Default data type for a list block\n */\nexport interface List {\n  /**\n   * The list style\n   */\n  style: ListStyle;\n  /**\n   * List items of type T\n   */\n  items: T[];\n}\n\n/**\n * The default list block is provided by the EditorJS list plugin\n */\nexport interface ListBlock extends Block> {\n  /**\n   * The EditorJS block type\n   */\n  type: 'list';\n}\n\n/**\n * Default data type for a paragraph block\n */\ninterface Paragraph {\n  /**\n   * The paragraph text\n   */\n  text: string;\n}\n\n/**\n * Interface for a paragraph block\n */\nexport interface ParagraphBlock extends Block {\n  /**\n   * The EditorJS block type\n   */\n  type: 'paragraph';\n}\n\n/**\n * Default data type for a header block\n */\ninterface Header {\n  /**\n   * The header text\n   */\n  text: string;\n  /**\n   * The header level from 1-6\n   */\n  level: number;\n}\n\n/**\n * Interface for a header block\n */\nexport interface HeaderBlock extends Block {\n  /**\n   * The EditorJS block type\n   */\n  type: 'header';\n}\n\n/**\n * Default data type for a header block\n */\nexport interface Image {\n  /**\n   * The image URL\n   */\n  url: string;\n  /**\n   * Optional image caption\n   */\n  caption?: string;\n  /**\n   * Optional border property\n   */\n  withBorder?: boolean;\n\n  /**\n   * Optional background property\n   */\n  withBackground?: boolean;\n\n  /**\n   * Optional stretch property\n   */\n  stretched?: boolean;\n}\n\n/**\n * Interface for a image block\n */\nexport interface ImageBlock extends Block {\n  /**\n   * The EditorJS block type\n   */\n  type: 'image';\n}\n\n/**\n * Type of all the basic block type\n */\nexport type BlockTypes = ParagraphBlock | HeaderBlock | ImageBlock | ListBlock | Block;\n\n    \n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/InjectorMethodOption.html":{"url":"interfaces/InjectorMethodOption.html","title":"interface - InjectorMethodOption","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  InjectorMethodOption\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            libs/ngx-editorjs/src/lib/types/injector.ts\n        \n\n            \n                Description\n            \n            \n                Options for a Injector method\n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                            Optional\n                                        blocks\n                                \n                                \n                                            Optional\n                                        editor\n                                \n                                \n                                        holder\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        blocks\n                                    \n                                \n                                \n                                    \n                                        blocks:         Block[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         Block[]\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    Optional blocks\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        editor\n                                    \n                                \n                                \n                                    \n                                        editor:     EditorJS\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     EditorJS\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    Optional editor\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        holder\n                                    \n                                \n                                \n                                    \n                                        holder:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    The holder for the option\n\n                                \n                            \n                        \n                    \n            \n    \n\n\n    \n        import { InjectionToken } from '@angular/core';\nimport EditorJS, { EditorConfig } from '@editorjs/editorjs';\nimport { Block } from './blocks';\n/**\n * Configuration for creating an EditorJS instance\n */\nexport interface EditorJSInstanceConfig {\n  /**\n   * The editor configuration, this is required with at least the `holder` property\n   */\n  editorConfig: EditorConfig;\n  /**\n   * The method to call when the editor makes a change\n   */\n  onChange?: (holder?: string) => void;\n\n  /**\n   * The method to call with an editor is ready\n   */\n  onReady?: (holder?: string) => void;\n}\n\n/**\n * Default values for each internal map\n */\nexport const MAP_DEFAULTS = [['blocksMap', []], ['changeMap', 0], ['readyMap', false]];\n\n/**\n * Injection token for the EditorJS class\n */\nexport const EDITORJS_MODULE_IMPORT = new InjectionToken('EDITORJS_MODULE_IMPORT');\n\nexport const EditorJSInstance = new InjectionToken('EditorJSInstance');\n\n/**\n * Options for a Injector method\n */\nexport interface InjectorMethodOption {\n  /**\n   * The holder for the option\n   */\n  holder: string;\n  /**\n   * Optional blocks\n   */\n  blocks?: Block[];\n  /**\n   * Optional editor\n   */\n  editor?: EditorJS;\n}\n\n    \n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/List.html":{"url":"interfaces/List.html","title":"interface - List","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  List\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            libs/ngx-editorjs/src/lib/types/blocks.ts\n        \n\n            \n                Description\n            \n            \n                Default data type for a list block\n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        items\n                                \n                                \n                                        style\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        items\n                                    \n                                \n                                \n                                    \n                                        items:     T[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     T[]\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    List items of type T\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        style\n                                    \n                                \n                                \n                                    \n                                        style:         ListStyle\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         ListStyle\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    The list style\n\n                                \n                            \n                        \n                    \n            \n    \n\n\n    \n        export interface Block {\n  /**\n   * The EditorJS block type\n   */\n  type: string;\n\n  /**\n   * The data interface for the block type\n   */\n  data: T;\n\n  /**\n   * Additional properties on the type\n   */\n  [key: string]: any;\n}\n\n/**\n * Available list styles, supports `ordered` and `unordered`.\n * A custom string can also be added\n */\nexport type ListStyle = 'ordered' | 'unordered' | string;\n\n/**\n * Default data type for a list block\n */\nexport interface List {\n  /**\n   * The list style\n   */\n  style: ListStyle;\n  /**\n   * List items of type T\n   */\n  items: T[];\n}\n\n/**\n * The default list block is provided by the EditorJS list plugin\n */\nexport interface ListBlock extends Block> {\n  /**\n   * The EditorJS block type\n   */\n  type: 'list';\n}\n\n/**\n * Default data type for a paragraph block\n */\ninterface Paragraph {\n  /**\n   * The paragraph text\n   */\n  text: string;\n}\n\n/**\n * Interface for a paragraph block\n */\nexport interface ParagraphBlock extends Block {\n  /**\n   * The EditorJS block type\n   */\n  type: 'paragraph';\n}\n\n/**\n * Default data type for a header block\n */\ninterface Header {\n  /**\n   * The header text\n   */\n  text: string;\n  /**\n   * The header level from 1-6\n   */\n  level: number;\n}\n\n/**\n * Interface for a header block\n */\nexport interface HeaderBlock extends Block {\n  /**\n   * The EditorJS block type\n   */\n  type: 'header';\n}\n\n/**\n * Default data type for a header block\n */\nexport interface Image {\n  /**\n   * The image URL\n   */\n  url: string;\n  /**\n   * Optional image caption\n   */\n  caption?: string;\n  /**\n   * Optional border property\n   */\n  withBorder?: boolean;\n\n  /**\n   * Optional background property\n   */\n  withBackground?: boolean;\n\n  /**\n   * Optional stretch property\n   */\n  stretched?: boolean;\n}\n\n/**\n * Interface for a image block\n */\nexport interface ImageBlock extends Block {\n  /**\n   * The EditorJS block type\n   */\n  type: 'image';\n}\n\n/**\n * Type of all the basic block type\n */\nexport type BlockTypes = ParagraphBlock | HeaderBlock | ImageBlock | ListBlock | Block;\n\n    \n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/ListBlock.html":{"url":"interfaces/ListBlock.html","title":"interface - ListBlock","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  ListBlock\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            libs/ngx-editorjs/src/lib/types/blocks.ts\n        \n\n            \n                Description\n            \n            \n                The default list block is provided by the EditorJS list plugin\n\n            \n\n            \n                Extends\n            \n            \n                        Block\n            \n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        type\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        type\n                                    \n                                \n                                \n                                    \n                                        type:     \n\n                                    \n                                \n\n\n\n\n\n\n\n                            \n                                \n                                    The EditorJS block type\n\n                                \n                            \n                        \n                    \n            \n    \n\n\n    \n        export interface Block {\n  /**\n   * The EditorJS block type\n   */\n  type: string;\n\n  /**\n   * The data interface for the block type\n   */\n  data: T;\n\n  /**\n   * Additional properties on the type\n   */\n  [key: string]: any;\n}\n\n/**\n * Available list styles, supports `ordered` and `unordered`.\n * A custom string can also be added\n */\nexport type ListStyle = 'ordered' | 'unordered' | string;\n\n/**\n * Default data type for a list block\n */\nexport interface List {\n  /**\n   * The list style\n   */\n  style: ListStyle;\n  /**\n   * List items of type T\n   */\n  items: T[];\n}\n\n/**\n * The default list block is provided by the EditorJS list plugin\n */\nexport interface ListBlock extends Block> {\n  /**\n   * The EditorJS block type\n   */\n  type: 'list';\n}\n\n/**\n * Default data type for a paragraph block\n */\ninterface Paragraph {\n  /**\n   * The paragraph text\n   */\n  text: string;\n}\n\n/**\n * Interface for a paragraph block\n */\nexport interface ParagraphBlock extends Block {\n  /**\n   * The EditorJS block type\n   */\n  type: 'paragraph';\n}\n\n/**\n * Default data type for a header block\n */\ninterface Header {\n  /**\n   * The header text\n   */\n  text: string;\n  /**\n   * The header level from 1-6\n   */\n  level: number;\n}\n\n/**\n * Interface for a header block\n */\nexport interface HeaderBlock extends Block {\n  /**\n   * The EditorJS block type\n   */\n  type: 'header';\n}\n\n/**\n * Default data type for a header block\n */\nexport interface Image {\n  /**\n   * The image URL\n   */\n  url: string;\n  /**\n   * Optional image caption\n   */\n  caption?: string;\n  /**\n   * Optional border property\n   */\n  withBorder?: boolean;\n\n  /**\n   * Optional background property\n   */\n  withBackground?: boolean;\n\n  /**\n   * Optional stretch property\n   */\n  stretched?: boolean;\n}\n\n/**\n * Interface for a image block\n */\nexport interface ImageBlock extends Block {\n  /**\n   * The EditorJS block type\n   */\n  type: 'image';\n}\n\n/**\n * Type of all the basic block type\n */\nexport type BlockTypes = ParagraphBlock | HeaderBlock | ImageBlock | ListBlock | Block;\n\n    \n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/MaterialModule.html":{"url":"modules/MaterialModule.html","title":"module - MaterialModule","body":"\n                   \n\n\n\n\n    Modules\n    MaterialModule\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            apps/ngx-tinynodes/src/app/material.module.ts\n        \n\n\n        \n            Description\n        \n        \n            This internal module loads the required features for Angular Material\n\n        \n\n\n        \n            \n            \n        \n\n\n    \n\n\n    \n        import { NgModule } from '@angular/core';\n\nimport {\n  MatSidenavModule,\n  MatToolbarModule,\n  MatIconModule,\n  MatListModule,\n  MatCardModule,\n  MatButtonModule\n} from '@angular/material';\n\n/**\n * This internal module loads the required features for Angular Material\n */\n@NgModule({\n  imports: [MatSidenavModule, MatToolbarModule, MatIconModule, MatListModule, MatCardModule, MatButtonModule],\n  exports: [MatSidenavModule, MatToolbarModule, MatIconModule, MatListModule, MatCardModule, MatButtonModule]\n})\nexport class MaterialModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/MenuGroup.html":{"url":"interfaces/MenuGroup.html","title":"interface - MenuGroup","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  MenuGroup\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            libs/ngx-tinynodes-core/src/lib/types/app.ts\n        \n\n            \n                Description\n            \n            \n                A menu group describes a set of menu items with a key and optional title\n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        items\n                                \n                                \n                                        key\n                                \n                                \n                                            Optional\n                                        title\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        items\n                                    \n                                \n                                \n                                    \n                                        items:     MenuItem[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     MenuItem[]\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    The menu items, can contain one or more items with children\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        key\n                                    \n                                \n                                \n                                    \n                                        key:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    The key of the menu (e.g. sidebar, topnav, etc)\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        title\n                                    \n                                \n                                \n                                    \n                                        title:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    Optional title to render in the menu\n\n                                \n                            \n                        \n                    \n            \n    \n\n\n    \n        import { RouterLink } from '@angular/router';\n\n/**\n * A menu item in the Tinynodes app\n */\nexport interface MenuItem {\n  /**\n   * The display label for the app\n   */\n  label: string;\n  /**\n   * Optional icon for the menu item\n   */\n  icon?: string;\n  /**\n   * Description of the item, used for title, aria, etc\n   */\n  description?: string;\n  /**\n   * The {RouterLink} for the menu item or a string url\n   */\n  link?: RouterLink | string;\n\n  /**\n   * Any children to render in the menu\n   */\n  children?: MenuItem[];\n}\n\n/**\n * A menu group describes a set of menu items with a key and optional title\n */\nexport interface MenuGroup {\n  /**\n   * The key of the menu (e.g. `sidebar`, `topnav`, etc)\n   */\n  key: string;\n  /**\n   * Optional title to render in the menu\n   */\n  title?: string;\n\n  /**\n   * The menu items, can contain one or more items with children\n   */\n  items: MenuItem[];\n}\n\n/**\n * The aggregate application interface\n */\nexport interface ApplicationData {\n  /**\n   * If the sidebar menu is hidden\n   */\n  hidden: boolean;\n\n  /**\n   * An list of menu groups available in the apps\n   */\n  menus: MenuGroup[];\n}\n\n    \n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/MenuGroup-1.html":{"url":"interfaces/MenuGroup-1.html","title":"interface - MenuGroup-1","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  MenuGroup\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/ngx-tinynodes/src/app/core/types/app.ts\n        \n\n            \n                Description\n            \n            \n                A menu group describes a set of menu items with a key and optional title\n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        items\n                                \n                                \n                                        key\n                                \n                                \n                                            Optional\n                                        title\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        items\n                                    \n                                \n                                \n                                    \n                                        items:     MenuItem[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     MenuItem[]\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    The menu items, can contain one or more items with children\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        key\n                                    \n                                \n                                \n                                    \n                                        key:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    The key of the menu (e.g. sidebar, topnav, etc)\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        title\n                                    \n                                \n                                \n                                    \n                                        title:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    Optional title to render in the menu\n\n                                \n                            \n                        \n                    \n            \n    \n\n\n    \n        import { RouterLink } from '@angular/router';\n\n/**\n * A menu item in the Tinynodes app\n */\nexport interface MenuItem {\n  /**\n   * The display label for the app\n   */\n  label: string;\n  /**\n   * Optional icon for the menu item\n   */\n  icon?: string;\n  /**\n   * Description of the item, used for title, aria, etc\n   */\n  description?: string;\n  /**\n   * The {RouterLink} for the menu item or a string url\n   */\n  link?: RouterLink | string;\n\n  /**\n   * Any children to render in the menu\n   */\n  children?: MenuItem[];\n}\n\n/**\n * A menu group describes a set of menu items with a key and optional title\n */\nexport interface MenuGroup {\n  /**\n   * The key of the menu (e.g. `sidebar`, `topnav`, etc)\n   */\n  key: string;\n  /**\n   * Optional title to render in the menu\n   */\n  title?: string;\n\n  /**\n   * The menu items, can contain one or more items with children\n   */\n  items: MenuItem[];\n}\n\n/**\n * The aggregate application interface\n */\nexport interface ApplicationData {\n  /**\n   * If the sidebar menu is hidden\n   */\n  hidden: boolean;\n\n  /**\n   * An list of menu groups available in the apps\n   */\n  menus: MenuGroup[];\n}\n\n    \n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/MenuItem.html":{"url":"interfaces/MenuItem.html","title":"interface - MenuItem","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  MenuItem\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            libs/ngx-tinynodes-core/src/lib/types/app.ts\n        \n\n            \n                Description\n            \n            \n                A menu item in the Tinynodes app\n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                            Optional\n                                        children\n                                \n                                \n                                            Optional\n                                        description\n                                \n                                \n                                            Optional\n                                        icon\n                                \n                                \n                                        label\n                                \n                                \n                                            Optional\n                                        link\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        children\n                                    \n                                \n                                \n                                    \n                                        children:     MenuItem[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     MenuItem[]\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    Any children to render in the menu\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        description\n                                    \n                                \n                                \n                                    \n                                        description:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    Description of the item, used for title, aria, etc\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        icon\n                                    \n                                \n                                \n                                    \n                                        icon:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    Optional icon for the menu item\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        label\n                                    \n                                \n                                \n                                    \n                                        label:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    The display label for the app\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        link\n                                    \n                                \n                                \n                                    \n                                        link:     RouterLink | string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     RouterLink | string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    The {RouterLink} for the menu item or a string url\n\n                                \n                            \n                        \n                    \n            \n    \n\n\n    \n        import { RouterLink } from '@angular/router';\n\n/**\n * A menu item in the Tinynodes app\n */\nexport interface MenuItem {\n  /**\n   * The display label for the app\n   */\n  label: string;\n  /**\n   * Optional icon for the menu item\n   */\n  icon?: string;\n  /**\n   * Description of the item, used for title, aria, etc\n   */\n  description?: string;\n  /**\n   * The {RouterLink} for the menu item or a string url\n   */\n  link?: RouterLink | string;\n\n  /**\n   * Any children to render in the menu\n   */\n  children?: MenuItem[];\n}\n\n/**\n * A menu group describes a set of menu items with a key and optional title\n */\nexport interface MenuGroup {\n  /**\n   * The key of the menu (e.g. `sidebar`, `topnav`, etc)\n   */\n  key: string;\n  /**\n   * Optional title to render in the menu\n   */\n  title?: string;\n\n  /**\n   * The menu items, can contain one or more items with children\n   */\n  items: MenuItem[];\n}\n\n/**\n * The aggregate application interface\n */\nexport interface ApplicationData {\n  /**\n   * If the sidebar menu is hidden\n   */\n  hidden: boolean;\n\n  /**\n   * An list of menu groups available in the apps\n   */\n  menus: MenuGroup[];\n}\n\n    \n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/MenuItem-1.html":{"url":"interfaces/MenuItem-1.html","title":"interface - MenuItem-1","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  MenuItem\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/ngx-tinynodes/src/app/core/types/app.ts\n        \n\n            \n                Description\n            \n            \n                A menu item in the Tinynodes app\n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                            Optional\n                                        children\n                                \n                                \n                                            Optional\n                                        description\n                                \n                                \n                                            Optional\n                                        icon\n                                \n                                \n                                        label\n                                \n                                \n                                            Optional\n                                        link\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        children\n                                    \n                                \n                                \n                                    \n                                        children:     MenuItem[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     MenuItem[]\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    Any children to render in the menu\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        description\n                                    \n                                \n                                \n                                    \n                                        description:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    Description of the item, used for title, aria, etc\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        icon\n                                    \n                                \n                                \n                                    \n                                        icon:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    Optional icon for the menu item\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        label\n                                    \n                                \n                                \n                                    \n                                        label:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    The display label for the app\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        link\n                                    \n                                \n                                \n                                    \n                                        link:     RouterLink | string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     RouterLink | string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    The {RouterLink} for the menu item or a string url\n\n                                \n                            \n                        \n                    \n            \n    \n\n\n    \n        import { RouterLink } from '@angular/router';\n\n/**\n * A menu item in the Tinynodes app\n */\nexport interface MenuItem {\n  /**\n   * The display label for the app\n   */\n  label: string;\n  /**\n   * Optional icon for the menu item\n   */\n  icon?: string;\n  /**\n   * Description of the item, used for title, aria, etc\n   */\n  description?: string;\n  /**\n   * The {RouterLink} for the menu item or a string url\n   */\n  link?: RouterLink | string;\n\n  /**\n   * Any children to render in the menu\n   */\n  children?: MenuItem[];\n}\n\n/**\n * A menu group describes a set of menu items with a key and optional title\n */\nexport interface MenuGroup {\n  /**\n   * The key of the menu (e.g. `sidebar`, `topnav`, etc)\n   */\n  key: string;\n  /**\n   * Optional title to render in the menu\n   */\n  title?: string;\n\n  /**\n   * The menu items, can contain one or more items with children\n   */\n  items: MenuItem[];\n}\n\n/**\n * The aggregate application interface\n */\nexport interface ApplicationData {\n  /**\n   * If the sidebar menu is hidden\n   */\n  hidden: boolean;\n\n  /**\n   * An list of menu groups available in the apps\n   */\n  menus: MenuGroup[];\n}\n\n    \n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/MockEditorJS.html":{"url":"classes/MockEditorJS.html","title":"class - MockEditorJS","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  MockEditorJS\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            libs/ngx-editorjs/src/testing/shared.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                blocks\n                            \n                            \n                                destroy\n                            \n                            \n                                isReady\n                            \n                            \n                                saver\n                            \n                            \n                                version\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(config: EditorJSConfig)\n                    \n                \n                        \n                            \n                                Defined in libs/ngx-editorjs/src/testing/shared.ts:27\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        config\n                                                  \n                                                        \n                                                                        EditorJSConfig\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            blocks\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         any\n\n                        \n                    \n                        \n                            \n                                    Defined in libs/ngx-editorjs/src/testing/shared.ts:22\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            destroy\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         function\n\n                        \n                    \n                        \n                            \n                                    Defined in libs/ngx-editorjs/src/testing/shared.ts:25\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            isReady\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     Promise\n\n                        \n                    \n                        \n                            \n                                    Defined in libs/ngx-editorjs/src/testing/shared.ts:27\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            saver\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         any\n\n                        \n                    \n                        \n                            \n                                    Defined in libs/ngx-editorjs/src/testing/shared.ts:23\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            version\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in libs/ngx-editorjs/src/testing/shared.ts:24\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { ToolSettings } from '@editorjs/editorjs';\nimport { BasePlugin } from '../lib/types/plugins';\nimport { EditorJSConfig } from '../lib/types/config';\n\nexport class TestClass {\n  constructor() {}\n  render() {\n    return document.createElement('div');\n  }\n}\n\nexport class MockPlugin implements BasePlugin {\n  public plugin(): ToolSettings {\n    return { class: TestClass };\n  }\n  shortcut() {\n    return 'test-shortcut';\n  }\n}\n\nexport class MockEditorJS {\n  blocks: any;\n  saver: any;\n  version: string;\n  destroy: () => void;\n\n  isReady: Promise;\n\n  constructor(private config: EditorJSConfig) {\n    this.version = 'test';\n\n    this.isReady = Promise.resolve();\n\n    this.destroy = () => {};\n\n    this.blocks = {\n      clear: () => {},\n      render: () => {}\n    };\n\n    this.saver = {\n      save: (): Promise => {\n        return Promise.resolve({\n          time: Date.now(),\n          version: 'test',\n          blocks: []\n        });\n      }\n    };\n    (config as any).onReady();\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/MockNgZone.html":{"url":"injectables/MockNgZone.html","title":"injectable - MockNgZone","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  MockNgZone\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            libs/ngx-editorjs/src/testing/ng-zone-mock.ts\n        \n\n            \n                Description\n            \n            \n                A mock implementation of NgZone.\n\n            \n\n            \n                Extends\n            \n            \n                        NgZone\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                onStable\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                run\n                            \n                            \n                                runOutsideAngular\n                            \n                            \n                                simulateZoneExit\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in libs/ngx-editorjs/src/testing/ng-zone-mock.ts:16\n                            \n                        \n\n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            run\n                        \n                        \n                    \n                \n            \n            \n                \nrun(fn: Function)\n                \n            \n\n\n            \n                \n                    Defined in libs/ngx-editorjs/src/testing/ng-zone-mock.ts:22\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    fn\n                                    \n                                                Function\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            runOutsideAngular\n                        \n                        \n                    \n                \n            \n            \n                \nrunOutsideAngular(fn: Function)\n                \n            \n\n\n            \n                \n                    Defined in libs/ngx-editorjs/src/testing/ng-zone-mock.ts:26\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    fn\n                                    \n                                                Function\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            simulateZoneExit\n                        \n                        \n                    \n                \n            \n            \n                \nsimulateZoneExit()\n                \n            \n\n\n            \n                \n                    Defined in libs/ngx-editorjs/src/testing/ng-zone-mock.ts:30\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            onStable\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     EventEmitter\n\n                        \n                    \n                    \n                        \n                            Default value : new EventEmitter(false)\n                        \n                    \n                        \n                            \n                                    Defined in libs/ngx-editorjs/src/testing/ng-zone-mock.ts:16\n                            \n                        \n\n\n            \n        \n\n\n    \n\n\n    \n        import { EventEmitter, Injectable, NgZone } from '@angular/core';\n\n/**\n * A mock implementation of {@link NgZone}.\n */\n@Injectable()\nexport class MockNgZone extends NgZone {\n  onStable: EventEmitter = new EventEmitter(false);\n\n  constructor() {\n    super({ enableLongStackTrace: false });\n  }\n\n  run(fn: Function): any {\n    return fn();\n  }\n\n  runOutsideAngular(fn: Function): any {\n    return fn();\n  }\n\n  simulateZoneExit(): void {\n    this.onStable.emit(null);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/MockPlugin.html":{"url":"classes/MockPlugin.html","title":"class - MockPlugin","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  MockPlugin\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            libs/ngx-editorjs/src/testing/shared.ts\n        \n\n\n\n            \n                Implements\n            \n            \n                            BasePlugin\n            \n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                plugin\n                            \n                            \n                                shortcut\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            plugin\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    plugin()\n                \n            \n\n\n            \n                \n                    Defined in libs/ngx-editorjs/src/testing/shared.ts:13\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :     ToolSettings\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            shortcut\n                        \n                        \n                    \n                \n            \n            \n                \nshortcut()\n                \n            \n\n\n            \n                \n                    Defined in libs/ngx-editorjs/src/testing/shared.ts:16\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         string\n\n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { ToolSettings } from '@editorjs/editorjs';\nimport { BasePlugin } from '../lib/types/plugins';\nimport { EditorJSConfig } from '../lib/types/config';\n\nexport class TestClass {\n  constructor() {}\n  render() {\n    return document.createElement('div');\n  }\n}\n\nexport class MockPlugin implements BasePlugin {\n  public plugin(): ToolSettings {\n    return { class: TestClass };\n  }\n  shortcut() {\n    return 'test-shortcut';\n  }\n}\n\nexport class MockEditorJS {\n  blocks: any;\n  saver: any;\n  version: string;\n  destroy: () => void;\n\n  isReady: Promise;\n\n  constructor(private config: EditorJSConfig) {\n    this.version = 'test';\n\n    this.isReady = Promise.resolve();\n\n    this.destroy = () => {};\n\n    this.blocks = {\n      clear: () => {},\n      render: () => {}\n    };\n\n    this.saver = {\n      save: (): Promise => {\n        return Promise.resolve({\n          time: Date.now(),\n          version: 'test',\n          blocks: []\n        });\n      }\n    };\n    (config as any).onReady();\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/NavBarComponent.html":{"url":"components/NavBarComponent.html","title":"component - NavBarComponent","body":"\n                   \n\n\n\n\n\n  Components\n  NavBarComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    apps/ngx-tinynodes/src/app/components/nav-bar/nav-bar.component.ts\n\n\n    \n        Description\n    \n    \n        Internal NavBar component for the Tinynodes application, provides\ncontrol over the sidebar toggle and displays the main menu\n\n    \n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                tinynodes-nav-bar\n            \n\n            \n                styleUrls\n                nav-bar.component.scss\n            \n\n\n\n            \n                templateUrl\n                nav-bar.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n\n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                menu\n                            \n                            \n                                title\n                            \n                        \n                    \n                \n\n                \n                    \n                        Outputs\n                    \n                \n                \n                    \n                        \n                            \n                                toggleSidebar\n                            \n                        \n                    \n                \n\n\n\n        \n    \n\n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        menu\n                    \n                \n                \n                    \n                        Type :         MenuGroup\n\n                    \n                \n                        \n                            \n                                    Defined in apps/ngx-tinynodes/src/app/components/nav-bar/nav-bar.component.ts:21\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        title\n                    \n                \n                \n                    \n                        Default value : 'Navbar Component'\n                    \n                \n                        \n                            \n                                    Defined in apps/ngx-tinynodes/src/app/components/nav-bar/nav-bar.component.ts:18\n                            \n                        \n                \n                    \n                        Set the title of the component\n\n                    \n                \n            \n        \n\n    \n    Outputs\n        \n            \n                \n                    \n                        \n                        toggleSidebar\n                    \n                \n                \n                    \n                        Type :         EventEmitter\n\n                    \n                \n                        \n                            \n                                    Defined in apps/ngx-tinynodes/src/app/components/nav-bar/nav-bar.component.ts:27\n                            \n                        \n                \n                    \n                        Get an event when the sidebar toggle has been pressed\n\n                    \n                \n            \n        \n\n\n\n\n\n\n\n\n    \n        import { Component, EventEmitter, Input, Output } from '@angular/core';\nimport { MenuGroup } from '@tinynodes/ngx-tinynodes-core';\n\n/**\n * Internal NavBar component for the Tinynodes application, provides\n * control over the sidebar toggle and displays the main menu\n */\n@Component({\n  selector: 'tinynodes-nav-bar',\n  templateUrl: 'nav-bar.component.html',\n  styleUrls: ['nav-bar.component.scss']\n})\nexport class NavBarComponent {\n  /**\n   * Set the title of the component\n   */\n  @Input()\n  title = 'Navbar Component';\n\n  @Input()\n  menu: MenuGroup;\n\n  /**\n   * Get an event when the sidebar toggle has been pressed\n   */\n  @Output()\n  toggleSidebar = new EventEmitter();\n}\n\n    \n\n    \n        \n  \n    menu\n  \n  &nbsp;\n  \n    {{ title }}\n  \n  \n    \n      \n        \n          {{ menuItem.label }}\n        \n      \n    \n  \n\n\n    \n\n    \n                \n                    nav-bar.component.scss\n                \n                a {\n  text-decoration: none;\n  color: white;\n}\n\na:hover,\na:active {\n  color: lightgray;\n}\n\n.navigation-items {\n  list-style: none;\n  padding: 0;\n  margin: 0;\n  cursor: pointer;\n}\n\n.icon {\n  display: inline-block;\n  height: 30px;\n  margin: 0 auto;\n  padding-right: 5px;\n  text-align: center;\n  vertical-align: middle;\n  width: 15%;\n}\n\n.label {\n  display: inline-block;\n  line-height: 30px;\n  margin: 0;\n  width: 85%;\n}\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '      menu           {{ title }}                                {{ menuItem.label }}                    '\n    var COMPONENTS = [{'name': 'AppContainerComponent', 'selector': 'tinynodes-root'},{'name': 'FormContainerComponent', 'selector': 'ngx-form-container'},{'name': 'HomePageComponent', 'selector': 'tinynodes-home-page'},{'name': 'NavBarComponent', 'selector': 'tinynodes-nav-bar'},{'name': 'NgxEditorJSBaseComponent', 'selector': ''},{'name': 'NgxEditorJSComponent', 'selector': 'ngx-editorjs'},{'name': 'NgxEditorJSDemoHomeComponent', 'selector': 'ngx-editorjs-demo-home'},{'name': 'NgxEditorJSDemoInfoComponent', 'selector': 'ngx-editorjs-demo-info'},{'name': 'NgxEditorJSDemoTagComponent', 'selector': 'ngx-editorjs-tag-component'},{'name': 'NgxEditorJSMatFieldComponent', 'selector': 'ngx-editorjs-mat-field'},{'name': 'PageContainerComponent', 'selector': 'ngx-page-container'},{'name': 'SidebarComponent', 'selector': 'tinynodes-sidebar'}];\n    var DIRECTIVES = [{'name': 'NgxEditorJSDirective', 'selector': '[ngxEditorJS]'}];\n    var ACTUAL_COMPONENT = {'name': 'NavBarComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/NgxEditorJSBaseComponent.html":{"url":"components/NgxEditorJSBaseComponent.html","title":"component - NgxEditorJSBaseComponent","body":"\n                   \n\n\n\n\n\n  Components\n  NgxEditorJSBaseComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    libs/ngx-editorjs/src/lib/containers/base/container.class.ts\n\n\n    \n        Description\n    \n    \n        A base EditorJS component, can be used to create other extended components\n\n    \n\n\n    \n        Implements\n    \n    \n                    OnDestroy\n                    AfterContentInit\n                    ControlValueAccessor\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n            \n                providers\n                \n                                EDITORJS_FORM_VALUE_ACCESSOR\n                \n            \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Protected\n                                _value\n                            \n                            \n                                    Public\n                                onChange\n                            \n                            \n                                    Protected\n                                onDestroy$\n                            \n                            \n                                    Public\n                                onTouch\n                            \n                            \n                                    Protected\n                                timerSubscription$\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                getChanged\n                            \n                            \n                                    Protected\n                                getFocusMonitor\n                            \n                            \n                                    Protected\n                                getTimer\n                            \n                            \n                                ngAfterContentInit\n                            \n                            \n                                ngOnDestroy\n                            \n                            \n                                    Public\n                                registerOnChange\n                            \n                            \n                                    Public\n                                registerOnTouched\n                            \n                            \n                                    Public\n                                writeValue\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                autofocus\n                            \n                            \n                                autosave\n                            \n                            \n                                blockPlaceholder\n                            \n                            \n                                blocks\n                            \n                            \n                                hideToolbar\n                            \n                            \n                                holder\n                            \n                            \n                                includeTools\n                            \n                            \n                                initialBlock\n                            \n                            \n                                minHeight\n                            \n                            \n                                sanitizer\n                            \n                        \n                    \n                \n\n                \n                    \n                        Outputs\n                    \n                \n                \n                    \n                        \n                            \n                                hasChanged\n                            \n                            \n                                isSaved\n                            \n                            \n                                isTouched\n                            \n                        \n                    \n                \n\n\n\n                    \n                        \n                            Accessors\n                        \n                    \n                    \n                        \n                            \n                                \n                                    isReady\n                                \n                            \n                        \n                    \n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(service: NgxEditorJSService, fm: FocusMonitor)\n                    \n                \n                        \n                            \n                                Defined in libs/ngx-editorjs/src/lib/containers/base/container.class.ts:92\n                            \n                        \n\n                \n                    \n                            When created an instance of the service is available as\na public interface\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        service\n                                                  \n                                                        \n                                                                        NgxEditorJSService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                The editor service\n\n                                                        \n                                                \n                                                \n                                                        fm\n                                                  \n                                                        \n                                                                    FocusMonitor\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        autofocus\n                    \n                \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                        \n                            \n                                    Defined in libs/ngx-editorjs/src/lib/containers/base/container.class.ts:36\n                            \n                        \n                \n                    \n                        Sets if the EditorJS component will request autofocus in the browser\n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        autosave\n                    \n                \n                \n                    \n                        Type :         number\n\n                    \n                \n                        \n                            \n                                    Defined in libs/ngx-editorjs/src/lib/containers/base/container.class.ts:86\n                            \n                        \n                \n                    \n                        If set, when the EditorJS save is called the Observable of blocks will be updated,\nif set to false on the change Observable will be updated\n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        blockPlaceholder\n                    \n                \n                \n                    \n                        Type :         string\n\n                    \n                \n                        \n                            \n                                    Defined in libs/ngx-editorjs/src/lib/containers/base/container.class.ts:66\n                            \n                        \n                \n                    \n                        First Block placeholder\n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        blocks\n                    \n                \n                \n                    \n                        Type :         Block[]\n\n                    \n                \n                        \n                            \n                                    Defined in libs/ngx-editorjs/src/lib/containers/base/container.class.ts:92\n                            \n                        \n                \n                    \n                        An initial set of blocks to render in the component\n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        hideToolbar\n                    \n                \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                        \n                            \n                                    Defined in libs/ngx-editorjs/src/lib/containers/base/container.class.ts:42\n                            \n                        \n                \n                    \n                        Sets if the toolbar will be shown in EditorJS\n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        holder\n                    \n                \n                \n                    \n                        Type :         string\n\n                    \n                \n                        \n                            \n                                    Defined in libs/ngx-editorjs/src/lib/containers/base/container.class.ts:48\n                            \n                        \n                \n                    \n                        The ID of the dom element that will hold the editor\n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        includeTools\n                    \n                \n                \n                    \n                        Type :     string[]\n\n                    \n                \n                \n                    \n                        Default value : []\n                    \n                \n                        \n                            \n                                    Defined in libs/ngx-editorjs/src/lib/containers/base/container.class.ts:79\n                            \n                        \n                \n                    \n                        A string array of tools that will be included in this instance, if empty\nall tools will be included\n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        initialBlock\n                    \n                \n                \n                    \n                        Type :         string\n\n                    \n                \n                        \n                            \n                                    Defined in libs/ngx-editorjs/src/lib/containers/base/container.class.ts:54\n                            \n                        \n                \n                    \n                        The name of the initial block (default \"paragraph\")\n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        minHeight\n                    \n                \n                \n                    \n                        Type :         number\n\n                    \n                \n                        \n                            \n                                    Defined in libs/ngx-editorjs/src/lib/containers/base/container.class.ts:60\n                            \n                        \n                \n                    \n                        Height of Editor's bottom area that allows to set focus on the last Block\n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        sanitizer\n                    \n                \n                \n                    \n                        Type :     SanitizerConfig\n\n                    \n                \n                        \n                            \n                                    Defined in libs/ngx-editorjs/src/lib/containers/base/container.class.ts:72\n                            \n                        \n                \n                    \n                        Define default sanitizer configuration\n\n                    \n                \n            \n        \n\n    \n    Outputs\n        \n            \n                \n                    \n                        \n                        hasChanged\n                    \n                \n                \n                    \n                        Type :         EventEmitter\n\n                    \n                \n                        \n                            \n                                    Defined in libs/ngx-editorjs/src/lib/containers/base/container.class.ts:150\n                            \n                        \n                \n                    \n                        Returns if the element has changed\n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        isSaved\n                    \n                \n                \n                    \n                        Type :         EventEmitter\n\n                    \n                \n                        \n                            \n                                    Defined in libs/ngx-editorjs/src/lib/containers/base/container.class.ts:110\n                            \n                        \n                \n                    \n                        Get the current saved state\n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        isTouched\n                    \n                \n                \n                    \n                        Type :         EventEmitter\n\n                    \n                \n                        \n                            \n                                    Defined in libs/ngx-editorjs/src/lib/containers/base/container.class.ts:137\n                            \n                        \n                \n                    \n                        Returns if the element has been touched\n\n                    \n                \n            \n        \n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            getChanged\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    getChanged()\n                \n            \n\n\n            \n                \n                    Defined in libs/ngx-editorjs/src/lib/containers/base/container.class.ts:229\n                \n            \n\n\n            \n                \n                    Get the changed status for the EditorJS instance\n\n\n                    \n                        Returns :     Observable\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Protected\n                            getFocusMonitor\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    getFocusMonitor(element: HTMLElement, checkChildren)\n                \n            \n\n\n            \n                \n                    Defined in libs/ngx-editorjs/src/lib/containers/base/container.class.ts:188\n                \n            \n\n\n            \n                \n                    Returns a focus monitor observable with the focus value,\nthe side effect of this monitor is to update the saved state and\nstart any autosave timers\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Default value\n                                    Description\n                                \n                            \n                            \n                                \n                                    element\n                                    \n                                            HTMLElement\n                                    \n\n                                    \n                                        No\n                                    \n\n                                    \n                                    \n\n                                    \n                                        The element to monitor\n\n                                    \n                                \n                                \n                                    checkChildren\n                                    \n                                    \n\n                                    \n                                        No\n                                    \n\n                                    \n                                        true\n                                    \n\n                                    \n                                        If the children should be checked\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Protected\n                            getTimer\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    getTimer(time: number, timeStart: number)\n                \n            \n\n\n            \n                \n                    Defined in libs/ngx-editorjs/src/lib/containers/base/container.class.ts:117\n                \n            \n\n\n            \n                \n                    Internal method to return a new timer for the autosave support\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Default value\n                                    Description\n                                \n                            \n                            \n                                \n                                    time\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n                                    \n                                    \n\n                                    \n                                        Time to do with autosave\n\n                                    \n                                \n                                \n                                    timeStart\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n                                    \n                                        0\n                                    \n\n                                    \n                                        When to trigger the first autosave\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Observable\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngAfterContentInit\n                        \n                        \n                    \n                \n            \n            \n                \nngAfterContentInit()\n                \n            \n\n\n            \n                \n                    Defined in libs/ngx-editorjs/src/lib/containers/base/container.class.ts:210\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngOnDestroy\n                        \n                        \n                    \n                \n            \n            \n                \nngOnDestroy()\n                \n            \n\n\n            \n                \n                    Defined in libs/ngx-editorjs/src/lib/containers/base/container.class.ts:212\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            registerOnChange\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    registerOnChange(fn: (blocks: Block[]) => void)\n                \n            \n\n\n            \n                \n                    Defined in libs/ngx-editorjs/src/lib/containers/base/container.class.ts:170\n                \n            \n\n\n            \n                \n                    Register on Change for forms\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    fn\n                                    \n                                                function\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            registerOnTouched\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    registerOnTouched(fn: (event: MouseEvent) => void)\n                \n            \n\n\n            \n                \n                    Defined in libs/ngx-editorjs/src/lib/containers/base/container.class.ts:177\n                \n            \n\n\n            \n                \n                    registerOnTouched for forms\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    fn\n                                    \n                                                function\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            writeValue\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    writeValue(blocks: Block[])\n                \n            \n\n\n            \n                \n                    Defined in libs/ngx-editorjs/src/lib/containers/base/container.class.ts:163\n                \n            \n\n\n            \n                \n                    Form Write Values\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    blocks\n                                    \n                                                Block[]\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Protected\n                            _value\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         any\n\n                        \n                    \n                        \n                            \n                                    Defined in libs/ngx-editorjs/src/lib/containers/base/container.class.ts:131\n                            \n                        \n\n                \n                    \n                        Form field value if used as a field component\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            onChange\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : () => {...}\n                        \n                    \n                        \n                            \n                                    Defined in libs/ngx-editorjs/src/lib/containers/base/container.class.ts:155\n                            \n                        \n\n                \n                    \n                        Field onChange method\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Protected\n                            onDestroy$\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : new Subject()\n                        \n                    \n                        \n                            \n                                    Defined in libs/ngx-editorjs/src/lib/containers/base/container.class.ts:31\n                            \n                        \n\n                \n                    \n                        Component Destroy subject\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            onTouch\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : () => {...}\n                        \n                    \n                        \n                            \n                                    Defined in libs/ngx-editorjs/src/lib/containers/base/container.class.ts:142\n                            \n                        \n\n                \n                    \n                        Field on touch method\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Protected\n                            timerSubscription$\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     Subscription\n\n                        \n                    \n                        \n                            \n                                    Defined in libs/ngx-editorjs/src/lib/containers/base/container.class.ts:104\n                            \n                        \n\n                \n                    \n                        Internal Subscription for the timer subscription\n\n                    \n                \n\n            \n        \n\n\n    \n    \n        Accessors\n    \n        \n            \n                \n                    \n                        \n                        isReady\n                    \n                \n\n                \n                    \n                        getisReady()\n                    \n                \n                            \n                                \n                                    Defined in libs/ngx-editorjs/src/lib/containers/base/container.class.ts:222\n                                \n                            \n                    \n                        \n                                Get the ready status for the EditorJS instance\n\n\n                                \n                                    Returns :     Observable\n\n                                \n                        \n                    \n\n            \n        \n\n\n\n\n    \n        import { FocusMonitor } from '@angular/cdk/a11y';\nimport { AfterContentInit, Component, EventEmitter, forwardRef, Input, OnDestroy, Output } from '@angular/core';\nimport { Provider } from '@angular/core/src/render3/jit/compiler_facade_interface';\nimport { ControlValueAccessor, NG_VALUE_ACCESSOR } from '@angular/forms';\nimport { SanitizerConfig } from '@editorjs/editorjs';\nimport { Observable, Subject, Subscription, timer } from 'rxjs';\nimport { map, tap, timeInterval } from 'rxjs/operators';\nimport { NgxEditorJSService } from '../../services/editorjs.service';\nimport { Block } from '../../types/blocks';\n\n/**\n * This provides the Control Value Accessor for the form component\n */\nexport const EDITORJS_FORM_VALUE_ACCESSOR: Provider = {\n  provide: NG_VALUE_ACCESSOR,\n  useExisting: forwardRef(() => NgxEditorJSBaseComponent),\n  multi: true\n};\n\n/**\n * A base EditorJS component, can be used to create other extended components\n */\n@Component({\n  template: '',\n  providers: [EDITORJS_FORM_VALUE_ACCESSOR]\n})\nexport class NgxEditorJSBaseComponent implements OnDestroy, AfterContentInit, ControlValueAccessor {\n  /**\n   * Component Destroy subject\n   */\n  protected onDestroy$ = new Subject();\n  /**\n   * Sets if the `EditorJS` component will request autofocus in the browser\n   */\n  @Input()\n  public autofocus: boolean;\n\n  /**\n   * Sets if the toolbar will be shown in `EditorJS`\n   */\n  @Input()\n  public hideToolbar: boolean;\n\n  /**\n   * The ID of the dom element that will hold the editor\n   */\n  @Input()\n  public holder: string;\n\n  /**\n   * The name of the initial block (default \"paragraph\")\n   */\n  @Input()\n  public initialBlock?: string;\n\n  /**\n   * Height of Editor's bottom area that allows to set focus on the last Block\n   */\n  @Input()\n  public minHeight?: number;\n\n  /**\n   * First Block placeholder\n   */\n  @Input()\n  public blockPlaceholder?: string;\n\n  /**\n   * Define default sanitizer configuration\n   */\n  @Input()\n  public sanitizer?: SanitizerConfig;\n\n  /**\n   * A string array of tools that will be included in this instance, if empty\n   * all tools will be included\n   */\n  @Input()\n  public includeTools: string[] = [];\n\n  /**\n   * If set, when the `EditorJS` save is called the `Observable` of blocks will be updated,\n   * if set to `false` on the change `Observable` will be updated\n   */\n  @Input()\n  public autosave: number;\n\n  /**\n   * An initial set of blocks to render in the component\n   */\n  @Input()\n  public blocks: Block[];\n\n  /**\n   * When created an instance of the service is available as\n   * a public interface\n   * @param service The editor service\n   */\n  constructor(protected readonly service: NgxEditorJSService, protected readonly fm: FocusMonitor) {}\n\n  /**\n   * Internal Subscription for the timer subscription\n   */\n  protected timerSubscription$: Subscription;\n\n  /**\n   * Get the current saved state\n   */\n  @Output()\n  public isSaved = new EventEmitter();\n\n  /**\n   * Internal method to return a new timer for the autosave support\n   * @param time Time to do with autosave\n   * @param timeStart When to trigger the first autosave\n   */\n  protected getTimer(time: number, timeStart = 0): Observable {\n    return timer(timeStart, time).pipe(\n      timeInterval(),\n      map(interval => interval.interval),\n      tap(() => {\n        this.service.save({ holder: this.holder });\n        this.isSaved.emit(true);\n      })\n    );\n  }\n\n  /**\n   * Form field value if used as a field component\n   */\n  protected _value: any;\n\n  /**\n   * Returns if the element has been touched\n   */\n  @Output()\n  isTouched = new EventEmitter();\n\n  /**\n   * Field on touch method\n   */\n  public onTouch = (event?: MouseEvent) => {\n    this.isTouched.emit(true);\n  };\n\n  /**\n   * Returns if the element has changed\n   */\n  @Output()\n  hasChanged = new EventEmitter();\n\n  /**\n   * Field onChange method\n   */\n  public onChange = (blocks: Block[]) => {\n    this.hasChanged.emit(blocks);\n  };\n\n  /**\n   * Form Write Values\n   * @param blocks\n   */\n  public writeValue(blocks: Block[]) {\n    this._value = blocks;\n  }\n\n  /**\n   * Register on Change for forms\n   */\n  public registerOnChange(fn: (blocks: Block[]) => void): void {\n    this.onChange = fn;\n  }\n\n  /**\n   * registerOnTouched for forms\n   */\n  public registerOnTouched(fn: (event?: MouseEvent) => void): void {\n    this.onTouch = fn;\n  }\n\n  /**\n   * Returns a focus monitor observable with the focus value,\n   * the side effect of this monitor is to update the saved state and\n   * start any autosave timers\n   * @param element The element to monitor\n   * @param checkChildren If the children should be checked\n   */\n  protected getFocusMonitor(element: HTMLElement, checkChildren = true) {\n    return this.fm.monitor(element, checkChildren).pipe(\n      map(origin => !!origin),\n      tap(focused => {\n        if (!focused) {\n          if (!this.autosave) {\n            this.isSaved.emit(false);\n          }\n          if (this.timerSubscription$) {\n            this.timerSubscription$.unsubscribe();\n          }\n        } else {\n          this.isSaved.emit(false);\n          if (this.autosave > 0) {\n            this.timerSubscription$ = this.getTimer(this.autosave, this.autosave).subscribe();\n          }\n        }\n        return focused;\n      })\n    );\n  }\n\n  ngAfterContentInit() {}\n\n  ngOnDestroy() {\n    if (!this.onDestroy$.isStopped) {\n      this.onDestroy$.next(true);\n      this.onDestroy$.complete();\n    }\n  }\n\n  /**\n   * Get the ready status for the `EditorJS` instance\n   */\n  public get isReady(): Observable {\n    return this.service.isReady({ holder: this.holder });\n  }\n\n  /**\n   * Get the changed status for the `EditorJS` instance\n   */\n  public getChanged(): Observable {\n    return this.service.getChanged({ holder: this.holder });\n  }\n}\n\n    \n\n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = ''\n    var COMPONENTS = [{'name': 'AppContainerComponent', 'selector': 'tinynodes-root'},{'name': 'FormContainerComponent', 'selector': 'ngx-form-container'},{'name': 'HomePageComponent', 'selector': 'tinynodes-home-page'},{'name': 'NavBarComponent', 'selector': 'tinynodes-nav-bar'},{'name': 'NgxEditorJSBaseComponent', 'selector': ''},{'name': 'NgxEditorJSComponent', 'selector': 'ngx-editorjs'},{'name': 'NgxEditorJSDemoHomeComponent', 'selector': 'ngx-editorjs-demo-home'},{'name': 'NgxEditorJSDemoInfoComponent', 'selector': 'ngx-editorjs-demo-info'},{'name': 'NgxEditorJSDemoTagComponent', 'selector': 'ngx-editorjs-tag-component'},{'name': 'NgxEditorJSMatFieldComponent', 'selector': 'ngx-editorjs-mat-field'},{'name': 'PageContainerComponent', 'selector': 'ngx-page-container'},{'name': 'SidebarComponent', 'selector': 'tinynodes-sidebar'}];\n    var DIRECTIVES = [{'name': 'NgxEditorJSDirective', 'selector': '[ngxEditorJS]'}];\n    var ACTUAL_COMPONENT = {'name': 'NgxEditorJSBaseComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/NgxEditorJSComponent.html":{"url":"components/NgxEditorJSComponent.html","title":"component - NgxEditorJSComponent","body":"\n                   \n\n\n\n\n\n  Components\n  NgxEditorJSComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    libs/ngx-editorjs/src/lib/containers/editorjs/editorjs.component.ts\n\n\n    \n        Description\n    \n    \n        This component is provided as a shortcut to using EditorJS in your\napplication. The attributes are optional and without a default component\nwill be created\n\n    \n\n    \n        Extends\n    \n    \n                NgxEditorJSBaseComponent\n    \n\n\n    \n        Example\n    \n    \n                \n                    \n                \n    \n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                ngx-editorjs\n            \n\n            \n                styleUrls\n                editorjs.component.scss\n            \n\n\n\n            \n                templateUrl\n                editorjs.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                editorEl\n                            \n                            \n                                    Protected\n                                _value\n                            \n                            \n                                    Public\n                                onChange\n                            \n                            \n                                    Protected\n                                onDestroy$\n                            \n                            \n                                    Public\n                                onTouch\n                            \n                            \n                                    Protected\n                                timerSubscription$\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngAfterContentInit\n                            \n                            \n                                ngOnDestroy\n                            \n                            \n                                    Public\n                                getChanged\n                            \n                            \n                                    Protected\n                                getFocusMonitor\n                            \n                            \n                                    Protected\n                                getTimer\n                            \n                            \n                                ngAfterContentInit\n                            \n                            \n                                ngOnDestroy\n                            \n                            \n                                    Public\n                                registerOnChange\n                            \n                            \n                                    Public\n                                registerOnTouched\n                            \n                            \n                                    Public\n                                writeValue\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                autofocus\n                            \n                            \n                                autosave\n                            \n                            \n                                blockPlaceholder\n                            \n                            \n                                blocks\n                            \n                            \n                                hideToolbar\n                            \n                            \n                                holder\n                            \n                            \n                                includeTools\n                            \n                            \n                                initialBlock\n                            \n                            \n                                minHeight\n                            \n                            \n                                sanitizer\n                            \n                        \n                    \n                \n\n                \n                    \n                        Outputs\n                    \n                \n                \n                    \n                        \n                            \n                                hasChanged\n                            \n                            \n                                isSaved\n                            \n                            \n                                isTouched\n                            \n                        \n                    \n                \n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(service: NgxEditorJSService, fm: FocusMonitor)\n                    \n                \n                        \n                            \n                                Defined in libs/ngx-editorjs/src/lib/containers/editorjs/editorjs.component.ts:25\n                            \n                        \n\n                \n                    \n                            Constructs the Editor component\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        service\n                                                  \n                                                        \n                                                                        NgxEditorJSService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                The NgxEditorJSService instance\n\n                                                        \n                                                \n                                                \n                                                        fm\n                                                  \n                                                        \n                                                                    FocusMonitor\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        autofocus\n                    \n                \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                            \n                                \n                                    Inherited from         NgxEditorJSBaseComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in         NgxEditorJSBaseComponent:36\n\n                            \n                        \n                \n                    \n                        Sets if the EditorJS component will request autofocus in the browser\n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        autosave\n                    \n                \n                \n                    \n                        Type :         number\n\n                    \n                \n                            \n                                \n                                    Inherited from         NgxEditorJSBaseComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in         NgxEditorJSBaseComponent:86\n\n                            \n                        \n                \n                    \n                        If set, when the EditorJS save is called the Observable of blocks will be updated,\nif set to false on the change Observable will be updated\n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        blockPlaceholder\n                    \n                \n                \n                    \n                        Type :         string\n\n                    \n                \n                            \n                                \n                                    Inherited from         NgxEditorJSBaseComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in         NgxEditorJSBaseComponent:66\n\n                            \n                        \n                \n                    \n                        First Block placeholder\n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        blocks\n                    \n                \n                \n                    \n                        Type :         Block[]\n\n                    \n                \n                            \n                                \n                                    Inherited from         NgxEditorJSBaseComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in         NgxEditorJSBaseComponent:92\n\n                            \n                        \n                \n                    \n                        An initial set of blocks to render in the component\n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        hideToolbar\n                    \n                \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                            \n                                \n                                    Inherited from         NgxEditorJSBaseComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in         NgxEditorJSBaseComponent:42\n\n                            \n                        \n                \n                    \n                        Sets if the toolbar will be shown in EditorJS\n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        holder\n                    \n                \n                \n                    \n                        Type :         string\n\n                    \n                \n                            \n                                \n                                    Inherited from         NgxEditorJSBaseComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in         NgxEditorJSBaseComponent:48\n\n                            \n                        \n                \n                    \n                        The ID of the dom element that will hold the editor\n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        includeTools\n                    \n                \n                \n                    \n                        Type :     string[]\n\n                    \n                \n                \n                    \n                        Default value : []\n                    \n                \n                            \n                                \n                                    Inherited from         NgxEditorJSBaseComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in         NgxEditorJSBaseComponent:79\n\n                            \n                        \n                \n                    \n                        A string array of tools that will be included in this instance, if empty\nall tools will be included\n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        initialBlock\n                    \n                \n                \n                    \n                        Type :         string\n\n                    \n                \n                            \n                                \n                                    Inherited from         NgxEditorJSBaseComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in         NgxEditorJSBaseComponent:54\n\n                            \n                        \n                \n                    \n                        The name of the initial block (default \"paragraph\")\n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        minHeight\n                    \n                \n                \n                    \n                        Type :         number\n\n                    \n                \n                            \n                                \n                                    Inherited from         NgxEditorJSBaseComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in         NgxEditorJSBaseComponent:60\n\n                            \n                        \n                \n                    \n                        Height of Editor's bottom area that allows to set focus on the last Block\n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        sanitizer\n                    \n                \n                \n                    \n                        Type :     SanitizerConfig\n\n                    \n                \n                            \n                                \n                                    Inherited from         NgxEditorJSBaseComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in         NgxEditorJSBaseComponent:72\n\n                            \n                        \n                \n                    \n                        Define default sanitizer configuration\n\n                    \n                \n            \n        \n\n    \n    Outputs\n        \n            \n                \n                    \n                        \n                        hasChanged\n                    \n                \n                \n                    \n                        Type :         EventEmitter\n\n                    \n                \n                            \n                                \n                                    Inherited from         NgxEditorJSBaseComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in         NgxEditorJSBaseComponent:150\n\n                            \n                        \n                \n                    \n                        Returns if the element has changed\n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        isSaved\n                    \n                \n                \n                    \n                        Type :         EventEmitter\n\n                    \n                \n                            \n                                \n                                    Inherited from         NgxEditorJSBaseComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in         NgxEditorJSBaseComponent:110\n\n                            \n                        \n                \n                    \n                        Get the current saved state\n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        isTouched\n                    \n                \n                \n                    \n                        Type :         EventEmitter\n\n                    \n                \n                            \n                                \n                                    Inherited from         NgxEditorJSBaseComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in         NgxEditorJSBaseComponent:137\n\n                            \n                        \n                \n                    \n                        Returns if the element has been touched\n\n                    \n                \n            \n        \n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngAfterContentInit\n                        \n                        \n                    \n                \n            \n            \n                \nngAfterContentInit()\n                \n            \n\n\n            \n                \n                    Defined in libs/ngx-editorjs/src/lib/containers/editorjs/editorjs.component.ts:35\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngOnDestroy\n                        \n                        \n                    \n                \n            \n            \n                \nngOnDestroy()\n                \n            \n\n\n            \n                \n                    Defined in libs/ngx-editorjs/src/lib/containers/editorjs/editorjs.component.ts:43\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            getChanged\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    getChanged()\n                \n            \n\n\n            \n                \n                    Inherited from         NgxEditorJSBaseComponent\n\n                \n            \n            \n                \n                        Defined in         NgxEditorJSBaseComponent:229\n\n                \n            \n\n\n            \n                \n                    Get the changed status for the EditorJS instance\n\n\n                    \n                        Returns :     Observable\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Protected\n                            getFocusMonitor\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    getFocusMonitor(element: HTMLElement, checkChildren)\n                \n            \n\n\n            \n                \n                    Inherited from         NgxEditorJSBaseComponent\n\n                \n            \n            \n                \n                        Defined in         NgxEditorJSBaseComponent:188\n\n                \n            \n\n\n            \n                \n                    Returns a focus monitor observable with the focus value,\nthe side effect of this monitor is to update the saved state and\nstart any autosave timers\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Default value\n                                    Description\n                                \n                            \n                            \n                                \n                                    element\n                                    \n                                            HTMLElement\n                                    \n\n                                    \n                                        No\n                                    \n\n                                    \n                                    \n\n                                    \n                                        The element to monitor\n\n                                    \n                                \n                                \n                                    checkChildren\n                                    \n                                    \n\n                                    \n                                        No\n                                    \n\n                                    \n                                        true\n                                    \n\n                                    \n                                        If the children should be checked\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Protected\n                            getTimer\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    getTimer(time: number, timeStart: number)\n                \n            \n\n\n            \n                \n                    Inherited from         NgxEditorJSBaseComponent\n\n                \n            \n            \n                \n                        Defined in         NgxEditorJSBaseComponent:117\n\n                \n            \n\n\n            \n                \n                    Internal method to return a new timer for the autosave support\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Default value\n                                    Description\n                                \n                            \n                            \n                                \n                                    time\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n                                    \n                                    \n\n                                    \n                                        Time to do with autosave\n\n                                    \n                                \n                                \n                                    timeStart\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n                                    \n                                        0\n                                    \n\n                                    \n                                        When to trigger the first autosave\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Observable\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngAfterContentInit\n                        \n                        \n                    \n                \n            \n            \n                \nngAfterContentInit()\n                \n            \n\n\n            \n                \n                    Inherited from         NgxEditorJSBaseComponent\n\n                \n            \n            \n                \n                        Defined in         NgxEditorJSBaseComponent:210\n\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngOnDestroy\n                        \n                        \n                    \n                \n            \n            \n                \nngOnDestroy()\n                \n            \n\n\n            \n                \n                    Inherited from         NgxEditorJSBaseComponent\n\n                \n            \n            \n                \n                        Defined in         NgxEditorJSBaseComponent:212\n\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            registerOnChange\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    registerOnChange(fn: (blocks: Block[]) => void)\n                \n            \n\n\n            \n                \n                    Inherited from         NgxEditorJSBaseComponent\n\n                \n            \n            \n                \n                        Defined in         NgxEditorJSBaseComponent:170\n\n                \n            \n\n\n            \n                \n                    Register on Change for forms\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    fn\n                                    \n                                                function\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            registerOnTouched\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    registerOnTouched(fn: (event: MouseEvent) => void)\n                \n            \n\n\n            \n                \n                    Inherited from         NgxEditorJSBaseComponent\n\n                \n            \n            \n                \n                        Defined in         NgxEditorJSBaseComponent:177\n\n                \n            \n\n\n            \n                \n                    registerOnTouched for forms\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    fn\n                                    \n                                                function\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            writeValue\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    writeValue(blocks: Block[])\n                \n            \n\n\n            \n                \n                    Inherited from         NgxEditorJSBaseComponent\n\n                \n            \n            \n                \n                        Defined in         NgxEditorJSBaseComponent:163\n\n                \n            \n\n\n            \n                \n                    Form Write Values\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    blocks\n                                    \n                                                Block[]\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            editorEl\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     NgxEditorJSDirective\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @ViewChild(NgxEditorJSDirective)\n                            \n                        \n                    \n                        \n                            \n                                    Defined in libs/ngx-editorjs/src/lib/containers/editorjs/editorjs.component.ts:25\n                            \n                        \n\n                \n                    \n                        Access to the underlying editor directive\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Protected\n                            _value\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         any\n\n                        \n                    \n                            \n                                \n                                    Inherited from         NgxEditorJSBaseComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in         NgxEditorJSBaseComponent:131\n\n                            \n                        \n\n                \n                    \n                        Form field value if used as a field component\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            onChange\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : () => {...}\n                        \n                    \n                            \n                                \n                                    Inherited from         NgxEditorJSBaseComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in         NgxEditorJSBaseComponent:155\n\n                            \n                        \n\n                \n                    \n                        Field onChange method\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Protected\n                            onDestroy$\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : new Subject()\n                        \n                    \n                            \n                                \n                                    Inherited from         NgxEditorJSBaseComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in         NgxEditorJSBaseComponent:31\n\n                            \n                        \n\n                \n                    \n                        Component Destroy subject\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            onTouch\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : () => {...}\n                        \n                    \n                            \n                                \n                                    Inherited from         NgxEditorJSBaseComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in         NgxEditorJSBaseComponent:142\n\n                            \n                        \n\n                \n                    \n                        Field on touch method\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Protected\n                            timerSubscription$\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     Subscription\n\n                        \n                    \n                            \n                                \n                                    Inherited from         NgxEditorJSBaseComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in         NgxEditorJSBaseComponent:104\n\n                            \n                        \n\n                \n                    \n                        Internal Subscription for the timer subscription\n\n                    \n                \n\n            \n        \n\n\n\n\n\n    \n        import { FocusMonitor } from '@angular/cdk/a11y';\nimport { Component, ViewChild } from '@angular/core';\nimport { takeUntil } from 'rxjs/operators';\nimport { NgxEditorJSDirective } from '../../directives/ngx-editorjs.directive';\nimport { NgxEditorJSService } from '../../services/editorjs.service';\nimport { NgxEditorJSBaseComponent } from '../base/container.class';\n\n/**\n * This component is provided as a shortcut to using EditorJS in your\n * application. The attributes are optional and without a default component\n * will be created\n *\n * @example\n * \n */\n@Component({\n  selector: 'ngx-editorjs',\n  templateUrl: 'editorjs.component.html',\n  styleUrls: ['editorjs.component.scss']\n})\nexport class NgxEditorJSComponent extends NgxEditorJSBaseComponent {\n  /**\n   * Access to the underlying editor directive\n   */\n  @ViewChild(NgxEditorJSDirective) public editorEl: NgxEditorJSDirective;\n\n  /**\n   * Constructs the Editor component\n   * @param service The NgxEditorJSService instance\n   */\n  constructor(protected readonly service: NgxEditorJSService, protected readonly fm: FocusMonitor) {\n    super(service, fm);\n  }\n\n  ngAfterContentInit() {\n    this.getFocusMonitor(this.editorEl.element)\n      .pipe(takeUntil(this.onDestroy$))\n      .subscribe(focused => {\n        this.onTouch();\n      });\n  }\n\n  ngOnDestroy(): void {\n    this.fm.stopMonitoring(this.editorEl.element);\n    if (this.timerSubscription$ && !this.timerSubscription$.closed) {\n      this.timerSubscription$.unsubscribe();\n    }\n    this.onDestroy$.next(true);\n    this.onDestroy$.complete();\n  }\n}\n\n    \n\n    \n        \n\n    \n\n    \n                \n                    editorjs.component.scss\n                \n                :host {\n  position: relative;\n  width: 100%;\n  height: 100%;\n  display: flex;\n  flex-direction: row;\n}\n\n.editor {\n  flex: 1;\n  position: relative;\n  width: 100%;\n  height: 100%;\n  border: 2px solid darkgray;\n  border-radius: 1em;\n  text-align: left;\n}\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = ''\n    var COMPONENTS = [{'name': 'AppContainerComponent', 'selector': 'tinynodes-root'},{'name': 'FormContainerComponent', 'selector': 'ngx-form-container'},{'name': 'HomePageComponent', 'selector': 'tinynodes-home-page'},{'name': 'NavBarComponent', 'selector': 'tinynodes-nav-bar'},{'name': 'NgxEditorJSBaseComponent', 'selector': ''},{'name': 'NgxEditorJSComponent', 'selector': 'ngx-editorjs'},{'name': 'NgxEditorJSDemoHomeComponent', 'selector': 'ngx-editorjs-demo-home'},{'name': 'NgxEditorJSDemoInfoComponent', 'selector': 'ngx-editorjs-demo-info'},{'name': 'NgxEditorJSDemoTagComponent', 'selector': 'ngx-editorjs-tag-component'},{'name': 'NgxEditorJSMatFieldComponent', 'selector': 'ngx-editorjs-mat-field'},{'name': 'PageContainerComponent', 'selector': 'ngx-page-container'},{'name': 'SidebarComponent', 'selector': 'tinynodes-sidebar'}];\n    var DIRECTIVES = [{'name': 'NgxEditorJSDirective', 'selector': '[ngxEditorJS]'}];\n    var ACTUAL_COMPONENT = {'name': 'NgxEditorJSComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/NgxEditorJSConfig.html":{"url":"interfaces/NgxEditorJSConfig.html","title":"interface - NgxEditorJSConfig","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  NgxEditorJSConfig\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            libs/ngx-editorjs/src/lib/types/config.ts\n        \n\n            \n                Description\n            \n            \n                The configuration option that can be passed to the NgxEditorJSModule.forRoot method\n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                            Optional\n                                        editorjs\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        editorjs\n                                    \n                                \n                                \n                                    \n                                        editorjs:     EditorConfig\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     EditorConfig\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    Configuration options for EditorJS\n\n                                \n                            \n                        \n                    \n            \n    \n\n\n    \n        import { InjectionToken } from '@angular/core';\nimport EditorJS, { OutputData, SanitizerConfig, EditorConfig } from '@editorjs/editorjs';\n\n/**\n * Configuration for the EditorJS instance\n */\nexport interface EditorJSConfig {\n  /**\n   * If the EditorJS is autofocused on creation (default: false)\n   */\n  autofocus?: boolean;\n\n  /**\n   * Any initial output data to render\n   */\n  data?: OutputData;\n\n  /**\n   * If true, toolbar won't be shown\n   */\n  hideToolbar?: boolean;\n\n  /**\n   * ID of the element to hold the config\n   */\n  holder?: string;\n\n  /**\n   * The name of the initial block (default \"paragraph\")\n   */\n  initialBlock?: string;\n\n  /**\n   * Height of Editor's bottom area that allows to set focus on the last Block\n   */\n  minHeight?: number;\n\n  /**\n   * First Block placeholder\n   */\n  blockPlaceholder?: string;\n\n  /**\n   * Define default sanitizer configuration\n   */\n  sanitizer?: SanitizerConfig;\n}\n\n/**\n * The configuration option that can be passed to the `NgxEditorJSModule.forRoot` method\n */\nexport interface NgxEditorJSConfig {\n  /**\n   * Configuration options for `EditorJS`\n   */\n  editorjs?: EditorConfig;\n}\n\n/**\n * Injection token provied for `NgxEditorJSConfig`\n */\nexport const NGX_EDITORJS_CONFIG = new InjectionToken('NGX_EDITORJS_CONFIG');\n\n/**\n * Internal token for injecting the `NgxEditorJSConfig` into the config factory\n */\nexport const FOR_ROOT_OPTIONS_TOKEN = new InjectionToken('FOR_ROOT_OPTIONS_TOKEN');\n\n/**\n * Get the EditorJS instance injected into the app\n */\nexport const EDITIOR_JS_INSTANCE = new InjectionToken('EDITIOR_JS_INSTANCE');\n\n    \n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/NgxEditorJSDemo.html":{"url":"interfaces/NgxEditorJSDemo.html","title":"interface - NgxEditorJSDemo","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  NgxEditorJSDemo\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            libs/ngx-tinynodes-core/src/lib/stores/app/application.model.ts\n        \n\n            \n                Description\n            \n            \n                Interface for ngx-editorjs-demo data\nTODO: This should be moved\n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        blocks\n                                \n                                \n                                        links\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        blocks\n                                    \n                                \n                                \n                                    \n                                        blocks:         Block[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         Block[]\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    The initial blocks for the demo\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        links\n                                    \n                                \n                                \n                                    \n                                        links:         MenuGroup\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         MenuGroup\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Links for this demo\n\n                                \n                            \n                        \n                    \n            \n    \n\n\n    \n        import { Block } from '@tinynodes/ngx-editorjs';\nimport { MenuGroup, MenuItem } from '../../types/app';\n\n/**\n * An Enum of the keys in the application state\n */\nexport enum ApplicationStateKeys {\n  /**\n   * The hidden state key\n   */\n  Hidden = 'hidden',\n\n  /**\n   * The menus key\n   */\n  Menus = 'menus',\n\n  /**\n   * The demo data key\n   */\n  DemoData = 'demoData'\n}\n\n/**\n * Interface for a demo data object\n */\nexport interface DemoData {\n  /**\n   * The name of the demo (e.g. `ngx-editorjs-demo`)\n   */\n  name: string;\n  /**\n   * The data for the demo as ``\n   */\n  data: T;\n}\n\n/**\n * Interface for `ngx-editorjs-demo` data\n * TODO: This should be moved\n */\nexport interface NgxEditorJSDemo {\n  /**\n   * The initial blocks for the demo\n   */\n  blocks: Block[];\n\n  /**\n   * Links for this demo\n   */\n  links: MenuGroup;\n}\n\n/**\n * The demo data for `ngx-editorjs-demo`\n */\nexport interface NgxEditorJSDemoData extends DemoData {}\n\n/**\n * The demos on tinynodes\n */\nexport interface TinynodeDemos {\n  /**\n   * The `ngx-editorjs-demo` data\n   */\n  'ngx-editorjs-demo': NgxEditorJSDemoData;\n}\n\n/**\n * A representation of the application state\n */\nexport interface ApplicationState {\n  /**\n   * If the side menu is hidden\n   */\n  hidden: boolean;\n\n  /**\n   * A set of menus loaded from application data\n   */\n  menus: MenuGroup[];\n\n  /**\n   * Data for demos\n   */\n  demoData: DemoData[];\n}\n\n    \n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/NgxEditorJSDemo-1.html":{"url":"interfaces/NgxEditorJSDemo-1.html","title":"interface - NgxEditorJSDemo-1","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  NgxEditorJSDemo\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/ngx-tinynodes/src/app/core/stores/app/application.model.ts\n        \n\n            \n                Description\n            \n            \n                Interface for ngx-editorjs-demo data\nTODO: This should be moved\n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        blocks\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        blocks\n                                    \n                                \n                                \n                                    \n                                        blocks:         Block[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         Block[]\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    The initial blocks for the demo\n\n                                \n                            \n                        \n                    \n            \n    \n\n\n    \n        import { Block } from '@tinynodes/ngx-editorjs';\nimport { MenuGroup } from '../../types/app';\n\n/**\n * An Enum of the keys in the application state\n */\nexport enum ApplicationStateKeys {\n  /**\n   * The hidden state key\n   */\n  Hidden = 'hidden',\n\n  /**\n   * The menus key\n   */\n  Menus = 'menus',\n\n  /**\n   * The demo data key\n   */\n  DemoData = 'demoData'\n}\n\n/**\n * Interface for a demo data object\n */\nexport interface DemoData {\n  /**\n   * The name of the demo (e.g. `ngx-editorjs-demo`)\n   */\n  name: string;\n  /**\n   * The data for the demo as ``\n   */\n  data: T;\n}\n\n/**\n * Interface for `ngx-editorjs-demo` data\n * TODO: This should be moved\n */\nexport interface NgxEditorJSDemo {\n  /**\n   * The initial blocks for the demo\n   */\n  blocks: Block[];\n}\n\n/**\n * The demo data for `ngx-editorjs-demo`\n */\nexport interface NgxEditorJSDemoData extends DemoData {}\n\n/**\n * The demos on tinynodes\n */\nexport interface TinynodeDemos {\n  /**\n   * The `ngx-editorjs-demo` data\n   */\n  'ngx-editorjs-demo': NgxEditorJSDemoData;\n}\n\n/**\n * A representation of the application state\n */\nexport interface ApplicationState {\n  /**\n   * If the side menu is hidden\n   */\n  hidden: boolean;\n\n  /**\n   * A set of menus loaded from application data\n   */\n  menus: MenuGroup[];\n\n  /**\n   * Data for demos\n   */\n  demoData: DemoData[];\n}\n\n    \n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/NgxEditorJSDemoData.html":{"url":"interfaces/NgxEditorJSDemoData.html","title":"interface - NgxEditorJSDemoData","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  NgxEditorJSDemoData\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            libs/ngx-tinynodes-core/src/lib/stores/app/application.model.ts\n        \n\n            \n                Description\n            \n            \n                The demo data for ngx-editorjs-demo\n\n            \n\n            \n                Extends\n            \n            \n                        DemoData\n            \n\n\n\n\n    \n\n\n    \n        import { Block } from '@tinynodes/ngx-editorjs';\nimport { MenuGroup, MenuItem } from '../../types/app';\n\n/**\n * An Enum of the keys in the application state\n */\nexport enum ApplicationStateKeys {\n  /**\n   * The hidden state key\n   */\n  Hidden = 'hidden',\n\n  /**\n   * The menus key\n   */\n  Menus = 'menus',\n\n  /**\n   * The demo data key\n   */\n  DemoData = 'demoData'\n}\n\n/**\n * Interface for a demo data object\n */\nexport interface DemoData {\n  /**\n   * The name of the demo (e.g. `ngx-editorjs-demo`)\n   */\n  name: string;\n  /**\n   * The data for the demo as ``\n   */\n  data: T;\n}\n\n/**\n * Interface for `ngx-editorjs-demo` data\n * TODO: This should be moved\n */\nexport interface NgxEditorJSDemo {\n  /**\n   * The initial blocks for the demo\n   */\n  blocks: Block[];\n\n  /**\n   * Links for this demo\n   */\n  links: MenuGroup;\n}\n\n/**\n * The demo data for `ngx-editorjs-demo`\n */\nexport interface NgxEditorJSDemoData extends DemoData {}\n\n/**\n * The demos on tinynodes\n */\nexport interface TinynodeDemos {\n  /**\n   * The `ngx-editorjs-demo` data\n   */\n  'ngx-editorjs-demo': NgxEditorJSDemoData;\n}\n\n/**\n * A representation of the application state\n */\nexport interface ApplicationState {\n  /**\n   * If the side menu is hidden\n   */\n  hidden: boolean;\n\n  /**\n   * A set of menus loaded from application data\n   */\n  menus: MenuGroup[];\n\n  /**\n   * Data for demos\n   */\n  demoData: DemoData[];\n}\n\n    \n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/NgxEditorJSDemoData-1.html":{"url":"interfaces/NgxEditorJSDemoData-1.html","title":"interface - NgxEditorJSDemoData-1","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  NgxEditorJSDemoData\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/ngx-tinynodes/src/app/core/stores/app/application.model.ts\n        \n\n            \n                Description\n            \n            \n                The demo data for ngx-editorjs-demo\n\n            \n\n            \n                Extends\n            \n            \n                        DemoData\n            \n\n\n\n\n    \n\n\n    \n        import { Block } from '@tinynodes/ngx-editorjs';\nimport { MenuGroup } from '../../types/app';\n\n/**\n * An Enum of the keys in the application state\n */\nexport enum ApplicationStateKeys {\n  /**\n   * The hidden state key\n   */\n  Hidden = 'hidden',\n\n  /**\n   * The menus key\n   */\n  Menus = 'menus',\n\n  /**\n   * The demo data key\n   */\n  DemoData = 'demoData'\n}\n\n/**\n * Interface for a demo data object\n */\nexport interface DemoData {\n  /**\n   * The name of the demo (e.g. `ngx-editorjs-demo`)\n   */\n  name: string;\n  /**\n   * The data for the demo as ``\n   */\n  data: T;\n}\n\n/**\n * Interface for `ngx-editorjs-demo` data\n * TODO: This should be moved\n */\nexport interface NgxEditorJSDemo {\n  /**\n   * The initial blocks for the demo\n   */\n  blocks: Block[];\n}\n\n/**\n * The demo data for `ngx-editorjs-demo`\n */\nexport interface NgxEditorJSDemoData extends DemoData {}\n\n/**\n * The demos on tinynodes\n */\nexport interface TinynodeDemos {\n  /**\n   * The `ngx-editorjs-demo` data\n   */\n  'ngx-editorjs-demo': NgxEditorJSDemoData;\n}\n\n/**\n * A representation of the application state\n */\nexport interface ApplicationState {\n  /**\n   * If the side menu is hidden\n   */\n  hidden: boolean;\n\n  /**\n   * A set of menus loaded from application data\n   */\n  menus: MenuGroup[];\n\n  /**\n   * Data for demos\n   */\n  demoData: DemoData[];\n}\n\n    \n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/NgxEditorJSDemoHomeComponent.html":{"url":"components/NgxEditorJSDemoHomeComponent.html","title":"component - NgxEditorJSDemoHomeComponent","body":"\n                   \n\n\n\n\n\n  Components\n  NgxEditorJSDemoHomeComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    libs/ngx-editorjs-demo/src/lib/containers/home-container/home-container.component.ts\n\n\n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                ngx-editorjs-demo-home\n            \n\n            \n                styleUrls\n                home-container.component.scss\n            \n\n\n\n            \n                templateUrl\n                home-container.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        import { Component } from '@angular/core';\n\n@Component({\n  selector: 'ngx-editorjs-demo-home',\n  templateUrl: 'home-container.component.html',\n  styleUrls: ['home-container.component.scss']\n})\nexport class NgxEditorJSDemoHomeComponent {}\n\n    \n\n    \n        \n  \n    \n      @tinynodes/ngx-editor Demo\n      A collection of demos for the @tinynodes/ngx-editor module with example code and links to API docs.\n    \n    \n      \n        The demos in this section are for the\n        @tinynodes/ngx-editorjs module.\n      \n      \n        Each demo provides a way to use the component in an application or form in Angular. It can be used as a basic component, used with\n        Angular forms or Material forms.\n      \n      Each demo shows the components providing a EditorJS instance.\n    \n    \n      Angular Component Demo\n      Angular Material Form Demo\n    \n  \n\n\n    \n\n    \n                \n                    home-container.component.scss\n                \n                \n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '            @tinynodes/ngx-editor Demo      A collection of demos for the @tinynodes/ngx-editor module with example code and links to API docs.                      The demos in this section are for the        @tinynodes/ngx-editorjs module.                    Each demo provides a way to use the component in an application or form in Angular. It can be used as a basic component, used with        Angular forms or Material forms.            Each demo shows the components providing a EditorJS instance.              Angular Component Demo      Angular Material Form Demo      '\n    var COMPONENTS = [{'name': 'AppContainerComponent', 'selector': 'tinynodes-root'},{'name': 'FormContainerComponent', 'selector': 'ngx-form-container'},{'name': 'HomePageComponent', 'selector': 'tinynodes-home-page'},{'name': 'NavBarComponent', 'selector': 'tinynodes-nav-bar'},{'name': 'NgxEditorJSBaseComponent', 'selector': ''},{'name': 'NgxEditorJSComponent', 'selector': 'ngx-editorjs'},{'name': 'NgxEditorJSDemoHomeComponent', 'selector': 'ngx-editorjs-demo-home'},{'name': 'NgxEditorJSDemoInfoComponent', 'selector': 'ngx-editorjs-demo-info'},{'name': 'NgxEditorJSDemoTagComponent', 'selector': 'ngx-editorjs-tag-component'},{'name': 'NgxEditorJSMatFieldComponent', 'selector': 'ngx-editorjs-mat-field'},{'name': 'PageContainerComponent', 'selector': 'ngx-page-container'},{'name': 'SidebarComponent', 'selector': 'tinynodes-sidebar'}];\n    var DIRECTIVES = [{'name': 'NgxEditorJSDirective', 'selector': '[ngxEditorJS]'}];\n    var ACTUAL_COMPONENT = {'name': 'NgxEditorJSDemoHomeComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/NgxEditorJSDemoInfoComponent.html":{"url":"components/NgxEditorJSDemoInfoComponent.html","title":"component - NgxEditorJSDemoInfoComponent","body":"\n                   \n\n\n\n\n\n  Components\n  NgxEditorJSDemoInfoComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    libs/ngx-tinynodes-core/src/lib/components/demo-info/demo-info.component.ts\n\n\n\n\n    \n        Implements\n    \n    \n                    OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                ngx-editorjs-demo-info\n            \n\n            \n                styleUrls\n                demo-info.component.scss\n            \n\n\n\n            \n                templateUrl\n                demo-info.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                panelOpen$\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngOnInit\n                            \n                            \n                                    Public\n                                togglePanel\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                body\n                            \n                            \n                                menu\n                            \n                            \n                                panelOpen\n                            \n                            \n                                title\n                            \n                        \n                    \n                \n\n\n\n\n                    \n                        \n                            Accessors\n                        \n                    \n                    \n                        \n                            \n                                \n                                    isPanelOpen\n                                \n                            \n                        \n                    \n        \n    \n\n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        body\n                    \n                \n                \n                    \n                        Type :     TemplateRef\n\n                    \n                \n                        \n                            \n                                    Defined in libs/ngx-tinynodes-core/src/lib/components/demo-info/demo-info.component.ts:35\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        menu\n                    \n                \n                \n                    \n                        Type :         MenuGroup\n\n                    \n                \n                        \n                            \n                                    Defined in libs/ngx-tinynodes-core/src/lib/components/demo-info/demo-info.component.ts:26\n                            \n                        \n                \n                    \n                        The menu group for the component\n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        panelOpen\n                    \n                \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                        \n                            \n                                    Defined in libs/ngx-tinynodes-core/src/lib/components/demo-info/demo-info.component.ts:20\n                            \n                        \n                \n                    \n                        Sets the panel open state\n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        title\n                    \n                \n                \n                    \n                        Type :         string\n\n                    \n                \n                        \n                            \n                                    Defined in libs/ngx-tinynodes-core/src/lib/components/demo-info/demo-info.component.ts:32\n                            \n                        \n                \n                    \n                        The title of the component\n\n                    \n                \n            \n        \n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngOnInit\n                        \n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in libs/ngx-tinynodes-core/src/lib/components/demo-info/demo-info.component.ts:37\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            togglePanel\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    togglePanel(value: boolean)\n                \n            \n\n\n            \n                \n                    Defined in libs/ngx-tinynodes-core/src/lib/components/demo-info/demo-info.component.ts:53\n                \n            \n\n\n            \n                \n                    Toggles the panel state\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    value\n                                    \n                                                boolean\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            panelOpen$\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : new BehaviorSubject(true)\n                        \n                    \n                        \n                            \n                                    Defined in libs/ngx-tinynodes-core/src/lib/components/demo-info/demo-info.component.ts:14\n                            \n                        \n\n                \n                    \n                        If the panel is open or not\n\n                    \n                \n\n            \n        \n\n\n    \n    \n        Accessors\n    \n        \n            \n                \n                    \n                        \n                        isPanelOpen\n                    \n                \n\n                \n                    \n                        getisPanelOpen()\n                    \n                \n                            \n                                \n                                    Defined in libs/ngx-tinynodes-core/src/lib/components/demo-info/demo-info.component.ts:46\n                                \n                            \n                    \n                        \n                                Gets if the panel is open or not\n\n\n                                \n                                    Returns :     Observable\n\n                                \n                        \n                    \n\n            \n        \n\n\n\n\n    \n        import { Component, Input, OnInit, TemplateRef } from '@angular/core';\nimport { BehaviorSubject, Observable } from 'rxjs';\nimport { MenuGroup } from '../../types/app';\n\n@Component({\n  selector: 'ngx-editorjs-demo-info',\n  templateUrl: 'demo-info.component.html',\n  styleUrls: ['demo-info.component.scss']\n})\nexport class NgxEditorJSDemoInfoComponent implements OnInit {\n  /**\n   * If the panel is open or not\n   */\n  private panelOpen$ = new BehaviorSubject(true);\n\n  /**\n   * Sets the panel open state\n   */\n  @Input()\n  panelOpen: boolean;\n\n  /**\n   * The menu group for the component\n   */\n  @Input()\n  menu: MenuGroup;\n\n  /**\n   * The title of the component\n   */\n  @Input()\n  title: string;\n\n  @Input()\n  body: TemplateRef;\n\n  ngOnInit() {\n    if (typeof this.panelOpen !== 'undefined') {\n      this.panelOpen$.next(this.panelOpen);\n    }\n  }\n\n  /**\n   * Gets if the panel is open or not\n   */\n  public get isPanelOpen(): Observable {\n    return this.panelOpen$.asObservable();\n  }\n\n  /**\n   * Toggles the panel state\n   */\n  public togglePanel(value: boolean): void {\n    this.panelOpen$.next(value);\n  }\n}\n\n    \n\n    \n        \n  \n    {{ title }}\n    Details on usage and links - {{ (isPanelOpen | async) ? 'Click To Close' : 'Click To View' }}\n  \n  \n    \n      \n        \n          How To Use...\n          Instructions on the demo below\n        \n        \n          \n        \n      \n    \n    \n      \n        \n          Links\n          Links for all things related to @tinynodes/{{ title }}\n        \n        \n          \n            \n              {{ link.label }}\n            \n          \n        \n      \n    \n  \n\n\n\n  This is where some demo information goes\n\n\n    \n\n    \n                \n                    demo-info.component.scss\n                \n                :host {\n  width: 100%;\n  height: 100vh;\n}\n\n.demo-info {\n  width: 100%;\n  height: calc(300px);\n  overflow: scroll;\n}\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '      {{ title }}    Details on usage and links - {{ (isPanelOpen | async) ? \\'Click To Close\\' : \\'Click To View\\' }}                                How To Use...          Instructions on the demo below                                                                        Links          Links for all things related to @tinynodes/{{ title }}                                                    {{ link.label }}                                            This is where some demo information goes'\n    var COMPONENTS = [{'name': 'AppContainerComponent', 'selector': 'tinynodes-root'},{'name': 'FormContainerComponent', 'selector': 'ngx-form-container'},{'name': 'HomePageComponent', 'selector': 'tinynodes-home-page'},{'name': 'NavBarComponent', 'selector': 'tinynodes-nav-bar'},{'name': 'NgxEditorJSBaseComponent', 'selector': ''},{'name': 'NgxEditorJSComponent', 'selector': 'ngx-editorjs'},{'name': 'NgxEditorJSDemoHomeComponent', 'selector': 'ngx-editorjs-demo-home'},{'name': 'NgxEditorJSDemoInfoComponent', 'selector': 'ngx-editorjs-demo-info'},{'name': 'NgxEditorJSDemoTagComponent', 'selector': 'ngx-editorjs-tag-component'},{'name': 'NgxEditorJSMatFieldComponent', 'selector': 'ngx-editorjs-mat-field'},{'name': 'PageContainerComponent', 'selector': 'ngx-page-container'},{'name': 'SidebarComponent', 'selector': 'tinynodes-sidebar'}];\n    var DIRECTIVES = [{'name': 'NgxEditorJSDirective', 'selector': '[ngxEditorJS]'}];\n    var ACTUAL_COMPONENT = {'name': 'NgxEditorJSDemoInfoComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"directives/NgxEditorJSDirective.html":{"url":"directives/NgxEditorJSDirective.html","title":"directive - NgxEditorJSDirective","body":"\n                   \n\n\n\n\n\n\n\n  Directives\n  NgxEditorJSDirective\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            libs/ngx-editorjs/src/lib/directives/ngx-editorjs.directive.ts\n        \n\n            \n                Description\n            \n            \n                The main directive of ngx-editorjs provides a way to attach\nan EditorJS instance to any element and control it via\nAngular services and components\nTo use attach to any element with an id property\n\n            \n\n            \n                Implements\n            \n            \n                            OnDestroy\n                            OnChanges\n                            AfterContentInit\n            \n\n            \n                Example\n            \n            \n                        \n                            \n                        \n            \n\n        \n            Metadata\n            \n                \n\n                    \n                        Selector\n                        [ngxEditorJS]\n                    \n\n                \n            \n        \n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                id\n                            \n                            \n                                    Private\n                                touched$\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                createConfig\n                            \n                            \n                                    Public\n                                createEditor\n                            \n                            \n                                ngAfterContentInit\n                            \n                            \n                                ngOnChanges\n                            \n                            \n                                ngOnDestroy\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                autofocus\n                            \n                            \n                                autosave\n                            \n                            \n                                blockPlaceholder\n                            \n                            \n                                blocks\n                            \n                            \n                                hideToolbar\n                            \n                            \n                                holder\n                            \n                            \n                                includeTools\n                            \n                            \n                                initialBlock\n                            \n                            \n                                minHeight\n                            \n                            \n                                sanitizer\n                            \n                        \n                    \n                \n\n                \n                    \n                        Outputs\n                    \n                \n                \n                    \n                        \n                            \n                                hasChanged\n                            \n                            \n                                isTouched\n                            \n                        \n                    \n                \n\n\n                \n                    \n                        HostListeners\n                    \n                \n                \n                    \n                        \n                            \n                                click\n                            \n                        \n                    \n                \n\n                    \n                        \n                            Accessors\n                        \n                    \n                    \n                        \n                            \n                                \n                                    editor\n                                \n                                \n                                    element\n                                \n                                \n                                    service\n                                \n                                \n                                    touched\n                                \n                            \n                        \n                    \n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(el: ElementRef, editorService: NgxEditorJSService)\n                    \n                \n                        \n                            \n                                Defined in libs/ngx-editorjs/src/lib/directives/ngx-editorjs.directive.ts:124\n                            \n                        \n\n                \n                    \n                            Creates the directive instance\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        el\n                                                  \n                                                        \n                                                                        ElementRef\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                The element the directive is attached to\n\n                                                        \n                                                \n                                                \n                                                        editorService\n                                                  \n                                                        \n                                                                        NgxEditorJSService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                The editor service\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    Inputs\n        \n            \n                \n                    \n                        \n                        autofocus\n                    \n                \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                        \n                            \n                                    Defined in libs/ngx-editorjs/src/lib/directives/ngx-editorjs.directive.ts:53\n                            \n                        \n                \n                    \n                        Sets if the EditorJS component will request autofocus in the browser\n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        autosave\n                    \n                \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                        \n                            \n                                    Defined in libs/ngx-editorjs/src/lib/directives/ngx-editorjs.directive.ts:97\n                            \n                        \n                \n                    \n                        If set, when the EditorJS save is called the Observable of blocks will be updated,\nif set to false on the change Observable will be updated\n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        blockPlaceholder\n                    \n                \n                \n                    \n                        Type :         string\n\n                    \n                \n                        \n                            \n                                    Defined in libs/ngx-editorjs/src/lib/directives/ngx-editorjs.directive.ts:77\n                            \n                        \n                \n                    \n                        First Block placeholder\n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        blocks\n                    \n                \n                \n                    \n                        Type :         Block[]\n\n                    \n                \n                \n                    \n                        Default value : []\n                    \n                \n                        \n                            \n                                    Defined in libs/ngx-editorjs/src/lib/directives/ngx-editorjs.directive.ts:103\n                            \n                        \n                \n                    \n                        An initial set of blocks to render in the component\n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        hideToolbar\n                    \n                \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                        \n                            \n                                    Defined in libs/ngx-editorjs/src/lib/directives/ngx-editorjs.directive.ts:59\n                            \n                        \n                \n                    \n                        Sets if the toolbar will be shown in EditorJS\n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        holder\n                    \n                \n                \n                    \n                        Type :         string\n\n                    \n                \n                        \n                            \n                                    Defined in libs/ngx-editorjs/src/lib/directives/ngx-editorjs.directive.ts:47\n                            \n                        \n                \n                    \n                        The ID of the dom element that will hold the editor\n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        includeTools\n                    \n                \n                \n                    \n                        Type :     string[]\n\n                    \n                \n                \n                    \n                        Default value : []\n                    \n                \n                        \n                            \n                                    Defined in libs/ngx-editorjs/src/lib/directives/ngx-editorjs.directive.ts:90\n                            \n                        \n                \n                    \n                        A string array of tools that will be included in this instance, if empty\nall tools will be included\n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        initialBlock\n                    \n                \n                \n                    \n                        Type :         string\n\n                    \n                \n                        \n                            \n                                    Defined in libs/ngx-editorjs/src/lib/directives/ngx-editorjs.directive.ts:65\n                            \n                        \n                \n                    \n                        The name of the initial block (default \"paragraph\")\n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        minHeight\n                    \n                \n                \n                    \n                        Type :         number\n\n                    \n                \n                        \n                            \n                                    Defined in libs/ngx-editorjs/src/lib/directives/ngx-editorjs.directive.ts:71\n                            \n                        \n                \n                    \n                        Height of Editor's bottom area that allows to set focus on the last Block\n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        sanitizer\n                    \n                \n                \n                    \n                        Type :     SanitizerConfig\n\n                    \n                \n                        \n                            \n                                    Defined in libs/ngx-editorjs/src/lib/directives/ngx-editorjs.directive.ts:83\n                            \n                        \n                \n                    \n                        Define default sanitizer configuration\n\n                    \n                \n            \n        \n\n            \n    Outputs\n        \n            \n                \n                    \n                        \n                        hasChanged\n                    \n                \n                \n                    \n                        Type :         EventEmitter\n\n                    \n                \n                        \n                            \n                                    Defined in libs/ngx-editorjs/src/lib/directives/ngx-editorjs.directive.ts:124\n                            \n                        \n                \n                    \n                        Returns if the element has changed\n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        isTouched\n                    \n                \n                \n                    \n                        Type :         EventEmitter\n\n                    \n                \n                        \n                            \n                                    Defined in libs/ngx-editorjs/src/lib/directives/ngx-editorjs.directive.ts:118\n                            \n                        \n                \n                    \n                        If the component has been touched\n\n                    \n                \n            \n        \n\n\n            \n    HostListeners    \n        \n            \n                \n                    \n                    \n                        \n                            click\n                        \n                        \n                    \n                \n            \n            \n                \nclick()\n                \n            \n\n\n            \n                \n                    Defined in libs/ngx-editorjs/src/lib/directives/ngx-editorjs.directive.ts:109\n                \n            \n\n\n            \n                \n                    Host click listener\n\n\n                \n            \n        \n    \n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Private\n                            createConfig\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    createConfig()\n                \n            \n\n\n            \n                \n                    Defined in libs/ngx-editorjs/src/lib/directives/ngx-editorjs.directive.ts:220\n                \n            \n\n\n            \n                \n                    Create a configuration for EditorJS\n\n\n                    \n                        Returns :     EditorConfig\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            createEditor\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    createEditor(config?: EditorConfig)\n                \n            \n\n\n            \n                \n                    Defined in libs/ngx-editorjs/src/lib/directives/ngx-editorjs.directive.ts:165\n                \n            \n\n\n            \n                \n                    Creates an EditorJS instance for this directive\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    config\n                                    \n                                            EditorConfig\n                                    \n\n                                    \n                                        Yes\n                                    \n\n\n                                    \n                                        Configuration for this instance\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngAfterContentInit\n                        \n                        \n                    \n                \n            \n            \n                \nngAfterContentInit()\n                \n            \n\n\n            \n                \n                    Defined in libs/ngx-editorjs/src/lib/directives/ngx-editorjs.directive.ts:201\n                \n            \n\n\n            \n                \n                    After content is created, we create the editor instance\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngOnChanges\n                        \n                        \n                    \n                \n            \n            \n                \nngOnChanges(changes: SimpleChanges)\n                \n            \n\n\n            \n                \n                    Defined in libs/ngx-editorjs/src/lib/directives/ngx-editorjs.directive.ts:181\n                \n            \n\n\n            \n                \n                    When ngOnChanges are called, there are two paths\nIf it's just blocks, then the service is updated with the blocks\nIf it's any other property it means we create a new editor, as this\nis a destructive process we also need to wait for an existing editor\nto be ready\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    changes\n                                    \n                                                SimpleChanges\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        Changes on the component\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngOnDestroy\n                        \n                        \n                    \n                \n            \n            \n                \nngOnDestroy()\n                \n            \n\n\n            \n                \n                    Defined in libs/ngx-editorjs/src/lib/directives/ngx-editorjs.directive.ts:213\n                \n            \n\n\n            \n                \n                    Destroy the editor and subjects for this service\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            id\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in libs/ngx-editorjs/src/lib/directives/ngx-editorjs.directive.ts:41\n                            \n                        \n\n                \n                    \n                        Component ID\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            touched$\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : new BehaviorSubject(false)\n                        \n                    \n                        \n                            \n                                    Defined in libs/ngx-editorjs/src/lib/directives/ngx-editorjs.directive.ts:36\n                            \n                        \n\n                \n                    \n                        Form touched state\n\n                    \n                \n\n            \n        \n\n\n            \n    \n        Accessors\n    \n        \n            \n                \n                    \n                        \n                        editor\n                    \n                \n\n                \n                    \n                        geteditor()\n                    \n                \n                            \n                                \n                                    Defined in libs/ngx-editorjs/src/lib/directives/ngx-editorjs.directive.ts:136\n                                \n                            \n                    \n                        \n                                Get the EditorJS instance for this directive\n\n\n                                \n                                    Returns :     Observable\n\n                                \n                        \n                    \n\n            \n        \n        \n            \n                \n                    \n                        \n                        element\n                    \n                \n\n                \n                    \n                        getelement()\n                    \n                \n                            \n                                \n                                    Defined in libs/ngx-editorjs/src/lib/directives/ngx-editorjs.directive.ts:143\n                                \n                            \n                    \n                        \n                                Get the element for the directive\n\n\n                        \n                    \n\n            \n        \n        \n            \n                \n                    \n                        \n                        service\n                    \n                \n\n                \n                    \n                        getservice()\n                    \n                \n                            \n                                \n                                    Defined in libs/ngx-editorjs/src/lib/directives/ngx-editorjs.directive.ts:150\n                                \n                            \n                    \n                        \n                                Get the NgxEditorJSService for this directive\n\n\n                                \n                                    Returns :         NgxEditorJSService\n\n                                \n                        \n                    \n\n            \n        \n        \n            \n                \n                    \n                        \n                        touched\n                    \n                \n\n                \n                    \n                        gettouched()\n                    \n                \n                            \n                                \n                                    Defined in libs/ngx-editorjs/src/lib/directives/ngx-editorjs.directive.ts:157\n                                \n                            \n                    \n                        \n                                Get the touched state\n\n\n                        \n                    \n\n            \n        \n\n\n    \n\n\n    \n        import {\n  AfterContentInit,\n  Directive,\n  ElementRef,\n  HostListener,\n  Input,\n  OnChanges,\n  OnDestroy,\n  SimpleChanges,\n  Output,\n  EventEmitter\n} from '@angular/core';\nimport EditorJS, { EditorConfig, SanitizerConfig } from '@editorjs/editorjs';\nimport { BehaviorSubject, Observable } from 'rxjs';\nimport { createEditorJSConfig } from '../config/editor-config';\nimport { NgxEditorJSService } from '../services/editorjs.service';\nimport { Block } from '../types/blocks';\n\n/**\n * The main directive of `ngx-editorjs` provides a way to attach\n * an EditorJS instance to any element and control it via\n * Angular services and components\n *\n * To use attach to any element with an `id` property\n *\n * @example\n * \n */\n@Directive({\n  selector: '[ngxEditorJS]'\n})\nexport class NgxEditorJSDirective implements OnDestroy, OnChanges, AfterContentInit {\n  /**\n   * Form touched state\n   */\n  private touched$ = new BehaviorSubject(false);\n\n  /**\n   * Component ID\n   */\n  private id: string;\n\n  /**\n   * The ID of the dom element that will hold the editor\n   */\n  @Input()\n  public holder: string;\n\n  /**\n   * Sets if the `EditorJS` component will request autofocus in the browser\n   */\n  @Input()\n  public autofocus: boolean;\n\n  /**\n   * Sets if the toolbar will be shown in `EditorJS`\n   */\n  @Input()\n  public hideToolbar: boolean;\n\n  /**\n   * The name of the initial block (default \"paragraph\")\n   */\n  @Input()\n  public initialBlock: string;\n\n  /**\n   * Height of Editor's bottom area that allows to set focus on the last Block\n   */\n  @Input()\n  public minHeight: number;\n\n  /**\n   * First Block placeholder\n   */\n  @Input()\n  public blockPlaceholder: string;\n\n  /**\n   * Define default sanitizer configuration\n   */\n  @Input()\n  public sanitizer: SanitizerConfig;\n\n  /**\n   * A string array of tools that will be included in this instance, if empty\n   * all tools will be included\n   */\n  @Input()\n  public includeTools: string[] = [];\n\n  /**\n   * If set, when the `EditorJS` save is called the `Observable` of blocks will be updated,\n   * if set to `false` on the change `Observable` will be updated\n   */\n  @Input()\n  public autosave: boolean;\n\n  /**\n   * An initial set of blocks to render in the component\n   */\n  @Input()\n  public blocks: Block[] = [];\n\n  /**\n   * Host click listener\n   */\n  @HostListener('click')\n  onclick() {\n    this.touched$.next(true);\n    this.isTouched.emit(true);\n  }\n\n  /**\n   * If the component has been touched\n   */\n  @Output()\n  isTouched = new EventEmitter();\n\n  /**\n   * Returns if the element has changed\n   */\n  @Output()\n  hasChanged = new EventEmitter();\n\n  /**\n   * Creates the directive instance\n   * @param el The element the directive is attached to\n   * @param editorService The editor service\n   */\n  constructor(private readonly el: ElementRef, protected readonly editorService: NgxEditorJSService) {}\n\n  /**\n   * Get the `EditorJS` instance for this directive\n   */\n  public get editor(): Observable {\n    return this.service.getEditor({ holder: this.id });\n  }\n\n  /**\n   * Get the element for the directive\n   */\n  public get element() {\n    return this.el.nativeElement;\n  }\n\n  /**\n   * Get the `NgxEditorJSService` for this directive\n   */\n  public get service(): NgxEditorJSService {\n    return this.editorService;\n  }\n\n  /**\n   * Get the touched state\n   */\n  public get touched() {\n    return this.touched$.asObservable();\n  }\n\n  /**\n   * Creates an `EditorJS` instance for this directive\n   * @param config Configuration for this instance\n   */\n  public createEditor(config?: EditorConfig): void {\n    this.service.createEditor({\n      config,\n      includeTools: this.includeTools,\n      autoSave: this.autosave\n    });\n  }\n\n  /**\n   * When ngOnChanges are called, there are two paths\n   * If it's just blocks, then the service is updated with the blocks\n   * If it's any other property it means we create a new editor, as this\n   * is a destructive process we also need to wait for an existing editor\n   * to be ready\n   * @param changes Changes on the component\n   */\n  ngOnChanges(changes: SimpleChanges): void {\n    if (changes.blocks && !changes.blocks.firstChange) {\n      this.hasChanged.emit(changes.blocks.currentValue);\n      return this.service.update({ holder: this.id, blocks: changes.blocks.currentValue });\n    }\n    const changesKeys = Object.keys(changes);\n    if (\n      this.id &&\n      // Ignore placeholder change\n      ['autofocus', 'holder', 'hideToolbar', 'initialBlock', 'minHeight'].find(key => {\n        return changesKeys.includes(key);\n      })\n    ) {\n      this.createEditor(this.createConfig());\n    }\n  }\n\n  /**\n   * After content is created, we create the editor instance\n   */\n  ngAfterContentInit() {\n    this.id = this.el.nativeElement.id || this.holder;\n\n    if (!this.id) {\n      throw new Error('Error in NgxEditorJSDirective::ngAfterContentInit - Directive element has no ID');\n    }\n    this.createEditor(this.createConfig());\n  }\n\n  /**\n   * Destroy the editor and subjects for this service\n   */\n  ngOnDestroy() {\n    this.service.destroy({ holder: this.id });\n  }\n\n  /**\n   * Create a configuration for EditorJS\n   */\n  private createConfig(): EditorConfig {\n    const config: EditorConfig = createEditorJSConfig({\n      holder: this.id,\n      autofocus: this.autofocus,\n      hideToolbar: this.hideToolbar,\n      initialBlock: this.initialBlock,\n      placeholder: this.blockPlaceholder,\n      minHeight: this.minHeight,\n      sanitizer: this.sanitizer\n    });\n    if (this.blocks && this.blocks.length > 0) {\n      config.data = {\n        time: Date.now(),\n        version: EditorJS.version,\n        blocks: this.blocks\n      };\n      this.hasChanged.emit(this.blocks);\n    } else {\n      this.hasChanged.emit([]);\n    }\n    return config;\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/NgxEditorJSEffects.html":{"url":"injectables/NgxEditorJSEffects.html","title":"injectable - NgxEditorJSEffects","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  NgxEditorJSEffects\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            libs/ngx-editorjs-ngrx/src/lib/effects/ngx-editorjs.effects.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                $save\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(actions$: Actions, editorService: NgxEditorJSService)\n                    \n                \n                        \n                            \n                                Defined in libs/ngx-editorjs-ngrx/src/lib/effects/ngx-editorjs.effects.ts:10\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        actions$\n                                                  \n                                                        \n                                                                    Actions\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        editorService\n                                                  \n                                                        \n                                                                        NgxEditorJSService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            $save\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : this.actions$.pipe(\n    ofType(EditorJSActionTypes.SaveStart),\n    map((action: SaveStart) => {\n      this.editorService.save(action.payload.holder);\n      return action;\n    }),\n    withLatestFrom([\n      map((action: SaveStart) => action),\n      (action: SaveStart): Observable => this.editorService.getBlocks(action.payload.holder)\n    ]),\n    mergeMap(([action, blocks]) => {\n      blocks.subscribe();\n      return new SaveEnd({\n        holder: action.payload.holder,\n        data: {\n          time: Date.now(),\n          version: EditorJS.version,\n          blocks: blocks\n        }\n      });\n    })\n  )\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Effect({dispatch: false})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in libs/ngx-editorjs-ngrx/src/lib/effects/ngx-editorjs.effects.ts:14\n                            \n                        \n\n\n            \n        \n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { Effect, Actions, ofType } from '@ngrx/effects';\nimport { NgxEditorJSService, Block } from '@tinynodes/ngx-editorjs';\nimport { EditorJSActionTypes, SaveStart, SaveEnd } from '../actions/ngx-editorjs.actions';\nimport { switchMap, map, withLatestFrom, tap, mergeMap } from 'rxjs/operators';\nimport { Observable } from 'rxjs';\nimport EditorJS from '@editorjs/editorjs';\n\n@Injectable()\nexport class NgxEditorJSEffects {\n  constructor(private readonly actions$: Actions, private readonly editorService: NgxEditorJSService) {}\n\n  @Effect({ dispatch: false })\n  $save = this.actions$.pipe(\n    ofType(EditorJSActionTypes.SaveStart),\n    map((action: SaveStart) => {\n      this.editorService.save(action.payload.holder);\n      return action;\n    }),\n    withLatestFrom([\n      map((action: SaveStart) => action),\n      (action: SaveStart): Observable => this.editorService.getBlocks(action.payload.holder)\n    ]),\n    mergeMap(([action, blocks]) => {\n      blocks.subscribe();\n      return new SaveEnd({\n        holder: action.payload.holder,\n        data: {\n          time: Date.now(),\n          version: EditorJS.version,\n          blocks: blocks\n        }\n      });\n    })\n  );\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/NgxEditorJSModule.html":{"url":"modules/NgxEditorJSModule.html","title":"module - NgxEditorJSModule","body":"\n                   \n\n\n\n\n    Modules\n    NgxEditorJSModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_NgxEditorJSModule\n\n\n\ncluster_NgxEditorJSModule_declarations\n\n\n\ncluster_NgxEditorJSModule_exports\n\n\n\ncluster_NgxEditorJSModule_providers\n\n\n\n\nNgxEditorJSBaseComponent\n\nNgxEditorJSBaseComponent\n\n\n\nNgxEditorJSModule\n\nNgxEditorJSModule\n\nNgxEditorJSModule -->\n\nNgxEditorJSBaseComponent->NgxEditorJSModule\n\n\n\n\n\nNgxEditorJSComponent\n\nNgxEditorJSComponent\n\nNgxEditorJSModule -->\n\nNgxEditorJSComponent->NgxEditorJSModule\n\n\n\n\n\nNgxEditorJSDirective\n\nNgxEditorJSDirective\n\nNgxEditorJSModule -->\n\nNgxEditorJSDirective->NgxEditorJSModule\n\n\n\n\n\nNgxEditorJSMatFieldComponent\n\nNgxEditorJSMatFieldComponent\n\nNgxEditorJSModule -->\n\nNgxEditorJSMatFieldComponent->NgxEditorJSModule\n\n\n\n\n\nNgxEditorJSBaseComponent \n\nNgxEditorJSBaseComponent \n\nNgxEditorJSBaseComponent  -->\n\nNgxEditorJSModule->NgxEditorJSBaseComponent \n\n\n\n\n\nNgxEditorJSComponent \n\nNgxEditorJSComponent \n\nNgxEditorJSComponent  -->\n\nNgxEditorJSModule->NgxEditorJSComponent \n\n\n\n\n\nNgxEditorJSDirective \n\nNgxEditorJSDirective \n\nNgxEditorJSDirective  -->\n\nNgxEditorJSModule->NgxEditorJSDirective \n\n\n\n\n\nNgxEditorJSMatFieldComponent \n\nNgxEditorJSMatFieldComponent \n\nNgxEditorJSMatFieldComponent  -->\n\nNgxEditorJSModule->NgxEditorJSMatFieldComponent \n\n\n\n\n\nNgxEditorJSInstanceService\n\nNgxEditorJSInstanceService\n\nNgxEditorJSModule -->\n\nNgxEditorJSInstanceService->NgxEditorJSModule\n\n\n\n\n\nNgxEditorJSPluginService\n\nNgxEditorJSPluginService\n\nNgxEditorJSModule -->\n\nNgxEditorJSPluginService->NgxEditorJSModule\n\n\n\n\n\nNgxEditorJSService\n\nNgxEditorJSService\n\nNgxEditorJSModule -->\n\nNgxEditorJSService->NgxEditorJSModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            libs/ngx-editorjs/src/lib/ngx-editorjs.module.ts\n        \n\n\n        \n            Description\n        \n        \n            The @tinynodes/ngx-editorjs module provides a collection of features to allow\nany Angular app to use and control an EditorJS instance\nTo use import the module NgxEditorJSModule.forRoot() into the root of your application.\nThe forRoot method takes an optional NgxEditorJSConfig config, this will provide a\ndefault instance.\n\n        \n\n\n        \n            \n                \n                    Declarations\n                    \n                        \n                            NgxEditorJSBaseComponent\n                        \n                        \n                            NgxEditorJSComponent\n                        \n                        \n                            NgxEditorJSDirective\n                        \n                        \n                            NgxEditorJSMatFieldComponent\n                        \n                    \n                \n                \n                    Providers\n                    \n                        \n                            NgxEditorJSInstanceService\n                        \n                        \n                            NgxEditorJSPluginService\n                        \n                        \n                            NgxEditorJSService\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            NgxEditorJSBaseComponent\n                        \n                        \n                            NgxEditorJSComponent\n                        \n                        \n                            NgxEditorJSDirective\n                        \n                        \n                            NgxEditorJSMatFieldComponent\n                        \n                    \n                \n            \n        \n\n        \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Static\n                            forRoot\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    forRoot(config?: NgxEditorJSConfig)\n                \n            \n\n\n            \n                \n                    Defined in libs/ngx-editorjs/src/lib/ngx-editorjs.module.ts:63\n                \n            \n\n\n            \n                \n                    Use this method in the root of the application.  You can pass an optional configuration\nwhich sets some defaults, or use the provided defaults.\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    config\n                                    \n                                                NgxEditorJSConfig\n                                    \n\n                                    \n                                        Yes\n                                    \n\n\n                                    \n                                        The optional configuration to pass\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         ModuleWithProviders\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n    \n\n\n    \n        import { CommonModule } from '@angular/common';\nimport { ModuleWithProviders, NgModule, Optional, SkipSelf } from '@angular/core';\nimport { FormsModule } from '@angular/forms';\nimport { MatFormFieldModule, MatInputModule } from '@angular/material';\nimport EditorJS from '@editorjs/editorjs';\nimport { createModuleConfig } from './config/module-config';\nimport { NgxEditorJSBaseComponent } from './containers/base/container.class';\nimport { NgxEditorJSMatFieldComponent } from './containers/editorjs-mat-field/editorjs-mat-field.component';\nimport { NgxEditorJSComponent } from './containers/editorjs/editorjs.component';\nimport { NgxEditorJSDirective } from './directives/ngx-editorjs.directive';\nimport { NgxEditorJSInstanceService } from './services/editorjs-injector';\nimport { NgxEditorJSService } from './services/editorjs.service';\nimport { NgxEditorJSPluginService } from './services/plugins.service';\nimport { FOR_ROOT_OPTIONS_TOKEN, NgxEditorJSConfig, NGX_EDITORJS_CONFIG } from './types/config';\nimport { EDITORJS_MODULE_IMPORT, EditorJSInstance } from './types/injector';\n\n/**\n * Factory function to return the EditorJS base class\n */\nexport function createEditorJSInstance(editorjs: any) {\n  return editorjs;\n}\n\n/**\n * The `@tinynodes/ngx-editorjs` module provides a collection of features to allow\n * any Angular app to use and control an [EditorJS](http://editorjs.io) instance\n *\n * To use import the module `NgxEditorJSModule.forRoot()` into the root of your application.\n * The `forRoot` method takes an optional `NgxEditorJSConfig` config, this will provide a\n * default instance.\n */\n@NgModule({\n  imports: [CommonModule, FormsModule, MatInputModule, MatFormFieldModule],\n  declarations: [NgxEditorJSComponent, NgxEditorJSMatFieldComponent, NgxEditorJSDirective, NgxEditorJSBaseComponent],\n  exports: [NgxEditorJSComponent, NgxEditorJSMatFieldComponent, NgxEditorJSDirective, NgxEditorJSBaseComponent],\n  providers: [\n    NgxEditorJSService,\n    NgxEditorJSPluginService,\n    NgxEditorJSInstanceService,\n    {\n      provide: EDITORJS_MODULE_IMPORT,\n      useValue: EditorJS\n    },\n    {\n      provide: EditorJSInstance,\n      useFactory: createEditorJSInstance,\n      deps: [EDITORJS_MODULE_IMPORT]\n    }\n  ]\n})\nexport class NgxEditorJSModule {\n  constructor(\n    @Optional()\n    @SkipSelf()\n    parentModule: NgxEditorJSModule\n  ) {}\n\n  /**\n   * Use this method in the root of the application.  You can pass an optional configuration\n   * which sets some defaults, or use the provided defaults.\n   * @param config The optional configuration to pass\n   */\n  static forRoot(@Optional() config?: NgxEditorJSConfig): ModuleWithProviders {\n    return {\n      ngModule: NgxEditorJSModule,\n      providers: [\n        {\n          provide: FOR_ROOT_OPTIONS_TOKEN,\n          useValue: config\n        },\n        {\n          provide: NGX_EDITORJS_CONFIG,\n          useFactory: createModuleConfig,\n          deps: [FOR_ROOT_OPTIONS_TOKEN]\n        }\n      ]\n    };\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/NgxEditorJSPluginService.html":{"url":"injectables/NgxEditorJSPluginService.html","title":"injectable - NgxEditorJSPluginService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  NgxEditorJSPluginService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            libs/ngx-editorjs/src/lib/services/plugins.service.ts\n        \n\n            \n                Description\n            \n            \n                The plugin service provides a singleton to store all plugins injected into the application\nand makes them available for all instances of EditorJS\n\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                pluginsMap\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                add\n                            \n                            \n                                    Public\n                                get\n                            \n                            \n                                    Public\n                                getTools\n                            \n                            \n                                    Public\n                                remove\n                            \n                        \n                    \n                \n\n\n\n\n\n                    \n                        \n                            Accessors\n                        \n                    \n                    \n                        \n                            \n                                \n                                    plugins\n                                \n                            \n                        \n                    \n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(userPlugins: PluginConfig)\n                    \n                \n                        \n                            \n                                Defined in libs/ngx-editorjs/src/lib/services/plugins.service.ts:15\n                            \n                        \n\n                \n                    \n                            When the class is initialized the initial plugins and any user plugins\nwill be passed in and merged and stored in the config map\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        userPlugins\n                                                  \n                                                        \n                                                                        PluginConfig\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                User plugins injected into the application\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            add\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    add(key: string, plugin: BasePlugin)\n                \n            \n\n\n            \n                \n                    Defined in libs/ngx-editorjs/src/lib/services/plugins.service.ts:32\n                \n            \n\n\n            \n                \n                    Add a plugin to the store\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    key\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        The key for the map to store the plugin\n\n                                    \n                                \n                                \n                                    plugin\n                                    \n                                                BasePlugin\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        The plugin instance to add to the service\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            get\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    get(key: string)\n                \n            \n\n\n            \n                \n                    Defined in libs/ngx-editorjs/src/lib/services/plugins.service.ts:49\n                \n            \n\n\n            \n                \n                    Get a single plugin from the map\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    key\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         BasePlugin\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            getTools\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    getTools(exclude: string[])\n                \n            \n\n\n            \n                \n                    Defined in libs/ngx-editorjs/src/lib/services/plugins.service.ts:64\n                \n            \n\n\n            \n                \n                    Returns a map of tools to be initialized by the editor\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Default value\n                                    Description\n                                \n                            \n                            \n                                \n                                    exclude\n                                    \n                                            string[]\n                                    \n\n                                    \n                                        No\n                                    \n\n                                    \n                                        []\n                                    \n\n                                    \n                                        Optional array of keys to exclude from the map\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         ToolSettingsMap\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            remove\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    remove(key: string)\n                \n            \n\n\n            \n                \n                    Defined in libs/ngx-editorjs/src/lib/services/plugins.service.ts:40\n                \n            \n\n\n            \n                \n                    Remove a plugin from the store\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    key\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            pluginsMap\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         PluginConfig\n\n                        \n                    \n                    \n                        \n                            Default value : {}\n                        \n                    \n                        \n                            \n                                    Defined in libs/ngx-editorjs/src/lib/services/plugins.service.ts:15\n                            \n                        \n\n                \n                    \n                        Object map of the plugin configurations\n\n                    \n                \n\n            \n        \n\n\n            \n    \n        Accessors\n    \n        \n            \n                \n                    \n                        \n                        plugins\n                    \n                \n\n                \n                    \n                        getplugins()\n                    \n                \n                            \n                                \n                                    Defined in libs/ngx-editorjs/src/lib/services/plugins.service.ts:56\n                                \n                            \n                    \n                        \n                                Returns a map of all the plugins registered with this service\n\n\n                                \n                                    Returns :         PluginConfig\n\n                                \n                        \n                    \n\n            \n        \n\n    \n\n\n    \n        import { Inject, Injectable } from '@angular/core';\nimport { BasePlugin, PluginConfig, ToolSettingsMap, UserPlugins } from '../types/plugins';\n\n/**\n * The plugin service provides a singleton to store all plugins injected into the application\n * and makes them available for all instances of `EditorJS`\n */\n@Injectable({\n  providedIn: 'root'\n})\nexport class NgxEditorJSPluginService {\n  /**\n   * Object map of the plugin configurations\n   */\n  private pluginsMap: PluginConfig = {};\n\n  /**\n   * When the class is initialized the initial plugins and any user plugins\n   * will be passed in and merged and stored in the config map\n   * @param initialPlugins Default plugins produced by the module\n   * @param userPlugins User plugins injected into the application\n   */\n  constructor(@Inject(UserPlugins) userPlugins: PluginConfig) {\n    Object.entries({ ...userPlugins }).forEach(([key, tool]) => this.add(key, tool));\n  }\n\n  /**\n   * Add a plugin to the store\n   * @param key The key for the map to store the plugin\n   * @param plugin The plugin instance to add to the service\n   */\n  public add(key: string, plugin: BasePlugin) {\n    this.pluginsMap[key] = plugin;\n  }\n\n  /**\n   * Remove a plugin from the store\n   * @param key\n   */\n  public remove(key: string) {\n    this.pluginsMap[key] = null;\n    delete this.pluginsMap[key];\n  }\n\n  /**\n   * Get a single plugin from the map\n   * @param name\n   */\n  public get(key: string): BasePlugin {\n    return this.pluginsMap[key];\n  }\n\n  /**\n   * Returns a map of all the plugins registered with this service\n   */\n  public get plugins(): PluginConfig {\n    return this.pluginsMap;\n  }\n\n  /**\n   * Returns a map of tools to be initialized by the editor\n   * @param exclude Optional array of keys to exclude from the map\n   */\n  public getTools(exclude: string[] = []): ToolSettingsMap {\n    return Object.entries(this.pluginsMap)\n      .filter(([key]) => {\n        return !exclude.includes(key);\n      })\n      .reduce((finalTools, [key, plugin]) => {\n        if (plugin.shortcut) {\n          return {\n            [key]: {\n              class: plugin.plugin(),\n              shortcut: plugin.shortcut()\n            },\n            ...finalTools\n          };\n        } else {\n          return { [key]: plugin.plugin(), ...finalTools };\n        }\n      }, {});\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/NgxEditorJSService.html":{"url":"injectables/NgxEditorJSService.html","title":"injectable - NgxEditorJSService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  NgxEditorJSService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            libs/ngx-editorjs/src/lib/services/editorjs.service.ts\n        \n\n            \n                Description\n            \n            \n                The NgxEditorJSService provides control EditorJS instances via Angular.\n\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                    Readonly\n                                editorActions$\n                            \n                            \n                                    Private\n                                onDestroy$\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                clear\n                            \n                            \n                                    Public\n                                    Async\n                                createEditor\n                            \n                            \n                                    Public\n                                destroy\n                            \n                            \n                                    Public\n                                getBlocks\n                            \n                            \n                                    Public\n                                getChanged\n                            \n                            \n                                    Public\n                                getEditor\n                            \n                            \n                                    Public\n                                hasChanged\n                            \n                            \n                                    Public\n                                isReady\n                            \n                            \n                                    Public\n                                save\n                            \n                            \n                                    Public\n                                update\n                            \n                        \n                    \n                \n\n\n\n\n\n                    \n                        \n                            Accessors\n                        \n                    \n                    \n                        \n                            \n                                \n                                    editorActions\n                                \n                            \n                        \n                    \n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(config: NgxEditorJSConfig, editorService: NgxEditorJSInstanceService, plugins: NgxEditorJSPluginService)\n                    \n                \n                        \n                            \n                                Defined in libs/ngx-editorjs/src/lib/services/editorjs.service.ts:32\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        config\n                                                  \n                                                        \n                                                                        NgxEditorJSConfig\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        editorService\n                                                  \n                                                        \n                                                                        NgxEditorJSInstanceService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        plugins\n                                                  \n                                                        \n                                                                        NgxEditorJSPluginService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            clear\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    clear(undefined: InjectorMethodOption)\n                \n            \n\n\n            \n                \n                    Defined in libs/ngx-editorjs/src/lib/services/editorjs.service.ts:147\n                \n            \n\n\n            \n                \n                    Clears all blocks from an EditorJS instance\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    \n                                                InjectorMethodOption\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            Async\n                            createEditor\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    createEditor(options: CreateEditorJSOptions)\n                \n            \n\n\n            \n                \n                    Defined in libs/ngx-editorjs/src/lib/services/editorjs.service.ts:70\n                \n            \n\n\n            \n                \n                    This method creates a new EditorJS instance\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    options\n                                    \n                                                CreateEditorJSOptions\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            destroy\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    destroy(undefined: InjectorMethodOption)\n                \n            \n\n\n            \n                \n                    Defined in libs/ngx-editorjs/src/lib/services/editorjs.service.ts:157\n                \n            \n\n\n            \n                \n                    Destroy the EditorJS instance\nIt also calls the maps and sets their values back to their defaults and then\ncompletes and destroys them\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    \n                                                InjectorMethodOption\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            getBlocks\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    getBlocks(undefined: InjectorMethodOption)\n                \n            \n\n\n            \n                \n                    Defined in libs/ngx-editorjs/src/lib/services/editorjs.service.ts:93\n                \n            \n\n\n            \n                \n                    Get an observable of the blocks for an EditorJS instance\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    \n                                                InjectorMethodOption\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Observable\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            getChanged\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    getChanged(undefined: InjectorMethodOption)\n                \n            \n\n\n            \n                \n                    Defined in libs/ngx-editorjs/src/lib/services/editorjs.service.ts:111\n                \n            \n\n\n            \n                \n                    Returns an Observable of the current timestamp of the last change\nthis can be subscribed to before calling the createEditor method\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    \n                                                InjectorMethodOption\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Observable\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            getEditor\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    getEditor(undefined: InjectorMethodOption)\n                \n            \n\n\n            \n                \n                    Defined in libs/ngx-editorjs/src/lib/services/editorjs.service.ts:85\n                \n            \n\n\n            \n                \n                    Get an EditorJS instance\nSee the EditorJS API docs for more details\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    \n                                                InjectorMethodOption\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Observable\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            hasChanged\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    hasChanged(undefined: InjectorMethodOption)\n                \n            \n\n\n            \n                \n                    Defined in libs/ngx-editorjs/src/lib/services/editorjs.service.ts:119\n                \n            \n\n\n            \n                \n                    Check to see if the EditorJS instance has changed\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    \n                                                InjectorMethodOption\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            isReady\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    isReady(undefined: InjectorMethodOption)\n                \n            \n\n\n            \n                \n                    Defined in libs/ngx-editorjs/src/lib/services/editorjs.service.ts:102\n                \n            \n\n\n            \n                \n                    Returns an Observable of the current ready state, this can be subscribed to before calling\nthe createEditor method\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    \n                                                InjectorMethodOption\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Observable\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            save\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    save(undefined: InjectorMethodOption)\n                \n            \n\n\n            \n                \n                    Defined in libs/ngx-editorjs/src/lib/services/editorjs.service.ts:139\n                \n            \n\n\n            \n                \n                    Calls the EditorJS save method which returns an OutputData object.\nFrom this the service updates the blocks map and change map values\nIf there is no instance of that name it will throw an error.\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    \n                                                InjectorMethodOption\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            update\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    update(undefined: InjectorMethodOption)\n                \n            \n\n\n            \n                \n                    Defined in libs/ngx-editorjs/src/lib/services/editorjs.service.ts:129\n                \n            \n\n\n            \n                \n                    This method updates the blocks within the EditorJS instance.\nIf there is no instance of that name it will throw an error.\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    \n                                                InjectorMethodOption\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                                Readonly\n                            editorActions$\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : new BehaviorSubject({\n    action: ''\n  })\n                        \n                    \n                        \n                            \n                                    Defined in libs/ngx-editorjs/src/lib/services/editorjs.service.ts:23\n                            \n                        \n\n                \n                    \n                        Internal editor action state\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            onDestroy$\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : new Subject()\n                        \n                    \n                        \n                            \n                                    Defined in libs/ngx-editorjs/src/lib/services/editorjs.service.ts:19\n                            \n                        \n\n\n            \n        \n\n\n            \n    \n        Accessors\n    \n        \n            \n                \n                    \n                        \n                        editorActions\n                    \n                \n\n                \n                    \n                        geteditorActions()\n                    \n                \n                            \n                                \n                                    Defined in libs/ngx-editorjs/src/lib/services/editorjs.service.ts:30\n                                \n                            \n                    \n                        \n                                Editor action stream\n\n\n                        \n                    \n\n            \n        \n\n    \n\n\n    \n        import { Inject, Injectable } from '@angular/core';\nimport EditorJS, { EditorConfig } from '@editorjs/editorjs';\nimport { BehaviorSubject, Observable, Subject } from 'rxjs';\nimport { filter, takeUntil } from 'rxjs/operators';\nimport { Block } from '../types/blocks';\nimport { NgxEditorJSConfig, NGX_EDITORJS_CONFIG } from '../types/config';\nimport { CreateEditorJSOptions, EditorJSAction, EditorJSActionTypes } from '../types/editorjs-service';\nimport { NgxEditorJSInstanceService } from './editorjs-injector';\nimport { NgxEditorJSPluginService } from './plugins.service';\nimport { InjectorMethodOption } from '../types/injector';\n\n/**\n * The NgxEditorJSService provides control EditorJS instances via Angular.\n */\n@Injectable({\n  providedIn: 'root'\n})\nexport class NgxEditorJSService {\n  private onDestroy$ = new Subject();\n  /**\n   * Internal editor action state\n   */\n  private readonly editorActions$ = new BehaviorSubject({\n    action: ''\n  });\n\n  /**\n   * Editor action stream\n   */\n  public get editorActions() {\n    return this.editorActions$.pipe(filter(action => action.action !== ''));\n  }\n\n  constructor(\n    @Inject(NGX_EDITORJS_CONFIG) private config: NgxEditorJSConfig,\n    private readonly editorService: NgxEditorJSInstanceService,\n    private readonly plugins: NgxEditorJSPluginService\n  ) {\n    this.editorActions.pipe(takeUntil(this.onDestroy$)).subscribe(editorAction => {\n      switch (editorAction.action) {\n        case EditorJSActionTypes.CreateEditor: {\n          return this.createEditor(editorAction.payload);\n        }\n        case EditorJSActionTypes.ClearEditor: {\n          return this.clear(editorAction.payload);\n        }\n        case EditorJSActionTypes.DestroyEditor: {\n          return this.destroy(editorAction.payload);\n        }\n        case EditorJSActionTypes.SaveEditor: {\n          return this.save(editorAction.payload);\n        }\n        case EditorJSActionTypes.UpdateEditor: {\n          return this.update(editorAction.payload);\n        }\n        default: {\n          return;\n        }\n      }\n    });\n  }\n\n  /**\n   * This method creates a new EditorJS instance\n   * @param holder The ID of the holder of the instance\n   * @param blocks Optional initial set of blocks to render in the editor\n   * @param excludeTools String array of keys to not include with this editor\n   * @param autoSave When an instance changes we update the block map, set to false if you want to disable\n   */\n  public async createEditor(options: CreateEditorJSOptions): Promise {\n    const editorConfig: EditorConfig = {\n      ...this.config.editorjs,\n      ...options.config,\n      tools: this.plugins.getTools(options.includeTools)\n    };\n\n    await this.editorService.createInstance({ editorConfig });\n  }\n\n  /**\n   * Get an `EditorJS` instance\n   * See the [EditorJS API](https://editorjs.io/api) docs for more details\n   * @param holder The ID of the holder of the instance\n   */\n  public getEditor({ holder }: InjectorMethodOption): Observable {\n    return this.editorService.getInstance({ holder }).pipe(filter(editor => typeof editor !== 'undefined'));\n  }\n\n  /**\n   * Get an observable of the blocks for an `EditorJS` instance\n   * @param holder The ID of the holder of the instance\n   */\n  public getBlocks({ holder }: InjectorMethodOption): Observable {\n    return this.editorService.getBlocks({ holder });\n  }\n\n  /**\n   * Returns an `Observable` of the current ready state, this can be subscribed to before calling\n   * the `createEditor` method\n   * @param holder\n   */\n  public isReady({ holder }: InjectorMethodOption): Observable {\n    return this.editorService.getReady({ holder });\n  }\n\n  /**\n   * Returns an `Observable` of the current timestamp of the last change\n   * this can be subscribed to before calling the `createEditor` method\n   * @param holder\n   */\n  public getChanged({ holder }: InjectorMethodOption): Observable {\n    return this.editorService.getChanged({ holder });\n  }\n\n  /**\n   * Check to see if the `EditorJS` instance has changed\n   * @param holder The ID of the holder of the instance\n   */\n  public hasChanged({ holder }: InjectorMethodOption) {\n    this.editorService.onChange({ holder });\n  }\n\n  /**\n   * This method updates the blocks within the `EditorJS` instance.\n   * If there is no instance of that name it will throw an error.\n   * @param holder The ID of the holder of the instance\n   * @param blocks The array of `Block` elements to render\n   */\n  public update({ holder, blocks }: InjectorMethodOption) {\n    this.editorService.update({ holder, blocks });\n  }\n\n  /**\n   * Calls the `EditorJS` save method which returns an `OutputData` object.\n   * From this the service updates the blocks map and change map values\n   * If there is no instance of that name it will throw an error.\n   * @param holder The ID of the holder of the instance\n   */\n  public save({ holder }: InjectorMethodOption): void {\n    this.editorService.save({ holder });\n  }\n\n  /**\n   * Clears all blocks from an `EditorJS instance`\n   * @param holder The ID of the holder of the instance\n   */\n  public clear({ holder }: InjectorMethodOption): void {\n    this.editorService.clear({ holder });\n  }\n\n  /**\n   * Destroy the `EditorJS` instance\n   * It also calls the maps and sets their values back to their defaults and then\n   * completes and destroys them\n   * @param holder The ID of the holder of the instance\n   */\n  public destroy({ holder }: InjectorMethodOption): void {\n    this.editorService.destroyInstance({ holder });\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/NgxEditorjsDemoModule.html":{"url":"modules/NgxEditorjsDemoModule.html","title":"module - NgxEditorjsDemoModule","body":"\n                   \n\n\n\n\n    Modules\n    NgxEditorjsDemoModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_NgxEditorjsDemoModule\n\n\n\ncluster_NgxEditorjsDemoModule_declarations\n\n\n\ncluster_NgxEditorjsDemoModule_imports\n\n\n\ncluster_NgxEditorjsDemoModule_exports\n\n\n\n\nFormContainerComponent\n\nFormContainerComponent\n\n\n\nNgxEditorjsDemoModule\n\nNgxEditorjsDemoModule\n\nNgxEditorjsDemoModule -->\n\nFormContainerComponent->NgxEditorjsDemoModule\n\n\n\n\n\nNgxEditorJSDemoHomeComponent\n\nNgxEditorJSDemoHomeComponent\n\nNgxEditorjsDemoModule -->\n\nNgxEditorJSDemoHomeComponent->NgxEditorjsDemoModule\n\n\n\n\n\nNgxEditorJSDemoTagComponent\n\nNgxEditorJSDemoTagComponent\n\nNgxEditorjsDemoModule -->\n\nNgxEditorJSDemoTagComponent->NgxEditorjsDemoModule\n\n\n\n\n\nPageContainerComponent\n\nPageContainerComponent\n\nNgxEditorjsDemoModule -->\n\nPageContainerComponent->NgxEditorjsDemoModule\n\n\n\n\n\nFormContainerComponent \n\nFormContainerComponent \n\nFormContainerComponent  -->\n\nNgxEditorjsDemoModule->FormContainerComponent \n\n\n\n\n\nPageContainerComponent \n\nPageContainerComponent \n\nPageContainerComponent  -->\n\nNgxEditorjsDemoModule->PageContainerComponent \n\n\n\n\n\nPageStoreModule \n\nPageStoreModule \n\nPageStoreModule  -->\n\nNgxEditorjsDemoModule->PageStoreModule \n\n\n\n\n\nMaterialModule\n\nMaterialModule\n\nNgxEditorjsDemoModule -->\n\nMaterialModule->NgxEditorjsDemoModule\n\n\n\n\n\nNgxEditorJSModule\n\nNgxEditorJSModule\n\nNgxEditorjsDemoModule -->\n\nNgxEditorJSModule->NgxEditorjsDemoModule\n\n\n\n\n\nNgxTinynodesCoreModule\n\nNgxTinynodesCoreModule\n\nNgxEditorjsDemoModule -->\n\nNgxTinynodesCoreModule->NgxEditorjsDemoModule\n\n\n\n\n\nPageStoreModule\n\nPageStoreModule\n\nNgxEditorjsDemoModule -->\n\nPageStoreModule->NgxEditorjsDemoModule\n\n\n\n\n\nPluginCodeModule\n\nPluginCodeModule\n\nNgxEditorjsDemoModule -->\n\nPluginCodeModule->NgxEditorjsDemoModule\n\n\n\n\n\nPluginHeaderModule\n\nPluginHeaderModule\n\nNgxEditorjsDemoModule -->\n\nPluginHeaderModule->NgxEditorjsDemoModule\n\n\n\n\n\nPluginLinkModule\n\nPluginLinkModule\n\nNgxEditorjsDemoModule -->\n\nPluginLinkModule->NgxEditorjsDemoModule\n\n\n\n\n\nPluginListModule\n\nPluginListModule\n\nNgxEditorjsDemoModule -->\n\nPluginListModule->NgxEditorjsDemoModule\n\n\n\n\n\nPluginMarkerModule\n\nPluginMarkerModule\n\nNgxEditorjsDemoModule -->\n\nPluginMarkerModule->NgxEditorjsDemoModule\n\n\n\n\n\nPluginParagraphModule\n\nPluginParagraphModule\n\nNgxEditorjsDemoModule -->\n\nPluginParagraphModule->NgxEditorjsDemoModule\n\n\n\n\n\nPluginSimpleImageModule\n\nPluginSimpleImageModule\n\nNgxEditorjsDemoModule -->\n\nPluginSimpleImageModule->NgxEditorjsDemoModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            libs/ngx-editorjs-demo/src/lib/ngx-editorjs-demo.module.ts\n        \n\n\n\n\n        \n            \n                \n                    Declarations\n                    \n                        \n                            FormContainerComponent\n                        \n                        \n                            NgxEditorJSDemoHomeComponent\n                        \n                        \n                            NgxEditorJSDemoTagComponent\n                        \n                        \n                            PageContainerComponent\n                        \n                    \n                \n                \n                    EntryComponents\n                    \n                        \n                            FormContainerComponent\n                        \n                        \n                            PageContainerComponent\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            MaterialModule\n                        \n                        \n                            NgxEditorJSModule\n                        \n                        \n                            NgxTinynodesCoreModule\n                        \n                        \n                            PageStoreModule\n                        \n                        \n                            PluginCodeModule\n                        \n                        \n                            PluginHeaderModule\n                        \n                        \n                            PluginLinkModule\n                        \n                        \n                            PluginListModule\n                        \n                        \n                            PluginMarkerModule\n                        \n                        \n                            PluginParagraphModule\n                        \n                        \n                            PluginSimpleImageModule\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            FormContainerComponent\n                        \n                        \n                            PageContainerComponent\n                        \n                        \n                            PageStoreModule\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\nimport { ReactiveFormsModule } from '@angular/forms';\nimport {\n  MatButtonModule,\n  MatCardModule,\n  MatGridListModule,\n  MatExpansionModule,\n  MatInputModule,\n  MatFormFieldModule,\n  MatChipsModule,\n  MatBadgeModule,\n  MatIconModule\n} from '@angular/material';\nimport { RouterModule } from '@angular/router';\nimport { NgxEditorJSModule, UserPlugins } from '@tinynodes/ngx-editorjs';\nimport {\n  PluginCodeModule,\n  PluginHeaderModule,\n  PluginLinkModule,\n  PluginListModule,\n  PluginMarkerModule,\n  PluginParagraphModule,\n  PluginSimpleImageModule\n} from '@tinynodes/ngx-editorjs-plugins';\nimport { MarkdownModule } from 'ngx-markdown';\nimport { createNgxEditorJSDemoTools } from './config';\nimport { PageContainerComponent } from './containers/page-container/page-container.component';\nimport { ngxEditorjsDemoRoutes } from './ngx-editorjs-demo.routes';\nimport { PageStoreModule } from './store/pages/pages.module';\nimport { MaterialModule } from 'apps/ngx-tinynodes/src/app/material.module';\nimport { NgxTinynodesCoreModule } from '@tinynodes/ngx-tinynodes-core/src';\nimport { FormContainerComponent } from './containers/form-container/form-container.component';\nimport { NgxEditorJSDemoHomeComponent } from './containers/home-container/home-container.component';\nimport { NgxEditorJSDemoTagComponent } from './components/tag-component/tag.component';\n\n@NgModule({\n  imports: [\n    CommonModule,\n    RouterModule.forChild(ngxEditorjsDemoRoutes),\n    MarkdownModule.forChild(),\n    ReactiveFormsModule,\n    PageStoreModule,\n    NgxEditorJSModule,\n    PluginHeaderModule,\n    PluginParagraphModule,\n    PluginListModule,\n    PluginCodeModule,\n    PluginSimpleImageModule,\n    PluginLinkModule,\n    PluginMarkerModule,\n    MaterialModule,\n    MatCardModule,\n    MatButtonModule,\n    NgxTinynodesCoreModule,\n    MatGridListModule,\n    MatExpansionModule,\n    MatInputModule,\n    MatFormFieldModule,\n    MatChipsModule,\n    MatBadgeModule,\n    MatIconModule\n  ],\n  providers: [\n    {\n      provide: UserPlugins,\n      useFactory: createNgxEditorJSDemoTools\n    }\n  ],\n  declarations: [\n    PageContainerComponent,\n    FormContainerComponent,\n    NgxEditorJSDemoHomeComponent,\n    NgxEditorJSDemoTagComponent\n  ],\n  exports: [PageStoreModule, PageContainerComponent, FormContainerComponent],\n  entryComponents: [PageContainerComponent, FormContainerComponent]\n})\nexport class NgxEditorjsDemoModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/NgxEditorjsNgrxModule.html":{"url":"modules/NgxEditorjsNgrxModule.html","title":"module - NgxEditorjsNgrxModule","body":"\n                   \n\n\n\n\n    Modules\n    NgxEditorjsNgrxModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_NgxEditorjsNgrxModule\n\n\n\ncluster_NgxEditorjsNgrxModule_imports\n\n\n\n\nNgxEditorJSModule\n\nNgxEditorJSModule\n\n\n\nNgxEditorjsNgrxModule\n\nNgxEditorjsNgrxModule\n\nNgxEditorjsNgrxModule -->\n\nNgxEditorJSModule->NgxEditorjsNgrxModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            libs/ngx-editorjs-ngrx/src/lib/ngx-editorjs-ngrx.module.ts\n        \n\n\n        \n            Description\n        \n        \n            Warning: This module is current in development and not yet published\nThis module provides a set of NGRX Effects that allow you to control\nan EditorJS instance via store actions.\n\n        \n\n\n        \n            \n                \n                    Imports\n                    \n                        \n                            NgxEditorJSModule\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { EffectsModule } from '@ngrx/effects';\nimport { NgxEditorJSModule } from '@tinynodes/ngx-editorjs';\n\n/**\n * **Warning**: This module is current in development and not yet published\n *\n * This module provides a set of [NGRX Effects](https://ngrx.io/guide/effects) that allow you to control\n * an `EditorJS` instance via store actions.\n */\n@NgModule({\n  imports: [CommonModule, NgxEditorJSModule, EffectsModule.forFeature([])]\n})\nexport class NgxEditorjsNgrxModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/NgxEditorjsPluginsModule.html":{"url":"modules/NgxEditorjsPluginsModule.html","title":"module - NgxEditorjsPluginsModule","body":"\n                   \n\n\n\n\n    Modules\n    NgxEditorjsPluginsModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_NgxEditorjsPluginsModule\n\n\n\ncluster_NgxEditorjsPluginsModule_imports\n\n\n\ncluster_NgxEditorjsPluginsModule_exports\n\n\n\n\nPluginCodeModule\n\nPluginCodeModule\n\n\n\nNgxEditorjsPluginsModule\n\nNgxEditorjsPluginsModule\n\nNgxEditorjsPluginsModule -->\n\nPluginCodeModule->NgxEditorjsPluginsModule\n\n\n\n\n\nPluginHeaderModule\n\nPluginHeaderModule\n\nNgxEditorjsPluginsModule -->\n\nPluginHeaderModule->NgxEditorjsPluginsModule\n\n\n\n\n\nPluginImageModule\n\nPluginImageModule\n\nNgxEditorjsPluginsModule -->\n\nPluginImageModule->NgxEditorjsPluginsModule\n\n\n\n\n\nPluginLinkModule\n\nPluginLinkModule\n\nNgxEditorjsPluginsModule -->\n\nPluginLinkModule->NgxEditorjsPluginsModule\n\n\n\n\n\nPluginListModule\n\nPluginListModule\n\nNgxEditorjsPluginsModule -->\n\nPluginListModule->NgxEditorjsPluginsModule\n\n\n\n\n\nPluginMarkerModule\n\nPluginMarkerModule\n\nNgxEditorjsPluginsModule -->\n\nPluginMarkerModule->NgxEditorjsPluginsModule\n\n\n\n\n\nPluginParagraphModule\n\nPluginParagraphModule\n\nNgxEditorjsPluginsModule -->\n\nPluginParagraphModule->NgxEditorjsPluginsModule\n\n\n\n\n\nPluginSimpleImageModule\n\nPluginSimpleImageModule\n\nNgxEditorjsPluginsModule -->\n\nPluginSimpleImageModule->NgxEditorjsPluginsModule\n\n\n\n\n\nPluginCodeModule \n\nPluginCodeModule \n\nPluginCodeModule  -->\n\nNgxEditorjsPluginsModule->PluginCodeModule \n\n\n\n\n\nPluginHeaderModule \n\nPluginHeaderModule \n\nPluginHeaderModule  -->\n\nNgxEditorjsPluginsModule->PluginHeaderModule \n\n\n\n\n\nPluginImageModule \n\nPluginImageModule \n\nPluginImageModule  -->\n\nNgxEditorjsPluginsModule->PluginImageModule \n\n\n\n\n\nPluginLinkModule \n\nPluginLinkModule \n\nPluginLinkModule  -->\n\nNgxEditorjsPluginsModule->PluginLinkModule \n\n\n\n\n\nPluginListModule \n\nPluginListModule \n\nPluginListModule  -->\n\nNgxEditorjsPluginsModule->PluginListModule \n\n\n\n\n\nPluginMarkerModule \n\nPluginMarkerModule \n\nPluginMarkerModule  -->\n\nNgxEditorjsPluginsModule->PluginMarkerModule \n\n\n\n\n\nPluginParagraphModule \n\nPluginParagraphModule \n\nPluginParagraphModule  -->\n\nNgxEditorjsPluginsModule->PluginParagraphModule \n\n\n\n\n\nPluginSimpleImageModule \n\nPluginSimpleImageModule \n\nPluginSimpleImageModule  -->\n\nNgxEditorjsPluginsModule->PluginSimpleImageModule \n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            libs/ngx-editorjs-plugins/src/lib/ngx-editorjs-plugins.module.ts\n        \n\n\n        \n            Description\n        \n        \n            The NgxEditorjsPluginsModule provides several additional modules\nthat provide a way to easily plug in block and inline tools for EditorJS.\nImporting NgxEditorjsPluginsModule will include all modules, while it\nis also possible to import each individual module as required.\n\n        \n\n\n        \n            \n                \n                    Imports\n                    \n                        \n                            PluginCodeModule\n                        \n                        \n                            PluginHeaderModule\n                        \n                        \n                            PluginImageModule\n                        \n                        \n                            PluginLinkModule\n                        \n                        \n                            PluginListModule\n                        \n                        \n                            PluginMarkerModule\n                        \n                        \n                            PluginParagraphModule\n                        \n                        \n                            PluginSimpleImageModule\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            PluginCodeModule\n                        \n                        \n                            PluginHeaderModule\n                        \n                        \n                            PluginImageModule\n                        \n                        \n                            PluginLinkModule\n                        \n                        \n                            PluginListModule\n                        \n                        \n                            PluginMarkerModule\n                        \n                        \n                            PluginParagraphModule\n                        \n                        \n                            PluginSimpleImageModule\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\nimport { PluginCodeModule } from './plugins/code/code.module';\nimport { PluginHeaderModule } from './plugins/header/header.module';\nimport { PluginImageModule } from './plugins/image/image.module';\nimport { PluginLinkModule } from './plugins/link/link.module';\nimport { PluginListModule } from './plugins/list/list.module';\nimport { PluginMarkerModule } from './plugins/marker/marker.module';\nimport { PluginParagraphModule } from './plugins/paragraph/paragraph.module';\nimport { PluginSimpleImageModule } from './plugins/simple-image/simple-image.module';\n\n/**\n * The `NgxEditorjsPluginsModule` provides several additional modules\n * that provide a way to easily plug in block and inline tools for `EditorJS`.\n *\n * Importing `NgxEditorjsPluginsModule` will include all modules, while it\n * is also possible to import each individual module as required.\n */\n@NgModule({\n  imports: [\n    CommonModule,\n    PluginCodeModule,\n    PluginHeaderModule,\n    PluginImageModule,\n    PluginLinkModule,\n    PluginListModule,\n    PluginMarkerModule,\n    PluginParagraphModule,\n    PluginSimpleImageModule\n  ],\n  exports: [\n    PluginCodeModule,\n    PluginHeaderModule,\n    PluginImageModule,\n    PluginLinkModule,\n    PluginListModule,\n    PluginMarkerModule,\n    PluginParagraphModule,\n    PluginSimpleImageModule\n  ]\n})\nexport class NgxEditorjsPluginsModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/NgxHideableHeaderDemoModule.html":{"url":"modules/NgxHideableHeaderDemoModule.html","title":"module - NgxHideableHeaderDemoModule","body":"\n                   \n\n\n\n\n    Modules\n    NgxHideableHeaderDemoModule\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            libs/ngx-hideable-header-demo/src/lib/ngx-hideable-header-demo.module.ts\n        \n\n\n\n\n        \n            \n            \n        \n\n\n    \n\n\n    \n        import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { RouterModule, Route } from '@angular/router';\n\nexport const ngxHideableHeaderDemoRoutes: Route[] = [];\n\n@NgModule({\n  imports: [CommonModule, RouterModule]\n})\nexport class NgxHideableHeaderDemoModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/NgxTinynodesCoreMaterialModule.html":{"url":"modules/NgxTinynodesCoreMaterialModule.html","title":"module - NgxTinynodesCoreMaterialModule","body":"\n                   \n\n\n\n\n    Modules\n    NgxTinynodesCoreMaterialModule\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            libs/ngx-tinynodes-core/src/lib/ngx-tinynodes-core-material.module.ts\n        \n\n\n\n\n        \n            \n            \n        \n\n\n    \n\n\n    \n        import { NgModule } from '@angular/core';\nimport {\n  MatGridListModule,\n  MatCardModule,\n  MatExpansionModule,\n  MatListModule,\n  MatButtonModule\n} from '@angular/material';\nimport { CommonModule } from '@angular/common';\n\n@NgModule({\n  imports: [CommonModule, MatGridListModule, MatCardModule, MatExpansionModule, MatListModule, MatButtonModule],\n  exports: [CommonModule, MatGridListModule, MatCardModule, MatExpansionModule, MatListModule, MatButtonModule]\n})\nexport class NgxTinynodesCoreMaterialModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/NgxTinynodesCoreModule.html":{"url":"modules/NgxTinynodesCoreModule.html","title":"module - NgxTinynodesCoreModule","body":"\n                   \n\n\n\n\n    Modules\n    NgxTinynodesCoreModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_NgxTinynodesCoreModule\n\n\n\ncluster_NgxTinynodesCoreModule_declarations\n\n\n\ncluster_NgxTinynodesCoreModule_imports\n\n\n\ncluster_NgxTinynodesCoreModule_exports\n\n\n\n\nNgxEditorJSDemoInfoComponent\n\nNgxEditorJSDemoInfoComponent\n\n\n\nNgxTinynodesCoreModule\n\nNgxTinynodesCoreModule\n\nNgxTinynodesCoreModule -->\n\nNgxEditorJSDemoInfoComponent->NgxTinynodesCoreModule\n\n\n\n\n\nApplicationDataModule \n\nApplicationDataModule \n\nApplicationDataModule  -->\n\nNgxTinynodesCoreModule->ApplicationDataModule \n\n\n\n\n\nNgxEditorJSDemoInfoComponent \n\nNgxEditorJSDemoInfoComponent \n\nNgxEditorJSDemoInfoComponent  -->\n\nNgxTinynodesCoreModule->NgxEditorJSDemoInfoComponent \n\n\n\n\n\nNgxTinynodesCoreMaterialModule \n\nNgxTinynodesCoreMaterialModule \n\nNgxTinynodesCoreMaterialModule  -->\n\nNgxTinynodesCoreModule->NgxTinynodesCoreMaterialModule \n\n\n\n\n\nApplicationDataModule\n\nApplicationDataModule\n\nNgxTinynodesCoreModule -->\n\nApplicationDataModule->NgxTinynodesCoreModule\n\n\n\n\n\nNgxTinynodesCoreMaterialModule\n\nNgxTinynodesCoreMaterialModule\n\nNgxTinynodesCoreModule -->\n\nNgxTinynodesCoreMaterialModule->NgxTinynodesCoreModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            libs/ngx-tinynodes-core/src/lib/ngx-tinynodes-core.module.ts\n        \n\n\n        \n            Description\n        \n        \n            This module provides all the core features across the Tinynodes site\nthat need shared.\nThis includes the ApplicationDataModule which provides state and data loading via\nthe AppService\n\n        \n\n\n        \n            \n                \n                    Declarations\n                    \n                        \n                            NgxEditorJSDemoInfoComponent\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            ApplicationDataModule\n                        \n                        \n                            NgxTinynodesCoreMaterialModule\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            ApplicationDataModule\n                        \n                        \n                            NgxEditorJSDemoInfoComponent\n                        \n                        \n                            NgxTinynodesCoreMaterialModule\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { NgModule } from '@angular/core';\nimport { ApplicationDataModule } from './stores/app/application.module';\nimport { NgxEditorJSDemoInfoComponent } from './components/demo-info/demo-info.component';\nimport { NgxTinynodesCoreMaterialModule } from './ngx-tinynodes-core-material.module';\n/**\n * This module provides all the core features across the Tinynodes site\n * that need shared.\n *\n * This includes the `ApplicationDataModule` which provides state and data loading via\n * the `AppService`\n */\n@NgModule({\n  imports: [ApplicationDataModule, NgxTinynodesCoreMaterialModule],\n  declarations: [NgxEditorJSDemoInfoComponent],\n  exports: [ApplicationDataModule, NgxEditorJSDemoInfoComponent, NgxTinynodesCoreMaterialModule]\n})\nexport class NgxTinynodesCoreModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/NotReady.html":{"url":"classes/NotReady.html","title":"class - NotReady","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  NotReady\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            libs/ngx-editorjs-ngrx/src/lib/actions/ngx-editorjs.actions.ts\n        \n\n\n\n            \n                Implements\n            \n            \n                        Action\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                payload\n                            \n                            \n                                    Readonly\n                                type\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(payload: literal type)\n                    \n                \n                        \n                            \n                                Defined in libs/ngx-editorjs-ngrx/src/lib/actions/ngx-editorjs.actions.ts:23\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        payload\n                                                  \n                                                        \n                                                                    literal type\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            payload\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     literal type\n\n                        \n                    \n                        \n                            \n                                    Defined in libs/ngx-editorjs-ngrx/src/lib/actions/ngx-editorjs.actions.ts:24\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                            type\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : EditorJSActionTypes.NotReady\n                        \n                    \n                        \n                            \n                                    Defined in libs/ngx-editorjs-ngrx/src/lib/actions/ngx-editorjs.actions.ts:23\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { Action } from '@ngrx/store';\nimport { OutputData } from '@editorjs/editorjs';\n\nexport enum EditorJSActionTypes {\n  SaveStart = '[ngx-editorjs] Start Save',\n  SaveEnd = '[ngx-editorjs] Start End',\n  NotReady = '[ngx-editorjs] Not Ready',\n  Ready = '[ngx-editorjs] Ready',\n  Changed = '[ngx-editorjs] Changed'\n}\n\nexport class SaveStart implements Action {\n  readonly type = EditorJSActionTypes.SaveStart;\n  constructor(public payload: { holder: string }) {}\n}\n\nexport class SaveEnd implements Action {\n  readonly type = EditorJSActionTypes.SaveEnd;\n  constructor(public payload: { holder: string; data: OutputData }) {}\n}\n\nexport class NotReady implements Action {\n  readonly type = EditorJSActionTypes.NotReady;\n  constructor(public payload: { holder: string }) {}\n}\n\nexport class Ready implements Action {\n  readonly type = EditorJSActionTypes.Ready;\n  constructor(public payload: { holder: string }) {}\n}\n\nexport class Changed implements Action {\n  readonly type = EditorJSActionTypes.Changed;\n  constructor(public payload: { holder: string; data: OutputData }) {}\n}\n\nexport type NgxEditorJSActions = SaveStart | SaveEnd | NotReady | Ready | Changed;\n\n    \n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/Page.html":{"url":"interfaces/Page.html","title":"interface - Page","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  Page\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            libs/ngx-editorjs-demo/src/lib/store/pages/pages.models.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        blocks\n                                \n                                \n                                        id\n                                \n                                \n                                        pageTags\n                                \n                                \n                                        pageTitle\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        blocks\n                                    \n                                \n                                \n                                    \n                                        blocks:     PageBlock[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     PageBlock[]\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        id\n                                    \n                                \n                                \n                                    \n                                        id:     ID\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     ID\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        pageTags\n                                    \n                                \n                                \n                                    \n                                        pageTags:         Tag[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         Tag[]\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        pageTitle\n                                    \n                                \n                                \n                                    \n                                        pageTitle:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { ID } from '@datorama/akita';\nimport { Block } from '@tinynodes/ngx-editorjs';\n\nexport interface Tag {\n  key: string;\n}\n\nexport interface PageBlock extends Block {\n  id: ID;\n}\n\nexport interface Page {\n  id: ID;\n  pageTitle: string;\n  pageTags: Tag[];\n  blocks: PageBlock[];\n}\n\n    \n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/PageBlock.html":{"url":"interfaces/PageBlock.html","title":"interface - PageBlock","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  PageBlock\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            libs/ngx-editorjs-demo/src/lib/store/pages/pages.models.ts\n        \n\n\n            \n                Extends\n            \n            \n                        Block\n            \n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        id\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        id\n                                    \n                                \n                                \n                                    \n                                        id:     ID\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     ID\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { ID } from '@datorama/akita';\nimport { Block } from '@tinynodes/ngx-editorjs';\n\nexport interface Tag {\n  key: string;\n}\n\nexport interface PageBlock extends Block {\n  id: ID;\n}\n\nexport interface Page {\n  id: ID;\n  pageTitle: string;\n  pageTags: Tag[];\n  blocks: PageBlock[];\n}\n\n    \n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/PageContainerComponent.html":{"url":"components/PageContainerComponent.html","title":"component - PageContainerComponent","body":"\n                   \n\n\n\n\n\n  Components\n  PageContainerComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    libs/ngx-editorjs-demo/src/lib/containers/page-container/page-container.component.ts\n\n\n    \n        Description\n    \n    \n        The Page Container component provides the main routable page for loading\nthe ngx-editorjs-demo\n\n    \n\n\n    \n        Implements\n    \n    \n                    AfterContentInit\n    \n\n\n\n    Metadata\n    \n        \n\n            \n                changeDetection\n                ChangeDetectionStrategy.OnPush\n            \n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                ngx-page-container\n            \n\n            \n                styleUrls\n                page-container.component.scss\n            \n\n\n\n            \n                templateUrl\n                page-container.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                holder\n                            \n                            \n                                    Private\n                                menu$\n                            \n                            \n                                    Private\n                                onDestroy$\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                clear\n                            \n                            \n                                ngAfterContentInit\n                            \n                            \n                                    Public\n                                reset\n                            \n                            \n                                    Public\n                                save\n                            \n                        \n                    \n                \n\n\n\n\n\n                    \n                        \n                            Accessors\n                        \n                    \n                    \n                        \n                            \n                                \n                                    blocks\n                                \n                                \n                                    menu\n                                \n                                \n                                    pages\n                                \n                                \n                                    asJSON\n                                \n                            \n                        \n                    \n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(pagesService: PagesService, app: AppService, editor: NgxEditorJSService, cd: ChangeDetectorRef)\n                    \n                \n                        \n                            \n                                Defined in libs/ngx-editorjs-demo/src/lib/containers/page-container/page-container.component.ts:35\n                            \n                        \n\n                \n                    \n                            The constructor sets up the blocks to the initial demo data\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        pagesService\n                                                  \n                                                        \n                                                                        PagesService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                The pages service\n\n                                                        \n                                                \n                                                \n                                                        app\n                                                  \n                                                        \n                                                                        AppService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                The application service\n\n                                                        \n                                                \n                                                \n                                                        editor\n                                                  \n                                                        \n                                                                        NgxEditorJSService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                The Editor service\n\n                                                        \n                                                \n                                                \n                                                        cd\n                                                  \n                                                        \n                                                                        ChangeDetectorRef\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                The change detection ref\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            clear\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    clear()\n                \n            \n\n\n            \n                \n                    Defined in libs/ngx-editorjs-demo/src/lib/containers/page-container/page-container.component.ts:82\n                \n            \n\n\n            \n                \n                    Clear the editor\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngAfterContentInit\n                        \n                        \n                    \n                \n            \n            \n                \nngAfterContentInit()\n                \n            \n\n\n            \n                \n                    Defined in libs/ngx-editorjs-demo/src/lib/containers/page-container/page-container.component.ts:114\n                \n            \n\n\n            \n                \n                    After the content has init overide the blocks with blocks from the service\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            reset\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    reset()\n                \n            \n\n\n            \n                \n                    Defined in libs/ngx-editorjs-demo/src/lib/containers/page-container/page-container.component.ts:89\n                \n            \n\n\n            \n                \n                    Reset the editor with demo data\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            save\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    save()\n                \n            \n\n\n            \n                \n                    Defined in libs/ngx-editorjs-demo/src/lib/containers/page-container/page-container.component.ts:75\n                \n            \n\n\n            \n                \n                    Call the editor save method\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            holder\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Default value : 'ngx-editorjs-demo'\n                        \n                    \n                        \n                            \n                                    Defined in libs/ngx-editorjs-demo/src/lib/containers/page-container/page-container.component.ts:30\n                            \n                        \n\n                \n                    \n                        The holder ID for this demo\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            menu$\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : new BehaviorSubject(undefined)\n                        \n                    \n                        \n                            \n                                    Defined in libs/ngx-editorjs-demo/src/lib/containers/page-container/page-container.component.ts:35\n                            \n                        \n\n                \n                    \n                        Links for the page\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            onDestroy$\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : new Subject()\n                        \n                    \n                        \n                            \n                                    Defined in libs/ngx-editorjs-demo/src/lib/containers/page-container/page-container.component.ts:25\n                            \n                        \n\n                \n                    \n                        Internal onDestroy$ subject\n\n                    \n                \n\n            \n        \n\n\n    \n    \n        Accessors\n    \n        \n            \n                \n                    \n                        \n                        blocks\n                    \n                \n\n                \n                    \n                        getblocks()\n                    \n                \n                            \n                                \n                                    Defined in libs/ngx-editorjs-demo/src/lib/containers/page-container/page-container.component.ts:54\n                                \n                            \n                    \n                        \n                                Get the blocks for the page\n\n\n                        \n                    \n\n            \n        \n        \n            \n                \n                    \n                        \n                        menu\n                    \n                \n\n                \n                    \n                        getmenu()\n                    \n                \n                            \n                                \n                                    Defined in libs/ngx-editorjs-demo/src/lib/containers/page-container/page-container.component.ts:61\n                                \n                            \n                    \n                        \n                                Get the page links\n\n\n                        \n                    \n\n            \n        \n        \n            \n                \n                    \n                        \n                        pages\n                    \n                \n\n                \n                    \n                        getpages()\n                    \n                \n                            \n                                \n                                    Defined in libs/ngx-editorjs-demo/src/lib/containers/page-container/page-container.component.ts:68\n                                \n                            \n                    \n                        \n                                Get a list of pages\n\n\n                                \n                                    Returns :         Observable\n\n                                \n                        \n                    \n\n            \n        \n        \n            \n                \n                    \n                        \n                        asJSON\n                    \n                \n\n                \n                    \n                        getasJSON()\n                    \n                \n                            \n                                \n                                    Defined in libs/ngx-editorjs-demo/src/lib/containers/page-container/page-container.component.ts:102\n                                \n                            \n                    \n                        \n                                Get the blocks data as formatted JSON\n\n\n                        \n                    \n\n            \n        \n\n\n\n\n    \n        import { AfterContentInit, ChangeDetectionStrategy, ChangeDetectorRef, Component } from '@angular/core';\nimport { Block, NgxEditorJSService } from '@tinynodes/ngx-editorjs/src';\nimport { AppService } from '@tinynodes/ngx-tinynodes-core/src';\nimport { BehaviorSubject, Observable, Subject } from 'rxjs';\nimport { distinctUntilChanged, map, takeUntil, tap, pluck, filter, take } from 'rxjs/operators';\nimport { Page } from '../../store/pages/pages.models';\nimport { PagesService } from '../../store/pages/pages.service';\nimport { MenuGroup } from 'apps/ngx-tinynodes/src/app/core/types/app';\nimport { NgxEditorJSDemo } from '@tinynodes/ngx-tinynodes-core/src/lib/stores/app/application.model';\n\n/**\n * The Page Container component provides the main routable page for loading\n * the `ngx-editorjs-demo`\n */\n@Component({\n  selector: 'ngx-page-container',\n  templateUrl: 'page-container.component.html',\n  styleUrls: ['page-container.component.scss'],\n  changeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class PageContainerComponent implements AfterContentInit {\n  /**\n   * Internal onDestroy$ subject\n   */\n  private onDestroy$ = new Subject();\n\n  /**\n   * The holder ID for this demo\n   */\n  public holder = 'ngx-editorjs-demo';\n\n  /**\n   * Links for the page\n   */\n  private menu$ = new BehaviorSubject(undefined);\n\n  /**\n   * The constructor sets up the blocks to the initial demo data\n   * @param pagesService The pages service\n   * @param app The application service\n   * @param editor The Editor service\n   * @param cd The change detection ref\n   */\n  constructor(\n    private readonly pagesService: PagesService,\n    private app: AppService,\n    private readonly editor: NgxEditorJSService,\n    private readonly cd: ChangeDetectorRef\n  ) {}\n\n  /**\n   * Get the blocks for the page\n   */\n  public get blocks() {\n    return this.editor.getBlocks({ holder: this.holder });\n  }\n\n  /**\n   * Get the page links\n   */\n  public get menu() {\n    return this.menu$;\n  }\n\n  /**\n   * Get a list of pages\n   */\n  get pages(): Observable {\n    return this.pagesService.pages;\n  }\n\n  /**\n   * Call the editor save method\n   */\n  public save() {\n    this.editor.save({ holder: this.holder });\n  }\n\n  /**\n   * Clear the editor\n   */\n  public clear() {\n    this.editor.clear({ holder: this.holder });\n  }\n\n  /**\n   * Reset the editor with demo data\n   */\n  public reset() {\n    this.app\n      .getDemoData('ngx-editorjs-demo')\n      .pipe(take(1))\n      .subscribe((data: NgxEditorJSDemo) => {\n        this.menu$.next(data.links);\n        this.editor.update({ holder: this.holder, blocks: data.blocks });\n      });\n  }\n\n  /**\n   * Get the blocks data as formatted JSON\n   */\n  public get asJSON() {\n    return this.blocks.pipe(\n      map(blocks => {\n        return JSON.stringify(blocks, null, 4);\n      }),\n      tap(() => this.cd.markForCheck())\n    );\n  }\n\n  /**\n   * After the content has init overide the blocks with blocks from the service\n   */\n  ngAfterContentInit() {\n    this.reset();\n  }\n}\n\n    \n\n    \n        \n  \n    \n      @tinynodes/ngx-editor Demo\n      A single page demo of the EditorJS component\n    \n    \n      \n    \n\n    \n      \n        Demo\n        Save\n        Clear\n        Reset\n      \n      \n    \n    \n      \n        \n          Output\n          Data from the EditorJS instance\n        \n        \n          {{ asJSON | async }}\n        \n      \n    \n     \n  \n\n\n\n  \n    Below is an instance of an EditorJS block editor. Click on the area and the block tool will appear, or you can just start\n    typing.\n  \n  \n    The default block is a &lt;p> paragraph, you can also add header &lt;h1> - &lt;h6> blocks, list with\n    &lt;ol> / &lt;li> and &lt;code> blocks.\n  \n\n  \n    You can also paste in an &lt;img> url into the editor and it will start the SimpleImage plugin which provides\n    an &lt;img> tag pointing to the image, and with some additional controls.\n  \n  \n    When saving check the output panel below to see the data results.\n  \n\n\n    \n\n    \n                \n                    page-container.component.scss\n                \n                :host {\n  width: 100%;\n  height: 100vh;\n}\n\n.output-card {\n  height: 100vh;\n  flex: 1;\n  width: 100%;\n  overflow: scroll;\n}\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '            @tinynodes/ngx-editor Demo      A single page demo of the EditorJS component                                    Demo        Save        Clear        Reset                                            Output          Data from the EditorJS instance                          {{ asJSON | async }}                               Below is an instance of an EditorJS block editor. Click on the area and the block tool will appear, or you can just start    typing.        The default block is a  paragraph, you can also add header  -  blocks, list with     /  and  blocks.        You can also paste in an  url into the editor and it will start the SimpleImage plugin which provides    an  tag pointing to the image, and with some additional controls.        When saving check the output panel below to see the data results.  '\n    var COMPONENTS = [{'name': 'AppContainerComponent', 'selector': 'tinynodes-root'},{'name': 'FormContainerComponent', 'selector': 'ngx-form-container'},{'name': 'HomePageComponent', 'selector': 'tinynodes-home-page'},{'name': 'NavBarComponent', 'selector': 'tinynodes-nav-bar'},{'name': 'NgxEditorJSBaseComponent', 'selector': ''},{'name': 'NgxEditorJSComponent', 'selector': 'ngx-editorjs'},{'name': 'NgxEditorJSDemoHomeComponent', 'selector': 'ngx-editorjs-demo-home'},{'name': 'NgxEditorJSDemoInfoComponent', 'selector': 'ngx-editorjs-demo-info'},{'name': 'NgxEditorJSDemoTagComponent', 'selector': 'ngx-editorjs-tag-component'},{'name': 'NgxEditorJSMatFieldComponent', 'selector': 'ngx-editorjs-mat-field'},{'name': 'PageContainerComponent', 'selector': 'ngx-page-container'},{'name': 'SidebarComponent', 'selector': 'tinynodes-sidebar'}];\n    var DIRECTIVES = [{'name': 'NgxEditorJSDirective', 'selector': '[ngxEditorJS]'}];\n    var ACTUAL_COMPONENT = {'name': 'PageContainerComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/PageStoreModule.html":{"url":"modules/PageStoreModule.html","title":"module - PageStoreModule","body":"\n                   \n\n\n\n\n    Modules\n    PageStoreModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_PageStoreModule\n\n\n\ncluster_PageStoreModule_providers\n\n\n\n\nPagesQuery\n\nPagesQuery\n\n\n\nPageStoreModule\n\nPageStoreModule\n\nPageStoreModule -->\n\nPagesQuery->PageStoreModule\n\n\n\n\n\nPagesService\n\nPagesService\n\nPageStoreModule -->\n\nPagesService->PageStoreModule\n\n\n\n\n\nPagesStore\n\nPagesStore\n\nPageStoreModule -->\n\nPagesStore->PageStoreModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            libs/ngx-editorjs-demo/src/lib/store/pages/pages.module.ts\n        \n\n\n        \n            Description\n        \n        \n            WARNING: This module is currently in development\nInternal page store module, this will allow the ngx-editorjs-demo to support the creation of multiple pages\n\n        \n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            PagesQuery\n                        \n                        \n                            PagesService\n                        \n                        \n                            PagesStore\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { NgModule } from '@angular/core';\nimport { PagesQuery } from './pages.query';\nimport { PagesService } from './pages.service';\nimport { PagesStore } from './pages.store';\n\n/**\n *\n * **WARNING**: This module is currently in development\n *\n * Internal page store module, this will allow the `ngx-editorjs-demo` to support the creation of multiple pages\n */\n@NgModule({\n  providers: [PagesStore, PagesQuery, PagesService]\n})\nexport class PageStoreModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/PagesQuery.html":{"url":"injectables/PagesQuery.html","title":"injectable - PagesQuery","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  PagesQuery\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            libs/ngx-editorjs-demo/src/lib/store/pages/pages.query.ts\n        \n\n\n            \n                Extends\n            \n            \n                    QueryEntity\n            \n\n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(store: PagesStore)\n                    \n                \n                        \n                            \n                                Defined in libs/ngx-editorjs-demo/src/lib/store/pages/pages.query.ts:7\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        store\n                                                  \n                                                        \n                                                                        PagesStore\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { QueryEntity } from '@datorama/akita';\nimport { Page } from './pages.models';\nimport { PagesState, PagesStore } from './pages.store';\n\n@Injectable()\nexport class PagesQuery extends QueryEntity {\n  constructor(protected store: PagesStore) {\n    super(store);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/PagesService.html":{"url":"injectables/PagesService.html","title":"injectable - PagesService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  PagesService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            libs/ngx-editorjs-demo/src/lib/store/pages/pages.service.ts\n        \n\n            \n                Description\n            \n            \n                This page service provides a way to save and render pages\nvia the store\n\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                pages$\n                            \n                            \n                                    Public\n                                    Readonly\n                                query\n                            \n                            \n                                    Public\n                                    Readonly\n                                store\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                add\n                            \n                            \n                                addBlock\n                            \n                            \n                                delete\n                            \n                            \n                                removeBlock\n                            \n                            \n                                setBlocks\n                            \n                            \n                                upsert\n                            \n                        \n                    \n                \n\n\n\n\n\n                    \n                        \n                            Accessors\n                        \n                    \n                    \n                        \n                            \n                                \n                                    pages\n                                \n                            \n                        \n                    \n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(query: PagesQuery, store: PagesStore)\n                    \n                \n                        \n                            \n                                Defined in libs/ngx-editorjs-demo/src/lib/store/pages/pages.service.ts:15\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        query\n                                                  \n                                                        \n                                                                        PagesQuery\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        store\n                                                  \n                                                        \n                                                                        PagesStore\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            add\n                        \n                        \n                    \n                \n            \n            \n                \nadd(page?: Page)\n                \n            \n\n\n            \n                \n                    Defined in libs/ngx-editorjs-demo/src/lib/store/pages/pages.service.ts:32\n                \n            \n\n\n            \n                \n                    Add a page to the store\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    page\n                                    \n                                                Page\n                                    \n\n                                    \n                                        Yes\n                                    \n\n\n                                    \n                                        An optional page to be added\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            addBlock\n                        \n                        \n                    \n                \n            \n            \n                \naddBlock(pageId: ID, block: Block)\n                \n            \n\n\n            \n                \n                    Defined in libs/ngx-editorjs-demo/src/lib/store/pages/pages.service.ts:64\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    pageId\n                                    \n                                            ID\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    block\n                                    \n                                                Block\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            delete\n                        \n                        \n                    \n                \n            \n            \n                \ndelete(pageId: ID)\n                \n            \n\n\n            \n                \n                    Defined in libs/ngx-editorjs-demo/src/lib/store/pages/pages.service.ts:56\n                \n            \n\n\n            \n                \n                    Removes a page\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    pageId\n                                    \n                                            ID\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        The ID of the page to be removed\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            removeBlock\n                        \n                        \n                    \n                \n            \n            \n                \nremoveBlock(pageId: ID, block: PageBlock)\n                \n            \n\n\n            \n                \n                    Defined in libs/ngx-editorjs-demo/src/lib/store/pages/pages.service.ts:70\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    pageId\n                                    \n                                            ID\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    block\n                                    \n                                                PageBlock\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            setBlocks\n                        \n                        \n                    \n                \n            \n            \n                \nsetBlocks(pageId: ID | any, blocks: PageBlock[])\n                \n            \n\n\n            \n                \n                    Defined in libs/ngx-editorjs-demo/src/lib/store/pages/pages.service.ts:60\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    pageId\n                                    \n                                            ID | any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    blocks\n                                    \n                                            PageBlock[]\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            upsert\n                        \n                        \n                    \n                \n            \n            \n                \nupsert(page: Page)\n                \n            \n\n\n            \n                \n                    Defined in libs/ngx-editorjs-demo/src/lib/store/pages/pages.service.ts:47\n                \n            \n\n\n            \n                \n                    Updates or creates a page\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    page\n                                    \n                                                Page\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        The page to be updated, if not available it will be created\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            pages$\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Observable\n\n                        \n                    \n                        \n                            \n                                    Defined in libs/ngx-editorjs-demo/src/lib/store/pages/pages.service.ts:15\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                                Readonly\n                            query\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         PagesQuery\n\n                        \n                    \n                        \n                            \n                                    Defined in libs/ngx-editorjs-demo/src/lib/store/pages/pages.service.ts:17\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                                Readonly\n                            store\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         PagesStore\n\n                        \n                    \n                        \n                            \n                                    Defined in libs/ngx-editorjs-demo/src/lib/store/pages/pages.service.ts:17\n                            \n                        \n\n\n            \n        \n\n\n            \n    \n        Accessors\n    \n        \n            \n                \n                    \n                        \n                        pages\n                    \n                \n\n                \n                    \n                        getpages()\n                    \n                \n                            \n                                \n                                    Defined in libs/ngx-editorjs-demo/src/lib/store/pages/pages.service.ts:24\n                                \n                            \n                    \n                        \n                                Get an observable of all the pages in the store\n\n\n                                \n                                    Returns :         Observable\n\n                                \n                        \n                    \n\n            \n        \n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { arrayAdd, arrayRemove, guid, ID } from '@datorama/akita';\nimport { Block } from '@tinynodes/ngx-editorjs';\nimport { Observable } from 'rxjs';\nimport { Page, PageBlock } from './pages.models';\nimport { PagesQuery } from './pages.query';\nimport { PagesStore } from './pages.store';\n\n/**\n * This page service provides a way to save and render pages\n * via the store\n */\n@Injectable()\nexport class PagesService {\n  private pages$: Observable;\n\n  constructor(public readonly query: PagesQuery, public readonly store: PagesStore) {\n    this.pages$ = this.query.selectAll();\n  }\n\n  /**\n   * Get an observable of all the pages in the store\n   */\n  get pages(): Observable {\n    return this.pages$;\n  }\n\n  /**\n   * Add a page to the store\n   * @param page An optional page to be added\n   */\n  add(page?: Page) {\n    const newPage: Page = {\n      id: guid(),\n      pageTitle: 'New Page',\n      pageTags: [],\n      blocks: [],\n      ...page\n    };\n    this.store.add(newPage);\n  }\n\n  /**\n   * Updates or creates a page\n   * @param page The page to be updated, if not available it will be created\n   */\n  upsert(page: Page) {\n    if (!page.id) page.id = guid();\n    this.store.upsert(page.id, page);\n  }\n\n  /**\n   * Removes a page\n   * @param pageId The ID of the page to be removed\n   */\n  delete(pageId: ID) {\n    this.store.remove(pageId);\n  }\n\n  setBlocks(pageId: ID | any, blocks: PageBlock[]) {\n    this.store.update(pageId, { blocks });\n  }\n\n  addBlock(pageId: ID, block: Block) {\n    this.store.update(pageId, (entity: Page) => ({\n      blocks: arrayAdd(entity.blocks, { id: guid(), ...block })\n    }));\n  }\n\n  removeBlock(pageId: ID, block: PageBlock) {\n    this.store.update(pageId, (entity: Page) => ({\n      blocks: arrayRemove(entity.blocks, block.id)\n    }));\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/PagesState.html":{"url":"interfaces/PagesState.html","title":"interface - PagesState","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  PagesState\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            libs/ngx-editorjs-demo/src/lib/store/pages/pages.store.ts\n        \n\n\n            \n                Extends\n            \n            \n                    EntityState\n            \n\n\n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { EntityState, EntityStore, StoreConfig } from '@datorama/akita';\nimport { Page } from './pages.models';\n\nexport interface PagesState extends EntityState {}\n\n@Injectable()\n@StoreConfig({ name: 'pages' })\nexport class PagesStore extends EntityStore {\n  constructor() {\n    super();\n  }\n}\n\n    \n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/PagesStore.html":{"url":"injectables/PagesStore.html","title":"injectable - PagesStore","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  PagesStore\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            libs/ngx-editorjs-demo/src/lib/store/pages/pages.store.ts\n        \n\n\n            \n                Extends\n            \n            \n                    EntityStore\n            \n\n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in libs/ngx-editorjs-demo/src/lib/store/pages/pages.store.ts:9\n                            \n                        \n\n            \n        \n\n\n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { EntityState, EntityStore, StoreConfig } from '@datorama/akita';\nimport { Page } from './pages.models';\n\nexport interface PagesState extends EntityState {}\n\n@Injectable()\n@StoreConfig({ name: 'pages' })\nexport class PagesStore extends EntityStore {\n  constructor() {\n    super();\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/Paragraph.html":{"url":"interfaces/Paragraph.html","title":"interface - Paragraph","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  Paragraph\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            libs/ngx-editorjs/src/lib/types/blocks.ts\n        \n\n            \n                Description\n            \n            \n                Default data type for a paragraph block\n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        text\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        text\n                                    \n                                \n                                \n                                    \n                                        text:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    The paragraph text\n\n                                \n                            \n                        \n                    \n            \n    \n\n\n    \n        export interface Block {\n  /**\n   * The EditorJS block type\n   */\n  type: string;\n\n  /**\n   * The data interface for the block type\n   */\n  data: T;\n\n  /**\n   * Additional properties on the type\n   */\n  [key: string]: any;\n}\n\n/**\n * Available list styles, supports `ordered` and `unordered`.\n * A custom string can also be added\n */\nexport type ListStyle = 'ordered' | 'unordered' | string;\n\n/**\n * Default data type for a list block\n */\nexport interface List {\n  /**\n   * The list style\n   */\n  style: ListStyle;\n  /**\n   * List items of type T\n   */\n  items: T[];\n}\n\n/**\n * The default list block is provided by the EditorJS list plugin\n */\nexport interface ListBlock extends Block> {\n  /**\n   * The EditorJS block type\n   */\n  type: 'list';\n}\n\n/**\n * Default data type for a paragraph block\n */\ninterface Paragraph {\n  /**\n   * The paragraph text\n   */\n  text: string;\n}\n\n/**\n * Interface for a paragraph block\n */\nexport interface ParagraphBlock extends Block {\n  /**\n   * The EditorJS block type\n   */\n  type: 'paragraph';\n}\n\n/**\n * Default data type for a header block\n */\ninterface Header {\n  /**\n   * The header text\n   */\n  text: string;\n  /**\n   * The header level from 1-6\n   */\n  level: number;\n}\n\n/**\n * Interface for a header block\n */\nexport interface HeaderBlock extends Block {\n  /**\n   * The EditorJS block type\n   */\n  type: 'header';\n}\n\n/**\n * Default data type for a header block\n */\nexport interface Image {\n  /**\n   * The image URL\n   */\n  url: string;\n  /**\n   * Optional image caption\n   */\n  caption?: string;\n  /**\n   * Optional border property\n   */\n  withBorder?: boolean;\n\n  /**\n   * Optional background property\n   */\n  withBackground?: boolean;\n\n  /**\n   * Optional stretch property\n   */\n  stretched?: boolean;\n}\n\n/**\n * Interface for a image block\n */\nexport interface ImageBlock extends Block {\n  /**\n   * The EditorJS block type\n   */\n  type: 'image';\n}\n\n/**\n * Type of all the basic block type\n */\nexport type BlockTypes = ParagraphBlock | HeaderBlock | ImageBlock | ListBlock | Block;\n\n    \n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/ParagraphBlock.html":{"url":"interfaces/ParagraphBlock.html","title":"interface - ParagraphBlock","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  ParagraphBlock\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            libs/ngx-editorjs/src/lib/types/blocks.ts\n        \n\n            \n                Description\n            \n            \n                Interface for a paragraph block\n\n            \n\n            \n                Extends\n            \n            \n                        Block\n            \n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        type\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        type\n                                    \n                                \n                                \n                                    \n                                        type:     \n\n                                    \n                                \n\n\n\n\n\n\n\n                            \n                                \n                                    The EditorJS block type\n\n                                \n                            \n                        \n                    \n            \n    \n\n\n    \n        export interface Block {\n  /**\n   * The EditorJS block type\n   */\n  type: string;\n\n  /**\n   * The data interface for the block type\n   */\n  data: T;\n\n  /**\n   * Additional properties on the type\n   */\n  [key: string]: any;\n}\n\n/**\n * Available list styles, supports `ordered` and `unordered`.\n * A custom string can also be added\n */\nexport type ListStyle = 'ordered' | 'unordered' | string;\n\n/**\n * Default data type for a list block\n */\nexport interface List {\n  /**\n   * The list style\n   */\n  style: ListStyle;\n  /**\n   * List items of type T\n   */\n  items: T[];\n}\n\n/**\n * The default list block is provided by the EditorJS list plugin\n */\nexport interface ListBlock extends Block> {\n  /**\n   * The EditorJS block type\n   */\n  type: 'list';\n}\n\n/**\n * Default data type for a paragraph block\n */\ninterface Paragraph {\n  /**\n   * The paragraph text\n   */\n  text: string;\n}\n\n/**\n * Interface for a paragraph block\n */\nexport interface ParagraphBlock extends Block {\n  /**\n   * The EditorJS block type\n   */\n  type: 'paragraph';\n}\n\n/**\n * Default data type for a header block\n */\ninterface Header {\n  /**\n   * The header text\n   */\n  text: string;\n  /**\n   * The header level from 1-6\n   */\n  level: number;\n}\n\n/**\n * Interface for a header block\n */\nexport interface HeaderBlock extends Block {\n  /**\n   * The EditorJS block type\n   */\n  type: 'header';\n}\n\n/**\n * Default data type for a header block\n */\nexport interface Image {\n  /**\n   * The image URL\n   */\n  url: string;\n  /**\n   * Optional image caption\n   */\n  caption?: string;\n  /**\n   * Optional border property\n   */\n  withBorder?: boolean;\n\n  /**\n   * Optional background property\n   */\n  withBackground?: boolean;\n\n  /**\n   * Optional stretch property\n   */\n  stretched?: boolean;\n}\n\n/**\n * Interface for a image block\n */\nexport interface ImageBlock extends Block {\n  /**\n   * The EditorJS block type\n   */\n  type: 'image';\n}\n\n/**\n * Type of all the basic block type\n */\nexport type BlockTypes = ParagraphBlock | HeaderBlock | ImageBlock | ListBlock | Block;\n\n    \n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/PluginCode.html":{"url":"injectables/PluginCode.html","title":"injectable - PluginCode","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  PluginCode\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            libs/ngx-editorjs-plugins/src/lib/plugins/code/code.plugin.ts\n        \n\n            \n                Description\n            \n            \n                This plugin returns the tool settings for a  block tool for EditorJS\n\n            \n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                plugin\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            plugin\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    plugin()\n                \n            \n\n\n            \n                \n                    Defined in libs/ngx-editorjs-plugins/src/lib/plugins/code/code.plugin.ts:14\n                \n            \n\n\n            \n                \n                    Returns the ToolSettings for this plugin\n\n\n                    \n                        Returns :     ToolSettings\n\n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport Code from '@editorjs/code';\nimport { ToolSettings } from '@editorjs/editorjs';\nimport { BasePlugin } from '../../types/plugins';\n\n/**\n * This plugin returns the tool settings for a `` block tool for `EditorJS`\n */\n@Injectable()\nexport class PluginCode implements BasePlugin {\n  /**\n   * Returns the `ToolSettings` for this plugin\n   */\n  public plugin(): ToolSettings {\n    return Code;\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/PluginCodeModule.html":{"url":"modules/PluginCodeModule.html","title":"module - PluginCodeModule","body":"\n                   \n\n\n\n\n    Modules\n    PluginCodeModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_PluginCodeModule\n\n\n\ncluster_PluginCodeModule_providers\n\n\n\n\nPluginCode\n\nPluginCode\n\n\n\nPluginCodeModule\n\nPluginCodeModule\n\nPluginCodeModule -->\n\nPluginCode->PluginCodeModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            libs/ngx-editorjs-plugins/src/lib/plugins/code/code.module.ts\n        \n\n\n        \n            Description\n        \n        \n            A module that provides the default EditorJS  block tool.\nSee the GitHub repo for API details\n\n        \n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            PluginCode\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { NgModule } from '@angular/core';\nimport { PluginCode } from './code.plugin';\n\n/**\n * A module that provides the default `EditorJS` `` block tool.\n * See [the GitHub repo](https://github.com/editor-js/code) for API details\n */\n@NgModule({\n  providers: [PluginCode]\n})\nexport class PluginCodeModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/PluginConfig.html":{"url":"interfaces/PluginConfig.html","title":"interface - PluginConfig","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  PluginConfig\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            libs/ngx-editorjs/src/lib/types/plugins.ts\n        \n\n            \n                Description\n            \n            \n                A Module plugin configuration\n\n            \n\n\n\n\n            \n    Indexable\n        \n            \n                \n                    \n                        [key: string]:        BasePlugin\n\n                    \n                \n                        \n                            \n                                Defined in libs/ngx-editorjs/src/lib/types/plugins.ts:7\n                            \n                        \n                \n                    \n                        The key of the plugin and the plugin class extending BasePlugin\n\n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { InjectionToken } from '@angular/core';\nimport { ToolSettings, ToolConstructable } from '@editorjs/editorjs';\n\n/**\n * A Module plugin configuration\n */\nexport interface PluginConfig {\n  /**\n   * The key of the plugin and the plugin class extending `BasePlugin`\n   */\n  [key: string]: BasePlugin;\n}\n\n/**\n * A map of all the tools settings\n */\nexport interface ToolSettingsMap {\n  /**\n   * The key of the plugin and the plugin exported tool settings\n   */\n  [key: string]: ToolConstructable | ToolSettings;\n}\n\n/**\n * Defines the interface for required and optional plugin methods.\n * These methods allow a plugin to return a EditorJS plugin and an optional shortcut\n */\nexport interface BasePlugin {\n  /**\n   * The plugin settings to be returned\n   */\n  plugin: () => ToolConstructable | ToolSettings;\n\n  /**\n   * Optional shortcut for the plugin\n   */\n  shortcut?: () => string;\n}\n\n/**\n * The Injection token for initial plugins as defined in the ngx-editorjs module\n */\nexport const InitialPlugins = new InjectionToken('InitialPlugins');\n\n/**\n * The injection token for adding plugins via your own application\n */\nexport const UserPlugins = new InjectionToken('UserPlugins');\n\n    \n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/PluginConfig-1.html":{"url":"interfaces/PluginConfig-1.html","title":"interface - PluginConfig-1","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  PluginConfig\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            libs/ngx-editorjs-plugins/src/lib/types/plugins.ts\n        \n\n            \n                Description\n            \n            \n                A Module plugin configuration\n\n            \n\n\n\n\n            \n    Indexable\n        \n            \n                \n                    \n                        [key: string]:        BasePlugin\n\n                    \n                \n                        \n                            \n                                Defined in libs/ngx-editorjs-plugins/src/lib/types/plugins.ts:7\n                            \n                        \n                \n                    \n                        The key of the plugin and the plugin class extending BasePlugin\n\n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { InjectionToken } from '@angular/core';\nimport { ToolSettings, ToolConstructable } from '@editorjs/editorjs';\n\n/**\n * A Module plugin configuration\n */\nexport interface PluginConfig {\n  /**\n   * The key of the plugin and the plugin class extending `BasePlugin`\n   */\n  [key: string]: BasePlugin;\n}\n\n/**\n * A map of all the tools settings\n */\nexport interface ToolSettingsMap {\n  /**\n   * The key of the plugin and the plugin exported tool settings\n   */\n  [key: string]: ToolConstructable | ToolSettings;\n}\n\n/**\n * Defines the interface for required and optional plugin methods.\n * These methods allow a plugin to return a EditorJS plugin and an optional shortcut\n */\nexport interface BasePlugin {\n  /**\n   * The plugin settings to be returned\n   */\n  plugin: () => ToolConstructable | ToolSettings;\n\n  /**\n   * Optional shortcut for the plugin\n   */\n  shortcut?: () => string;\n}\n\n/**\n * The Injection token for initial plugins as defined in the ngx-editorjs module\n */\nexport const InitialPlugins = new InjectionToken('InitialPlugins');\n\n/**\n * The injection token for adding plugins via your own application\n */\nexport const UserPlugins = new InjectionToken('UserPlugins');\n\n    \n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/PluginHeader.html":{"url":"injectables/PluginHeader.html","title":"injectable - PluginHeader","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  PluginHeader\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            libs/ngx-editorjs-plugins/src/lib/plugins/header/header.plugin.ts\n        \n\n            \n                Description\n            \n            \n                This plugin returns the tool settings for a  -  block tool for EditorJS\n\n            \n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                plugin\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            plugin\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    plugin()\n                \n            \n\n\n            \n                \n                    Defined in libs/ngx-editorjs-plugins/src/lib/plugins/header/header.plugin.ts:14\n                \n            \n\n\n            \n                \n                    Returns the plugin settings\n\n\n                    \n                        Returns :     ToolSettings\n\n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { ToolSettings } from '@editorjs/editorjs';\nimport Header from '@editorjs/header';\nimport { BasePlugin } from '../../types/plugins';\n\n/**\n * This plugin returns the tool settings for a ` - ` block tool for `EditorJS`\n */\n@Injectable()\nexport class PluginHeader implements BasePlugin {\n  /**\n   * Returns the plugin settings\n   */\n  public plugin(): ToolSettings {\n    return Header;\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/PluginHeaderModule.html":{"url":"modules/PluginHeaderModule.html","title":"module - PluginHeaderModule","body":"\n                   \n\n\n\n\n    Modules\n    PluginHeaderModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_PluginHeaderModule\n\n\n\ncluster_PluginHeaderModule_providers\n\n\n\n\nPluginHeader\n\nPluginHeader\n\n\n\nPluginHeaderModule\n\nPluginHeaderModule\n\nPluginHeaderModule -->\n\nPluginHeader->PluginHeaderModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            libs/ngx-editorjs-plugins/src/lib/plugins/header/header.module.ts\n        \n\n\n        \n            Description\n        \n        \n            A module that provides the default EditorJS header block tool.\nSee the GitHub repo for API details\n\n        \n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            PluginHeader\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { NgModule } from '@angular/core';\nimport { PluginHeader } from './header.plugin';\n\n/**\n * A module that provides the default `EditorJS` header block tool.\n * See [the GitHub repo](https://github.com/editor-js/header) for API details\n */\n@NgModule({\n  providers: [PluginHeader]\n})\nexport class PluginHeaderModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/PluginImage.html":{"url":"injectables/PluginImage.html","title":"injectable - PluginImage","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  PluginImage\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            libs/ngx-editorjs-plugins/src/lib/plugins/image/image.plugin.ts\n        \n\n            \n                Description\n            \n            \n                This plugin returns the tool settings for a  -  block tool for EditorJS\n\n            \n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                plugin\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            plugin\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    plugin()\n                \n            \n\n\n            \n                \n                    Defined in libs/ngx-editorjs-plugins/src/lib/plugins/image/image.plugin.ts:14\n                \n            \n\n\n            \n                \n                    Returns the plugin settings\n\n\n                    \n                        Returns :     ToolSettings\n\n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { ToolSettings } from '@editorjs/editorjs';\nimport Image from '@editorjs/image';\nimport { BasePlugin } from '../../types/plugins';\n\n/**\n * This plugin returns the tool settings for a ` - ` block tool for `EditorJS`\n */\n@Injectable()\nexport class PluginImage implements BasePlugin {\n  /**\n   * Returns the plugin settings\n   */\n  public plugin(): ToolSettings {\n    return Image;\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/PluginImageModule.html":{"url":"modules/PluginImageModule.html","title":"module - PluginImageModule","body":"\n                   \n\n\n\n\n    Modules\n    PluginImageModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_PluginImageModule\n\n\n\ncluster_PluginImageModule_providers\n\n\n\n\nPluginImage\n\nPluginImage\n\n\n\nPluginImageModule\n\nPluginImageModule\n\nPluginImageModule -->\n\nPluginImage->PluginImageModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            libs/ngx-editorjs-plugins/src/lib/plugins/image/image.module.ts\n        \n\n\n        \n            Description\n        \n        \n            A module that provides the default EditorJS  block tool.\nSee the GitHub repo for API details\n\n        \n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            PluginImage\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { NgModule } from '@angular/core';\nimport { PluginImage } from './image.plugin';\n\n/**\n * A module that provides the default `EditorJS` `` block tool.\n * See [the GitHub repo](https://github.com/editor-js/image) for API details\n */\n@NgModule({\n  providers: [PluginImage]\n})\nexport class PluginImageModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/PluginLink.html":{"url":"injectables/PluginLink.html","title":"injectable - PluginLink","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  PluginLink\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            libs/ngx-editorjs-plugins/src/lib/plugins/link/link.plugin.ts\n        \n\n            \n                Description\n            \n            \n                This plugin returns the tool settings for a  block tool for EditorJS\n\n            \n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                plugin\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            plugin\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    plugin()\n                \n            \n\n\n            \n                \n                    Defined in libs/ngx-editorjs-plugins/src/lib/plugins/link/link.plugin.ts:14\n                \n            \n\n\n            \n                \n                    Returns the plugin settings\n\n\n                    \n                        Returns :     ToolSettings\n\n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { ToolSettings } from '@editorjs/editorjs';\nimport Link from '@editorjs/link';\nimport { BasePlugin } from '../../types/plugins';\n\n/**\n * This plugin returns the tool settings for a `` block tool for `EditorJS`\n */\n@Injectable()\nexport class PluginLink implements BasePlugin {\n  /**\n   * Returns the plugin settings\n   */\n  public plugin(): ToolSettings {\n    return Link;\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/PluginLinkModule.html":{"url":"modules/PluginLinkModule.html","title":"module - PluginLinkModule","body":"\n                   \n\n\n\n\n    Modules\n    PluginLinkModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_PluginLinkModule\n\n\n\ncluster_PluginLinkModule_providers\n\n\n\n\nPluginLink\n\nPluginLink\n\n\n\nPluginLinkModule\n\nPluginLinkModule\n\nPluginLinkModule -->\n\nPluginLink->PluginLinkModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            libs/ngx-editorjs-plugins/src/lib/plugins/link/link.module.ts\n        \n\n\n        \n            Description\n        \n        \n            A module that provides the default EditorJS  block tool.\nSee the GitHub repo for API details\n\n        \n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            PluginLink\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { NgModule } from '@angular/core';\nimport { PluginLink } from './link.plugin';\n\n/**\n * A module that provides the default `EditorJS` `` block tool.\n * See [the GitHub repo](https://github.com/editor-js/link) for API details\n */\n@NgModule({\n  providers: [PluginLink]\n})\nexport class PluginLinkModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/PluginList.html":{"url":"injectables/PluginList.html","title":"injectable - PluginList","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  PluginList\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            libs/ngx-editorjs-plugins/src/lib/plugins/list/list.plugin.ts\n        \n\n            \n                Description\n            \n            \n                This plugin returns the tool settings for a  and  block tool for EditorJS\n\n            \n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                plugin\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            plugin\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    plugin()\n                \n            \n\n\n            \n                \n                    Defined in libs/ngx-editorjs-plugins/src/lib/plugins/list/list.plugin.ts:14\n                \n            \n\n\n            \n                \n                    Returns the plugin settings\n\n\n                    \n                        Returns :     ToolSettings\n\n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { ToolSettings } from '@editorjs/editorjs';\nimport List from '@editorjs/list';\nimport { BasePlugin } from '../../types/plugins';\n\n/**\n * This plugin returns the tool settings for a `` and `` block tool for `EditorJS`\n */\n@Injectable()\nexport class PluginList implements BasePlugin {\n  /**\n   * Returns the plugin settings\n   */\n  public plugin(): ToolSettings {\n    return List;\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/PluginListModule.html":{"url":"modules/PluginListModule.html","title":"module - PluginListModule","body":"\n                   \n\n\n\n\n    Modules\n    PluginListModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_PluginListModule\n\n\n\ncluster_PluginListModule_providers\n\n\n\n\nPluginList\n\nPluginList\n\n\n\nPluginListModule\n\nPluginListModule\n\nPluginListModule -->\n\nPluginList->PluginListModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            libs/ngx-editorjs-plugins/src/lib/plugins/list/list.module.ts\n        \n\n\n        \n            Description\n        \n        \n            A module that provides the default EditorJS  and  block tool.\nSee the GitHub repo for API details\n\n        \n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            PluginList\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { NgModule } from '@angular/core';\nimport { PluginList } from './list.plugin';\n\n/**\n * A module that provides the default `EditorJS` `` and `` block tool.\n * See [the GitHub repo](https://github.com/editor-js/list) for API details\n */\n@NgModule({\n  providers: [PluginList]\n})\nexport class PluginListModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/PluginMarker.html":{"url":"injectables/PluginMarker.html","title":"injectable - PluginMarker","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  PluginMarker\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            libs/ngx-editorjs-plugins/src/lib/plugins/marker/marker.plugin.ts\n        \n\n            \n                Description\n            \n            \n                This plugin returns the tool settings for a inline marker tool for EditorJS\n\n            \n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                plugin\n                            \n                            \n                                    Public\n                                shortcut\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            plugin\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    plugin()\n                \n            \n\n\n            \n                \n                    Defined in libs/ngx-editorjs-plugins/src/lib/plugins/marker/marker.plugin.ts:14\n                \n            \n\n\n            \n                \n                    Returns the plugin settings\n\n\n                    \n                        Returns :     ToolSettings\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            shortcut\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    shortcut()\n                \n            \n\n\n            \n                \n                    Defined in libs/ngx-editorjs-plugins/src/lib/plugins/marker/marker.plugin.ts:20\n                \n            \n\n\n            \n                \n                    Returns the plugin shortcut\n\n\n                    \n                        Returns :         string\n\n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { ToolSettings } from '@editorjs/editorjs';\nimport Marker from '@editorjs/marker';\nimport { BasePlugin } from '../../types/plugins';\n\n/**\n * This plugin returns the tool settings for a inline marker tool for `EditorJS`\n */\n@Injectable()\nexport class PluginMarker implements BasePlugin {\n  /**\n   * Returns the plugin settings\n   */\n  public plugin(): ToolSettings {\n    return Marker;\n  }\n  /**\n   * Returns the plugin shortcut\n   */\n  public shortcut() {\n    return 'CMD+SHIFT+M';\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/PluginMarkerModule.html":{"url":"modules/PluginMarkerModule.html","title":"module - PluginMarkerModule","body":"\n                   \n\n\n\n\n    Modules\n    PluginMarkerModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_PluginMarkerModule\n\n\n\ncluster_PluginMarkerModule_providers\n\n\n\n\nPluginMarker\n\nPluginMarker\n\n\n\nPluginMarkerModule\n\nPluginMarkerModule\n\nPluginMarkerModule -->\n\nPluginMarker->PluginMarkerModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            libs/ngx-editorjs-plugins/src/lib/plugins/marker/marker.module.ts\n        \n\n\n        \n            Description\n        \n        \n            A module that provides the default EditorJS inline marker tool.\nSee the GitHub repo for API details\n\n        \n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            PluginMarker\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { NgModule } from '@angular/core';\nimport { PluginMarker } from './marker.plugin';\n\n/**\n * A module that provides the default `EditorJS` inline marker tool.\n * See [the GitHub repo](https://github.com/editor-js/marker) for API details\n */\n@NgModule({\n  providers: [PluginMarker]\n})\nexport class PluginMarkerModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/PluginParagraph.html":{"url":"injectables/PluginParagraph.html","title":"injectable - PluginParagraph","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  PluginParagraph\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            libs/ngx-editorjs-plugins/src/lib/plugins/paragraph/paragraph.plugin.ts\n        \n\n            \n                Description\n            \n            \n                This plugin returns the tool settings for a  block tool for EditorJS\n\n            \n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                plugin\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            plugin\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    plugin()\n                \n            \n\n\n            \n                \n                    Defined in libs/ngx-editorjs-plugins/src/lib/plugins/paragraph/paragraph.plugin.ts:14\n                \n            \n\n\n            \n                \n                    Returns the plugin settings\n\n\n                    \n                        Returns :     ToolSettings\n\n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport Paragraph from '@editorjs/paragraph';\nimport { ToolSettings } from '@editorjs/editorjs';\nimport { BasePlugin } from '../../types/plugins';\n\n/**\n * This plugin returns the tool settings for a `` block tool for `EditorJS`\n */\n@Injectable()\nexport class PluginParagraph implements BasePlugin {\n  /**\n   * Returns the plugin settings\n   */\n  public plugin(): ToolSettings {\n    return Paragraph;\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/PluginParagraphModule.html":{"url":"modules/PluginParagraphModule.html","title":"module - PluginParagraphModule","body":"\n                   \n\n\n\n\n    Modules\n    PluginParagraphModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_PluginParagraphModule\n\n\n\ncluster_PluginParagraphModule_providers\n\n\n\n\nPluginParagraph\n\nPluginParagraph\n\n\n\nPluginParagraphModule\n\nPluginParagraphModule\n\nPluginParagraphModule -->\n\nPluginParagraph->PluginParagraphModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            libs/ngx-editorjs-plugins/src/lib/plugins/paragraph/paragraph.module.ts\n        \n\n\n        \n            Description\n        \n        \n            A module that provides the default EditorJS  block tool.\nSee the GitHub repo for API details\n\n        \n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            PluginParagraph\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { NgModule } from '@angular/core';\nimport { PluginParagraph } from './paragraph.plugin';\n\n/**\n * A module that provides the default `EditorJS` `` block tool.\n * See [the GitHub repo](https://github.com/editor-js/paragraph) for API details\n */\n@NgModule({\n  providers: [PluginParagraph]\n})\nexport class PluginParagraphModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/PluginSimpleImage.html":{"url":"injectables/PluginSimpleImage.html","title":"injectable - PluginSimpleImage","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  PluginSimpleImage\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            libs/ngx-editorjs-plugins/src/lib/plugins/simple-image/simple-image.plugin.ts\n        \n\n            \n                Description\n            \n            \n                This plugin returns the simple image tool for  block editor EditorJS\n\n            \n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                plugin\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            plugin\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    plugin()\n                \n            \n\n\n            \n                \n                    Defined in libs/ngx-editorjs-plugins/src/lib/plugins/simple-image/simple-image.plugin.ts:14\n                \n            \n\n\n            \n                \n                    Returns the plugin settings\n\n\n                    \n                        Returns :     ToolSettings\n\n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { ToolSettings } from '@editorjs/editorjs';\nimport SimpleImage from '@editorjs/simple-image';\nimport { BasePlugin } from '../../types/plugins';\n\n/**\n * This plugin returns the simple image tool for `` block editor `EditorJS`\n */\n@Injectable()\nexport class PluginSimpleImage implements BasePlugin {\n  /**\n   * Returns the plugin settings\n   */\n  public plugin(): ToolSettings {\n    return SimpleImage;\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/PluginSimpleImageModule.html":{"url":"modules/PluginSimpleImageModule.html","title":"module - PluginSimpleImageModule","body":"\n                   \n\n\n\n\n    Modules\n    PluginSimpleImageModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_PluginSimpleImageModule\n\n\n\ncluster_PluginSimpleImageModule_providers\n\n\n\n\nPluginSimpleImage\n\nPluginSimpleImage\n\n\n\nPluginSimpleImageModule\n\nPluginSimpleImageModule\n\nPluginSimpleImageModule -->\n\nPluginSimpleImage->PluginSimpleImageModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            libs/ngx-editorjs-plugins/src/lib/plugins/simple-image/simple-image.module.ts\n        \n\n\n        \n            Description\n        \n        \n            A module that provides the simple image tools for EditorJS  block tool.\nSee the GitHub repo for API details\n\n        \n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            PluginSimpleImage\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { NgModule } from '@angular/core';\nimport { PluginSimpleImage } from './simple-image.plugin';\n\n/**\n * A module that provides the simple image tools for `EditorJS` `` block tool.\n * See [the GitHub repo](https://github.com/editor-js/image) for API details\n */\n@NgModule({\n  providers: [PluginSimpleImage]\n})\nexport class PluginSimpleImageModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/Ready.html":{"url":"classes/Ready.html","title":"class - Ready","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  Ready\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            libs/ngx-editorjs-ngrx/src/lib/actions/ngx-editorjs.actions.ts\n        \n\n\n\n            \n                Implements\n            \n            \n                        Action\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                payload\n                            \n                            \n                                    Readonly\n                                type\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(payload: literal type)\n                    \n                \n                        \n                            \n                                Defined in libs/ngx-editorjs-ngrx/src/lib/actions/ngx-editorjs.actions.ts:28\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        payload\n                                                  \n                                                        \n                                                                    literal type\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            payload\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     literal type\n\n                        \n                    \n                        \n                            \n                                    Defined in libs/ngx-editorjs-ngrx/src/lib/actions/ngx-editorjs.actions.ts:29\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                            type\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : EditorJSActionTypes.Ready\n                        \n                    \n                        \n                            \n                                    Defined in libs/ngx-editorjs-ngrx/src/lib/actions/ngx-editorjs.actions.ts:28\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { Action } from '@ngrx/store';\nimport { OutputData } from '@editorjs/editorjs';\n\nexport enum EditorJSActionTypes {\n  SaveStart = '[ngx-editorjs] Start Save',\n  SaveEnd = '[ngx-editorjs] Start End',\n  NotReady = '[ngx-editorjs] Not Ready',\n  Ready = '[ngx-editorjs] Ready',\n  Changed = '[ngx-editorjs] Changed'\n}\n\nexport class SaveStart implements Action {\n  readonly type = EditorJSActionTypes.SaveStart;\n  constructor(public payload: { holder: string }) {}\n}\n\nexport class SaveEnd implements Action {\n  readonly type = EditorJSActionTypes.SaveEnd;\n  constructor(public payload: { holder: string; data: OutputData }) {}\n}\n\nexport class NotReady implements Action {\n  readonly type = EditorJSActionTypes.NotReady;\n  constructor(public payload: { holder: string }) {}\n}\n\nexport class Ready implements Action {\n  readonly type = EditorJSActionTypes.Ready;\n  constructor(public payload: { holder: string }) {}\n}\n\nexport class Changed implements Action {\n  readonly type = EditorJSActionTypes.Changed;\n  constructor(public payload: { holder: string; data: OutputData }) {}\n}\n\nexport type NgxEditorJSActions = SaveStart | SaveEnd | NotReady | Ready | Changed;\n\n    \n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/ReadyMap.html":{"url":"interfaces/ReadyMap.html","title":"interface - ReadyMap","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  ReadyMap\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            libs/ngx-editorjs/src/lib/types/maps.ts\n        \n\n            \n                Description\n            \n            \n                A map containing BehaviorSubject of boolean values of the ready state of EditorJS\n\n            \n\n\n\n\n            \n    Indexable\n        \n            \n                \n                    \n                        [key: string]:    BehaviorSubject\n\n                    \n                \n                        \n                            \n                                Defined in libs/ngx-editorjs/src/lib/types/maps.ts:46\n                            \n                        \n                \n                    \n                        A map key containing a {BehaviorSubject} of {boolean}\n\n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import EditorJS from '@editorjs/editorjs';\nimport { BehaviorSubject } from 'rxjs';\nimport { Block } from './blocks';\n\n/**\n * An event type for calling `EditorJS`\n */\nexport interface EventType {\n  type: string;\n  payload?: T;\n}\n\n/**\n * A map containing an event subject for an `EditorJS` instance\n */\nexport interface EventMap {\n  /**\n   * A map key containing a {BehaviorSubject} of {EventType}\n   */\n  [key: string]: BehaviorSubject;\n}\n\n/**\n * A map containing instances of `EditorJS`\n */\nexport interface EditorMap {\n  /**\n   * A map key containing a {BehaviorSubject} of {EditorJS}\n   */\n  [key: string]: BehaviorSubject;\n}\n\n/**\n * A map containing `BehaviorSubject` of `Block` elements from `EditorJS`\n */\nexport interface BlocksMap {\n  /**\n   * A map key containing a {BehaviorSubject} of {Block[]}\n   */\n  [key: string]: BehaviorSubject;\n}\n\n/**\n * A map containing `BehaviorSubject` of `boolean` values of the ready state of `EditorJS`\n */\nexport interface ReadyMap {\n  /**\n   * A map key containing a {BehaviorSubject} of {boolean}\n   */\n  [key: string]: BehaviorSubject;\n}\n\n/**\n * A map containing `BehaviorSubject` of `number` which is the timestamp of the last `EditorJS` change\n */\nexport interface ChangeMap {\n  /**\n   * A map key containing a {BehaviorSubject} of {number}\n   */\n  [key: string]: BehaviorSubject;\n}\n\n    \n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/SaveEnd.html":{"url":"classes/SaveEnd.html","title":"class - SaveEnd","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  SaveEnd\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            libs/ngx-editorjs-ngrx/src/lib/actions/ngx-editorjs.actions.ts\n        \n\n\n\n            \n                Implements\n            \n            \n                        Action\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                payload\n                            \n                            \n                                    Readonly\n                                type\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(payload: literal type)\n                    \n                \n                        \n                            \n                                Defined in libs/ngx-editorjs-ngrx/src/lib/actions/ngx-editorjs.actions.ts:18\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        payload\n                                                  \n                                                        \n                                                                    literal type\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            payload\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     literal type\n\n                        \n                    \n                        \n                            \n                                    Defined in libs/ngx-editorjs-ngrx/src/lib/actions/ngx-editorjs.actions.ts:19\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                            type\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : EditorJSActionTypes.SaveEnd\n                        \n                    \n                        \n                            \n                                    Defined in libs/ngx-editorjs-ngrx/src/lib/actions/ngx-editorjs.actions.ts:18\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { Action } from '@ngrx/store';\nimport { OutputData } from '@editorjs/editorjs';\n\nexport enum EditorJSActionTypes {\n  SaveStart = '[ngx-editorjs] Start Save',\n  SaveEnd = '[ngx-editorjs] Start End',\n  NotReady = '[ngx-editorjs] Not Ready',\n  Ready = '[ngx-editorjs] Ready',\n  Changed = '[ngx-editorjs] Changed'\n}\n\nexport class SaveStart implements Action {\n  readonly type = EditorJSActionTypes.SaveStart;\n  constructor(public payload: { holder: string }) {}\n}\n\nexport class SaveEnd implements Action {\n  readonly type = EditorJSActionTypes.SaveEnd;\n  constructor(public payload: { holder: string; data: OutputData }) {}\n}\n\nexport class NotReady implements Action {\n  readonly type = EditorJSActionTypes.NotReady;\n  constructor(public payload: { holder: string }) {}\n}\n\nexport class Ready implements Action {\n  readonly type = EditorJSActionTypes.Ready;\n  constructor(public payload: { holder: string }) {}\n}\n\nexport class Changed implements Action {\n  readonly type = EditorJSActionTypes.Changed;\n  constructor(public payload: { holder: string; data: OutputData }) {}\n}\n\nexport type NgxEditorJSActions = SaveStart | SaveEnd | NotReady | Ready | Changed;\n\n    \n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/SaveStart.html":{"url":"classes/SaveStart.html","title":"class - SaveStart","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  SaveStart\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            libs/ngx-editorjs-ngrx/src/lib/actions/ngx-editorjs.actions.ts\n        \n\n\n\n            \n                Implements\n            \n            \n                        Action\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                payload\n                            \n                            \n                                    Readonly\n                                type\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(payload: literal type)\n                    \n                \n                        \n                            \n                                Defined in libs/ngx-editorjs-ngrx/src/lib/actions/ngx-editorjs.actions.ts:13\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        payload\n                                                  \n                                                        \n                                                                    literal type\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            payload\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     literal type\n\n                        \n                    \n                        \n                            \n                                    Defined in libs/ngx-editorjs-ngrx/src/lib/actions/ngx-editorjs.actions.ts:14\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                            type\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : EditorJSActionTypes.SaveStart\n                        \n                    \n                        \n                            \n                                    Defined in libs/ngx-editorjs-ngrx/src/lib/actions/ngx-editorjs.actions.ts:13\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { Action } from '@ngrx/store';\nimport { OutputData } from '@editorjs/editorjs';\n\nexport enum EditorJSActionTypes {\n  SaveStart = '[ngx-editorjs] Start Save',\n  SaveEnd = '[ngx-editorjs] Start End',\n  NotReady = '[ngx-editorjs] Not Ready',\n  Ready = '[ngx-editorjs] Ready',\n  Changed = '[ngx-editorjs] Changed'\n}\n\nexport class SaveStart implements Action {\n  readonly type = EditorJSActionTypes.SaveStart;\n  constructor(public payload: { holder: string }) {}\n}\n\nexport class SaveEnd implements Action {\n  readonly type = EditorJSActionTypes.SaveEnd;\n  constructor(public payload: { holder: string; data: OutputData }) {}\n}\n\nexport class NotReady implements Action {\n  readonly type = EditorJSActionTypes.NotReady;\n  constructor(public payload: { holder: string }) {}\n}\n\nexport class Ready implements Action {\n  readonly type = EditorJSActionTypes.Ready;\n  constructor(public payload: { holder: string }) {}\n}\n\nexport class Changed implements Action {\n  readonly type = EditorJSActionTypes.Changed;\n  constructor(public payload: { holder: string; data: OutputData }) {}\n}\n\nexport type NgxEditorJSActions = SaveStart | SaveEnd | NotReady | Ready | Changed;\n\n    \n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/SidebarComponent.html":{"url":"components/SidebarComponent.html","title":"component - SidebarComponent","body":"\n                   \n\n\n\n\n\n  Components\n  SidebarComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    apps/ngx-tinynodes/src/app/components/sidebar-component/sidebar.component.ts\n\n\n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                tinynodes-sidebar\n            \n\n            \n                styleUrls\n                sidebar.component.scss\n            \n\n\n\n            \n                templateUrl\n                sidebar.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n\n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                openSourceMenu\n                            \n                            \n                                projectsMenu\n                            \n                        \n                    \n                \n\n\n\n\n        \n    \n\n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        openSourceMenu\n                    \n                \n                \n                    \n                        Type :         MenuGroup\n\n                    \n                \n                        \n                            \n                                    Defined in apps/ngx-tinynodes/src/app/components/sidebar-component/sidebar.component.ts:14\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        projectsMenu\n                    \n                \n                \n                    \n                        Type :         MenuGroup\n\n                    \n                \n                        \n                            \n                                    Defined in apps/ngx-tinynodes/src/app/components/sidebar-component/sidebar.component.ts:11\n                            \n                        \n            \n        \n\n\n\n\n\n\n\n\n\n    \n        import { Component, Input } from '@angular/core';\nimport { MenuGroup } from '@tinynodes/ngx-tinynodes-core';\n\n@Component({\n  selector: 'tinynodes-sidebar',\n  templateUrl: 'sidebar.component.html',\n  styleUrls: ['sidebar.component.scss']\n})\nexport class SidebarComponent {\n  @Input()\n  projectsMenu: MenuGroup;\n\n  @Input()\n  openSourceMenu: MenuGroup;\n}\n\n    \n\n    \n        \n  {{ projectsMenu.title }}\n\n  {{ child.label }}\n\n\n\n  {{ openSourceMenu.title }}\n\n  {{ child.label }}\n -->\n\n    \n\n    \n                \n                    sidebar.component.scss\n                \n                \n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '  {{ projectsMenu.title }}  {{ child.label }}  {{ openSourceMenu.title }}  {{ child.label }} -->'\n    var COMPONENTS = [{'name': 'AppContainerComponent', 'selector': 'tinynodes-root'},{'name': 'FormContainerComponent', 'selector': 'ngx-form-container'},{'name': 'HomePageComponent', 'selector': 'tinynodes-home-page'},{'name': 'NavBarComponent', 'selector': 'tinynodes-nav-bar'},{'name': 'NgxEditorJSBaseComponent', 'selector': ''},{'name': 'NgxEditorJSComponent', 'selector': 'ngx-editorjs'},{'name': 'NgxEditorJSDemoHomeComponent', 'selector': 'ngx-editorjs-demo-home'},{'name': 'NgxEditorJSDemoInfoComponent', 'selector': 'ngx-editorjs-demo-info'},{'name': 'NgxEditorJSDemoTagComponent', 'selector': 'ngx-editorjs-tag-component'},{'name': 'NgxEditorJSMatFieldComponent', 'selector': 'ngx-editorjs-mat-field'},{'name': 'PageContainerComponent', 'selector': 'ngx-page-container'},{'name': 'SidebarComponent', 'selector': 'tinynodes-sidebar'}];\n    var DIRECTIVES = [{'name': 'NgxEditorJSDirective', 'selector': '[ngxEditorJS]'}];\n    var ACTUAL_COMPONENT = {'name': 'SidebarComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/Tag.html":{"url":"interfaces/Tag.html","title":"interface - Tag","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  Tag\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            libs/ngx-editorjs-demo/src/lib/store/pages/pages.models.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        key\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        key\n                                    \n                                \n                                \n                                    \n                                        key:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { ID } from '@datorama/akita';\nimport { Block } from '@tinynodes/ngx-editorjs';\n\nexport interface Tag {\n  key: string;\n}\n\nexport interface PageBlock extends Block {\n  id: ID;\n}\n\nexport interface Page {\n  id: ID;\n  pageTitle: string;\n  pageTags: Tag[];\n  blocks: PageBlock[];\n}\n\n    \n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/TestClass.html":{"url":"classes/TestClass.html","title":"class - TestClass","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  TestClass\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            libs/ngx-editorjs/src/testing/shared.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                render\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in libs/ngx-editorjs/src/testing/shared.ts:5\n                            \n                        \n\n            \n        \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            render\n                        \n                        \n                    \n                \n            \n            \n                \nrender()\n                \n            \n\n\n            \n                \n                    Defined in libs/ngx-editorjs/src/testing/shared.ts:7\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         any\n\n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { ToolSettings } from '@editorjs/editorjs';\nimport { BasePlugin } from '../lib/types/plugins';\nimport { EditorJSConfig } from '../lib/types/config';\n\nexport class TestClass {\n  constructor() {}\n  render() {\n    return document.createElement('div');\n  }\n}\n\nexport class MockPlugin implements BasePlugin {\n  public plugin(): ToolSettings {\n    return { class: TestClass };\n  }\n  shortcut() {\n    return 'test-shortcut';\n  }\n}\n\nexport class MockEditorJS {\n  blocks: any;\n  saver: any;\n  version: string;\n  destroy: () => void;\n\n  isReady: Promise;\n\n  constructor(private config: EditorJSConfig) {\n    this.version = 'test';\n\n    this.isReady = Promise.resolve();\n\n    this.destroy = () => {};\n\n    this.blocks = {\n      clear: () => {},\n      render: () => {}\n    };\n\n    this.saver = {\n      save: (): Promise => {\n        return Promise.resolve({\n          time: Date.now(),\n          version: 'test',\n          blocks: []\n        });\n      }\n    };\n    (config as any).onReady();\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/TinynodeDemos.html":{"url":"interfaces/TinynodeDemos.html","title":"interface - TinynodeDemos","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  TinynodeDemos\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            libs/ngx-tinynodes-core/src/lib/stores/app/application.model.ts\n        \n\n            \n                Description\n            \n            \n                The demos on tinynodes\n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        ngx-editorjs-demo\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        ngx-editorjs-demo\n                                    \n                                \n                                \n                                    \n                                        ngx-editorjs-demo:         NgxEditorJSDemoData\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         NgxEditorJSDemoData\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    The ngx-editorjs-demo data\n\n                                \n                            \n                        \n                    \n            \n    \n\n\n    \n        import { Block } from '@tinynodes/ngx-editorjs';\nimport { MenuGroup, MenuItem } from '../../types/app';\n\n/**\n * An Enum of the keys in the application state\n */\nexport enum ApplicationStateKeys {\n  /**\n   * The hidden state key\n   */\n  Hidden = 'hidden',\n\n  /**\n   * The menus key\n   */\n  Menus = 'menus',\n\n  /**\n   * The demo data key\n   */\n  DemoData = 'demoData'\n}\n\n/**\n * Interface for a demo data object\n */\nexport interface DemoData {\n  /**\n   * The name of the demo (e.g. `ngx-editorjs-demo`)\n   */\n  name: string;\n  /**\n   * The data for the demo as ``\n   */\n  data: T;\n}\n\n/**\n * Interface for `ngx-editorjs-demo` data\n * TODO: This should be moved\n */\nexport interface NgxEditorJSDemo {\n  /**\n   * The initial blocks for the demo\n   */\n  blocks: Block[];\n\n  /**\n   * Links for this demo\n   */\n  links: MenuGroup;\n}\n\n/**\n * The demo data for `ngx-editorjs-demo`\n */\nexport interface NgxEditorJSDemoData extends DemoData {}\n\n/**\n * The demos on tinynodes\n */\nexport interface TinynodeDemos {\n  /**\n   * The `ngx-editorjs-demo` data\n   */\n  'ngx-editorjs-demo': NgxEditorJSDemoData;\n}\n\n/**\n * A representation of the application state\n */\nexport interface ApplicationState {\n  /**\n   * If the side menu is hidden\n   */\n  hidden: boolean;\n\n  /**\n   * A set of menus loaded from application data\n   */\n  menus: MenuGroup[];\n\n  /**\n   * Data for demos\n   */\n  demoData: DemoData[];\n}\n\n    \n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/TinynodeDemos-1.html":{"url":"interfaces/TinynodeDemos-1.html","title":"interface - TinynodeDemos-1","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  TinynodeDemos\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/ngx-tinynodes/src/app/core/stores/app/application.model.ts\n        \n\n            \n                Description\n            \n            \n                The demos on tinynodes\n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        ngx-editorjs-demo\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        ngx-editorjs-demo\n                                    \n                                \n                                \n                                    \n                                        ngx-editorjs-demo:         NgxEditorJSDemoData\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         NgxEditorJSDemoData\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    The ngx-editorjs-demo data\n\n                                \n                            \n                        \n                    \n            \n    \n\n\n    \n        import { Block } from '@tinynodes/ngx-editorjs';\nimport { MenuGroup } from '../../types/app';\n\n/**\n * An Enum of the keys in the application state\n */\nexport enum ApplicationStateKeys {\n  /**\n   * The hidden state key\n   */\n  Hidden = 'hidden',\n\n  /**\n   * The menus key\n   */\n  Menus = 'menus',\n\n  /**\n   * The demo data key\n   */\n  DemoData = 'demoData'\n}\n\n/**\n * Interface for a demo data object\n */\nexport interface DemoData {\n  /**\n   * The name of the demo (e.g. `ngx-editorjs-demo`)\n   */\n  name: string;\n  /**\n   * The data for the demo as ``\n   */\n  data: T;\n}\n\n/**\n * Interface for `ngx-editorjs-demo` data\n * TODO: This should be moved\n */\nexport interface NgxEditorJSDemo {\n  /**\n   * The initial blocks for the demo\n   */\n  blocks: Block[];\n}\n\n/**\n * The demo data for `ngx-editorjs-demo`\n */\nexport interface NgxEditorJSDemoData extends DemoData {}\n\n/**\n * The demos on tinynodes\n */\nexport interface TinynodeDemos {\n  /**\n   * The `ngx-editorjs-demo` data\n   */\n  'ngx-editorjs-demo': NgxEditorJSDemoData;\n}\n\n/**\n * A representation of the application state\n */\nexport interface ApplicationState {\n  /**\n   * If the side menu is hidden\n   */\n  hidden: boolean;\n\n  /**\n   * A set of menus loaded from application data\n   */\n  menus: MenuGroup[];\n\n  /**\n   * Data for demos\n   */\n  demoData: DemoData[];\n}\n\n    \n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/ToolSettingsMap.html":{"url":"interfaces/ToolSettingsMap.html","title":"interface - ToolSettingsMap","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  ToolSettingsMap\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            libs/ngx-editorjs/src/lib/types/plugins.ts\n        \n\n            \n                Description\n            \n            \n                A map of all the tools settings\n\n            \n\n\n\n\n            \n    Indexable\n        \n            \n                \n                    \n                        [key: string]:    ToolConstructable | ToolSettings\n\n                    \n                \n                        \n                            \n                                Defined in libs/ngx-editorjs/src/lib/types/plugins.ts:17\n                            \n                        \n                \n                    \n                        The key of the plugin and the plugin exported tool settings\n\n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { InjectionToken } from '@angular/core';\nimport { ToolSettings, ToolConstructable } from '@editorjs/editorjs';\n\n/**\n * A Module plugin configuration\n */\nexport interface PluginConfig {\n  /**\n   * The key of the plugin and the plugin class extending `BasePlugin`\n   */\n  [key: string]: BasePlugin;\n}\n\n/**\n * A map of all the tools settings\n */\nexport interface ToolSettingsMap {\n  /**\n   * The key of the plugin and the plugin exported tool settings\n   */\n  [key: string]: ToolConstructable | ToolSettings;\n}\n\n/**\n * Defines the interface for required and optional plugin methods.\n * These methods allow a plugin to return a EditorJS plugin and an optional shortcut\n */\nexport interface BasePlugin {\n  /**\n   * The plugin settings to be returned\n   */\n  plugin: () => ToolConstructable | ToolSettings;\n\n  /**\n   * Optional shortcut for the plugin\n   */\n  shortcut?: () => string;\n}\n\n/**\n * The Injection token for initial plugins as defined in the ngx-editorjs module\n */\nexport const InitialPlugins = new InjectionToken('InitialPlugins');\n\n/**\n * The injection token for adding plugins via your own application\n */\nexport const UserPlugins = new InjectionToken('UserPlugins');\n\n    \n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/ToolSettingsMap-1.html":{"url":"interfaces/ToolSettingsMap-1.html","title":"interface - ToolSettingsMap-1","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  ToolSettingsMap\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            libs/ngx-editorjs-plugins/src/lib/types/plugins.ts\n        \n\n            \n                Description\n            \n            \n                A map of all the tools settings\n\n            \n\n\n\n\n            \n    Indexable\n        \n            \n                \n                    \n                        [key: string]:    ToolConstructable | ToolSettings\n\n                    \n                \n                        \n                            \n                                Defined in libs/ngx-editorjs-plugins/src/lib/types/plugins.ts:17\n                            \n                        \n                \n                    \n                        The key of the plugin and the plugin exported tool settings\n\n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { InjectionToken } from '@angular/core';\nimport { ToolSettings, ToolConstructable } from '@editorjs/editorjs';\n\n/**\n * A Module plugin configuration\n */\nexport interface PluginConfig {\n  /**\n   * The key of the plugin and the plugin class extending `BasePlugin`\n   */\n  [key: string]: BasePlugin;\n}\n\n/**\n * A map of all the tools settings\n */\nexport interface ToolSettingsMap {\n  /**\n   * The key of the plugin and the plugin exported tool settings\n   */\n  [key: string]: ToolConstructable | ToolSettings;\n}\n\n/**\n * Defines the interface for required and optional plugin methods.\n * These methods allow a plugin to return a EditorJS plugin and an optional shortcut\n */\nexport interface BasePlugin {\n  /**\n   * The plugin settings to be returned\n   */\n  plugin: () => ToolConstructable | ToolSettings;\n\n  /**\n   * Optional shortcut for the plugin\n   */\n  shortcut?: () => string;\n}\n\n/**\n * The Injection token for initial plugins as defined in the ngx-editorjs module\n */\nexport const InitialPlugins = new InjectionToken('InitialPlugins');\n\n/**\n * The injection token for adding plugins via your own application\n */\nexport const UserPlugins = new InjectionToken('UserPlugins');\n\n    \n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"changelog.html":{"url":"changelog.html","title":"getting-started - changelog","body":"\n                   \n\nTinynodes Changelog\n\nThis changelog is related to the overall site. You can also find changelogs for libraries under the library docs\n\n\nWednesday, 15th May 2019\nToday I have released @tinynodes/ngx-editorjs@1.3.2. This will be without a Forms component. In this release the main change is internally I'm using a new EditorJS Injector module I've created to handle managing the underlying instance. There are also a lot of documentation improvements and a completly new updated demo site.\nMonday, 13th May 2019\nToday I have released @tinynodes/ngx-editorjs@1.2.0. For now I've removed any default plugins from core package, now all plugins must be added at the application level - this can be see in the demo app.\nSunday, 12th May 2019\nThe first devlog is to report that currently version 1.2 has been delayed due to current build issues.\nA bug report has been filed on @nrwl/nx project.\nIn 1.2 there is a new @tinynodes/ngx-editorjs-plugins module that provides exports for several common EditorJS plugins and will be expanded to cover all the officially released plugins.\nWith this change the current build scripts break, and until it is resolved this will block the release.\nIn the meantime I'll continue to work on this small demo site, making it more useful as a good example of an Angular app.\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"contributing.html":{"url":"contributing.html","title":"getting-started - contributing","body":"\n                   \n\nContributing\nWhen contributing to this repository, please first discuss the change you wish to make via issue,\nemail, or any other method with the owners of this repository before making a change.\nPlease note we have a code of conduct, please follow it in all your interactions with the project.\nPull Request Process\n\nEnsure any install or build dependencies are removed before the end of the layer when doing a\nbuild.\nUpdate the README.md with details of changes to the interface, this includes new environment\nvariables, exposed ports, useful file locations and container parameters.\nIncrease the version numbers in any examples files and the README.md to the new version that this\nPull Request would represent. The versioning scheme we use is SemVer.\nYou may merge the Pull Request in once you have the sign-off of two other developers, or if you\ndo not have permission to do that, you may request the second reviewer to merge it for you.\n\nCode of Conduct\nOur Pledge\nIn the interest of fostering an open and welcoming environment, we as\ncontributors and maintainers pledge to making participation in our project and\nour community a harassment-free experience for everyone, regardless of age, body\nsize, disability, ethnicity, gender identity and expression, level of experience,\nnationality, personal appearance, race, religion, or sexual identity and\norientation.\nOur Standards\nExamples of behavior that contributes to creating a positive environment\ninclude:\n\nUsing welcoming and inclusive language\nBeing respectful of differing viewpoints and experiences\nGracefully accepting constructive criticism\nFocusing on what is best for the community\nShowing empathy towards other community members\n\nExamples of unacceptable behavior by participants include:\n\nThe use of sexualized language or imagery and unwelcome sexual attention or\nadvances\nTrolling, insulting/derogatory comments, and personal or political attacks\nPublic or private harassment\nPublishing others' private information, such as a physical or electronic\naddress, without explicit permission\nOther conduct which could reasonably be considered inappropriate in a\nprofessional setting\n\nOur Responsibilities\nProject maintainers are responsible for clarifying the standards of acceptable\nbehavior and are expected to take appropriate and fair corrective action in\nresponse to any instances of unacceptable behavior.\nProject maintainers have the right and responsibility to remove, edit, or\nreject comments, commits, code, wiki edits, issues, and other contributions\nthat are not aligned to this Code of Conduct, or to ban temporarily or\npermanently any contributor for other behaviors that they deem inappropriate,\nthreatening, offensive, or harmful.\nScope\nThis Code of Conduct applies both within project spaces and in public spaces\nwhen an individual is representing the project or its community. Examples of\nrepresenting a project or community include using an official project e-mail\naddress, posting via an official social media account, or acting as an appointed\nrepresentative at an online or offline event. Representation of a project may be\nfurther defined and clarified by project maintainers.\nEnforcement\nInstances of abusive, harassing, or otherwise unacceptable behavior may be\nreported by contacting the project team at me@tane.dev. All\ncomplaints will be reviewed and investigated and will result in a response that\nis deemed necessary and appropriate to the circumstances. The project team is\nobligated to maintain confidentiality with regard to the reporter of an incident.\nFurther details of specific enforcement policies may be posted separately.\nProject maintainers who do not follow or enforce the Code of Conduct in good\nfaith may face temporary or permanent repercussions as determined by other\nmembers of the project's leadership.\nAttribution\nThis Code of Conduct is adapted from the Contributor Covenant, version 1.4,\navailable at http://contributor-covenant.org/version/1/4\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"coverage.html":{"url":"coverage.html","title":"coverage - coverage","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    Documentation coverage\n\n\n\n    \n\n\n\n    \n        \n            File\n            Type\n            Identifier\n            Statements\n        \n    \n    \n        \n            \n                \n                apps/ngx-tinynodes-e2e/src/support/app.po.ts\n            \n            variable\n            getGreeting\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                apps/ngx-tinynodes/src/app/app-routing.module.ts\n            \n            variable\n            appRoutes\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                apps/ngx-tinynodes/src/app/components/nav-bar/nav-bar.component.ts\n            \n            component\n            NavBarComponent\n            \n                75 %\n                (3/4)\n            \n        \n        \n            \n                \n                apps/ngx-tinynodes/src/app/components/sidebar-component/sidebar.component.ts\n            \n            component\n            SidebarComponent\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                apps/ngx-tinynodes/src/app/containers/app/app.component.ts\n            \n            component\n            AppContainerComponent\n            \n                90 %\n                (10/11)\n            \n        \n        \n            \n                \n                apps/ngx-tinynodes/src/app/core/stores/app/application.model.ts\n            \n            interface\n            ApplicationState\n            \n                100 %\n                (4/4)\n            \n        \n        \n            \n                \n                apps/ngx-tinynodes/src/app/core/stores/app/application.model.ts\n            \n            interface\n            DemoData\n            \n                100 %\n                (3/3)\n            \n        \n        \n            \n                \n                apps/ngx-tinynodes/src/app/core/stores/app/application.model.ts\n            \n            interface\n            NgxEditorJSDemo\n            \n                100 %\n                (2/2)\n            \n        \n        \n            \n                \n                apps/ngx-tinynodes/src/app/core/stores/app/application.model.ts\n            \n            interface\n            NgxEditorJSDemoData\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                apps/ngx-tinynodes/src/app/core/stores/app/application.model.ts\n            \n            interface\n            TinynodeDemos\n            \n                100 %\n                (2/2)\n            \n        \n        \n            \n                \n                apps/ngx-tinynodes/src/app/core/stores/app/application.query.ts\n            \n            injectable\n            ApplicationQuery\n            \n                100 %\n                (2/2)\n            \n        \n        \n            \n                \n                apps/ngx-tinynodes/src/app/core/stores/app/application.service.ts\n            \n            injectable\n            AppService\n            \n                100 %\n                (5/5)\n            \n        \n        \n            \n                \n                apps/ngx-tinynodes/src/app/core/stores/app/application.store.ts\n            \n            injectable\n            ApplicationStore\n            \n                100 %\n                (2/2)\n            \n        \n        \n            \n                \n                apps/ngx-tinynodes/src/app/core/types/app.ts\n            \n            interface\n            ApplicationData\n            \n                100 %\n                (3/3)\n            \n        \n        \n            \n                \n                apps/ngx-tinynodes/src/app/core/types/app.ts\n            \n            interface\n            MenuGroup\n            \n                100 %\n                (4/4)\n            \n        \n        \n            \n                \n                apps/ngx-tinynodes/src/app/core/types/app.ts\n            \n            interface\n            MenuItem\n            \n                100 %\n                (6/6)\n            \n        \n        \n            \n                \n                apps/ngx-tinynodes/src/app/pages/home/home-page.component.ts\n            \n            component\n            HomePageComponent\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                apps/ngx-tinynodes/src/environments/environment.prod.ts\n            \n            variable\n            environment\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                apps/ngx-tinynodes/src/environments/environment.ts\n            \n            variable\n            environment\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                libs/ngx-editorjs-demo/src/lib/components/tag-component/tag.component.ts\n            \n            component\n            NgxEditorJSDemoTagComponent\n            \n                38 %\n                (14/36)\n            \n        \n        \n            \n                \n                libs/ngx-editorjs-demo/src/lib/components/tag-component/tag.component.ts\n            \n            variable\n            TAG_COMPONENT_FIELD_CONTROL\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                libs/ngx-editorjs-demo/src/lib/components/tag-component/tag.component.ts\n            \n            variable\n            TAG_COMPONENT_VALUE_ACCESSOR\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                libs/ngx-editorjs-demo/src/lib/config/index.ts\n            \n            function\n            createNgxEditorJSDemoTools\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                libs/ngx-editorjs-demo/src/lib/containers/form-container/form-container.component.ts\n            \n            component\n            FormContainerComponent\n            \n                100 %\n                (19/19)\n            \n        \n        \n            \n                \n                libs/ngx-editorjs-demo/src/lib/containers/home-container/home-container.component.ts\n            \n            component\n            NgxEditorJSDemoHomeComponent\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                libs/ngx-editorjs-demo/src/lib/containers/page-container/page-container.component.ts\n            \n            component\n            PageContainerComponent\n            \n                100 %\n                (9/9)\n            \n        \n        \n            \n                \n                libs/ngx-editorjs-demo/src/lib/ngx-editorjs-demo.routes.ts\n            \n            variable\n            ngxEditorjsDemoRoutes\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                libs/ngx-editorjs-demo/src/lib/store/pages/pages.models.ts\n            \n            interface\n            Page\n            \n                0 %\n                (0/5)\n            \n        \n        \n            \n                \n                libs/ngx-editorjs-demo/src/lib/store/pages/pages.models.ts\n            \n            interface\n            PageBlock\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                libs/ngx-editorjs-demo/src/lib/store/pages/pages.models.ts\n            \n            interface\n            Tag\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                libs/ngx-editorjs-demo/src/lib/store/pages/pages.query.ts\n            \n            injectable\n            PagesQuery\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                libs/ngx-editorjs-demo/src/lib/store/pages/pages.service.ts\n            \n            injectable\n            PagesService\n            \n                36 %\n                (4/11)\n            \n        \n        \n            \n                \n                libs/ngx-editorjs-demo/src/lib/store/pages/pages.store.ts\n            \n            injectable\n            PagesStore\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                libs/ngx-editorjs-demo/src/lib/store/pages/pages.store.ts\n            \n            interface\n            PagesState\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                libs/ngx-editorjs-ngrx/src/lib/actions/ngx-editorjs.actions.ts\n            \n            class\n            Changed\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                libs/ngx-editorjs-ngrx/src/lib/actions/ngx-editorjs.actions.ts\n            \n            class\n            NotReady\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                libs/ngx-editorjs-ngrx/src/lib/actions/ngx-editorjs.actions.ts\n            \n            class\n            Ready\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                libs/ngx-editorjs-ngrx/src/lib/actions/ngx-editorjs.actions.ts\n            \n            class\n            SaveEnd\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                libs/ngx-editorjs-ngrx/src/lib/actions/ngx-editorjs.actions.ts\n            \n            class\n            SaveStart\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                libs/ngx-editorjs-ngrx/src/lib/effects/ngx-editorjs.effects.ts\n            \n            injectable\n            NgxEditorJSEffects\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                libs/ngx-editorjs-plugins/src/lib/plugins/code/code.plugin.ts\n            \n            injectable\n            PluginCode\n            \n                100 %\n                (2/2)\n            \n        \n        \n            \n                \n                libs/ngx-editorjs-plugins/src/lib/plugins/header/header.plugin.ts\n            \n            injectable\n            PluginHeader\n            \n                100 %\n                (2/2)\n            \n        \n        \n            \n                \n                libs/ngx-editorjs-plugins/src/lib/plugins/image/image.plugin.ts\n            \n            injectable\n            PluginImage\n            \n                100 %\n                (2/2)\n            \n        \n        \n            \n                \n                libs/ngx-editorjs-plugins/src/lib/plugins/link/link.plugin.ts\n            \n            injectable\n            PluginLink\n            \n                100 %\n                (2/2)\n            \n        \n        \n            \n                \n                libs/ngx-editorjs-plugins/src/lib/plugins/list/list.plugin.ts\n            \n            injectable\n            PluginList\n            \n                100 %\n                (2/2)\n            \n        \n        \n            \n                \n                libs/ngx-editorjs-plugins/src/lib/plugins/marker/marker.plugin.ts\n            \n            injectable\n            PluginMarker\n            \n                100 %\n                (3/3)\n            \n        \n        \n            \n                \n                libs/ngx-editorjs-plugins/src/lib/plugins/paragraph/paragraph.plugin.ts\n            \n            injectable\n            PluginParagraph\n            \n                100 %\n                (2/2)\n            \n        \n        \n            \n                \n                libs/ngx-editorjs-plugins/src/lib/plugins/simple-image/simple-image.plugin.ts\n            \n            injectable\n            PluginSimpleImage\n            \n                100 %\n                (2/2)\n            \n        \n        \n            \n                \n                libs/ngx-editorjs-plugins/src/lib/types/plugins.ts\n            \n            interface\n            BasePlugin\n            \n                100 %\n                (3/3)\n            \n        \n        \n            \n                \n                libs/ngx-editorjs-plugins/src/lib/types/plugins.ts\n            \n            interface\n            PluginConfig\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                libs/ngx-editorjs-plugins/src/lib/types/plugins.ts\n            \n            interface\n            ToolSettingsMap\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                libs/ngx-editorjs-plugins/src/lib/types/plugins.ts\n            \n            variable\n            InitialPlugins\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                libs/ngx-editorjs-plugins/src/lib/types/plugins.ts\n            \n            variable\n            UserPlugins\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                libs/ngx-editorjs/src/lib/config/editor-config.ts\n            \n            function\n            createEditorJSConfig\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                libs/ngx-editorjs/src/lib/config/editor-config.ts\n            \n            variable\n            DEFAULT_HOLDER_ID\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                libs/ngx-editorjs/src/lib/config/module-config.ts\n            \n            function\n            createModuleConfig\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                libs/ngx-editorjs/src/lib/containers/base/container.class.ts\n            \n            component\n            NgxEditorJSBaseComponent\n            \n                92 %\n                (26/28)\n            \n        \n        \n            \n                \n                libs/ngx-editorjs/src/lib/containers/base/container.class.ts\n            \n            variable\n            EDITORJS_FORM_VALUE_ACCESSOR\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                libs/ngx-editorjs/src/lib/containers/editorjs-mat-field/editorjs-mat-field.component.ts\n            \n            component\n            NgxEditorJSMatFieldComponent\n            \n                94 %\n                (50/53)\n            \n        \n        \n            \n                \n                libs/ngx-editorjs/src/lib/containers/editorjs-mat-field/editorjs-mat-field.component.ts\n            \n            interface\n            EditorJSMaterialForm\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                libs/ngx-editorjs/src/lib/containers/editorjs-mat-field/editorjs-mat-field.component.ts\n            \n            variable\n            EDITORJS_MATERIAL_FIELD_CONTROL\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                libs/ngx-editorjs/src/lib/containers/editorjs/editorjs.component.ts\n            \n            component\n            NgxEditorJSComponent\n            \n                87 %\n                (27/31)\n            \n        \n        \n            \n                \n                libs/ngx-editorjs/src/lib/directives/ngx-editorjs.directive.ts\n            \n            directive\n            NgxEditorJSDirective\n            \n                100 %\n                (22/22)\n            \n        \n        \n            \n                \n                libs/ngx-editorjs/src/lib/ngx-editorjs.module.ts\n            \n            function\n            createEditorJSInstance\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                libs/ngx-editorjs/src/lib/services/editorjs-injector.ts\n            \n            injectable\n            NgxEditorJSInstanceService\n            \n                88 %\n                (24/27)\n            \n        \n        \n            \n                \n                libs/ngx-editorjs/src/lib/services/editorjs.service.ts\n            \n            injectable\n            NgxEditorJSService\n            \n                85 %\n                (12/14)\n            \n        \n        \n            \n                \n                libs/ngx-editorjs/src/lib/services/plugins.service.ts\n            \n            injectable\n            NgxEditorJSPluginService\n            \n                100 %\n                (7/7)\n            \n        \n        \n            \n                \n                libs/ngx-editorjs/src/lib/types/blocks.ts\n            \n            interface\n            Block\n            \n                100 %\n                (3/3)\n            \n        \n        \n            \n                \n                libs/ngx-editorjs/src/lib/types/blocks.ts\n            \n            interface\n            Header\n            \n                100 %\n                (3/3)\n            \n        \n        \n            \n                \n                libs/ngx-editorjs/src/lib/types/blocks.ts\n            \n            interface\n            HeaderBlock\n            \n                100 %\n                (2/2)\n            \n        \n        \n            \n                \n                libs/ngx-editorjs/src/lib/types/blocks.ts\n            \n            interface\n            Image\n            \n                100 %\n                (6/6)\n            \n        \n        \n            \n                \n                libs/ngx-editorjs/src/lib/types/blocks.ts\n            \n            interface\n            ImageBlock\n            \n                100 %\n                (2/2)\n            \n        \n        \n            \n                \n                libs/ngx-editorjs/src/lib/types/blocks.ts\n            \n            interface\n            List\n            \n                100 %\n                (3/3)\n            \n        \n        \n            \n                \n                libs/ngx-editorjs/src/lib/types/blocks.ts\n            \n            interface\n            ListBlock\n            \n                100 %\n                (2/2)\n            \n        \n        \n            \n                \n                libs/ngx-editorjs/src/lib/types/blocks.ts\n            \n            interface\n            Paragraph\n            \n                100 %\n                (2/2)\n            \n        \n        \n            \n                \n                libs/ngx-editorjs/src/lib/types/blocks.ts\n            \n            interface\n            ParagraphBlock\n            \n                100 %\n                (2/2)\n            \n        \n        \n            \n                \n                libs/ngx-editorjs/src/lib/types/config.ts\n            \n            interface\n            EditorJSConfig\n            \n                100 %\n                (9/9)\n            \n        \n        \n            \n                \n                libs/ngx-editorjs/src/lib/types/config.ts\n            \n            interface\n            NgxEditorJSConfig\n            \n                100 %\n                (2/2)\n            \n        \n        \n            \n                \n                libs/ngx-editorjs/src/lib/types/config.ts\n            \n            variable\n            EDITIOR_JS_INSTANCE\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                libs/ngx-editorjs/src/lib/types/config.ts\n            \n            variable\n            FOR_ROOT_OPTIONS_TOKEN\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                libs/ngx-editorjs/src/lib/types/config.ts\n            \n            variable\n            NGX_EDITORJS_CONFIG\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                libs/ngx-editorjs/src/lib/types/editorjs-service.ts\n            \n            interface\n            CreateEditorJSOptions\n            \n                100 %\n                (4/4)\n            \n        \n        \n            \n                \n                libs/ngx-editorjs/src/lib/types/editorjs-service.ts\n            \n            interface\n            EditorJSAction\n            \n                100 %\n                (3/3)\n            \n        \n        \n            \n                \n                libs/ngx-editorjs/src/lib/types/injector.ts\n            \n            interface\n            EditorJSInstanceConfig\n            \n                100 %\n                (4/4)\n            \n        \n        \n            \n                \n                libs/ngx-editorjs/src/lib/types/injector.ts\n            \n            interface\n            InjectorMethodOption\n            \n                100 %\n                (4/4)\n            \n        \n        \n            \n                \n                libs/ngx-editorjs/src/lib/types/injector.ts\n            \n            variable\n            EDITORJS_MODULE_IMPORT\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                libs/ngx-editorjs/src/lib/types/injector.ts\n            \n            variable\n            EditorJSInstance\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                libs/ngx-editorjs/src/lib/types/injector.ts\n            \n            variable\n            MAP_DEFAULTS\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                libs/ngx-editorjs/src/lib/types/maps.ts\n            \n            interface\n            BlocksMap\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                libs/ngx-editorjs/src/lib/types/maps.ts\n            \n            interface\n            ChangeMap\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                libs/ngx-editorjs/src/lib/types/maps.ts\n            \n            interface\n            EditorMap\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                libs/ngx-editorjs/src/lib/types/maps.ts\n            \n            interface\n            EventMap\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                libs/ngx-editorjs/src/lib/types/maps.ts\n            \n            interface\n            EventType\n            \n                33 %\n                (1/3)\n            \n        \n        \n            \n                \n                libs/ngx-editorjs/src/lib/types/maps.ts\n            \n            interface\n            ReadyMap\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                libs/ngx-editorjs/src/lib/types/plugins.ts\n            \n            interface\n            BasePlugin\n            \n                100 %\n                (3/3)\n            \n        \n        \n            \n                \n                libs/ngx-editorjs/src/lib/types/plugins.ts\n            \n            interface\n            PluginConfig\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                libs/ngx-editorjs/src/lib/types/plugins.ts\n            \n            interface\n            ToolSettingsMap\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                libs/ngx-editorjs/src/lib/types/plugins.ts\n            \n            variable\n            InitialPlugins\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                libs/ngx-editorjs/src/lib/types/plugins.ts\n            \n            variable\n            UserPlugins\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                libs/ngx-editorjs/src/testing/ng-zone-mock.ts\n            \n            injectable\n            MockNgZone\n            \n                16 %\n                (1/6)\n            \n        \n        \n            \n                \n                libs/ngx-editorjs/src/testing/shared.ts\n            \n            class\n            MockEditorJS\n            \n                0 %\n                (0/7)\n            \n        \n        \n            \n                \n                libs/ngx-editorjs/src/testing/shared.ts\n            \n            class\n            MockPlugin\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                libs/ngx-editorjs/src/testing/shared.ts\n            \n            class\n            TestClass\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                libs/ngx-hideable-header-demo/src/lib/ngx-hideable-header-demo.module.ts\n            \n            variable\n            ngxHideableHeaderDemoRoutes\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                libs/ngx-tinynodes-core/src/lib/components/demo-info/demo-info.component.ts\n            \n            component\n            NgxEditorJSDemoInfoComponent\n            \n                62 %\n                (5/8)\n            \n        \n        \n            \n                \n                libs/ngx-tinynodes-core/src/lib/stores/app/application.model.ts\n            \n            interface\n            ApplicationState\n            \n                100 %\n                (4/4)\n            \n        \n        \n            \n                \n                libs/ngx-tinynodes-core/src/lib/stores/app/application.model.ts\n            \n            interface\n            DemoData\n            \n                100 %\n                (3/3)\n            \n        \n        \n            \n                \n                libs/ngx-tinynodes-core/src/lib/stores/app/application.model.ts\n            \n            interface\n            NgxEditorJSDemo\n            \n                100 %\n                (3/3)\n            \n        \n        \n            \n                \n                libs/ngx-tinynodes-core/src/lib/stores/app/application.model.ts\n            \n            interface\n            NgxEditorJSDemoData\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                libs/ngx-tinynodes-core/src/lib/stores/app/application.model.ts\n            \n            interface\n            TinynodeDemos\n            \n                100 %\n                (2/2)\n            \n        \n        \n            \n                \n                libs/ngx-tinynodes-core/src/lib/stores/app/application.query.ts\n            \n            injectable\n            ApplicationQuery\n            \n                100 %\n                (2/2)\n            \n        \n        \n            \n                \n                libs/ngx-tinynodes-core/src/lib/stores/app/application.service.ts\n            \n            injectable\n            AppService\n            \n                100 %\n                (5/5)\n            \n        \n        \n            \n                \n                libs/ngx-tinynodes-core/src/lib/stores/app/application.store.ts\n            \n            injectable\n            ApplicationStore\n            \n                100 %\n                (2/2)\n            \n        \n        \n            \n                \n                libs/ngx-tinynodes-core/src/lib/types/app.ts\n            \n            interface\n            ApplicationData\n            \n                100 %\n                (3/3)\n            \n        \n        \n            \n                \n                libs/ngx-tinynodes-core/src/lib/types/app.ts\n            \n            interface\n            MenuGroup\n            \n                100 %\n                (4/4)\n            \n        \n        \n            \n                \n                libs/ngx-tinynodes-core/src/lib/types/app.ts\n            \n            interface\n            MenuItem\n            \n                100 %\n                (6/6)\n            \n        \n    \n\n\n\n\n\n    new Tablesort(document.getElementById('coverage-table'));\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"dependencies.html":{"url":"dependencies.html","title":"package-dependencies - dependencies","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        Dependencies\n    \n    \n        \n            @angular/animations : ~7.2.15\n        \n            @angular/cdk : ^7.3.7\n        \n            @angular/common : ~7.2.15\n        \n            @angular/compiler : ~7.2.15\n        \n            @angular/core : ~7.2.15\n        \n            @angular/flex-layout : ^7.0.0-beta.24\n        \n            @angular/forms : ~7.2.15\n        \n            @angular/material : ^7.3.7\n        \n            @angular/platform-browser : ~7.2.15\n        \n            @angular/platform-browser-dynamic : ~7.2.15\n        \n            @angular/router : ~7.2.15\n        \n            @datorama/akita-ng-router-store : ^3.0.2\n        \n            @datorama/akita-ngdevtools : ^1.0.4\n        \n            @editorjs/editorjs : ^2.13.0\n        \n            @editorjs/header : ^2.2.3\n        \n            @editorjs/list : ^1.3.4\n        \n            @editorjs/paragraph : ^2.5.0\n        \n            @ngrx/effects : ^7.4.0\n        \n            @ngrx/store : ^7.4.0\n        \n            core-js : ^2.5.4\n        \n            hammerjs : ^2.0.8\n        \n            install : ^0.12.2\n        \n            ngx-hideable-header : 0.0.5\n        \n            ngx-markdown : ^7.1.5\n        \n            npm : ^6.9.0\n        \n            rxjs : 6.3.3\n        \n            zone.js : ^0.8.26\n    \n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/enumerations.html":{"url":"miscellaneous/enumerations.html","title":"miscellaneous-enumerations - enumerations","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous\n  Enumerations\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            ApplicationStateKeys   (libs/.../application.model.ts)\n                        \n                        \n                            ApplicationStateKeys   (apps/.../application.model.ts)\n                        \n                        \n                            EditorJSActionTypes   (libs/.../editorjs-service.ts)\n                        \n                        \n                            EditorJSActionTypes   (libs/.../ngx-editorjs.actions.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    libs/ngx-tinynodes-core/src/lib/stores/app/application.model.ts\n    \n        \n            \n                \n                    \n                        \n                        ApplicationStateKeys\n                    \n                \n                    \n                        \n                            An Enum of the keys in the application state\n\n                        \n                    \n                        \n                            \n                                 Hidden\n                            \n                        \n                        \n                            \n                                Value : hidden\n                            \n                        \n                        \n                            \n                                 Menus\n                            \n                        \n                        \n                            \n                                Value : menus\n                            \n                        \n                        \n                            \n                                 DemoData\n                            \n                        \n                        \n                            \n                                Value : demoData\n                            \n                        \n            \n        \n\n    apps/ngx-tinynodes/src/app/core/stores/app/application.model.ts\n    \n        \n            \n                \n                    \n                        \n                        ApplicationStateKeys\n                    \n                \n                    \n                        \n                            An Enum of the keys in the application state\n\n                        \n                    \n                        \n                            \n                                 Hidden\n                            \n                        \n                        \n                            \n                                Value : hidden\n                            \n                        \n                        \n                            \n                                 Menus\n                            \n                        \n                        \n                            \n                                Value : menus\n                            \n                        \n                        \n                            \n                                 DemoData\n                            \n                        \n                        \n                            \n                                Value : demoData\n                            \n                        \n            \n        \n\n    libs/ngx-editorjs/src/lib/types/editorjs-service.ts\n    \n        \n            \n                \n                    \n                        \n                        EditorJSActionTypes\n                    \n                \n                    \n                        \n                            Supported actions by the API\n\n                        \n                    \n                        \n                            \n                                 CreateEditor\n                            \n                        \n                        \n                            \n                                Value : createEditor\n                            \n                        \n                        \n                            \n                                 UpdateEditor\n                            \n                        \n                        \n                            \n                                Value : updateEditor\n                            \n                        \n                        \n                            \n                                 ClearEditor\n                            \n                        \n                        \n                            \n                                Value : clearEditor\n                            \n                        \n                        \n                            \n                                 DestroyEditor\n                            \n                        \n                        \n                            \n                                Value : destroyEditor\n                            \n                        \n                        \n                            \n                                 SaveEditor\n                            \n                        \n                        \n                            \n                                Value : saveEditor\n                            \n                        \n            \n        \n\n    libs/ngx-editorjs-ngrx/src/lib/actions/ngx-editorjs.actions.ts\n    \n        \n            \n                \n                    \n                        \n                        EditorJSActionTypes\n                    \n                \n                        \n                            \n                                 SaveStart\n                            \n                        \n                        \n                            \n                                Value : [ngx-editorjs] Start Save\n                            \n                        \n                        \n                            \n                                 SaveEnd\n                            \n                        \n                        \n                            \n                                Value : [ngx-editorjs] Start End\n                            \n                        \n                        \n                            \n                                 NotReady\n                            \n                        \n                        \n                            \n                                Value : [ngx-editorjs] Not Ready\n                            \n                        \n                        \n                            \n                                 Ready\n                            \n                        \n                        \n                            \n                                Value : [ngx-editorjs] Ready\n                            \n                        \n                        \n                            \n                                 Changed\n                            \n                        \n                        \n                            \n                                Value : [ngx-editorjs] Changed\n                            \n                        \n            \n        \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/functions.html":{"url":"miscellaneous/functions.html","title":"miscellaneous-functions - functions","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous\n  Functions\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            createEditorJSConfig   (libs/.../editor-config.ts)\n                        \n                        \n                            createEditorJSInstance   (libs/.../ngx-editorjs.module.ts)\n                        \n                        \n                            createModuleConfig   (libs/.../module-config.ts)\n                        \n                        \n                            createNgxEditorJSDemoTools   (libs/.../index.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    libs/ngx-editorjs/src/lib/config/editor-config.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        \n                            createEditorJSConfig\n                        \n                        \n                    \n                \n            \n            \n                \ncreateEditorJSConfig(inputConfig?)\n                \n            \n\n\n\n\n            \n                \n                    Creates an EditorJS config\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    inputConfig\n\n                                    \n                                        Yes\n                                    \n\n\n                                    \n                                        The config to merge\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     EditorConfig\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    libs/ngx-editorjs/src/lib/ngx-editorjs.module.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        \n                            createEditorJSInstance\n                        \n                        \n                    \n                \n            \n            \n                \ncreateEditorJSInstance(editorjs: any)\n                \n            \n\n\n\n\n            \n                \n                    Factory function to return the EditorJS base class\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    editorjs\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                \n            \n        \n    \n    libs/ngx-editorjs/src/lib/config/module-config.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        \n                            createModuleConfig\n                        \n                        \n                    \n                \n            \n            \n                \ncreateModuleConfig(config?)\n                \n            \n\n\n\n\n            \n                \n                    Creates the configuration from the module config\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    config\n\n                                    \n                                        Yes\n                                    \n\n\n                                    \n                                        Optional module configurations\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         NgxEditorJSConfig\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    libs/ngx-editorjs-demo/src/lib/config/index.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        \n                            createNgxEditorJSDemoTools\n                        \n                        \n                    \n                \n            \n            \n                \ncreateNgxEditorJSDemoTools()\n                \n            \n\n\n\n\n            \n                \n                    Creates the tools for the ngx-tinynodes demo application\n\n\n                    \n                        Returns :         PluginConfig\n\n                    \n                \n            \n        \n    \n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"index.html":{"url":"index.html","title":"getting-started - index","body":"\n                   \n\nNgx-Tinynodes\nThis repository is a collection of Angular components and demos with full documentation.\nSee the Changelog for the development diary of this site, or visit the documentation of libraries.\nYou can also find a fully searchable API documentation for all @tinynode components.\nLinks\n\nRepository\nDocumentation\nDemo Application Site\nNPM Collection\n\nLibraries\nngx-editorjs\nThe ngx-editorjs module provides an EditorJS instance within an Angular application and provides several features to use it:\n\nA Directive to attach to and block element\nAn out-of-the-box component to use within any Angular application or Angular form\nA Material Form Field component\nA Service to interact with EditorJS instances.\n\nBelow are the dependencies to use the features.\n@tinynodes/ngx-editorjs\nThis project provides a set of features for using EditorJS within Angular 7+\n\nReadme\nChangelog\nDemo\nProject Folder\n\n@tinynodes/ngx-editorjs-plugins\nThis project provides a module that exports a set of default plugins for @tinynodes/ngx-editorjs.\n\nReadme\nChangelog\nProject Folder\n\nDevelopment Information\nThis repository is run by Tane Piper and was generated using Nx.\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"license.html":{"url":"license.html","title":"getting-started - license","body":"\n                   \n\nTinynodes General MIT Licence\nCopyright 2019 Tane Piper me@tane.dev\nPermission is hereby granted, free of charge, to any person obtaining a copy of this software and associated documentation files (the \"Software\"), to deal in the Software without restriction, including without limitation the rights to use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of the Software, and to permit persons to whom the Software is furnished to do so, subject to the following conditions:\nThe above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software.\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules.html":{"url":"modules.html","title":"modules - modules","body":"\n                   \n\n\n\n\n    Modules\n\n\n    \n            \n                \n                    \n                        ApplicationDataModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        ApplicationDataModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        AppModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        AppRoutingModule\n                    \n                    \n                                \n                                    No graph available.\n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        MaterialModule\n                    \n                    \n                                \n                                    No graph available.\n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        NgxEditorjsDemoModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        NgxEditorJSModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        NgxEditorjsNgrxModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        NgxEditorjsPluginsModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        NgxHideableHeaderDemoModule\n                    \n                    \n                                \n                                    No graph available.\n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        NgxTinynodesCoreMaterialModule\n                    \n                    \n                                \n                                    No graph available.\n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        NgxTinynodesCoreModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        NgxTinynodesCoreModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        PageStoreModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        PluginCodeModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        PluginHeaderModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        PluginImageModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        PluginLinkModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        PluginListModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        PluginMarkerModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        PluginParagraphModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        PluginSimpleImageModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"overview.html":{"url":"overview.html","title":"overview - overview","body":"\n                   \n\n\n\n    Overview\n\n  \n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_ApplicationDataModule\n\n\n\ncluster_ApplicationDataModule_providers\n\n\n\ncluster_AppModule\n\n\n\ncluster_AppModule_declarations\n\n\n\ncluster_AppModule_imports\n\n\n\ncluster_AppModule_bootstrap\n\n\n\ncluster_NgxEditorjsDemoModule\n\n\n\ncluster_NgxEditorjsDemoModule_declarations\n\n\n\ncluster_NgxEditorjsDemoModule_imports\n\n\n\ncluster_NgxEditorjsDemoModule_exports\n\n\n\ncluster_NgxEditorJSModule\n\n\n\ncluster_NgxEditorJSModule_declarations\n\n\n\ncluster_NgxEditorJSModule_exports\n\n\n\ncluster_NgxEditorJSModule_providers\n\n\n\ncluster_NgxEditorjsNgrxModule\n\n\n\ncluster_NgxEditorjsPluginsModule\n\n\n\ncluster_NgxEditorjsPluginsModule_imports\n\n\n\ncluster_NgxEditorjsPluginsModule_exports\n\n\n\ncluster_NgxTinynodesCoreModule\n\n\n\ncluster_NgxTinynodesCoreModule_declarations\n\n\n\ncluster_NgxTinynodesCoreModule_imports\n\n\n\ncluster_NgxTinynodesCoreModule_exports\n\n\n\ncluster_PageStoreModule\n\n\n\ncluster_PageStoreModule_providers\n\n\n\ncluster_PluginCodeModule\n\n\n\ncluster_PluginCodeModule_providers\n\n\n\ncluster_PluginHeaderModule\n\n\n\ncluster_PluginHeaderModule_providers\n\n\n\ncluster_PluginImageModule\n\n\n\ncluster_PluginImageModule_providers\n\n\n\ncluster_PluginLinkModule\n\n\n\ncluster_PluginLinkModule_providers\n\n\n\ncluster_PluginListModule\n\n\n\ncluster_PluginListModule_providers\n\n\n\ncluster_PluginMarkerModule\n\n\n\ncluster_PluginMarkerModule_providers\n\n\n\ncluster_PluginParagraphModule\n\n\n\ncluster_PluginParagraphModule_providers\n\n\n\ncluster_PluginSimpleImageModule\n\n\n\ncluster_PluginSimpleImageModule_providers\n\n\n\n\nAppService\n\nAppService\n\n\n\nApplicationDataModule\n\nApplicationDataModule\n\nApplicationDataModule -->\n\nAppService->ApplicationDataModule\n\n\n\nApplicationDataModule -->\n\nAppService->ApplicationDataModule\n\n\n\n\n\nApplicationQuery\n\nApplicationQuery\n\nApplicationDataModule -->\n\nApplicationQuery->ApplicationDataModule\n\n\n\nApplicationDataModule -->\n\nApplicationQuery->ApplicationDataModule\n\n\n\n\n\nApplicationStore\n\nApplicationStore\n\nApplicationDataModule -->\n\nApplicationStore->ApplicationDataModule\n\n\n\nApplicationDataModule -->\n\nApplicationStore->ApplicationDataModule\n\n\n\n\n\nAppModule\n\nAppModule\n\nAppModule -->\n\nApplicationDataModule->AppModule\n\n\n\n\n\nNgxTinynodesCoreModule\n\nNgxTinynodesCoreModule\n\nNgxTinynodesCoreModule -->\n\nApplicationDataModule->NgxTinynodesCoreModule\n\n\n\nNgxTinynodesCoreModule -->\n\nApplicationDataModule->NgxTinynodesCoreModule\n\n\n\n\n\nAppContainerComponent\n\nAppContainerComponent\n\nAppModule -->\n\nAppContainerComponent->AppModule\n\n\n\n\n\nHomePageComponent\n\nHomePageComponent\n\nAppModule -->\n\nHomePageComponent->AppModule\n\n\n\n\n\nNavBarComponent\n\nNavBarComponent\n\nAppModule -->\n\nNavBarComponent->AppModule\n\n\n\n\n\nSidebarComponent\n\nSidebarComponent\n\nAppModule -->\n\nSidebarComponent->AppModule\n\n\n\n\n\nAppContainerComponent \n\nAppContainerComponent \n\nAppContainerComponent  -->\n\nAppModule->AppContainerComponent \n\n\n\n\n\nAppRoutingModule\n\nAppRoutingModule\n\nAppModule -->\n\nAppRoutingModule->AppModule\n\n\n\n\n\nMaterialModule\n\nMaterialModule\n\nAppModule -->\n\nMaterialModule->AppModule\n\n\n\n\n\nNgxEditorjsDemoModule\n\nNgxEditorjsDemoModule\n\nNgxEditorjsDemoModule -->\n\nMaterialModule->NgxEditorjsDemoModule\n\n\n\n\n\nNgxEditorJSModule\n\nNgxEditorJSModule\n\nAppModule -->\n\nNgxEditorJSModule->AppModule\n\n\n\nNgxEditorjsDemoModule -->\n\nNgxEditorJSModule->NgxEditorjsDemoModule\n\n\n\n\n\nNgxEditorJSBaseComponent \n\nNgxEditorJSBaseComponent \n\nNgxEditorJSBaseComponent  -->\n\nNgxEditorJSModule->NgxEditorJSBaseComponent \n\n\n\n\n\nNgxEditorJSComponent \n\nNgxEditorJSComponent \n\nNgxEditorJSComponent  -->\n\nNgxEditorJSModule->NgxEditorJSComponent \n\n\n\n\n\nNgxEditorJSDirective \n\nNgxEditorJSDirective \n\nNgxEditorJSDirective  -->\n\nNgxEditorJSModule->NgxEditorJSDirective \n\n\n\n\n\nNgxEditorJSMatFieldComponent \n\nNgxEditorJSMatFieldComponent \n\nNgxEditorJSMatFieldComponent  -->\n\nNgxEditorJSModule->NgxEditorJSMatFieldComponent \n\n\n\n\n\nNgxEditorjsNgrxModule\n\nNgxEditorjsNgrxModule\n\nNgxEditorjsNgrxModule -->\n\nNgxEditorJSModule->NgxEditorjsNgrxModule\n\n\n\nAppModule -->\n\nNgxEditorjsDemoModule->AppModule\n\n\n\n\n\nFormContainerComponent \n\nFormContainerComponent \n\nFormContainerComponent  -->\n\nNgxEditorjsDemoModule->FormContainerComponent \n\n\n\n\n\nPageContainerComponent \n\nPageContainerComponent \n\nPageContainerComponent  -->\n\nNgxEditorjsDemoModule->PageContainerComponent \n\n\n\n\n\nPageStoreModule \n\nPageStoreModule \n\nPageStoreModule  -->\n\nNgxEditorjsDemoModule->PageStoreModule \n\n\n\nAppModule -->\n\nNgxTinynodesCoreModule->AppModule\n\n\n\nNgxEditorjsDemoModule -->\n\nNgxTinynodesCoreModule->NgxEditorjsDemoModule\n\n\n\n\n\nApplicationDataModule \n\nApplicationDataModule \n\nApplicationDataModule  -->\n\nNgxTinynodesCoreModule->ApplicationDataModule \n\n\n\nApplicationDataModule  -->\n\nNgxTinynodesCoreModule->ApplicationDataModule \n\n\n\n\n\nNgxEditorJSDemoInfoComponent \n\nNgxEditorJSDemoInfoComponent \n\nNgxEditorJSDemoInfoComponent  -->\n\nNgxTinynodesCoreModule->NgxEditorJSDemoInfoComponent \n\n\n\n\n\nNgxTinynodesCoreMaterialModule \n\nNgxTinynodesCoreMaterialModule \n\nNgxTinynodesCoreMaterialModule  -->\n\nNgxTinynodesCoreModule->NgxTinynodesCoreMaterialModule \n\n\n\n\n\nFormContainerComponent\n\nFormContainerComponent\n\nNgxEditorjsDemoModule -->\n\nFormContainerComponent->NgxEditorjsDemoModule\n\n\n\n\n\nNgxEditorJSDemoHomeComponent\n\nNgxEditorJSDemoHomeComponent\n\nNgxEditorjsDemoModule -->\n\nNgxEditorJSDemoHomeComponent->NgxEditorjsDemoModule\n\n\n\n\n\nNgxEditorJSDemoTagComponent\n\nNgxEditorJSDemoTagComponent\n\nNgxEditorjsDemoModule -->\n\nNgxEditorJSDemoTagComponent->NgxEditorjsDemoModule\n\n\n\n\n\nPageContainerComponent\n\nPageContainerComponent\n\nNgxEditorjsDemoModule -->\n\nPageContainerComponent->NgxEditorjsDemoModule\n\n\n\n\n\nPageStoreModule\n\nPageStoreModule\n\nNgxEditorjsDemoModule -->\n\nPageStoreModule->NgxEditorjsDemoModule\n\n\n\n\n\nPluginCodeModule\n\nPluginCodeModule\n\nNgxEditorjsDemoModule -->\n\nPluginCodeModule->NgxEditorjsDemoModule\n\n\n\n\n\nNgxEditorjsPluginsModule\n\nNgxEditorjsPluginsModule\n\nNgxEditorjsPluginsModule -->\n\nPluginCodeModule->NgxEditorjsPluginsModule\n\n\n\n\n\nPluginHeaderModule\n\nPluginHeaderModule\n\nNgxEditorjsDemoModule -->\n\nPluginHeaderModule->NgxEditorjsDemoModule\n\n\n\nNgxEditorjsPluginsModule -->\n\nPluginHeaderModule->NgxEditorjsPluginsModule\n\n\n\n\n\nPluginLinkModule\n\nPluginLinkModule\n\nNgxEditorjsDemoModule -->\n\nPluginLinkModule->NgxEditorjsDemoModule\n\n\n\nNgxEditorjsPluginsModule -->\n\nPluginLinkModule->NgxEditorjsPluginsModule\n\n\n\n\n\nPluginListModule\n\nPluginListModule\n\nNgxEditorjsDemoModule -->\n\nPluginListModule->NgxEditorjsDemoModule\n\n\n\nNgxEditorjsPluginsModule -->\n\nPluginListModule->NgxEditorjsPluginsModule\n\n\n\n\n\nPluginMarkerModule\n\nPluginMarkerModule\n\nNgxEditorjsDemoModule -->\n\nPluginMarkerModule->NgxEditorjsDemoModule\n\n\n\nNgxEditorjsPluginsModule -->\n\nPluginMarkerModule->NgxEditorjsPluginsModule\n\n\n\n\n\nPluginParagraphModule\n\nPluginParagraphModule\n\nNgxEditorjsDemoModule -->\n\nPluginParagraphModule->NgxEditorjsDemoModule\n\n\n\nNgxEditorjsPluginsModule -->\n\nPluginParagraphModule->NgxEditorjsPluginsModule\n\n\n\n\n\nPluginSimpleImageModule\n\nPluginSimpleImageModule\n\nNgxEditorjsDemoModule -->\n\nPluginSimpleImageModule->NgxEditorjsDemoModule\n\n\n\nNgxEditorjsPluginsModule -->\n\nPluginSimpleImageModule->NgxEditorjsPluginsModule\n\n\n\n\n\nNgxEditorJSBaseComponent\n\nNgxEditorJSBaseComponent\n\nNgxEditorJSModule -->\n\nNgxEditorJSBaseComponent->NgxEditorJSModule\n\n\n\n\n\nNgxEditorJSComponent\n\nNgxEditorJSComponent\n\nNgxEditorJSModule -->\n\nNgxEditorJSComponent->NgxEditorJSModule\n\n\n\n\n\nNgxEditorJSDirective\n\nNgxEditorJSDirective\n\nNgxEditorJSModule -->\n\nNgxEditorJSDirective->NgxEditorJSModule\n\n\n\n\n\nNgxEditorJSMatFieldComponent\n\nNgxEditorJSMatFieldComponent\n\nNgxEditorJSModule -->\n\nNgxEditorJSMatFieldComponent->NgxEditorJSModule\n\n\n\n\n\nNgxEditorJSInstanceService\n\nNgxEditorJSInstanceService\n\nNgxEditorJSModule -->\n\nNgxEditorJSInstanceService->NgxEditorJSModule\n\n\n\n\n\nNgxEditorJSPluginService\n\nNgxEditorJSPluginService\n\nNgxEditorJSModule -->\n\nNgxEditorJSPluginService->NgxEditorJSModule\n\n\n\n\n\nNgxEditorJSService\n\nNgxEditorJSService\n\nNgxEditorJSModule -->\n\nNgxEditorJSService->NgxEditorJSModule\n\n\n\n\n\nPluginImageModule\n\nPluginImageModule\n\nNgxEditorjsPluginsModule -->\n\nPluginImageModule->NgxEditorjsPluginsModule\n\n\n\n\n\nPluginCodeModule \n\nPluginCodeModule \n\nPluginCodeModule  -->\n\nNgxEditorjsPluginsModule->PluginCodeModule \n\n\n\n\n\nPluginHeaderModule \n\nPluginHeaderModule \n\nPluginHeaderModule  -->\n\nNgxEditorjsPluginsModule->PluginHeaderModule \n\n\n\n\n\nPluginImageModule \n\nPluginImageModule \n\nPluginImageModule  -->\n\nNgxEditorjsPluginsModule->PluginImageModule \n\n\n\n\n\nPluginLinkModule \n\nPluginLinkModule \n\nPluginLinkModule  -->\n\nNgxEditorjsPluginsModule->PluginLinkModule \n\n\n\n\n\nPluginListModule \n\nPluginListModule \n\nPluginListModule  -->\n\nNgxEditorjsPluginsModule->PluginListModule \n\n\n\n\n\nPluginMarkerModule \n\nPluginMarkerModule \n\nPluginMarkerModule  -->\n\nNgxEditorjsPluginsModule->PluginMarkerModule \n\n\n\n\n\nPluginParagraphModule \n\nPluginParagraphModule \n\nPluginParagraphModule  -->\n\nNgxEditorjsPluginsModule->PluginParagraphModule \n\n\n\n\n\nPluginSimpleImageModule \n\nPluginSimpleImageModule \n\nPluginSimpleImageModule  -->\n\nNgxEditorjsPluginsModule->PluginSimpleImageModule \n\n\n\n\n\nNgxEditorJSDemoInfoComponent\n\nNgxEditorJSDemoInfoComponent\n\nNgxTinynodesCoreModule -->\n\nNgxEditorJSDemoInfoComponent->NgxTinynodesCoreModule\n\n\n\n\n\nNgxTinynodesCoreMaterialModule\n\nNgxTinynodesCoreMaterialModule\n\nNgxTinynodesCoreModule -->\n\nNgxTinynodesCoreMaterialModule->NgxTinynodesCoreModule\n\n\n\n\n\nPagesQuery\n\nPagesQuery\n\nPageStoreModule -->\n\nPagesQuery->PageStoreModule\n\n\n\n\n\nPagesService\n\nPagesService\n\nPageStoreModule -->\n\nPagesService->PageStoreModule\n\n\n\n\n\nPagesStore\n\nPagesStore\n\nPageStoreModule -->\n\nPagesStore->PageStoreModule\n\n\n\n\n\nPluginCode\n\nPluginCode\n\nPluginCodeModule -->\n\nPluginCode->PluginCodeModule\n\n\n\n\n\nPluginHeader\n\nPluginHeader\n\nPluginHeaderModule -->\n\nPluginHeader->PluginHeaderModule\n\n\n\n\n\nPluginImage\n\nPluginImage\n\nPluginImageModule -->\n\nPluginImage->PluginImageModule\n\n\n\n\n\nPluginLink\n\nPluginLink\n\nPluginLinkModule -->\n\nPluginLink->PluginLinkModule\n\n\n\n\n\nPluginList\n\nPluginList\n\nPluginListModule -->\n\nPluginList->PluginListModule\n\n\n\n\n\nPluginMarker\n\nPluginMarker\n\nPluginMarkerModule -->\n\nPluginMarker->PluginMarkerModule\n\n\n\n\n\nPluginParagraph\n\nPluginParagraph\n\nPluginParagraphModule -->\n\nPluginParagraph->PluginParagraphModule\n\n\n\n\n\nPluginSimpleImage\n\nPluginSimpleImage\n\nPluginSimpleImageModule -->\n\nPluginSimpleImage->PluginSimpleImageModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n  \n\n    \n        \n            \n                \n                    \n                    \n                        22 Modules\n                    \n                \n            \n        \n        \n            \n                \n                    \n                    12 Components\n                \n            \n        \n        \n            \n                \n                    \n                    1 Directive\n                \n            \n        \n        \n            \n                \n                    \n                    22 Injectables\n                \n            \n        \n        \n            \n                \n                    \n                    8 Classes\n                \n            \n        \n        \n            \n                \n                    \n                    48 Interfaces\n                \n            \n        \n    \n\n\n \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"todo.html":{"url":"todo.html","title":"getting-started - todo","body":"\n                   \n\nngx-tinynodes Todo\nGeneral Todos\n\n Add CI pipeline for publishing modules\n Publish doc changes and tags back to repo\n\nngx-editorjs\n\n Add full EditorJS config support\n Add config options as @Input on component and directive\n Add autosave option support to module config\n Expose EditorJS CoreAPI via service helpers (e.g. blocks, selection, etc)\n Provide peer-dependency ngrx/effects via library to control service\n\nngx-editorjs-demo\n\n Add store for page\n Add controls for setting editor\n Add Save feature\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/typealiases.html":{"url":"miscellaneous/typealiases.html","title":"miscellaneous-typealiases - typealiases","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous\n  Type aliases\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            BlockTypes   (libs/.../blocks.ts)\n                        \n                        \n                            ListStyle   (libs/.../blocks.ts)\n                        \n                        \n                            NgxEditorJSActions   (libs/.../ngx-editorjs.actions.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    libs/ngx-editorjs/src/lib/types/blocks.ts\n    \n    \n        \n            \n                \n                    \n                    BlockTypes\n                \n            \n            \n                \n                    Type of all the basic block type\n\n                \n            \n            \n                \n                        ParagraphBlock | HeaderBlock | ImageBlock | ListBlock | Block\n\n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    ListStyle\n                \n            \n            \n                \n                    Available list styles, supports ordered and unordered.\nA custom string can also be added\n\n                \n            \n            \n                \n                        \"ordered\" | \"unordered\" | string\n\n                \n            \n        \n    \n    libs/ngx-editorjs-ngrx/src/lib/actions/ngx-editorjs.actions.ts\n    \n    \n        \n            \n                \n                    \n                    NgxEditorJSActions\n                \n            \n            \n                \n                        SaveStart | SaveEnd | NotReady | Ready | Changed\n\n                \n            \n        \n    \n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/variables.html":{"url":"miscellaneous/variables.html","title":"miscellaneous-variables - variables","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous\n  Variables\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            appRoutes   (apps/.../app-routing.module.ts)\n                        \n                        \n                            DEFAULT_HOLDER_ID   (libs/.../editor-config.ts)\n                        \n                        \n                            EDITIOR_JS_INSTANCE   (libs/.../config.ts)\n                        \n                        \n                            EDITORJS_FORM_VALUE_ACCESSOR   (libs/.../container.class.ts)\n                        \n                        \n                            EDITORJS_MATERIAL_FIELD_CONTROL   (libs/.../editorjs-mat-field.component.ts)\n                        \n                        \n                            EDITORJS_MODULE_IMPORT   (libs/.../injector.ts)\n                        \n                        \n                            EditorJSInstance   (libs/.../injector.ts)\n                        \n                        \n                            environment   (apps/.../environment.prod.ts)\n                        \n                        \n                            environment   (apps/.../environment.ts)\n                        \n                        \n                            FOR_ROOT_OPTIONS_TOKEN   (libs/.../config.ts)\n                        \n                        \n                            getGreeting   (apps/.../app.po.ts)\n                        \n                        \n                            InitialPlugins   (libs/.../plugins.ts)\n                        \n                        \n                            InitialPlugins   (libs/.../plugins.ts)\n                        \n                        \n                            MAP_DEFAULTS   (libs/.../injector.ts)\n                        \n                        \n                            NGX_EDITORJS_CONFIG   (libs/.../config.ts)\n                        \n                        \n                            ngxEditorjsDemoRoutes   (libs/.../ngx-editorjs-demo.routes.ts)\n                        \n                        \n                            ngxHideableHeaderDemoRoutes   (libs/.../ngx-hideable-header-demo.module.ts)\n                        \n                        \n                            TAG_COMPONENT_FIELD_CONTROL   (libs/.../tag.component.ts)\n                        \n                        \n                            TAG_COMPONENT_VALUE_ACCESSOR   (libs/.../tag.component.ts)\n                        \n                        \n                            UserPlugins   (libs/.../plugins.ts)\n                        \n                        \n                            UserPlugins   (libs/.../plugins.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    apps/ngx-tinynodes/src/app/app-routing.module.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            appRoutes\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     Route[]\n\n                        \n                    \n                    \n                        \n                            Default value : [\n  {\n    path: '',\n    redirectTo: 'home',\n    pathMatch: 'full'\n  },\n  {\n    path: 'home',\n    component: HomePageComponent\n  }\n]\n                        \n                    \n\n                \n                    \n                        The main application routes\n\n                    \n                \n\n            \n        \n\n    libs/ngx-editorjs/src/lib/config/editor-config.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            DEFAULT_HOLDER_ID\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Default value : 'editor-js'\n                        \n                    \n\n                \n                    \n                        The default holder ID to attach EditorJS to\n\n                    \n                \n\n            \n        \n\n    libs/ngx-editorjs/src/lib/types/config.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            EDITIOR_JS_INSTANCE\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : new InjectionToken('EDITIOR_JS_INSTANCE')\n                        \n                    \n\n                \n                    \n                        Get the EditorJS instance injected into the app\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            FOR_ROOT_OPTIONS_TOKEN\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : new InjectionToken('FOR_ROOT_OPTIONS_TOKEN')\n                        \n                    \n\n                \n                    \n                        Internal token for injecting the NgxEditorJSConfig into the config factory\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            NGX_EDITORJS_CONFIG\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : new InjectionToken('NGX_EDITORJS_CONFIG')\n                        \n                    \n\n                \n                    \n                        Injection token provied for NgxEditorJSConfig\n\n                    \n                \n\n            \n        \n\n    libs/ngx-editorjs/src/lib/containers/base/container.class.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            EDITORJS_FORM_VALUE_ACCESSOR\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Provider\n\n                        \n                    \n                    \n                        \n                            Default value : {\n  provide: NG_VALUE_ACCESSOR,\n  useExisting: forwardRef(() => NgxEditorJSBaseComponent),\n  multi: true\n}\n                        \n                    \n\n                \n                    \n                        This provides the Control Value Accessor for the form component\n\n                    \n                \n\n            \n        \n\n    libs/ngx-editorjs/src/lib/containers/editorjs-mat-field/editorjs-mat-field.component.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            EDITORJS_MATERIAL_FIELD_CONTROL\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Provider\n\n                        \n                    \n                    \n                        \n                            Default value : {\n  provide: MatFormFieldControl,\n  useExisting: forwardRef(() => NgxEditorJSMatFieldComponent),\n  multi: true\n}\n                        \n                    \n\n                \n                    \n                        Provider for the EditorJS Material Field Component\n\n                    \n                \n\n            \n        \n\n    libs/ngx-editorjs/src/lib/types/injector.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            EDITORJS_MODULE_IMPORT\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : new InjectionToken('EDITORJS_MODULE_IMPORT')\n                        \n                    \n\n                \n                    \n                        Injection token for the EditorJS class\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            EditorJSInstance\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : new InjectionToken('EditorJSInstance')\n                        \n                    \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            MAP_DEFAULTS\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     []\n\n                        \n                    \n                    \n                        \n                            Default value : [['blocksMap', []], ['changeMap', 0], ['readyMap', false]]\n                        \n                    \n\n                \n                    \n                        Default values for each internal map\n\n                    \n                \n\n            \n        \n\n    apps/ngx-tinynodes/src/environments/environment.prod.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            environment\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         object\n\n                        \n                    \n                    \n                        \n                            Default value : {\n  production: true\n}\n                        \n                    \n\n\n            \n        \n\n    apps/ngx-tinynodes/src/environments/environment.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            environment\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         object\n\n                        \n                    \n                    \n                        \n                            Default value : {\n  production: false\n}\n                        \n                    \n\n\n            \n        \n\n    apps/ngx-tinynodes-e2e/src/support/app.po.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            getGreeting\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : () => cy.get('h1')\n                        \n                    \n\n\n            \n        \n\n    libs/ngx-editorjs/src/lib/types/plugins.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            InitialPlugins\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : new InjectionToken('InitialPlugins')\n                        \n                    \n\n                \n                    \n                        The Injection token for initial plugins as defined in the ngx-editorjs module\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            UserPlugins\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : new InjectionToken('UserPlugins')\n                        \n                    \n\n                \n                    \n                        The injection token for adding plugins via your own application\n\n                    \n                \n\n            \n        \n\n    libs/ngx-editorjs-plugins/src/lib/types/plugins.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            InitialPlugins\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : new InjectionToken('InitialPlugins')\n                        \n                    \n\n                \n                    \n                        The Injection token for initial plugins as defined in the ngx-editorjs module\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            UserPlugins\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : new InjectionToken('UserPlugins')\n                        \n                    \n\n                \n                    \n                        The injection token for adding plugins via your own application\n\n                    \n                \n\n            \n        \n\n    libs/ngx-editorjs-demo/src/lib/ngx-editorjs-demo.routes.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            ngxEditorjsDemoRoutes\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     Route[]\n\n                        \n                    \n                    \n                        \n                            Default value : [\n  {\n    path: 'ngx-editorjs-demo',\n    component: NgxEditorJSDemoHomeComponent\n  },\n  {\n    path: 'ngx-editorjs-demo/angular-component',\n    component: PageContainerComponent\n  },\n  {\n    path: 'ngx-editorjs-demo/angular-form',\n    component: FormContainerComponent\n  }\n]\n                        \n                    \n\n\n            \n        \n\n    libs/ngx-hideable-header-demo/src/lib/ngx-hideable-header-demo.module.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            ngxHideableHeaderDemoRoutes\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     Route[]\n\n                        \n                    \n                    \n                        \n                            Default value : []\n                        \n                    \n\n\n            \n        \n\n    libs/ngx-editorjs-demo/src/lib/components/tag-component/tag.component.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            TAG_COMPONENT_FIELD_CONTROL\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Provider\n\n                        \n                    \n                    \n                        \n                            Default value : {\n  provide: MatFormFieldControl,\n  useExisting: forwardRef(() => NgxEditorJSDemoTagComponent),\n  multi: true\n}\n                        \n                    \n\n                \n                    \n                        Provider for Material field support\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            TAG_COMPONENT_VALUE_ACCESSOR\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Provider\n\n                        \n                    \n                    \n                        \n                            Default value : {\n  provide: NG_VALUE_ACCESSOR,\n  useExisting: forwardRef(() => NgxEditorJSDemoTagComponent),\n  multi: true\n}\n                        \n                    \n\n\n            \n        \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"additional-documentation/tinynodes-library-docs.html":{"url":"additional-documentation/tinynodes-library-docs.html","title":"additional-page - Tinynodes Library Docs","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nNgx-Tinynodes Libraries\nHere you can find all the README and CHANGELOG details of all projects released to NPM\n\nPlease note due to a bug in CompoDoc the `README.md` files are currently not generated correctly - these are rendered correctly on GitHub and NPM.\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"additional-documentation/tinynodes-library-docs/ngx-editorjs-readme.html":{"url":"additional-documentation/tinynodes-library-docs/ngx-editorjs-readme.html","title":"additional-page - ngx-editorjs Readme","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nNgx-EditorJS\nThis library provides Angular support for EditorJS. Inside the module you will find:\n\nNgxEditorJSDirective - An Angular Directive used to attach an EditorJS instance to any block DOM element\nNgxEditorJSComponent - An out-of-the-box Angular component that is Reactive Forms compatible\nNgxEditorJSMaterialFieldComponent An Angular Material Form Field component that provides all the required properties and life-cycle events required. See the Form Demo on an example usage\nNgxEditorJSBaseComponent - A base Angular component that is Reactive form compatible but with no template, can be used to create custom UI framework containers\nNgxEditorJSService - A Service that can be injected into an application to provide a interface to interact with EditorJS instances. Underneath are the private NgxEditorJSPluginService and NgxEditorJSInstanceService services. These are private but can be imported via ɵNgxEditorJSPluginService and ɵNgxEditorJSInstanceService from the library if you want to use them.\n\nWithin these components you will be able to access the underlying EditorJS instance, for use see the EditorJS API Docs\nYou can see a demo in action or download it\non GitHub to see how it was implemented.\nFor changes see the CHANGELOG\nInstalling and usage\nInstall the library via npm along with the plugins module and EditorJS module. For each plugin you want to use you also need to install it's dependency - see the Plugin Docs for more information.\n```bash\n\nnpm install @tinynodes/ngx-editorjs @tinynodes/ngx-editorjs-plugins @editorjs/editorjs @editorjs/paragraph....\n```\n\nOnce installed, include the NgxEditorJSModule module in your project with the forRoot method. The forRoot takes an optional configuration.\nYou also need to pass a provider for UserPlugins with a factory function that returns an options map tools to provide to the EditorJS instance. An example of this is shows in the demo application\n```typescript\nimport { NgModule } from '@angular/core';\nimport { BrowserModule } from '@angular/platform-browser';\nimport { NgxEditorJSModule } from '@tinynodes/ngx-editorjs';\nimport { AppComponent } from './app.component';\nimport EditorJS from '@editorjs/editorjs';\nimport {\n  PluginParagraphModule,\n  PluginParagraph,\n  PluginHeaderModule,\n  PluginHeader,\n  PluginListModule,\n  PluginList\n} from '@tinynodes/ngx-editorjs-plugins';\nexport function createTools() {\n  return {\n    paragraph: new PluginParagraph(),\n    header: new PluginHeader(),\n    list: new PluginList()\n  };\n}\n@NgModule({\n  declarations: [AppComponent],\n  imports: [\n    BrowserModule,\n    NgxEditorJSModule.forRoot({\n      editorjs: {\n        autofocus: false,\n        holder: 'editor',\n        initialBlock: 'paragraph',\n        data: {\n          time: Date.now(),\n          version: EditorJS.version,\n          blocks: []\n        }\n      }\n    })\n  ],\n  providers: [\n    {\n      provide: UserPlugins,\n      useFactory: createTools\n    }\n  ],\n  bootstrap: [AppComponent]\n})\nexport class AppModule {}\n```\nConfiguration\nEditorJS Config\nThe configuration is deigned to be extendable in the future, so each potential feature has a key. For configuring EditorJS pass the options below into a editorjs key in the config.\nThe module configuration allows EditorJS to be provided with a set of options for use. See the EditorJS docs for more details.\n| Configuration Key  | Description                                                                                                                                                     |\n| ------------------ | --------------------------------------------------------------------------------------------------------------------------------------------------------------- |\n| autofocus        | Sets the EditorJS instance to autofocus on load                                                                                                                 |\n| autosave         | Value of time for the the autosave of EditorJS content to the service when the component when focused, this is used for Reactive forms. Default is 0 to disable |\n| data             | Initial data to load into the editor, this is an OutputData object from EditorJS                                                                              |\n| hideToolbar      | Hides the toolbar by default                                                                                                                                    |\n| holder           | The element ID of the holder, this will set all instances in this module to use this as a default                                                               |\n| initialBlock     | The default block type to use in the editor                                                                                                                     |\n| minHeight        | Height of Editor's bottom area that allows to set focus on the last Block                                                                                       |\n| blockPlaceholder | Placeholder of the first block                                                                                                                                  |\n| sanitizer        | Content sanitizer configurations                                                                                                                                |\nAdding custom tools\nSee Adding Custom Tools\nLinks\n\nDocumentation\nGitHub\nNPM\nAngular Demo\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"additional-documentation/tinynodes-library-docs/ngx-editorjs-readme/ngx-editorjs-changelog.html":{"url":"additional-documentation/tinynodes-library-docs/ngx-editorjs-readme/ngx-editorjs-changelog.html","title":"additional-page - ngx-editorjs Changelog","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nChangelog\nAll notable changes to this project will be documented in this file.\nThe format is based on Keep a Changelog,\nand this project adheres to Semantic Versioning.\n[1.4.0] - 2019-05-22\nAdded\n\nNgxEditorJSComponent can be used in Angular Forms via it's ControlValueAccessor\nEditorJSBaseComponent exported and can be used to create custom components\nNgxEditorJSMatFieldComponent provided as a Material field component.\nautosave support now added to both components\n\nChanged\n\nplaceholder property of EditorJS config is now blockPlaceholder so it does not clash with the Material property\nEditorJS instance service refactored, available as a private import\nAll public methods now take a InjectorMethodOption object as it's parameter\n\n[1.3.2] - 2019-05-15\nChanged\n\nFixed bug with passing data to EditorJS instance service.\nRemoved rogue console.log\n\n[1.3.0] - 2019-05-15\nAdded\n\n@Input properties on the component and directive for providing EditorJS instance configuration\ncreateEditorJSConfig function available to generate EditorJS configurations\nLots more doc improvements and updated demo\n\nChanged\n\nInternal service now uses an EditorJS injector module and service, provides more robust control and creation of EditorJS instances and controlling them.\n\n[1.2.0] - 2019-05-13\nAdded\n\nAdded all configuration options for EditorJS to the module configuration\n\nChanged\n\nRemoved all plugins from the ngx-editorjs project. All plugins are now provided by the @tinynodes/ngx-editorjs-plugins module and a default set of tools must be provided in an application.\nAdded NgxEditorJSPluginService back to core, all plugins must now be provided with a UserPlugin provider.\n\n[1.1.2] - 2019-05-11\nAdded\n\nImproved internal documentation for generated docs.\n\nRemoved\n\nGenerated docs no longer included in this module - all docs are now available via the generated docs site\n\n[1.1.1] - 2019-05-10\nAdded\n\nGenerated docs via CompoDoc in npm package\nInclude CHANGELOG.md in npm package\n\n[1.1.0] - 2019-05-10\nAdded\n\nEditorJS default paragraph plugin is now included in the default tools, fixes issue where the regenerated component failed to use the default plugin.\n\nChanged\n\nNgxEditorJSService is now provided in the root and now stores multiple editor instances. Getters removed and replaced with methods that take the holder parameter which is the ID of the DOM element the editor should be attached to.\nPlugins are now instances of an Injectable class for AOT and have an instance method of plugin. Also supports shortcut as an optional method that returns the string to set up as the shortcut.\nEditorJSPlugin now renamed BasePlugin and changed from class to interface.\nImproved documentation\n\n[1.0.0] - 2019-05-10\nAdded\n\nInitial release\nReadme, Changelog\nNgxEditorJSModule: That can be imported into the root of a project\nNgxEditorJSDirective: A directive that can attach an EditorJS instance to an element\nNgxEditorJSComponent: A component that is pre-configured to use the directive in any Angular project\nNgxEditorJSService: An Angular service for controlling an EditorJS instance\nDefault plugins for Header and List plugins, documentation on how to add plugins with AOT support\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"additional-documentation/tinynodes-library-docs/ngx-editorjs-plugins-readme.html":{"url":"additional-documentation/tinynodes-library-docs/ngx-editorjs-plugins-readme.html","title":"additional-page - ngx-editorjs-plugins Readme","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nNgx-EditorJS Plugins\nThis module provides a default set of EditorJS plugins for @tinynodes/ngx-editorjs via Angular modules.\nPeer Dependencies\nAll EditorJS plugins are listed as peerDependencies of the project - this is because Angular requires these modules to be in the root. You must manually install these are the root of your Angular application.\n```bash\n\nnpm install @editorjs/paragraph @editorjs/header ....\n```\n\nPlugin List\n| Plugin Name             | Description                                            | Links                                                                                               |\n| ----------------------- | ------------------------------------------------------ | --------------------------------------------------------------------------------------------------- |\n| PluginCodeModule        | Provides a  block editor                       | README GitHub              |\n| PluginHeaderModule      | Provides a  -  block editor                  | README GitHub          |\n| PluginImageModule       | Provides an  block editor + file upload support | README GitHub            |\n| PluginLinkModule        | Provides an  block editor                         | README GitHub              |\n| PluginIListModule       | Provides an / block editor                   | README GitHub              |\n| PluginMarkerModule      | Provides inline text marking                           | README GitHub          |\n| PluginParagraphModule   | Provides an  block editor                         | README GitHub    |\n| PluginSimpleImageModule | Provides an  block editor with paste support    | README GitHub |\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"additional-documentation/tinynodes-library-docs/ngx-editorjs-plugins-readme/ngx-editorjs-plugins-changelog.html":{"url":"additional-documentation/tinynodes-library-docs/ngx-editorjs-plugins-readme/ngx-editorjs-plugins-changelog.html","title":"additional-page - ngx-editorjs-plugins Changelog","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nChangelog\nAll notable changes to this project will be documented in this file.\nThe format is based on Keep a Changelog,\nand this project adheres to Semantic Versioning.\n[1.1.1] - 2019-05-15\nChanged\n\nDocumentation updates\n\n[1.1.0] - 2019-05-13\nRemoved\n\nRemoved the NgxEditorJSPluginService from this module back to core\n\n[1.0.0] - 2019-05-11\nAdded\n\nInitial release of module with default plugins - see README.md for details.\nMoved the internal PluginService to public NgxEditorJSPluginService provided by this module\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"routes.html":{"url":"routes.html","title":"routes - routes","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    Routes\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"}}
}
