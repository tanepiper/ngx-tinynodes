var COMPODOC_SEARCH_INDEX = {
    "index": {"version":"2.3.6","fields":["title","body"],"fieldVectors":[["title/components/AppComponent.html",[0,1.692,1,2.197]],["body/components/AppComponent.html",[0,2.812,1,3.048,2,2.504,3,0.168,4,0.168,5,1.954,6,1.264,7,1.848,8,1.954,9,0.119,10,2.812,11,5.297,12,2.662,13,0.451,14,3.109,15,1.827,16,1.707,17,4.136,18,3.992,19,1.765,20,4.772,21,4.802,22,1.848,23,4.505,24,2.931,25,2.924,26,5.451,27,2.924,28,4.549,29,0.451,30,1.248,31,6.17,32,3.331,33,3.504,34,1.002,35,2.412,36,3.494,37,0.98,38,3.04,39,1.035,40,0.012,41,1.764,42,0.844,43,0.599,44,3.109,45,0.676,46,2.035,47,2.504,48,3.983,49,3.04,50,1.855,51,3.983,52,4.772,53,2.226,54,3.983,55,3.04,56,4.549,57,3.504,58,0.543,59,2.924,60,2.412,61,0.422,62,2.078,63,3.61,64,1.413,65,2.412,66,2.662,67,2.226,68,0.158,69,0.302,70,0.972,71,4.549,72,1.673,73,1.892,74,1.141,75,1.755,76,2.662,77,2.662,78,2.662,79,2.662,80,2.662,81,2.412,82,2.662,83,2.662,84,2.292,85,1.53,86,2.267,87,6.05,88,2.662,89,3.148,90,2.078,91,3.726,92,3.04,93,2.114,94,2.662,95,3.983,96,3.983,97,2.662,98,2.662,99,2.662,100,2.662,101,2.662,102,1.532,103,1.18,104,1.532,105,3.983,106,4.431,107,4.772,108,2.662,109,2.662,110,2.662,111,3.983,112,2.924,113,0.72,114,3.983,115,2.662,116,2.412,117,2.662,118,3.61,119,2.662,120,2.662,121,2.662,122,2.662,123,2.226,124,2.662,125,2.662,126,1.035,127,2.924,128,2.292,129,1.36,130,3.889,131,1.954,132,1.954,133,1.532,134,1.954,135,1.599,136,1.954,137,1.954,138,1.47,139,1.954,140,1.532,141,1.954,142,1.599,143,1.848,144,1.413,145,1.755,146,1.954,147,0.004,148,0.006,149,0.004]],["title/modules/AppModule.html",[150,0.647,151,2.98]],["body/modules/AppModule.html",[1,4.031,3,0.196,4,0.196,9,0.139,10,1.648,13,0.526,14,3.481,15,2.615,24,2.118,40,0.012,50,1.733,58,0.694,61,0.492,68,0.184,69,0.353,84,2.566,85,1.408,126,1.207,135,3.777,142,3.777,147,0.005,148,0.007,149,0.005,150,0.884,151,5.709,152,1.207,153,1.33,154,2.393,155,2.393,156,1.424,157,1.33,158,3.105,159,3.105,160,3.105,161,3.105,162,4.908,163,4.908,164,3.796,165,4.908,166,2.118,167,1.475,168,1.424,169,3.546,170,5.092,171,3.73,172,4.459,173,5.092,174,4.459,175,3.096,176,5.092,177,5.092,178,3.546,179,2.045,180,5.092,181,3.105,182,3.105,183,4.459,184,4.041,185,2.597,186,5.092,187,3.546,188,3.105,189,2.424,190,3.546,191,2.566,192,3.105,193,3.105,194,1.952,195,3.546,196,3.105,197,2.118,198,0.183,199,3.105,200,2.814,201,2.597,202,3.546,203,3.546,204,3.546,205,3.546,206,2.814,207,3.546,208,3.546,209,3.546,210,3.546,211,3.546,212,3.546,213,3.546,214,3.546,215,2.424,216,3.546,217,3.546,218,3.546,219,3.546,220,3.546]],["title/injectables/AppService.html",[36,2.518,221,0.914]],["body/injectables/AppService.html",[3,0.279,4,0.279,9,0.197,10,3.504,29,0.747,34,1.662,36,3.736,37,1.285,39,1.715,40,0.012,41,1.469,42,0.935,43,0.994,58,0.632,61,0.699,64,2.343,68,0.262,69,0.501,70,2.284,72,2.774,73,2.691,75,2.91,147,0.007,148,0.009,149,0.007,194,3.933,221,1.356,222,1.956,223,4.413,224,2.068,225,6.601,226,4.159,227,5.522,228,4.413,229,4.846,230,4.583,231,5.04,232,5.134,233,5.04,234,1.83,235,2.91,236,5.04,237,5.04,238,4.413,239,4,240,4.159,241,1.611,242,5.04,243,5.04,244,5.04]],["title/modules/ApplicationDataModule.html",[150,0.647,162,2.98]],["body/modules/ApplicationDataModule.html",[3,0.296,4,0.296,9,0.209,10,2.484,36,4.678,40,0.012,58,0.646,61,0.741,68,0.278,69,0.531,126,1.819,147,0.007,148,0.009,149,0.007,150,0.793,152,1.819,153,2.006,154,2.146,155,2.146,156,2.949,157,2.006,162,5.775,166,2.793,167,2.223,168,2.146,179,2.697,229,5.207,230,4.925,238,4.68,239,4.242,245,4.68,246,4.68,247,5.345,248,5.345]],["title/injectables/ApplicationQuery.html",[221,0.914,229,2.803]],["body/injectables/ApplicationQuery.html",[3,0.312,4,0.312,9,0.221,10,3.227,34,1.859,37,1.014,39,1.919,40,0.012,41,1.643,42,1.046,43,1.112,58,0.658,61,0.782,68,0.293,69,0.561,147,0.008,148,0.009,149,0.008,191,2.841,194,3.821,221,1.455,222,2.188,229,4.463,230,4.773,232,5.97,239,4.474,249,4.936,250,2.788,251,4.936,252,5.638,253,3.624,254,4.936,255,4.936,256,4.936]],["title/interfaces/ApplicationState.html",[253,2.803,257,0.451]],["body/interfaces/ApplicationState.html",[3,0.321,4,0.321,9,0.227,10,2.694,29,0.86,30,1.937,40,0.011,42,1.309,58,0.486,68,0.367,123,4.245,147,0.008,148,0.009,149,0.008,189,3.962,227,5.805,253,4.539,257,0.731,258,1.639,259,4.6,260,6.29,261,3.058,262,5.805,263,6.182,264,1.178,265,4.245]],["title/injectables/ApplicationStore.html",[221,0.914,230,2.651]],["body/injectables/ApplicationStore.html",[3,0.301,4,0.301,9,0.213,10,3.44,15,2.184,29,0.807,34,2.441,37,1.221,40,0.012,41,1.585,58,0.621,61,0.754,68,0.283,69,0.541,147,0.007,148,0.009,149,0.007,191,2.741,194,4.074,221,1.423,222,2.111,224,2.17,227,4.973,230,4.128,234,1.975,235,3.141,250,2.727,253,3.496,254,4.762,266,4.762,267,7.752,268,5.439,269,5.439,270,5.388,271,4.317,272,3.307,273,5.439,274,5.439]],["title/interfaces/BasePlugin.html",[257,0.451,275,1.583]],["body/interfaces/BasePlugin.html",[3,0.225,4,0.225,9,0.159,13,0.603,15,1.633,29,0.603,30,1.539,37,0.731,40,0.012,42,1.04,43,1.545,58,0.47,61,0.564,68,0.378,69,0.404,74,2.104,85,0.961,147,0.005,148,0.008,149,0.005,150,0.832,198,0.231,224,2.212,241,1.793,257,0.751,258,1.15,264,1.305,275,2.512,276,0.311,277,2.78,278,3.605,279,3.239,280,2.474,281,3.41,282,3.948,283,4.73,284,2.983,285,3.41,286,2.238,287,2.768,288,4.127,289,1.083,290,1.967,291,1.967,292,2.212,293,2.614,294,1.819,295,1.89,296,2.139,297,2.614,298,1.3,299,3.087,300,2.95,301,1.753,302,2.252,303,2.826,304,2.238,305,2.473,306,2.349,307,1.753,308,2.049,309,2.473]],["title/interfaces/BasePlugin-1.html",[257,0.38,275,1.334,310,1.708]],["body/interfaces/BasePlugin-1.html",[3,0.225,4,0.225,9,0.159,13,0.602,15,1.63,29,0.602,30,1.537,37,0.73,40,0.012,42,1.039,43,1.544,58,0.469,61,0.563,68,0.377,69,0.403,74,2.101,85,0.959,147,0.005,148,0.008,149,0.005,150,0.831,198,0.249,224,2.21,241,1.79,257,0.751,258,1.148,264,1.303,275,2.51,276,0.31,278,3.6,279,3.234,280,2.473,281,3.405,282,3.946,283,4.725,284,2.981,285,3.405,286,2.233,287,2.765,288,4.122,289,1.081,290,1.962,291,1.962,292,2.21,293,2.609,294,1.815,295,1.886,296,2.135,297,2.609,298,1.297,299,3.082,300,2.946,301,1.75,302,2.249,303,2.822,304,2.233,305,2.467,306,2.343,307,1.75,308,2.045,309,2.467,311,2.774]],["title/interfaces/Block.html",[113,0.69,257,0.451]],["body/interfaces/Block.html",[3,0.169,4,0.169,6,1.273,9,0.12,13,0.454,29,0.454,30,1.666,37,0.55,40,0.012,42,1.573,43,1.197,45,1.446,68,0.386,93,2.821,102,2.303,103,2.817,104,2.303,113,1.327,147,0.004,148,0.006,149,0.004,198,0.261,250,2.438,257,0.82,258,0.865,261,2.197,264,1.559,276,0.349,280,0.892,292,1.461,310,1.422,312,1.542,313,3.06,314,2.932,315,1.684,316,3.06,317,1.971,318,3.575,319,1.273,320,1.542,321,2.404,322,2.404,323,1.542,324,1.422,325,2.404,326,1.319,327,2.21,328,2.702,329,2.21,330,3.045,331,2.404,332,1.61,333,1.319,334,2.21,335,2.906,336,2.516,337,2.516,338,1.61,339,2.878,340,1.684,341,1.684,342,1.684,343,1.684,344,1.684,345,2.21,346,1.61,347,1.61]],["title/interfaces/BlocksMap.html",[257,0.451,348,2.651]],["body/interfaces/BlocksMap.html",[3,0.272,4,0.272,9,0.192,13,0.73,37,0.884,40,0.012,58,0.592,64,2.287,68,0.389,113,1.119,147,0.007,148,0.009,149,0.007,198,0.29,257,0.773,258,1.391,261,1.976,264,1.573,276,0.487,289,1.31,292,2.473,294,3.462,315,2.708,333,2.121,348,3.873,349,3.363,350,5.289,351,5.649,352,4.354,353,4.919,354,2.121,355,2.708,356,2.991,357,3.363,358,2.201,359,3.363,360,2.991,361,3.363,362,2.841,363,2.991,364,2.991]],["title/interfaces/ChangeMap.html",[257,0.451,364,2.651]],["body/interfaces/ChangeMap.html",[3,0.271,4,0.271,9,0.191,13,0.726,37,0.88,40,0.012,58,0.591,64,2.274,68,0.388,113,1.005,147,0.007,148,0.009,149,0.007,198,0.29,257,0.772,258,1.384,261,1.965,264,1.57,276,0.485,289,1.303,292,2.469,294,3.456,315,2.693,333,2.737,348,2.975,349,3.345,350,5.28,351,5.643,352,3.345,354,2.11,355,2.693,356,2.975,357,3.345,358,2.189,359,3.345,360,2.975,361,4.339,362,3.666,363,3.859,364,3.859,365,4.894]],["title/classes/Changed.html",[69,0.434,366,2.294]],["body/classes/Changed.html",[3,0.214,4,0.214,9,0.151,19,2.868,29,0.574,30,1.487,34,1.277,37,1.124,39,1.318,40,0.012,41,1.129,42,1.519,43,0.763,45,0.862,46,1.732,58,0.454,68,0.395,69,0.709,70,1.732,73,3.156,85,1.685,147,0.005,148,0.007,149,0.005,198,0.283,264,1.45,276,0.518,289,1.031,314,2.103,358,3.19,366,3.751,367,2.489,368,3.912,369,2.236,370,4.176,371,5.292,372,2.646,373,4.274,374,5.42,375,3.872,376,3.705,377,2.489,378,3.442,379,2.646,380,2.354,381,3.289,382,3.484,383,2.036,384,3.289,385,2.354,386,3.442,387,2.646,388,4.335,389,3.19,390,2.646,391,2.646,392,2.646,393,2.489]],["title/interfaces/EditorJSConfig.html",[257,0.451,394,2.98]],["body/interfaces/EditorJSConfig.html",[3,0.193,4,0.193,9,0.137,13,0.518,29,0.518,30,1.382,40,0.012,41,1.468,42,1.398,43,1.62,45,1.59,58,0.422,61,0.484,68,0.307,74,1.31,89,2.909,113,1.131,128,2.538,147,0.005,148,0.007,149,0.005,198,0.257,215,2.387,257,0.521,258,0.988,261,2.869,264,1.561,272,3.062,276,0.267,286,1.922,289,0.93,290,3.454,299,1.922,300,1.837,301,2.788,303,1.76,314,2.772,328,2.095,333,2.547,362,2.909,378,3.559,389,2.893,394,4.038,395,2.558,396,2.772,397,5.132,398,5.132,399,5.132,400,5.132,401,5.669,402,5.669,403,4.41,404,4.41,405,4.41,406,3.238,407,3.689,408,3.997,409,4.41,410,4.41,411,2.341,412,3.997,413,2.649,414,3.997,415,3.997,416,3.689,417,3.997,418,2.909,419,3.997,420,3.238,421,5.663,422,4.41,423,2.772,424,2.772,425,2.123,426,2.909,427,2.245,428,2.772,429,2.245,430,2.772]],["title/interfaces/EditorMap.html",[257,0.451,356,2.651]],["body/interfaces/EditorMap.html",[3,0.274,4,0.274,9,0.193,13,0.734,37,0.889,40,0.012,58,0.594,64,2.299,68,0.389,113,1.012,147,0.007,148,0.009,149,0.007,198,0.295,257,0.775,258,1.399,261,1.986,264,1.576,276,0.488,289,1.317,292,2.477,294,3.468,315,2.722,333,2.132,348,3.007,349,3.38,350,5.298,351,5.522,352,3.38,354,2.132,355,3.518,356,3.886,357,3.38,358,2.213,359,3.38,360,3.007,361,3.38,362,2.856,363,3.007,364,3.007,431,4.946]],["title/components/EditorPageComponent.html",[0,1.692,133,2.197]],["body/components/EditorPageComponent.html",[0,2.226,1,1.671,2,2.671,3,0.184,4,0.184,5,2.132,6,1.38,7,2.017,8,2.132,9,0.13,19,1.883,22,2.017,23,4.609,24,2.386,25,3.119,27,3.119,29,0.492,33,2.132,34,1.094,37,1.032,39,1.129,40,0.012,41,1.84,42,0.615,43,0.654,50,2.388,57,2.132,58,0.563,61,0.46,64,1.542,67,2.43,68,0.173,69,0.33,70,1.834,72,3.158,73,2.018,75,1.916,84,2.445,85,1.712,86,3.317,89,1.916,90,3.317,91,3.317,113,0.909,126,1.129,127,3.119,128,2.445,129,1.484,130,4.058,131,2.132,132,2.132,133,3.181,134,2.132,135,1.745,136,2.132,137,2.132,138,1.604,139,2.132,140,1.671,141,2.132,142,1.745,143,2.017,144,1.542,145,1.916,146,2.132,147,0.004,148,0.007,149,0.004,150,0.72,197,2.386,198,0.281,224,1.551,226,3.119,234,1.204,235,1.916,240,3.119,241,1.551,276,0.482,298,1.551,354,2.474,416,3.554,432,5.528,433,5.01,434,2.905,435,5.737,436,5.737,437,4.852,438,6.313,439,6.313,440,3.317,441,6.313,442,3.181,443,3.317,444,4.852,445,3.317,446,3.317,447,3.317,448,4.852,449,3.317,450,2.633,451,3.317,452,2.905,453,2.905,454,3.317,455,3.317,456,2.267,457,3.317,458,3.317,459,3.317,460,3.317,461,3.317,462,3.317,463,3.317,464,3.317,465,3.317,466,3.317,467,4.249,468,3.554,469,2.95,470,4.852,471,4.249,472,4.852,473,3.119,474,2.633,475,2.633]],["title/interfaces/Header.html",[257,0.451,330,1.88]],["body/interfaces/Header.html",[3,0.172,4,0.172,6,1.292,9,0.121,13,0.461,29,0.461,30,1.515,40,0.012,42,1.552,43,1.206,45,1.525,68,0.388,93,3.39,102,2.329,103,2.83,104,2.329,113,1.316,147,0.004,148,0.006,149,0.004,198,0.247,250,2.456,257,0.815,258,0.878,261,2.217,264,1.542,276,0.237,280,0.905,292,0.993,310,2.148,312,1.565,314,2.754,317,1.339,318,3.039,319,1.292,320,1.565,321,2.431,322,2.431,323,1.565,324,1.444,325,2.431,326,1.339,327,2.235,328,2.719,329,2.235,330,3.318,331,3.605,332,2.431,333,2.38,334,2.235,335,2.925,336,2.544,337,2.544,338,1.634,339,2.904,340,1.71,341,1.71,342,1.71,343,1.71,344,1.71,345,2.235,346,1.634,347,1.634]],["title/interfaces/HeaderBlock.html",[257,0.451,334,2.108]],["body/interfaces/HeaderBlock.html",[3,0.176,4,0.176,6,1.323,9,0.124,13,0.472,29,0.472,30,1.536,40,0.012,42,1.56,43,1.22,45,1.469,68,0.39,93,2.876,102,2.37,103,2.85,104,2.37,113,1.328,147,0.004,148,0.006,149,0.004,198,0.257,250,2.652,257,0.826,258,0.899,261,2.248,264,1.493,276,0.243,280,0.927,292,1.017,310,1.478,312,1.603,314,2.682,317,1.371,318,3.081,319,1.323,320,1.603,321,2.475,322,2.475,323,1.603,324,1.478,325,2.475,326,1.371,327,2.275,328,2.746,329,2.275,330,3.166,331,2.475,332,1.673,333,1.371,334,2.707,335,2.954,336,2.589,337,2.589,338,1.673,339,2.945,340,1.751,341,1.751,342,1.751,343,1.751,344,1.751,345,2.275,346,1.673,347,1.673]],["title/interfaces/Image.html",[257,0.451,335,1.951]],["body/interfaces/Image.html",[3,0.162,4,0.162,6,1.216,9,0.114,13,0.434,29,0.434,30,1.461,40,0.012,42,1.555,43,1.575,45,1.491,68,0.381,93,2.758,102,2.226,103,2.779,104,2.226,113,1.306,147,0.004,148,0.006,149,0.004,198,0.241,250,2.383,257,0.805,258,0.827,261,2.944,264,1.564,276,0.223,280,0.853,292,0.935,310,1.359,312,1.474,314,2.7,317,1.261,318,2.931,319,1.216,320,1.474,321,2.324,322,2.324,323,1.474,324,1.359,325,2.324,326,1.261,327,2.137,328,2.65,329,2.137,330,3.088,331,2.324,332,1.538,333,1.261,334,2.137,335,3.204,336,3.688,337,3.688,338,2.324,339,3.524,340,3.266,341,2.432,342,3.266,343,2.432,344,3.266,345,2.137,346,1.538,347,1.538]],["title/interfaces/ImageBlock.html",[257,0.451,345,2.108]],["body/interfaces/ImageBlock.html",[3,0.176,4,0.176,6,1.323,9,0.124,13,0.472,29,0.472,30,1.536,40,0.012,42,1.56,43,1.22,45,1.469,68,0.39,93,2.876,102,2.37,103,2.85,104,2.37,113,1.328,147,0.004,148,0.006,149,0.004,198,0.257,250,2.652,257,0.826,258,0.899,261,2.248,264,1.493,276,0.243,280,0.927,292,1.017,310,1.478,312,1.603,314,2.682,317,1.371,318,3.081,319,1.323,320,1.603,321,2.475,322,2.475,323,1.603,324,1.478,325,2.475,326,1.371,327,2.275,328,2.746,329,2.275,330,3.084,331,2.475,332,1.673,333,1.371,334,2.275,335,3.093,336,2.589,337,2.589,338,1.673,339,2.945,340,1.751,341,1.751,342,1.751,343,1.751,344,1.751,345,2.707,346,1.673,347,1.673]],["title/interfaces/List.html",[103,1.692,257,0.451]],["body/interfaces/List.html",[3,0.172,4,0.172,6,1.292,9,0.121,13,0.461,29,0.461,30,1.515,40,0.012,42,1.556,43,1.206,45,1.525,68,0.388,93,2.842,102,3.453,103,3.024,104,3.453,113,1.316,147,0.004,148,0.006,149,0.004,198,0.247,250,2.456,257,0.815,258,0.878,261,2.217,264,1.482,276,0.237,280,0.905,292,0.993,310,1.444,312,1.565,314,2.754,317,1.339,318,3.772,319,1.292,320,1.565,321,2.431,322,2.431,323,1.565,324,1.444,325,3.217,326,1.339,327,2.235,328,2.719,329,2.235,330,3.06,331,2.431,332,1.634,333,1.339,334,2.235,335,2.925,336,2.544,337,2.544,338,1.634,339,2.904,340,1.71,341,1.71,342,1.71,343,1.71,344,1.71,345,2.235,346,1.634,347,1.634]],["title/interfaces/ListBlock.html",[257,0.451,327,2.108]],["body/interfaces/ListBlock.html",[3,0.175,4,0.175,6,1.314,9,0.124,13,0.469,29,0.469,30,1.53,40,0.012,42,1.559,43,1.216,45,1.534,68,0.389,93,2.866,102,2.358,103,2.955,104,2.358,113,1.327,147,0.004,148,0.006,149,0.004,198,0.264,250,2.644,257,0.818,258,0.893,261,2.239,264,1.49,276,0.241,280,1.364,292,1.01,310,1.468,312,1.592,314,2.676,317,1.362,318,3.069,319,1.314,320,1.592,321,2.462,322,2.462,323,1.592,324,1.468,325,2.462,326,2.018,327,2.696,328,2.738,329,2.263,330,3.077,331,2.462,332,1.662,333,1.362,334,2.263,335,2.946,336,2.576,337,2.576,338,1.662,339,2.933,340,1.739,341,1.739,342,1.739,343,1.739,344,1.739,345,2.263,346,1.662,347,1.662]],["title/modules/MaterialModule.html",[150,0.647,163,2.98]],["body/modules/MaterialModule.html",[3,0.329,4,0.329,9,0.233,10,2.763,40,0.011,58,0.601,61,0.824,62,4.063,68,0.309,69,0.591,147,0.008,148,0.01,149,0.008,152,2.023,157,2.231,163,4.901,175,3.614,179,2.879,476,5.945,477,7.699,478,7.699,479,7.699,480,7.699,481,6.741]],["title/interfaces/MenuItem.html",[257,0.451,262,3.193]],["body/interfaces/MenuItem.html",[3,0.321,4,0.321,9,0.227,10,2.694,29,0.86,30,1.937,40,0.011,42,1.309,58,0.486,68,0.367,123,5.805,147,0.008,148,0.009,149,0.008,189,3.962,227,4.245,253,3.726,257,0.731,258,1.639,259,4.6,260,4.6,261,2.328,262,5.577,263,6.94,264,1.548,265,5.805]],["title/components/NavBarComponent.html",[0,1.692,135,2.294]],["body/components/NavBarComponent.html",[0,2.687,1,1.804,2,2.822,3,0.198,4,0.198,5,2.301,6,1.489,7,2.176,8,2.301,9,0.14,10,3.04,22,2.176,23,4.696,24,2.879,25,3.296,27,3.296,29,0.531,32,3.755,34,1.181,35,2.841,36,3.778,37,1.077,39,1.218,40,0.012,41,1.907,42,0.664,43,0.706,44,3.505,45,0.797,46,1.602,50,1.218,51,6.062,57,2.301,58,0.43,59,3.296,61,0.496,65,2.841,68,0.186,69,0.356,70,1.915,73,1.489,75,2.067,85,1.415,86,1.489,89,2.961,91,3.505,93,2.383,94,3.134,95,4.489,96,4.489,97,3.134,98,3.134,99,3.134,100,3.134,101,3.134,102,1.804,103,1.389,104,1.804,105,4.489,106,4.791,107,5.245,108,3.134,109,3.134,110,3.134,111,4.489,112,3.296,113,0.812,114,4.489,115,3.134,116,2.841,117,3.134,118,4.069,119,3.134,120,3.134,121,3.134,122,3.134,123,2.622,124,3.134,125,3.134,126,1.218,127,3.296,128,2.583,129,1.602,130,4.205,131,2.301,132,2.301,133,1.804,134,2.301,135,3.441,136,4.877,137,2.301,138,1.731,139,2.301,140,1.804,141,2.301,142,1.883,143,2.176,144,1.664,145,2.067,146,2.301,147,0.005,148,0.007,149,0.005,206,5.191,224,1.639,225,5.727,234,1.3,235,2.067,260,4.069,482,5.727,483,3.134,484,5.127,485,5.991,486,5.127,487,5.127,488,5.127,489,3.58,490,3.58,491,3.58,492,3.296,493,2.583,494,3.505]],["title/components/NgxEditorJSComponent.html",[0,1.692,138,2.108]],["body/components/NgxEditorJSComponent.html",[0,2.903,1,1.589,2,2.573,3,0.175,4,0.175,5,2.027,6,1.312,7,3.387,8,2.027,9,0.123,13,0.693,15,1.877,22,1.917,23,4.549,24,2.317,25,3.005,27,3.005,29,0.468,30,1.283,32,3.424,34,1.04,37,1.183,39,1.073,40,0.012,41,1.796,42,1.22,43,1.099,45,1.04,50,1.073,53,2.31,57,2.027,58,0.517,59,3.581,60,2.503,61,0.437,68,0.164,69,0.314,70,2.392,73,2.317,85,1.554,86,3.251,89,2.7,90,3.195,91,3.195,93,1.466,113,0.882,118,2.503,126,1.073,127,3.005,128,3.104,129,2.492,130,3.96,131,2.027,132,2.027,133,1.589,134,2.027,135,1.659,136,2.027,137,2.027,138,2.979,139,2.027,140,1.589,141,2.027,142,1.659,143,1.917,144,2.864,145,1.821,146,2.027,147,0.004,148,0.006,149,0.004,198,0.222,257,0.484,264,0.95,276,0.526,282,2.355,301,2.016,319,1.944,326,2.016,338,2.459,354,2.837,388,1.917,389,2.492,396,2.573,406,3.005,411,2.173,412,3.71,418,2.7,442,3.315,474,2.503,475,3.71,495,6.034,496,2.761,497,3.424,498,4.675,499,3.71,500,4.211,501,3.424,502,5.571,503,4.675,504,4.19,505,3.154,506,4.675,507,3.154,508,4.675,509,3.154,510,4.675,511,4.093,512,3.154,513,2.761,514,2.761,515,2.503,516,2.503,517,2.156,518,3.154,519,3.154,520,3.154,521,3.154,522,3.154,523,3.154]],["title/interfaces/NgxEditorJSConfig.html",[257,0.451,426,2.518]],["body/interfaces/NgxEditorJSConfig.html",[3,0.236,4,0.236,9,0.167,13,0.632,29,0.632,30,1.589,40,0.012,41,1.243,42,0.791,43,1.142,45,1.464,58,0.486,61,0.591,68,0.342,74,1.6,89,2.462,113,1.042,128,2.148,147,0.006,148,0.008,149,0.006,198,0.285,215,3.959,257,0.599,258,1.206,261,2.326,264,1.337,272,2.592,276,0.326,286,2.346,289,1.135,290,3.681,299,2.346,300,2.243,301,2.497,303,2.148,314,2.248,328,1.773,333,1.838,362,2.462,378,3.188,389,1.907,394,4.824,395,3.122,396,2.346,397,3.383,398,3.383,399,3.383,400,3.383,401,4.597,402,4.597,403,3.733,404,3.733,405,3.733,406,2.741,407,3.122,408,3.383,409,3.733,410,3.733,411,1.982,412,3.383,413,2.243,414,3.383,415,3.383,416,3.122,417,3.383,418,2.462,419,3.383,420,2.741,421,5.072,422,3.733,423,4.597,424,4.597,425,3.522,426,3.799,427,3.724,428,3.383,429,2.741,430,3.383]],["title/directives/NgxEditorJSDirective.html",[129,1.951,144,2.027]],["body/directives/NgxEditorJSDirective.html",[2,2.818,3,0.198,4,0.198,9,0.14,13,0.53,14,3.5,16,1.921,19,1.987,21,4.749,22,2.172,23,3.113,29,0.53,30,1.405,32,3.75,34,1.178,37,1.244,39,1.216,40,0.012,41,1.041,42,1.11,43,0.705,45,0.795,46,1.599,47,2.818,58,0.548,59,3.292,61,0.495,68,0.186,69,0.355,70,1.913,73,2.718,75,2.063,81,2.836,85,1.21,86,2.877,113,0.948,128,3.293,129,3.221,143,2.172,144,2.38,145,2.957,147,0.005,148,0.007,149,0.005,198,0.278,226,3.292,234,1.297,235,2.063,241,1.637,276,0.55,289,0.951,307,2.208,339,2.693,354,2.983,396,3.962,406,3.292,411,2.38,442,3.627,469,3.113,500,3.5,501,3.75,504,3.294,515,2.836,516,2.836,524,6.303,525,3.128,526,3.75,527,4.787,528,3.75,529,5.12,530,5.984,531,5.984,532,6.057,533,3.573,534,6.536,535,5.12,536,5.12,537,3.292,538,3.5,539,3.573,540,3.128,541,3.573,542,3.573,543,3.573,544,5.12,545,3.573,546,3.573,547,3.573,548,3.573,549,3.573,550,3.573,551,3.573,552,3.573,553,3.573,554,3.573,555,3.573]],["title/injectables/NgxEditorJSEffects.html",[221,0.914,556,3.46]],["body/injectables/NgxEditorJSEffects.html",[3,0.219,4,0.219,9,0.155,29,0.586,30,1.509,34,1.304,37,0.989,39,1.346,40,0.012,41,1.153,42,0.733,43,0.78,45,0.88,46,1.769,53,2.896,58,0.64,61,0.548,64,1.838,67,2.896,68,0.206,69,0.393,72,2.176,73,2.288,74,2.064,75,2.283,113,0.626,147,0.005,148,0.007,149,0.005,197,1.645,198,0.259,221,1.152,222,1.534,240,4.066,241,2.185,272,3.344,276,0.483,289,1.053,294,1.769,314,2.134,354,3.208,370,4.095,380,2.404,381,4.014,383,3.327,384,3.327,389,2.461,442,3.445,452,3.462,453,3.462,532,5.538,556,4.365,557,5.538,558,3.462,559,3.954,560,7.44,561,3.954,562,5.5,563,5.5,564,6.837,565,5.5,566,6.325,567,5.5,568,5.5,569,5.5,570,5.5,571,4.365,572,4.365,573,3.76,574,4.365,575,3.954,576,3.954,577,5.5,578,3.954,579,2.896,580,3.954,581,3.954,582,3.954,583,3.954]],["title/modules/NgxEditorJSModule.html",[150,0.647,164,2.4]],["body/modules/NgxEditorJSModule.html",[3,0.151,4,0.151,9,0.106,13,0.62,15,2.295,16,1.568,17,3.906,34,0.897,37,0.489,39,0.925,40,0.012,41,0.793,42,0.504,43,1.445,44,2.857,45,1.133,47,2.3,58,0.602,61,0.377,68,0.265,69,0.27,74,1.02,86,1.131,126,0.925,138,3.659,144,3.517,147,0.004,148,0.006,149,0.004,150,0.966,152,0.925,153,1.02,154,2.045,155,1.092,156,2.295,157,1.91,164,4.341,166,1.738,167,1.131,168,1.092,175,1.653,179,2.045,197,1.738,198,0.244,215,2.857,224,0.869,234,0.987,241,1.627,276,0.319,281,2.541,283,1.858,286,1.496,290,2.982,300,1.43,303,2.565,326,1.802,389,2.278,394,3.906,396,3.145,411,1.264,413,3.777,425,3.474,426,4.233,429,2.687,442,3.281,469,4.256,513,2.381,514,2.381,515,2.158,517,2.857,527,1.991,528,3.061,537,3.674,584,2.381,585,2.381,586,2.381,587,2.381,588,3.76,589,3.061,590,1.991,591,3.659,592,3.317,593,4.458,594,3.659,595,4.18,596,2.719,597,2.719,598,5.004,599,3.317,600,5.004,601,1.991,602,5.091,603,3.061,604,1.858,605,4.18,606,2.719,607,2.719,608,2.719,609,2.381,610,4.041,611,2.158,612,1.991,613,1.991,614,2.381,615,2.719,616,4.18,617,2.719,618,4.18,619,2.719,620,4.18,621,2.719,622,4.18,623,2.719,624,4.18,625,2.719,626,4.18,627,2.719,628,4.18,629,2.719,630,2.719,631,1.858,632,2.381,633,2.158,634,4.041,635,2.381,636,2.719,637,2.719,638,2.719,639,2.719,640,2.158,641,2.158,642,2.719]],["title/injectables/NgxEditorJSPluginService.html",[221,0.914,588,2.518]],["body/injectables/NgxEditorJSPluginService.html",[3,0.15,4,0.15,9,0.106,13,0.846,15,2.29,16,1.563,17,1.85,29,0.401,34,0.893,37,1.169,39,2.095,40,0.012,41,1.895,42,1.142,43,1.335,45,0.927,46,1.211,58,0.349,61,0.375,68,0.141,69,0.567,70,2.447,72,1.49,76,4.992,86,1.732,147,0.004,148,0.006,149,0.004,150,0.401,172,3.647,194,3.847,198,0.15,221,0.873,222,1.05,224,1.331,226,2.678,234,2.603,235,2.405,241,2.078,264,1.537,275,2.36,276,0.517,280,2.344,282,1.364,291,3.274,292,2.34,294,3.425,295,1.936,296,2.671,298,1.331,301,1.796,302,3.108,304,1.49,308,3.101,319,1.732,355,2.293,396,2.293,413,2.191,424,3.306,473,4.179,504,3.578,517,4.628,588,2.405,613,1.983,643,2.37,644,4.165,645,5.701,646,4.165,647,4.165,648,4.992,649,2.707,650,2.707,651,5.701,652,4.165,653,4.165,654,4.165,655,2.707,656,4.165,657,2.707,658,4.165,659,2.707,660,5.701,661,3.306,662,3.647,663,4.165,664,2.707,665,2.707,666,2.707,667,4.165,668,2.37,669,1.49,670,2.37,671,1.983,672,2.707,673,2.707,674,2.707,675,2.707,676,2.707,677,2.707,678,5.701,679,2.37,680,2.148,681,2.707,682,2.707,683,2.707,684,2.707,685,2.707,686,4.165,687,4.165,688,4.165]],["title/injectables/NgxEditorJSService.html",[221,0.914,442,2.197]],["body/injectables/NgxEditorJSService.html",[3,0.082,4,0.082,9,0.058,13,0.775,16,0.954,17,1.011,29,0.219,34,0.839,37,1.036,39,1.962,40,0.012,41,1.964,42,1.069,43,1.217,45,0.744,46,1.138,47,1.4,58,0.438,61,0.205,64,0.688,68,0.077,69,0.147,70,2.381,72,2.875,73,0.615,74,2.378,86,2.293,106,1.084,113,1.003,147,0.002,148,0.003,149,0.002,198,0.273,221,0.533,222,0.574,224,0.813,234,2.403,235,3.016,240,4.169,241,1.268,264,1.569,272,1.546,276,0.457,284,1.096,285,1.546,289,0.394,294,3.148,295,0.688,301,1.096,302,1.343,303,1.281,307,1.096,348,2.413,350,1.738,351,3.055,352,1.738,354,3.133,355,2.686,356,2.033,357,2.712,358,2,359,1.738,360,2.413,361,1.738,362,2.292,363,2.717,364,2.413,378,1.84,383,2.567,389,3.47,396,4.354,406,2.551,407,1.862,411,2.945,413,1.338,418,2.292,420,1.635,425,3.636,426,2.292,427,1.635,429,0.951,442,1.999,492,1.635,500,1.738,504,2.184,516,1.174,517,4.331,528,1.862,538,1.738,540,2.226,571,2.018,572,2.018,573,1.738,574,2.018,588,2.292,599,2.018,600,2.226,601,1.862,609,1.296,612,1.862,631,2.712,661,3.873,662,2.226,668,1.296,670,1.296,671,1.862,679,2.226,680,2.018,689,1.296,690,2.018,691,4.469,692,4.273,693,3.968,694,2.018,695,2.543,696,4.88,697,3.968,698,2.543,699,2.543,700,2.543,701,3.475,702,1.48,703,3.343,704,3.968,705,1.48,706,2.543,707,3.968,708,3.913,709,1.48,710,2.543,711,2.543,712,3.343,713,2.927,714,4.273,715,2.226,716,2.226,717,1.738,718,1.635,719,2.543,720,2.543,721,2.543,722,1.48,723,3.968,724,1.862,725,2.543,726,2.543,727,2.543,728,1.48,729,5.514,730,4.88,731,2.543,732,1.48,733,2.543,734,1.23,735,0.746,736,2.018,737,1.182,738,2.543,739,1.48,740,3.968,741,3.968,742,2.543,743,1.48,744,2.543,745,1.48,746,3.475,747,2.543,748,1.48,749,2.543,750,1.48,751,1.48,752,1.48,753,5.763,754,1.48,755,3.968,756,1.48,757,2.543,758,3.968,759,1.48,760,2.543,761,3.343,762,1.48,763,1.48,764,1.48,765,1.48,766,1.48,767,1.48,768,1.48,769,1.48,770,1.48,771,1.48,772,2.543,773,1.48,774,1.48,775,1.48,776,2.543,777,1.48,778,1.48,779,1.48,780,1.48,781,1.48,782,1.48,783,1.48,784,1.48,785,3.343,786,1.48,787,1.48,788,1.48]],["title/modules/NgxEditorjsDemoModule.html",[150,0.647,165,2.98]],["body/modules/NgxEditorjsDemoModule.html",[3,0.194,4,0.194,9,0.137,40,0.012,58,0.676,61,0.487,62,2.401,68,0.183,69,0.349,85,1.195,126,1.195,133,4.024,140,4.091,147,0.005,148,0.007,149,0.005,150,0.521,152,1.195,153,1.318,154,2.38,155,1.41,156,2.031,157,2.224,164,3.939,165,5.856,166,2.104,167,1.461,168,1.41,175,3.075,179,2.031,188,3.075,189,2.401,197,2.104,198,0.247,199,3.075,200,2.787,276,0.268,302,1.41,308,2.548,413,1.847,433,2.787,450,2.787,481,4.428,537,2.258,603,3.704,604,2.401,640,2.787,789,3.075,790,3.075,791,3.075,792,3.075,793,5.459,794,4.351,795,4.133,796,4.351,797,4.351,798,4.133,799,4.133,800,4.351,801,2.787,802,3.512,803,5.058,804,5.058,805,5.058,806,4.014,807,3.512,808,3.512,809,3.512,810,2.787,811,3.512,812,2.787,813,3.512,814,3.512,815,3.512,816,3.512]],["title/modules/NgxEditorjsNgrxModule.html",[150,0.647,817,3.193]],["body/modules/NgxEditorjsNgrxModule.html",[3,0.305,4,0.305,9,0.215,40,0.012,58,0.653,61,0.763,68,0.286,69,0.547,126,1.873,147,0.007,148,0.009,149,0.007,150,0.816,152,1.873,153,2.065,154,2.21,155,2.21,156,2.21,157,2.065,164,4.491,166,2.845,167,2.289,168,2.21,175,4.158,179,2.747,197,2.289,198,0.268,276,0.42,579,4.031,603,5.009,604,3.762,817,5.976,818,4.819,819,5.504,820,5.504,821,5.504,822,5.504,823,5.504]],["title/modules/NgxEditorjsPluginsModule.html",[150,0.647,824,3.193]],["body/modules/NgxEditorjsPluginsModule.html",[3,0.187,4,0.187,9,0.132,13,0.502,16,1.847,40,0.012,58,0.665,61,0.469,68,0.176,69,0.336,112,3.165,113,0.78,126,1.152,147,0.005,148,0.007,149,0.005,150,0.861,152,2.305,153,1.27,154,1.359,155,1.359,156,1.359,157,2.178,166,2.048,167,1.407,168,1.359,175,2.993,179,1.977,198,0.229,276,0.259,279,2.843,295,2.288,317,2.123,526,3.606,537,3.165,603,3.606,604,2.313,690,3.907,717,3.365,794,4.821,795,4.579,796,4.821,797,4.821,798,4.579,799,4.579,800,4.821,824,6.287,825,2.963,826,2.963,827,2.963,828,5.097,829,3.384,830,3.384,831,4.923,832,4.923,833,4.923,834,4.923,835,4.311,836,4.311,837,3.384,838,3.384,839,3.384,840,3.384,841,3.384,842,2.963,843,3.384,844,3.384,845,2.478,846,3.384]],["title/classes/NotReady.html",[69,0.434,386,2.4]],["body/classes/NotReady.html",[3,0.214,4,0.214,9,0.151,19,2.868,29,0.574,30,1.487,34,1.277,37,1.124,39,1.318,40,0.012,41,1.129,42,1.519,43,0.763,45,0.862,46,1.732,58,0.454,68,0.395,69,0.709,70,1.732,73,3.156,85,1.685,147,0.005,148,0.007,149,0.005,198,0.283,264,1.45,276,0.518,289,1.031,314,2.103,358,3.19,366,3.563,367,2.489,368,3.912,369,2.236,370,4.176,371,5.292,372,2.646,373,4.274,376,2.646,377,2.489,378,3.442,379,2.646,380,2.354,381,3.289,382,3.484,383,2.036,384,3.289,385,2.354,386,3.729,387,2.646,388,4.335,389,3.19,390,2.646,391,3.705,392,2.646,393,2.489,847,5.42,848,3.872]],["title/interfaces/Page.html",[50,1.484,257,0.451]],["body/interfaces/Page.html",[3,0.292,4,0.292,9,0.206,29,0.781,30,1.826,33,4.926,40,0.012,42,1.421,50,2.265,58,0.558,68,0.38,113,1.054,147,0.007,148,0.009,149,0.007,191,2.655,197,2.191,198,0.24,250,2.116,257,0.755,258,1.49,264,1.558,276,0.403,292,1.684,354,3.304,411,3.918,456,5.238,849,3.859,850,4.926,851,4.926]],["title/interfaces/PageBlock.html",[257,0.451,850,2.803]],["body/interfaces/PageBlock.html",[3,0.308,4,0.308,9,0.218,29,0.826,30,1.891,33,3.58,40,0.012,42,1.033,50,1.896,58,0.578,68,0.389,113,1.185,147,0.007,148,0.009,149,0.007,191,2.806,197,2.317,198,0.248,250,2.767,257,0.774,258,1.575,264,1.401,276,0.426,292,1.78,354,2.401,411,3.952,456,3.807,849,4.079,850,4.809,851,4.429]],["title/components/PageContainerComponent.html",[0,1.692,140,2.197]],["body/components/PageContainerComponent.html",[0,2.474,1,2.022,2,3.059,3,0.222,4,0.222,5,2.58,6,1.669,7,2.44,8,2.58,9,0.157,18,4.071,22,2.44,23,4.821,24,2.652,25,3.573,27,3.573,29,0.595,34,1.324,37,0.999,39,1.366,40,0.012,41,2.006,42,0.744,43,0.792,50,2.699,57,2.58,58,0.577,61,0.557,64,1.866,68,0.209,69,0.399,73,1.669,75,2.318,84,3.467,85,1.81,86,1.669,89,2.318,90,2.744,91,2.744,126,1.366,127,3.573,128,2.8,129,1.796,130,4.423,131,2.58,132,2.58,133,2.022,134,2.58,135,2.111,136,2.58,137,2.58,138,1.941,139,2.58,140,3.467,141,2.58,142,2.111,143,2.44,144,1.866,145,2.318,146,2.58,147,0.005,148,0.007,149,0.005,150,0.824,197,2.312,198,0.276,226,3.573,240,3.573,241,1.283,276,0.487,466,4.939,467,4.866,468,4.071,474,3.186,475,3.186,810,5.06,852,5.582,853,3.515,854,6.375,855,5.558,856,4.014,857,4.805,858,4.014,859,3.515,860,4.014,861,4.014,862,4.014,863,4.014,864,5.558,865,4.014]],["title/modules/PageStoreModule.html",[150,0.647,793,2.98]],["body/modules/PageStoreModule.html",[3,0.295,4,0.295,9,0.208,40,0.012,58,0.645,61,0.739,68,0.277,69,0.53,126,1.814,147,0.007,148,0.009,149,0.007,150,0.79,152,1.814,153,2,154,2.14,155,2.14,156,2.945,157,2,166,2.788,167,2.217,168,2.14,179,2.692,198,0.192,276,0.407,793,5.772,857,5.203,866,4.666,867,4.666,868,5.203,869,4.675,870,5.33,871,4.666,872,5.33,873,4.23]],["title/injectables/PagesQuery.html",[221,0.914,868,2.803]],["body/injectables/PagesQuery.html",[3,0.309,4,0.309,9,0.219,34,1.842,37,1.004,39,1.902,40,0.012,41,1.628,42,1.036,43,1.102,50,1.902,58,0.656,61,0.775,68,0.291,69,0.556,147,0.007,148,0.009,149,0.007,191,2.815,194,3.799,198,0.248,221,1.446,222,2.168,250,2.772,251,4.892,255,4.892,256,4.892,276,0.527,868,4.438,869,4.519,873,4.434,874,4.892,875,7.492,876,5.587,877,4.092,878,3.819]],["title/injectables/PagesService.html",[221,0.914,857,2.803]],["body/injectables/PagesService.html",[3,0.146,4,0.146,9,0.103,13,0.834,16,1.532,29,0.391,30,1.12,33,1.696,34,0.87,37,1.307,39,2.283,40,0.012,41,1.955,42,1.32,43,1.403,50,2.851,58,0.562,61,0.366,64,1.226,68,0.137,69,0.262,70,1.944,72,1.452,73,2.675,74,0.99,113,1.172,147,0.004,148,0.005,149,0.004,191,1.329,194,4.073,197,1.097,198,0.27,221,0.855,222,1.024,224,1.305,226,2.625,228,2.309,232,4.463,234,2.435,235,3.715,240,4.135,241,0.843,276,0.565,303,1.329,307,1.76,319,1.698,324,1.898,354,2.892,383,2.148,388,1.604,406,2.625,411,3.674,456,1.803,466,4.738,473,3.615,500,2.791,504,2.247,517,3.414,526,2.99,601,1.932,612,2.99,680,3.24,746,3.575,850,4.312,857,2.625,859,2.309,868,3.91,869,3.513,871,2.309,873,2.093,877,1.932,879,2.309,880,4.083,881,4.083,882,4.083,883,4.083,884,2.638,885,4.083,886,2.638,887,4.083,888,2.638,889,6.083,890,4.083,891,2.638,892,4.083,893,2.99,894,4.083,895,2.638,896,4.083,897,2.638,898,4.083,899,2.638,900,4.083,901,4.083,902,2.638,903,2.638,904,2.638,905,5.624,906,4.083,907,2.638,908,2.638,909,2.638,910,4.083,911,2.638,912,2.638,913,4.995,914,4.083,915,2.638,916,2.638,917,2.638]],["title/interfaces/PagesState.html",[257,0.451,878,2.98]],["body/interfaces/PagesState.html",[3,0.319,4,0.319,9,0.225,34,1.9,40,0.012,41,1.679,50,1.961,58,0.637,61,0.799,68,0.366,69,0.573,147,0.008,148,0.009,149,0.008,191,2.902,198,0.207,221,1.474,250,3.05,257,0.596,258,1.629,270,5.582,271,4.571,276,0.44,466,3.937,869,3.326,877,4.219,878,4.808,918,4.571,919,6.649,920,6.159]],["title/injectables/PagesStore.html",[221,0.914,869,2.518]],["body/injectables/PagesStore.html",[3,0.313,4,0.313,9,0.221,34,2.484,37,1.017,40,0.012,41,1.648,50,1.925,58,0.632,61,0.784,68,0.362,69,0.562,147,0.008,148,0.009,149,0.008,191,2.849,198,0.25,221,1.457,222,2.194,250,3.025,257,0.585,270,5.52,271,4.488,276,0.531,466,3.865,869,4.016,877,4.142,878,3.865,918,4.488,919,6.09,920,6.595,921,5.655]],["title/interfaces/Paragraph.html",[257,0.451,328,1.813]],["body/interfaces/Paragraph.html",[3,0.175,4,0.175,6,1.316,9,0.124,13,0.469,29,0.469,30,1.532,40,0.012,42,1.55,43,1.217,45,1.535,68,0.39,93,3.408,102,2.361,103,2.845,104,2.361,113,1.319,147,0.004,148,0.006,149,0.004,198,0.248,250,2.478,257,0.818,258,0.895,261,2.242,264,1.549,276,0.242,280,0.922,292,1.011,310,1.471,312,1.594,314,2.771,317,1.364,318,3.072,319,1.316,320,1.594,321,2.465,322,2.465,323,1.594,324,1.471,325,2.465,326,1.364,327,2.266,328,3.05,329,2.266,330,3.079,331,2.465,332,1.665,333,1.364,334,2.266,335,2.948,336,2.58,337,2.58,338,1.665,339,2.936,340,1.742,341,1.742,342,1.742,343,1.742,344,1.742,345,2.266,346,1.665,347,1.665]],["title/interfaces/ParagraphBlock.html",[257,0.451,329,2.108]],["body/interfaces/ParagraphBlock.html",[3,0.176,4,0.176,6,1.323,9,0.124,13,0.472,29,0.472,30,1.536,40,0.012,42,1.56,43,1.22,45,1.469,68,0.39,93,2.876,102,2.37,103,2.85,104,2.37,113,1.328,147,0.004,148,0.006,149,0.004,198,0.257,250,2.652,257,0.826,258,0.899,261,2.248,264,1.493,276,0.243,280,0.927,292,1.017,310,1.478,312,1.603,314,2.682,317,1.371,318,3.081,319,1.323,320,1.603,321,2.475,322,2.475,323,1.603,324,1.478,325,2.475,326,1.371,327,2.275,328,2.875,329,2.707,330,3.084,331,2.475,332,1.673,333,1.371,334,2.275,335,2.954,336,2.589,337,2.589,338,1.673,339,2.945,340,1.751,341,1.751,342,1.751,343,1.751,344,1.751,345,2.275,346,1.673,347,1.673]],["title/injectables/PluginCode.html",[221,0.914,922,2.803]],["body/injectables/PluginCode.html",[3,0.288,4,0.288,9,0.203,13,0.771,19,2.016,29,0.771,37,0.934,40,0.012,58,0.639,61,0.72,68,0.27,69,0.517,70,2.317,113,1.045,147,0.007,148,0.009,149,0.007,198,0.274,221,1.382,222,2.016,224,2.108,234,2.857,241,1.661,275,2.395,276,0.504,280,2.41,284,2.844,287,3.393,289,1.383,298,2.437,669,2.859,922,4.24,923,4.549,924,5.195,925,5.235,926,5.195]],["title/modules/PluginCodeModule.html",[150,0.647,794,2.651]],["body/modules/PluginCodeModule.html",[3,0.293,4,0.293,9,0.207,13,0.784,16,2.502,40,0.012,45,1.484,58,0.559,61,0.733,68,0.275,69,0.525,113,1.056,126,1.799,147,0.007,148,0.009,149,0.007,150,1.083,152,1.799,153,1.983,154,2.122,155,2.122,156,2.934,157,1.983,166,2.773,167,2.198,168,2.122,179,2.678,198,0.263,276,0.404,298,2.131,493,3.359,734,3.224,735,3.359,737,3.099,794,4.911,922,5.192,927,4.627,928,4.627,929,5.284,930,2.908,931,5.284,932,3.051,933,5.284]],["title/interfaces/PluginConfig.html",[257,0.451,291,2.108]],["body/interfaces/PluginConfig.html",[3,0.237,4,0.237,9,0.168,13,0.635,15,1.72,37,1.045,40,0.012,43,1.3,58,0.487,61,0.594,68,0.385,69,0.578,74,2.18,85,1.012,147,0.006,148,0.008,149,0.006,150,0.978,198,0.209,224,1.857,241,1.369,257,0.732,258,1.211,264,1.438,275,2.684,276,0.444,277,2.927,278,2.753,279,2.473,280,2.439,281,2.604,282,3.323,284,2.843,285,2.604,286,2.357,287,2.843,288,4.239,289,1.14,290,2.81,291,2.81,292,2.437,293,3.735,294,1.916,295,1.991,296,2.253,297,2.753,298,1.369,299,3.198,300,3.056,301,1.847,302,2.333,303,2.928,304,2.357,305,2.604,306,2.473,307,1.847,308,2.158,309,2.604,315,2.357,934,4.283]],["title/interfaces/PluginConfig-1.html",[257,0.38,291,1.777,310,1.708]],["body/interfaces/PluginConfig-1.html",[3,0.236,4,0.236,9,0.167,13,0.632,15,1.712,37,1.041,40,0.012,43,1.297,58,0.486,61,0.591,68,0.384,69,0.576,74,2.173,85,1.007,147,0.006,148,0.008,149,0.006,150,0.976,198,0.254,224,1.851,241,1.363,257,0.73,258,1.206,264,1.435,275,2.68,276,0.443,278,2.741,279,2.462,280,2.438,281,2.592,282,3.315,284,2.836,285,2.592,286,2.346,287,2.836,288,4.229,289,1.135,290,2.801,291,2.801,292,2.433,293,3.724,294,1.907,295,1.982,296,2.243,297,2.741,298,1.363,299,3.188,300,3.047,301,1.838,302,2.326,303,2.919,304,2.346,305,2.592,306,2.462,307,1.838,308,2.148,309,2.592,311,2.914,315,2.346,935,4.263]],["title/injectables/PluginHeader.html",[221,0.914,936,2.803]],["body/injectables/PluginHeader.html",[3,0.287,4,0.287,9,0.203,13,0.768,19,2.01,29,0.768,37,0.931,40,0.012,58,0.639,61,0.718,68,0.27,69,0.515,70,2.314,113,1.043,147,0.007,148,0.009,149,0.007,198,0.274,221,1.38,222,2.01,224,2.105,234,2.855,241,1.656,275,2.39,276,0.503,280,2.409,284,3.284,287,3.121,289,1.379,298,2.434,330,2.839,669,2.851,936,4.233,937,4.536,938,5.181,939,4.536]],["title/modules/PluginHeaderModule.html",[150,0.647,795,2.518]],["body/modules/PluginHeaderModule.html",[3,0.292,4,0.292,9,0.206,13,0.781,16,2.497,40,0.011,45,1.481,58,0.558,61,0.731,68,0.274,69,0.524,113,1.054,126,1.793,147,0.007,148,0.009,149,0.007,150,1.082,152,1.793,153,1.977,154,2.116,155,2.116,156,2.93,157,1.977,166,2.768,167,2.191,168,2.116,179,2.673,198,0.263,276,0.403,298,2.127,330,2.869,493,3.353,734,3.218,735,3.353,737,3.093,795,4.661,930,2.9,932,3.043,936,5.188,940,4.613,941,4.613,942,5.269,943,5.269,944,5.269]],["title/injectables/PluginImage.html",[221,0.914,945,2.98]],["body/injectables/PluginImage.html",[3,0.287,4,0.287,9,0.203,13,0.768,19,2.01,29,0.768,37,0.931,40,0.012,58,0.639,61,0.718,68,0.27,69,0.515,70,2.314,113,1.043,147,0.007,148,0.009,149,0.007,198,0.274,221,1.38,222,2.01,224,2.105,234,2.855,241,1.656,275,2.39,276,0.503,280,2.409,284,3.284,287,3.121,289,1.379,298,2.434,335,2.946,669,2.851,945,4.501,946,4.536,947,5.181,948,5.181]],["title/modules/PluginImageModule.html",[150,0.647,828,2.803]],["body/modules/PluginImageModule.html",[3,0.293,4,0.293,9,0.207,13,0.784,16,2.502,40,0.012,45,1.484,58,0.559,61,0.733,68,0.275,69,0.525,113,1.056,126,1.799,147,0.007,148,0.009,149,0.007,150,1.083,152,1.799,153,1.983,154,2.122,155,2.122,156,2.934,157,1.983,166,2.773,167,2.198,168,2.122,179,2.678,198,0.263,276,0.404,298,2.131,493,3.359,734,3.224,735,3.359,737,3.099,828,5.192,930,2.908,932,3.051,945,5.521,949,4.627,950,4.627,951,5.284,952,4.627,953,4.627]],["title/injectables/PluginLink.html",[221,0.914,954,2.98]],["body/injectables/PluginLink.html",[3,0.288,4,0.288,9,0.203,13,0.771,19,2.016,29,0.771,37,0.934,40,0.012,58,0.639,61,0.72,68,0.27,69,0.517,70,2.317,113,1.045,147,0.007,148,0.009,149,0.007,198,0.274,221,1.382,222,2.016,224,2.108,234,2.857,241,1.661,265,4.831,275,2.395,276,0.504,280,2.41,284,3.287,287,3.125,289,1.383,298,2.437,669,2.859,954,4.509,955,4.549,956,5.195,957,5.195]],["title/modules/PluginLinkModule.html",[150,0.647,796,2.651]],["body/modules/PluginLinkModule.html",[3,0.293,4,0.293,9,0.207,13,0.784,16,2.502,40,0.012,45,1.484,58,0.559,61,0.733,68,0.275,69,0.525,113,1.056,126,1.799,147,0.007,148,0.009,149,0.007,150,1.083,152,1.799,153,1.983,154,2.122,155,2.122,156,2.934,157,1.983,166,2.773,167,2.198,168,2.122,179,2.678,198,0.263,276,0.404,298,2.131,493,3.359,734,3.224,735,3.359,737,3.099,796,4.911,930,2.908,932,3.051,954,5.521,958,4.627,959,4.627,960,5.284,961,5.284,962,5.284]],["title/injectables/PluginList.html",[221,0.914,963,2.803]],["body/injectables/PluginList.html",[3,0.287,4,0.287,9,0.203,13,0.768,19,2.01,29,0.768,37,0.931,40,0.012,58,0.639,61,0.718,68,0.27,69,0.515,70,2.314,103,2.555,113,1.043,147,0.007,148,0.009,149,0.007,198,0.274,221,1.38,222,2.01,224,2.105,234,2.855,241,1.656,275,2.39,276,0.503,280,2.409,284,3.284,287,3.121,289,1.379,298,2.434,669,2.851,963,4.233,964,4.536,965,5.181,966,4.536]],["title/modules/PluginListModule.html",[150,0.647,797,2.651]],["body/modules/PluginListModule.html",[3,0.292,4,0.292,9,0.206,13,0.781,16,2.497,40,0.012,45,1.481,58,0.558,61,0.731,68,0.274,69,0.524,113,1.054,126,1.793,147,0.007,148,0.009,149,0.007,150,1.082,152,1.793,153,1.977,154,2.116,155,2.116,156,2.93,157,1.977,166,2.768,167,2.191,168,2.116,179,2.673,198,0.263,276,0.403,298,2.127,493,3.353,734,3.218,735,3.353,737,3.093,797,4.907,930,2.9,932,3.043,963,5.188,967,4.613,968,4.613,969,5.269,970,5.269,971,5.269]],["title/injectables/PluginMarker.html",[221,0.914,972,2.803]],["body/injectables/PluginMarker.html",[3,0.267,4,0.267,9,0.188,13,0.714,19,1.869,29,0.714,37,1.13,40,0.012,58,0.621,61,0.668,68,0.251,69,0.479,70,2.519,112,4.039,147,0.006,148,0.008,149,0.006,198,0.277,221,1.317,222,1.869,224,2.008,234,2.956,241,2.008,264,0.979,275,2.281,276,0.534,280,2.421,282,3.972,284,3.195,287,3.015,289,1.283,298,2.369,669,2.651,972,4.039,973,4.218,974,5.881,975,4.817,976,4.817,977,4.218,978,4.817]],["title/modules/PluginMarkerModule.html",[150,0.647,798,2.518]],["body/modules/PluginMarkerModule.html",[3,0.292,4,0.292,9,0.206,13,0.781,16,2.497,40,0.011,45,1.481,58,0.558,61,0.731,68,0.274,69,0.524,112,4.278,126,1.793,147,0.007,148,0.009,149,0.007,150,1.082,152,1.793,153,1.977,154,2.116,155,2.116,156,2.93,157,1.977,166,2.768,167,2.191,168,2.116,179,2.673,198,0.263,276,0.403,298,2.127,493,3.353,734,3.218,735,3.353,737,3.093,798,4.661,930,2.9,932,3.043,972,5.188,974,5.282,979,4.613,980,4.613,981,5.269,982,4.613,983,5.269]],["title/injectables/PluginParagraph.html",[221,0.914,984,2.803]],["body/injectables/PluginParagraph.html",[3,0.288,4,0.288,9,0.203,13,0.771,19,2.016,29,0.771,37,0.934,40,0.012,58,0.639,61,0.72,68,0.27,69,0.517,70,2.317,113,1.045,147,0.007,148,0.009,149,0.007,198,0.274,221,1.382,222,2.016,224,2.108,234,2.857,241,1.661,275,2.395,276,0.504,280,2.41,284,3.287,287,3.125,289,1.383,298,2.437,328,2.743,669,2.859,984,4.24,985,4.549,986,5.195,987,4.549]],["title/modules/PluginParagraphModule.html",[150,0.647,799,2.518]],["body/modules/PluginParagraphModule.html",[3,0.293,4,0.293,9,0.207,13,0.784,16,2.502,40,0.012,45,1.484,58,0.559,61,0.733,68,0.275,69,0.525,113,1.056,126,1.799,147,0.007,148,0.009,149,0.007,150,1.083,152,1.799,153,1.983,154,2.122,155,2.122,156,2.934,157,1.983,166,2.773,167,2.198,168,2.122,179,2.678,198,0.263,276,0.404,298,2.131,493,3.359,734,3.224,735,3.359,737,3.099,799,4.664,930,2.908,932,3.051,984,5.192,988,4.627,989,4.627,990,5.284,991,5.284,992,5.284]],["title/injectables/PluginSimpleImage.html",[221,0.914,993,2.98]],["body/injectables/PluginSimpleImage.html",[3,0.282,4,0.282,9,0.199,13,0.756,19,1.977,29,0.756,37,0.916,40,0.012,58,0.635,61,0.707,68,0.265,69,0.507,70,2.296,86,2.71,113,1.032,147,0.007,148,0.009,149,0.007,198,0.272,221,1.365,222,1.977,224,2.082,234,2.84,241,1.629,275,2.365,276,0.498,280,2.401,284,2.809,287,3.097,289,1.357,298,2.082,335,3.213,669,2.804,845,4.772,993,4.453,994,5.17,995,4.461,996,5.704,997,5.095,998,6.515,999,5.095]],["title/modules/PluginSimpleImageModule.html",[150,0.647,800,2.651]],["body/modules/PluginSimpleImageModule.html",[3,0.287,4,0.287,9,0.203,13,0.768,16,2.471,40,0.012,58,0.552,61,0.718,68,0.27,69,0.515,113,1.043,126,1.763,147,0.007,148,0.009,149,0.007,150,1.074,152,1.763,153,1.944,154,2.08,155,2.08,156,2.907,157,1.944,166,2.739,167,2.155,168,2.08,179,2.644,198,0.261,276,0.396,295,3.06,298,2.105,335,2.946,493,3.318,734,3.184,735,3.318,737,3.06,800,4.886,845,3.794,930,2.851,932,2.992,952,4.536,953,4.536,993,5.493,994,4.111,996,6.338,1000,4.536,1001,4.536,1002,5.181]],["title/classes/Ready.html",[69,0.434,358,1.951]],["body/classes/Ready.html",[3,0.214,4,0.214,9,0.151,19,2.868,29,0.574,30,1.487,34,1.277,37,1.124,39,1.318,40,0.012,41,1.129,42,1.519,43,0.763,45,0.862,46,1.732,58,0.454,68,0.395,69,0.709,70,1.732,73,3.156,85,1.685,147,0.005,148,0.007,149,0.005,198,0.283,264,1.45,276,0.518,289,1.031,314,2.103,358,3.306,366,3.563,367,2.489,368,3.912,369,2.236,370,4.176,371,5.292,372,2.646,373,4.274,376,2.646,377,2.489,378,3.442,379,2.646,380,2.354,381,3.289,382,3.484,383,2.036,384,3.289,385,2.354,386,3.442,387,2.646,388,4.335,389,3.19,390,2.646,391,2.646,392,3.705,393,2.489,1003,5.42,1004,3.872]],["title/interfaces/ReadyMap.html",[257,0.451,360,2.651]],["body/interfaces/ReadyMap.html",[3,0.271,4,0.271,9,0.191,13,0.726,37,0.88,40,0.012,58,0.591,64,2.274,68,0.388,113,1.005,147,0.007,148,0.009,149,0.007,198,0.29,257,0.772,258,1.384,261,2.549,264,1.57,276,0.485,289,1.303,292,2.469,294,3.456,315,2.693,333,2.11,348,2.975,349,3.345,350,5.28,351,5.643,352,3.345,354,2.11,355,2.693,356,2.975,357,4.339,358,2.84,359,4.339,360,3.859,361,3.345,362,2.826,363,2.975,364,2.975,1005,4.894]],["title/classes/SaveEnd.html",[69,0.434,384,2.294]],["body/classes/SaveEnd.html",[3,0.214,4,0.214,9,0.151,19,2.868,29,0.574,30,1.487,34,1.277,37,1.124,39,1.318,40,0.012,41,1.129,42,1.519,43,0.763,45,0.862,46,1.732,58,0.454,68,0.395,69,0.709,70,1.732,73,3.156,85,1.685,147,0.005,148,0.007,149,0.005,198,0.283,264,1.45,276,0.518,289,1.031,314,2.103,358,3.19,366,3.563,367,2.489,368,3.912,369,2.236,370,4.176,371,5.292,372,2.646,373,4.274,376,2.646,377,2.489,378,3.442,379,2.646,380,2.354,381,3.289,382,3.484,383,2.036,384,3.563,385,2.354,386,3.442,387,2.646,388,4.335,389,3.19,390,3.705,391,2.646,392,2.646,393,2.489,1006,5.42,1007,3.872]],["title/classes/SaveStart.html",[69,0.434,381,2.294]],["body/classes/SaveStart.html",[3,0.214,4,0.214,9,0.151,19,2.868,29,0.574,30,1.487,34,1.277,37,1.124,39,1.318,40,0.012,41,1.129,42,1.519,43,0.763,45,0.862,46,1.732,58,0.454,68,0.395,69,0.709,70,1.732,73,3.156,85,1.685,147,0.005,148,0.007,149,0.005,198,0.283,264,1.45,276,0.518,289,1.031,314,2.103,358,3.19,366,3.563,367,2.489,368,3.912,369,2.236,370,4.176,371,5.292,372,2.646,373,4.274,376,2.646,377,2.489,378,3.442,379,2.646,380,2.354,381,3.563,382,3.484,383,2.036,384,3.289,385,2.354,386,3.442,387,3.705,388,4.335,389,3.19,390,2.646,391,2.646,392,2.646,393,2.489,1008,5.42,1009,3.872]],["title/components/SidebarComponent.html",[0,1.692,142,2.294]],["body/components/SidebarComponent.html",[0,2.471,1,2.018,2,3.054,3,0.222,4,0.222,5,2.575,6,1.666,7,2.435,8,2.575,9,0.157,10,2.96,19,2.154,20,5.576,21,5.456,22,2.435,23,4.819,24,3.003,25,3.567,27,3.567,29,0.594,30,1.523,31,5.576,34,1.321,35,3.179,36,3.97,37,0.998,39,1.363,40,0.012,41,2.004,42,1.029,43,0.79,44,3.793,46,1.792,50,1.363,52,5.576,53,2.934,54,4.859,57,4.094,58,0.605,60,3.179,61,0.555,62,2.738,63,4.404,64,1.862,65,3.179,66,3.507,67,2.934,68,0.208,69,0.398,72,2.205,73,2.308,74,1.503,75,2.313,77,3.507,78,3.507,79,3.507,80,3.507,81,3.179,82,3.507,83,3.507,84,2.796,85,1.706,86,1.666,126,1.363,127,3.567,128,2.796,129,1.792,130,4.419,131,2.575,132,2.575,133,2.018,134,2.575,135,2.107,136,2.575,137,2.575,138,1.937,139,2.575,140,2.018,141,2.575,142,3.616,143,2.435,144,1.862,145,2.313,146,2.575,147,0.005,148,0.007,149,0.005,198,0.2,1010,5.576,1011,3.507,1012,6.368,1013,5.55,1014,4.005,1015,4.005]],["title/interfaces/Tag.html",[257,0.451,851,2.803]],["body/interfaces/Tag.html",[3,0.31,4,0.31,9,0.219,29,0.831,30,1.898,33,3.602,40,0.012,42,1.039,50,1.907,58,0.58,68,0.39,113,1.095,147,0.008,148,0.009,149,0.008,191,2.823,197,2.331,198,0.249,250,2.25,257,0.776,258,1.585,264,1.592,276,0.428,292,2.504,354,2.416,411,3.74,456,3.83,849,4.104,850,4.446,851,4.822]],["title/interfaces/ToolSettingsMap.html",[257,0.451,296,2.294]],["body/interfaces/ToolSettingsMap.html",[3,0.236,4,0.236,9,0.167,13,0.632,15,1.712,37,1.041,40,0.012,43,1.297,58,0.486,61,0.591,68,0.384,69,0.424,74,2.173,85,1.007,147,0.006,148,0.008,149,0.006,150,0.859,198,0.208,224,1.851,241,1.363,257,0.73,258,1.206,264,1.435,275,2.388,276,0.443,277,2.914,278,2.741,279,2.462,280,2.424,281,2.592,282,3.315,284,3.182,285,2.592,286,2.346,287,3.043,288,4.537,289,1.135,290,2.061,291,2.061,292,2.433,293,2.741,294,2.591,295,2.692,296,3.047,297,3.724,298,1.851,299,3.188,300,3.047,301,1.838,302,2.326,303,2.919,304,2.346,305,2.592,306,2.462,307,1.838,308,2.148,309,2.592,315,2.346,1016,4.263]],["title/interfaces/ToolSettingsMap-1.html",[257,0.38,296,1.933,310,1.708]],["body/interfaces/ToolSettingsMap-1.html",[3,0.235,4,0.235,9,0.166,13,0.629,15,1.704,37,1.038,40,0.012,43,1.294,58,0.484,61,0.588,68,0.383,69,0.422,74,2.167,85,1.003,147,0.006,148,0.008,149,0.006,150,0.856,198,0.254,224,1.846,241,1.356,257,0.729,258,1.2,264,1.432,275,2.383,276,0.441,278,2.728,279,2.451,280,2.422,281,2.58,282,3.307,284,3.177,285,2.58,286,2.336,287,3.037,288,4.529,289,1.13,290,2.052,291,2.052,292,2.43,293,2.728,294,2.583,295,2.684,296,3.037,297,3.712,298,1.846,299,3.178,300,3.037,301,1.83,302,2.319,303,2.909,304,2.336,305,2.58,306,2.451,307,1.83,308,2.138,309,2.58,311,2.901,315,2.336,1017,4.244]],["title/changelog.html",[1018,2.512,1019,2.512,1020,2.023]],["body/changelog.html",[16,2.023,24,2.242,40,0.009,44,3.685,47,2.968,74,2.023,84,2.717,113,0.854,147,0.007,148,0.009,149,0.007,150,0.8,157,2.023,197,2.242,198,0.243,302,2.961,363,3.278,420,3.466,468,3.949,492,3.466,501,3.949,573,3.685,690,4.279,692,5.912,736,4.279,1020,3.716,1021,5.392,1022,5.392,1023,5.359,1024,4.279,1025,5.392,1026,4.279,1027,5.392,1028,3.949,1029,5.392,1030,5.392,1031,3.949,1032,5.392,1033,6.752,1034,5.392,1035,6.752,1036,5.392,1037,5.392,1038,5.912,1039,4.721,1040,5.392,1041,5.392,1042,5.392,1043,3.466,1044,5.392,1045,5.392,1046,5.392,1047,5.392,1048,4.721,1049,5.392,1050,5.392,1051,5.392,1052,5.392,1053,4.279,1054,5.392,1055,5.392,1056,5.392,1057,5.392,1058,5.392,1059,4.721,1060,4.721]],["title/contributing.html",[1018,2.512,1019,2.512,1061,3.218]],["body/contributing.html",[9,0.118,18,2.215,37,0.544,39,1.03,40,0.006,70,1.449,72,2.494,74,1.701,116,2.401,147,0.006,148,0.006,149,0.004,153,1.135,201,3.98,257,0.313,307,1.954,319,1.258,331,1.591,355,2.494,363,2.755,370,1.665,385,1.839,420,1.945,425,1.839,468,2.215,469,2.755,497,3.319,499,2.401,538,2.068,573,3.715,648,2.649,701,2.649,714,3.968,715,2.649,717,3.715,718,1.945,737,2.106,836,2.649,893,2.215,925,5.584,1038,3.968,1039,2.649,1043,5.037,1059,3.968,1060,2.649,1061,3.968,1062,3.968,1063,5.435,1064,3.025,1065,3.025,1066,2.649,1067,2.649,1068,3.025,1069,3.025,1070,3.025,1071,7.036,1072,4.532,1073,3.025,1074,5.435,1075,6.036,1076,3.025,1077,3.025,1078,2.649,1079,3.025,1080,3.025,1081,3.968,1082,3.025,1083,2.401,1084,2.649,1085,3.025,1086,3.025,1087,3.025,1088,3.025,1089,6.036,1090,2.649,1091,3.025,1092,2.401,1093,3.025,1094,3.025,1095,3.968,1096,2.649,1097,3.025,1098,3.025,1099,3.025,1100,3.968,1101,3.025,1102,3.025,1103,4.532,1104,3.025,1105,3.025,1106,3.025,1107,4.532,1108,3.025,1109,6.464,1110,3.025,1111,6.464,1112,4.532,1113,2.649,1114,4.532,1115,3.025,1116,3.025,1117,3.025,1118,3.025,1119,3.025,1120,3.025,1121,3.025,1122,3.025,1123,4.532,1124,3.025,1125,3.025,1126,4.532,1127,3.025,1128,3.025,1129,3.025,1130,4.532,1131,3.025,1132,4.532,1133,6.464,1134,3.025,1135,3.025,1136,3.025,1137,4.532,1138,3.025,1139,3.025,1140,3.025,1141,3.025,1142,3.025,1143,3.025,1144,3.025,1145,3.025,1146,3.025,1147,3.025,1148,3.025,1149,3.025,1150,3.025,1151,3.025,1152,4.532,1153,5.435,1154,3.025,1155,3.025,1156,3.025,1157,3.025,1158,3.025,1159,3.025,1160,3.025,1161,3.025,1162,4.532,1163,3.025,1164,3.025,1165,2.649,1166,3.025,1167,2.649,1168,3.025,1169,3.025,1170,3.025,1171,4.532,1172,3.025,1173,3.025,1174,3.025,1175,4.532,1176,3.025,1177,2.649,1178,3.025,1179,3.025,1180,3.025,1181,3.025,1182,3.025,1183,2.401,1184,4.532,1185,3.025,1186,3.025,1187,4.532,1188,3.025,1189,3.025,1190,3.025,1191,3.025,1192,3.025,1193,3.025,1194,3.025,1195,3.025,1196,3.025,1197,3.025,1198,3.025,1199,4.532,1200,3.025,1201,3.025,1202,3.025,1203,3.025,1204,3.025,1205,3.025,1206,3.025,1207,3.025,1208,4.532,1209,4.532,1210,4.532,1211,3.025,1212,3.025,1213,3.025,1214,3.025,1215,3.025,1216,3.025,1217,3.025,1218,3.025,1219,3.025,1220,3.025,1221,3.025,1222,2.649,1223,3.025,1224,4.532,1225,3.025,1226,4.532,1227,3.025,1228,3.025,1229,2.649,1230,3.025,1231,3.025,1232,4.532,1233,2.649,1234,3.025,1235,3.025,1236,3.025,1237,3.025,1238,3.025,1239,3.025,1240,3.025,1241,3.025,1242,3.025,1243,3.025,1244,3.025,1245,3.025,1246,3.025,1247,3.025,1248,3.025,1249,3.025,1250,3.025,1251,3.025,1252,3.025,1253,3.025,1254,3.025,1255,3.025,1256,3.025,1257,3.025,1258,3.025,1259,3.025,1260,3.025,1261,3.025,1262,3.025,1263,3.025,1264,3.025]],["title/coverage.html",[1265,5.149]],["body/coverage.html",[0,2.33,1,1.131,9,0.088,10,3.353,11,1.965,12,1.965,24,0.934,36,1.296,40,0.012,42,0.416,50,0.764,69,0.56,74,0.842,90,5.749,103,0.871,106,5.901,113,0.355,129,1.004,133,1.131,135,1.181,138,1.085,140,1.131,142,1.181,144,1.043,147,0.003,148,0.005,149,0.003,198,0.296,201,2.634,206,1.781,221,1.607,223,1.965,229,1.443,230,1.365,249,1.965,253,1.443,257,0.841,259,2.854,262,1.644,266,1.965,275,1.305,276,0.656,277,3.847,283,2.458,291,1.739,296,1.891,304,1.979,308,1.812,311,3.847,312,3.406,327,1.085,328,0.934,329,1.085,330,0.968,334,1.085,335,1.004,345,1.085,348,1.365,349,3.516,356,1.365,358,1.004,360,1.365,364,1.365,366,1.181,368,3.25,369,3.25,381,1.181,384,1.181,386,1.235,394,1.534,395,3.295,426,1.296,429,1.443,432,1.965,433,1.781,434,1.965,442,1.131,482,1.965,483,1.965,495,1.965,496,1.965,524,1.965,525,1.965,556,1.781,557,1.965,558,1.965,588,1.296,589,3.295,590,3.295,610,1.781,634,1.781,641,1.781,643,1.965,689,1.965,801,1.781,806,1.781,810,1.781,812,1.781,845,1.644,849,3.295,850,1.443,851,1.443,852,1.965,853,1.965,857,1.443,868,1.443,869,1.296,874,1.965,878,1.534,879,1.965,918,2.854,922,1.443,923,1.965,936,1.443,937,1.965,945,1.534,946,1.965,954,1.534,955,1.965,963,1.443,964,1.965,972,1.443,973,1.965,984,1.443,985,1.965,993,1.534,994,1.781,995,1.965,1010,1.965,1011,1.965,1265,1.965,1266,1.534,1267,2.245,1268,2.245,1269,1.965,1270,7.214,1271,1.965,1272,5.628,1273,1.965,1274,1.965,1275,7.733,1276,2.245,1277,2.245,1278,6.006,1279,6.307,1280,6.006,1281,1.965,1282,1.965,1283,1.965,1284,1.965,1285,2.245,1286,2.245,1287,2.245,1288,7.328,1289,6.006,1290,4.498,1291,2.245,1292,2.245,1293,2.245,1294,2.245,1295,2.245,1296,2.245,1297,2.245]],["title/dependencies.html",[153,1.961,1298,3.218]],["body/dependencies.html",[40,0.012,61,0.72,62,3.551,64,2.415,85,1.227,147,0.007,148,0.009,149,0.007,153,1.949,171,3.805,181,4.549,182,4.549,184,5.235,185,4.831,189,3.551,191,3.324,192,4.549,193,4.549,194,2.859,196,4.549,200,4.123,289,1.383,377,3.34,450,4.123,579,3.805,604,3.551,611,4.123,939,4.549,966,4.549,987,4.549,1299,5.195,1300,8.269,1301,5.195,1302,6.596,1303,5.195,1304,5.195,1305,5.195,1306,5.195,1307,5.195,1308,5.195,1309,5.195,1310,5.195,1311,5.195,1312,5.195,1313,6.596,1314,5.195,1315,5.195,1316,5.195,1317,5.195,1318,5.195,1319,5.195,1320,5.195]],["title/miscellaneous/enumerations.html",[1321,2.123,1322,4.575]],["body/miscellaneous/enumerations.html",[29,0.871,40,0.011,46,3.648,85,1.926,147,0.008,148,0.01,149,0.008,198,0.298,276,0.448,358,3.426,366,3.743,368,3.39,369,4.109,380,4.326,381,3.088,382,4.574,383,3.088,384,3.088,385,3.569,386,3.231,1321,3.39,1322,5.139,1323,4.299]],["title/miscellaneous/functions.html",[1321,2.123,1324,4.575]],["body/miscellaneous/functions.html",[13,0.871,15,2.357,24,2.441,29,0.871,39,1.998,40,0.011,41,1.711,43,1.403,84,2.957,85,1.387,147,0.008,148,0.01,149,0.008,150,0.871,198,0.256,234,2.583,276,0.544,290,2.838,291,2.838,295,2.728,413,3.088,426,3.39,589,4.299,590,5.211,601,4.299,612,5.211,613,4.299,614,5.139,641,5.647,806,6.077,1283,5.139,1321,3.39,1323,4.299,1324,5.139,1325,5.87]],["title/index.html",[29,0.545,1018,2.512,1019,2.512]],["body/index.html",[0,2.148,2,3.778,15,2.223,16,2.077,24,2.303,40,0.009,47,3.778,48,4.848,84,3.459,85,1.308,129,2.477,147,0.007,148,0.009,149,0.007,174,4.848,197,2.303,198,0.247,418,3.197,494,3.784,497,5.028,504,3.047,538,3.784,591,6.011,592,4.394,694,4.394,734,2.677,735,2.79,1020,3.778,1023,5.448,1024,4.394,1026,5.448,1043,4.413,1062,6.533,1167,4.848,1266,5.332,1326,4.394,1327,6.865,1328,5.537,1329,5.537,1330,5.537,1331,5.537,1332,4.848,1333,5.537,1334,4.848,1335,3.784,1336,4.848,1337,5.537,1338,4.848,1339,4.848,1340,5.537]],["title/license.html",[1018,2.512,1019,2.512,1341,3.676]],["body/license.html",[24,2.096,40,0.009,63,4,147,0.007,148,0.009,149,0.007,168,2.024,326,2.173,370,2.774,469,3.933,499,5.671,1031,3.691,1090,4.413,1095,4.413,1100,5.665,1113,4.413,1222,4.413,1229,4.413,1233,4.413,1266,3.445,1334,5.665,1338,4.413,1339,4.413,1342,4.413,1343,5.04,1344,5.04,1345,7.145,1346,5.04,1347,5.04,1348,5.04,1349,5.04,1350,5.04,1351,6.47,1352,8.301,1353,5.04,1354,5.04,1355,5.04,1356,5.04,1357,5.04,1358,5.04,1359,4.413,1360,5.04,1361,5.04,1362,5.04,1363,5.04,1364,6.47,1365,5.04,1366,5.04,1367,5.04,1368,4.413,1369,5.04,1370,5.04,1371,6.47,1372,6.47,1373,4.413,1374,5.04,1375,5.04,1376,5.04,1377,5.04,1378,5.04,1379,5.04,1380,5.04,1381,5.04,1382,5.04,1383,5.04,1384,5.04,1385,5.04,1386,5.04,1387,5.04,1388,5.04,1389,5.04,1390,5.04,1391,5.04,1392,5.04,1393,5.04,1394,5.04,1395,5.04,1396,5.04,1397,5.04,1398,5.04]],["title/modules.html",[152,2.002]],["body/modules.html",[40,0.009,147,0.007,148,0.009,149,0.007,151,3.591,152,1.788,162,3.591,163,3.591,164,2.892,165,3.591,185,6.312,319,2.185,793,3.591,794,3.194,795,3.034,796,3.194,797,3.194,798,3.034,799,3.034,800,3.194,817,3.848,824,3.848,828,3.377,1399,5.891,1400,8.619,1401,8.643,1402,5.254]],["title/overview.html",[1403,5.149]],["body/overview.html",[1,3.43,2,1.512,36,2.959,40,0.012,126,0.935,129,1.229,133,3.43,135,2.695,138,3.292,140,3.43,142,2.695,144,3.164,147,0.004,148,0.006,149,0.004,150,0.407,151,5.441,152,0.935,153,1.031,154,1.103,155,1.103,156,1.103,157,1.031,158,2.405,159,2.405,160,2.405,161,2.405,162,4.922,163,3.502,164,4.313,165,5.707,166,1.752,167,1.143,168,1.103,222,1.066,229,3.294,230,3.115,245,2.405,246,2.405,258,0.777,310,1.277,332,1.445,367,1.766,442,2.582,584,2.405,585,2.405,586,2.405,587,2.405,588,2.959,789,2.405,790,2.405,791,2.405,792,2.405,793,5.25,794,4.469,795,4.245,796,4.469,797,4.469,798,4.245,799,4.245,800,4.469,817,4.208,818,2.405,824,6.08,825,2.405,826,2.405,827,2.405,828,4.629,857,3.294,866,2.405,867,2.405,868,3.294,869,2.959,922,3.294,927,2.405,928,2.405,936,3.294,940,2.405,941,2.405,945,3.502,949,2.405,950,2.405,954,3.502,958,2.405,959,2.405,963,3.294,967,2.405,968,2.405,972,3.294,979,2.405,980,2.405,984,3.294,988,2.405,989,2.405,993,3.502,1000,2.405,1001,2.405,1403,2.405,1404,2.747,1405,2.747,1406,2.747,1407,2.747]],["title/todo.html",[1018,2.512,1019,2.512,1408,3.218]],["body/todo.html",[0,2.123,24,2.276,40,0.009,50,1.862,59,3.517,84,2.757,85,1.753,86,2.276,129,2.448,147,0.007,148,0.009,149,0.007,150,0.811,152,1.862,194,3.011,198,0.28,307,2.938,354,2.359,383,2.878,413,3.904,423,4.342,427,3.517,473,5.312,504,3.751,528,4.007,537,3.517,579,4.007,708,4.79,718,3.517,724,4.007,930,3.011,1028,4.007,1165,4.79,1177,4.79,1326,4.342,1342,4.79,1359,4.79,1399,4.658,1408,4.79,1409,5.471,1410,5.471,1411,5.471,1412,5.471,1413,5.471,1414,5.471,1415,5.471,1416,5.471,1417,5.471,1418,5.471,1419,5.471,1420,5.471,1421,5.471,1422,5.471,1423,4.79]],["title/miscellaneous/typealiases.html",[1321,2.123,1424,5.225]],["body/miscellaneous/typealiases.html",[6,2.345,29,0.836,40,0.012,42,1.395,103,2.188,113,1.099,147,0.008,148,0.009,149,0.008,198,0.203,264,1.411,276,0.53,312,2.841,319,2.345,320,2.841,321,3.652,322,3.652,323,2.841,324,2.62,325,3.652,327,2.726,329,2.726,334,2.726,345,2.726,346,2.965,347,3.652,358,2.522,366,2.965,368,3.256,369,4.009,381,2.965,384,2.965,386,3.103,393,4.463,1321,3.256,1323,4.129,1425,5.638,1426,6.942]],["title/miscellaneous/variables.html",[1083,4.147,1321,2.123]],["body/miscellaneous/variables.html",[0,2.337,10,3.054,14,2.471,15,2.419,24,1.503,29,0.536,37,0.928,40,0.012,42,1.289,45,1.802,46,3.592,74,2.712,84,2.601,85,1.797,86,1.503,133,2.601,140,1.821,147,0.005,148,0.007,149,0.005,150,0.766,198,0.291,201,4.812,264,0.735,272,2.198,276,0.531,277,2.471,299,3.825,300,3.801,301,2.226,302,2.639,304,3.616,305,3.139,306,2.982,307,2.226,308,3.31,309,3.139,311,2.471,389,1.617,395,2.647,407,2.647,411,1.68,413,1.901,426,3.478,428,2.869,429,3.319,430,2.869,527,2.647,589,2.647,590,4.411,610,4.098,611,2.869,631,2.471,632,3.165,633,2.869,634,4.098,635,3.165,671,3.782,801,2.869,812,4.098,1083,2.869,1269,3.165,1271,4.521,1273,3.165,1274,4.521,1281,3.165,1282,3.165,1284,4.521,1321,2.088,1323,4.411,1326,4.098,1427,3.615,1428,3.615,1429,3.615,1430,3.615,1431,6.57,1432,3.615,1433,5.163,1434,6.949,1435,5.163,1436,5.163,1437,3.615,1438,5.163,1439,3.615,1440,5.163,1441,3.615,1442,3.615]],["title/additional-documentation/tinynodes-library-docs.html",[24,1.164,50,0.952,317,1.206,492,1.798,1028,2.049]],["body/additional-documentation/tinynodes-library-docs.html",[24,2.717,40,0.01,85,1.543,147,0.009,148,0.01,149,0.009,494,4.464,737,3.036,1020,3.595,1024,5.183,1026,5.183,1048,5.719,1335,4.464,1443,6.531,1444,6.531]],["title/additional-documentation/tinynodes-library-docs/ngx-editorjs-readme.html",[50,0.952,85,0.661,198,0.101,317,1.206,1335,1.912]],["body/additional-documentation/tinynodes-library-docs/ngx-editorjs-readme.html",[0,2.234,1,2.336,13,0.349,14,1.606,15,1.862,16,1.74,18,1.721,19,0.912,40,0.012,42,0.436,43,0.735,45,1.032,47,2.906,58,0.643,59,2.398,61,0.732,68,0.334,69,0.573,74,1.981,84,2.336,85,0.555,86,2.196,88,2.058,89,1.357,103,0.912,113,0.734,128,1.879,129,1.669,138,1.136,144,1.092,145,1.357,147,0.003,148,0.005,149,0.003,150,0.909,151,1.606,152,0.8,154,0.944,155,0.944,156,1.862,157,0.882,164,2.906,175,2.268,179,2.461,183,3.266,184,1.865,185,1.721,197,2.549,198,0.286,215,1.606,221,0.972,224,0.751,234,0.853,241,1.687,264,0.478,272,1.429,275,1.354,279,1.357,280,1.352,282,1.879,283,3.608,287,1.608,289,0.993,290,2.784,291,1.803,292,1.482,294,1.051,295,2.155,301,1.013,302,1.498,306,1.357,307,2.276,308,2.901,314,1.799,323,1.184,326,1.013,328,1.551,330,1.013,354,2.276,355,1.293,362,1.357,370,1.293,378,1.293,389,2.362,396,2.906,397,3.68,398,1.865,399,2.96,400,1.865,401,2.96,402,2.96,408,1.865,411,1.734,413,1.962,414,1.865,415,1.865,416,1.721,417,3.68,418,3.049,419,1.865,420,1.511,425,2.819,427,2.981,442,1.184,469,2.819,471,2.058,473,2.398,492,1.511,493,1.879,494,3.17,497,2.732,500,1.606,501,1.721,504,2.552,511,2.058,526,1.721,537,3.394,538,1.606,571,1.865,572,1.865,573,1.606,574,1.865,592,1.865,593,3.266,594,3.266,598,3.266,599,1.865,613,1.721,633,2.96,640,2.96,661,1.865,671,1.721,716,2.058,717,3.17,718,1.511,734,2.553,735,1.184,736,2.96,737,1.092,795,1.357,797,1.429,798,2.154,799,1.357,835,2.058,842,2.058,851,1.511,922,1.511,925,1.865,936,2.398,963,2.398,972,3.939,974,2.96,977,2.058,982,2.058,984,2.398,1020,1.293,1028,3.396,1043,2.398,1066,2.058,1078,3.266,1084,2.058,1096,3.266,1183,1.865,1266,1.606,1332,2.058,1336,2.058,1368,2.058,1399,2.549,1423,3.266,1445,2.35,1446,2.35,1447,2.35,1448,2.35,1449,2.35,1450,2.35,1451,3.73,1452,2.058,1453,2.35,1454,5.279,1455,2.35,1456,5.279,1457,2.35,1458,2.35,1459,3.73,1460,2.35,1461,2.35,1462,3.73,1463,2.35,1464,3.266,1465,2.35,1466,4.637,1467,2.35,1468,2.35,1469,2.35,1470,2.35,1471,2.058,1472,2.35,1473,2.35,1474,2.35,1475,3.73,1476,2.35,1477,2.35,1478,2.35,1479,2.35,1480,2.35,1481,2.35,1482,2.35,1483,2.35,1484,2.058,1485,2.35]],["title/additional-documentation/tinynodes-library-docs/ngx-editorjs-readme/ngx-editorjs-changelog.html",[50,0.952,85,0.661,198,0.101,317,1.206,1020,1.54]],["body/additional-documentation/tinynodes-library-docs/ngx-editorjs-readme/ngx-editorjs-changelog.html",[0,2.112,7,2.369,9,0.152,15,1.565,17,3.721,40,0.007,43,0.768,45,1.59,47,2.996,69,0.541,85,0.92,86,2.264,103,1.512,128,2.743,129,2.435,138,1.884,144,1.811,147,0.005,148,0.007,149,0.005,150,0.931,164,2.144,171,2.853,197,1.62,198,0.267,221,0.816,224,1.245,234,1.414,257,0.403,264,0.792,275,1.414,280,1.829,282,2.743,290,2.632,295,2.53,301,1.68,302,3.114,307,2.347,319,1.62,320,1.963,324,3.533,326,2.929,328,1.62,330,1.68,355,2.996,366,3.301,389,1.743,396,3.453,411,1.811,418,3.144,425,3.31,427,2.504,442,2.743,469,3.31,473,2.504,492,4.595,494,3.721,504,2.144,527,2.853,588,2.25,631,2.663,694,5.391,713,3.411,717,2.663,718,2.504,724,2.853,893,4.596,1020,3.453,1023,3.092,1031,5.235,1043,4.595,1053,3.092,1067,3.411,1092,3.092,1183,3.092,1266,4.289,1298,4.766,1335,2.663,1373,4.766,1399,2.663,1452,3.411,1464,4.766,1471,6.789,1484,3.411,1486,3.411,1487,3.411,1488,3.411,1489,3.411,1490,3.411,1491,3.411,1492,3.411,1493,3.896,1494,6.258,1495,3.411,1496,3.896,1497,3.896,1498,3.411,1499,5.444,1500,3.896,1501,3.896,1502,6.275,1503,3.896,1504,3.896,1505,3.411,1506,3.896,1507,3.896,1508,3.896,1509,3.896,1510,3.896,1511,3.896,1512,3.896,1513,3.896,1514,3.896,1515,3.896,1516,3.896,1517,3.411,1518,3.896,1519,3.896,1520,3.896]],["title/additional-documentation/tinynodes-library-docs/ngx-editorjs-plugins-readme.html",[50,0.851,85,0.59,198,0.09,302,1.004,317,1.077,1335,1.708]],["body/additional-documentation/tinynodes-library-docs/ngx-editorjs-plugins-readme.html",[9,0.189,13,0.718,16,3.092,40,0.012,41,1.411,45,1.078,47,2.665,85,1.144,86,3.343,93,2.251,103,1.879,112,3.113,113,1.273,147,0.006,148,0.008,149,0.006,150,0.718,152,1.648,197,2.014,198,0.267,265,3.547,280,2.043,302,2.532,307,2.088,418,2.796,493,4.107,794,2.944,795,2.796,796,2.944,798,2.796,799,2.796,800,2.944,828,3.113,1399,4.309,1521,4.842,1522,4.842,1523,4.842,1524,4.842]],["title/additional-documentation/tinynodes-library-docs/ngx-editorjs-plugins-readme/ngx-editorjs-plugins-changelog.html",[50,0.851,85,0.59,198,0.09,302,1.004,317,1.077,1020,1.375]],["body/additional-documentation/tinynodes-library-docs/ngx-editorjs-plugins-readme/ngx-editorjs-plugins-changelog.html",[9,0.229,40,0.01,45,1.302,70,1.87,147,0.008,148,0.01,149,0.008,150,1.134,171,4.285,301,2.523,302,2.35,324,2.72,326,2.523,588,4.101,631,3.999,718,3.761,724,4.285,734,2.829,737,2.72,893,5.201,1020,3.909,1031,5.201,1043,4.565,1053,4.644,1081,5.123,1092,4.644,1486,5.123,1487,5.123,1488,5.123,1489,5.123,1490,5.123,1491,5.123,1492,5.123,1494,6.218,1495,5.123,1498,5.123,1505,5.123,1517,5.123,1525,5.851,1526,5.851]]],"invertedIndex":[["",{"_index":40,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"modules/ApplicationDataModule.html":{},"injectables/ApplicationQuery.html":{},"interfaces/ApplicationState.html":{},"injectables/ApplicationStore.html":{},"interfaces/BasePlugin.html":{},"interfaces/BasePlugin-1.html":{},"interfaces/Block.html":{},"interfaces/BlocksMap.html":{},"interfaces/ChangeMap.html":{},"classes/Changed.html":{},"interfaces/EditorJSConfig.html":{},"interfaces/EditorMap.html":{},"components/EditorPageComponent.html":{},"interfaces/Header.html":{},"interfaces/HeaderBlock.html":{},"interfaces/Image.html":{},"interfaces/ImageBlock.html":{},"interfaces/List.html":{},"interfaces/ListBlock.html":{},"modules/MaterialModule.html":{},"interfaces/MenuItem.html":{},"components/NavBarComponent.html":{},"components/NgxEditorJSComponent.html":{},"interfaces/NgxEditorJSConfig.html":{},"directives/NgxEditorJSDirective.html":{},"injectables/NgxEditorJSEffects.html":{},"modules/NgxEditorJSModule.html":{},"injectables/NgxEditorJSPluginService.html":{},"injectables/NgxEditorJSService.html":{},"modules/NgxEditorjsDemoModule.html":{},"modules/NgxEditorjsNgrxModule.html":{},"modules/NgxEditorjsPluginsModule.html":{},"classes/NotReady.html":{},"interfaces/Page.html":{},"interfaces/PageBlock.html":{},"components/PageContainerComponent.html":{},"modules/PageStoreModule.html":{},"injectables/PagesQuery.html":{},"injectables/PagesService.html":{},"interfaces/PagesState.html":{},"injectables/PagesStore.html":{},"interfaces/Paragraph.html":{},"interfaces/ParagraphBlock.html":{},"injectables/PluginCode.html":{},"modules/PluginCodeModule.html":{},"interfaces/PluginConfig.html":{},"interfaces/PluginConfig-1.html":{},"injectables/PluginHeader.html":{},"modules/PluginHeaderModule.html":{},"injectables/PluginImage.html":{},"modules/PluginImageModule.html":{},"injectables/PluginLink.html":{},"modules/PluginLinkModule.html":{},"injectables/PluginList.html":{},"modules/PluginListModule.html":{},"injectables/PluginMarker.html":{},"modules/PluginMarkerModule.html":{},"injectables/PluginParagraph.html":{},"modules/PluginParagraphModule.html":{},"injectables/PluginSimpleImage.html":{},"modules/PluginSimpleImageModule.html":{},"classes/Ready.html":{},"interfaces/ReadyMap.html":{},"classes/SaveEnd.html":{},"classes/SaveStart.html":{},"components/SidebarComponent.html":{},"interfaces/Tag.html":{},"interfaces/ToolSettingsMap.html":{},"interfaces/ToolSettingsMap-1.html":{},"changelog.html":{},"contributing.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"index.html":{},"license.html":{},"modules.html":{},"overview.html":{},"todo.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{},"additional-documentation/tinynodes-library-docs.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-readme.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-readme/ngx-editorjs-changelog.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-plugins-readme.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-plugins-readme/ngx-editorjs-plugins-changelog.html":{}}}],["0",{"_index":106,"title":{},"body":{"components/AppComponent.html":{},"components/NavBarComponent.html":{},"injectables/NgxEditorJSService.html":{},"coverage.html":{}}}],["0.8.26",{"_index":1320,"title":{},"body":{"dependencies.html":{}}}],["0/1",{"_index":1272,"title":{},"body":{"coverage.html":{}}}],["0/2",{"_index":1280,"title":{},"body":{"coverage.html":{}}}],["0/3",{"_index":1279,"title":{},"body":{"coverage.html":{}}}],["0/4",{"_index":1278,"title":{},"body":{"coverage.html":{}}}],["0/5",{"_index":1285,"title":{},"body":{"coverage.html":{}}}],["05",{"_index":1494,"title":{},"body":{"additional-documentation/tinynodes-library-docs/ngx-editorjs-readme/ngx-editorjs-changelog.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-plugins-readme/ngx-editorjs-plugins-changelog.html":{}}}],["1",{"_index":310,"title":{"interfaces/BasePlugin-1.html":{},"interfaces/PluginConfig-1.html":{},"interfaces/ToolSettingsMap-1.html":{}},"body":{"interfaces/Block.html":{},"interfaces/Header.html":{},"interfaces/HeaderBlock.html":{},"interfaces/Image.html":{},"interfaces/ImageBlock.html":{},"interfaces/List.html":{},"interfaces/ListBlock.html":{},"interfaces/Paragraph.html":{},"interfaces/ParagraphBlock.html":{},"overview.html":{}}}],["1.0.0",{"_index":1517,"title":{},"body":{"additional-documentation/tinynodes-library-docs/ngx-editorjs-readme/ngx-editorjs-changelog.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-plugins-readme/ngx-editorjs-plugins-changelog.html":{}}}],["1.0.4",{"_index":1308,"title":{},"body":{"dependencies.html":{}}}],["1.1.0",{"_index":1505,"title":{},"body":{"additional-documentation/tinynodes-library-docs/ngx-editorjs-readme/ngx-editorjs-changelog.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-plugins-readme/ngx-editorjs-plugins-changelog.html":{}}}],["1.1.1",{"_index":1501,"title":{},"body":{"additional-documentation/tinynodes-library-docs/ngx-editorjs-readme/ngx-editorjs-changelog.html":{}}}],["1.1.2",{"_index":1497,"title":{},"body":{"additional-documentation/tinynodes-library-docs/ngx-editorjs-readme/ngx-editorjs-changelog.html":{}}}],["1.2",{"_index":1035,"title":{},"body":{"changelog.html":{}}}],["1.2.0",{"_index":1493,"title":{},"body":{"additional-documentation/tinynodes-library-docs/ngx-editorjs-readme/ngx-editorjs-changelog.html":{}}}],["1.3.4",{"_index":1311,"title":{},"body":{"dependencies.html":{}}}],["1.4",{"_index":1262,"title":{},"body":{"contributing.html":{}}}],["1/1",{"_index":1275,"title":{},"body":{"coverage.html":{}}}],["10",{"_index":1502,"title":{},"body":{"additional-documentation/tinynodes-library-docs/ngx-editorjs-readme/ngx-editorjs-changelog.html":{}}}],["100",{"_index":90,"title":{},"body":{"components/AppComponent.html":{},"components/EditorPageComponent.html":{},"components/NgxEditorJSComponent.html":{},"components/PageContainerComponent.html":{},"coverage.html":{}}}],["100vh",{"_index":475,"title":{},"body":{"components/EditorPageComponent.html":{},"components/NgxEditorJSComponent.html":{},"components/PageContainerComponent.html":{}}}],["11",{"_index":1498,"title":{},"body":{"additional-documentation/tinynodes-library-docs/ngx-editorjs-readme/ngx-editorjs-changelog.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-plugins-readme/ngx-editorjs-plugins-changelog.html":{}}}],["12th",{"_index":1030,"title":{},"body":{"changelog.html":{}}}],["13",{"_index":1495,"title":{},"body":{"additional-documentation/tinynodes-library-docs/ngx-editorjs-readme/ngx-editorjs-changelog.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-plugins-readme/ngx-editorjs-plugins-changelog.html":{}}}],["15",{"_index":122,"title":{},"body":{"components/AppComponent.html":{},"components/NavBarComponent.html":{}}}],["16",{"_index":1404,"title":{},"body":{"overview.html":{}}}],["17",{"_index":1405,"title":{},"body":{"overview.html":{}}}],["1em",{"_index":522,"title":{},"body":{"components/NgxEditorJSComponent.html":{}}}],["2.0.8",{"_index":1316,"title":{},"body":{"dependencies.html":{}}}],["2.13.0",{"_index":1309,"title":{},"body":{"dependencies.html":{}}}],["2.2.3",{"_index":1310,"title":{},"body":{"dependencies.html":{}}}],["2.5.0",{"_index":1312,"title":{},"body":{"dependencies.html":{}}}],["2.5.4",{"_index":1314,"title":{},"body":{"dependencies.html":{}}}],["2/2",{"_index":1288,"title":{},"body":{"coverage.html":{}}}],["2/4",{"_index":1292,"title":{},"body":{"coverage.html":{}}}],["2019",{"_index":1031,"title":{},"body":{"changelog.html":{},"license.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-readme/ngx-editorjs-changelog.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-plugins-readme/ngx-editorjs-plugins-changelog.html":{}}}],["250px",{"_index":92,"title":{},"body":{"components/AppComponent.html":{}}}],["27",{"_index":1407,"title":{},"body":{"overview.html":{}}}],["2px",{"_index":518,"title":{},"body":{"components/NgxEditorJSComponent.html":{}}}],["3.0.2",{"_index":1307,"title":{},"body":{"dependencies.html":{}}}],["3/3",{"_index":1289,"title":{},"body":{"coverage.html":{}}}],["3/4",{"_index":1277,"title":{},"body":{"coverage.html":{}}}],["30px",{"_index":114,"title":{},"body":{"components/AppComponent.html":{},"components/NavBarComponent.html":{}}}],["4/10",{"_index":1287,"title":{},"body":{"coverage.html":{}}}],["40",{"_index":1286,"title":{},"body":{"coverage.html":{}}}],["5",{"_index":1406,"title":{},"body":{"overview.html":{}}}],["50",{"_index":1291,"title":{},"body":{"coverage.html":{}}}],["5px",{"_index":117,"title":{},"body":{"components/AppComponent.html":{},"components/NavBarComponent.html":{}}}],["6",{"_index":332,"title":{},"body":{"interfaces/Block.html":{},"interfaces/Header.html":{},"interfaces/HeaderBlock.html":{},"interfaces/Image.html":{},"interfaces/ImageBlock.html":{},"interfaces/List.html":{},"interfaces/ListBlock.html":{},"interfaces/Paragraph.html":{},"interfaces/ParagraphBlock.html":{},"overview.html":{}}}],["6.3.3",{"_index":1318,"title":{},"body":{"dependencies.html":{}}}],["6/6",{"_index":1290,"title":{},"body":{"coverage.html":{}}}],["7",{"_index":1333,"title":{},"body":{"index.html":{}}}],["7.0.0",{"_index":1304,"title":{},"body":{"dependencies.html":{}}}],["7.1.5",{"_index":1317,"title":{},"body":{"dependencies.html":{}}}],["7.2.15",{"_index":1300,"title":{},"body":{"dependencies.html":{}}}],["7.3.7",{"_index":1302,"title":{},"body":{"dependencies.html":{}}}],["7.4.0",{"_index":1313,"title":{},"body":{"dependencies.html":{}}}],["75",{"_index":1276,"title":{},"body":{"coverage.html":{}}}],["85",{"_index":125,"title":{},"body":{"components/AppComponent.html":{},"components/NavBarComponent.html":{}}}],["9/10",{"_index":1294,"title":{},"body":{"coverage.html":{}}}],["9/9",{"_index":1295,"title":{},"body":{"coverage.html":{}}}],["90",{"_index":1293,"title":{},"body":{"coverage.html":{}}}],["a:active",{"_index":99,"title":{},"body":{"components/AppComponent.html":{},"components/NavBarComponent.html":{}}}],["a:hover",{"_index":98,"title":{},"body":{"components/AppComponent.html":{},"components/NavBarComponent.html":{}}}],["above",{"_index":1370,"title":{},"body":{"license.html":{}}}],["abusive",{"_index":1227,"title":{},"body":{"contributing.html":{}}}],["acceptable",{"_index":1181,"title":{},"body":{"contributing.html":{}}}],["accepting",{"_index":1144,"title":{},"body":{"contributing.html":{}}}],["access",{"_index":510,"title":{},"body":{"components/NgxEditorJSComponent.html":{}}}],["accessors",{"_index":226,"title":{},"body":{"injectables/AppService.html":{},"components/EditorPageComponent.html":{},"directives/NgxEditorJSDirective.html":{},"injectables/NgxEditorJSPluginService.html":{},"components/PageContainerComponent.html":{},"injectables/PagesService.html":{}}}],["account",{"_index":1216,"title":{},"body":{"contributing.html":{}}}],["acting",{"_index":1217,"title":{},"body":{"contributing.html":{}}}],["action",{"_index":370,"title":{},"body":{"classes/Changed.html":{},"injectables/NgxEditorJSEffects.html":{},"classes/NotReady.html":{},"classes/Ready.html":{},"classes/SaveEnd.html":{},"classes/SaveStart.html":{},"contributing.html":{},"license.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-readme.html":{}}}],["action.payload.holder",{"_index":570,"title":{},"body":{"injectables/NgxEditorJSEffects.html":{}}}],["actions",{"_index":560,"title":{},"body":{"injectables/NgxEditorJSEffects.html":{}}}],["actions/ngx",{"_index":580,"title":{},"body":{"injectables/NgxEditorJSEffects.html":{}}}],["actual_component",{"_index":146,"title":{},"body":{"components/AppComponent.html":{},"components/EditorPageComponent.html":{},"components/NavBarComponent.html":{},"components/NgxEditorJSComponent.html":{},"components/PageContainerComponent.html":{},"components/SidebarComponent.html":{}}}],["adapted",{"_index":1260,"title":{},"body":{"contributing.html":{}}}],["add",{"_index":473,"title":{},"body":{"components/EditorPageComponent.html":{},"injectables/NgxEditorJSPluginService.html":{},"injectables/PagesService.html":{},"todo.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-readme.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-readme/ngx-editorjs-changelog.html":{}}}],["add(key",{"_index":654,"title":{},"body":{"injectables/NgxEditorJSPluginService.html":{}}}],["add(page",{"_index":885,"title":{},"body":{"injectables/PagesService.html":{}}}],["addblock",{"_index":880,"title":{},"body":{"injectables/PagesService.html":{}}}],["addblock(pageid",{"_index":887,"title":{},"body":{"injectables/PagesService.html":{}}}],["added",{"_index":324,"title":{},"body":{"interfaces/Block.html":{},"interfaces/Header.html":{},"interfaces/HeaderBlock.html":{},"interfaces/Image.html":{},"interfaces/ImageBlock.html":{},"interfaces/List.html":{},"interfaces/ListBlock.html":{},"injectables/PagesService.html":{},"interfaces/Paragraph.html":{},"interfaces/ParagraphBlock.html":{},"miscellaneous/typealiases.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-readme/ngx-editorjs-changelog.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-plugins-readme/ngx-editorjs-plugins-changelog.html":{}}}],["adding",{"_index":306,"title":{},"body":{"interfaces/BasePlugin.html":{},"interfaces/BasePlugin-1.html":{},"interfaces/PluginConfig.html":{},"interfaces/PluginConfig-1.html":{},"interfaces/ToolSettingsMap.html":{},"interfaces/ToolSettingsMap-1.html":{},"miscellaneous/variables.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-readme.html":{}}}],["additional",{"_index":317,"title":{"additional-documentation/tinynodes-library-docs.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-readme.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-readme/ngx-editorjs-changelog.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-plugins-readme.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-plugins-readme/ngx-editorjs-plugins-changelog.html":{}},"body":{"interfaces/Block.html":{},"interfaces/Header.html":{},"interfaces/HeaderBlock.html":{},"interfaces/Image.html":{},"interfaces/ImageBlock.html":{},"interfaces/List.html":{},"interfaces/ListBlock.html":{},"modules/NgxEditorjsPluginsModule.html":{},"interfaces/Paragraph.html":{},"interfaces/ParagraphBlock.html":{}}}],["address",{"_index":1171,"title":{},"body":{"contributing.html":{}}}],["adds",{"_index":710,"title":{},"body":{"injectables/NgxEditorJSService.html":{}}}],["adheres",{"_index":1491,"title":{},"body":{"additional-documentation/tinynodes-library-docs/ngx-editorjs-readme/ngx-editorjs-changelog.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-plugins-readme/ngx-editorjs-plugins-changelog.html":{}}}],["advances",{"_index":1159,"title":{},"body":{"contributing.html":{}}}],["aftercontentinit",{"_index":435,"title":{},"body":{"components/EditorPageComponent.html":{}}}],["afterviewinit",{"_index":531,"title":{},"body":{"directives/NgxEditorJSDirective.html":{}}}],["again",{"_index":1476,"title":{},"body":{"additional-documentation/tinynodes-library-docs/ngx-editorjs-readme.html":{}}}],["age",{"_index":1117,"title":{},"body":{"contributing.html":{}}}],["akitangdevtools",{"_index":195,"title":{},"body":{"modules/AppModule.html":{}}}],["akitangdevtools.forroot",{"_index":219,"title":{},"body":{"modules/AppModule.html":{}}}],["akitangrouterstoremodule",{"_index":190,"title":{},"body":{"modules/AppModule.html":{}}}],["akitangrouterstoremodule.forroot",{"_index":220,"title":{},"body":{"modules/AppModule.html":{}}}],["aliases",{"_index":1425,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["align",{"_index":118,"title":{},"body":{"components/AppComponent.html":{},"components/NavBarComponent.html":{},"components/NgxEditorJSComponent.html":{}}}],["aligned",{"_index":1195,"title":{},"body":{"contributing.html":{}}}],["allow",{"_index":281,"title":{},"body":{"interfaces/BasePlugin.html":{},"interfaces/BasePlugin-1.html":{},"modules/NgxEditorJSModule.html":{},"interfaces/PluginConfig.html":{},"interfaces/PluginConfig-1.html":{},"interfaces/ToolSettingsMap.html":{},"interfaces/ToolSettingsMap-1.html":{}}}],["allows",{"_index":417,"title":{},"body":{"interfaces/EditorJSConfig.html":{},"interfaces/NgxEditorJSConfig.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-readme.html":{}}}],["and/or",{"_index":1362,"title":{},"body":{"license.html":{}}}],["angular",{"_index":47,"title":{},"body":{"components/AppComponent.html":{},"directives/NgxEditorJSDirective.html":{},"modules/NgxEditorJSModule.html":{},"injectables/NgxEditorJSService.html":{},"changelog.html":{},"index.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-readme.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-readme/ngx-editorjs-changelog.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-plugins-readme.html":{}}}],["angular's",{"_index":1469,"title":{},"body":{"additional-documentation/tinynodes-library-docs/ngx-editorjs-readme.html":{}}}],["angular/animations",{"_index":1299,"title":{},"body":{"dependencies.html":{}}}],["angular/cdk",{"_index":1301,"title":{},"body":{"dependencies.html":{}}}],["angular/common",{"_index":604,"title":{},"body":{"modules/NgxEditorJSModule.html":{},"modules/NgxEditorjsDemoModule.html":{},"modules/NgxEditorjsNgrxModule.html":{},"modules/NgxEditorjsPluginsModule.html":{},"dependencies.html":{}}}],["angular/common/http",{"_index":178,"title":{},"body":{"modules/AppModule.html":{}}}],["angular/compiler",{"_index":1303,"title":{},"body":{"dependencies.html":{}}}],["angular/core",{"_index":61,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"modules/ApplicationDataModule.html":{},"injectables/ApplicationQuery.html":{},"injectables/ApplicationStore.html":{},"interfaces/BasePlugin.html":{},"interfaces/BasePlugin-1.html":{},"interfaces/EditorJSConfig.html":{},"components/EditorPageComponent.html":{},"modules/MaterialModule.html":{},"components/NavBarComponent.html":{},"components/NgxEditorJSComponent.html":{},"interfaces/NgxEditorJSConfig.html":{},"directives/NgxEditorJSDirective.html":{},"injectables/NgxEditorJSEffects.html":{},"modules/NgxEditorJSModule.html":{},"injectables/NgxEditorJSPluginService.html":{},"injectables/NgxEditorJSService.html":{},"modules/NgxEditorjsDemoModule.html":{},"modules/NgxEditorjsNgrxModule.html":{},"modules/NgxEditorjsPluginsModule.html":{},"components/PageContainerComponent.html":{},"modules/PageStoreModule.html":{},"injectables/PagesQuery.html":{},"injectables/PagesService.html":{},"interfaces/PagesState.html":{},"injectables/PagesStore.html":{},"injectables/PluginCode.html":{},"modules/PluginCodeModule.html":{},"interfaces/PluginConfig.html":{},"interfaces/PluginConfig-1.html":{},"injectables/PluginHeader.html":{},"modules/PluginHeaderModule.html":{},"injectables/PluginImage.html":{},"modules/PluginImageModule.html":{},"injectables/PluginLink.html":{},"modules/PluginLinkModule.html":{},"injectables/PluginList.html":{},"modules/PluginListModule.html":{},"injectables/PluginMarker.html":{},"modules/PluginMarkerModule.html":{},"injectables/PluginParagraph.html":{},"modules/PluginParagraphModule.html":{},"injectables/PluginSimpleImage.html":{},"modules/PluginSimpleImageModule.html":{},"components/SidebarComponent.html":{},"interfaces/ToolSettingsMap.html":{},"interfaces/ToolSettingsMap-1.html":{},"dependencies.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-readme.html":{}}}],["angular/flex",{"_index":181,"title":{},"body":{"modules/AppModule.html":{},"dependencies.html":{}}}],["angular/forms",{"_index":450,"title":{},"body":{"components/EditorPageComponent.html":{},"modules/NgxEditorjsDemoModule.html":{},"dependencies.html":{}}}],["angular/material",{"_index":62,"title":{},"body":{"components/AppComponent.html":{},"modules/MaterialModule.html":{},"modules/NgxEditorjsDemoModule.html":{},"components/SidebarComponent.html":{},"dependencies.html":{}}}],["angular/platform",{"_index":184,"title":{},"body":{"modules/AppModule.html":{},"dependencies.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-readme.html":{}}}],["angular/router",{"_index":189,"title":{},"body":{"modules/AppModule.html":{},"interfaces/ApplicationState.html":{},"interfaces/MenuItem.html":{},"modules/NgxEditorjsDemoModule.html":{},"dependencies.html":{}}}],["aot",{"_index":1464,"title":{},"body":{"additional-documentation/tinynodes-library-docs/ngx-editorjs-readme.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-readme/ngx-editorjs-changelog.html":{}}}],["api",{"_index":735,"title":{},"body":{"injectables/NgxEditorJSService.html":{},"modules/PluginCodeModule.html":{},"modules/PluginHeaderModule.html":{},"modules/PluginImageModule.html":{},"modules/PluginLinkModule.html":{},"modules/PluginListModule.html":{},"modules/PluginMarkerModule.html":{},"modules/PluginParagraphModule.html":{},"modules/PluginSimpleImageModule.html":{},"index.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-readme.html":{}}}],["api](https://editorjs.io/api",{"_index":770,"title":{},"body":{"injectables/NgxEditorJSService.html":{}}}],["app",{"_index":44,"title":{},"body":{"components/AppComponent.html":{},"components/NavBarComponent.html":{},"modules/NgxEditorJSModule.html":{},"components/SidebarComponent.html":{},"changelog.html":{}}}],["app.component",{"_index":1455,"title":{},"body":{"additional-documentation/tinynodes-library-docs/ngx-editorjs-readme.html":{}}}],["app.component.css",{"_index":26,"title":{},"body":{"components/AppComponent.html":{}}}],["app.component.html",{"_index":28,"title":{},"body":{"components/AppComponent.html":{}}}],["appcomponent",{"_index":1,"title":{"components/AppComponent.html":{}},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"components/EditorPageComponent.html":{},"components/NavBarComponent.html":{},"components/NgxEditorJSComponent.html":{},"components/PageContainerComponent.html":{},"components/SidebarComponent.html":{},"coverage.html":{},"overview.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-readme.html":{}}}],["appear",{"_index":472,"title":{},"body":{"components/EditorPageComponent.html":{}}}],["appearance",{"_index":1127,"title":{},"body":{"contributing.html":{}}}],["application",{"_index":15,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"injectables/ApplicationStore.html":{},"interfaces/BasePlugin.html":{},"interfaces/BasePlugin-1.html":{},"components/NgxEditorJSComponent.html":{},"modules/NgxEditorJSModule.html":{},"injectables/NgxEditorJSPluginService.html":{},"interfaces/PluginConfig.html":{},"interfaces/PluginConfig-1.html":{},"interfaces/ToolSettingsMap.html":{},"interfaces/ToolSettingsMap-1.html":{},"miscellaneous/functions.html":{},"index.html":{},"miscellaneous/variables.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-readme.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-readme/ngx-editorjs-changelog.html":{}}}],["application.model",{"_index":254,"title":{},"body":{"injectables/ApplicationQuery.html":{},"injectables/ApplicationStore.html":{}}}],["application.query",{"_index":238,"title":{},"body":{"injectables/AppService.html":{},"modules/ApplicationDataModule.html":{}}}],["application.service",{"_index":248,"title":{},"body":{"modules/ApplicationDataModule.html":{}}}],["application.store",{"_index":239,"title":{},"body":{"injectables/AppService.html":{},"modules/ApplicationDataModule.html":{},"injectables/ApplicationQuery.html":{}}}],["applicationdatamodule",{"_index":162,"title":{"modules/ApplicationDataModule.html":{}},"body":{"modules/AppModule.html":{},"modules/ApplicationDataModule.html":{},"modules.html":{},"overview.html":{}}}],["applicationquery",{"_index":229,"title":{"injectables/ApplicationQuery.html":{}},"body":{"injectables/AppService.html":{},"modules/ApplicationDataModule.html":{},"injectables/ApplicationQuery.html":{},"coverage.html":{},"overview.html":{}}}],["applicationstate",{"_index":253,"title":{"interfaces/ApplicationState.html":{}},"body":{"injectables/ApplicationQuery.html":{},"interfaces/ApplicationState.html":{},"injectables/ApplicationStore.html":{},"interfaces/MenuItem.html":{},"coverage.html":{}}}],["applicationstore",{"_index":230,"title":{"injectables/ApplicationStore.html":{}},"body":{"injectables/AppService.html":{},"modules/ApplicationDataModule.html":{},"injectables/ApplicationQuery.html":{},"injectables/ApplicationStore.html":{},"coverage.html":{},"overview.html":{}}}],["applies",{"_index":1206,"title":{},"body":{"contributing.html":{}}}],["appmodule",{"_index":151,"title":{"modules/AppModule.html":{}},"body":{"modules/AppModule.html":{},"modules.html":{},"overview.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-readme.html":{}}}],["appointed",{"_index":1218,"title":{},"body":{"contributing.html":{}}}],["appropriate",{"_index":1184,"title":{},"body":{"contributing.html":{}}}],["approutes",{"_index":1274,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["apps/.../app.po.ts",{"_index":1430,"title":{},"body":{"miscellaneous/variables.html":{}}}],["apps/.../app.routes.ts",{"_index":1427,"title":{},"body":{"miscellaneous/variables.html":{}}}],["apps/.../environment.prod.ts",{"_index":1428,"title":{},"body":{"miscellaneous/variables.html":{}}}],["apps/.../environment.ts",{"_index":1429,"title":{},"body":{"miscellaneous/variables.html":{}}}],["apps/ngx",{"_index":10,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"modules/ApplicationDataModule.html":{},"injectables/ApplicationQuery.html":{},"interfaces/ApplicationState.html":{},"injectables/ApplicationStore.html":{},"modules/MaterialModule.html":{},"interfaces/MenuItem.html":{},"components/NavBarComponent.html":{},"components/SidebarComponent.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["appservice",{"_index":36,"title":{"injectables/AppService.html":{}},"body":{"components/AppComponent.html":{},"injectables/AppService.html":{},"modules/ApplicationDataModule.html":{},"components/NavBarComponent.html":{},"components/SidebarComponent.html":{},"coverage.html":{},"overview.html":{}}}],["area",{"_index":416,"title":{},"body":{"interfaces/EditorJSConfig.html":{},"components/EditorPageComponent.html":{},"interfaces/NgxEditorJSConfig.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-readme.html":{}}}],["arising",{"_index":1396,"title":{},"body":{"license.html":{}}}],["array",{"_index":661,"title":{},"body":{"injectables/NgxEditorJSPluginService.html":{},"injectables/NgxEditorJSService.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-readme.html":{}}}],["arrayadd",{"_index":903,"title":{},"body":{"injectables/PagesService.html":{}}}],["arrayadd(entity.blocks",{"_index":915,"title":{},"body":{"injectables/PagesService.html":{}}}],["arrayremove",{"_index":904,"title":{},"body":{"injectables/PagesService.html":{}}}],["arrayremove(entity.blocks",{"_index":916,"title":{},"body":{"injectables/PagesService.html":{}}}],["associated",{"_index":1353,"title":{},"body":{"license.html":{}}}],["attach",{"_index":527,"title":{},"body":{"directives/NgxEditorJSDirective.html":{},"modules/NgxEditorJSModule.html":{},"miscellaneous/variables.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-readme/ngx-editorjs-changelog.html":{}}}],["attached",{"_index":1514,"title":{},"body":{"additional-documentation/tinynodes-library-docs/ngx-editorjs-readme/ngx-editorjs-changelog.html":{}}}],["attacks",{"_index":1164,"title":{},"body":{"contributing.html":{}}}],["attention",{"_index":1158,"title":{},"body":{"contributing.html":{}}}],["attributes",{"_index":498,"title":{},"body":{"components/NgxEditorJSComponent.html":{}}}],["attribution",{"_index":1259,"title":{},"body":{"contributing.html":{}}}],["authors",{"_index":1387,"title":{},"body":{"license.html":{}}}],["auto",{"_index":115,"title":{},"body":{"components/AppComponent.html":{},"components/NavBarComponent.html":{}}}],["autofocus",{"_index":397,"title":{},"body":{"interfaces/EditorJSConfig.html":{},"interfaces/NgxEditorJSConfig.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-readme.html":{}}}],["autofocused",{"_index":403,"title":{},"body":{"interfaces/EditorJSConfig.html":{},"interfaces/NgxEditorJSConfig.html":{}}}],["autosave",{"_index":708,"title":{},"body":{"injectables/NgxEditorJSService.html":{},"todo.html":{}}}],["available",{"_index":319,"title":{},"body":{"interfaces/Block.html":{},"interfaces/Header.html":{},"interfaces/HeaderBlock.html":{},"interfaces/Image.html":{},"interfaces/ImageBlock.html":{},"interfaces/List.html":{},"interfaces/ListBlock.html":{},"components/NgxEditorJSComponent.html":{},"injectables/NgxEditorJSPluginService.html":{},"injectables/PagesService.html":{},"interfaces/Paragraph.html":{},"interfaces/ParagraphBlock.html":{},"contributing.html":{},"modules.html":{},"miscellaneous/typealiases.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-readme/ngx-editorjs-changelog.html":{}}}],["await",{"_index":780,"title":{},"body":{"injectables/NgxEditorJSService.html":{}}}],["back",{"_index":724,"title":{},"body":{"injectables/NgxEditorJSService.html":{},"todo.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-readme/ngx-editorjs-changelog.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-plugins-readme/ngx-editorjs-plugins-changelog.html":{}}}],["background",{"_index":341,"title":{},"body":{"interfaces/Block.html":{},"interfaces/Header.html":{},"interfaces/HeaderBlock.html":{},"interfaces/Image.html":{},"interfaces/ImageBlock.html":{},"interfaces/List.html":{},"interfaces/ListBlock.html":{},"interfaces/Paragraph.html":{},"interfaces/ParagraphBlock.html":{}}}],["ban",{"_index":1196,"title":{},"body":{"contributing.html":{}}}],["bar",{"_index":484,"title":{},"body":{"components/NavBarComponent.html":{}}}],["bar'},{'name",{"_index":137,"title":{},"body":{"components/AppComponent.html":{},"components/EditorPageComponent.html":{},"components/NavBarComponent.html":{},"components/NgxEditorJSComponent.html":{},"components/PageContainerComponent.html":{},"components/SidebarComponent.html":{}}}],["bar.component",{"_index":207,"title":{},"body":{"modules/AppModule.html":{}}}],["bar.component.html",{"_index":486,"title":{},"body":{"components/NavBarComponent.html":{}}}],["bar.component.scss",{"_index":485,"title":{},"body":{"components/NavBarComponent.html":{}}}],["bar.component.ts",{"_index":483,"title":{},"body":{"components/NavBarComponent.html":{},"coverage.html":{}}}],["bar.component.ts:11",{"_index":487,"title":{},"body":{"components/NavBarComponent.html":{}}}],["bar.component.ts:15",{"_index":489,"title":{},"body":{"components/NavBarComponent.html":{}}}],["bar/nav",{"_index":206,"title":{},"body":{"modules/AppModule.html":{},"components/NavBarComponent.html":{},"coverage.html":{}}}],["base",{"_index":313,"title":{},"body":{"interfaces/Block.html":{}}}],["based",{"_index":1489,"title":{},"body":{"additional-documentation/tinynodes-library-docs/ngx-editorjs-readme/ngx-editorjs-changelog.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-plugins-readme/ngx-editorjs-plugins-changelog.html":{}}}],["baseplugin",{"_index":275,"title":{"interfaces/BasePlugin.html":{},"interfaces/BasePlugin-1.html":{}},"body":{"interfaces/BasePlugin.html":{},"interfaces/BasePlugin-1.html":{},"injectables/NgxEditorJSPluginService.html":{},"injectables/PluginCode.html":{},"interfaces/PluginConfig.html":{},"interfaces/PluginConfig-1.html":{},"injectables/PluginHeader.html":{},"injectables/PluginImage.html":{},"injectables/PluginLink.html":{},"injectables/PluginList.html":{},"injectables/PluginMarker.html":{},"injectables/PluginParagraph.html":{},"injectables/PluginSimpleImage.html":{},"interfaces/ToolSettingsMap.html":{},"interfaces/ToolSettingsMap-1.html":{},"coverage.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-readme.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-readme/ngx-editorjs-changelog.html":{}}}],["bash",{"_index":1449,"title":{},"body":{"additional-documentation/tinynodes-library-docs/ngx-editorjs-readme.html":{}}}],["basic",{"_index":346,"title":{},"body":{"interfaces/Block.html":{},"interfaces/Header.html":{},"interfaces/HeaderBlock.html":{},"interfaces/Image.html":{},"interfaces/ImageBlock.html":{},"interfaces/List.html":{},"interfaces/ListBlock.html":{},"interfaces/Paragraph.html":{},"interfaces/ParagraphBlock.html":{},"miscellaneous/typealiases.html":{}}}],["before",{"_index":714,"title":{},"body":{"injectables/NgxEditorJSService.html":{},"contributing.html":{}}}],["behavior",{"_index":1133,"title":{},"body":{"contributing.html":{}}}],["behaviors",{"_index":1200,"title":{},"body":{"contributing.html":{}}}],["behaviorsubject",{"_index":351,"title":{},"body":{"interfaces/BlocksMap.html":{},"interfaces/ChangeMap.html":{},"interfaces/EditorMap.html":{},"injectables/NgxEditorJSService.html":{},"interfaces/ReadyMap.html":{}}}],["behaviorsubject(0",{"_index":760,"title":{},"body":{"injectables/NgxEditorJSService.html":{}}}],["behaviorsubject(false",{"_index":757,"title":{},"body":{"injectables/NgxEditorJSService.html":{}}}],["being",{"_index":1138,"title":{},"body":{"contributing.html":{}}}],["below",{"_index":471,"title":{},"body":{"components/EditorPageComponent.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-readme.html":{}}}],["best",{"_index":1148,"title":{},"body":{"contributing.html":{}}}],["beta.24",{"_index":1305,"title":{},"body":{"dependencies.html":{}}}],["block",{"_index":113,"title":{"interfaces/Block.html":{}},"body":{"components/AppComponent.html":{},"interfaces/Block.html":{},"interfaces/BlocksMap.html":{},"interfaces/ChangeMap.html":{},"interfaces/EditorJSConfig.html":{},"interfaces/EditorMap.html":{},"components/EditorPageComponent.html":{},"interfaces/Header.html":{},"interfaces/HeaderBlock.html":{},"interfaces/Image.html":{},"interfaces/ImageBlock.html":{},"interfaces/List.html":{},"interfaces/ListBlock.html":{},"components/NavBarComponent.html":{},"components/NgxEditorJSComponent.html":{},"interfaces/NgxEditorJSConfig.html":{},"directives/NgxEditorJSDirective.html":{},"injectables/NgxEditorJSEffects.html":{},"injectables/NgxEditorJSService.html":{},"modules/NgxEditorjsPluginsModule.html":{},"interfaces/Page.html":{},"interfaces/PageBlock.html":{},"injectables/PagesService.html":{},"interfaces/Paragraph.html":{},"interfaces/ParagraphBlock.html":{},"injectables/PluginCode.html":{},"modules/PluginCodeModule.html":{},"injectables/PluginHeader.html":{},"modules/PluginHeaderModule.html":{},"injectables/PluginImage.html":{},"modules/PluginImageModule.html":{},"injectables/PluginLink.html":{},"modules/PluginLinkModule.html":{},"injectables/PluginList.html":{},"modules/PluginListModule.html":{},"injectables/PluginParagraph.html":{},"modules/PluginParagraphModule.html":{},"injectables/PluginSimpleImage.html":{},"modules/PluginSimpleImageModule.html":{},"interfaces/ReadyMap.html":{},"interfaces/Tag.html":{},"changelog.html":{},"coverage.html":{},"miscellaneous/typealiases.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-readme.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-plugins-readme.html":{}}}],["block.id",{"_index":917,"title":{},"body":{"injectables/PagesService.html":{}}}],["blocks",{"_index":354,"title":{},"body":{"interfaces/BlocksMap.html":{},"interfaces/ChangeMap.html":{},"interfaces/EditorMap.html":{},"components/EditorPageComponent.html":{},"components/NgxEditorJSComponent.html":{},"directives/NgxEditorJSDirective.html":{},"injectables/NgxEditorJSEffects.html":{},"injectables/NgxEditorJSService.html":{},"interfaces/Page.html":{},"interfaces/PageBlock.html":{},"injectables/PagesService.html":{},"interfaces/ReadyMap.html":{},"interfaces/Tag.html":{},"todo.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-readme.html":{}}}],["blocks.subscribe",{"_index":569,"title":{},"body":{"injectables/NgxEditorJSEffects.html":{}}}],["blocksmap",{"_index":348,"title":{"interfaces/BlocksMap.html":{}},"body":{"interfaces/BlocksMap.html":{},"interfaces/ChangeMap.html":{},"interfaces/EditorMap.html":{},"injectables/NgxEditorJSService.html":{},"interfaces/ReadyMap.html":{},"coverage.html":{}}}],["blocktypes",{"_index":347,"title":{},"body":{"interfaces/Block.html":{},"interfaces/Header.html":{},"interfaces/HeaderBlock.html":{},"interfaces/Image.html":{},"interfaces/ImageBlock.html":{},"interfaces/List.html":{},"interfaces/ListBlock.html":{},"interfaces/Paragraph.html":{},"interfaces/ParagraphBlock.html":{},"miscellaneous/typealiases.html":{}}}],["body",{"_index":1118,"title":{},"body":{"contributing.html":{}}}],["boolean",{"_index":261,"title":{},"body":{"interfaces/ApplicationState.html":{},"interfaces/Block.html":{},"interfaces/BlocksMap.html":{},"interfaces/ChangeMap.html":{},"interfaces/EditorJSConfig.html":{},"interfaces/EditorMap.html":{},"interfaces/Header.html":{},"interfaces/HeaderBlock.html":{},"interfaces/Image.html":{},"interfaces/ImageBlock.html":{},"interfaces/List.html":{},"interfaces/ListBlock.html":{},"interfaces/MenuItem.html":{},"interfaces/NgxEditorJSConfig.html":{},"interfaces/Paragraph.html":{},"interfaces/ParagraphBlock.html":{},"interfaces/ReadyMap.html":{}}}],["bootstrap",{"_index":155,"title":{},"body":{"modules/AppModule.html":{},"modules/ApplicationDataModule.html":{},"modules/NgxEditorJSModule.html":{},"modules/NgxEditorjsDemoModule.html":{},"modules/NgxEditorjsNgrxModule.html":{},"modules/NgxEditorjsPluginsModule.html":{},"modules/PageStoreModule.html":{},"modules/PluginCodeModule.html":{},"modules/PluginHeaderModule.html":{},"modules/PluginImageModule.html":{},"modules/PluginLinkModule.html":{},"modules/PluginListModule.html":{},"modules/PluginMarkerModule.html":{},"modules/PluginParagraphModule.html":{},"modules/PluginSimpleImageModule.html":{},"overview.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-readme.html":{}}}],["border",{"_index":338,"title":{},"body":{"interfaces/Block.html":{},"interfaces/Header.html":{},"interfaces/HeaderBlock.html":{},"interfaces/Image.html":{},"interfaces/ImageBlock.html":{},"interfaces/List.html":{},"interfaces/ListBlock.html":{},"components/NgxEditorJSComponent.html":{},"interfaces/Paragraph.html":{},"interfaces/ParagraphBlock.html":{}}}],["both",{"_index":1207,"title":{},"body":{"contributing.html":{}}}],["bottom",{"_index":415,"title":{},"body":{"interfaces/EditorJSConfig.html":{},"interfaces/NgxEditorJSConfig.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-readme.html":{}}}],["break",{"_index":1050,"title":{},"body":{"changelog.html":{}}}],["browse",{"_index":1401,"title":{},"body":{"modules.html":{}}}],["browser",{"_index":185,"title":{},"body":{"modules/AppModule.html":{},"dependencies.html":{},"modules.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-readme.html":{}}}],["browser/animations",{"_index":187,"title":{},"body":{"modules/AppModule.html":{}}}],["browseranimationsmodule",{"_index":186,"title":{},"body":{"modules/AppModule.html":{}}}],["browsermodule",{"_index":183,"title":{},"body":{"modules/AppModule.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-readme.html":{}}}],["bug",{"_index":1040,"title":{},"body":{"changelog.html":{}}}],["build",{"_index":1038,"title":{},"body":{"changelog.html":{},"contributing.html":{}}}],["builds",{"_index":170,"title":{},"body":{"modules/AppModule.html":{}}}],["bundled",{"_index":1470,"title":{},"body":{"additional-documentation/tinynodes-library-docs/ngx-editorjs-readme.html":{}}}],["calling",{"_index":741,"title":{},"body":{"injectables/NgxEditorJSService.html":{}}}],["calls",{"_index":723,"title":{},"body":{"injectables/NgxEditorJSService.html":{}}}],["caption",{"_index":337,"title":{},"body":{"interfaces/Block.html":{},"interfaces/Header.html":{},"interfaces/HeaderBlock.html":{},"interfaces/Image.html":{},"interfaces/ImageBlock.html":{},"interfaces/List.html":{},"interfaces/ListBlock.html":{},"interfaces/Paragraph.html":{},"interfaces/ParagraphBlock.html":{}}}],["center",{"_index":119,"title":{},"body":{"components/AppComponent.html":{},"components/NavBarComponent.html":{}}}],["change",{"_index":363,"title":{},"body":{"interfaces/BlocksMap.html":{},"interfaces/ChangeMap.html":{},"interfaces/EditorMap.html":{},"injectables/NgxEditorJSService.html":{},"interfaces/ReadyMap.html":{},"changelog.html":{},"contributing.html":{}}}],["changed",{"_index":366,"title":{"classes/Changed.html":{}},"body":{"classes/Changed.html":{},"classes/NotReady.html":{},"classes/Ready.html":{},"classes/SaveEnd.html":{},"classes/SaveStart.html":{},"coverage.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/typealiases.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-readme/ngx-editorjs-changelog.html":{}}}],["changelog",{"_index":1020,"title":{"changelog.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-readme/ngx-editorjs-changelog.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-plugins-readme/ngx-editorjs-plugins-changelog.html":{}},"body":{"changelog.html":{},"index.html":{},"additional-documentation/tinynodes-library-docs.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-readme.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-readme/ngx-editorjs-changelog.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-plugins-readme/ngx-editorjs-plugins-changelog.html":{}}}],["changelog.md",{"_index":1504,"title":{},"body":{"additional-documentation/tinynodes-library-docs/ngx-editorjs-readme/ngx-editorjs-changelog.html":{}}}],["changelogs",{"_index":1025,"title":{},"body":{"changelog.html":{}}}],["changemap",{"_index":364,"title":{"interfaces/ChangeMap.html":{}},"body":{"interfaces/BlocksMap.html":{},"interfaces/ChangeMap.html":{},"interfaces/EditorMap.html":{},"injectables/NgxEditorJSService.html":{},"interfaces/ReadyMap.html":{},"coverage.html":{}}}],["changes",{"_index":718,"title":{},"body":{"injectables/NgxEditorJSService.html":{},"contributing.html":{},"todo.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-readme.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-readme/ngx-editorjs-changelog.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-plugins-readme/ngx-editorjs-plugins-changelog.html":{}}}],["changes.blocks",{"_index":548,"title":{},"body":{"directives/NgxEditorJSDirective.html":{}}}],["changes.blocks.currentvalue",{"_index":551,"title":{},"body":{"directives/NgxEditorJSDirective.html":{}}}],["changes.blocks.firstchange",{"_index":549,"title":{},"body":{"directives/NgxEditorJSDirective.html":{}}}],["charge",{"_index":1348,"title":{},"body":{"license.html":{}}}],["ci",{"_index":1410,"title":{},"body":{"todo.html":{}}}],["circumstances",{"_index":1239,"title":{},"body":{"contributing.html":{}}}],["claim",{"_index":1390,"title":{},"body":{"license.html":{}}}],["clarified",{"_index":1225,"title":{},"body":{"contributing.html":{}}}],["clarifying",{"_index":1180,"title":{},"body":{"contributing.html":{}}}],["class",{"_index":69,"title":{"classes/Changed.html":{},"classes/NotReady.html":{},"classes/Ready.html":{},"classes/SaveEnd.html":{},"classes/SaveStart.html":{}},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"modules/ApplicationDataModule.html":{},"injectables/ApplicationQuery.html":{},"injectables/ApplicationStore.html":{},"interfaces/BasePlugin.html":{},"interfaces/BasePlugin-1.html":{},"classes/Changed.html":{},"components/EditorPageComponent.html":{},"modules/MaterialModule.html":{},"components/NavBarComponent.html":{},"components/NgxEditorJSComponent.html":{},"directives/NgxEditorJSDirective.html":{},"injectables/NgxEditorJSEffects.html":{},"modules/NgxEditorJSModule.html":{},"injectables/NgxEditorJSPluginService.html":{},"injectables/NgxEditorJSService.html":{},"modules/NgxEditorjsDemoModule.html":{},"modules/NgxEditorjsNgrxModule.html":{},"modules/NgxEditorjsPluginsModule.html":{},"classes/NotReady.html":{},"components/PageContainerComponent.html":{},"modules/PageStoreModule.html":{},"injectables/PagesQuery.html":{},"injectables/PagesService.html":{},"interfaces/PagesState.html":{},"injectables/PagesStore.html":{},"injectables/PluginCode.html":{},"modules/PluginCodeModule.html":{},"interfaces/PluginConfig.html":{},"interfaces/PluginConfig-1.html":{},"injectables/PluginHeader.html":{},"modules/PluginHeaderModule.html":{},"injectables/PluginImage.html":{},"modules/PluginImageModule.html":{},"injectables/PluginLink.html":{},"modules/PluginLinkModule.html":{},"injectables/PluginList.html":{},"modules/PluginListModule.html":{},"injectables/PluginMarker.html":{},"modules/PluginMarkerModule.html":{},"injectables/PluginParagraph.html":{},"modules/PluginParagraphModule.html":{},"injectables/PluginSimpleImage.html":{},"modules/PluginSimpleImageModule.html":{},"classes/Ready.html":{},"classes/SaveEnd.html":{},"classes/SaveStart.html":{},"components/SidebarComponent.html":{},"interfaces/ToolSettingsMap.html":{},"interfaces/ToolSettingsMap-1.html":{},"coverage.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-readme.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-readme/ngx-editorjs-changelog.html":{}}}],["classes",{"_index":367,"title":{},"body":{"classes/Changed.html":{},"classes/NotReady.html":{},"classes/Ready.html":{},"classes/SaveEnd.html":{},"classes/SaveStart.html":{},"overview.html":{}}}],["clean",{"_index":712,"title":{},"body":{"injectables/NgxEditorJSService.html":{}}}],["click",{"_index":470,"title":{},"body":{"components/EditorPageComponent.html":{}}}],["cluster_applicationdatamodule",{"_index":245,"title":{},"body":{"modules/ApplicationDataModule.html":{},"overview.html":{}}}],["cluster_applicationdatamodule_providers",{"_index":246,"title":{},"body":{"modules/ApplicationDataModule.html":{},"overview.html":{}}}],["cluster_appmodule",{"_index":158,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_appmodule_bootstrap",{"_index":161,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_appmodule_declarations",{"_index":159,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_appmodule_imports",{"_index":160,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_ngxeditorjsdemomodule",{"_index":789,"title":{},"body":{"modules/NgxEditorjsDemoModule.html":{},"overview.html":{}}}],["cluster_ngxeditorjsdemomodule_declarations",{"_index":790,"title":{},"body":{"modules/NgxEditorjsDemoModule.html":{},"overview.html":{}}}],["cluster_ngxeditorjsdemomodule_exports",{"_index":792,"title":{},"body":{"modules/NgxEditorjsDemoModule.html":{},"overview.html":{}}}],["cluster_ngxeditorjsdemomodule_imports",{"_index":791,"title":{},"body":{"modules/NgxEditorjsDemoModule.html":{},"overview.html":{}}}],["cluster_ngxeditorjsmodule",{"_index":584,"title":{},"body":{"modules/NgxEditorJSModule.html":{},"overview.html":{}}}],["cluster_ngxeditorjsmodule_declarations",{"_index":585,"title":{},"body":{"modules/NgxEditorJSModule.html":{},"overview.html":{}}}],["cluster_ngxeditorjsmodule_exports",{"_index":586,"title":{},"body":{"modules/NgxEditorJSModule.html":{},"overview.html":{}}}],["cluster_ngxeditorjsmodule_providers",{"_index":587,"title":{},"body":{"modules/NgxEditorJSModule.html":{},"overview.html":{}}}],["cluster_ngxeditorjsngrxmodule",{"_index":818,"title":{},"body":{"modules/NgxEditorjsNgrxModule.html":{},"overview.html":{}}}],["cluster_ngxeditorjsngrxmodule_imports",{"_index":819,"title":{},"body":{"modules/NgxEditorjsNgrxModule.html":{}}}],["cluster_ngxeditorjspluginsmodule",{"_index":825,"title":{},"body":{"modules/NgxEditorjsPluginsModule.html":{},"overview.html":{}}}],["cluster_ngxeditorjspluginsmodule_exports",{"_index":827,"title":{},"body":{"modules/NgxEditorjsPluginsModule.html":{},"overview.html":{}}}],["cluster_ngxeditorjspluginsmodule_imports",{"_index":826,"title":{},"body":{"modules/NgxEditorjsPluginsModule.html":{},"overview.html":{}}}],["cluster_pagestoremodule",{"_index":866,"title":{},"body":{"modules/PageStoreModule.html":{},"overview.html":{}}}],["cluster_pagestoremodule_providers",{"_index":867,"title":{},"body":{"modules/PageStoreModule.html":{},"overview.html":{}}}],["cluster_plugincodemodule",{"_index":927,"title":{},"body":{"modules/PluginCodeModule.html":{},"overview.html":{}}}],["cluster_plugincodemodule_providers",{"_index":928,"title":{},"body":{"modules/PluginCodeModule.html":{},"overview.html":{}}}],["cluster_pluginheadermodule",{"_index":940,"title":{},"body":{"modules/PluginHeaderModule.html":{},"overview.html":{}}}],["cluster_pluginheadermodule_providers",{"_index":941,"title":{},"body":{"modules/PluginHeaderModule.html":{},"overview.html":{}}}],["cluster_pluginimagemodule",{"_index":949,"title":{},"body":{"modules/PluginImageModule.html":{},"overview.html":{}}}],["cluster_pluginimagemodule_providers",{"_index":950,"title":{},"body":{"modules/PluginImageModule.html":{},"overview.html":{}}}],["cluster_pluginlinkmodule",{"_index":958,"title":{},"body":{"modules/PluginLinkModule.html":{},"overview.html":{}}}],["cluster_pluginlinkmodule_providers",{"_index":959,"title":{},"body":{"modules/PluginLinkModule.html":{},"overview.html":{}}}],["cluster_pluginlistmodule",{"_index":967,"title":{},"body":{"modules/PluginListModule.html":{},"overview.html":{}}}],["cluster_pluginlistmodule_providers",{"_index":968,"title":{},"body":{"modules/PluginListModule.html":{},"overview.html":{}}}],["cluster_pluginmarkermodule",{"_index":979,"title":{},"body":{"modules/PluginMarkerModule.html":{},"overview.html":{}}}],["cluster_pluginmarkermodule_providers",{"_index":980,"title":{},"body":{"modules/PluginMarkerModule.html":{},"overview.html":{}}}],["cluster_pluginparagraphmodule",{"_index":988,"title":{},"body":{"modules/PluginParagraphModule.html":{},"overview.html":{}}}],["cluster_pluginparagraphmodule_providers",{"_index":989,"title":{},"body":{"modules/PluginParagraphModule.html":{},"overview.html":{}}}],["cluster_pluginsimpleimagemodule",{"_index":1000,"title":{},"body":{"modules/PluginSimpleImageModule.html":{},"overview.html":{}}}],["cluster_pluginsimpleimagemodule_providers",{"_index":1001,"title":{},"body":{"modules/PluginSimpleImageModule.html":{},"overview.html":{}}}],["cmd+shift+m",{"_index":978,"title":{},"body":{"injectables/PluginMarker.html":{}}}],["code",{"_index":925,"title":{},"body":{"injectables/PluginCode.html":{},"contributing.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-readme.html":{}}}],["code.plugin",{"_index":931,"title":{},"body":{"modules/PluginCodeModule.html":{}}}],["collection",{"_index":591,"title":{},"body":{"modules/NgxEditorJSModule.html":{},"index.html":{}}}],["color",{"_index":96,"title":{},"body":{"components/AppComponent.html":{},"components/NavBarComponent.html":{}}}],["combinelatest",{"_index":451,"title":{},"body":{"components/EditorPageComponent.html":{}}}],["combinelatest([this.form",{"_index":462,"title":{},"body":{"components/EditorPageComponent.html":{}}}],["comments",{"_index":1162,"title":{},"body":{"contributing.html":{}}}],["commits",{"_index":1191,"title":{},"body":{"contributing.html":{}}}],["common",{"_index":1044,"title":{},"body":{"changelog.html":{}}}],["commonmodule",{"_index":603,"title":{},"body":{"modules/NgxEditorJSModule.html":{},"modules/NgxEditorjsDemoModule.html":{},"modules/NgxEditorjsNgrxModule.html":{},"modules/NgxEditorjsPluginsModule.html":{}}}],["community",{"_index":1111,"title":{},"body":{"contributing.html":{}}}],["complaints",{"_index":1234,"title":{},"body":{"contributing.html":{}}}],["completes",{"_index":725,"title":{},"body":{"injectables/NgxEditorJSService.html":{}}}],["compodoc",{"_index":1503,"title":{},"body":{"additional-documentation/tinynodes-library-docs/ngx-editorjs-readme/ngx-editorjs-changelog.html":{}}}],["component",{"_index":0,"title":{"components/AppComponent.html":{},"components/EditorPageComponent.html":{},"components/NavBarComponent.html":{},"components/NgxEditorJSComponent.html":{},"components/PageContainerComponent.html":{},"components/SidebarComponent.html":{}},"body":{"components/AppComponent.html":{},"components/EditorPageComponent.html":{},"components/NavBarComponent.html":{},"components/NgxEditorJSComponent.html":{},"components/PageContainerComponent.html":{},"components/SidebarComponent.html":{},"coverage.html":{},"index.html":{},"todo.html":{},"miscellaneous/variables.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-readme.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-readme/ngx-editorjs-changelog.html":{}}}],["component/app.component",{"_index":204,"title":{},"body":{"modules/AppModule.html":{}}}],["component/app.component.ts",{"_index":12,"title":{},"body":{"components/AppComponent.html":{},"coverage.html":{}}}],["component/app.component.ts:20",{"_index":49,"title":{},"body":{"components/AppComponent.html":{}}}],["component/app.component.ts:25",{"_index":55,"title":{},"body":{"components/AppComponent.html":{}}}],["component/app.component.ts:30",{"_index":38,"title":{},"body":{"components/AppComponent.html":{}}}],["component/editorjs.component",{"_index":607,"title":{},"body":{"modules/NgxEditorJSModule.html":{}}}],["component/editorjs.component.ts",{"_index":496,"title":{},"body":{"components/NgxEditorJSComponent.html":{},"coverage.html":{}}}],["component/editorjs.component.ts:23",{"_index":509,"title":{},"body":{"components/NgxEditorJSComponent.html":{}}}],["component/editorjs.component.ts:29",{"_index":507,"title":{},"body":{"components/NgxEditorJSComponent.html":{}}}],["component/editorjs.component.ts:35",{"_index":506,"title":{},"body":{"components/NgxEditorJSComponent.html":{}}}],["component/editorjs.component.ts:42",{"_index":512,"title":{},"body":{"components/NgxEditorJSComponent.html":{}}}],["component/sidebar.component",{"_index":209,"title":{},"body":{"modules/AppModule.html":{}}}],["component/sidebar.component.ts",{"_index":1011,"title":{},"body":{"components/SidebarComponent.html":{},"coverage.html":{}}}],["component/sidebar.component.ts:13",{"_index":1015,"title":{},"body":{"components/SidebarComponent.html":{}}}],["component/sidebar.component.ts:15",{"_index":1014,"title":{},"body":{"components/SidebarComponent.html":{}}}],["component_template",{"_index":131,"title":{},"body":{"components/AppComponent.html":{},"components/EditorPageComponent.html":{},"components/NavBarComponent.html":{},"components/NgxEditorJSComponent.html":{},"components/PageContainerComponent.html":{},"components/SidebarComponent.html":{}}}],["components",{"_index":2,"title":{},"body":{"components/AppComponent.html":{},"components/EditorPageComponent.html":{},"components/NavBarComponent.html":{},"components/NgxEditorJSComponent.html":{},"directives/NgxEditorJSDirective.html":{},"components/PageContainerComponent.html":{},"components/SidebarComponent.html":{},"index.html":{},"overview.html":{}}}],["components/app",{"_index":203,"title":{},"body":{"modules/AppModule.html":{}}}],["components/nav",{"_index":205,"title":{},"body":{"modules/AppModule.html":{}}}],["components/sidebar",{"_index":208,"title":{},"body":{"modules/AppModule.html":{}}}],["conditions",{"_index":1369,"title":{},"body":{"license.html":{}}}],["conduct",{"_index":1071,"title":{},"body":{"contributing.html":{}}}],["confidentiality",{"_index":1242,"title":{},"body":{"contributing.html":{}}}],["config",{"_index":413,"title":{},"body":{"interfaces/EditorJSConfig.html":{},"interfaces/NgxEditorJSConfig.html":{},"modules/NgxEditorJSModule.html":{},"injectables/NgxEditorJSPluginService.html":{},"injectables/NgxEditorJSService.html":{},"modules/NgxEditorjsDemoModule.html":{},"miscellaneous/functions.html":{},"todo.html":{},"miscellaneous/variables.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-readme.html":{}}}],["config.editorjs",{"_index":615,"title":{},"body":{"modules/NgxEditorJSModule.html":{}}}],["config.editorjs.autofocus",{"_index":616,"title":{},"body":{"modules/NgxEditorJSModule.html":{}}}],["config.editorjs.data",{"_index":618,"title":{},"body":{"modules/NgxEditorJSModule.html":{}}}],["config.editorjs.hidetoolbar",{"_index":620,"title":{},"body":{"modules/NgxEditorJSModule.html":{}}}],["config.editorjs.holder",{"_index":630,"title":{},"body":{"modules/NgxEditorJSModule.html":{}}}],["config.editorjs.initialblock",{"_index":622,"title":{},"body":{"modules/NgxEditorJSModule.html":{}}}],["config.editorjs.minheight",{"_index":624,"title":{},"body":{"modules/NgxEditorJSModule.html":{}}}],["config.editorjs.placeholder",{"_index":626,"title":{},"body":{"modules/NgxEditorJSModule.html":{}}}],["config.editorjs.sanitizer",{"_index":628,"title":{},"body":{"modules/NgxEditorJSModule.html":{}}}],["configuration",{"_index":290,"title":{},"body":{"interfaces/BasePlugin.html":{},"interfaces/BasePlugin-1.html":{},"interfaces/EditorJSConfig.html":{},"interfaces/NgxEditorJSConfig.html":{},"modules/NgxEditorJSModule.html":{},"interfaces/PluginConfig.html":{},"interfaces/PluginConfig-1.html":{},"interfaces/ToolSettingsMap.html":{},"interfaces/ToolSettingsMap-1.html":{},"miscellaneous/functions.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-readme.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-readme/ngx-editorjs-changelog.html":{}}}],["configurations",{"_index":613,"title":{},"body":{"modules/NgxEditorJSModule.html":{},"injectables/NgxEditorJSPluginService.html":{},"miscellaneous/functions.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-readme.html":{}}}],["configured",{"_index":1520,"title":{},"body":{"additional-documentation/tinynodes-library-docs/ngx-editorjs-readme/ngx-editorjs-changelog.html":{}}}],["configuring",{"_index":1461,"title":{},"body":{"additional-documentation/tinynodes-library-docs/ngx-editorjs-readme.html":{}}}],["connection",{"_index":1397,"title":{},"body":{"license.html":{}}}],["considered",{"_index":1174,"title":{},"body":{"contributing.html":{}}}],["const",{"_index":303,"title":{},"body":{"interfaces/BasePlugin.html":{},"interfaces/BasePlugin-1.html":{},"interfaces/EditorJSConfig.html":{},"interfaces/NgxEditorJSConfig.html":{},"modules/NgxEditorJSModule.html":{},"injectables/NgxEditorJSService.html":{},"injectables/PagesService.html":{},"interfaces/PluginConfig.html":{},"interfaces/PluginConfig-1.html":{},"interfaces/ToolSettingsMap.html":{},"interfaces/ToolSettingsMap-1.html":{}}}],["constructive",{"_index":1145,"title":{},"body":{"contributing.html":{}}}],["constructor",{"_index":34,"title":{},"body":{"components/AppComponent.html":{},"injectables/AppService.html":{},"injectables/ApplicationQuery.html":{},"injectables/ApplicationStore.html":{},"classes/Changed.html":{},"components/EditorPageComponent.html":{},"components/NavBarComponent.html":{},"components/NgxEditorJSComponent.html":{},"directives/NgxEditorJSDirective.html":{},"injectables/NgxEditorJSEffects.html":{},"modules/NgxEditorJSModule.html":{},"injectables/NgxEditorJSPluginService.html":{},"injectables/NgxEditorJSService.html":{},"classes/NotReady.html":{},"components/PageContainerComponent.html":{},"injectables/PagesQuery.html":{},"injectables/PagesService.html":{},"interfaces/PagesState.html":{},"injectables/PagesStore.html":{},"classes/Ready.html":{},"classes/SaveEnd.html":{},"classes/SaveStart.html":{},"components/SidebarComponent.html":{}}}],["constructor(@inject(userplugins",{"_index":674,"title":{},"body":{"injectables/NgxEditorJSPluginService.html":{}}}],["constructor(actions",{"_index":559,"title":{},"body":{"injectables/NgxEditorJSEffects.html":{}}}],["constructor(app",{"_index":35,"title":{},"body":{"components/AppComponent.html":{},"components/NavBarComponent.html":{},"components/SidebarComponent.html":{}}}],["constructor(config",{"_index":702,"title":{},"body":{"injectables/NgxEditorJSService.html":{}}}],["constructor(el",{"_index":533,"title":{},"body":{"directives/NgxEditorJSDirective.html":{}}}],["constructor(fb",{"_index":440,"title":{},"body":{"components/EditorPageComponent.html":{}}}],["constructor(pagesservice",{"_index":856,"title":{},"body":{"components/PageContainerComponent.html":{}}}],["constructor(payload",{"_index":372,"title":{},"body":{"classes/Changed.html":{},"classes/NotReady.html":{},"classes/Ready.html":{},"classes/SaveEnd.html":{},"classes/SaveStart.html":{}}}],["constructor(private",{"_index":75,"title":{},"body":{"components/AppComponent.html":{},"injectables/AppService.html":{},"components/EditorPageComponent.html":{},"components/NavBarComponent.html":{},"directives/NgxEditorJSDirective.html":{},"injectables/NgxEditorJSEffects.html":{},"components/PageContainerComponent.html":{},"components/SidebarComponent.html":{}}}],["constructor(protected",{"_index":255,"title":{},"body":{"injectables/ApplicationQuery.html":{},"injectables/PagesQuery.html":{}}}],["constructor(public",{"_index":388,"title":{},"body":{"classes/Changed.html":{},"components/NgxEditorJSComponent.html":{},"classes/NotReady.html":{},"injectables/PagesService.html":{},"classes/Ready.html":{},"classes/SaveEnd.html":{},"classes/SaveStart.html":{}}}],["constructor(query",{"_index":228,"title":{},"body":{"injectables/AppService.html":{},"injectables/PagesService.html":{}}}],["constructor(service",{"_index":505,"title":{},"body":{"components/NgxEditorJSComponent.html":{}}}],["constructor(store",{"_index":251,"title":{},"body":{"injectables/ApplicationQuery.html":{},"injectables/PagesQuery.html":{}}}],["constructor(userplugins",{"_index":649,"title":{},"body":{"injectables/NgxEditorJSPluginService.html":{}}}],["contacting",{"_index":1231,"title":{},"body":{"contributing.html":{}}}],["container",{"_index":18,"title":{},"body":{"components/AppComponent.html":{},"components/PageContainerComponent.html":{},"contributing.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-readme.html":{}}}],["container'},{'name",{"_index":141,"title":{},"body":{"components/AppComponent.html":{},"components/EditorPageComponent.html":{},"components/NavBarComponent.html":{},"components/NgxEditorJSComponent.html":{},"components/PageContainerComponent.html":{},"components/SidebarComponent.html":{}}}],["container.component",{"_index":811,"title":{},"body":{"modules/NgxEditorjsDemoModule.html":{}}}],["container.component.html",{"_index":855,"title":{},"body":{"components/PageContainerComponent.html":{}}}],["container.component.scss",{"_index":854,"title":{},"body":{"components/PageContainerComponent.html":{}}}],["container.component.ts",{"_index":853,"title":{},"body":{"components/PageContainerComponent.html":{},"coverage.html":{}}}],["container.component.ts:11",{"_index":858,"title":{},"body":{"components/PageContainerComponent.html":{}}}],["container.component.ts:14",{"_index":860,"title":{},"body":{"components/PageContainerComponent.html":{}}}],["container/page",{"_index":810,"title":{},"body":{"modules/NgxEditorjsDemoModule.html":{},"components/PageContainerComponent.html":{},"coverage.html":{}}}],["containers/editor",{"_index":807,"title":{},"body":{"modules/NgxEditorjsDemoModule.html":{}}}],["containers/editorjs",{"_index":606,"title":{},"body":{"modules/NgxEditorJSModule.html":{}}}],["containers/page",{"_index":809,"title":{},"body":{"modules/NgxEditorjsDemoModule.html":{}}}],["containing",{"_index":350,"title":{},"body":{"interfaces/BlocksMap.html":{},"interfaces/ChangeMap.html":{},"interfaces/EditorMap.html":{},"injectables/NgxEditorJSService.html":{},"interfaces/ReadyMap.html":{}}}],["content",{"_index":88,"title":{},"body":{"components/AppComponent.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-readme.html":{}}}],["continue",{"_index":1056,"title":{},"body":{"changelog.html":{}}}],["contract",{"_index":1394,"title":{},"body":{"license.html":{}}}],["contributes",{"_index":1134,"title":{},"body":{"contributing.html":{}}}],["contributing",{"_index":1061,"title":{"contributing.html":{}},"body":{"contributing.html":{}}}],["contributions",{"_index":1194,"title":{},"body":{"contributing.html":{}}}],["contributor",{"_index":1199,"title":{},"body":{"contributing.html":{}}}],["contributors",{"_index":1108,"title":{},"body":{"contributing.html":{}}}],["control",{"_index":528,"title":{},"body":{"directives/NgxEditorJSDirective.html":{},"modules/NgxEditorJSModule.html":{},"injectables/NgxEditorJSService.html":{},"todo.html":{}}}],["controlling",{"_index":1484,"title":{},"body":{"additional-documentation/tinynodes-library-docs/ngx-editorjs-readme.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-readme/ngx-editorjs-changelog.html":{}}}],["controls",{"_index":1422,"title":{},"body":{"todo.html":{}}}],["copies",{"_index":1364,"title":{},"body":{"license.html":{}}}],["copy",{"_index":1351,"title":{},"body":{"license.html":{}}}],["copyright",{"_index":1345,"title":{},"body":{"license.html":{}}}],["core",{"_index":171,"title":{},"body":{"modules/AppModule.html":{},"dependencies.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-readme/ngx-editorjs-changelog.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-plugins-readme/ngx-editorjs-plugins-changelog.html":{}}}],["coreapi",{"_index":1415,"title":{},"body":{"todo.html":{}}}],["corrective",{"_index":1186,"title":{},"body":{"contributing.html":{}}}],["covenant",{"_index":1261,"title":{},"body":{"contributing.html":{}}}],["covenant.org/version/1/4",{"_index":1264,"title":{},"body":{"contributing.html":{}}}],["cover",{"_index":1046,"title":{},"body":{"changelog.html":{}}}],["coverage",{"_index":1265,"title":{"coverage.html":{}},"body":{"coverage.html":{}}}],["create",{"_index":1467,"title":{},"body":{"additional-documentation/tinynodes-library-docs/ngx-editorjs-readme.html":{}}}],["createconfig",{"_index":641,"title":{},"body":{"modules/NgxEditorJSModule.html":{},"coverage.html":{},"miscellaneous/functions.html":{}}}],["createconfig(config",{"_index":614,"title":{},"body":{"modules/NgxEditorJSModule.html":{},"miscellaneous/functions.html":{}}}],["created",{"_index":500,"title":{},"body":{"components/NgxEditorJSComponent.html":{},"directives/NgxEditorJSDirective.html":{},"injectables/NgxEditorJSService.html":{},"injectables/PagesService.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-readme.html":{}}}],["createeditor",{"_index":696,"title":{},"body":{"injectables/NgxEditorJSService.html":{}}}],["createeditor(holder",{"_index":706,"title":{},"body":{"injectables/NgxEditorJSService.html":{}}}],["createngxeditorjsdemotools",{"_index":806,"title":{},"body":{"modules/NgxEditorjsDemoModule.html":{},"coverage.html":{},"miscellaneous/functions.html":{}}}],["creates",{"_index":612,"title":{},"body":{"modules/NgxEditorJSModule.html":{},"injectables/NgxEditorJSService.html":{},"injectables/PagesService.html":{},"miscellaneous/functions.html":{}}}],["createtools",{"_index":1456,"title":{},"body":{"additional-documentation/tinynodes-library-docs/ngx-editorjs-readme.html":{}}}],["creating",{"_index":715,"title":{},"body":{"injectables/NgxEditorJSService.html":{},"contributing.html":{}}}],["creation",{"_index":404,"title":{},"body":{"interfaces/EditorJSConfig.html":{},"interfaces/NgxEditorJSConfig.html":{}}}],["criticism",{"_index":1146,"title":{},"body":{"contributing.html":{}}}],["current",{"_index":692,"title":{},"body":{"injectables/NgxEditorJSService.html":{},"changelog.html":{}}}],["currently",{"_index":1034,"title":{},"body":{"changelog.html":{}}}],["cursor",{"_index":108,"title":{},"body":{"components/AppComponent.html":{},"components/NavBarComponent.html":{}}}],["custom",{"_index":323,"title":{},"body":{"interfaces/Block.html":{},"interfaces/Header.html":{},"interfaces/HeaderBlock.html":{},"interfaces/Image.html":{},"interfaces/ImageBlock.html":{},"interfaces/List.html":{},"interfaces/ListBlock.html":{},"interfaces/Paragraph.html":{},"interfaces/ParagraphBlock.html":{},"miscellaneous/typealiases.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-readme.html":{}}}],["custommodule",{"_index":1473,"title":{},"body":{"additional-documentation/tinynodes-library-docs/ngx-editorjs-readme.html":{}}}],["cy.get('h1",{"_index":1439,"title":{},"body":{"miscellaneous/variables.html":{}}}],["cycle",{"_index":1480,"title":{},"body":{"additional-documentation/tinynodes-library-docs/ngx-editorjs-readme.html":{}}}],["damages",{"_index":1391,"title":{},"body":{"license.html":{}}}],["darkgray",{"_index":520,"title":{},"body":{"components/NgxEditorJSComponent.html":{}}}],["data",{"_index":314,"title":{},"body":{"interfaces/Block.html":{},"classes/Changed.html":{},"interfaces/EditorJSConfig.html":{},"interfaces/Header.html":{},"interfaces/HeaderBlock.html":{},"interfaces/Image.html":{},"interfaces/ImageBlock.html":{},"interfaces/List.html":{},"interfaces/ListBlock.html":{},"interfaces/NgxEditorJSConfig.html":{},"injectables/NgxEditorJSEffects.html":{},"classes/NotReady.html":{},"interfaces/Paragraph.html":{},"interfaces/ParagraphBlock.html":{},"classes/Ready.html":{},"classes/SaveEnd.html":{},"classes/SaveStart.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-readme.html":{}}}],["date.now",{"_index":572,"title":{},"body":{"injectables/NgxEditorJSEffects.html":{},"injectables/NgxEditorJSService.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-readme.html":{}}}],["datorama/akita",{"_index":191,"title":{},"body":{"modules/AppModule.html":{},"injectables/ApplicationQuery.html":{},"injectables/ApplicationStore.html":{},"interfaces/Page.html":{},"interfaces/PageBlock.html":{},"injectables/PagesQuery.html":{},"injectables/PagesService.html":{},"interfaces/PagesState.html":{},"injectables/PagesStore.html":{},"interfaces/Tag.html":{},"dependencies.html":{}}}],["deal",{"_index":1354,"title":{},"body":{"license.html":{}}}],["dealings",{"_index":1398,"title":{},"body":{"license.html":{}}}],["declarations",{"_index":154,"title":{},"body":{"modules/AppModule.html":{},"modules/ApplicationDataModule.html":{},"modules/NgxEditorJSModule.html":{},"modules/NgxEditorjsDemoModule.html":{},"modules/NgxEditorjsNgrxModule.html":{},"modules/NgxEditorjsPluginsModule.html":{},"modules/PageStoreModule.html":{},"modules/PluginCodeModule.html":{},"modules/PluginHeaderModule.html":{},"modules/PluginImageModule.html":{},"modules/PluginLinkModule.html":{},"modules/PluginListModule.html":{},"modules/PluginMarkerModule.html":{},"modules/PluginParagraphModule.html":{},"modules/PluginSimpleImageModule.html":{},"overview.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-readme.html":{}}}],["decoration",{"_index":94,"title":{},"body":{"components/AppComponent.html":{},"components/NavBarComponent.html":{}}}],["decorators",{"_index":53,"title":{},"body":{"components/AppComponent.html":{},"components/NgxEditorJSComponent.html":{},"injectables/NgxEditorJSEffects.html":{},"components/SidebarComponent.html":{}}}],["deem",{"_index":1201,"title":{},"body":{"contributing.html":{}}}],["deemed",{"_index":1237,"title":{},"body":{"contributing.html":{}}}],["default",{"_index":45,"title":{},"body":{"components/AppComponent.html":{},"interfaces/Block.html":{},"classes/Changed.html":{},"interfaces/EditorJSConfig.html":{},"interfaces/Header.html":{},"interfaces/HeaderBlock.html":{},"interfaces/Image.html":{},"interfaces/ImageBlock.html":{},"interfaces/List.html":{},"interfaces/ListBlock.html":{},"components/NavBarComponent.html":{},"components/NgxEditorJSComponent.html":{},"interfaces/NgxEditorJSConfig.html":{},"directives/NgxEditorJSDirective.html":{},"injectables/NgxEditorJSEffects.html":{},"modules/NgxEditorJSModule.html":{},"injectables/NgxEditorJSPluginService.html":{},"injectables/NgxEditorJSService.html":{},"classes/NotReady.html":{},"interfaces/Paragraph.html":{},"interfaces/ParagraphBlock.html":{},"modules/PluginCodeModule.html":{},"modules/PluginHeaderModule.html":{},"modules/PluginImageModule.html":{},"modules/PluginLinkModule.html":{},"modules/PluginListModule.html":{},"modules/PluginMarkerModule.html":{},"modules/PluginParagraphModule.html":{},"classes/Ready.html":{},"classes/SaveEnd.html":{},"classes/SaveStart.html":{},"miscellaneous/variables.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-readme.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-readme/ngx-editorjs-changelog.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-plugins-readme.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-plugins-readme/ngx-editorjs-plugins-changelog.html":{}}}],["default_holder_id",{"_index":610,"title":{},"body":{"modules/NgxEditorJSModule.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["defaults",{"_index":600,"title":{},"body":{"modules/NgxEditorJSModule.html":{},"injectables/NgxEditorJSService.html":{}}}],["define",{"_index":422,"title":{},"body":{"interfaces/EditorJSConfig.html":{},"interfaces/NgxEditorJSConfig.html":{}}}],["defined",{"_index":37,"title":{},"body":{"components/AppComponent.html":{},"injectables/AppService.html":{},"injectables/ApplicationQuery.html":{},"injectables/ApplicationStore.html":{},"interfaces/BasePlugin.html":{},"interfaces/BasePlugin-1.html":{},"interfaces/Block.html":{},"interfaces/BlocksMap.html":{},"interfaces/ChangeMap.html":{},"classes/Changed.html":{},"interfaces/EditorMap.html":{},"components/EditorPageComponent.html":{},"components/NavBarComponent.html":{},"components/NgxEditorJSComponent.html":{},"directives/NgxEditorJSDirective.html":{},"injectables/NgxEditorJSEffects.html":{},"modules/NgxEditorJSModule.html":{},"injectables/NgxEditorJSPluginService.html":{},"injectables/NgxEditorJSService.html":{},"classes/NotReady.html":{},"components/PageContainerComponent.html":{},"injectables/PagesQuery.html":{},"injectables/PagesService.html":{},"injectables/PagesStore.html":{},"injectables/PluginCode.html":{},"interfaces/PluginConfig.html":{},"interfaces/PluginConfig-1.html":{},"injectables/PluginHeader.html":{},"injectables/PluginImage.html":{},"injectables/PluginLink.html":{},"injectables/PluginList.html":{},"injectables/PluginMarker.html":{},"injectables/PluginParagraph.html":{},"injectables/PluginSimpleImage.html":{},"classes/Ready.html":{},"interfaces/ReadyMap.html":{},"classes/SaveEnd.html":{},"classes/SaveStart.html":{},"components/SidebarComponent.html":{},"interfaces/ToolSettingsMap.html":{},"interfaces/ToolSettingsMap-1.html":{},"contributing.html":{},"miscellaneous/variables.html":{}}}],["defines",{"_index":278,"title":{},"body":{"interfaces/BasePlugin.html":{},"interfaces/BasePlugin-1.html":{},"interfaces/PluginConfig.html":{},"interfaces/PluginConfig-1.html":{},"interfaces/ToolSettingsMap.html":{},"interfaces/ToolSettingsMap-1.html":{}}}],["deigned",{"_index":1457,"title":{},"body":{"additional-documentation/tinynodes-library-docs/ngx-editorjs-readme.html":{}}}],["delayed",{"_index":1036,"title":{},"body":{"changelog.html":{}}}],["delete",{"_index":680,"title":{},"body":{"injectables/NgxEditorJSPluginService.html":{},"injectables/NgxEditorJSService.html":{},"injectables/PagesService.html":{}}}],["delete(pageid",{"_index":890,"title":{},"body":{"injectables/PagesService.html":{}}}],["demo",{"_index":84,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"components/EditorPageComponent.html":{},"components/PageContainerComponent.html":{},"components/SidebarComponent.html":{},"changelog.html":{},"miscellaneous/functions.html":{},"index.html":{},"todo.html":{},"miscellaneous/variables.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-readme.html":{}}}],["demo.module.ts",{"_index":802,"title":{},"body":{"modules/NgxEditorjsDemoModule.html":{}}}],["demo.routes",{"_index":813,"title":{},"body":{"modules/NgxEditorjsDemoModule.html":{}}}],["demo.routes.ts",{"_index":1284,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["demo/pages",{"_index":1440,"title":{},"body":{"miscellaneous/variables.html":{}}}],["demo/pages/editor",{"_index":1441,"title":{},"body":{"miscellaneous/variables.html":{}}}],["demo/pages/editor/:id",{"_index":1442,"title":{},"body":{"miscellaneous/variables.html":{}}}],["demo/src/lib/config/index.ts",{"_index":1283,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["demo/src/lib/containers/editor",{"_index":432,"title":{},"body":{"components/EditorPageComponent.html":{},"coverage.html":{}}}],["demo/src/lib/containers/page",{"_index":852,"title":{},"body":{"components/PageContainerComponent.html":{},"coverage.html":{}}}],["demo/src/lib/ngx",{"_index":801,"title":{},"body":{"modules/NgxEditorjsDemoModule.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["demo/src/lib/store/pages/pages.models.ts",{"_index":849,"title":{},"body":{"interfaces/Page.html":{},"interfaces/PageBlock.html":{},"interfaces/Tag.html":{},"coverage.html":{}}}],["demo/src/lib/store/pages/pages.module.ts",{"_index":870,"title":{},"body":{"modules/PageStoreModule.html":{}}}],["demo/src/lib/store/pages/pages.query.ts",{"_index":874,"title":{},"body":{"injectables/PagesQuery.html":{},"coverage.html":{}}}],["demo/src/lib/store/pages/pages.query.ts:7",{"_index":876,"title":{},"body":{"injectables/PagesQuery.html":{}}}],["demo/src/lib/store/pages/pages.service.ts",{"_index":879,"title":{},"body":{"injectables/PagesService.html":{},"coverage.html":{}}}],["demo/src/lib/store/pages/pages.service.ts:15",{"_index":884,"title":{},"body":{"injectables/PagesService.html":{}}}],["demo/src/lib/store/pages/pages.service.ts:17",{"_index":901,"title":{},"body":{"injectables/PagesService.html":{}}}],["demo/src/lib/store/pages/pages.service.ts:24",{"_index":902,"title":{},"body":{"injectables/PagesService.html":{}}}],["demo/src/lib/store/pages/pages.service.ts:32",{"_index":886,"title":{},"body":{"injectables/PagesService.html":{}}}],["demo/src/lib/store/pages/pages.service.ts:47",{"_index":899,"title":{},"body":{"injectables/PagesService.html":{}}}],["demo/src/lib/store/pages/pages.service.ts:56",{"_index":891,"title":{},"body":{"injectables/PagesService.html":{}}}],["demo/src/lib/store/pages/pages.service.ts:60",{"_index":897,"title":{},"body":{"injectables/PagesService.html":{}}}],["demo/src/lib/store/pages/pages.service.ts:64",{"_index":888,"title":{},"body":{"injectables/PagesService.html":{}}}],["demo/src/lib/store/pages/pages.service.ts:70",{"_index":895,"title":{},"body":{"injectables/PagesService.html":{}}}],["demo/src/lib/store/pages/pages.store.ts",{"_index":918,"title":{},"body":{"interfaces/PagesState.html":{},"injectables/PagesStore.html":{},"coverage.html":{}}}],["demo/src/lib/store/pages/pages.store.ts:9",{"_index":921,"title":{},"body":{"injectables/PagesStore.html":{}}}],["demo](https://tinynodes",{"_index":212,"title":{},"body":{"modules/AppModule.html":{}}}],["demos",{"_index":48,"title":{},"body":{"components/AppComponent.html":{},"index.html":{}}}],["dependencies",{"_index":153,"title":{"dependencies.html":{}},"body":{"modules/AppModule.html":{},"modules/ApplicationDataModule.html":{},"modules/NgxEditorJSModule.html":{},"modules/NgxEditorjsDemoModule.html":{},"modules/NgxEditorjsNgrxModule.html":{},"modules/NgxEditorjsPluginsModule.html":{},"modules/PageStoreModule.html":{},"modules/PluginCodeModule.html":{},"modules/PluginHeaderModule.html":{},"modules/PluginImageModule.html":{},"modules/PluginLinkModule.html":{},"modules/PluginListModule.html":{},"modules/PluginMarkerModule.html":{},"modules/PluginParagraphModule.html":{},"modules/PluginSimpleImageModule.html":{},"contributing.html":{},"dependencies.html":{},"overview.html":{}}}],["dependency",{"_index":1421,"title":{},"body":{"todo.html":{}}}],["deps",{"_index":642,"title":{},"body":{"modules/NgxEditorJSModule.html":{}}}],["description",{"_index":13,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"interfaces/BasePlugin.html":{},"interfaces/BasePlugin-1.html":{},"interfaces/Block.html":{},"interfaces/BlocksMap.html":{},"interfaces/ChangeMap.html":{},"interfaces/EditorJSConfig.html":{},"interfaces/EditorMap.html":{},"interfaces/Header.html":{},"interfaces/HeaderBlock.html":{},"interfaces/Image.html":{},"interfaces/ImageBlock.html":{},"interfaces/List.html":{},"interfaces/ListBlock.html":{},"components/NgxEditorJSComponent.html":{},"interfaces/NgxEditorJSConfig.html":{},"directives/NgxEditorJSDirective.html":{},"modules/NgxEditorJSModule.html":{},"injectables/NgxEditorJSPluginService.html":{},"injectables/NgxEditorJSService.html":{},"modules/NgxEditorjsPluginsModule.html":{},"injectables/PagesService.html":{},"interfaces/Paragraph.html":{},"interfaces/ParagraphBlock.html":{},"injectables/PluginCode.html":{},"modules/PluginCodeModule.html":{},"interfaces/PluginConfig.html":{},"interfaces/PluginConfig-1.html":{},"injectables/PluginHeader.html":{},"modules/PluginHeaderModule.html":{},"injectables/PluginImage.html":{},"modules/PluginImageModule.html":{},"injectables/PluginLink.html":{},"modules/PluginLinkModule.html":{},"injectables/PluginList.html":{},"modules/PluginListModule.html":{},"injectables/PluginMarker.html":{},"modules/PluginMarkerModule.html":{},"injectables/PluginParagraph.html":{},"modules/PluginParagraphModule.html":{},"injectables/PluginSimpleImage.html":{},"modules/PluginSimpleImageModule.html":{},"interfaces/ReadyMap.html":{},"interfaces/ToolSettingsMap.html":{},"interfaces/ToolSettingsMap-1.html":{},"miscellaneous/functions.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-readme.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-plugins-readme.html":{}}}],["destroy",{"_index":697,"title":{},"body":{"injectables/NgxEditorJSService.html":{}}}],["destroy(holder",{"_index":721,"title":{},"body":{"injectables/NgxEditorJSService.html":{}}}],["destroyed",{"_index":71,"title":{},"body":{"components/AppComponent.html":{}}}],["destroys",{"_index":726,"title":{},"body":{"injectables/NgxEditorJSService.html":{}}}],["details",{"_index":737,"title":{},"body":{"injectables/NgxEditorJSService.html":{},"modules/PluginCodeModule.html":{},"modules/PluginHeaderModule.html":{},"modules/PluginImageModule.html":{},"modules/PluginLinkModule.html":{},"modules/PluginListModule.html":{},"modules/PluginMarkerModule.html":{},"modules/PluginParagraphModule.html":{},"modules/PluginSimpleImageModule.html":{},"contributing.html":{},"additional-documentation/tinynodes-library-docs.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-readme.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-plugins-readme/ngx-editorjs-plugins-changelog.html":{}}}],["determined",{"_index":1256,"title":{},"body":{"contributing.html":{}}}],["developers",{"_index":1099,"title":{},"body":{"contributing.html":{}}}],["development",{"_index":1327,"title":{},"body":{"index.html":{}}}],["devlog",{"_index":1032,"title":{},"body":{"changelog.html":{}}}],["diary",{"_index":1328,"title":{},"body":{"index.html":{}}}],["differing",{"_index":1140,"title":{},"body":{"contributing.html":{}}}],["directive",{"_index":129,"title":{"directives/NgxEditorJSDirective.html":{}},"body":{"components/AppComponent.html":{},"components/EditorPageComponent.html":{},"components/NavBarComponent.html":{},"components/NgxEditorJSComponent.html":{},"directives/NgxEditorJSDirective.html":{},"components/PageContainerComponent.html":{},"components/SidebarComponent.html":{},"coverage.html":{},"index.html":{},"overview.html":{},"todo.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-readme.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-readme/ngx-editorjs-changelog.html":{}}}],["directives",{"_index":143,"title":{},"body":{"components/AppComponent.html":{},"components/EditorPageComponent.html":{},"components/NavBarComponent.html":{},"components/NgxEditorJSComponent.html":{},"directives/NgxEditorJSDirective.html":{},"components/PageContainerComponent.html":{},"components/SidebarComponent.html":{}}}],["directives/ngx",{"_index":513,"title":{},"body":{"components/NgxEditorJSComponent.html":{},"modules/NgxEditorJSModule.html":{}}}],["disability",{"_index":1120,"title":{},"body":{"contributing.html":{}}}],["disable",{"_index":720,"title":{},"body":{"injectables/NgxEditorJSService.html":{}}}],["discuss",{"_index":1064,"title":{},"body":{"contributing.html":{}}}],["dispatch",{"_index":583,"title":{},"body":{"injectables/NgxEditorJSEffects.html":{}}}],["display",{"_index":111,"title":{},"body":{"components/AppComponent.html":{},"components/NavBarComponent.html":{}}}],["distribute",{"_index":1360,"title":{},"body":{"license.html":{}}}],["doc",{"_index":1412,"title":{},"body":{"todo.html":{}}}],["docs",{"_index":492,"title":{"additional-documentation/tinynodes-library-docs.html":{}},"body":{"components/NavBarComponent.html":{},"injectables/NgxEditorJSService.html":{},"changelog.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-readme.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-readme/ngx-editorjs-changelog.html":{}}}],["documentation",{"_index":1266,"title":{},"body":{"coverage.html":{},"index.html":{},"license.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-readme.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-readme/ngx-editorjs-changelog.html":{}}}],["documented",{"_index":1487,"title":{},"body":{"additional-documentation/tinynodes-library-docs/ngx-editorjs-readme/ngx-editorjs-changelog.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-plugins-readme/ngx-editorjs-plugins-changelog.html":{}}}],["doing",{"_index":1080,"title":{},"body":{"contributing.html":{}}}],["dom",{"_index":7,"title":{},"body":{"components/AppComponent.html":{},"components/EditorPageComponent.html":{},"components/NavBarComponent.html":{},"components/NgxEditorJSComponent.html":{},"components/PageContainerComponent.html":{},"components/SidebarComponent.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-readme/ngx-editorjs-changelog.html":{}}}],["download",{"_index":1445,"title":{},"body":{"additional-documentation/tinynodes-library-docs/ngx-editorjs-readme.html":{}}}],["due",{"_index":1037,"title":{},"body":{"changelog.html":{}}}],["dynamic",{"_index":1306,"title":{},"body":{"dependencies.html":{}}}],["e",{"_index":1211,"title":{},"body":{"contributing.html":{}}}],["e.g",{"_index":1417,"title":{},"body":{"todo.html":{}}}],["e2e/src/support/app.po.ts",{"_index":1269,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["each",{"_index":835,"title":{},"body":{"modules/NgxEditorjsPluginsModule.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-readme.html":{}}}],["easier",{"_index":1485,"title":{},"body":{"additional-documentation/tinynodes-library-docs/ngx-editorjs-readme.html":{}}}],["easily",{"_index":831,"title":{},"body":{"modules/NgxEditorjsPluginsModule.html":{}}}],["edit",{"_index":1189,"title":{},"body":{"contributing.html":{}}}],["editor",{"_index":86,"title":{},"body":{"components/AppComponent.html":{},"components/EditorPageComponent.html":{},"components/NavBarComponent.html":{},"components/NgxEditorJSComponent.html":{},"directives/NgxEditorJSDirective.html":{},"modules/NgxEditorJSModule.html":{},"injectables/NgxEditorJSPluginService.html":{},"injectables/NgxEditorJSService.html":{},"components/PageContainerComponent.html":{},"injectables/PluginSimpleImage.html":{},"components/SidebarComponent.html":{},"todo.html":{},"miscellaneous/variables.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-readme.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-readme/ngx-editorjs-changelog.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-plugins-readme.html":{}}}],["editor's",{"_index":414,"title":{},"body":{"interfaces/EditorJSConfig.html":{},"interfaces/NgxEditorJSConfig.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-readme.html":{}}}],["editorconfig",{"_index":749,"title":{},"body":{"injectables/NgxEditorJSService.html":{}}}],["editorjs",{"_index":198,"title":{"additional-documentation/tinynodes-library-docs/ngx-editorjs-readme.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-readme/ngx-editorjs-changelog.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-plugins-readme.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-plugins-readme/ngx-editorjs-plugins-changelog.html":{}},"body":{"modules/AppModule.html":{},"interfaces/BasePlugin.html":{},"interfaces/BasePlugin-1.html":{},"interfaces/Block.html":{},"interfaces/BlocksMap.html":{},"interfaces/ChangeMap.html":{},"classes/Changed.html":{},"interfaces/EditorJSConfig.html":{},"interfaces/EditorMap.html":{},"components/EditorPageComponent.html":{},"interfaces/Header.html":{},"interfaces/HeaderBlock.html":{},"interfaces/Image.html":{},"interfaces/ImageBlock.html":{},"interfaces/List.html":{},"interfaces/ListBlock.html":{},"components/NgxEditorJSComponent.html":{},"interfaces/NgxEditorJSConfig.html":{},"directives/NgxEditorJSDirective.html":{},"injectables/NgxEditorJSEffects.html":{},"modules/NgxEditorJSModule.html":{},"injectables/NgxEditorJSPluginService.html":{},"injectables/NgxEditorJSService.html":{},"modules/NgxEditorjsDemoModule.html":{},"modules/NgxEditorjsNgrxModule.html":{},"modules/NgxEditorjsPluginsModule.html":{},"classes/NotReady.html":{},"interfaces/Page.html":{},"interfaces/PageBlock.html":{},"components/PageContainerComponent.html":{},"modules/PageStoreModule.html":{},"injectables/PagesQuery.html":{},"injectables/PagesService.html":{},"interfaces/PagesState.html":{},"injectables/PagesStore.html":{},"interfaces/Paragraph.html":{},"interfaces/ParagraphBlock.html":{},"injectables/PluginCode.html":{},"modules/PluginCodeModule.html":{},"interfaces/PluginConfig.html":{},"interfaces/PluginConfig-1.html":{},"injectables/PluginHeader.html":{},"modules/PluginHeaderModule.html":{},"injectables/PluginImage.html":{},"modules/PluginImageModule.html":{},"injectables/PluginLink.html":{},"modules/PluginLinkModule.html":{},"injectables/PluginList.html":{},"modules/PluginListModule.html":{},"injectables/PluginMarker.html":{},"modules/PluginMarkerModule.html":{},"injectables/PluginParagraph.html":{},"modules/PluginParagraphModule.html":{},"injectables/PluginSimpleImage.html":{},"modules/PluginSimpleImageModule.html":{},"classes/Ready.html":{},"interfaces/ReadyMap.html":{},"classes/SaveEnd.html":{},"classes/SaveStart.html":{},"components/SidebarComponent.html":{},"interfaces/Tag.html":{},"interfaces/ToolSettingsMap.html":{},"interfaces/ToolSettingsMap-1.html":{},"changelog.html":{},"coverage.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"index.html":{},"todo.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-readme.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-readme/ngx-editorjs-changelog.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-plugins-readme.html":{}}}],["editorjs'},{'name",{"_index":139,"title":{},"body":{"components/AppComponent.html":{},"components/EditorPageComponent.html":{},"components/NavBarComponent.html":{},"components/NgxEditorJSComponent.html":{},"components/PageContainerComponent.html":{},"components/SidebarComponent.html":{}}}],["editorjs.actions",{"_index":581,"title":{},"body":{"injectables/NgxEditorJSEffects.html":{}}}],["editorjs.actions.ts",{"_index":369,"title":{},"body":{"classes/Changed.html":{},"classes/NotReady.html":{},"classes/Ready.html":{},"classes/SaveEnd.html":{},"classes/SaveStart.html":{},"coverage.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/typealiases.html":{}}}],["editorjs.actions.ts:13",{"_index":1008,"title":{},"body":{"classes/SaveStart.html":{}}}],["editorjs.actions.ts:14",{"_index":1009,"title":{},"body":{"classes/SaveStart.html":{}}}],["editorjs.actions.ts:18",{"_index":1006,"title":{},"body":{"classes/SaveEnd.html":{}}}],["editorjs.actions.ts:19",{"_index":1007,"title":{},"body":{"classes/SaveEnd.html":{}}}],["editorjs.actions.ts:23",{"_index":847,"title":{},"body":{"classes/NotReady.html":{}}}],["editorjs.actions.ts:24",{"_index":848,"title":{},"body":{"classes/NotReady.html":{}}}],["editorjs.actions.ts:28",{"_index":1003,"title":{},"body":{"classes/Ready.html":{}}}],["editorjs.actions.ts:29",{"_index":1004,"title":{},"body":{"classes/Ready.html":{}}}],["editorjs.actions.ts:33",{"_index":374,"title":{},"body":{"classes/Changed.html":{}}}],["editorjs.actions.ts:34",{"_index":375,"title":{},"body":{"classes/Changed.html":{}}}],["editorjs.component.html",{"_index":503,"title":{},"body":{"components/NgxEditorJSComponent.html":{}}}],["editorjs.component.scss",{"_index":502,"title":{},"body":{"components/NgxEditorJSComponent.html":{}}}],["editorjs.directive",{"_index":514,"title":{},"body":{"components/NgxEditorJSComponent.html":{},"modules/NgxEditorJSModule.html":{}}}],["editorjs.directive.ts",{"_index":525,"title":{},"body":{"directives/NgxEditorJSDirective.html":{},"coverage.html":{}}}],["editorjs.directive.ts:24",{"_index":535,"title":{},"body":{"directives/NgxEditorJSDirective.html":{}}}],["editorjs.directive.ts:26",{"_index":539,"title":{},"body":{"directives/NgxEditorJSDirective.html":{}}}],["editorjs.directive.ts:31",{"_index":541,"title":{},"body":{"directives/NgxEditorJSDirective.html":{}}}],["editorjs.directive.ts:35",{"_index":543,"title":{},"body":{"directives/NgxEditorJSDirective.html":{}}}],["editorjs.effects.ts",{"_index":558,"title":{},"body":{"injectables/NgxEditorJSEffects.html":{},"coverage.html":{}}}],["editorjs.effects.ts:10",{"_index":561,"title":{},"body":{"injectables/NgxEditorJSEffects.html":{}}}],["editorjs.effects.ts:14",{"_index":576,"title":{},"body":{"injectables/NgxEditorJSEffects.html":{}}}],["editorjs.module.ts",{"_index":590,"title":{},"body":{"modules/NgxEditorJSModule.html":{},"coverage.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["editorjs.module.ts:88",{"_index":597,"title":{},"body":{"modules/NgxEditorJSModule.html":{}}}],["editorjs.version",{"_index":574,"title":{},"body":{"injectables/NgxEditorJSEffects.html":{},"injectables/NgxEditorJSService.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-readme.html":{}}}],["editorjs/code",{"_index":926,"title":{},"body":{"injectables/PluginCode.html":{}}}],["editorjs/editorjs",{"_index":289,"title":{},"body":{"interfaces/BasePlugin.html":{},"interfaces/BasePlugin-1.html":{},"interfaces/BlocksMap.html":{},"interfaces/ChangeMap.html":{},"classes/Changed.html":{},"interfaces/EditorJSConfig.html":{},"interfaces/EditorMap.html":{},"interfaces/NgxEditorJSConfig.html":{},"directives/NgxEditorJSDirective.html":{},"injectables/NgxEditorJSEffects.html":{},"injectables/NgxEditorJSService.html":{},"classes/NotReady.html":{},"injectables/PluginCode.html":{},"interfaces/PluginConfig.html":{},"interfaces/PluginConfig-1.html":{},"injectables/PluginHeader.html":{},"injectables/PluginImage.html":{},"injectables/PluginLink.html":{},"injectables/PluginList.html":{},"injectables/PluginMarker.html":{},"injectables/PluginParagraph.html":{},"injectables/PluginSimpleImage.html":{},"classes/Ready.html":{},"interfaces/ReadyMap.html":{},"classes/SaveEnd.html":{},"classes/SaveStart.html":{},"interfaces/ToolSettingsMap.html":{},"interfaces/ToolSettingsMap-1.html":{},"dependencies.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-readme.html":{}}}],["editorjs/header",{"_index":939,"title":{},"body":{"injectables/PluginHeader.html":{},"dependencies.html":{}}}],["editorjs/image",{"_index":948,"title":{},"body":{"injectables/PluginImage.html":{}}}],["editorjs/link",{"_index":957,"title":{},"body":{"injectables/PluginLink.html":{}}}],["editorjs/list",{"_index":966,"title":{},"body":{"injectables/PluginList.html":{},"dependencies.html":{}}}],["editorjs/marker",{"_index":977,"title":{},"body":{"injectables/PluginMarker.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-readme.html":{}}}],["editorjs/paragraph",{"_index":987,"title":{},"body":{"injectables/PluginParagraph.html":{},"dependencies.html":{}}}],["editorjs/simple",{"_index":999,"title":{},"body":{"injectables/PluginSimpleImage.html":{}}}],["editorjs/src/lib/containers/editorjs",{"_index":495,"title":{},"body":{"components/NgxEditorJSComponent.html":{},"coverage.html":{}}}],["editorjs/src/lib/directives/ngx",{"_index":524,"title":{},"body":{"directives/NgxEditorJSDirective.html":{},"coverage.html":{}}}],["editorjs/src/lib/ngx",{"_index":589,"title":{},"body":{"modules/NgxEditorJSModule.html":{},"coverage.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["editorjs/src/lib/services/editorjs.service.ts",{"_index":689,"title":{},"body":{"injectables/NgxEditorJSService.html":{},"coverage.html":{}}}],["editorjs/src/lib/services/editorjs.service.ts:103",{"_index":732,"title":{},"body":{"injectables/NgxEditorJSService.html":{}}}],["editorjs/src/lib/services/editorjs.service.ts:115",{"_index":728,"title":{},"body":{"injectables/NgxEditorJSService.html":{}}}],["editorjs/src/lib/services/editorjs.service.ts:127",{"_index":743,"title":{},"body":{"injectables/NgxEditorJSService.html":{}}}],["editorjs/src/lib/services/editorjs.service.ts:139",{"_index":739,"title":{},"body":{"injectables/NgxEditorJSService.html":{}}}],["editorjs/src/lib/services/editorjs.service.ts:152",{"_index":748,"title":{},"body":{"injectables/NgxEditorJSService.html":{}}}],["editorjs/src/lib/services/editorjs.service.ts:172",{"_index":745,"title":{},"body":{"injectables/NgxEditorJSService.html":{}}}],["editorjs/src/lib/services/editorjs.service.ts:189",{"_index":722,"title":{},"body":{"injectables/NgxEditorJSService.html":{}}}],["editorjs/src/lib/services/editorjs.service.ts:39",{"_index":705,"title":{},"body":{"injectables/NgxEditorJSService.html":{}}}],["editorjs/src/lib/services/editorjs.service.ts:55",{"_index":709,"title":{},"body":{"injectables/NgxEditorJSService.html":{}}}],["editorjs/src/lib/services/plugins.service.ts",{"_index":643,"title":{},"body":{"injectables/NgxEditorJSPluginService.html":{},"coverage.html":{}}}],["editorjs/src/lib/services/plugins.service.ts:15",{"_index":650,"title":{},"body":{"injectables/NgxEditorJSPluginService.html":{}}}],["editorjs/src/lib/services/plugins.service.ts:32",{"_index":655,"title":{},"body":{"injectables/NgxEditorJSPluginService.html":{}}}],["editorjs/src/lib/services/plugins.service.ts:40",{"_index":664,"title":{},"body":{"injectables/NgxEditorJSPluginService.html":{}}}],["editorjs/src/lib/services/plugins.service.ts:49",{"_index":657,"title":{},"body":{"injectables/NgxEditorJSPluginService.html":{}}}],["editorjs/src/lib/services/plugins.service.ts:56",{"_index":666,"title":{},"body":{"injectables/NgxEditorJSPluginService.html":{}}}],["editorjs/src/lib/services/plugins.service.ts:64",{"_index":659,"title":{},"body":{"injectables/NgxEditorJSPluginService.html":{}}}],["editorjs/src/lib/types/blocks.ts",{"_index":312,"title":{},"body":{"interfaces/Block.html":{},"interfaces/Header.html":{},"interfaces/HeaderBlock.html":{},"interfaces/Image.html":{},"interfaces/ImageBlock.html":{},"interfaces/List.html":{},"interfaces/ListBlock.html":{},"interfaces/Paragraph.html":{},"interfaces/ParagraphBlock.html":{},"coverage.html":{},"miscellaneous/typealiases.html":{}}}],["editorjs/src/lib/types/blocks.ts:13",{"_index":316,"title":{},"body":{"interfaces/Block.html":{}}}],["editorjs/src/lib/types/config.ts",{"_index":395,"title":{},"body":{"interfaces/EditorJSConfig.html":{},"interfaces/NgxEditorJSConfig.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["editorjs/src/lib/types/maps.ts",{"_index":349,"title":{},"body":{"interfaces/BlocksMap.html":{},"interfaces/ChangeMap.html":{},"interfaces/EditorMap.html":{},"interfaces/ReadyMap.html":{},"coverage.html":{}}}],["editorjs/src/lib/types/maps.ts:15",{"_index":353,"title":{},"body":{"interfaces/BlocksMap.html":{}}}],["editorjs/src/lib/types/maps.ts:22",{"_index":1005,"title":{},"body":{"interfaces/ReadyMap.html":{}}}],["editorjs/src/lib/types/maps.ts:29",{"_index":365,"title":{},"body":{"interfaces/ChangeMap.html":{}}}],["editorjs/src/lib/types/maps.ts:8",{"_index":431,"title":{},"body":{"interfaces/EditorMap.html":{}}}],["editorjs/src/lib/types/plugins.ts",{"_index":277,"title":{},"body":{"interfaces/BasePlugin.html":{},"interfaces/PluginConfig.html":{},"interfaces/ToolSettingsMap.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["editorjs/src/lib/types/plugins.ts:17",{"_index":1016,"title":{},"body":{"interfaces/ToolSettingsMap.html":{}}}],["editorjs/src/lib/types/plugins.ts:7",{"_index":934,"title":{},"body":{"interfaces/PluginConfig.html":{}}}],["editorjs](http://editorjs.io",{"_index":636,"title":{},"body":{"modules/NgxEditorJSModule.html":{}}}],["editorjsactiontypes",{"_index":380,"title":{},"body":{"classes/Changed.html":{},"injectables/NgxEditorJSEffects.html":{},"classes/NotReady.html":{},"classes/Ready.html":{},"classes/SaveEnd.html":{},"classes/SaveStart.html":{},"miscellaneous/enumerations.html":{}}}],["editorjsactiontypes.changed",{"_index":376,"title":{},"body":{"classes/Changed.html":{},"classes/NotReady.html":{},"classes/Ready.html":{},"classes/SaveEnd.html":{},"classes/SaveStart.html":{}}}],["editorjsactiontypes.notready",{"_index":391,"title":{},"body":{"classes/Changed.html":{},"classes/NotReady.html":{},"classes/Ready.html":{},"classes/SaveEnd.html":{},"classes/SaveStart.html":{}}}],["editorjsactiontypes.ready",{"_index":392,"title":{},"body":{"classes/Changed.html":{},"classes/NotReady.html":{},"classes/Ready.html":{},"classes/SaveEnd.html":{},"classes/SaveStart.html":{}}}],["editorjsactiontypes.saveend",{"_index":390,"title":{},"body":{"classes/Changed.html":{},"classes/NotReady.html":{},"classes/Ready.html":{},"classes/SaveEnd.html":{},"classes/SaveStart.html":{}}}],["editorjsactiontypes.savestart",{"_index":387,"title":{},"body":{"classes/Changed.html":{},"classes/NotReady.html":{},"classes/Ready.html":{},"classes/SaveEnd.html":{},"classes/SaveStart.html":{}}}],["editorjsconfig",{"_index":394,"title":{"interfaces/EditorJSConfig.html":{}},"body":{"interfaces/EditorJSConfig.html":{},"interfaces/NgxEditorJSConfig.html":{},"modules/NgxEditorJSModule.html":{},"coverage.html":{}}}],["editorjsconfig.autofocus",{"_index":617,"title":{},"body":{"modules/NgxEditorJSModule.html":{}}}],["editorjsconfig.data",{"_index":619,"title":{},"body":{"modules/NgxEditorJSModule.html":{}}}],["editorjsconfig.hidetoolbar",{"_index":621,"title":{},"body":{"modules/NgxEditorJSModule.html":{}}}],["editorjsconfig.initialblock",{"_index":623,"title":{},"body":{"modules/NgxEditorJSModule.html":{}}}],["editorjsconfig.minheight",{"_index":625,"title":{},"body":{"modules/NgxEditorJSModule.html":{}}}],["editorjsconfig.placeholder",{"_index":627,"title":{},"body":{"modules/NgxEditorJSModule.html":{}}}],["editorjsconfig.sanitizer",{"_index":629,"title":{},"body":{"modules/NgxEditorJSModule.html":{}}}],["editorjsplugin",{"_index":1515,"title":{},"body":{"additional-documentation/tinynodes-library-docs/ngx-editorjs-readme/ngx-editorjs-changelog.html":{}}}],["editormap",{"_index":356,"title":{"interfaces/EditorMap.html":{}},"body":{"interfaces/BlocksMap.html":{},"interfaces/ChangeMap.html":{},"interfaces/EditorMap.html":{},"injectables/NgxEditorJSService.html":{},"interfaces/ReadyMap.html":{},"coverage.html":{}}}],["editorpagecomponent",{"_index":133,"title":{"components/EditorPageComponent.html":{}},"body":{"components/AppComponent.html":{},"components/EditorPageComponent.html":{},"components/NavBarComponent.html":{},"components/NgxEditorJSComponent.html":{},"modules/NgxEditorjsDemoModule.html":{},"components/PageContainerComponent.html":{},"components/SidebarComponent.html":{},"coverage.html":{},"overview.html":{},"miscellaneous/variables.html":{}}}],["editorservice",{"_index":532,"title":{},"body":{"directives/NgxEditorJSDirective.html":{},"injectables/NgxEditorJSEffects.html":{}}}],["edits",{"_index":1193,"title":{},"body":{"contributing.html":{}}}],["effect",{"_index":577,"title":{},"body":{"injectables/NgxEditorJSEffects.html":{}}}],["effect({dispatch",{"_index":575,"title":{},"body":{"injectables/NgxEditorJSEffects.html":{}}}],["effectsmodule",{"_index":822,"title":{},"body":{"modules/NgxEditorjsNgrxModule.html":{}}}],["effectsmodule.forfeature",{"_index":823,"title":{},"body":{"modules/NgxEditorjsNgrxModule.html":{}}}],["el",{"_index":536,"title":{},"body":{"directives/NgxEditorJSDirective.html":{}}}],["electronic",{"_index":1170,"title":{},"body":{"contributing.html":{}}}],["element",{"_index":128,"title":{},"body":{"components/AppComponent.html":{},"interfaces/EditorJSConfig.html":{},"components/EditorPageComponent.html":{},"components/NavBarComponent.html":{},"components/NgxEditorJSComponent.html":{},"interfaces/NgxEditorJSConfig.html":{},"directives/NgxEditorJSDirective.html":{},"components/PageContainerComponent.html":{},"components/SidebarComponent.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-readme.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-readme/ngx-editorjs-changelog.html":{}}}],["elementref",{"_index":534,"title":{},"body":{"directives/NgxEditorJSDirective.html":{}}}],["elements",{"_index":352,"title":{},"body":{"interfaces/BlocksMap.html":{},"interfaces/ChangeMap.html":{},"interfaces/EditorMap.html":{},"injectables/NgxEditorJSService.html":{},"interfaces/ReadyMap.html":{}}}],["email",{"_index":1068,"title":{},"body":{"contributing.html":{}}}],["empathy",{"_index":1150,"title":{},"body":{"contributing.html":{}}}],["end",{"_index":385,"title":{},"body":{"classes/Changed.html":{},"classes/NotReady.html":{},"classes/Ready.html":{},"classes/SaveEnd.html":{},"classes/SaveStart.html":{},"contributing.html":{},"miscellaneous/enumerations.html":{}}}],["enforce",{"_index":1250,"title":{},"body":{"contributing.html":{}}}],["enforcement",{"_index":1226,"title":{},"body":{"contributing.html":{}}}],["ensure",{"_index":1077,"title":{},"body":{"contributing.html":{}}}],["entity",{"_index":914,"title":{},"body":{"injectables/PagesService.html":{}}}],["entitystate",{"_index":919,"title":{},"body":{"interfaces/PagesState.html":{},"injectables/PagesStore.html":{}}}],["entitystore",{"_index":920,"title":{},"body":{"interfaces/PagesState.html":{},"injectables/PagesStore.html":{}}}],["entrycomponents",{"_index":803,"title":{},"body":{"modules/NgxEditorjsDemoModule.html":{}}}],["enum",{"_index":379,"title":{},"body":{"classes/Changed.html":{},"classes/NotReady.html":{},"classes/Ready.html":{},"classes/SaveEnd.html":{},"classes/SaveStart.html":{}}}],["enumerations",{"_index":1322,"title":{"miscellaneous/enumerations.html":{}},"body":{"miscellaneous/enumerations.html":{}}}],["environment",{"_index":201,"title":{},"body":{"modules/AppModule.html":{},"contributing.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["environment.production",{"_index":218,"title":{},"body":{"modules/AppModule.html":{}}}],["environments/environment",{"_index":202,"title":{},"body":{"modules/AppModule.html":{}}}],["error",{"_index":730,"title":{},"body":{"injectables/NgxEditorJSService.html":{}}}],["error(`no",{"_index":776,"title":{},"body":{"injectables/NgxEditorJSService.html":{}}}],["etc",{"_index":1419,"title":{},"body":{"todo.html":{}}}],["ethnicity",{"_index":1121,"title":{},"body":{"contributing.html":{}}}],["event",{"_index":1222,"title":{},"body":{"contributing.html":{},"license.html":{}}}],["everyone",{"_index":1115,"title":{},"body":{"contributing.html":{}}}],["example",{"_index":501,"title":{},"body":{"components/NgxEditorJSComponent.html":{},"directives/NgxEditorJSDirective.html":{},"changelog.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-readme.html":{}}}],["examples",{"_index":1089,"title":{},"body":{"contributing.html":{}}}],["exclude",{"_index":660,"title":{},"body":{"injectables/NgxEditorJSPluginService.html":{}}}],["exclude.includes(key",{"_index":684,"title":{},"body":{"injectables/NgxEditorJSPluginService.html":{}}}],["excludetools",{"_index":707,"title":{},"body":{"injectables/NgxEditorJSService.html":{}}}],["exist",{"_index":733,"title":{},"body":{"injectables/NgxEditorJSService.html":{}}}],["existing",{"_index":711,"title":{},"body":{"injectables/NgxEditorJSService.html":{}}}],["expanded",{"_index":1045,"title":{},"body":{"changelog.html":{}}}],["expected",{"_index":1182,"title":{},"body":{"contributing.html":{}}}],["experience",{"_index":1114,"title":{},"body":{"contributing.html":{}}}],["experiences",{"_index":1142,"title":{},"body":{"contributing.html":{}}}],["explicit",{"_index":1172,"title":{},"body":{"contributing.html":{}}}],["export",{"_index":68,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"modules/ApplicationDataModule.html":{},"injectables/ApplicationQuery.html":{},"interfaces/ApplicationState.html":{},"injectables/ApplicationStore.html":{},"interfaces/BasePlugin.html":{},"interfaces/BasePlugin-1.html":{},"interfaces/Block.html":{},"interfaces/BlocksMap.html":{},"interfaces/ChangeMap.html":{},"classes/Changed.html":{},"interfaces/EditorJSConfig.html":{},"interfaces/EditorMap.html":{},"components/EditorPageComponent.html":{},"interfaces/Header.html":{},"interfaces/HeaderBlock.html":{},"interfaces/Image.html":{},"interfaces/ImageBlock.html":{},"interfaces/List.html":{},"interfaces/ListBlock.html":{},"modules/MaterialModule.html":{},"interfaces/MenuItem.html":{},"components/NavBarComponent.html":{},"components/NgxEditorJSComponent.html":{},"interfaces/NgxEditorJSConfig.html":{},"directives/NgxEditorJSDirective.html":{},"injectables/NgxEditorJSEffects.html":{},"modules/NgxEditorJSModule.html":{},"injectables/NgxEditorJSPluginService.html":{},"injectables/NgxEditorJSService.html":{},"modules/NgxEditorjsDemoModule.html":{},"modules/NgxEditorjsNgrxModule.html":{},"modules/NgxEditorjsPluginsModule.html":{},"classes/NotReady.html":{},"interfaces/Page.html":{},"interfaces/PageBlock.html":{},"components/PageContainerComponent.html":{},"modules/PageStoreModule.html":{},"injectables/PagesQuery.html":{},"injectables/PagesService.html":{},"interfaces/PagesState.html":{},"injectables/PagesStore.html":{},"interfaces/Paragraph.html":{},"interfaces/ParagraphBlock.html":{},"injectables/PluginCode.html":{},"modules/PluginCodeModule.html":{},"interfaces/PluginConfig.html":{},"interfaces/PluginConfig-1.html":{},"injectables/PluginHeader.html":{},"modules/PluginHeaderModule.html":{},"injectables/PluginImage.html":{},"modules/PluginImageModule.html":{},"injectables/PluginLink.html":{},"modules/PluginLinkModule.html":{},"injectables/PluginList.html":{},"modules/PluginListModule.html":{},"injectables/PluginMarker.html":{},"modules/PluginMarkerModule.html":{},"injectables/PluginParagraph.html":{},"modules/PluginParagraphModule.html":{},"injectables/PluginSimpleImage.html":{},"modules/PluginSimpleImageModule.html":{},"classes/Ready.html":{},"interfaces/ReadyMap.html":{},"classes/SaveEnd.html":{},"classes/SaveStart.html":{},"components/SidebarComponent.html":{},"interfaces/Tag.html":{},"interfaces/ToolSettingsMap.html":{},"interfaces/ToolSettingsMap-1.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-readme.html":{}}}],["exported",{"_index":297,"title":{},"body":{"interfaces/BasePlugin.html":{},"interfaces/BasePlugin-1.html":{},"interfaces/PluginConfig.html":{},"interfaces/PluginConfig-1.html":{},"interfaces/ToolSettingsMap.html":{},"interfaces/ToolSettingsMap-1.html":{}}}],["exports",{"_index":157,"title":{},"body":{"modules/AppModule.html":{},"modules/ApplicationDataModule.html":{},"modules/MaterialModule.html":{},"modules/NgxEditorJSModule.html":{},"modules/NgxEditorjsDemoModule.html":{},"modules/NgxEditorjsNgrxModule.html":{},"modules/NgxEditorjsPluginsModule.html":{},"modules/PageStoreModule.html":{},"modules/PluginCodeModule.html":{},"modules/PluginHeaderModule.html":{},"modules/PluginImageModule.html":{},"modules/PluginLinkModule.html":{},"modules/PluginListModule.html":{},"modules/PluginMarkerModule.html":{},"modules/PluginParagraphModule.html":{},"modules/PluginSimpleImageModule.html":{},"changelog.html":{},"overview.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-readme.html":{}}}],["expose",{"_index":1414,"title":{},"body":{"todo.html":{}}}],["exposed",{"_index":1084,"title":{},"body":{"contributing.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-readme.html":{}}}],["exposes",{"_index":1481,"title":{},"body":{"additional-documentation/tinynodes-library-docs/ngx-editorjs-readme.html":{}}}],["express",{"_index":1378,"title":{},"body":{"license.html":{}}}],["expression",{"_index":1124,"title":{},"body":{"contributing.html":{}}}],["extendable",{"_index":1458,"title":{},"body":{"additional-documentation/tinynodes-library-docs/ngx-editorjs-readme.html":{}}}],["extending",{"_index":293,"title":{},"body":{"interfaces/BasePlugin.html":{},"interfaces/BasePlugin-1.html":{},"interfaces/PluginConfig.html":{},"interfaces/PluginConfig-1.html":{},"interfaces/ToolSettingsMap.html":{},"interfaces/ToolSettingsMap-1.html":{}}}],["extends",{"_index":250,"title":{},"body":{"injectables/ApplicationQuery.html":{},"injectables/ApplicationStore.html":{},"interfaces/Block.html":{},"interfaces/Header.html":{},"interfaces/HeaderBlock.html":{},"interfaces/Image.html":{},"interfaces/ImageBlock.html":{},"interfaces/List.html":{},"interfaces/ListBlock.html":{},"interfaces/Page.html":{},"interfaces/PageBlock.html":{},"injectables/PagesQuery.html":{},"interfaces/PagesState.html":{},"injectables/PagesStore.html":{},"interfaces/Paragraph.html":{},"interfaces/ParagraphBlock.html":{},"interfaces/Tag.html":{}}}],["face",{"_index":1252,"title":{},"body":{"contributing.html":{}}}],["factory",{"_index":633,"title":{},"body":{"modules/NgxEditorJSModule.html":{},"miscellaneous/variables.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-readme.html":{}}}],["failed",{"_index":1508,"title":{},"body":{"additional-documentation/tinynodes-library-docs/ngx-editorjs-readme/ngx-editorjs-changelog.html":{}}}],["fair",{"_index":1185,"title":{},"body":{"contributing.html":{}}}],["faith",{"_index":1251,"title":{},"body":{"contributing.html":{}}}],["false",{"_index":272,"title":{},"body":{"injectables/ApplicationStore.html":{},"interfaces/EditorJSConfig.html":{},"interfaces/NgxEditorJSConfig.html":{},"injectables/NgxEditorJSEffects.html":{},"injectables/NgxEditorJSService.html":{},"miscellaneous/variables.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-readme.html":{}}}],["false]].foreach(([mapkay",{"_index":784,"title":{},"body":{"injectables/NgxEditorJSService.html":{}}}],["fb",{"_index":444,"title":{},"body":{"components/EditorPageComponent.html":{}}}],["feature",{"_index":1423,"title":{},"body":{"todo.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-readme.html":{}}}],["features",{"_index":592,"title":{},"body":{"modules/NgxEditorJSModule.html":{},"index.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-readme.html":{}}}],["file",{"_index":9,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"modules/ApplicationDataModule.html":{},"injectables/ApplicationQuery.html":{},"interfaces/ApplicationState.html":{},"injectables/ApplicationStore.html":{},"interfaces/BasePlugin.html":{},"interfaces/BasePlugin-1.html":{},"interfaces/Block.html":{},"interfaces/BlocksMap.html":{},"interfaces/ChangeMap.html":{},"classes/Changed.html":{},"interfaces/EditorJSConfig.html":{},"interfaces/EditorMap.html":{},"components/EditorPageComponent.html":{},"interfaces/Header.html":{},"interfaces/HeaderBlock.html":{},"interfaces/Image.html":{},"interfaces/ImageBlock.html":{},"interfaces/List.html":{},"interfaces/ListBlock.html":{},"modules/MaterialModule.html":{},"interfaces/MenuItem.html":{},"components/NavBarComponent.html":{},"components/NgxEditorJSComponent.html":{},"interfaces/NgxEditorJSConfig.html":{},"directives/NgxEditorJSDirective.html":{},"injectables/NgxEditorJSEffects.html":{},"modules/NgxEditorJSModule.html":{},"injectables/NgxEditorJSPluginService.html":{},"injectables/NgxEditorJSService.html":{},"modules/NgxEditorjsDemoModule.html":{},"modules/NgxEditorjsNgrxModule.html":{},"modules/NgxEditorjsPluginsModule.html":{},"classes/NotReady.html":{},"interfaces/Page.html":{},"interfaces/PageBlock.html":{},"components/PageContainerComponent.html":{},"modules/PageStoreModule.html":{},"injectables/PagesQuery.html":{},"injectables/PagesService.html":{},"interfaces/PagesState.html":{},"injectables/PagesStore.html":{},"interfaces/Paragraph.html":{},"interfaces/ParagraphBlock.html":{},"injectables/PluginCode.html":{},"modules/PluginCodeModule.html":{},"interfaces/PluginConfig.html":{},"interfaces/PluginConfig-1.html":{},"injectables/PluginHeader.html":{},"modules/PluginHeaderModule.html":{},"injectables/PluginImage.html":{},"modules/PluginImageModule.html":{},"injectables/PluginLink.html":{},"modules/PluginLinkModule.html":{},"injectables/PluginList.html":{},"modules/PluginListModule.html":{},"injectables/PluginMarker.html":{},"modules/PluginMarkerModule.html":{},"injectables/PluginParagraph.html":{},"modules/PluginParagraphModule.html":{},"injectables/PluginSimpleImage.html":{},"modules/PluginSimpleImageModule.html":{},"classes/Ready.html":{},"interfaces/ReadyMap.html":{},"classes/SaveEnd.html":{},"classes/SaveStart.html":{},"components/SidebarComponent.html":{},"interfaces/Tag.html":{},"interfaces/ToolSettingsMap.html":{},"interfaces/ToolSettingsMap-1.html":{},"contributing.html":{},"coverage.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-readme/ngx-editorjs-changelog.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-plugins-readme.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-plugins-readme/ngx-editorjs-plugins-changelog.html":{}}}],["filed",{"_index":1041,"title":{},"body":{"changelog.html":{}}}],["files",{"_index":1090,"title":{},"body":{"contributing.html":{},"license.html":{}}}],["filter(([key",{"_index":683,"title":{},"body":{"injectables/NgxEditorJSPluginService.html":{}}}],["finaltools",{"_index":688,"title":{},"body":{"injectables/NgxEditorJSPluginService.html":{}}}],["find",{"_index":1024,"title":{},"body":{"changelog.html":{},"index.html":{},"additional-documentation/tinynodes-library-docs.html":{}}}],["first",{"_index":420,"title":{},"body":{"interfaces/EditorJSConfig.html":{},"interfaces/NgxEditorJSConfig.html":{},"injectables/NgxEditorJSService.html":{},"changelog.html":{},"contributing.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-readme.html":{}}}],["fitness",{"_index":1383,"title":{},"body":{"license.html":{}}}],["fixes",{"_index":1506,"title":{},"body":{"additional-documentation/tinynodes-library-docs/ngx-editorjs-readme/ngx-editorjs-changelog.html":{}}}],["flexlayoutmodule",{"_index":180,"title":{},"body":{"modules/AppModule.html":{}}}],["focus",{"_index":419,"title":{},"body":{"interfaces/EditorJSConfig.html":{},"interfaces/NgxEditorJSConfig.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-readme.html":{}}}],["focusing",{"_index":1147,"title":{},"body":{"contributing.html":{}}}],["folder",{"_index":1336,"title":{},"body":{"index.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-readme.html":{}}}],["follow",{"_index":1072,"title":{},"body":{"contributing.html":{}}}],["following",{"_index":1368,"title":{},"body":{"license.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-readme.html":{}}}],["for_root_options_token",{"_index":634,"title":{},"body":{"modules/NgxEditorJSModule.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["foreach(([key",{"_index":676,"title":{},"body":{"injectables/NgxEditorJSPluginService.html":{}}}],["form",{"_index":439,"title":{},"body":{"components/EditorPageComponent.html":{}}}],["format",{"_index":1488,"title":{},"body":{"additional-documentation/tinynodes-library-docs/ngx-editorjs-readme/ngx-editorjs-changelog.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-plugins-readme/ngx-editorjs-plugins-changelog.html":{}}}],["formbuilder",{"_index":441,"title":{},"body":{"components/EditorPageComponent.html":{}}}],["formgroup",{"_index":448,"title":{},"body":{"components/EditorPageComponent.html":{}}}],["forroot",{"_index":593,"title":{},"body":{"modules/NgxEditorJSModule.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-readme.html":{}}}],["forroot(@optional",{"_index":638,"title":{},"body":{"modules/NgxEditorJSModule.html":{}}}],["forroot(config",{"_index":596,"title":{},"body":{"modules/NgxEditorJSModule.html":{}}}],["fostering",{"_index":1105,"title":{},"body":{"contributing.html":{}}}],["free",{"_index":1113,"title":{},"body":{"contributing.html":{},"license.html":{}}}],["friendly",{"_index":1465,"title":{},"body":{"additional-documentation/tinynodes-library-docs/ngx-editorjs-readme.html":{}}}],["full",{"_index":1326,"title":{},"body":{"index.html":{},"todo.html":{},"miscellaneous/variables.html":{}}}],["fully",{"_index":1329,"title":{},"body":{"index.html":{}}}],["function",{"_index":283,"title":{},"body":{"interfaces/BasePlugin.html":{},"interfaces/BasePlugin-1.html":{},"modules/NgxEditorJSModule.html":{},"coverage.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-readme.html":{}}}],["functions",{"_index":1324,"title":{"miscellaneous/functions.html":{}},"body":{"miscellaneous/functions.html":{}}}],["furnished",{"_index":1367,"title":{},"body":{"license.html":{}}}],["further",{"_index":1224,"title":{},"body":{"contributing.html":{}}}],["future",{"_index":1459,"title":{},"body":{"additional-documentation/tinynodes-library-docs/ngx-editorjs-readme.html":{}}}],["gender",{"_index":1122,"title":{},"body":{"contributing.html":{}}}],["general",{"_index":1342,"title":{},"body":{"license.html":{},"todo.html":{}}}],["generated",{"_index":694,"title":{},"body":{"injectables/NgxEditorJSService.html":{},"index.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-readme/ngx-editorjs-changelog.html":{}}}],["get(key",{"_index":656,"title":{},"body":{"injectables/NgxEditorJSPluginService.html":{}}}],["getblocks",{"_index":698,"title":{},"body":{"injectables/NgxEditorJSService.html":{}}}],["getblocks(holder",{"_index":727,"title":{},"body":{"injectables/NgxEditorJSService.html":{}}}],["geteditor",{"_index":540,"title":{},"body":{"directives/NgxEditorJSDirective.html":{},"injectables/NgxEditorJSService.html":{}}}],["geteditor(holder",{"_index":731,"title":{},"body":{"injectables/NgxEditorJSService.html":{}}}],["getform",{"_index":446,"title":{},"body":{"components/EditorPageComponent.html":{}}}],["getgreeting",{"_index":1271,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["gethidden",{"_index":236,"title":{},"body":{"injectables/AppService.html":{}}}],["getpages",{"_index":859,"title":{},"body":{"components/PageContainerComponent.html":{},"injectables/PagesService.html":{}}}],["getplugins",{"_index":665,"title":{},"body":{"injectables/NgxEditorJSPluginService.html":{}}}],["getservice",{"_index":542,"title":{},"body":{"directives/NgxEditorJSDirective.html":{}}}],["getters",{"_index":1511,"title":{},"body":{"additional-documentation/tinynodes-library-docs/ngx-editorjs-readme/ngx-editorjs-changelog.html":{}}}],["getting",{"_index":1018,"title":{"changelog.html":{},"contributing.html":{},"index.html":{},"license.html":{},"todo.html":{}},"body":{}}],["gettools",{"_index":647,"title":{},"body":{"injectables/NgxEditorJSPluginService.html":{}}}],["gettools(exclude",{"_index":658,"title":{},"body":{"injectables/NgxEditorJSPluginService.html":{}}}],["github",{"_index":493,"title":{},"body":{"components/NavBarComponent.html":{},"modules/PluginCodeModule.html":{},"modules/PluginHeaderModule.html":{},"modules/PluginImageModule.html":{},"modules/PluginLinkModule.html":{},"modules/PluginListModule.html":{},"modules/PluginMarkerModule.html":{},"modules/PluginParagraphModule.html":{},"modules/PluginSimpleImageModule.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-readme.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-plugins-readme.html":{}}}],["go",{"_index":864,"title":{},"body":{"components/PageContainerComponent.html":{}}}],["good",{"_index":1060,"title":{},"body":{"changelog.html":{},"contributing.html":{}}}],["gracefully",{"_index":1143,"title":{},"body":{"contributing.html":{}}}],["granted",{"_index":1347,"title":{},"body":{"license.html":{}}}],["graph",{"_index":1402,"title":{},"body":{"modules.html":{}}}],["gt",{"_index":865,"title":{},"body":{"components/PageContainerComponent.html":{}}}],["guid",{"_index":905,"title":{},"body":{"injectables/PagesService.html":{}}}],["hammerjs",{"_index":1315,"title":{},"body":{"dependencies.html":{}}}],["handling",{"_index":1478,"title":{},"body":{"additional-documentation/tinynodes-library-docs/ngx-editorjs-readme.html":{}}}],["harassing",{"_index":1228,"title":{},"body":{"contributing.html":{}}}],["harassment",{"_index":1112,"title":{},"body":{"contributing.html":{}}}],["harmful",{"_index":1204,"title":{},"body":{"contributing.html":{}}}],["haschanged",{"_index":699,"title":{},"body":{"injectables/NgxEditorJSService.html":{}}}],["haschanged(holder",{"_index":738,"title":{},"body":{"injectables/NgxEditorJSService.html":{}}}],["header",{"_index":330,"title":{"interfaces/Header.html":{}},"body":{"interfaces/Block.html":{},"interfaces/Header.html":{},"interfaces/HeaderBlock.html":{},"interfaces/Image.html":{},"interfaces/ImageBlock.html":{},"interfaces/List.html":{},"interfaces/ListBlock.html":{},"interfaces/Paragraph.html":{},"interfaces/ParagraphBlock.html":{},"injectables/PluginHeader.html":{},"modules/PluginHeaderModule.html":{},"coverage.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-readme.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-readme/ngx-editorjs-changelog.html":{}}}],["header.plugin",{"_index":943,"title":{},"body":{"modules/PluginHeaderModule.html":{}}}],["headerblock",{"_index":334,"title":{"interfaces/HeaderBlock.html":{}},"body":{"interfaces/Block.html":{},"interfaces/Header.html":{},"interfaces/HeaderBlock.html":{},"interfaces/Image.html":{},"interfaces/ImageBlock.html":{},"interfaces/List.html":{},"interfaces/ListBlock.html":{},"interfaces/Paragraph.html":{},"interfaces/ParagraphBlock.html":{},"coverage.html":{},"miscellaneous/typealiases.html":{}}}],["height",{"_index":89,"title":{},"body":{"components/AppComponent.html":{},"interfaces/EditorJSConfig.html":{},"components/EditorPageComponent.html":{},"components/NavBarComponent.html":{},"components/NgxEditorJSComponent.html":{},"interfaces/NgxEditorJSConfig.html":{},"components/PageContainerComponent.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-readme.html":{}}}],["helpers",{"_index":1416,"title":{},"body":{"todo.html":{}}}],["here",{"_index":1443,"title":{},"body":{"additional-documentation/tinynodes-library-docs.html":{}}}],["hereby",{"_index":1346,"title":{},"body":{"license.html":{}}}],["hidden",{"_index":227,"title":{},"body":{"injectables/AppService.html":{},"interfaces/ApplicationState.html":{},"injectables/ApplicationStore.html":{},"interfaces/MenuItem.html":{}}}],["hides",{"_index":1463,"title":{},"body":{"additional-documentation/tinynodes-library-docs/ngx-editorjs-readme.html":{}}}],["hidetoolbar",{"_index":398,"title":{},"body":{"interfaces/EditorJSConfig.html":{},"interfaces/NgxEditorJSConfig.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-readme.html":{}}}],["hold",{"_index":412,"title":{},"body":{"interfaces/EditorJSConfig.html":{},"components/NgxEditorJSComponent.html":{},"interfaces/NgxEditorJSConfig.html":{}}}],["holder",{"_index":389,"title":{},"body":{"classes/Changed.html":{},"interfaces/EditorJSConfig.html":{},"components/NgxEditorJSComponent.html":{},"interfaces/NgxEditorJSConfig.html":{},"injectables/NgxEditorJSEffects.html":{},"modules/NgxEditorJSModule.html":{},"injectables/NgxEditorJSService.html":{},"classes/NotReady.html":{},"classes/Ready.html":{},"classes/SaveEnd.html":{},"classes/SaveStart.html":{},"miscellaneous/variables.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-readme.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-readme/ngx-editorjs-changelog.html":{}}}],["holders",{"_index":1388,"title":{},"body":{"license.html":{}}}],["host",{"_index":474,"title":{},"body":{"components/EditorPageComponent.html":{},"components/NgxEditorJSComponent.html":{},"components/PageContainerComponent.html":{}}}],["html",{"_index":127,"title":{},"body":{"components/AppComponent.html":{},"components/EditorPageComponent.html":{},"components/NavBarComponent.html":{},"components/NgxEditorJSComponent.html":{},"components/PageContainerComponent.html":{},"components/SidebarComponent.html":{}}}],["http://contributor",{"_index":1263,"title":{},"body":{"contributing.html":{}}}],["httpclient",{"_index":176,"title":{},"body":{"modules/AppModule.html":{}}}],["httpclientmodule",{"_index":177,"title":{},"body":{"modules/AppModule.html":{}}}],["i'll",{"_index":1055,"title":{},"body":{"changelog.html":{}}}],["icon",{"_index":110,"title":{},"body":{"components/AppComponent.html":{},"components/NavBarComponent.html":{}}}],["id",{"_index":411,"title":{},"body":{"interfaces/EditorJSConfig.html":{},"components/NgxEditorJSComponent.html":{},"interfaces/NgxEditorJSConfig.html":{},"directives/NgxEditorJSDirective.html":{},"modules/NgxEditorJSModule.html":{},"injectables/NgxEditorJSService.html":{},"interfaces/Page.html":{},"interfaces/PageBlock.html":{},"injectables/PagesService.html":{},"interfaces/Tag.html":{},"miscellaneous/variables.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-readme.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-readme/ngx-editorjs-changelog.html":{}}}],["identifier",{"_index":1267,"title":{},"body":{"coverage.html":{}}}],["identity",{"_index":1123,"title":{},"body":{"contributing.html":{}}}],["image",{"_index":335,"title":{"interfaces/Image.html":{}},"body":{"interfaces/Block.html":{},"interfaces/Header.html":{},"interfaces/HeaderBlock.html":{},"interfaces/Image.html":{},"interfaces/ImageBlock.html":{},"interfaces/List.html":{},"interfaces/ListBlock.html":{},"interfaces/Paragraph.html":{},"interfaces/ParagraphBlock.html":{},"injectables/PluginImage.html":{},"injectables/PluginSimpleImage.html":{},"modules/PluginSimpleImageModule.html":{},"coverage.html":{}}}],["image.module",{"_index":846,"title":{},"body":{"modules/NgxEditorjsPluginsModule.html":{}}}],["image.module.ts",{"_index":1002,"title":{},"body":{"modules/PluginSimpleImageModule.html":{}}}],["image.plugin",{"_index":952,"title":{},"body":{"modules/PluginImageModule.html":{},"modules/PluginSimpleImageModule.html":{}}}],["image.plugin.ts",{"_index":995,"title":{},"body":{"injectables/PluginSimpleImage.html":{},"coverage.html":{}}}],["image.plugin.ts:14",{"_index":997,"title":{},"body":{"injectables/PluginSimpleImage.html":{}}}],["image/simple",{"_index":845,"title":{},"body":{"modules/NgxEditorjsPluginsModule.html":{},"injectables/PluginSimpleImage.html":{},"modules/PluginSimpleImageModule.html":{},"coverage.html":{}}}],["imageblock",{"_index":345,"title":{"interfaces/ImageBlock.html":{}},"body":{"interfaces/Block.html":{},"interfaces/Header.html":{},"interfaces/HeaderBlock.html":{},"interfaces/Image.html":{},"interfaces/ImageBlock.html":{},"interfaces/List.html":{},"interfaces/ListBlock.html":{},"interfaces/Paragraph.html":{},"interfaces/ParagraphBlock.html":{},"coverage.html":{},"miscellaneous/typealiases.html":{}}}],["imagery",{"_index":1156,"title":{},"body":{"contributing.html":{}}}],["implemented",{"_index":1446,"title":{},"body":{"additional-documentation/tinynodes-library-docs/ngx-editorjs-readme.html":{}}}],["implements",{"_index":19,"title":{},"body":{"components/AppComponent.html":{},"classes/Changed.html":{},"components/EditorPageComponent.html":{},"directives/NgxEditorJSDirective.html":{},"classes/NotReady.html":{},"injectables/PluginCode.html":{},"injectables/PluginHeader.html":{},"injectables/PluginImage.html":{},"injectables/PluginLink.html":{},"injectables/PluginList.html":{},"injectables/PluginMarker.html":{},"injectables/PluginParagraph.html":{},"injectables/PluginSimpleImage.html":{},"classes/Ready.html":{},"classes/SaveEnd.html":{},"classes/SaveStart.html":{},"components/SidebarComponent.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-readme.html":{}}}],["implied",{"_index":1379,"title":{},"body":{"license.html":{}}}],["import",{"_index":58,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"modules/ApplicationDataModule.html":{},"injectables/ApplicationQuery.html":{},"interfaces/ApplicationState.html":{},"injectables/ApplicationStore.html":{},"interfaces/BasePlugin.html":{},"interfaces/BasePlugin-1.html":{},"interfaces/BlocksMap.html":{},"interfaces/ChangeMap.html":{},"classes/Changed.html":{},"interfaces/EditorJSConfig.html":{},"interfaces/EditorMap.html":{},"components/EditorPageComponent.html":{},"modules/MaterialModule.html":{},"interfaces/MenuItem.html":{},"components/NavBarComponent.html":{},"components/NgxEditorJSComponent.html":{},"interfaces/NgxEditorJSConfig.html":{},"directives/NgxEditorJSDirective.html":{},"injectables/NgxEditorJSEffects.html":{},"modules/NgxEditorJSModule.html":{},"injectables/NgxEditorJSPluginService.html":{},"injectables/NgxEditorJSService.html":{},"modules/NgxEditorjsDemoModule.html":{},"modules/NgxEditorjsNgrxModule.html":{},"modules/NgxEditorjsPluginsModule.html":{},"classes/NotReady.html":{},"interfaces/Page.html":{},"interfaces/PageBlock.html":{},"components/PageContainerComponent.html":{},"modules/PageStoreModule.html":{},"injectables/PagesQuery.html":{},"injectables/PagesService.html":{},"interfaces/PagesState.html":{},"injectables/PagesStore.html":{},"injectables/PluginCode.html":{},"modules/PluginCodeModule.html":{},"interfaces/PluginConfig.html":{},"interfaces/PluginConfig-1.html":{},"injectables/PluginHeader.html":{},"modules/PluginHeaderModule.html":{},"injectables/PluginImage.html":{},"modules/PluginImageModule.html":{},"injectables/PluginLink.html":{},"modules/PluginLinkModule.html":{},"injectables/PluginList.html":{},"modules/PluginListModule.html":{},"injectables/PluginMarker.html":{},"modules/PluginMarkerModule.html":{},"injectables/PluginParagraph.html":{},"modules/PluginParagraphModule.html":{},"injectables/PluginSimpleImage.html":{},"modules/PluginSimpleImageModule.html":{},"classes/Ready.html":{},"interfaces/ReadyMap.html":{},"classes/SaveEnd.html":{},"classes/SaveStart.html":{},"components/SidebarComponent.html":{},"interfaces/Tag.html":{},"interfaces/ToolSettingsMap.html":{},"interfaces/ToolSettingsMap-1.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-readme.html":{}}}],["imported",{"_index":1518,"title":{},"body":{"additional-documentation/tinynodes-library-docs/ngx-editorjs-readme/ngx-editorjs-changelog.html":{}}}],["importing",{"_index":833,"title":{},"body":{"modules/NgxEditorjsPluginsModule.html":{}}}],["imports",{"_index":175,"title":{},"body":{"modules/AppModule.html":{},"modules/MaterialModule.html":{},"modules/NgxEditorJSModule.html":{},"modules/NgxEditorjsDemoModule.html":{},"modules/NgxEditorjsNgrxModule.html":{},"modules/NgxEditorjsPluginsModule.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-readme.html":{}}}],["improved",{"_index":1499,"title":{},"body":{"additional-documentation/tinynodes-library-docs/ngx-editorjs-readme/ngx-editorjs-changelog.html":{}}}],["inappropriate",{"_index":1175,"title":{},"body":{"contributing.html":{}}}],["incident",{"_index":1245,"title":{},"body":{"contributing.html":{}}}],["include",{"_index":717,"title":{},"body":{"injectables/NgxEditorJSService.html":{},"modules/NgxEditorjsPluginsModule.html":{},"contributing.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-readme.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-readme/ngx-editorjs-changelog.html":{}}}],["included",{"_index":1373,"title":{},"body":{"license.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-readme/ngx-editorjs-changelog.html":{}}}],["includes",{"_index":1082,"title":{},"body":{"contributing.html":{}}}],["including",{"_index":1334,"title":{},"body":{"index.html":{},"license.html":{}}}],["inclusive",{"_index":1136,"title":{},"body":{"contributing.html":{}}}],["increase",{"_index":1087,"title":{},"body":{"contributing.html":{}}}],["index",{"_index":29,"title":{"index.html":{}},"body":{"components/AppComponent.html":{},"injectables/AppService.html":{},"interfaces/ApplicationState.html":{},"injectables/ApplicationStore.html":{},"interfaces/BasePlugin.html":{},"interfaces/BasePlugin-1.html":{},"interfaces/Block.html":{},"classes/Changed.html":{},"interfaces/EditorJSConfig.html":{},"components/EditorPageComponent.html":{},"interfaces/Header.html":{},"interfaces/HeaderBlock.html":{},"interfaces/Image.html":{},"interfaces/ImageBlock.html":{},"interfaces/List.html":{},"interfaces/ListBlock.html":{},"interfaces/MenuItem.html":{},"components/NavBarComponent.html":{},"components/NgxEditorJSComponent.html":{},"interfaces/NgxEditorJSConfig.html":{},"directives/NgxEditorJSDirective.html":{},"injectables/NgxEditorJSEffects.html":{},"injectables/NgxEditorJSPluginService.html":{},"injectables/NgxEditorJSService.html":{},"classes/NotReady.html":{},"interfaces/Page.html":{},"interfaces/PageBlock.html":{},"components/PageContainerComponent.html":{},"injectables/PagesService.html":{},"interfaces/Paragraph.html":{},"interfaces/ParagraphBlock.html":{},"injectables/PluginCode.html":{},"injectables/PluginHeader.html":{},"injectables/PluginImage.html":{},"injectables/PluginLink.html":{},"injectables/PluginList.html":{},"injectables/PluginMarker.html":{},"injectables/PluginParagraph.html":{},"injectables/PluginSimpleImage.html":{},"classes/Ready.html":{},"classes/SaveEnd.html":{},"classes/SaveStart.html":{},"components/SidebarComponent.html":{},"interfaces/Tag.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["indexable",{"_index":315,"title":{},"body":{"interfaces/Block.html":{},"interfaces/BlocksMap.html":{},"interfaces/ChangeMap.html":{},"interfaces/EditorMap.html":{},"interfaces/PluginConfig.html":{},"interfaces/PluginConfig-1.html":{},"interfaces/ReadyMap.html":{},"interfaces/ToolSettingsMap.html":{},"interfaces/ToolSettingsMap-1.html":{}}}],["individual",{"_index":836,"title":{},"body":{"modules/NgxEditorjsPluginsModule.html":{},"contributing.html":{}}}],["info",{"_index":3,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"modules/ApplicationDataModule.html":{},"injectables/ApplicationQuery.html":{},"interfaces/ApplicationState.html":{},"injectables/ApplicationStore.html":{},"interfaces/BasePlugin.html":{},"interfaces/BasePlugin-1.html":{},"interfaces/Block.html":{},"interfaces/BlocksMap.html":{},"interfaces/ChangeMap.html":{},"classes/Changed.html":{},"interfaces/EditorJSConfig.html":{},"interfaces/EditorMap.html":{},"components/EditorPageComponent.html":{},"interfaces/Header.html":{},"interfaces/HeaderBlock.html":{},"interfaces/Image.html":{},"interfaces/ImageBlock.html":{},"interfaces/List.html":{},"interfaces/ListBlock.html":{},"modules/MaterialModule.html":{},"interfaces/MenuItem.html":{},"components/NavBarComponent.html":{},"components/NgxEditorJSComponent.html":{},"interfaces/NgxEditorJSConfig.html":{},"directives/NgxEditorJSDirective.html":{},"injectables/NgxEditorJSEffects.html":{},"modules/NgxEditorJSModule.html":{},"injectables/NgxEditorJSPluginService.html":{},"injectables/NgxEditorJSService.html":{},"modules/NgxEditorjsDemoModule.html":{},"modules/NgxEditorjsNgrxModule.html":{},"modules/NgxEditorjsPluginsModule.html":{},"classes/NotReady.html":{},"interfaces/Page.html":{},"interfaces/PageBlock.html":{},"components/PageContainerComponent.html":{},"modules/PageStoreModule.html":{},"injectables/PagesQuery.html":{},"injectables/PagesService.html":{},"interfaces/PagesState.html":{},"injectables/PagesStore.html":{},"interfaces/Paragraph.html":{},"interfaces/ParagraphBlock.html":{},"injectables/PluginCode.html":{},"modules/PluginCodeModule.html":{},"interfaces/PluginConfig.html":{},"interfaces/PluginConfig-1.html":{},"injectables/PluginHeader.html":{},"modules/PluginHeaderModule.html":{},"injectables/PluginImage.html":{},"modules/PluginImageModule.html":{},"injectables/PluginLink.html":{},"modules/PluginLinkModule.html":{},"injectables/PluginList.html":{},"modules/PluginListModule.html":{},"injectables/PluginMarker.html":{},"modules/PluginMarkerModule.html":{},"injectables/PluginParagraph.html":{},"modules/PluginParagraphModule.html":{},"injectables/PluginSimpleImage.html":{},"modules/PluginSimpleImageModule.html":{},"classes/Ready.html":{},"interfaces/ReadyMap.html":{},"classes/SaveEnd.html":{},"classes/SaveStart.html":{},"components/SidebarComponent.html":{},"interfaces/Tag.html":{},"interfaces/ToolSettingsMap.html":{},"interfaces/ToolSettingsMap-1.html":{}}}],["information",{"_index":1167,"title":{},"body":{"contributing.html":{},"index.html":{}}}],["initial",{"_index":301,"title":{},"body":{"interfaces/BasePlugin.html":{},"interfaces/BasePlugin-1.html":{},"interfaces/EditorJSConfig.html":{},"components/NgxEditorJSComponent.html":{},"interfaces/NgxEditorJSConfig.html":{},"injectables/NgxEditorJSPluginService.html":{},"injectables/NgxEditorJSService.html":{},"interfaces/PluginConfig.html":{},"interfaces/PluginConfig-1.html":{},"interfaces/ToolSettingsMap.html":{},"interfaces/ToolSettingsMap-1.html":{},"miscellaneous/variables.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-readme.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-readme/ngx-editorjs-changelog.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-plugins-readme/ngx-editorjs-plugins-changelog.html":{}}}],["initialblock",{"_index":399,"title":{},"body":{"interfaces/EditorJSConfig.html":{},"interfaces/NgxEditorJSConfig.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-readme.html":{}}}],["initialized",{"_index":76,"title":{},"body":{"components/AppComponent.html":{},"injectables/NgxEditorJSPluginService.html":{}}}],["initialplugins",{"_index":304,"title":{},"body":{"interfaces/BasePlugin.html":{},"interfaces/BasePlugin-1.html":{},"injectables/NgxEditorJSPluginService.html":{},"interfaces/PluginConfig.html":{},"interfaces/PluginConfig-1.html":{},"interfaces/ToolSettingsMap.html":{},"interfaces/ToolSettingsMap-1.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["inject",{"_index":668,"title":{},"body":{"injectables/NgxEditorJSPluginService.html":{},"injectables/NgxEditorJSService.html":{}}}],["inject(ngx_editorjs_config",{"_index":752,"title":{},"body":{"injectables/NgxEditorJSService.html":{}}}],["injectable",{"_index":221,"title":{"injectables/AppService.html":{},"injectables/ApplicationQuery.html":{},"injectables/ApplicationStore.html":{},"injectables/NgxEditorJSEffects.html":{},"injectables/NgxEditorJSPluginService.html":{},"injectables/NgxEditorJSService.html":{},"injectables/PagesQuery.html":{},"injectables/PagesService.html":{},"injectables/PagesStore.html":{},"injectables/PluginCode.html":{},"injectables/PluginHeader.html":{},"injectables/PluginImage.html":{},"injectables/PluginLink.html":{},"injectables/PluginList.html":{},"injectables/PluginMarker.html":{},"injectables/PluginParagraph.html":{},"injectables/PluginSimpleImage.html":{}},"body":{"injectables/AppService.html":{},"injectables/ApplicationQuery.html":{},"injectables/ApplicationStore.html":{},"injectables/NgxEditorJSEffects.html":{},"injectables/NgxEditorJSPluginService.html":{},"injectables/NgxEditorJSService.html":{},"injectables/PagesQuery.html":{},"injectables/PagesService.html":{},"interfaces/PagesState.html":{},"injectables/PagesStore.html":{},"injectables/PluginCode.html":{},"injectables/PluginHeader.html":{},"injectables/PluginImage.html":{},"injectables/PluginLink.html":{},"injectables/PluginList.html":{},"injectables/PluginMarker.html":{},"injectables/PluginParagraph.html":{},"injectables/PluginSimpleImage.html":{},"coverage.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-readme.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-readme/ngx-editorjs-changelog.html":{}}}],["injectables",{"_index":222,"title":{},"body":{"injectables/AppService.html":{},"injectables/ApplicationQuery.html":{},"injectables/ApplicationStore.html":{},"injectables/NgxEditorJSEffects.html":{},"injectables/NgxEditorJSPluginService.html":{},"injectables/NgxEditorJSService.html":{},"injectables/PagesQuery.html":{},"injectables/PagesService.html":{},"injectables/PagesStore.html":{},"injectables/PluginCode.html":{},"injectables/PluginHeader.html":{},"injectables/PluginImage.html":{},"injectables/PluginLink.html":{},"injectables/PluginList.html":{},"injectables/PluginMarker.html":{},"injectables/PluginParagraph.html":{},"injectables/PluginSimpleImage.html":{},"overview.html":{}}}],["injected",{"_index":645,"title":{},"body":{"injectables/NgxEditorJSPluginService.html":{}}}],["injecting",{"_index":632,"title":{},"body":{"modules/NgxEditorJSModule.html":{},"miscellaneous/variables.html":{}}}],["injection",{"_index":299,"title":{},"body":{"interfaces/BasePlugin.html":{},"interfaces/BasePlugin-1.html":{},"interfaces/EditorJSConfig.html":{},"interfaces/NgxEditorJSConfig.html":{},"interfaces/PluginConfig.html":{},"interfaces/PluginConfig-1.html":{},"interfaces/ToolSettingsMap.html":{},"interfaces/ToolSettingsMap-1.html":{},"miscellaneous/variables.html":{}}}],["injectiontoken",{"_index":286,"title":{},"body":{"interfaces/BasePlugin.html":{},"interfaces/BasePlugin-1.html":{},"interfaces/EditorJSConfig.html":{},"interfaces/NgxEditorJSConfig.html":{},"modules/NgxEditorJSModule.html":{},"interfaces/PluginConfig.html":{},"interfaces/PluginConfig-1.html":{},"interfaces/ToolSettingsMap.html":{},"interfaces/ToolSettingsMap-1.html":{}}}],["injectiontoken('forroot",{"_index":635,"title":{},"body":{"modules/NgxEditorJSModule.html":{},"miscellaneous/variables.html":{}}}],["injectiontoken('initialplugins",{"_index":305,"title":{},"body":{"interfaces/BasePlugin.html":{},"interfaces/BasePlugin-1.html":{},"interfaces/PluginConfig.html":{},"interfaces/PluginConfig-1.html":{},"interfaces/ToolSettingsMap.html":{},"interfaces/ToolSettingsMap-1.html":{},"miscellaneous/variables.html":{}}}],["injectiontoken('ngx_editorjs_config",{"_index":430,"title":{},"body":{"interfaces/EditorJSConfig.html":{},"interfaces/NgxEditorJSConfig.html":{},"miscellaneous/variables.html":{}}}],["injectiontoken('userplugins",{"_index":309,"title":{},"body":{"interfaces/BasePlugin.html":{},"interfaces/BasePlugin-1.html":{},"interfaces/PluginConfig.html":{},"interfaces/PluginConfig-1.html":{},"interfaces/ToolSettingsMap.html":{},"interfaces/ToolSettingsMap-1.html":{},"miscellaneous/variables.html":{}}}],["inline",{"_index":112,"title":{},"body":{"components/AppComponent.html":{},"components/NavBarComponent.html":{},"modules/NgxEditorjsPluginsModule.html":{},"injectables/PluginMarker.html":{},"modules/PluginMarkerModule.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-plugins-readme.html":{}}}],["input",{"_index":59,"title":{},"body":{"components/AppComponent.html":{},"components/NavBarComponent.html":{},"components/NgxEditorJSComponent.html":{},"directives/NgxEditorJSDirective.html":{},"todo.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-readme.html":{}}}],["inputs",{"_index":32,"title":{},"body":{"components/AppComponent.html":{},"components/NavBarComponent.html":{},"components/NgxEditorJSComponent.html":{},"directives/NgxEditorJSDirective.html":{}}}],["inside",{"_index":1466,"title":{},"body":{"additional-documentation/tinynodes-library-docs/ngx-editorjs-readme.html":{}}}],["install",{"_index":1078,"title":{},"body":{"contributing.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-readme.html":{}}}],["installed",{"_index":1450,"title":{},"body":{"additional-documentation/tinynodes-library-docs/ngx-editorjs-readme.html":{}}}],["installing",{"_index":1447,"title":{},"body":{"additional-documentation/tinynodes-library-docs/ngx-editorjs-readme.html":{}}}],["instance",{"_index":396,"title":{},"body":{"interfaces/EditorJSConfig.html":{},"components/NgxEditorJSComponent.html":{},"interfaces/NgxEditorJSConfig.html":{},"directives/NgxEditorJSDirective.html":{},"modules/NgxEditorJSModule.html":{},"injectables/NgxEditorJSPluginService.html":{},"injectables/NgxEditorJSService.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-readme.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-readme/ngx-editorjs-changelog.html":{}}}],["instance.api",{"_index":1482,"title":{},"body":{"additional-documentation/tinynodes-library-docs/ngx-editorjs-readme.html":{}}}],["instances",{"_index":355,"title":{},"body":{"interfaces/BlocksMap.html":{},"interfaces/ChangeMap.html":{},"interfaces/EditorMap.html":{},"injectables/NgxEditorJSPluginService.html":{},"injectables/NgxEditorJSService.html":{},"interfaces/ReadyMap.html":{},"contributing.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-readme.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-readme/ngx-editorjs-changelog.html":{}}}],["insulting/derogatory",{"_index":1161,"title":{},"body":{"contributing.html":{}}}],["interactions",{"_index":1073,"title":{},"body":{"contributing.html":{}}}],["interest",{"_index":1104,"title":{},"body":{"contributing.html":{}}}],["interface",{"_index":257,"title":{"interfaces/ApplicationState.html":{},"interfaces/BasePlugin.html":{},"interfaces/BasePlugin-1.html":{},"interfaces/Block.html":{},"interfaces/BlocksMap.html":{},"interfaces/ChangeMap.html":{},"interfaces/EditorJSConfig.html":{},"interfaces/EditorMap.html":{},"interfaces/Header.html":{},"interfaces/HeaderBlock.html":{},"interfaces/Image.html":{},"interfaces/ImageBlock.html":{},"interfaces/List.html":{},"interfaces/ListBlock.html":{},"interfaces/MenuItem.html":{},"interfaces/NgxEditorJSConfig.html":{},"interfaces/Page.html":{},"interfaces/PageBlock.html":{},"interfaces/PagesState.html":{},"interfaces/Paragraph.html":{},"interfaces/ParagraphBlock.html":{},"interfaces/PluginConfig.html":{},"interfaces/PluginConfig-1.html":{},"interfaces/ReadyMap.html":{},"interfaces/Tag.html":{},"interfaces/ToolSettingsMap.html":{},"interfaces/ToolSettingsMap-1.html":{}},"body":{"interfaces/ApplicationState.html":{},"interfaces/BasePlugin.html":{},"interfaces/BasePlugin-1.html":{},"interfaces/Block.html":{},"interfaces/BlocksMap.html":{},"interfaces/ChangeMap.html":{},"interfaces/EditorJSConfig.html":{},"interfaces/EditorMap.html":{},"interfaces/Header.html":{},"interfaces/HeaderBlock.html":{},"interfaces/Image.html":{},"interfaces/ImageBlock.html":{},"interfaces/List.html":{},"interfaces/ListBlock.html":{},"interfaces/MenuItem.html":{},"components/NgxEditorJSComponent.html":{},"interfaces/NgxEditorJSConfig.html":{},"interfaces/Page.html":{},"interfaces/PageBlock.html":{},"interfaces/PagesState.html":{},"injectables/PagesStore.html":{},"interfaces/Paragraph.html":{},"interfaces/ParagraphBlock.html":{},"interfaces/PluginConfig.html":{},"interfaces/PluginConfig-1.html":{},"interfaces/ReadyMap.html":{},"interfaces/Tag.html":{},"interfaces/ToolSettingsMap.html":{},"interfaces/ToolSettingsMap-1.html":{},"contributing.html":{},"coverage.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-readme/ngx-editorjs-changelog.html":{}}}],["interfaces",{"_index":258,"title":{},"body":{"interfaces/ApplicationState.html":{},"interfaces/BasePlugin.html":{},"interfaces/BasePlugin-1.html":{},"interfaces/Block.html":{},"interfaces/BlocksMap.html":{},"interfaces/ChangeMap.html":{},"interfaces/EditorJSConfig.html":{},"interfaces/EditorMap.html":{},"interfaces/Header.html":{},"interfaces/HeaderBlock.html":{},"interfaces/Image.html":{},"interfaces/ImageBlock.html":{},"interfaces/List.html":{},"interfaces/ListBlock.html":{},"interfaces/MenuItem.html":{},"interfaces/NgxEditorJSConfig.html":{},"interfaces/Page.html":{},"interfaces/PageBlock.html":{},"interfaces/PagesState.html":{},"interfaces/Paragraph.html":{},"interfaces/ParagraphBlock.html":{},"interfaces/PluginConfig.html":{},"interfaces/PluginConfig-1.html":{},"interfaces/ReadyMap.html":{},"interfaces/Tag.html":{},"interfaces/ToolSettingsMap.html":{},"interfaces/ToolSettingsMap-1.html":{},"overview.html":{}}}],["internal",{"_index":631,"title":{},"body":{"modules/NgxEditorJSModule.html":{},"injectables/NgxEditorJSService.html":{},"miscellaneous/variables.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-readme/ngx-editorjs-changelog.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-plugins-readme/ngx-editorjs-plugins-changelog.html":{}}}],["investigated",{"_index":1236,"title":{},"body":{"contributing.html":{}}}],["isready",{"_index":700,"title":{},"body":{"injectables/NgxEditorJSService.html":{}}}],["isready(holder",{"_index":742,"title":{},"body":{"injectables/NgxEditorJSService.html":{}}}],["issue",{"_index":1067,"title":{},"body":{"contributing.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-readme/ngx-editorjs-changelog.html":{}}}],["issues",{"_index":1039,"title":{},"body":{"changelog.html":{},"contributing.html":{}}}],["items",{"_index":102,"title":{},"body":{"components/AppComponent.html":{},"interfaces/Block.html":{},"interfaces/Header.html":{},"interfaces/HeaderBlock.html":{},"interfaces/Image.html":{},"interfaces/ImageBlock.html":{},"interfaces/List.html":{},"interfaces/ListBlock.html":{},"components/NavBarComponent.html":{},"interfaces/Paragraph.html":{},"interfaces/ParagraphBlock.html":{}}}],["js",{"_index":611,"title":{},"body":{"modules/NgxEditorJSModule.html":{},"dependencies.html":{},"miscellaneous/variables.html":{}}}],["js/code",{"_index":933,"title":{},"body":{"modules/PluginCodeModule.html":{}}}],["js/header",{"_index":944,"title":{},"body":{"modules/PluginHeaderModule.html":{}}}],["js/image",{"_index":953,"title":{},"body":{"modules/PluginImageModule.html":{},"modules/PluginSimpleImageModule.html":{}}}],["js/link",{"_index":962,"title":{},"body":{"modules/PluginLinkModule.html":{}}}],["js/list",{"_index":971,"title":{},"body":{"modules/PluginListModule.html":{}}}],["js/marker",{"_index":983,"title":{},"body":{"modules/PluginMarkerModule.html":{}}}],["js/paragraph",{"_index":992,"title":{},"body":{"modules/PluginParagraphModule.html":{}}}],["keep",{"_index":1490,"title":{},"body":{"additional-documentation/tinynodes-library-docs/ngx-editorjs-readme/ngx-editorjs-changelog.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-plugins-readme/ngx-editorjs-plugins-changelog.html":{}}}],["key",{"_index":292,"title":{},"body":{"interfaces/BasePlugin.html":{},"interfaces/BasePlugin-1.html":{},"interfaces/Block.html":{},"interfaces/BlocksMap.html":{},"interfaces/ChangeMap.html":{},"interfaces/EditorMap.html":{},"interfaces/Header.html":{},"interfaces/HeaderBlock.html":{},"interfaces/Image.html":{},"interfaces/ImageBlock.html":{},"interfaces/List.html":{},"interfaces/ListBlock.html":{},"injectables/NgxEditorJSPluginService.html":{},"interfaces/Page.html":{},"interfaces/PageBlock.html":{},"interfaces/Paragraph.html":{},"interfaces/ParagraphBlock.html":{},"interfaces/PluginConfig.html":{},"interfaces/PluginConfig-1.html":{},"interfaces/ReadyMap.html":{},"interfaces/Tag.html":{},"interfaces/ToolSettingsMap.html":{},"interfaces/ToolSettingsMap-1.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-readme.html":{}}}],["keys",{"_index":662,"title":{},"body":{"injectables/NgxEditorJSPluginService.html":{},"injectables/NgxEditorJSService.html":{}}}],["kind",{"_index":1377,"title":{},"body":{"license.html":{}}}],["label",{"_index":123,"title":{},"body":{"components/AppComponent.html":{},"interfaces/ApplicationState.html":{},"interfaces/MenuItem.html":{},"components/NavBarComponent.html":{}}}],["language",{"_index":1137,"title":{},"body":{"contributing.html":{}}}],["last",{"_index":362,"title":{},"body":{"interfaces/BlocksMap.html":{},"interfaces/ChangeMap.html":{},"interfaces/EditorJSConfig.html":{},"interfaces/EditorMap.html":{},"interfaces/NgxEditorJSConfig.html":{},"injectables/NgxEditorJSService.html":{},"interfaces/ReadyMap.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-readme.html":{}}}],["layer",{"_index":1079,"title":{},"body":{"contributing.html":{}}}],["layout",{"_index":182,"title":{},"body":{"modules/AppModule.html":{},"dependencies.html":{}}}],["leadership",{"_index":1258,"title":{},"body":{"contributing.html":{}}}],["left",{"_index":523,"title":{},"body":{"components/NgxEditorJSComponent.html":{}}}],["legend",{"_index":126,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/ApplicationDataModule.html":{},"components/EditorPageComponent.html":{},"components/NavBarComponent.html":{},"components/NgxEditorJSComponent.html":{},"modules/NgxEditorJSModule.html":{},"modules/NgxEditorjsDemoModule.html":{},"modules/NgxEditorjsNgrxModule.html":{},"modules/NgxEditorjsPluginsModule.html":{},"components/PageContainerComponent.html":{},"modules/PageStoreModule.html":{},"modules/PluginCodeModule.html":{},"modules/PluginHeaderModule.html":{},"modules/PluginImageModule.html":{},"modules/PluginLinkModule.html":{},"modules/PluginListModule.html":{},"modules/PluginMarkerModule.html":{},"modules/PluginParagraphModule.html":{},"modules/PluginSimpleImageModule.html":{},"components/SidebarComponent.html":{},"overview.html":{}}}],["level",{"_index":331,"title":{},"body":{"interfaces/Block.html":{},"interfaces/Header.html":{},"interfaces/HeaderBlock.html":{},"interfaces/Image.html":{},"interfaces/ImageBlock.html":{},"interfaces/List.html":{},"interfaces/ListBlock.html":{},"interfaces/Paragraph.html":{},"interfaces/ParagraphBlock.html":{},"contributing.html":{}}}],["liability",{"_index":1392,"title":{},"body":{"license.html":{}}}],["liable",{"_index":1389,"title":{},"body":{"license.html":{}}}],["libraries",{"_index":1026,"title":{},"body":{"changelog.html":{},"index.html":{},"additional-documentation/tinynodes-library-docs.html":{}}}],["library",{"_index":1028,"title":{"additional-documentation/tinynodes-library-docs.html":{}},"body":{"changelog.html":{},"todo.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-readme.html":{}}}],["libs/.../blocks.ts",{"_index":1426,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["libs/.../config.ts",{"_index":1432,"title":{},"body":{"miscellaneous/variables.html":{}}}],["libs/.../index.ts",{"_index":1325,"title":{},"body":{"miscellaneous/functions.html":{}}}],["libs/.../ngx",{"_index":1323,"title":{},"body":{"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["libs/.../plugins.ts",{"_index":1431,"title":{},"body":{"miscellaneous/variables.html":{}}}],["libs/ngx",{"_index":276,"title":{},"body":{"interfaces/BasePlugin.html":{},"interfaces/BasePlugin-1.html":{},"interfaces/Block.html":{},"interfaces/BlocksMap.html":{},"interfaces/ChangeMap.html":{},"classes/Changed.html":{},"interfaces/EditorJSConfig.html":{},"interfaces/EditorMap.html":{},"components/EditorPageComponent.html":{},"interfaces/Header.html":{},"interfaces/HeaderBlock.html":{},"interfaces/Image.html":{},"interfaces/ImageBlock.html":{},"interfaces/List.html":{},"interfaces/ListBlock.html":{},"components/NgxEditorJSComponent.html":{},"interfaces/NgxEditorJSConfig.html":{},"directives/NgxEditorJSDirective.html":{},"injectables/NgxEditorJSEffects.html":{},"modules/NgxEditorJSModule.html":{},"injectables/NgxEditorJSPluginService.html":{},"injectables/NgxEditorJSService.html":{},"modules/NgxEditorjsDemoModule.html":{},"modules/NgxEditorjsNgrxModule.html":{},"modules/NgxEditorjsPluginsModule.html":{},"classes/NotReady.html":{},"interfaces/Page.html":{},"interfaces/PageBlock.html":{},"components/PageContainerComponent.html":{},"modules/PageStoreModule.html":{},"injectables/PagesQuery.html":{},"injectables/PagesService.html":{},"interfaces/PagesState.html":{},"injectables/PagesStore.html":{},"interfaces/Paragraph.html":{},"interfaces/ParagraphBlock.html":{},"injectables/PluginCode.html":{},"modules/PluginCodeModule.html":{},"interfaces/PluginConfig.html":{},"interfaces/PluginConfig-1.html":{},"injectables/PluginHeader.html":{},"modules/PluginHeaderModule.html":{},"injectables/PluginImage.html":{},"modules/PluginImageModule.html":{},"injectables/PluginLink.html":{},"modules/PluginLinkModule.html":{},"injectables/PluginList.html":{},"modules/PluginListModule.html":{},"injectables/PluginMarker.html":{},"modules/PluginMarkerModule.html":{},"injectables/PluginParagraph.html":{},"modules/PluginParagraphModule.html":{},"injectables/PluginSimpleImage.html":{},"modules/PluginSimpleImageModule.html":{},"classes/Ready.html":{},"interfaces/ReadyMap.html":{},"classes/SaveEnd.html":{},"classes/SaveStart.html":{},"interfaces/Tag.html":{},"interfaces/ToolSettingsMap.html":{},"interfaces/ToolSettingsMap-1.html":{},"coverage.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["licence",{"_index":1344,"title":{},"body":{"license.html":{}}}],["license",{"_index":1341,"title":{"license.html":{}},"body":{}}],["life",{"_index":1479,"title":{},"body":{"additional-documentation/tinynodes-library-docs/ngx-editorjs-readme.html":{}}}],["lightgray",{"_index":100,"title":{},"body":{"components/AppComponent.html":{},"components/NavBarComponent.html":{}}}],["limitation",{"_index":1356,"title":{},"body":{"license.html":{}}}],["limited",{"_index":1380,"title":{},"body":{"license.html":{}}}],["line",{"_index":124,"title":{},"body":{"components/AppComponent.html":{},"components/NavBarComponent.html":{}}}],["link",{"_index":265,"title":{},"body":{"interfaces/ApplicationState.html":{},"interfaces/MenuItem.html":{},"injectables/PluginLink.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-plugins-readme.html":{}}}],["link.plugin",{"_index":961,"title":{},"body":{"modules/PluginLinkModule.html":{}}}],["links",{"_index":1332,"title":{},"body":{"index.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-readme.html":{}}}],["list",{"_index":103,"title":{"interfaces/List.html":{}},"body":{"components/AppComponent.html":{},"interfaces/Block.html":{},"interfaces/Header.html":{},"interfaces/HeaderBlock.html":{},"interfaces/Image.html":{},"interfaces/ImageBlock.html":{},"interfaces/List.html":{},"interfaces/ListBlock.html":{},"components/NavBarComponent.html":{},"interfaces/Paragraph.html":{},"interfaces/ParagraphBlock.html":{},"injectables/PluginList.html":{},"coverage.html":{},"miscellaneous/typealiases.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-readme.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-readme/ngx-editorjs-changelog.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-plugins-readme.html":{}}}],["list.plugin",{"_index":970,"title":{},"body":{"modules/PluginListModule.html":{}}}],["listblock",{"_index":327,"title":{"interfaces/ListBlock.html":{}},"body":{"interfaces/Block.html":{},"interfaces/Header.html":{},"interfaces/HeaderBlock.html":{},"interfaces/Image.html":{},"interfaces/ImageBlock.html":{},"interfaces/List.html":{},"interfaces/ListBlock.html":{},"interfaces/Paragraph.html":{},"interfaces/ParagraphBlock.html":{},"coverage.html":{},"miscellaneous/typealiases.html":{}}}],["liststyle",{"_index":325,"title":{},"body":{"interfaces/Block.html":{},"interfaces/Header.html":{},"interfaces/HeaderBlock.html":{},"interfaces/Image.html":{},"interfaces/ImageBlock.html":{},"interfaces/List.html":{},"interfaces/ListBlock.html":{},"interfaces/Paragraph.html":{},"interfaces/ParagraphBlock.html":{},"miscellaneous/typealiases.html":{}}}],["literal",{"_index":373,"title":{},"body":{"classes/Changed.html":{},"classes/NotReady.html":{},"classes/Ready.html":{},"classes/SaveEnd.html":{},"classes/SaveStart.html":{}}}],["load",{"_index":1462,"title":{},"body":{"additional-documentation/tinynodes-library-docs/ngx-editorjs-readme.html":{}}}],["loader",{"_index":217,"title":{},"body":{"modules/AppModule.html":{}}}],["locations",{"_index":1086,"title":{},"body":{"contributing.html":{}}}],["longer",{"_index":1500,"title":{},"body":{"additional-documentation/tinynodes-library-docs/ngx-editorjs-readme/ngx-editorjs-changelog.html":{}}}],["made",{"_index":695,"title":{},"body":{"injectables/NgxEditorJSService.html":{}}}],["mail",{"_index":1212,"title":{},"body":{"contributing.html":{}}}],["main",{"_index":14,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"directives/NgxEditorJSDirective.html":{},"miscellaneous/variables.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-readme.html":{}}}],["maintain",{"_index":1241,"title":{},"body":{"contributing.html":{}}}],["maintainers",{"_index":1109,"title":{},"body":{"contributing.html":{}}}],["make",{"_index":1066,"title":{},"body":{"contributing.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-readme.html":{}}}],["makes",{"_index":646,"title":{},"body":{"injectables/NgxEditorJSPluginService.html":{}}}],["making",{"_index":1059,"title":{},"body":{"changelog.html":{},"contributing.html":{}}}],["manager",{"_index":467,"title":{},"body":{"components/EditorPageComponent.html":{},"components/PageContainerComponent.html":{}}}],["map",{"_index":294,"title":{},"body":{"interfaces/BasePlugin.html":{},"interfaces/BasePlugin-1.html":{},"interfaces/BlocksMap.html":{},"interfaces/ChangeMap.html":{},"interfaces/EditorMap.html":{},"injectables/NgxEditorJSEffects.html":{},"injectables/NgxEditorJSPluginService.html":{},"injectables/NgxEditorJSService.html":{},"interfaces/PluginConfig.html":{},"interfaces/PluginConfig-1.html":{},"interfaces/ReadyMap.html":{},"interfaces/ToolSettingsMap.html":{},"interfaces/ToolSettingsMap-1.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-readme.html":{}}}],["map((action",{"_index":564,"title":{},"body":{"injectables/NgxEditorJSEffects.html":{}}}],["maps",{"_index":691,"title":{},"body":{"injectables/NgxEditorJSService.html":{}}}],["margin",{"_index":107,"title":{},"body":{"components/AppComponent.html":{},"components/NavBarComponent.html":{}}}],["markdown",{"_index":200,"title":{},"body":{"modules/AppModule.html":{},"modules/NgxEditorjsDemoModule.html":{},"dependencies.html":{}}}],["markdownmodule",{"_index":199,"title":{},"body":{"modules/AppModule.html":{},"modules/NgxEditorjsDemoModule.html":{}}}],["markdownmodule.forchild",{"_index":816,"title":{},"body":{"modules/NgxEditorjsDemoModule.html":{}}}],["markdownmodule.forroot",{"_index":216,"title":{},"body":{"modules/AppModule.html":{}}}],["marker",{"_index":974,"title":{},"body":{"injectables/PluginMarker.html":{},"modules/PluginMarkerModule.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-readme.html":{}}}],["marker.plugin",{"_index":982,"title":{},"body":{"modules/PluginMarkerModule.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-readme.html":{}}}],["marking",{"_index":1523,"title":{},"body":{"additional-documentation/tinynodes-library-docs/ngx-editorjs-plugins-readme.html":{}}}],["mat",{"_index":87,"title":{},"body":{"components/AppComponent.html":{}}}],["matbuttonmodule",{"_index":805,"title":{},"body":{"modules/NgxEditorjsDemoModule.html":{}}}],["matcardmodule",{"_index":481,"title":{},"body":{"modules/MaterialModule.html":{},"modules/NgxEditorjsDemoModule.html":{}}}],["matching",{"_index":148,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"modules/ApplicationDataModule.html":{},"injectables/ApplicationQuery.html":{},"interfaces/ApplicationState.html":{},"injectables/ApplicationStore.html":{},"interfaces/BasePlugin.html":{},"interfaces/BasePlugin-1.html":{},"interfaces/Block.html":{},"interfaces/BlocksMap.html":{},"interfaces/ChangeMap.html":{},"classes/Changed.html":{},"interfaces/EditorJSConfig.html":{},"interfaces/EditorMap.html":{},"components/EditorPageComponent.html":{},"interfaces/Header.html":{},"interfaces/HeaderBlock.html":{},"interfaces/Image.html":{},"interfaces/ImageBlock.html":{},"interfaces/List.html":{},"interfaces/ListBlock.html":{},"modules/MaterialModule.html":{},"interfaces/MenuItem.html":{},"components/NavBarComponent.html":{},"components/NgxEditorJSComponent.html":{},"interfaces/NgxEditorJSConfig.html":{},"directives/NgxEditorJSDirective.html":{},"injectables/NgxEditorJSEffects.html":{},"modules/NgxEditorJSModule.html":{},"injectables/NgxEditorJSPluginService.html":{},"injectables/NgxEditorJSService.html":{},"modules/NgxEditorjsDemoModule.html":{},"modules/NgxEditorjsNgrxModule.html":{},"modules/NgxEditorjsPluginsModule.html":{},"classes/NotReady.html":{},"interfaces/Page.html":{},"interfaces/PageBlock.html":{},"components/PageContainerComponent.html":{},"modules/PageStoreModule.html":{},"injectables/PagesQuery.html":{},"injectables/PagesService.html":{},"interfaces/PagesState.html":{},"injectables/PagesStore.html":{},"interfaces/Paragraph.html":{},"interfaces/ParagraphBlock.html":{},"injectables/PluginCode.html":{},"modules/PluginCodeModule.html":{},"interfaces/PluginConfig.html":{},"interfaces/PluginConfig-1.html":{},"injectables/PluginHeader.html":{},"modules/PluginHeaderModule.html":{},"injectables/PluginImage.html":{},"modules/PluginImageModule.html":{},"injectables/PluginLink.html":{},"modules/PluginLinkModule.html":{},"injectables/PluginList.html":{},"modules/PluginListModule.html":{},"injectables/PluginMarker.html":{},"modules/PluginMarkerModule.html":{},"injectables/PluginParagraph.html":{},"modules/PluginParagraphModule.html":{},"injectables/PluginSimpleImage.html":{},"modules/PluginSimpleImageModule.html":{},"classes/Ready.html":{},"interfaces/ReadyMap.html":{},"classes/SaveEnd.html":{},"classes/SaveStart.html":{},"components/SidebarComponent.html":{},"interfaces/Tag.html":{},"interfaces/ToolSettingsMap.html":{},"interfaces/ToolSettingsMap-1.html":{},"changelog.html":{},"contributing.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"index.html":{},"license.html":{},"modules.html":{},"overview.html":{},"todo.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{},"additional-documentation/tinynodes-library-docs.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-readme.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-readme/ngx-editorjs-changelog.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-plugins-readme.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-plugins-readme/ngx-editorjs-plugins-changelog.html":{}}}],["material",{"_index":56,"title":{},"body":{"components/AppComponent.html":{}}}],["material.module",{"_index":210,"title":{},"body":{"modules/AppModule.html":{}}}],["materialmodule",{"_index":163,"title":{"modules/MaterialModule.html":{}},"body":{"modules/AppModule.html":{},"modules/MaterialModule.html":{},"modules.html":{},"overview.html":{}}}],["maticonmodule",{"_index":479,"title":{},"body":{"modules/MaterialModule.html":{}}}],["matlistmodule",{"_index":480,"title":{},"body":{"modules/MaterialModule.html":{}}}],["matsidenav",{"_index":52,"title":{},"body":{"components/AppComponent.html":{},"components/SidebarComponent.html":{}}}],["matsidenavmodule",{"_index":477,"title":{},"body":{"modules/MaterialModule.html":{}}}],["mattoolbarmodule",{"_index":478,"title":{},"body":{"modules/MaterialModule.html":{}}}],["me@tane.dev",{"_index":1233,"title":{},"body":{"contributing.html":{},"license.html":{}}}],["meantime",{"_index":1054,"title":{},"body":{"changelog.html":{}}}],["media",{"_index":1215,"title":{},"body":{"contributing.html":{}}}],["members",{"_index":1152,"title":{},"body":{"contributing.html":{}}}],["menu",{"_index":260,"title":{},"body":{"interfaces/ApplicationState.html":{},"interfaces/MenuItem.html":{},"components/NavBarComponent.html":{}}}],["menuitem",{"_index":262,"title":{"interfaces/MenuItem.html":{}},"body":{"interfaces/ApplicationState.html":{},"interfaces/MenuItem.html":{},"coverage.html":{}}}],["merchantability",{"_index":1382,"title":{},"body":{"license.html":{}}}],["merge",{"_index":1095,"title":{},"body":{"contributing.html":{},"license.html":{}}}],["merged",{"_index":652,"title":{},"body":{"injectables/NgxEditorJSPluginService.html":{}}}],["mergemap",{"_index":582,"title":{},"body":{"injectables/NgxEditorJSEffects.html":{}}}],["mergemap(([action",{"_index":568,"title":{},"body":{"injectables/NgxEditorJSEffects.html":{}}}],["metadata",{"_index":22,"title":{},"body":{"components/AppComponent.html":{},"components/EditorPageComponent.html":{},"components/NavBarComponent.html":{},"components/NgxEditorJSComponent.html":{},"directives/NgxEditorJSDirective.html":{},"components/PageContainerComponent.html":{},"components/SidebarComponent.html":{}}}],["method",{"_index":425,"title":{},"body":{"interfaces/EditorJSConfig.html":{},"interfaces/NgxEditorJSConfig.html":{},"modules/NgxEditorJSModule.html":{},"injectables/NgxEditorJSService.html":{},"contributing.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-readme.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-readme/ngx-editorjs-changelog.html":{}}}],["methods",{"_index":224,"title":{},"body":{"injectables/AppService.html":{},"injectables/ApplicationStore.html":{},"interfaces/BasePlugin.html":{},"interfaces/BasePlugin-1.html":{},"components/EditorPageComponent.html":{},"components/NavBarComponent.html":{},"modules/NgxEditorJSModule.html":{},"injectables/NgxEditorJSPluginService.html":{},"injectables/NgxEditorJSService.html":{},"injectables/PagesService.html":{},"injectables/PluginCode.html":{},"interfaces/PluginConfig.html":{},"interfaces/PluginConfig-1.html":{},"injectables/PluginHeader.html":{},"injectables/PluginImage.html":{},"injectables/PluginLink.html":{},"injectables/PluginList.html":{},"injectables/PluginMarker.html":{},"injectables/PluginParagraph.html":{},"injectables/PluginSimpleImage.html":{},"interfaces/ToolSettingsMap.html":{},"interfaces/ToolSettingsMap-1.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-readme.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-readme/ngx-editorjs-changelog.html":{}}}],["middle",{"_index":121,"title":{},"body":{"components/AppComponent.html":{},"components/NavBarComponent.html":{}}}],["minheight",{"_index":400,"title":{},"body":{"interfaces/EditorJSConfig.html":{},"interfaces/NgxEditorJSConfig.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-readme.html":{}}}],["miscellaneous",{"_index":1321,"title":{"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}},"body":{"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["mit",{"_index":1343,"title":{},"body":{"license.html":{}}}],["modify",{"_index":1358,"title":{},"body":{"license.html":{}}}],["module",{"_index":150,"title":{"modules/AppModule.html":{},"modules/ApplicationDataModule.html":{},"modules/MaterialModule.html":{},"modules/NgxEditorJSModule.html":{},"modules/NgxEditorjsDemoModule.html":{},"modules/NgxEditorjsNgrxModule.html":{},"modules/NgxEditorjsPluginsModule.html":{},"modules/PageStoreModule.html":{},"modules/PluginCodeModule.html":{},"modules/PluginHeaderModule.html":{},"modules/PluginImageModule.html":{},"modules/PluginLinkModule.html":{},"modules/PluginListModule.html":{},"modules/PluginMarkerModule.html":{},"modules/PluginParagraphModule.html":{},"modules/PluginSimpleImageModule.html":{}},"body":{"modules/AppModule.html":{},"modules/ApplicationDataModule.html":{},"interfaces/BasePlugin.html":{},"interfaces/BasePlugin-1.html":{},"components/EditorPageComponent.html":{},"modules/NgxEditorJSModule.html":{},"injectables/NgxEditorJSPluginService.html":{},"modules/NgxEditorjsDemoModule.html":{},"modules/NgxEditorjsNgrxModule.html":{},"modules/NgxEditorjsPluginsModule.html":{},"components/PageContainerComponent.html":{},"modules/PageStoreModule.html":{},"modules/PluginCodeModule.html":{},"interfaces/PluginConfig.html":{},"interfaces/PluginConfig-1.html":{},"modules/PluginHeaderModule.html":{},"modules/PluginImageModule.html":{},"modules/PluginLinkModule.html":{},"modules/PluginListModule.html":{},"modules/PluginMarkerModule.html":{},"modules/PluginParagraphModule.html":{},"modules/PluginSimpleImageModule.html":{},"interfaces/ToolSettingsMap.html":{},"interfaces/ToolSettingsMap-1.html":{},"changelog.html":{},"miscellaneous/functions.html":{},"overview.html":{},"todo.html":{},"miscellaneous/variables.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-readme.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-readme/ngx-editorjs-changelog.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-plugins-readme.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-plugins-readme/ngx-editorjs-plugins-changelog.html":{}}}],["modules",{"_index":152,"title":{"modules.html":{}},"body":{"modules/AppModule.html":{},"modules/ApplicationDataModule.html":{},"modules/MaterialModule.html":{},"modules/NgxEditorJSModule.html":{},"modules/NgxEditorjsDemoModule.html":{},"modules/NgxEditorjsNgrxModule.html":{},"modules/NgxEditorjsPluginsModule.html":{},"modules/PageStoreModule.html":{},"modules/PluginCodeModule.html":{},"modules/PluginHeaderModule.html":{},"modules/PluginImageModule.html":{},"modules/PluginLinkModule.html":{},"modules/PluginListModule.html":{},"modules/PluginMarkerModule.html":{},"modules/PluginParagraphModule.html":{},"modules/PluginSimpleImageModule.html":{},"modules.html":{},"overview.html":{},"todo.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-readme.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-plugins-readme.html":{}}}],["modulewithproviders",{"_index":602,"title":{},"body":{"modules/NgxEditorJSModule.html":{}}}],["more",{"_index":736,"title":{},"body":{"injectables/NgxEditorJSService.html":{},"changelog.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-readme.html":{}}}],["moved",{"_index":1525,"title":{},"body":{"additional-documentation/tinynodes-library-docs/ngx-editorjs-plugins-readme/ngx-editorjs-plugins-changelog.html":{}}}],["multiple",{"_index":1510,"title":{},"body":{"additional-documentation/tinynodes-library-docs/ngx-editorjs-readme/ngx-editorjs-changelog.html":{}}}],["name",{"_index":41,"title":{},"body":{"components/AppComponent.html":{},"injectables/AppService.html":{},"injectables/ApplicationQuery.html":{},"injectables/ApplicationStore.html":{},"classes/Changed.html":{},"interfaces/EditorJSConfig.html":{},"components/EditorPageComponent.html":{},"components/NavBarComponent.html":{},"components/NgxEditorJSComponent.html":{},"interfaces/NgxEditorJSConfig.html":{},"directives/NgxEditorJSDirective.html":{},"injectables/NgxEditorJSEffects.html":{},"modules/NgxEditorJSModule.html":{},"injectables/NgxEditorJSPluginService.html":{},"injectables/NgxEditorJSService.html":{},"classes/NotReady.html":{},"components/PageContainerComponent.html":{},"injectables/PagesQuery.html":{},"injectables/PagesService.html":{},"interfaces/PagesState.html":{},"injectables/PagesStore.html":{},"classes/Ready.html":{},"classes/SaveEnd.html":{},"classes/SaveStart.html":{},"components/SidebarComponent.html":{},"miscellaneous/functions.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-plugins-readme.html":{}}}],["nationality",{"_index":1125,"title":{},"body":{"contributing.html":{}}}],["nav",{"_index":136,"title":{},"body":{"components/AppComponent.html":{},"components/EditorPageComponent.html":{},"components/NavBarComponent.html":{},"components/NgxEditorJSComponent.html":{},"components/PageContainerComponent.html":{},"components/SidebarComponent.html":{}}}],["navbar",{"_index":488,"title":{},"body":{"components/NavBarComponent.html":{}}}],["navbarcomponent",{"_index":135,"title":{"components/NavBarComponent.html":{}},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"components/EditorPageComponent.html":{},"components/NavBarComponent.html":{},"components/NgxEditorJSComponent.html":{},"components/PageContainerComponent.html":{},"components/SidebarComponent.html":{},"coverage.html":{},"overview.html":{}}}],["navigation",{"_index":101,"title":{},"body":{"components/AppComponent.html":{},"components/NavBarComponent.html":{}}}],["nbsp",{"_index":491,"title":{},"body":{"components/NavBarComponent.html":{}}}],["necessary",{"_index":1238,"title":{},"body":{"contributing.html":{}}}],["need",{"_index":1451,"title":{},"body":{"additional-documentation/tinynodes-library-docs/ngx-editorjs-readme.html":{}}}],["new",{"_index":74,"title":{},"body":{"components/AppComponent.html":{},"interfaces/BasePlugin.html":{},"interfaces/BasePlugin-1.html":{},"interfaces/EditorJSConfig.html":{},"interfaces/NgxEditorJSConfig.html":{},"injectables/NgxEditorJSEffects.html":{},"modules/NgxEditorJSModule.html":{},"injectables/NgxEditorJSService.html":{},"injectables/PagesService.html":{},"interfaces/PluginConfig.html":{},"interfaces/PluginConfig-1.html":{},"components/SidebarComponent.html":{},"interfaces/ToolSettingsMap.html":{},"interfaces/ToolSettingsMap-1.html":{},"changelog.html":{},"contributing.html":{},"coverage.html":{},"miscellaneous/variables.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-readme.html":{}}}],["newpage",{"_index":908,"title":{},"body":{"injectables/PagesService.html":{}}}],["ng",{"_index":192,"title":{},"body":{"modules/AppModule.html":{},"dependencies.html":{}}}],["ngaftercontentinit",{"_index":460,"title":{},"body":{"components/EditorPageComponent.html":{}}}],["ngafterviewinit",{"_index":552,"title":{},"body":{"directives/NgxEditorJSDirective.html":{}}}],["ngdevtools",{"_index":196,"title":{},"body":{"modules/AppModule.html":{},"dependencies.html":{}}}],["ngmodule",{"_index":179,"title":{},"body":{"modules/AppModule.html":{},"modules/ApplicationDataModule.html":{},"modules/MaterialModule.html":{},"modules/NgxEditorJSModule.html":{},"modules/NgxEditorjsDemoModule.html":{},"modules/NgxEditorjsNgrxModule.html":{},"modules/NgxEditorjsPluginsModule.html":{},"modules/PageStoreModule.html":{},"modules/PluginCodeModule.html":{},"modules/PluginHeaderModule.html":{},"modules/PluginImageModule.html":{},"modules/PluginLinkModule.html":{},"modules/PluginListModule.html":{},"modules/PluginMarkerModule.html":{},"modules/PluginParagraphModule.html":{},"modules/PluginSimpleImageModule.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-readme.html":{}}}],["ngonchanges(changes",{"_index":547,"title":{},"body":{"directives/NgxEditorJSDirective.html":{}}}],["ngondestroy",{"_index":81,"title":{},"body":{"components/AppComponent.html":{},"directives/NgxEditorJSDirective.html":{},"components/SidebarComponent.html":{}}}],["ngoninit",{"_index":77,"title":{},"body":{"components/AppComponent.html":{},"components/SidebarComponent.html":{}}}],["ngrx.module.ts",{"_index":821,"title":{},"body":{"modules/NgxEditorjsNgrxModule.html":{}}}],["ngrx/effects",{"_index":579,"title":{},"body":{"injectables/NgxEditorJSEffects.html":{},"modules/NgxEditorjsNgrxModule.html":{},"dependencies.html":{},"todo.html":{}}}],["ngrx/src/lib/actions/ngx",{"_index":368,"title":{},"body":{"classes/Changed.html":{},"classes/NotReady.html":{},"classes/Ready.html":{},"classes/SaveEnd.html":{},"classes/SaveStart.html":{},"coverage.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/typealiases.html":{}}}],["ngrx/src/lib/effects/ngx",{"_index":557,"title":{},"body":{"injectables/NgxEditorJSEffects.html":{},"coverage.html":{}}}],["ngrx/src/lib/ngx",{"_index":820,"title":{},"body":{"modules/NgxEditorjsNgrxModule.html":{}}}],["ngrx/store",{"_index":377,"title":{},"body":{"classes/Changed.html":{},"classes/NotReady.html":{},"classes/Ready.html":{},"classes/SaveEnd.html":{},"classes/SaveStart.html":{},"dependencies.html":{}}}],["ngx",{"_index":85,"title":{"additional-documentation/tinynodes-library-docs/ngx-editorjs-readme.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-readme/ngx-editorjs-changelog.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-plugins-readme.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-plugins-readme/ngx-editorjs-plugins-changelog.html":{}},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"interfaces/BasePlugin.html":{},"interfaces/BasePlugin-1.html":{},"classes/Changed.html":{},"components/EditorPageComponent.html":{},"components/NavBarComponent.html":{},"components/NgxEditorJSComponent.html":{},"directives/NgxEditorJSDirective.html":{},"modules/NgxEditorjsDemoModule.html":{},"classes/NotReady.html":{},"components/PageContainerComponent.html":{},"interfaces/PluginConfig.html":{},"interfaces/PluginConfig-1.html":{},"classes/Ready.html":{},"classes/SaveEnd.html":{},"classes/SaveStart.html":{},"components/SidebarComponent.html":{},"interfaces/ToolSettingsMap.html":{},"interfaces/ToolSettingsMap-1.html":{},"dependencies.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"index.html":{},"todo.html":{},"miscellaneous/variables.html":{},"additional-documentation/tinynodes-library-docs.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-readme.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-readme/ngx-editorjs-changelog.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-plugins-readme.html":{}}}],["ngx.firebaseapp.com",{"_index":213,"title":{},"body":{"modules/AppModule.html":{}}}],["ngx_editorjs_config",{"_index":429,"title":{},"body":{"interfaces/EditorJSConfig.html":{},"interfaces/NgxEditorJSConfig.html":{},"modules/NgxEditorJSModule.html":{},"injectables/NgxEditorJSService.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["ngxeditorjs",{"_index":145,"title":{},"body":{"components/AppComponent.html":{},"components/EditorPageComponent.html":{},"components/NavBarComponent.html":{},"components/NgxEditorJSComponent.html":{},"directives/NgxEditorJSDirective.html":{},"components/PageContainerComponent.html":{},"components/SidebarComponent.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-readme.html":{}}}],["ngxeditorjsactions",{"_index":393,"title":{},"body":{"classes/Changed.html":{},"classes/NotReady.html":{},"classes/Ready.html":{},"classes/SaveEnd.html":{},"classes/SaveStart.html":{},"miscellaneous/typealiases.html":{}}}],["ngxeditorjscomponent",{"_index":138,"title":{"components/NgxEditorJSComponent.html":{}},"body":{"components/AppComponent.html":{},"components/EditorPageComponent.html":{},"components/NavBarComponent.html":{},"components/NgxEditorJSComponent.html":{},"modules/NgxEditorJSModule.html":{},"components/PageContainerComponent.html":{},"components/SidebarComponent.html":{},"coverage.html":{},"overview.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-readme.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-readme/ngx-editorjs-changelog.html":{}}}],["ngxeditorjsconfig",{"_index":426,"title":{"interfaces/NgxEditorJSConfig.html":{}},"body":{"interfaces/EditorJSConfig.html":{},"interfaces/NgxEditorJSConfig.html":{},"modules/NgxEditorJSModule.html":{},"injectables/NgxEditorJSService.html":{},"coverage.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["ngxeditorjsdemomodule",{"_index":165,"title":{"modules/NgxEditorjsDemoModule.html":{}},"body":{"modules/AppModule.html":{},"modules/NgxEditorjsDemoModule.html":{},"modules.html":{},"overview.html":{}}}],["ngxeditorjsdemoroutes",{"_index":812,"title":{},"body":{"modules/NgxEditorjsDemoModule.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["ngxeditorjsdirective",{"_index":144,"title":{"directives/NgxEditorJSDirective.html":{}},"body":{"components/AppComponent.html":{},"components/EditorPageComponent.html":{},"components/NavBarComponent.html":{},"components/NgxEditorJSComponent.html":{},"directives/NgxEditorJSDirective.html":{},"modules/NgxEditorJSModule.html":{},"components/PageContainerComponent.html":{},"components/SidebarComponent.html":{},"coverage.html":{},"overview.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-readme.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-readme/ngx-editorjs-changelog.html":{}}}],["ngxeditorjseffects",{"_index":556,"title":{"injectables/NgxEditorJSEffects.html":{}},"body":{"injectables/NgxEditorJSEffects.html":{},"coverage.html":{}}}],["ngxeditorjsmodule",{"_index":164,"title":{"modules/NgxEditorJSModule.html":{}},"body":{"modules/AppModule.html":{},"modules/NgxEditorJSModule.html":{},"modules/NgxEditorjsDemoModule.html":{},"modules/NgxEditorjsNgrxModule.html":{},"modules.html":{},"overview.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-readme.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-readme/ngx-editorjs-changelog.html":{}}}],["ngxeditorjsmodule.forroot",{"_index":215,"title":{},"body":{"modules/AppModule.html":{},"interfaces/EditorJSConfig.html":{},"interfaces/NgxEditorJSConfig.html":{},"modules/NgxEditorJSModule.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-readme.html":{}}}],["ngxeditorjsngrxmodule",{"_index":817,"title":{"modules/NgxEditorjsNgrxModule.html":{}},"body":{"modules/NgxEditorjsNgrxModule.html":{},"modules.html":{},"overview.html":{}}}],["ngxeditorjspluginservice",{"_index":588,"title":{"injectables/NgxEditorJSPluginService.html":{}},"body":{"modules/NgxEditorJSModule.html":{},"injectables/NgxEditorJSPluginService.html":{},"injectables/NgxEditorJSService.html":{},"coverage.html":{},"overview.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-readme/ngx-editorjs-changelog.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-plugins-readme/ngx-editorjs-plugins-changelog.html":{}}}],["ngxeditorjspluginsmodule",{"_index":824,"title":{"modules/NgxEditorjsPluginsModule.html":{}},"body":{"modules/NgxEditorjsPluginsModule.html":{},"modules.html":{},"overview.html":{}}}],["ngxeditorjsservice",{"_index":442,"title":{"injectables/NgxEditorJSService.html":{}},"body":{"components/EditorPageComponent.html":{},"components/NgxEditorJSComponent.html":{},"directives/NgxEditorJSDirective.html":{},"injectables/NgxEditorJSEffects.html":{},"modules/NgxEditorJSModule.html":{},"injectables/NgxEditorJSService.html":{},"coverage.html":{},"overview.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-readme.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-readme/ngx-editorjs-changelog.html":{}}}],["ngzone",{"_index":704,"title":{},"body":{"injectables/NgxEditorJSService.html":{}}}],["none",{"_index":95,"title":{},"body":{"components/AppComponent.html":{},"components/NavBarComponent.html":{}}}],["noninfringement",{"_index":1386,"title":{},"body":{"license.html":{}}}],["notable",{"_index":1486,"title":{},"body":{"additional-documentation/tinynodes-library-docs/ngx-editorjs-readme/ngx-editorjs-changelog.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-plugins-readme/ngx-editorjs-plugins-changelog.html":{}}}],["note",{"_index":1070,"title":{},"body":{"contributing.html":{}}}],["notice",{"_index":1371,"title":{},"body":{"license.html":{}}}],["notready",{"_index":386,"title":{"classes/NotReady.html":{}},"body":{"classes/Changed.html":{},"classes/NotReady.html":{},"classes/Ready.html":{},"classes/SaveEnd.html":{},"classes/SaveStart.html":{},"coverage.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/typealiases.html":{}}}],["now",{"_index":1471,"title":{},"body":{"additional-documentation/tinynodes-library-docs/ngx-editorjs-readme.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-readme/ngx-editorjs-changelog.html":{}}}],["npm",{"_index":494,"title":{},"body":{"components/NavBarComponent.html":{},"index.html":{},"additional-documentation/tinynodes-library-docs.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-readme.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-readme/ngx-editorjs-changelog.html":{}}}],["nrwl/nx",{"_index":1042,"title":{},"body":{"changelog.html":{}}}],["null",{"_index":679,"title":{},"body":{"injectables/NgxEditorJSPluginService.html":{},"injectables/NgxEditorJSService.html":{}}}],["number",{"_index":333,"title":{},"body":{"interfaces/Block.html":{},"interfaces/BlocksMap.html":{},"interfaces/ChangeMap.html":{},"interfaces/EditorJSConfig.html":{},"interfaces/EditorMap.html":{},"interfaces/Header.html":{},"interfaces/HeaderBlock.html":{},"interfaces/Image.html":{},"interfaces/ImageBlock.html":{},"interfaces/List.html":{},"interfaces/ListBlock.html":{},"interfaces/NgxEditorJSConfig.html":{},"interfaces/Paragraph.html":{},"interfaces/ParagraphBlock.html":{},"interfaces/ReadyMap.html":{}}}],["numbers",{"_index":1088,"title":{},"body":{"contributing.html":{}}}],["nx",{"_index":1340,"title":{},"body":{"index.html":{}}}],["object",{"_index":671,"title":{},"body":{"injectables/NgxEditorJSPluginService.html":{},"injectables/NgxEditorJSService.html":{},"miscellaneous/variables.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-readme.html":{}}}],["object.entries",{"_index":675,"title":{},"body":{"injectables/NgxEditorJSPluginService.html":{}}}],["object.entries(this.pluginsmap",{"_index":682,"title":{},"body":{"injectables/NgxEditorJSPluginService.html":{}}}],["obligated",{"_index":1240,"title":{},"body":{"contributing.html":{}}}],["observable",{"_index":240,"title":{},"body":{"injectables/AppService.html":{},"components/EditorPageComponent.html":{},"injectables/NgxEditorJSEffects.html":{},"injectables/NgxEditorJSService.html":{},"components/PageContainerComponent.html":{},"injectables/PagesService.html":{}}}],["obtaining",{"_index":1350,"title":{},"body":{"license.html":{}}}],["offensive",{"_index":1203,"title":{},"body":{"contributing.html":{}}}],["official",{"_index":1210,"title":{},"body":{"contributing.html":{}}}],["officially",{"_index":1047,"title":{},"body":{"changelog.html":{}}}],["offline",{"_index":1221,"title":{},"body":{"contributing.html":{}}}],["oftype",{"_index":578,"title":{},"body":{"injectables/NgxEditorJSEffects.html":{}}}],["oftype(editorjsactiontypes.savestart",{"_index":563,"title":{},"body":{"injectables/NgxEditorJSEffects.html":{}}}],["once",{"_index":1096,"title":{},"body":{"contributing.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-readme.html":{}}}],["onchange",{"_index":767,"title":{},"body":{"injectables/NgxEditorJSService.html":{}}}],["onchanges",{"_index":530,"title":{},"body":{"directives/NgxEditorJSDirective.html":{}}}],["ondestroy",{"_index":21,"title":{},"body":{"components/AppComponent.html":{},"directives/NgxEditorJSDirective.html":{},"components/SidebarComponent.html":{}}}],["one",{"_index":716,"title":{},"body":{"injectables/NgxEditorJSService.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-readme.html":{}}}],["oninit",{"_index":20,"title":{},"body":{"components/AppComponent.html":{},"components/SidebarComponent.html":{}}}],["online",{"_index":1220,"title":{},"body":{"contributing.html":{}}}],["onready",{"_index":765,"title":{},"body":{"injectables/NgxEditorJSService.html":{}}}],["onsubmit",{"_index":438,"title":{},"body":{"components/EditorPageComponent.html":{}}}],["open",{"_index":1106,"title":{},"body":{"contributing.html":{}}}],["option",{"_index":423,"title":{},"body":{"interfaces/EditorJSConfig.html":{},"interfaces/NgxEditorJSConfig.html":{},"todo.html":{}}}],["optional",{"_index":43,"title":{},"body":{"components/AppComponent.html":{},"injectables/AppService.html":{},"injectables/ApplicationQuery.html":{},"interfaces/BasePlugin.html":{},"interfaces/BasePlugin-1.html":{},"interfaces/Block.html":{},"classes/Changed.html":{},"interfaces/EditorJSConfig.html":{},"components/EditorPageComponent.html":{},"interfaces/Header.html":{},"interfaces/HeaderBlock.html":{},"interfaces/Image.html":{},"interfaces/ImageBlock.html":{},"interfaces/List.html":{},"interfaces/ListBlock.html":{},"components/NavBarComponent.html":{},"components/NgxEditorJSComponent.html":{},"interfaces/NgxEditorJSConfig.html":{},"directives/NgxEditorJSDirective.html":{},"injectables/NgxEditorJSEffects.html":{},"modules/NgxEditorJSModule.html":{},"injectables/NgxEditorJSPluginService.html":{},"injectables/NgxEditorJSService.html":{},"classes/NotReady.html":{},"components/PageContainerComponent.html":{},"injectables/PagesQuery.html":{},"injectables/PagesService.html":{},"interfaces/Paragraph.html":{},"interfaces/ParagraphBlock.html":{},"interfaces/PluginConfig.html":{},"interfaces/PluginConfig-1.html":{},"classes/Ready.html":{},"classes/SaveEnd.html":{},"classes/SaveStart.html":{},"components/SidebarComponent.html":{},"interfaces/ToolSettingsMap.html":{},"interfaces/ToolSettingsMap-1.html":{},"miscellaneous/functions.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-readme.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-readme/ngx-editorjs-changelog.html":{}}}],["options",{"_index":427,"title":{},"body":{"interfaces/EditorJSConfig.html":{},"interfaces/NgxEditorJSConfig.html":{},"injectables/NgxEditorJSService.html":{},"todo.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-readme.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-readme/ngx-editorjs-changelog.html":{}}}],["options.data",{"_index":764,"title":{},"body":{"injectables/NgxEditorJSService.html":{}}}],["ordered",{"_index":321,"title":{},"body":{"interfaces/Block.html":{},"interfaces/Header.html":{},"interfaces/HeaderBlock.html":{},"interfaces/Image.html":{},"interfaces/ImageBlock.html":{},"interfaces/List.html":{},"interfaces/ListBlock.html":{},"interfaces/Paragraph.html":{},"interfaces/ParagraphBlock.html":{},"miscellaneous/typealiases.html":{}}}],["orientation",{"_index":1131,"title":{},"body":{"contributing.html":{}}}],["others",{"_index":1166,"title":{},"body":{"contributing.html":{}}}],["otherwise",{"_index":1229,"title":{},"body":{"contributing.html":{},"license.html":{}}}],["out",{"_index":168,"title":{},"body":{"modules/AppModule.html":{},"modules/ApplicationDataModule.html":{},"modules/NgxEditorJSModule.html":{},"modules/NgxEditorjsDemoModule.html":{},"modules/NgxEditorjsNgrxModule.html":{},"modules/NgxEditorjsPluginsModule.html":{},"modules/PageStoreModule.html":{},"modules/PluginCodeModule.html":{},"modules/PluginHeaderModule.html":{},"modules/PluginImageModule.html":{},"modules/PluginLinkModule.html":{},"modules/PluginListModule.html":{},"modules/PluginMarkerModule.html":{},"modules/PluginParagraphModule.html":{},"modules/PluginSimpleImageModule.html":{},"license.html":{},"overview.html":{}}}],["output",{"_index":405,"title":{},"body":{"interfaces/EditorJSConfig.html":{},"interfaces/NgxEditorJSConfig.html":{}}}],["outputdata",{"_index":378,"title":{},"body":{"classes/Changed.html":{},"interfaces/EditorJSConfig.html":{},"interfaces/NgxEditorJSConfig.html":{},"injectables/NgxEditorJSService.html":{},"classes/NotReady.html":{},"classes/Ready.html":{},"classes/SaveEnd.html":{},"classes/SaveStart.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-readme.html":{}}}],["overall",{"_index":1022,"title":{},"body":{"changelog.html":{}}}],["overriding",{"_index":1477,"title":{},"body":{"additional-documentation/tinynodes-library-docs/ngx-editorjs-readme.html":{}}}],["overview",{"_index":1403,"title":{"overview.html":{}},"body":{"overview.html":{}}}],["owners",{"_index":1069,"title":{},"body":{"contributing.html":{}}}],["package",{"_index":1298,"title":{"dependencies.html":{}},"body":{"additional-documentation/tinynodes-library-docs/ngx-editorjs-readme/ngx-editorjs-changelog.html":{}}}],["padding",{"_index":105,"title":{},"body":{"components/AppComponent.html":{},"components/NavBarComponent.html":{}}}],["page",{"_index":50,"title":{"interfaces/Page.html":{},"additional-documentation/tinynodes-library-docs.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-readme.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-readme/ngx-editorjs-changelog.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-plugins-readme.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-plugins-readme/ngx-editorjs-plugins-changelog.html":{}},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"components/EditorPageComponent.html":{},"components/NavBarComponent.html":{},"components/NgxEditorJSComponent.html":{},"interfaces/Page.html":{},"interfaces/PageBlock.html":{},"components/PageContainerComponent.html":{},"injectables/PagesQuery.html":{},"injectables/PagesService.html":{},"interfaces/PagesState.html":{},"injectables/PagesStore.html":{},"components/SidebarComponent.html":{},"interfaces/Tag.html":{},"coverage.html":{},"todo.html":{}}}],["page'},{'name",{"_index":134,"title":{},"body":{"components/AppComponent.html":{},"components/EditorPageComponent.html":{},"components/NavBarComponent.html":{},"components/NgxEditorJSComponent.html":{},"components/PageContainerComponent.html":{},"components/SidebarComponent.html":{}}}],["page.component",{"_index":808,"title":{},"body":{"modules/NgxEditorjsDemoModule.html":{}}}],["page.component.html",{"_index":437,"title":{},"body":{"components/EditorPageComponent.html":{}}}],["page.component.scss",{"_index":436,"title":{},"body":{"components/EditorPageComponent.html":{}}}],["page.component.ts",{"_index":434,"title":{},"body":{"components/EditorPageComponent.html":{},"coverage.html":{}}}],["page.component.ts:12",{"_index":443,"title":{},"body":{"components/EditorPageComponent.html":{}}}],["page.component.ts:22",{"_index":447,"title":{},"body":{"components/EditorPageComponent.html":{}}}],["page.component.ts:30",{"_index":445,"title":{},"body":{"components/EditorPageComponent.html":{}}}],["page.id",{"_index":910,"title":{},"body":{"injectables/PagesService.html":{}}}],["page/editor",{"_index":433,"title":{},"body":{"components/EditorPageComponent.html":{},"modules/NgxEditorjsDemoModule.html":{},"coverage.html":{}}}],["pageblock",{"_index":850,"title":{"interfaces/PageBlock.html":{}},"body":{"interfaces/Page.html":{},"interfaces/PageBlock.html":{},"injectables/PagesService.html":{},"interfaces/Tag.html":{},"coverage.html":{}}}],["pagecontainercomponent",{"_index":140,"title":{"components/PageContainerComponent.html":{}},"body":{"components/AppComponent.html":{},"components/EditorPageComponent.html":{},"components/NavBarComponent.html":{},"components/NgxEditorJSComponent.html":{},"modules/NgxEditorjsDemoModule.html":{},"components/PageContainerComponent.html":{},"components/SidebarComponent.html":{},"coverage.html":{},"overview.html":{},"miscellaneous/variables.html":{}}}],["pagedata",{"_index":458,"title":{},"body":{"components/EditorPageComponent.html":{}}}],["pageid",{"_index":889,"title":{},"body":{"injectables/PagesService.html":{}}}],["pages",{"_index":466,"title":{},"body":{"components/EditorPageComponent.html":{},"components/PageContainerComponent.html":{},"injectables/PagesService.html":{},"interfaces/PagesState.html":{},"injectables/PagesStore.html":{}}}],["pages.models",{"_index":877,"title":{},"body":{"injectables/PagesQuery.html":{},"injectables/PagesService.html":{},"interfaces/PagesState.html":{},"injectables/PagesStore.html":{}}}],["pages.query",{"_index":871,"title":{},"body":{"modules/PageStoreModule.html":{},"injectables/PagesService.html":{}}}],["pages.service",{"_index":872,"title":{},"body":{"modules/PageStoreModule.html":{}}}],["pages.store",{"_index":873,"title":{},"body":{"modules/PageStoreModule.html":{},"injectables/PagesQuery.html":{},"injectables/PagesService.html":{}}}],["pagesquery",{"_index":868,"title":{"injectables/PagesQuery.html":{}},"body":{"modules/PageStoreModule.html":{},"injectables/PagesQuery.html":{},"injectables/PagesService.html":{},"coverage.html":{},"overview.html":{}}}],["pagesservice",{"_index":857,"title":{"injectables/PagesService.html":{}},"body":{"components/PageContainerComponent.html":{},"modules/PageStoreModule.html":{},"injectables/PagesService.html":{},"coverage.html":{},"overview.html":{}}}],["pagesstate",{"_index":878,"title":{"interfaces/PagesState.html":{}},"body":{"injectables/PagesQuery.html":{},"interfaces/PagesState.html":{},"injectables/PagesStore.html":{},"coverage.html":{}}}],["pagesstore",{"_index":869,"title":{"injectables/PagesStore.html":{}},"body":{"modules/PageStoreModule.html":{},"injectables/PagesQuery.html":{},"injectables/PagesService.html":{},"interfaces/PagesState.html":{},"injectables/PagesStore.html":{},"coverage.html":{},"overview.html":{}}}],["pagestoremodule",{"_index":793,"title":{"modules/PageStoreModule.html":{}},"body":{"modules/NgxEditorjsDemoModule.html":{},"modules/PageStoreModule.html":{},"modules.html":{},"overview.html":{}}}],["pagetags",{"_index":456,"title":{},"body":{"components/EditorPageComponent.html":{},"interfaces/Page.html":{},"interfaces/PageBlock.html":{},"injectables/PagesService.html":{},"interfaces/Tag.html":{}}}],["pagetitle",{"_index":33,"title":{},"body":{"components/AppComponent.html":{},"components/EditorPageComponent.html":{},"interfaces/Page.html":{},"interfaces/PageBlock.html":{},"injectables/PagesService.html":{},"interfaces/Tag.html":{}}}],["paragraph",{"_index":328,"title":{"interfaces/Paragraph.html":{}},"body":{"interfaces/Block.html":{},"interfaces/EditorJSConfig.html":{},"interfaces/Header.html":{},"interfaces/HeaderBlock.html":{},"interfaces/Image.html":{},"interfaces/ImageBlock.html":{},"interfaces/List.html":{},"interfaces/ListBlock.html":{},"interfaces/NgxEditorJSConfig.html":{},"interfaces/Paragraph.html":{},"interfaces/ParagraphBlock.html":{},"injectables/PluginParagraph.html":{},"coverage.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-readme.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-readme/ngx-editorjs-changelog.html":{}}}],["paragraph.plugin",{"_index":991,"title":{},"body":{"modules/PluginParagraphModule.html":{}}}],["paragraphblock",{"_index":329,"title":{"interfaces/ParagraphBlock.html":{}},"body":{"interfaces/Block.html":{},"interfaces/Header.html":{},"interfaces/HeaderBlock.html":{},"interfaces/Image.html":{},"interfaces/ImageBlock.html":{},"interfaces/List.html":{},"interfaces/ListBlock.html":{},"interfaces/Paragraph.html":{},"interfaces/ParagraphBlock.html":{},"coverage.html":{},"miscellaneous/typealiases.html":{}}}],["param",{"_index":517,"title":{},"body":{"components/NgxEditorJSComponent.html":{},"modules/NgxEditorJSModule.html":{},"injectables/NgxEditorJSPluginService.html":{},"injectables/NgxEditorJSService.html":{},"injectables/PagesService.html":{}}}],["parameter",{"_index":1513,"title":{},"body":{"additional-documentation/tinynodes-library-docs/ngx-editorjs-readme/ngx-editorjs-changelog.html":{}}}],["parameters",{"_index":39,"title":{},"body":{"components/AppComponent.html":{},"injectables/AppService.html":{},"injectables/ApplicationQuery.html":{},"classes/Changed.html":{},"components/EditorPageComponent.html":{},"components/NavBarComponent.html":{},"components/NgxEditorJSComponent.html":{},"directives/NgxEditorJSDirective.html":{},"injectables/NgxEditorJSEffects.html":{},"modules/NgxEditorJSModule.html":{},"injectables/NgxEditorJSPluginService.html":{},"injectables/NgxEditorJSService.html":{},"classes/NotReady.html":{},"components/PageContainerComponent.html":{},"injectables/PagesQuery.html":{},"injectables/PagesService.html":{},"classes/Ready.html":{},"classes/SaveEnd.html":{},"classes/SaveStart.html":{},"components/SidebarComponent.html":{},"contributing.html":{},"miscellaneous/functions.html":{}}}],["parentmodule",{"_index":637,"title":{},"body":{"modules/NgxEditorJSModule.html":{}}}],["participants",{"_index":1154,"title":{},"body":{"contributing.html":{}}}],["participation",{"_index":1110,"title":{},"body":{"contributing.html":{}}}],["particular",{"_index":1384,"title":{},"body":{"license.html":{}}}],["pass",{"_index":598,"title":{},"body":{"modules/NgxEditorJSModule.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-readme.html":{}}}],["passed",{"_index":424,"title":{},"body":{"interfaces/EditorJSConfig.html":{},"interfaces/NgxEditorJSConfig.html":{},"injectables/NgxEditorJSPluginService.html":{}}}],["paste",{"_index":1524,"title":{},"body":{"additional-documentation/tinynodes-library-docs/ngx-editorjs-plugins-readme.html":{}}}],["path",{"_index":1434,"title":{},"body":{"miscellaneous/variables.html":{}}}],["pathmatch",{"_index":1436,"title":{},"body":{"miscellaneous/variables.html":{}}}],["payload",{"_index":371,"title":{},"body":{"classes/Changed.html":{},"classes/NotReady.html":{},"classes/Ready.html":{},"classes/SaveEnd.html":{},"classes/SaveStart.html":{}}}],["peer",{"_index":1420,"title":{},"body":{"todo.html":{}}}],["permanent",{"_index":1254,"title":{},"body":{"contributing.html":{}}}],["permanently",{"_index":1198,"title":{},"body":{"contributing.html":{}}}],["permission",{"_index":1100,"title":{},"body":{"contributing.html":{},"license.html":{}}}],["permit",{"_index":1365,"title":{},"body":{"license.html":{}}}],["person",{"_index":1349,"title":{},"body":{"license.html":{}}}],["personal",{"_index":1126,"title":{},"body":{"contributing.html":{}}}],["persons",{"_index":1366,"title":{},"body":{"license.html":{}}}],["physical",{"_index":1169,"title":{},"body":{"contributing.html":{}}}],["pipeline",{"_index":1411,"title":{},"body":{"todo.html":{}}}],["piper",{"_index":1339,"title":{},"body":{"index.html":{},"license.html":{}}}],["placeholder",{"_index":401,"title":{},"body":{"interfaces/EditorJSConfig.html":{},"interfaces/NgxEditorJSConfig.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-readme.html":{}}}],["please",{"_index":1063,"title":{},"body":{"contributing.html":{}}}],["pledge",{"_index":1103,"title":{},"body":{"contributing.html":{}}}],["plug",{"_index":832,"title":{},"body":{"modules/NgxEditorjsPluginsModule.html":{}}}],["plugin",{"_index":280,"title":{},"body":{"interfaces/BasePlugin.html":{},"interfaces/BasePlugin-1.html":{},"interfaces/Block.html":{},"interfaces/Header.html":{},"interfaces/HeaderBlock.html":{},"interfaces/Image.html":{},"interfaces/ImageBlock.html":{},"interfaces/List.html":{},"interfaces/ListBlock.html":{},"injectables/NgxEditorJSPluginService.html":{},"interfaces/Paragraph.html":{},"interfaces/ParagraphBlock.html":{},"injectables/PluginCode.html":{},"interfaces/PluginConfig.html":{},"interfaces/PluginConfig-1.html":{},"injectables/PluginHeader.html":{},"injectables/PluginImage.html":{},"injectables/PluginLink.html":{},"injectables/PluginList.html":{},"injectables/PluginMarker.html":{},"injectables/PluginParagraph.html":{},"injectables/PluginSimpleImage.html":{},"interfaces/ToolSettingsMap.html":{},"interfaces/ToolSettingsMap-1.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-readme.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-readme/ngx-editorjs-changelog.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-plugins-readme.html":{}}}],["plugin.plugin",{"_index":687,"title":{},"body":{"injectables/NgxEditorJSPluginService.html":{}}}],["plugin.shortcut",{"_index":686,"title":{},"body":{"injectables/NgxEditorJSPluginService.html":{}}}],["plugincode",{"_index":922,"title":{"injectables/PluginCode.html":{}},"body":{"injectables/PluginCode.html":{},"modules/PluginCodeModule.html":{},"coverage.html":{},"overview.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-readme.html":{}}}],["plugincodemodule",{"_index":794,"title":{"modules/PluginCodeModule.html":{}},"body":{"modules/NgxEditorjsDemoModule.html":{},"modules/NgxEditorjsPluginsModule.html":{},"modules/PluginCodeModule.html":{},"modules.html":{},"overview.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-plugins-readme.html":{}}}],["pluginconfig",{"_index":291,"title":{"interfaces/PluginConfig.html":{},"interfaces/PluginConfig-1.html":{}},"body":{"interfaces/BasePlugin.html":{},"interfaces/BasePlugin-1.html":{},"injectables/NgxEditorJSPluginService.html":{},"interfaces/PluginConfig.html":{},"interfaces/PluginConfig-1.html":{},"interfaces/ToolSettingsMap.html":{},"interfaces/ToolSettingsMap-1.html":{},"coverage.html":{},"miscellaneous/functions.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-readme.html":{}}}],["pluginheader",{"_index":936,"title":{"injectables/PluginHeader.html":{}},"body":{"injectables/PluginHeader.html":{},"modules/PluginHeaderModule.html":{},"coverage.html":{},"overview.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-readme.html":{}}}],["pluginheadermodule",{"_index":795,"title":{"modules/PluginHeaderModule.html":{}},"body":{"modules/NgxEditorjsDemoModule.html":{},"modules/NgxEditorjsPluginsModule.html":{},"modules/PluginHeaderModule.html":{},"modules.html":{},"overview.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-readme.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-plugins-readme.html":{}}}],["pluginilistmodule",{"_index":1522,"title":{},"body":{"additional-documentation/tinynodes-library-docs/ngx-editorjs-plugins-readme.html":{}}}],["pluginimage",{"_index":945,"title":{"injectables/PluginImage.html":{}},"body":{"injectables/PluginImage.html":{},"modules/PluginImageModule.html":{},"coverage.html":{},"overview.html":{}}}],["pluginimagemodule",{"_index":828,"title":{"modules/PluginImageModule.html":{}},"body":{"modules/NgxEditorjsPluginsModule.html":{},"modules/PluginImageModule.html":{},"modules.html":{},"overview.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-plugins-readme.html":{}}}],["pluginlink",{"_index":954,"title":{"injectables/PluginLink.html":{}},"body":{"injectables/PluginLink.html":{},"modules/PluginLinkModule.html":{},"coverage.html":{},"overview.html":{}}}],["pluginlinkmodule",{"_index":796,"title":{"modules/PluginLinkModule.html":{}},"body":{"modules/NgxEditorjsDemoModule.html":{},"modules/NgxEditorjsPluginsModule.html":{},"modules/PluginLinkModule.html":{},"modules.html":{},"overview.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-plugins-readme.html":{}}}],["pluginlist",{"_index":963,"title":{"injectables/PluginList.html":{}},"body":{"injectables/PluginList.html":{},"modules/PluginListModule.html":{},"coverage.html":{},"overview.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-readme.html":{}}}],["pluginlistmodule",{"_index":797,"title":{"modules/PluginListModule.html":{}},"body":{"modules/NgxEditorjsDemoModule.html":{},"modules/NgxEditorjsPluginsModule.html":{},"modules/PluginListModule.html":{},"modules.html":{},"overview.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-readme.html":{}}}],["pluginmarker",{"_index":972,"title":{"injectables/PluginMarker.html":{}},"body":{"injectables/PluginMarker.html":{},"modules/PluginMarkerModule.html":{},"coverage.html":{},"overview.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-readme.html":{}}}],["pluginmarkermodule",{"_index":798,"title":{"modules/PluginMarkerModule.html":{}},"body":{"modules/NgxEditorjsDemoModule.html":{},"modules/NgxEditorjsPluginsModule.html":{},"modules/PluginMarkerModule.html":{},"modules.html":{},"overview.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-readme.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-plugins-readme.html":{}}}],["pluginparagraph",{"_index":984,"title":{"injectables/PluginParagraph.html":{}},"body":{"injectables/PluginParagraph.html":{},"modules/PluginParagraphModule.html":{},"coverage.html":{},"overview.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-readme.html":{}}}],["pluginparagraphmodule",{"_index":799,"title":{"modules/PluginParagraphModule.html":{}},"body":{"modules/NgxEditorjsDemoModule.html":{},"modules/NgxEditorjsPluginsModule.html":{},"modules/PluginParagraphModule.html":{},"modules.html":{},"overview.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-readme.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-plugins-readme.html":{}}}],["plugins",{"_index":302,"title":{"additional-documentation/tinynodes-library-docs/ngx-editorjs-plugins-readme.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-plugins-readme/ngx-editorjs-plugins-changelog.html":{}},"body":{"interfaces/BasePlugin.html":{},"interfaces/BasePlugin-1.html":{},"injectables/NgxEditorJSPluginService.html":{},"injectables/NgxEditorJSService.html":{},"modules/NgxEditorjsDemoModule.html":{},"interfaces/PluginConfig.html":{},"interfaces/PluginConfig-1.html":{},"interfaces/ToolSettingsMap.html":{},"interfaces/ToolSettingsMap-1.html":{},"changelog.html":{},"miscellaneous/variables.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-readme.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-readme/ngx-editorjs-changelog.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-plugins-readme.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-plugins-readme/ngx-editorjs-plugins-changelog.html":{}}}],["plugins.module.ts",{"_index":830,"title":{},"body":{"modules/NgxEditorjsPluginsModule.html":{}}}],["plugins.service",{"_index":751,"title":{},"body":{"injectables/NgxEditorJSService.html":{}}}],["plugins/code/code.module",{"_index":837,"title":{},"body":{"modules/NgxEditorjsPluginsModule.html":{}}}],["plugins/header/header.module",{"_index":838,"title":{},"body":{"modules/NgxEditorjsPluginsModule.html":{}}}],["plugins/image/image.module",{"_index":839,"title":{},"body":{"modules/NgxEditorjsPluginsModule.html":{}}}],["plugins/link/link.module",{"_index":840,"title":{},"body":{"modules/NgxEditorjsPluginsModule.html":{}}}],["plugins/list/list.module",{"_index":841,"title":{},"body":{"modules/NgxEditorjsPluginsModule.html":{}}}],["plugins/marker/marker.module",{"_index":842,"title":{},"body":{"modules/NgxEditorjsPluginsModule.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-readme.html":{}}}],["plugins/marker/marker.plugin",{"_index":1472,"title":{},"body":{"additional-documentation/tinynodes-library-docs/ngx-editorjs-readme.html":{}}}],["plugins/paragraph/paragraph.module",{"_index":843,"title":{},"body":{"modules/NgxEditorjsPluginsModule.html":{}}}],["plugins/simple",{"_index":844,"title":{},"body":{"modules/NgxEditorjsPluginsModule.html":{}}}],["plugins/src/lib/ngx",{"_index":829,"title":{},"body":{"modules/NgxEditorjsPluginsModule.html":{}}}],["plugins/src/lib/plugins/code/code.module.ts",{"_index":929,"title":{},"body":{"modules/PluginCodeModule.html":{}}}],["plugins/src/lib/plugins/code/code.plugin.ts",{"_index":923,"title":{},"body":{"injectables/PluginCode.html":{},"coverage.html":{}}}],["plugins/src/lib/plugins/code/code.plugin.ts:14",{"_index":924,"title":{},"body":{"injectables/PluginCode.html":{}}}],["plugins/src/lib/plugins/header/header.module.ts",{"_index":942,"title":{},"body":{"modules/PluginHeaderModule.html":{}}}],["plugins/src/lib/plugins/header/header.plugin.ts",{"_index":937,"title":{},"body":{"injectables/PluginHeader.html":{},"coverage.html":{}}}],["plugins/src/lib/plugins/header/header.plugin.ts:14",{"_index":938,"title":{},"body":{"injectables/PluginHeader.html":{}}}],["plugins/src/lib/plugins/image/image.module.ts",{"_index":951,"title":{},"body":{"modules/PluginImageModule.html":{}}}],["plugins/src/lib/plugins/image/image.plugin.ts",{"_index":946,"title":{},"body":{"injectables/PluginImage.html":{},"coverage.html":{}}}],["plugins/src/lib/plugins/image/image.plugin.ts:14",{"_index":947,"title":{},"body":{"injectables/PluginImage.html":{}}}],["plugins/src/lib/plugins/link/link.module.ts",{"_index":960,"title":{},"body":{"modules/PluginLinkModule.html":{}}}],["plugins/src/lib/plugins/link/link.plugin.ts",{"_index":955,"title":{},"body":{"injectables/PluginLink.html":{},"coverage.html":{}}}],["plugins/src/lib/plugins/link/link.plugin.ts:14",{"_index":956,"title":{},"body":{"injectables/PluginLink.html":{}}}],["plugins/src/lib/plugins/list/list.module.ts",{"_index":969,"title":{},"body":{"modules/PluginListModule.html":{}}}],["plugins/src/lib/plugins/list/list.plugin.ts",{"_index":964,"title":{},"body":{"injectables/PluginList.html":{},"coverage.html":{}}}],["plugins/src/lib/plugins/list/list.plugin.ts:14",{"_index":965,"title":{},"body":{"injectables/PluginList.html":{}}}],["plugins/src/lib/plugins/marker/marker.module.ts",{"_index":981,"title":{},"body":{"modules/PluginMarkerModule.html":{}}}],["plugins/src/lib/plugins/marker/marker.plugin.ts",{"_index":973,"title":{},"body":{"injectables/PluginMarker.html":{},"coverage.html":{}}}],["plugins/src/lib/plugins/marker/marker.plugin.ts:14",{"_index":975,"title":{},"body":{"injectables/PluginMarker.html":{}}}],["plugins/src/lib/plugins/marker/marker.plugin.ts:20",{"_index":976,"title":{},"body":{"injectables/PluginMarker.html":{}}}],["plugins/src/lib/plugins/paragraph/paragraph.module.ts",{"_index":990,"title":{},"body":{"modules/PluginParagraphModule.html":{}}}],["plugins/src/lib/plugins/paragraph/paragraph.plugin.ts",{"_index":985,"title":{},"body":{"injectables/PluginParagraph.html":{},"coverage.html":{}}}],["plugins/src/lib/plugins/paragraph/paragraph.plugin.ts:14",{"_index":986,"title":{},"body":{"injectables/PluginParagraph.html":{}}}],["plugins/src/lib/plugins/simple",{"_index":994,"title":{},"body":{"injectables/PluginSimpleImage.html":{},"modules/PluginSimpleImageModule.html":{},"coverage.html":{}}}],["plugins/src/lib/types/plugins.ts",{"_index":311,"title":{},"body":{"interfaces/BasePlugin-1.html":{},"interfaces/PluginConfig-1.html":{},"interfaces/ToolSettingsMap-1.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["plugins/src/lib/types/plugins.ts:17",{"_index":1017,"title":{},"body":{"interfaces/ToolSettingsMap-1.html":{}}}],["plugins/src/lib/types/plugins.ts:7",{"_index":935,"title":{},"body":{"interfaces/PluginConfig-1.html":{}}}],["pluginservice",{"_index":1526,"title":{},"body":{"additional-documentation/tinynodes-library-docs/ngx-editorjs-plugins-readme/ngx-editorjs-plugins-changelog.html":{}}}],["pluginsimpleimage",{"_index":993,"title":{"injectables/PluginSimpleImage.html":{}},"body":{"injectables/PluginSimpleImage.html":{},"modules/PluginSimpleImageModule.html":{},"coverage.html":{},"overview.html":{}}}],["pluginsimpleimagemodule",{"_index":800,"title":{"modules/PluginSimpleImageModule.html":{}},"body":{"modules/NgxEditorjsDemoModule.html":{},"modules/NgxEditorjsPluginsModule.html":{},"modules/PluginSimpleImageModule.html":{},"modules.html":{},"overview.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-plugins-readme.html":{}}}],["pluginsmap",{"_index":672,"title":{},"body":{"injectables/NgxEditorJSPluginService.html":{}}}],["pointer",{"_index":109,"title":{},"body":{"components/AppComponent.html":{},"components/NavBarComponent.html":{}}}],["policies",{"_index":1247,"title":{},"body":{"contributing.html":{}}}],["political",{"_index":1163,"title":{},"body":{"contributing.html":{}}}],["portions",{"_index":1375,"title":{},"body":{"license.html":{}}}],["ports",{"_index":1085,"title":{},"body":{"contributing.html":{}}}],["positive",{"_index":1135,"title":{},"body":{"contributing.html":{}}}],["possible",{"_index":834,"title":{},"body":{"modules/NgxEditorjsPluginsModule.html":{}}}],["posted",{"_index":1248,"title":{},"body":{"contributing.html":{}}}],["posting",{"_index":1213,"title":{},"body":{"contributing.html":{}}}],["potential",{"_index":1460,"title":{},"body":{"additional-documentation/tinynodes-library-docs/ngx-editorjs-readme.html":{}}}],["pre",{"_index":1519,"title":{},"body":{"additional-documentation/tinynodes-library-docs/ngx-editorjs-readme/ngx-editorjs-changelog.html":{}}}],["private",{"_index":72,"title":{},"body":{"components/AppComponent.html":{},"injectables/AppService.html":{},"components/EditorPageComponent.html":{},"injectables/NgxEditorJSEffects.html":{},"injectables/NgxEditorJSPluginService.html":{},"injectables/NgxEditorJSService.html":{},"injectables/PagesService.html":{},"components/SidebarComponent.html":{},"contributing.html":{}}}],["process",{"_index":1076,"title":{},"body":{"contributing.html":{}}}],["produced",{"_index":673,"title":{},"body":{"injectables/NgxEditorJSPluginService.html":{}}}],["production",{"_index":1438,"title":{},"body":{"miscellaneous/variables.html":{}}}],["professional",{"_index":1176,"title":{},"body":{"contributing.html":{}}}],["project",{"_index":1043,"title":{},"body":{"changelog.html":{},"contributing.html":{},"index.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-readme.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-readme/ngx-editorjs-changelog.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-plugins-readme/ngx-editorjs-plugins-changelog.html":{}}}],["project's",{"_index":1257,"title":{},"body":{"contributing.html":{}}}],["projects",{"_index":1444,"title":{},"body":{"additional-documentation/tinynodes-library-docs.html":{}}}],["properties",{"_index":30,"title":{},"body":{"components/AppComponent.html":{},"interfaces/ApplicationState.html":{},"interfaces/BasePlugin.html":{},"interfaces/BasePlugin-1.html":{},"interfaces/Block.html":{},"classes/Changed.html":{},"interfaces/EditorJSConfig.html":{},"interfaces/Header.html":{},"interfaces/HeaderBlock.html":{},"interfaces/Image.html":{},"interfaces/ImageBlock.html":{},"interfaces/List.html":{},"interfaces/ListBlock.html":{},"interfaces/MenuItem.html":{},"components/NgxEditorJSComponent.html":{},"interfaces/NgxEditorJSConfig.html":{},"directives/NgxEditorJSDirective.html":{},"injectables/NgxEditorJSEffects.html":{},"classes/NotReady.html":{},"interfaces/Page.html":{},"interfaces/PageBlock.html":{},"injectables/PagesService.html":{},"interfaces/Paragraph.html":{},"interfaces/ParagraphBlock.html":{},"classes/Ready.html":{},"classes/SaveEnd.html":{},"classes/SaveStart.html":{},"components/SidebarComponent.html":{},"interfaces/Tag.html":{}}}],["property",{"_index":339,"title":{},"body":{"interfaces/Block.html":{},"interfaces/Header.html":{},"interfaces/HeaderBlock.html":{},"interfaces/Image.html":{},"interfaces/ImageBlock.html":{},"interfaces/List.html":{},"interfaces/ListBlock.html":{},"directives/NgxEditorJSDirective.html":{},"interfaces/Paragraph.html":{},"interfaces/ParagraphBlock.html":{}}}],["provide",{"_index":537,"title":{},"body":{"directives/NgxEditorJSDirective.html":{},"modules/NgxEditorJSModule.html":{},"modules/NgxEditorjsDemoModule.html":{},"modules/NgxEditorjsPluginsModule.html":{},"todo.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-readme.html":{}}}],["provided",{"_index":326,"title":{},"body":{"interfaces/Block.html":{},"interfaces/Header.html":{},"interfaces/HeaderBlock.html":{},"interfaces/Image.html":{},"interfaces/ImageBlock.html":{},"interfaces/List.html":{},"interfaces/ListBlock.html":{},"components/NgxEditorJSComponent.html":{},"modules/NgxEditorJSModule.html":{},"interfaces/Paragraph.html":{},"interfaces/ParagraphBlock.html":{},"license.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-readme.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-readme/ngx-editorjs-changelog.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-plugins-readme/ngx-editorjs-plugins-changelog.html":{}}}],["providedin",{"_index":670,"title":{},"body":{"injectables/NgxEditorJSPluginService.html":{},"injectables/NgxEditorJSService.html":{}}}],["provider",{"_index":1452,"title":{},"body":{"additional-documentation/tinynodes-library-docs/ngx-editorjs-readme.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-readme/ngx-editorjs-changelog.html":{}}}],["providers",{"_index":156,"title":{},"body":{"modules/AppModule.html":{},"modules/ApplicationDataModule.html":{},"modules/NgxEditorJSModule.html":{},"modules/NgxEditorjsDemoModule.html":{},"modules/NgxEditorjsNgrxModule.html":{},"modules/NgxEditorjsPluginsModule.html":{},"modules/PageStoreModule.html":{},"modules/PluginCodeModule.html":{},"modules/PluginHeaderModule.html":{},"modules/PluginImageModule.html":{},"modules/PluginLinkModule.html":{},"modules/PluginListModule.html":{},"modules/PluginMarkerModule.html":{},"modules/PluginParagraphModule.html":{},"modules/PluginSimpleImageModule.html":{},"overview.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-readme.html":{}}}],["provides",{"_index":16,"title":{},"body":{"components/AppComponent.html":{},"directives/NgxEditorJSDirective.html":{},"modules/NgxEditorJSModule.html":{},"injectables/NgxEditorJSPluginService.html":{},"injectables/NgxEditorJSService.html":{},"modules/NgxEditorjsPluginsModule.html":{},"injectables/PagesService.html":{},"modules/PluginCodeModule.html":{},"modules/PluginHeaderModule.html":{},"modules/PluginImageModule.html":{},"modules/PluginLinkModule.html":{},"modules/PluginListModule.html":{},"modules/PluginMarkerModule.html":{},"modules/PluginParagraphModule.html":{},"modules/PluginSimpleImageModule.html":{},"changelog.html":{},"index.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-readme.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-plugins-readme.html":{}}}],["provied",{"_index":428,"title":{},"body":{"interfaces/EditorJSConfig.html":{},"interfaces/NgxEditorJSConfig.html":{},"miscellaneous/variables.html":{}}}],["public",{"_index":70,"title":{},"body":{"components/AppComponent.html":{},"injectables/AppService.html":{},"classes/Changed.html":{},"components/EditorPageComponent.html":{},"components/NavBarComponent.html":{},"components/NgxEditorJSComponent.html":{},"directives/NgxEditorJSDirective.html":{},"injectables/NgxEditorJSPluginService.html":{},"injectables/NgxEditorJSService.html":{},"classes/NotReady.html":{},"injectables/PagesService.html":{},"injectables/PluginCode.html":{},"injectables/PluginHeader.html":{},"injectables/PluginImage.html":{},"injectables/PluginLink.html":{},"injectables/PluginList.html":{},"injectables/PluginMarker.html":{},"injectables/PluginParagraph.html":{},"injectables/PluginSimpleImage.html":{},"classes/Ready.html":{},"classes/SaveEnd.html":{},"classes/SaveStart.html":{},"contributing.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-plugins-readme/ngx-editorjs-plugins-changelog.html":{}}}],["publish",{"_index":1359,"title":{},"body":{"license.html":{},"todo.html":{}}}],["publishing",{"_index":1165,"title":{},"body":{"contributing.html":{},"todo.html":{}}}],["pull",{"_index":1074,"title":{},"body":{"contributing.html":{}}}],["purpose",{"_index":1385,"title":{},"body":{"license.html":{}}}],["query",{"_index":232,"title":{},"body":{"injectables/AppService.html":{},"injectables/ApplicationQuery.html":{},"injectables/PagesService.html":{}}}],["queryentity",{"_index":875,"title":{},"body":{"injectables/PagesQuery.html":{}}}],["race",{"_index":1128,"title":{},"body":{"contributing.html":{}}}],["radius",{"_index":521,"title":{},"body":{"components/NgxEditorJSComponent.html":{}}}],["reactiveformsmodule",{"_index":804,"title":{},"body":{"modules/NgxEditorjsDemoModule.html":{}}}],["readme",{"_index":1335,"title":{"additional-documentation/tinynodes-library-docs/ngx-editorjs-readme.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-plugins-readme.html":{}},"body":{"index.html":{},"additional-documentation/tinynodes-library-docs.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-readme/ngx-editorjs-changelog.html":{}}}],["readme.md",{"_index":1081,"title":{},"body":{"contributing.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-plugins-readme/ngx-editorjs-plugins-changelog.html":{}}}],["readonly",{"_index":73,"title":{},"body":{"components/AppComponent.html":{},"injectables/AppService.html":{},"classes/Changed.html":{},"components/EditorPageComponent.html":{},"components/NavBarComponent.html":{},"components/NgxEditorJSComponent.html":{},"directives/NgxEditorJSDirective.html":{},"injectables/NgxEditorJSEffects.html":{},"injectables/NgxEditorJSService.html":{},"classes/NotReady.html":{},"components/PageContainerComponent.html":{},"injectables/PagesService.html":{},"classes/Ready.html":{},"classes/SaveEnd.html":{},"classes/SaveStart.html":{},"components/SidebarComponent.html":{}}}],["ready",{"_index":358,"title":{"classes/Ready.html":{}},"body":{"interfaces/BlocksMap.html":{},"interfaces/ChangeMap.html":{},"classes/Changed.html":{},"interfaces/EditorMap.html":{},"injectables/NgxEditorJSService.html":{},"classes/NotReady.html":{},"classes/Ready.html":{},"interfaces/ReadyMap.html":{},"classes/SaveEnd.html":{},"classes/SaveStart.html":{},"coverage.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/typealiases.html":{}}}],["readymap",{"_index":360,"title":{"interfaces/ReadyMap.html":{}},"body":{"interfaces/BlocksMap.html":{},"interfaces/ChangeMap.html":{},"interfaces/EditorMap.html":{},"injectables/NgxEditorJSService.html":{},"interfaces/ReadyMap.html":{},"coverage.html":{}}}],["reasonably",{"_index":1173,"title":{},"body":{"contributing.html":{}}}],["redirectto",{"_index":1435,"title":{},"body":{"miscellaneous/variables.html":{}}}],["reduce((finaltools",{"_index":685,"title":{},"body":{"injectables/NgxEditorJSPluginService.html":{}}}],["regard",{"_index":1243,"title":{},"body":{"contributing.html":{}}}],["regardless",{"_index":1116,"title":{},"body":{"contributing.html":{}}}],["regenerated",{"_index":1507,"title":{},"body":{"additional-documentation/tinynodes-library-docs/ngx-editorjs-readme/ngx-editorjs-changelog.html":{}}}],["registered",{"_index":667,"title":{},"body":{"injectables/NgxEditorJSPluginService.html":{}}}],["reject",{"_index":1190,"title":{},"body":{"contributing.html":{}}}],["related",{"_index":1021,"title":{},"body":{"changelog.html":{}}}],["release",{"_index":1053,"title":{},"body":{"changelog.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-readme/ngx-editorjs-changelog.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-plugins-readme/ngx-editorjs-plugins-changelog.html":{}}}],["released",{"_index":1048,"title":{},"body":{"changelog.html":{},"additional-documentation/tinynodes-library-docs.html":{}}}],["releases",{"_index":1483,"title":{},"body":{"additional-documentation/tinynodes-library-docs/ngx-editorjs-readme.html":{}}}],["religion",{"_index":1129,"title":{},"body":{"contributing.html":{}}}],["remove",{"_index":648,"title":{},"body":{"injectables/NgxEditorJSPluginService.html":{},"contributing.html":{}}}],["remove(key",{"_index":663,"title":{},"body":{"injectables/NgxEditorJSPluginService.html":{}}}],["removeblock",{"_index":881,"title":{},"body":{"injectables/PagesService.html":{}}}],["removeblock(pageid",{"_index":894,"title":{},"body":{"injectables/PagesService.html":{}}}],["removed",{"_index":893,"title":{},"body":{"injectables/PagesService.html":{},"contributing.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-readme/ngx-editorjs-changelog.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-plugins-readme/ngx-editorjs-plugins-changelog.html":{}}}],["removes",{"_index":892,"title":{},"body":{"injectables/PagesService.html":{}}}],["renamed",{"_index":1516,"title":{},"body":{"additional-documentation/tinynodes-library-docs/ngx-editorjs-readme/ngx-editorjs-changelog.html":{}}}],["render",{"_index":406,"title":{},"body":{"interfaces/EditorJSConfig.html":{},"components/NgxEditorJSComponent.html":{},"interfaces/NgxEditorJSConfig.html":{},"directives/NgxEditorJSDirective.html":{},"injectables/NgxEditorJSService.html":{},"injectables/PagesService.html":{}}}],["repercussions",{"_index":1255,"title":{},"body":{"contributing.html":{}}}],["replaced",{"_index":1512,"title":{},"body":{"additional-documentation/tinynodes-library-docs/ngx-editorjs-readme/ngx-editorjs-changelog.html":{}}}],["repo",{"_index":930,"title":{},"body":{"modules/PluginCodeModule.html":{},"modules/PluginHeaderModule.html":{},"modules/PluginImageModule.html":{},"modules/PluginLinkModule.html":{},"modules/PluginListModule.html":{},"modules/PluginMarkerModule.html":{},"modules/PluginParagraphModule.html":{},"modules/PluginSimpleImageModule.html":{},"todo.html":{}}}],["repo](https://github.com/editor",{"_index":932,"title":{},"body":{"modules/PluginCodeModule.html":{},"modules/PluginHeaderModule.html":{},"modules/PluginImageModule.html":{},"modules/PluginLinkModule.html":{},"modules/PluginListModule.html":{},"modules/PluginMarkerModule.html":{},"modules/PluginParagraphModule.html":{},"modules/PluginSimpleImageModule.html":{}}}],["report",{"_index":1033,"title":{},"body":{"changelog.html":{}}}],["reported",{"_index":1230,"title":{},"body":{"contributing.html":{}}}],["reporter",{"_index":1244,"title":{},"body":{"contributing.html":{}}}],["repository",{"_index":1062,"title":{},"body":{"contributing.html":{},"index.html":{}}}],["represent",{"_index":1091,"title":{},"body":{"contributing.html":{}}}],["representation",{"_index":1223,"title":{},"body":{"contributing.html":{}}}],["representative",{"_index":1219,"title":{},"body":{"contributing.html":{}}}],["representing",{"_index":1209,"title":{},"body":{"contributing.html":{}}}],["request",{"_index":1075,"title":{},"body":{"contributing.html":{}}}],["required",{"_index":279,"title":{},"body":{"interfaces/BasePlugin.html":{},"interfaces/BasePlugin-1.html":{},"modules/NgxEditorjsPluginsModule.html":{},"interfaces/PluginConfig.html":{},"interfaces/PluginConfig-1.html":{},"interfaces/ToolSettingsMap.html":{},"interfaces/ToolSettingsMap-1.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-readme.html":{}}}],["reset",{"_index":167,"title":{},"body":{"modules/AppModule.html":{},"modules/ApplicationDataModule.html":{},"modules/NgxEditorJSModule.html":{},"modules/NgxEditorjsDemoModule.html":{},"modules/NgxEditorjsNgrxModule.html":{},"modules/NgxEditorjsPluginsModule.html":{},"modules/PageStoreModule.html":{},"modules/PluginCodeModule.html":{},"modules/PluginHeaderModule.html":{},"modules/PluginImageModule.html":{},"modules/PluginLinkModule.html":{},"modules/PluginListModule.html":{},"modules/PluginMarkerModule.html":{},"modules/PluginParagraphModule.html":{},"modules/PluginSimpleImageModule.html":{},"overview.html":{}}}],["resolved",{"_index":1052,"title":{},"body":{"changelog.html":{}}}],["respectful",{"_index":1139,"title":{},"body":{"contributing.html":{}}}],["response",{"_index":1187,"title":{},"body":{"contributing.html":{}}}],["responsibilities",{"_index":1178,"title":{},"body":{"contributing.html":{}}}],["responsibility",{"_index":1188,"title":{},"body":{"contributing.html":{}}}],["responsible",{"_index":1179,"title":{},"body":{"contributing.html":{}}}],["restriction",{"_index":1355,"title":{},"body":{"license.html":{}}}],["result",{"_index":147,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"modules/ApplicationDataModule.html":{},"injectables/ApplicationQuery.html":{},"interfaces/ApplicationState.html":{},"injectables/ApplicationStore.html":{},"interfaces/BasePlugin.html":{},"interfaces/BasePlugin-1.html":{},"interfaces/Block.html":{},"interfaces/BlocksMap.html":{},"interfaces/ChangeMap.html":{},"classes/Changed.html":{},"interfaces/EditorJSConfig.html":{},"interfaces/EditorMap.html":{},"components/EditorPageComponent.html":{},"interfaces/Header.html":{},"interfaces/HeaderBlock.html":{},"interfaces/Image.html":{},"interfaces/ImageBlock.html":{},"interfaces/List.html":{},"interfaces/ListBlock.html":{},"modules/MaterialModule.html":{},"interfaces/MenuItem.html":{},"components/NavBarComponent.html":{},"components/NgxEditorJSComponent.html":{},"interfaces/NgxEditorJSConfig.html":{},"directives/NgxEditorJSDirective.html":{},"injectables/NgxEditorJSEffects.html":{},"modules/NgxEditorJSModule.html":{},"injectables/NgxEditorJSPluginService.html":{},"injectables/NgxEditorJSService.html":{},"modules/NgxEditorjsDemoModule.html":{},"modules/NgxEditorjsNgrxModule.html":{},"modules/NgxEditorjsPluginsModule.html":{},"classes/NotReady.html":{},"interfaces/Page.html":{},"interfaces/PageBlock.html":{},"components/PageContainerComponent.html":{},"modules/PageStoreModule.html":{},"injectables/PagesQuery.html":{},"injectables/PagesService.html":{},"interfaces/PagesState.html":{},"injectables/PagesStore.html":{},"interfaces/Paragraph.html":{},"interfaces/ParagraphBlock.html":{},"injectables/PluginCode.html":{},"modules/PluginCodeModule.html":{},"interfaces/PluginConfig.html":{},"interfaces/PluginConfig-1.html":{},"injectables/PluginHeader.html":{},"modules/PluginHeaderModule.html":{},"injectables/PluginImage.html":{},"modules/PluginImageModule.html":{},"injectables/PluginLink.html":{},"modules/PluginLinkModule.html":{},"injectables/PluginList.html":{},"modules/PluginListModule.html":{},"injectables/PluginMarker.html":{},"modules/PluginMarkerModule.html":{},"injectables/PluginParagraph.html":{},"modules/PluginParagraphModule.html":{},"injectables/PluginSimpleImage.html":{},"modules/PluginSimpleImageModule.html":{},"classes/Ready.html":{},"interfaces/ReadyMap.html":{},"classes/SaveEnd.html":{},"classes/SaveStart.html":{},"components/SidebarComponent.html":{},"interfaces/Tag.html":{},"interfaces/ToolSettingsMap.html":{},"interfaces/ToolSettingsMap-1.html":{},"changelog.html":{},"contributing.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"index.html":{},"license.html":{},"modules.html":{},"overview.html":{},"todo.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{},"additional-documentation/tinynodes-library-docs.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-readme.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-readme/ngx-editorjs-changelog.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-plugins-readme.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-plugins-readme/ngx-editorjs-plugins-changelog.html":{}}}],["results",{"_index":149,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"modules/ApplicationDataModule.html":{},"injectables/ApplicationQuery.html":{},"interfaces/ApplicationState.html":{},"injectables/ApplicationStore.html":{},"interfaces/BasePlugin.html":{},"interfaces/BasePlugin-1.html":{},"interfaces/Block.html":{},"interfaces/BlocksMap.html":{},"interfaces/ChangeMap.html":{},"classes/Changed.html":{},"interfaces/EditorJSConfig.html":{},"interfaces/EditorMap.html":{},"components/EditorPageComponent.html":{},"interfaces/Header.html":{},"interfaces/HeaderBlock.html":{},"interfaces/Image.html":{},"interfaces/ImageBlock.html":{},"interfaces/List.html":{},"interfaces/ListBlock.html":{},"modules/MaterialModule.html":{},"interfaces/MenuItem.html":{},"components/NavBarComponent.html":{},"components/NgxEditorJSComponent.html":{},"interfaces/NgxEditorJSConfig.html":{},"directives/NgxEditorJSDirective.html":{},"injectables/NgxEditorJSEffects.html":{},"modules/NgxEditorJSModule.html":{},"injectables/NgxEditorJSPluginService.html":{},"injectables/NgxEditorJSService.html":{},"modules/NgxEditorjsDemoModule.html":{},"modules/NgxEditorjsNgrxModule.html":{},"modules/NgxEditorjsPluginsModule.html":{},"classes/NotReady.html":{},"interfaces/Page.html":{},"interfaces/PageBlock.html":{},"components/PageContainerComponent.html":{},"modules/PageStoreModule.html":{},"injectables/PagesQuery.html":{},"injectables/PagesService.html":{},"interfaces/PagesState.html":{},"injectables/PagesStore.html":{},"interfaces/Paragraph.html":{},"interfaces/ParagraphBlock.html":{},"injectables/PluginCode.html":{},"modules/PluginCodeModule.html":{},"interfaces/PluginConfig.html":{},"interfaces/PluginConfig-1.html":{},"injectables/PluginHeader.html":{},"modules/PluginHeaderModule.html":{},"injectables/PluginImage.html":{},"modules/PluginImageModule.html":{},"injectables/PluginLink.html":{},"modules/PluginLinkModule.html":{},"injectables/PluginList.html":{},"modules/PluginListModule.html":{},"injectables/PluginMarker.html":{},"modules/PluginMarkerModule.html":{},"injectables/PluginParagraph.html":{},"modules/PluginParagraphModule.html":{},"injectables/PluginSimpleImage.html":{},"modules/PluginSimpleImageModule.html":{},"classes/Ready.html":{},"interfaces/ReadyMap.html":{},"classes/SaveEnd.html":{},"classes/SaveStart.html":{},"components/SidebarComponent.html":{},"interfaces/Tag.html":{},"interfaces/ToolSettingsMap.html":{},"interfaces/ToolSettingsMap-1.html":{},"changelog.html":{},"contributing.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"index.html":{},"license.html":{},"modules.html":{},"overview.html":{},"todo.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{},"additional-documentation/tinynodes-library-docs.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-readme.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-readme/ngx-editorjs-changelog.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-plugins-readme.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-plugins-readme/ngx-editorjs-plugins-changelog.html":{}}}],["return",{"_index":241,"title":{},"body":{"injectables/AppService.html":{},"interfaces/BasePlugin.html":{},"interfaces/BasePlugin-1.html":{},"components/EditorPageComponent.html":{},"directives/NgxEditorJSDirective.html":{},"injectables/NgxEditorJSEffects.html":{},"modules/NgxEditorJSModule.html":{},"injectables/NgxEditorJSPluginService.html":{},"injectables/NgxEditorJSService.html":{},"components/PageContainerComponent.html":{},"injectables/PagesService.html":{},"injectables/PluginCode.html":{},"interfaces/PluginConfig.html":{},"interfaces/PluginConfig-1.html":{},"injectables/PluginHeader.html":{},"injectables/PluginImage.html":{},"injectables/PluginLink.html":{},"injectables/PluginList.html":{},"injectables/PluginMarker.html":{},"injectables/PluginParagraph.html":{},"injectables/PluginSimpleImage.html":{},"interfaces/ToolSettingsMap.html":{},"interfaces/ToolSettingsMap-1.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-readme.html":{}}}],["returned",{"_index":285,"title":{},"body":{"interfaces/BasePlugin.html":{},"interfaces/BasePlugin-1.html":{},"injectables/NgxEditorJSService.html":{},"interfaces/PluginConfig.html":{},"interfaces/PluginConfig-1.html":{},"interfaces/ToolSettingsMap.html":{},"interfaces/ToolSettingsMap-1.html":{}}}],["returns",{"_index":234,"title":{},"body":{"injectables/AppService.html":{},"injectables/ApplicationStore.html":{},"components/EditorPageComponent.html":{},"components/NavBarComponent.html":{},"directives/NgxEditorJSDirective.html":{},"modules/NgxEditorJSModule.html":{},"injectables/NgxEditorJSPluginService.html":{},"injectables/NgxEditorJSService.html":{},"injectables/PagesService.html":{},"injectables/PluginCode.html":{},"injectables/PluginHeader.html":{},"injectables/PluginImage.html":{},"injectables/PluginLink.html":{},"injectables/PluginList.html":{},"injectables/PluginMarker.html":{},"injectables/PluginParagraph.html":{},"injectables/PluginSimpleImage.html":{},"miscellaneous/functions.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-readme.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-readme/ngx-editorjs-changelog.html":{}}}],["reviewed",{"_index":1235,"title":{},"body":{"contributing.html":{}}}],["reviewer",{"_index":1102,"title":{},"body":{"contributing.html":{}}}],["right",{"_index":116,"title":{},"body":{"components/AppComponent.html":{},"components/NavBarComponent.html":{},"contributing.html":{}}}],["rights",{"_index":1357,"title":{},"body":{"license.html":{}}}],["root",{"_index":17,"title":{},"body":{"components/AppComponent.html":{},"modules/NgxEditorJSModule.html":{},"injectables/NgxEditorJSPluginService.html":{},"injectables/NgxEditorJSService.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-readme/ngx-editorjs-changelog.html":{}}}],["root'},{'name",{"_index":132,"title":{},"body":{"components/AppComponent.html":{},"components/EditorPageComponent.html":{},"components/NavBarComponent.html":{},"components/NgxEditorJSComponent.html":{},"components/PageContainerComponent.html":{},"components/SidebarComponent.html":{}}}],["route",{"_index":1433,"title":{},"body":{"miscellaneous/variables.html":{}}}],["router",{"_index":193,"title":{},"body":{"modules/AppModule.html":{},"dependencies.html":{}}}],["routerlink",{"_index":263,"title":{},"body":{"interfaces/ApplicationState.html":{},"interfaces/MenuItem.html":{}}}],["routermodule",{"_index":188,"title":{},"body":{"modules/AppModule.html":{},"modules/NgxEditorjsDemoModule.html":{}}}],["routermodule.forchild(ngxeditorjsdemoroutes",{"_index":815,"title":{},"body":{"modules/NgxEditorjsDemoModule.html":{}}}],["routermodule.forroot",{"_index":214,"title":{},"body":{"modules/AppModule.html":{}}}],["routes",{"_index":1437,"title":{},"body":{"miscellaneous/variables.html":{}}}],["run",{"_index":1337,"title":{},"body":{"index.html":{}}}],["rxjs",{"_index":64,"title":{},"body":{"components/AppComponent.html":{},"injectables/AppService.html":{},"interfaces/BlocksMap.html":{},"interfaces/ChangeMap.html":{},"interfaces/EditorMap.html":{},"components/EditorPageComponent.html":{},"injectables/NgxEditorJSEffects.html":{},"injectables/NgxEditorJSService.html":{},"components/PageContainerComponent.html":{},"injectables/PagesService.html":{},"interfaces/ReadyMap.html":{},"components/SidebarComponent.html":{},"dependencies.html":{}}}],["rxjs/operators",{"_index":67,"title":{},"body":{"components/AppComponent.html":{},"components/EditorPageComponent.html":{},"injectables/NgxEditorJSEffects.html":{},"components/SidebarComponent.html":{}}}],["sanitizer",{"_index":402,"title":{},"body":{"interfaces/EditorJSConfig.html":{},"interfaces/NgxEditorJSConfig.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-readme.html":{}}}],["sanitizerconfig",{"_index":421,"title":{},"body":{"interfaces/EditorJSConfig.html":{},"interfaces/NgxEditorJSConfig.html":{}}}],["save",{"_index":383,"title":{},"body":{"classes/Changed.html":{},"injectables/NgxEditorJSEffects.html":{},"injectables/NgxEditorJSService.html":{},"classes/NotReady.html":{},"injectables/PagesService.html":{},"classes/Ready.html":{},"classes/SaveEnd.html":{},"classes/SaveStart.html":{},"miscellaneous/enumerations.html":{},"todo.html":{}}}],["save(holder",{"_index":744,"title":{},"body":{"injectables/NgxEditorJSService.html":{}}}],["saveend",{"_index":384,"title":{"classes/SaveEnd.html":{}},"body":{"classes/Changed.html":{},"injectables/NgxEditorJSEffects.html":{},"classes/NotReady.html":{},"classes/Ready.html":{},"classes/SaveEnd.html":{},"classes/SaveStart.html":{},"coverage.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/typealiases.html":{}}}],["savestart",{"_index":381,"title":{"classes/SaveStart.html":{}},"body":{"classes/Changed.html":{},"injectables/NgxEditorJSEffects.html":{},"classes/NotReady.html":{},"classes/Ready.html":{},"classes/SaveEnd.html":{},"classes/SaveStart.html":{},"coverage.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/typealiases.html":{}}}],["scheme",{"_index":1093,"title":{},"body":{"contributing.html":{}}}],["scope",{"_index":1205,"title":{},"body":{"contributing.html":{}}}],["scripts",{"_index":1049,"title":{},"body":{"changelog.html":{}}}],["searchable",{"_index":1330,"title":{},"body":{"index.html":{}}}],["second",{"_index":1101,"title":{},"body":{"contributing.html":{}}}],["see",{"_index":734,"title":{},"body":{"injectables/NgxEditorJSService.html":{},"modules/PluginCodeModule.html":{},"modules/PluginHeaderModule.html":{},"modules/PluginImageModule.html":{},"modules/PluginLinkModule.html":{},"modules/PluginListModule.html":{},"modules/PluginMarkerModule.html":{},"modules/PluginParagraphModule.html":{},"modules/PluginSimpleImageModule.html":{},"index.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-readme.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-plugins-readme/ngx-editorjs-plugins-changelog.html":{}}}],["selection",{"_index":1418,"title":{},"body":{"todo.html":{}}}],["selector",{"_index":23,"title":{},"body":{"components/AppComponent.html":{},"components/EditorPageComponent.html":{},"components/NavBarComponent.html":{},"components/NgxEditorJSComponent.html":{},"directives/NgxEditorJSDirective.html":{},"components/PageContainerComponent.html":{},"components/SidebarComponent.html":{}}}],["sell",{"_index":1363,"title":{},"body":{"license.html":{}}}],["semantic",{"_index":1492,"title":{},"body":{"additional-documentation/tinynodes-library-docs/ngx-editorjs-readme/ngx-editorjs-changelog.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-plugins-readme/ngx-editorjs-plugins-changelog.html":{}}}],["semver",{"_index":1094,"title":{},"body":{"contributing.html":{}}}],["separately",{"_index":1249,"title":{},"body":{"contributing.html":{}}}],["service",{"_index":504,"title":{},"body":{"components/NgxEditorJSComponent.html":{},"directives/NgxEditorJSDirective.html":{},"injectables/NgxEditorJSPluginService.html":{},"injectables/NgxEditorJSService.html":{},"injectables/PagesService.html":{},"index.html":{},"todo.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-readme.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-readme/ngx-editorjs-changelog.html":{}}}],["services",{"_index":529,"title":{},"body":{"directives/NgxEditorJSDirective.html":{}}}],["services/editorjs.service",{"_index":515,"title":{},"body":{"components/NgxEditorJSComponent.html":{},"directives/NgxEditorJSDirective.html":{},"modules/NgxEditorJSModule.html":{}}}],["services/plugins.service",{"_index":608,"title":{},"body":{"modules/NgxEditorJSModule.html":{}}}],["set",{"_index":418,"title":{},"body":{"interfaces/EditorJSConfig.html":{},"components/NgxEditorJSComponent.html":{},"interfaces/NgxEditorJSConfig.html":{},"injectables/NgxEditorJSService.html":{},"index.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-readme.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-readme/ngx-editorjs-changelog.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-plugins-readme.html":{}}}],["setblocks",{"_index":882,"title":{},"body":{"injectables/PagesService.html":{}}}],["setblocks(pageid",{"_index":896,"title":{},"body":{"injectables/PagesService.html":{}}}],["sets",{"_index":599,"title":{},"body":{"modules/NgxEditorJSModule.html":{},"injectables/NgxEditorJSService.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-readme.html":{}}}],["setting",{"_index":1177,"title":{},"body":{"contributing.html":{},"todo.html":{}}}],["settings",{"_index":284,"title":{},"body":{"interfaces/BasePlugin.html":{},"interfaces/BasePlugin-1.html":{},"injectables/NgxEditorJSService.html":{},"injectables/PluginCode.html":{},"interfaces/PluginConfig.html":{},"interfaces/PluginConfig-1.html":{},"injectables/PluginHeader.html":{},"injectables/PluginImage.html":{},"injectables/PluginLink.html":{},"injectables/PluginList.html":{},"injectables/PluginMarker.html":{},"injectables/PluginParagraph.html":{},"injectables/PluginSimpleImage.html":{},"interfaces/ToolSettingsMap.html":{},"interfaces/ToolSettingsMap-1.html":{}}}],["several",{"_index":690,"title":{},"body":{"injectables/NgxEditorJSService.html":{},"modules/NgxEditorjsPluginsModule.html":{},"changelog.html":{}}}],["sexual",{"_index":1130,"title":{},"body":{"contributing.html":{}}}],["sexualized",{"_index":1155,"title":{},"body":{"contributing.html":{}}}],["shall",{"_index":1372,"title":{},"body":{"license.html":{}}}],["shift+ctrl+m",{"_index":1468,"title":{},"body":{"additional-documentation/tinynodes-library-docs/ngx-editorjs-readme.html":{}}}],["shortcut",{"_index":282,"title":{},"body":{"interfaces/BasePlugin.html":{},"interfaces/BasePlugin-1.html":{},"components/NgxEditorJSComponent.html":{},"injectables/NgxEditorJSPluginService.html":{},"interfaces/PluginConfig.html":{},"interfaces/PluginConfig-1.html":{},"injectables/PluginMarker.html":{},"interfaces/ToolSettingsMap.html":{},"interfaces/ToolSettingsMap-1.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-readme.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-readme/ngx-editorjs-changelog.html":{}}}],["showing",{"_index":1149,"title":{},"body":{"contributing.html":{}}}],["shown",{"_index":410,"title":{},"body":{"interfaces/EditorJSConfig.html":{},"interfaces/NgxEditorJSConfig.html":{}}}],["shows",{"_index":1453,"title":{},"body":{"additional-documentation/tinynodes-library-docs/ngx-editorjs-readme.html":{}}}],["sidebar",{"_index":57,"title":{},"body":{"components/AppComponent.html":{},"components/EditorPageComponent.html":{},"components/NavBarComponent.html":{},"components/NgxEditorJSComponent.html":{},"components/PageContainerComponent.html":{},"components/SidebarComponent.html":{}}}],["sidebar.component.html",{"_index":1013,"title":{},"body":{"components/SidebarComponent.html":{}}}],["sidebar.component.scss",{"_index":1012,"title":{},"body":{"components/SidebarComponent.html":{}}}],["sidebarcomponent",{"_index":142,"title":{"components/SidebarComponent.html":{}},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"components/EditorPageComponent.html":{},"components/NavBarComponent.html":{},"components/NgxEditorJSComponent.html":{},"components/PageContainerComponent.html":{},"components/SidebarComponent.html":{},"coverage.html":{},"overview.html":{}}}],["sidenav",{"_index":31,"title":{},"body":{"components/AppComponent.html":{},"components/SidebarComponent.html":{}}}],["sign",{"_index":1097,"title":{},"body":{"contributing.html":{}}}],["simple",{"_index":996,"title":{},"body":{"injectables/PluginSimpleImage.html":{},"modules/PluginSimpleImageModule.html":{}}}],["simplechanges",{"_index":544,"title":{},"body":{"directives/NgxEditorJSDirective.html":{}}}],["simpleimage",{"_index":998,"title":{},"body":{"injectables/PluginSimpleImage.html":{}}}],["single",{"_index":172,"title":{},"body":{"modules/AppModule.html":{},"injectables/NgxEditorJSPluginService.html":{}}}],["singleton",{"_index":644,"title":{},"body":{"injectables/NgxEditorJSPluginService.html":{}}}],["site",{"_index":1023,"title":{},"body":{"changelog.html":{},"index.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-readme/ngx-editorjs-changelog.html":{}}}],["size",{"_index":1119,"title":{},"body":{"contributing.html":{}}}],["skipself",{"_index":605,"title":{},"body":{"modules/NgxEditorJSModule.html":{}}}],["small",{"_index":1058,"title":{},"body":{"changelog.html":{}}}],["social",{"_index":1214,"title":{},"body":{"contributing.html":{}}}],["software",{"_index":1352,"title":{},"body":{"license.html":{}}}],["solid",{"_index":519,"title":{},"body":{"components/NgxEditorJSComponent.html":{}}}],["source",{"_index":4,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"modules/ApplicationDataModule.html":{},"injectables/ApplicationQuery.html":{},"interfaces/ApplicationState.html":{},"injectables/ApplicationStore.html":{},"interfaces/BasePlugin.html":{},"interfaces/BasePlugin-1.html":{},"interfaces/Block.html":{},"interfaces/BlocksMap.html":{},"interfaces/ChangeMap.html":{},"classes/Changed.html":{},"interfaces/EditorJSConfig.html":{},"interfaces/EditorMap.html":{},"components/EditorPageComponent.html":{},"interfaces/Header.html":{},"interfaces/HeaderBlock.html":{},"interfaces/Image.html":{},"interfaces/ImageBlock.html":{},"interfaces/List.html":{},"interfaces/ListBlock.html":{},"modules/MaterialModule.html":{},"interfaces/MenuItem.html":{},"components/NavBarComponent.html":{},"components/NgxEditorJSComponent.html":{},"interfaces/NgxEditorJSConfig.html":{},"directives/NgxEditorJSDirective.html":{},"injectables/NgxEditorJSEffects.html":{},"modules/NgxEditorJSModule.html":{},"injectables/NgxEditorJSPluginService.html":{},"injectables/NgxEditorJSService.html":{},"modules/NgxEditorjsDemoModule.html":{},"modules/NgxEditorjsNgrxModule.html":{},"modules/NgxEditorjsPluginsModule.html":{},"classes/NotReady.html":{},"interfaces/Page.html":{},"interfaces/PageBlock.html":{},"components/PageContainerComponent.html":{},"modules/PageStoreModule.html":{},"injectables/PagesQuery.html":{},"injectables/PagesService.html":{},"interfaces/PagesState.html":{},"injectables/PagesStore.html":{},"interfaces/Paragraph.html":{},"interfaces/ParagraphBlock.html":{},"injectables/PluginCode.html":{},"modules/PluginCodeModule.html":{},"interfaces/PluginConfig.html":{},"interfaces/PluginConfig-1.html":{},"injectables/PluginHeader.html":{},"modules/PluginHeaderModule.html":{},"injectables/PluginImage.html":{},"modules/PluginImageModule.html":{},"injectables/PluginLink.html":{},"modules/PluginLinkModule.html":{},"injectables/PluginList.html":{},"modules/PluginListModule.html":{},"injectables/PluginMarker.html":{},"modules/PluginMarkerModule.html":{},"injectables/PluginParagraph.html":{},"modules/PluginParagraphModule.html":{},"injectables/PluginSimpleImage.html":{},"modules/PluginSimpleImageModule.html":{},"classes/Ready.html":{},"interfaces/ReadyMap.html":{},"classes/SaveEnd.html":{},"classes/SaveStart.html":{},"components/SidebarComponent.html":{},"interfaces/Tag.html":{},"interfaces/ToolSettingsMap.html":{},"interfaces/ToolSettingsMap-1.html":{}}}],["spaces",{"_index":1208,"title":{},"body":{"contributing.html":{}}}],["specific",{"_index":1246,"title":{},"body":{"contributing.html":{}}}],["standards",{"_index":1132,"title":{},"body":{"contributing.html":{}}}],["start",{"_index":382,"title":{},"body":{"classes/Changed.html":{},"classes/NotReady.html":{},"classes/Ready.html":{},"classes/SaveEnd.html":{},"classes/SaveStart.html":{},"miscellaneous/enumerations.html":{}}}],["started",{"_index":1019,"title":{"changelog.html":{},"contributing.html":{},"index.html":{},"license.html":{},"todo.html":{}},"body":{}}],["state",{"_index":359,"title":{},"body":{"interfaces/BlocksMap.html":{},"interfaces/ChangeMap.html":{},"interfaces/EditorMap.html":{},"injectables/NgxEditorJSService.html":{},"interfaces/ReadyMap.html":{}}}],["statements",{"_index":1268,"title":{},"body":{"coverage.html":{}}}],["states",{"_index":693,"title":{},"body":{"injectables/NgxEditorJSService.html":{}}}],["static",{"_index":595,"title":{},"body":{"modules/NgxEditorJSModule.html":{}}}],["store",{"_index":194,"title":{},"body":{"modules/AppModule.html":{},"injectables/AppService.html":{},"injectables/ApplicationQuery.html":{},"injectables/ApplicationStore.html":{},"injectables/NgxEditorJSPluginService.html":{},"injectables/PagesQuery.html":{},"injectables/PagesService.html":{},"dependencies.html":{},"todo.html":{}}}],["store/app/application.module",{"_index":211,"title":{},"body":{"modules/AppModule.html":{}}}],["store/app/application.service",{"_index":65,"title":{},"body":{"components/AppComponent.html":{},"components/NavBarComponent.html":{},"components/SidebarComponent.html":{}}}],["store/pages/pages.models",{"_index":861,"title":{},"body":{"components/PageContainerComponent.html":{}}}],["store/pages/pages.module",{"_index":814,"title":{},"body":{"modules/NgxEditorjsDemoModule.html":{}}}],["store/pages/pages.service",{"_index":862,"title":{},"body":{"components/PageContainerComponent.html":{}}}],["storeconfig",{"_index":270,"title":{},"body":{"injectables/ApplicationStore.html":{},"interfaces/PagesState.html":{},"injectables/PagesStore.html":{}}}],["stored",{"_index":653,"title":{},"body":{"injectables/NgxEditorJSPluginService.html":{}}}],["stores",{"_index":1509,"title":{},"body":{"additional-documentation/tinynodes-library-docs/ngx-editorjs-readme/ngx-editorjs-changelog.html":{}}}],["stretch",{"_index":343,"title":{},"body":{"interfaces/Block.html":{},"interfaces/Header.html":{},"interfaces/HeaderBlock.html":{},"interfaces/Image.html":{},"interfaces/ImageBlock.html":{},"interfaces/List.html":{},"interfaces/ListBlock.html":{},"interfaces/Paragraph.html":{},"interfaces/ParagraphBlock.html":{}}}],["stretched",{"_index":344,"title":{},"body":{"interfaces/Block.html":{},"interfaces/Header.html":{},"interfaces/HeaderBlock.html":{},"interfaces/Image.html":{},"interfaces/ImageBlock.html":{},"interfaces/List.html":{},"interfaces/ListBlock.html":{},"interfaces/Paragraph.html":{},"interfaces/ParagraphBlock.html":{}}}],["string",{"_index":264,"title":{},"body":{"interfaces/ApplicationState.html":{},"interfaces/BasePlugin.html":{},"interfaces/BasePlugin-1.html":{},"interfaces/Block.html":{},"interfaces/BlocksMap.html":{},"interfaces/ChangeMap.html":{},"classes/Changed.html":{},"interfaces/EditorJSConfig.html":{},"interfaces/EditorMap.html":{},"interfaces/Header.html":{},"interfaces/HeaderBlock.html":{},"interfaces/Image.html":{},"interfaces/ImageBlock.html":{},"interfaces/List.html":{},"interfaces/ListBlock.html":{},"interfaces/MenuItem.html":{},"components/NgxEditorJSComponent.html":{},"interfaces/NgxEditorJSConfig.html":{},"injectables/NgxEditorJSPluginService.html":{},"injectables/NgxEditorJSService.html":{},"classes/NotReady.html":{},"interfaces/Page.html":{},"interfaces/PageBlock.html":{},"interfaces/Paragraph.html":{},"interfaces/ParagraphBlock.html":{},"interfaces/PluginConfig.html":{},"interfaces/PluginConfig-1.html":{},"injectables/PluginMarker.html":{},"classes/Ready.html":{},"interfaces/ReadyMap.html":{},"classes/SaveEnd.html":{},"classes/SaveStart.html":{},"interfaces/Tag.html":{},"interfaces/ToolSettingsMap.html":{},"interfaces/ToolSettingsMap-1.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-readme.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-readme/ngx-editorjs-changelog.html":{}}}],["style",{"_index":104,"title":{},"body":{"components/AppComponent.html":{},"interfaces/Block.html":{},"interfaces/Header.html":{},"interfaces/HeaderBlock.html":{},"interfaces/Image.html":{},"interfaces/ImageBlock.html":{},"interfaces/List.html":{},"interfaces/ListBlock.html":{},"components/NavBarComponent.html":{},"interfaces/Paragraph.html":{},"interfaces/ParagraphBlock.html":{}}}],["styles",{"_index":6,"title":{},"body":{"components/AppComponent.html":{},"interfaces/Block.html":{},"components/EditorPageComponent.html":{},"interfaces/Header.html":{},"interfaces/HeaderBlock.html":{},"interfaces/Image.html":{},"interfaces/ImageBlock.html":{},"interfaces/List.html":{},"interfaces/ListBlock.html":{},"components/NavBarComponent.html":{},"components/NgxEditorJSComponent.html":{},"components/PageContainerComponent.html":{},"interfaces/Paragraph.html":{},"interfaces/ParagraphBlock.html":{},"components/SidebarComponent.html":{},"miscellaneous/typealiases.html":{}}}],["styleurls",{"_index":25,"title":{},"body":{"components/AppComponent.html":{},"components/EditorPageComponent.html":{},"components/NavBarComponent.html":{},"components/NgxEditorJSComponent.html":{},"components/PageContainerComponent.html":{},"components/SidebarComponent.html":{}}}],["subject",{"_index":63,"title":{},"body":{"components/AppComponent.html":{},"components/SidebarComponent.html":{},"license.html":{}}}],["sublicense",{"_index":1361,"title":{},"body":{"license.html":{}}}],["subscribed",{"_index":740,"title":{},"body":{"injectables/NgxEditorJSService.html":{}}}],["substantial",{"_index":1374,"title":{},"body":{"license.html":{}}}],["such",{"_index":1168,"title":{},"body":{"contributing.html":{}}}],["sunday",{"_index":1029,"title":{},"body":{"changelog.html":{}}}],["super",{"_index":271,"title":{},"body":{"injectables/ApplicationStore.html":{},"interfaces/PagesState.html":{},"injectables/PagesStore.html":{}}}],["super(store",{"_index":256,"title":{},"body":{"injectables/ApplicationQuery.html":{},"injectables/PagesQuery.html":{}}}],["support",{"_index":1399,"title":{},"body":{"modules.html":{},"todo.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-readme.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-readme/ngx-editorjs-changelog.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-plugins-readme.html":{}}}],["supports",{"_index":320,"title":{},"body":{"interfaces/Block.html":{},"interfaces/Header.html":{},"interfaces/HeaderBlock.html":{},"interfaces/Image.html":{},"interfaces/ImageBlock.html":{},"interfaces/List.html":{},"interfaces/ListBlock.html":{},"interfaces/Paragraph.html":{},"interfaces/ParagraphBlock.html":{},"miscellaneous/typealiases.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-readme/ngx-editorjs-changelog.html":{}}}],["svg",{"_index":1400,"title":{},"body":{"modules.html":{}}}],["switchmap",{"_index":452,"title":{},"body":{"components/EditorPageComponent.html":{},"injectables/NgxEditorJSEffects.html":{}}}],["switchmap(([form",{"_index":465,"title":{},"body":{"components/EditorPageComponent.html":{}}}],["t",{"_index":318,"title":{},"body":{"interfaces/Block.html":{},"interfaces/Header.html":{},"interfaces/HeaderBlock.html":{},"interfaces/Image.html":{},"interfaces/ImageBlock.html":{},"interfaces/List.html":{},"interfaces/ListBlock.html":{},"interfaces/Paragraph.html":{},"interfaces/ParagraphBlock.html":{}}}],["table",{"_index":1297,"title":{},"body":{"coverage.html":{}}}],["tablesort(document.getelementbyid('coverage",{"_index":1296,"title":{},"body":{"coverage.html":{}}}],["tag",{"_index":851,"title":{"interfaces/Tag.html":{}},"body":{"interfaces/Page.html":{},"interfaces/PageBlock.html":{},"interfaces/Tag.html":{},"coverage.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-readme.html":{}}}],["tags",{"_index":1413,"title":{},"body":{"todo.html":{}}}],["take",{"_index":1183,"title":{},"body":{"contributing.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-readme.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-readme/ngx-editorjs-changelog.html":{}}}],["takes",{"_index":594,"title":{},"body":{"modules/NgxEditorJSModule.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-readme.html":{}}}],["takeuntil",{"_index":66,"title":{},"body":{"components/AppComponent.html":{},"components/SidebarComponent.html":{}}}],["tane",{"_index":1338,"title":{},"body":{"index.html":{},"license.html":{}}}],["tap",{"_index":453,"title":{},"body":{"components/EditorPageComponent.html":{},"injectables/NgxEditorJSEffects.html":{}}}],["team",{"_index":1232,"title":{},"body":{"contributing.html":{}}}],["template",{"_index":5,"title":{},"body":{"components/AppComponent.html":{},"components/EditorPageComponent.html":{},"components/NavBarComponent.html":{},"components/NgxEditorJSComponent.html":{},"components/PageContainerComponent.html":{},"components/SidebarComponent.html":{}}}],["templateurl",{"_index":27,"title":{},"body":{"components/AppComponent.html":{},"components/EditorPageComponent.html":{},"components/NavBarComponent.html":{},"components/NgxEditorJSComponent.html":{},"components/PageContainerComponent.html":{},"components/SidebarComponent.html":{}}}],["temporarily",{"_index":1197,"title":{},"body":{"contributing.html":{}}}],["temporary",{"_index":1253,"title":{},"body":{"contributing.html":{}}}],["text",{"_index":93,"title":{},"body":{"components/AppComponent.html":{},"interfaces/Block.html":{},"interfaces/Header.html":{},"interfaces/HeaderBlock.html":{},"interfaces/Image.html":{},"interfaces/ImageBlock.html":{},"interfaces/List.html":{},"interfaces/ListBlock.html":{},"components/NavBarComponent.html":{},"components/NgxEditorJSComponent.html":{},"interfaces/Paragraph.html":{},"interfaces/ParagraphBlock.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-plugins-readme.html":{}}}],["this._value().hidden",{"_index":274,"title":{},"body":{"injectables/ApplicationStore.html":{}}}],["this.actions$.pipe",{"_index":562,"title":{},"body":{"injectables/NgxEditorJSEffects.html":{}}}],["this.add(key",{"_index":677,"title":{},"body":{"injectables/NgxEditorJSPluginService.html":{}}}],["this.app.hidden.pipe(takeuntil(this.ondestroy$)).subscribe(value",{"_index":78,"title":{},"body":{"components/AppComponent.html":{},"components/SidebarComponent.html":{}}}],["this.app.togglesidebar",{"_index":490,"title":{},"body":{"components/NavBarComponent.html":{}}}],["this.blocks",{"_index":554,"title":{},"body":{"directives/NgxEditorJSDirective.html":{}}}],["this.blocksmap[holder",{"_index":772,"title":{},"body":{"injectables/NgxEditorJSService.html":{}}}],["this.blocksmap[holder].asobservable",{"_index":773,"title":{},"body":{"injectables/NgxEditorJSService.html":{}}}],["this.blocksmap[holder].next(outputdata.blocks",{"_index":782,"title":{},"body":{"injectables/NgxEditorJSService.html":{}}}],["this.changemap[holder",{"_index":758,"title":{},"body":{"injectables/NgxEditorJSService.html":{}}}],["this.changemap[holder].asobservable",{"_index":775,"title":{},"body":{"injectables/NgxEditorJSService.html":{}}}],["this.changemap[holder].next(0",{"_index":759,"title":{},"body":{"injectables/NgxEditorJSService.html":{}}}],["this.changemap[holder].next(date.now",{"_index":768,"title":{},"body":{"injectables/NgxEditorJSService.html":{}}}],["this.changemap[holder].next(outputdata.time",{"_index":783,"title":{},"body":{"injectables/NgxEditorJSService.html":{}}}],["this.config.editorjs",{"_index":762,"title":{},"body":{"injectables/NgxEditorJSService.html":{}}}],["this.createeditor(holder",{"_index":771,"title":{},"body":{"injectables/NgxEditorJSService.html":{}}}],["this.destroy(holder",{"_index":754,"title":{},"body":{"injectables/NgxEditorJSService.html":{}}}],["this.editor.blocks",{"_index":463,"title":{},"body":{"components/EditorPageComponent.html":{}}}],["this.editormap[holder",{"_index":753,"title":{},"body":{"injectables/NgxEditorJSService.html":{}}}],["this.editormap[holder].blocks.clear",{"_index":777,"title":{},"body":{"injectables/NgxEditorJSService.html":{}}}],["this.editormap[holder].blocks.render",{"_index":778,"title":{},"body":{"injectables/NgxEditorJSService.html":{}}}],["this.editormap[holder].destroy",{"_index":788,"title":{},"body":{"injectables/NgxEditorJSService.html":{}}}],["this.editormap[holder].saver.save",{"_index":781,"title":{},"body":{"injectables/NgxEditorJSService.html":{}}}],["this.editorservice",{"_index":546,"title":{},"body":{"directives/NgxEditorJSDirective.html":{}}}],["this.editorservice.createeditor(this.el.nativeelement.id",{"_index":553,"title":{},"body":{"directives/NgxEditorJSDirective.html":{}}}],["this.editorservice.destroy(this.el.nativeelement.id",{"_index":555,"title":{},"body":{"directives/NgxEditorJSDirective.html":{}}}],["this.editorservice.getblocks(action.payload.holder",{"_index":567,"title":{},"body":{"injectables/NgxEditorJSEffects.html":{}}}],["this.editorservice.geteditor(this.el.nativeelement.id",{"_index":545,"title":{},"body":{"directives/NgxEditorJSDirective.html":{}}}],["this.editorservice.save(action.payload.holder",{"_index":565,"title":{},"body":{"injectables/NgxEditorJSEffects.html":{}}}],["this.editorservice.update(this.el.nativeelement.id",{"_index":550,"title":{},"body":{"directives/NgxEditorJSDirective.html":{}}}],["this.fb.array",{"_index":457,"title":{},"body":{"components/EditorPageComponent.html":{}}}],["this.fb.group",{"_index":454,"title":{},"body":{"components/EditorPageComponent.html":{}}}],["this.form",{"_index":459,"title":{},"body":{"components/EditorPageComponent.html":{}}}],["this.ondestroy$.complete",{"_index":83,"title":{},"body":{"components/AppComponent.html":{},"components/SidebarComponent.html":{}}}],["this.ondestroy$.next(true",{"_index":82,"title":{},"body":{"components/AppComponent.html":{},"components/SidebarComponent.html":{}}}],["this.pagedata",{"_index":461,"title":{},"body":{"components/EditorPageComponent.html":{}}}],["this.pagedata$.pipe",{"_index":464,"title":{},"body":{"components/EditorPageComponent.html":{}}}],["this.pages",{"_index":906,"title":{},"body":{"injectables/PagesService.html":{}}}],["this.pagesservice.pages",{"_index":863,"title":{},"body":{"components/PageContainerComponent.html":{}}}],["this.plugins.gettools(excludetools",{"_index":763,"title":{},"body":{"injectables/NgxEditorJSService.html":{}}}],["this.pluginsmap",{"_index":681,"title":{},"body":{"injectables/NgxEditorJSPluginService.html":{}}}],["this.pluginsmap[key",{"_index":678,"title":{},"body":{"injectables/NgxEditorJSPluginService.html":{}}}],["this.query.select('hidden",{"_index":242,"title":{},"body":{"injectables/AppService.html":{}}}],["this.query.selectall",{"_index":907,"title":{},"body":{"injectables/PagesService.html":{}}}],["this.readymap[holder",{"_index":755,"title":{},"body":{"injectables/NgxEditorJSService.html":{}}}],["this.readymap[holder].asobservable",{"_index":774,"title":{},"body":{"injectables/NgxEditorJSService.html":{}}}],["this.readymap[holder].next(false",{"_index":756,"title":{},"body":{"injectables/NgxEditorJSService.html":{}}}],["this.readymap[holder].next(true",{"_index":766,"title":{},"body":{"injectables/NgxEditorJSService.html":{}}}],["this.save(holder",{"_index":769,"title":{},"body":{"injectables/NgxEditorJSService.html":{}}}],["this.sidenav.close",{"_index":79,"title":{},"body":{"components/AppComponent.html":{},"components/SidebarComponent.html":{}}}],["this.sidenav.open",{"_index":80,"title":{},"body":{"components/AppComponent.html":{},"components/SidebarComponent.html":{}}}],["this.store._value().hidden",{"_index":244,"title":{},"body":{"injectables/AppService.html":{}}}],["this.store.add(newpage",{"_index":909,"title":{},"body":{"injectables/PagesService.html":{}}}],["this.store.remove(pageid",{"_index":912,"title":{},"body":{"injectables/PagesService.html":{}}}],["this.store.update",{"_index":243,"title":{},"body":{"injectables/AppService.html":{}}}],["this.store.update(pageid",{"_index":913,"title":{},"body":{"injectables/PagesService.html":{}}}],["this.store.upsert(page.id",{"_index":911,"title":{},"body":{"injectables/PagesService.html":{}}}],["this.update",{"_index":273,"title":{},"body":{"injectables/ApplicationStore.html":{}}}],["this.zone.run",{"_index":761,"title":{},"body":{"injectables/NgxEditorJSService.html":{}}}],["this.zone.run(async",{"_index":779,"title":{},"body":{"injectables/NgxEditorJSService.html":{}}}],["this[mapkay][holder",{"_index":785,"title":{},"body":{"injectables/NgxEditorJSService.html":{}}}],["this[mapkay][holder].complete",{"_index":787,"title":{},"body":{"injectables/NgxEditorJSService.html":{}}}],["this[mapkay][holder].next(value",{"_index":786,"title":{},"body":{"injectables/NgxEditorJSService.html":{}}}],["threatening",{"_index":1202,"title":{},"body":{"contributing.html":{}}}],["throw",{"_index":729,"title":{},"body":{"injectables/NgxEditorJSService.html":{}}}],["time",{"_index":571,"title":{},"body":{"injectables/NgxEditorJSEffects.html":{},"injectables/NgxEditorJSService.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-readme.html":{}}}],["timestamp",{"_index":361,"title":{},"body":{"interfaces/BlocksMap.html":{},"interfaces/ChangeMap.html":{},"interfaces/EditorMap.html":{},"injectables/NgxEditorJSService.html":{},"interfaces/ReadyMap.html":{}}}],["tinynode",{"_index":1331,"title":{},"body":{"index.html":{}}}],["tinynodes",{"_index":24,"title":{"additional-documentation/tinynodes-library-docs.html":{}},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"components/EditorPageComponent.html":{},"components/NavBarComponent.html":{},"components/NgxEditorJSComponent.html":{},"components/PageContainerComponent.html":{},"components/SidebarComponent.html":{},"changelog.html":{},"coverage.html":{},"miscellaneous/functions.html":{},"index.html":{},"license.html":{},"todo.html":{},"miscellaneous/variables.html":{},"additional-documentation/tinynodes-library-docs.html":{}}}],["tinynodes/ngx",{"_index":197,"title":{},"body":{"modules/AppModule.html":{},"components/EditorPageComponent.html":{},"injectables/NgxEditorJSEffects.html":{},"modules/NgxEditorJSModule.html":{},"modules/NgxEditorjsDemoModule.html":{},"modules/NgxEditorjsNgrxModule.html":{},"interfaces/Page.html":{},"interfaces/PageBlock.html":{},"components/PageContainerComponent.html":{},"injectables/PagesService.html":{},"interfaces/Tag.html":{},"changelog.html":{},"index.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-readme.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-readme/ngx-editorjs-changelog.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-plugins-readme.html":{}}}],["tinynodes/src/app/app.module.ts",{"_index":169,"title":{},"body":{"modules/AppModule.html":{}}}],["tinynodes/src/app/app.routes.ts",{"_index":1273,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["tinynodes/src/app/components/app",{"_index":11,"title":{},"body":{"components/AppComponent.html":{},"coverage.html":{}}}],["tinynodes/src/app/components/nav",{"_index":482,"title":{},"body":{"components/NavBarComponent.html":{},"coverage.html":{}}}],["tinynodes/src/app/components/sidebar",{"_index":1010,"title":{},"body":{"components/SidebarComponent.html":{},"coverage.html":{}}}],["tinynodes/src/app/material.module.ts",{"_index":476,"title":{},"body":{"modules/MaterialModule.html":{}}}],["tinynodes/src/app/store/app/application.model.ts",{"_index":259,"title":{},"body":{"interfaces/ApplicationState.html":{},"interfaces/MenuItem.html":{},"coverage.html":{}}}],["tinynodes/src/app/store/app/application.module.ts",{"_index":247,"title":{},"body":{"modules/ApplicationDataModule.html":{}}}],["tinynodes/src/app/store/app/application.query.ts",{"_index":249,"title":{},"body":{"injectables/ApplicationQuery.html":{},"coverage.html":{}}}],["tinynodes/src/app/store/app/application.query.ts:7",{"_index":252,"title":{},"body":{"injectables/ApplicationQuery.html":{}}}],["tinynodes/src/app/store/app/application.service.ts",{"_index":223,"title":{},"body":{"injectables/AppService.html":{},"coverage.html":{}}}],["tinynodes/src/app/store/app/application.service.ts:10",{"_index":237,"title":{},"body":{"injectables/AppService.html":{}}}],["tinynodes/src/app/store/app/application.service.ts:14",{"_index":233,"title":{},"body":{"injectables/AppService.html":{}}}],["tinynodes/src/app/store/app/application.service.ts:7",{"_index":231,"title":{},"body":{"injectables/AppService.html":{}}}],["tinynodes/src/app/store/app/application.store.ts",{"_index":266,"title":{},"body":{"injectables/ApplicationStore.html":{},"coverage.html":{}}}],["tinynodes/src/app/store/app/application.store.ts:14",{"_index":269,"title":{},"body":{"injectables/ApplicationStore.html":{}}}],["tinynodes/src/app/store/app/application.store.ts:7",{"_index":268,"title":{},"body":{"injectables/ApplicationStore.html":{}}}],["tinynodes/src/environments/environment.prod.ts",{"_index":1281,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["tinynodes/src/environments/environment.ts",{"_index":1282,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["title",{"_index":51,"title":{},"body":{"components/AppComponent.html":{},"components/NavBarComponent.html":{}}}],["todo",{"_index":1408,"title":{"todo.html":{}},"body":{"todo.html":{}}}],["todos",{"_index":1409,"title":{},"body":{"todo.html":{}}}],["togglemenu",{"_index":267,"title":{},"body":{"injectables/ApplicationStore.html":{}}}],["togglesidebar",{"_index":225,"title":{},"body":{"injectables/AppService.html":{},"components/NavBarComponent.html":{}}}],["token",{"_index":300,"title":{},"body":{"interfaces/BasePlugin.html":{},"interfaces/BasePlugin-1.html":{},"interfaces/EditorJSConfig.html":{},"interfaces/NgxEditorJSConfig.html":{},"modules/NgxEditorJSModule.html":{},"interfaces/PluginConfig.html":{},"interfaces/PluginConfig-1.html":{},"interfaces/ToolSettingsMap.html":{},"interfaces/ToolSettingsMap-1.html":{},"miscellaneous/variables.html":{}}}],["tool",{"_index":298,"title":{},"body":{"interfaces/BasePlugin.html":{},"interfaces/BasePlugin-1.html":{},"components/EditorPageComponent.html":{},"injectables/NgxEditorJSPluginService.html":{},"injectables/PluginCode.html":{},"modules/PluginCodeModule.html":{},"interfaces/PluginConfig.html":{},"interfaces/PluginConfig-1.html":{},"injectables/PluginHeader.html":{},"modules/PluginHeaderModule.html":{},"injectables/PluginImage.html":{},"modules/PluginImageModule.html":{},"injectables/PluginLink.html":{},"modules/PluginLinkModule.html":{},"injectables/PluginList.html":{},"modules/PluginListModule.html":{},"injectables/PluginMarker.html":{},"modules/PluginMarkerModule.html":{},"injectables/PluginParagraph.html":{},"modules/PluginParagraphModule.html":{},"injectables/PluginSimpleImage.html":{},"modules/PluginSimpleImageModule.html":{},"interfaces/ToolSettingsMap.html":{},"interfaces/ToolSettingsMap-1.html":{}}}],["toolbar",{"_index":408,"title":{},"body":{"interfaces/EditorJSConfig.html":{},"interfaces/NgxEditorJSConfig.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-readme.html":{}}}],["toolconstructable",{"_index":288,"title":{},"body":{"interfaces/BasePlugin.html":{},"interfaces/BasePlugin-1.html":{},"interfaces/PluginConfig.html":{},"interfaces/PluginConfig-1.html":{},"interfaces/ToolSettingsMap.html":{},"interfaces/ToolSettingsMap-1.html":{}}}],["tools",{"_index":295,"title":{},"body":{"interfaces/BasePlugin.html":{},"interfaces/BasePlugin-1.html":{},"injectables/NgxEditorJSPluginService.html":{},"injectables/NgxEditorJSService.html":{},"modules/NgxEditorjsPluginsModule.html":{},"interfaces/PluginConfig.html":{},"interfaces/PluginConfig-1.html":{},"modules/PluginSimpleImageModule.html":{},"interfaces/ToolSettingsMap.html":{},"interfaces/ToolSettingsMap-1.html":{},"miscellaneous/functions.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-readme.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-readme/ngx-editorjs-changelog.html":{}}}],["toolsettings",{"_index":287,"title":{},"body":{"interfaces/BasePlugin.html":{},"interfaces/BasePlugin-1.html":{},"injectables/PluginCode.html":{},"interfaces/PluginConfig.html":{},"interfaces/PluginConfig-1.html":{},"injectables/PluginHeader.html":{},"injectables/PluginImage.html":{},"injectables/PluginLink.html":{},"injectables/PluginList.html":{},"injectables/PluginMarker.html":{},"injectables/PluginParagraph.html":{},"injectables/PluginSimpleImage.html":{},"interfaces/ToolSettingsMap.html":{},"interfaces/ToolSettingsMap-1.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-readme.html":{}}}],["toolsettingsmap",{"_index":296,"title":{"interfaces/ToolSettingsMap.html":{},"interfaces/ToolSettingsMap-1.html":{}},"body":{"interfaces/BasePlugin.html":{},"interfaces/BasePlugin-1.html":{},"injectables/NgxEditorJSPluginService.html":{},"interfaces/PluginConfig.html":{},"interfaces/PluginConfig-1.html":{},"interfaces/ToolSettingsMap.html":{},"interfaces/ToolSettingsMap-1.html":{},"coverage.html":{}}}],["tort",{"_index":1395,"title":{},"body":{"license.html":{}}}],["towards",{"_index":1151,"title":{},"body":{"contributing.html":{}}}],["tree",{"_index":8,"title":{},"body":{"components/AppComponent.html":{},"components/EditorPageComponent.html":{},"components/NavBarComponent.html":{},"components/NgxEditorJSComponent.html":{},"components/PageContainerComponent.html":{},"components/SidebarComponent.html":{}}}],["trolling",{"_index":1160,"title":{},"body":{"contributing.html":{}}}],["true",{"_index":407,"title":{},"body":{"interfaces/EditorJSConfig.html":{},"interfaces/NgxEditorJSConfig.html":{},"injectables/NgxEditorJSService.html":{},"miscellaneous/variables.html":{}}}],["ts",{"_index":1454,"title":{},"body":{"additional-documentation/tinynodes-library-docs/ngx-editorjs-readme.html":{}}}],["two",{"_index":1098,"title":{},"body":{"contributing.html":{}}}],["type",{"_index":42,"title":{},"body":{"components/AppComponent.html":{},"injectables/AppService.html":{},"injectables/ApplicationQuery.html":{},"interfaces/ApplicationState.html":{},"interfaces/BasePlugin.html":{},"interfaces/BasePlugin-1.html":{},"interfaces/Block.html":{},"classes/Changed.html":{},"interfaces/EditorJSConfig.html":{},"components/EditorPageComponent.html":{},"interfaces/Header.html":{},"interfaces/HeaderBlock.html":{},"interfaces/Image.html":{},"interfaces/ImageBlock.html":{},"interfaces/List.html":{},"interfaces/ListBlock.html":{},"interfaces/MenuItem.html":{},"components/NavBarComponent.html":{},"components/NgxEditorJSComponent.html":{},"interfaces/NgxEditorJSConfig.html":{},"directives/NgxEditorJSDirective.html":{},"injectables/NgxEditorJSEffects.html":{},"modules/NgxEditorJSModule.html":{},"injectables/NgxEditorJSPluginService.html":{},"injectables/NgxEditorJSService.html":{},"classes/NotReady.html":{},"interfaces/Page.html":{},"interfaces/PageBlock.html":{},"components/PageContainerComponent.html":{},"injectables/PagesQuery.html":{},"injectables/PagesService.html":{},"interfaces/Paragraph.html":{},"interfaces/ParagraphBlock.html":{},"classes/Ready.html":{},"classes/SaveEnd.html":{},"classes/SaveStart.html":{},"components/SidebarComponent.html":{},"interfaces/Tag.html":{},"coverage.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-readme.html":{}}}],["typealiases",{"_index":1424,"title":{"miscellaneous/typealiases.html":{}},"body":{}}],["types/blocks",{"_index":516,"title":{},"body":{"components/NgxEditorJSComponent.html":{},"directives/NgxEditorJSDirective.html":{},"injectables/NgxEditorJSService.html":{}}}],["types/config",{"_index":609,"title":{},"body":{"modules/NgxEditorJSModule.html":{},"injectables/NgxEditorJSService.html":{}}}],["types/maps",{"_index":750,"title":{},"body":{"injectables/NgxEditorJSService.html":{}}}],["types/plugins",{"_index":669,"title":{},"body":{"injectables/NgxEditorJSPluginService.html":{},"injectables/PluginCode.html":{},"injectables/PluginHeader.html":{},"injectables/PluginImage.html":{},"injectables/PluginLink.html":{},"injectables/PluginList.html":{},"injectables/PluginMarker.html":{},"injectables/PluginParagraph.html":{},"injectables/PluginSimpleImage.html":{}}}],["unacceptable",{"_index":1153,"title":{},"body":{"contributing.html":{}}}],["under",{"_index":1027,"title":{},"body":{"changelog.html":{}}}],["underlying",{"_index":511,"title":{},"body":{"components/NgxEditorJSComponent.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-readme.html":{}}}],["unordered",{"_index":322,"title":{},"body":{"interfaces/Block.html":{},"interfaces/Header.html":{},"interfaces/HeaderBlock.html":{},"interfaces/Image.html":{},"interfaces/ImageBlock.html":{},"interfaces/List.html":{},"interfaces/ListBlock.html":{},"interfaces/Paragraph.html":{},"interfaces/ParagraphBlock.html":{},"miscellaneous/typealiases.html":{}}}],["until",{"_index":1051,"title":{},"body":{"changelog.html":{}}}],["unwelcome",{"_index":1157,"title":{},"body":{"contributing.html":{}}}],["up",{"_index":713,"title":{},"body":{"injectables/NgxEditorJSService.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-readme/ngx-editorjs-changelog.html":{}}}],["update",{"_index":701,"title":{},"body":{"injectables/NgxEditorJSService.html":{},"contributing.html":{}}}],["update(holder",{"_index":747,"title":{},"body":{"injectables/NgxEditorJSService.html":{}}}],["updated",{"_index":900,"title":{},"body":{"injectables/PagesService.html":{}}}],["updates",{"_index":746,"title":{},"body":{"injectables/NgxEditorJSService.html":{},"injectables/PagesService.html":{}}}],["upload",{"_index":1521,"title":{},"body":{"additional-documentation/tinynodes-library-docs/ngx-editorjs-plugins-readme.html":{}}}],["upsert",{"_index":883,"title":{},"body":{"injectables/PagesService.html":{}}}],["upsert(page",{"_index":898,"title":{},"body":{"injectables/PagesService.html":{}}}],["url",{"_index":336,"title":{},"body":{"interfaces/Block.html":{},"interfaces/Header.html":{},"interfaces/HeaderBlock.html":{},"interfaces/Image.html":{},"interfaces/ImageBlock.html":{},"interfaces/List.html":{},"interfaces/ListBlock.html":{},"interfaces/Paragraph.html":{},"interfaces/ParagraphBlock.html":{}}}],["usage",{"_index":1448,"title":{},"body":{"additional-documentation/tinynodes-library-docs/ngx-editorjs-readme.html":{}}}],["use",{"_index":469,"title":{},"body":{"components/EditorPageComponent.html":{},"directives/NgxEditorJSDirective.html":{},"modules/NgxEditorJSModule.html":{},"contributing.html":{},"license.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-readme.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-readme/ngx-editorjs-changelog.html":{}}}],["used",{"_index":1475,"title":{},"body":{"additional-documentation/tinynodes-library-docs/ngx-editorjs-readme.html":{}}}],["usefactory",{"_index":640,"title":{},"body":{"modules/NgxEditorJSModule.html":{},"modules/NgxEditorjsDemoModule.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-readme.html":{}}}],["useful",{"_index":468,"title":{},"body":{"components/EditorPageComponent.html":{},"components/PageContainerComponent.html":{},"changelog.html":{},"contributing.html":{}}}],["user",{"_index":651,"title":{},"body":{"injectables/NgxEditorJSPluginService.html":{}}}],["userplugin",{"_index":1496,"title":{},"body":{"additional-documentation/tinynodes-library-docs/ngx-editorjs-readme/ngx-editorjs-changelog.html":{}}}],["userplugins",{"_index":308,"title":{},"body":{"interfaces/BasePlugin.html":{},"interfaces/BasePlugin-1.html":{},"injectables/NgxEditorJSPluginService.html":{},"modules/NgxEditorjsDemoModule.html":{},"interfaces/PluginConfig.html":{},"interfaces/PluginConfig-1.html":{},"interfaces/ToolSettingsMap.html":{},"interfaces/ToolSettingsMap-1.html":{},"coverage.html":{},"miscellaneous/variables.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-readme.html":{}}}],["usevalue",{"_index":639,"title":{},"body":{"modules/NgxEditorJSModule.html":{}}}],["using",{"_index":497,"title":{},"body":{"components/NgxEditorJSComponent.html":{},"contributing.html":{},"index.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-readme.html":{}}}],["validators",{"_index":449,"title":{},"body":{"components/EditorPageComponent.html":{}}}],["validators.required",{"_index":455,"title":{},"body":{"components/EditorPageComponent.html":{}}}],["value",{"_index":46,"title":{},"body":{"components/AppComponent.html":{},"classes/Changed.html":{},"components/NavBarComponent.html":{},"directives/NgxEditorJSDirective.html":{},"injectables/NgxEditorJSEffects.html":{},"injectables/NgxEditorJSPluginService.html":{},"injectables/NgxEditorJSService.html":{},"classes/NotReady.html":{},"classes/Ready.html":{},"classes/SaveEnd.html":{},"classes/SaveStart.html":{},"components/SidebarComponent.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/variables.html":{}}}],["values",{"_index":357,"title":{},"body":{"interfaces/BlocksMap.html":{},"interfaces/ChangeMap.html":{},"interfaces/EditorMap.html":{},"injectables/NgxEditorJSService.html":{},"interfaces/ReadyMap.html":{}}}],["var",{"_index":130,"title":{},"body":{"components/AppComponent.html":{},"components/EditorPageComponent.html":{},"components/NavBarComponent.html":{},"components/NgxEditorJSComponent.html":{},"components/PageContainerComponent.html":{},"components/SidebarComponent.html":{}}}],["variable",{"_index":1270,"title":{},"body":{"coverage.html":{}}}],["variables",{"_index":1083,"title":{"miscellaneous/variables.html":{}},"body":{"contributing.html":{},"miscellaneous/variables.html":{}}}],["version",{"_index":573,"title":{},"body":{"injectables/NgxEditorJSEffects.html":{},"injectables/NgxEditorJSService.html":{},"changelog.html":{},"contributing.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-readme.html":{}}}],["versioning",{"_index":1092,"title":{},"body":{"contributing.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-readme/ngx-editorjs-changelog.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-plugins-readme/ngx-editorjs-plugins-changelog.html":{}}}],["vertical",{"_index":120,"title":{},"body":{"components/AppComponent.html":{},"components/NavBarComponent.html":{}}}],["via",{"_index":307,"title":{},"body":{"interfaces/BasePlugin.html":{},"interfaces/BasePlugin-1.html":{},"directives/NgxEditorJSDirective.html":{},"injectables/NgxEditorJSService.html":{},"injectables/PagesService.html":{},"interfaces/PluginConfig.html":{},"interfaces/PluginConfig-1.html":{},"interfaces/ToolSettingsMap.html":{},"interfaces/ToolSettingsMap-1.html":{},"contributing.html":{},"todo.html":{},"miscellaneous/variables.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-readme.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-readme/ngx-editorjs-changelog.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-plugins-readme.html":{}}}],["view",{"_index":173,"title":{},"body":{"modules/AppModule.html":{}}}],["viewchild",{"_index":60,"title":{},"body":{"components/AppComponent.html":{},"components/NgxEditorJSComponent.html":{},"components/SidebarComponent.html":{}}}],["viewchild(matsidenav",{"_index":54,"title":{},"body":{"components/AppComponent.html":{},"components/SidebarComponent.html":{}}}],["viewchild(ngxeditorjsdirective",{"_index":508,"title":{},"body":{"components/NgxEditorJSComponent.html":{}}}],["viewpoints",{"_index":1141,"title":{},"body":{"contributing.html":{}}}],["visit",{"_index":174,"title":{},"body":{"modules/AppModule.html":{},"index.html":{}}}],["void",{"_index":235,"title":{},"body":{"injectables/AppService.html":{},"injectables/ApplicationStore.html":{},"components/EditorPageComponent.html":{},"components/NavBarComponent.html":{},"directives/NgxEditorJSDirective.html":{},"injectables/NgxEditorJSPluginService.html":{},"injectables/NgxEditorJSService.html":{},"injectables/PagesService.html":{}}}],["want",{"_index":719,"title":{},"body":{"injectables/NgxEditorJSService.html":{}}}],["warranties",{"_index":1381,"title":{},"body":{"license.html":{}}}],["warranty",{"_index":1376,"title":{},"body":{"license.html":{}}}],["way",{"_index":526,"title":{},"body":{"directives/NgxEditorJSDirective.html":{},"modules/NgxEditorjsPluginsModule.html":{},"injectables/PagesService.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-readme.html":{}}}],["welcoming",{"_index":1107,"title":{},"body":{"contributing.html":{}}}],["what's",{"_index":1474,"title":{},"body":{"additional-documentation/tinynodes-library-docs/ngx-editorjs-readme.html":{}}}],["whether",{"_index":1393,"title":{},"body":{"license.html":{}}}],["white",{"_index":97,"title":{},"body":{"components/AppComponent.html":{},"components/NavBarComponent.html":{}}}],["width",{"_index":91,"title":{},"body":{"components/AppComponent.html":{},"components/EditorPageComponent.html":{},"components/NavBarComponent.html":{},"components/NgxEditorJSComponent.html":{},"components/PageContainerComponent.html":{}}}],["wiki",{"_index":1192,"title":{},"body":{"contributing.html":{}}}],["wish",{"_index":1065,"title":{},"body":{"contributing.html":{}}}],["withbackground",{"_index":342,"title":{},"body":{"interfaces/Block.html":{},"interfaces/Header.html":{},"interfaces/HeaderBlock.html":{},"interfaces/Image.html":{},"interfaces/ImageBlock.html":{},"interfaces/List.html":{},"interfaces/ListBlock.html":{},"interfaces/Paragraph.html":{},"interfaces/ParagraphBlock.html":{}}}],["withborder",{"_index":340,"title":{},"body":{"interfaces/Block.html":{},"interfaces/Header.html":{},"interfaces/HeaderBlock.html":{},"interfaces/Image.html":{},"interfaces/ImageBlock.html":{},"interfaces/List.html":{},"interfaces/ListBlock.html":{},"interfaces/Paragraph.html":{},"interfaces/ParagraphBlock.html":{}}}],["within",{"_index":538,"title":{},"body":{"directives/NgxEditorJSDirective.html":{},"injectables/NgxEditorJSService.html":{},"contributing.html":{},"index.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-readme.html":{}}}],["withlatestfrom",{"_index":566,"title":{},"body":{"injectables/NgxEditorJSEffects.html":{}}}],["without",{"_index":499,"title":{},"body":{"components/NgxEditorJSComponent.html":{},"contributing.html":{},"license.html":{}}}],["won't",{"_index":409,"title":{},"body":{"interfaces/EditorJSConfig.html":{},"interfaces/NgxEditorJSConfig.html":{}}}],["work",{"_index":1057,"title":{},"body":{"changelog.html":{}}}],["yes",{"_index":601,"title":{},"body":{"modules/NgxEditorJSModule.html":{},"injectables/NgxEditorJSService.html":{},"injectables/PagesService.html":{},"miscellaneous/functions.html":{}}}],["zone",{"_index":703,"title":{},"body":{"injectables/NgxEditorJSService.html":{}}}],["zone.js",{"_index":1319,"title":{},"body":{"dependencies.html":{}}}],["zoom",{"_index":166,"title":{},"body":{"modules/AppModule.html":{},"modules/ApplicationDataModule.html":{},"modules/NgxEditorJSModule.html":{},"modules/NgxEditorjsDemoModule.html":{},"modules/NgxEditorjsNgrxModule.html":{},"modules/NgxEditorjsPluginsModule.html":{},"modules/PageStoreModule.html":{},"modules/PluginCodeModule.html":{},"modules/PluginHeaderModule.html":{},"modules/PluginImageModule.html":{},"modules/PluginLinkModule.html":{},"modules/PluginListModule.html":{},"modules/PluginMarkerModule.html":{},"modules/PluginParagraphModule.html":{},"modules/PluginSimpleImageModule.html":{},"overview.html":{}}}]],"pipeline":["stemmer"]},
    "store": {"components/AppComponent.html":{"url":"components/AppComponent.html","title":"component - AppComponent","body":"\n                   \n\n\n\n\n\n  Components\n  AppComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    apps/ngx-tinynodes/src/app/components/app-component/app.component.ts\n\n\n    \n        Description\n    \n    \n        The main application component that provides the root container\n\n    \n\n\n    \n        Implements\n    \n    \n                    OnInit\n                    OnDestroy\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                tinynodes-root\n            \n\n            \n                styleUrls\n                ./app.component.css\n            \n\n\n\n            \n                templateUrl\n                ./app.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                sidenav\n                            \n                        \n                    \n                \n\n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                pageTitle\n                            \n                        \n                    \n                \n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(app: AppService)\n                    \n                \n                        \n                            \n                                Defined in apps/ngx-tinynodes/src/app/components/app-component/app.component.ts:30\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        app\n                                                  \n                                                        \n                                                                        AppService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        pageTitle\n                    \n                \n                \n                    \n                        Default value : 'Tinynodes Angular Demos'\n                    \n                \n                        \n                            \n                                    Defined in apps/ngx-tinynodes/src/app/components/app-component/app.component.ts:20\n                            \n                        \n                \n                    \n                        The page title\n\n                    \n                \n            \n        \n\n\n\n\n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            sidenav\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     MatSidenav\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @ViewChild(MatSidenav)\n                            \n                        \n                    \n                        \n                            \n                                    Defined in apps/ngx-tinynodes/src/app/components/app-component/app.component.ts:25\n                            \n                        \n\n                \n                    \n                        The Material sidebar\n\n                    \n                \n\n            \n        \n\n\n\n\n\n    \n        import { Component, Input, ViewChild, OnInit, OnDestroy } from '@angular/core';\nimport { MatSidenav } from '@angular/material';\nimport { Subject } from 'rxjs';\nimport { AppService } from '../../store/app/application.service';\nimport { takeUntil } from 'rxjs/operators';\n\n/**\n * The main application component that provides the root container\n */\n@Component({\n  selector: 'tinynodes-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\nexport class AppComponent implements OnInit, OnDestroy {\n  /**\n   * The page title\n   */\n  @Input()\n  public pageTitle = 'Tinynodes Angular Demos';\n\n  /**\n   * The Material sidebar\n   */\n  @ViewChild(MatSidenav) sidenav: MatSidenav;\n\n  /**\n   * When the component is destroyed\n   */\n  private readonly onDestroy$ = new Subject();\n\n  constructor(private readonly app: AppService) {}\n\n  /**\n   * Component initialized\n   */\n  ngOnInit() {\n    this.app.hidden.pipe(takeUntil(this.onDestroy$)).subscribe(value => {\n      value ? this.sidenav.close() : this.sidenav.open();\n    });\n  }\n\n  /**\n   * Component destroyed\n   */\n  ngOnDestroy() {\n    this.onDestroy$.next(true);\n    this.onDestroy$.complete();\n  }\n}\n\n    \n\n    \n        \n  \n    \n      \n        Demo: ngx-editor\n      \n    \n  \n  \n    \n\n    \n      \n    \n  \n\n\n\n\n\n  \n    \n      \n        \n      \n    \n    \n      \n        \n      \n    \n  \n -->\n\n    \n\n    \n                \n                    ./app.component.css\n                \n                mat-sidenav-container,\nmat-sidenav-content,\nmat-sidenav {\n  height: 100%;\n}\n\nmat-sidenav {\n  width: 250px;\n}\n\na {\n  text-decoration: none;\n  color: white;\n}\n\na:hover,\na:active {\n  color: lightgray;\n}\n\n.navigation-items {\n  list-style: none;\n  padding: 0;\n  margin: 0;\n  cursor: pointer;\n}\n\n.icon {\n  display: inline-block;\n  height: 30px;\n  margin: 0 auto;\n  padding-right: 5px;\n  text-align: center;\n  vertical-align: middle;\n  width: 15%;\n}\n\n.label {\n  display: inline-block;\n  line-height: 30px;\n  margin: 0;\n  width: 85%;\n}\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                    Demo: ngx-editor                                                                                               -->'\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'tinynodes-root'},{'name': 'EditorPageComponent', 'selector': 'ngx-editor-page'},{'name': 'NavBarComponent', 'selector': 'tinynodes-nav-bar'},{'name': 'NgxEditorJSComponent', 'selector': 'ngx-editorjs'},{'name': 'PageContainerComponent', 'selector': 'ngx-page-container'},{'name': 'SidebarComponent', 'selector': 'tinynodes-sidebar'}];\n    var DIRECTIVES = [{'name': 'NgxEditorJSDirective', 'selector': '[ngxEditorJS]'}];\n    var ACTUAL_COMPONENT = {'name': 'AppComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/AppModule.html":{"url":"modules/AppModule.html","title":"module - AppModule","body":"\n                   \n\n\n\n\n    Modules\n    AppModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_AppModule\n\n\n\ncluster_AppModule_declarations\n\n\n\ncluster_AppModule_imports\n\n\n\ncluster_AppModule_bootstrap\n\n\n\n\nAppComponent\n\nAppComponent\n\n\n\nAppModule\n\nAppModule\n\nAppModule -->\n\nAppComponent->AppModule\n\n\n\n\n\nNavBarComponent\n\nNavBarComponent\n\nAppModule -->\n\nNavBarComponent->AppModule\n\n\n\n\n\nSidebarComponent\n\nSidebarComponent\n\nAppModule -->\n\nSidebarComponent->AppModule\n\n\n\n\n\nAppComponent \n\nAppComponent \n\nAppComponent  -->\n\nAppModule->AppComponent \n\n\n\n\n\nApplicationDataModule\n\nApplicationDataModule\n\nAppModule -->\n\nApplicationDataModule->AppModule\n\n\n\n\n\nMaterialModule\n\nMaterialModule\n\nAppModule -->\n\nMaterialModule->AppModule\n\n\n\n\n\nNgxEditorJSModule\n\nNgxEditorJSModule\n\nAppModule -->\n\nNgxEditorJSModule->AppModule\n\n\n\n\n\nNgxEditorjsDemoModule\n\nNgxEditorjsDemoModule\n\nAppModule -->\n\nNgxEditorjsDemoModule->AppModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            apps/ngx-tinynodes/src/app/app.module.ts\n        \n\n\n        \n            Description\n        \n        \n            The main ngx-tinynodes module that builds the core single page application.\nTo view the application visit the demo\n\n        \n\n\n        \n            \n                \n                    Declarations\n                    \n                        \n                            AppComponent\n                        \n                        \n                            NavBarComponent\n                        \n                        \n                            SidebarComponent\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            ApplicationDataModule\n                        \n                        \n                            MaterialModule\n                        \n                        \n                            NgxEditorJSModule\n                        \n                        \n                            NgxEditorjsDemoModule\n                        \n                    \n                \n                \n                    Bootstrap\n                    \n                        \n                            AppComponent\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { HttpClient, HttpClientModule } from '@angular/common/http';\nimport { NgModule } from '@angular/core';\nimport { FlexLayoutModule } from '@angular/flex-layout';\nimport { BrowserModule } from '@angular/platform-browser';\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\nimport { RouterModule } from '@angular/router';\nimport { AkitaNgRouterStoreModule } from '@datorama/akita-ng-router-store';\nimport { AkitaNgDevtools } from '@datorama/akita-ngdevtools';\nimport { NgxEditorJSModule } from '@tinynodes/ngx-editorjs';\nimport { NgxEditorjsDemoModule } from '@tinynodes/ngx-editorjs-demo';\nimport { MarkdownModule } from 'ngx-markdown';\nimport { environment } from '../environments/environment';\nimport { AppComponent } from './components/app-component/app.component';\nimport { NavBarComponent } from './components/nav-bar/nav-bar.component';\nimport { SidebarComponent } from './components/sidebar-component/sidebar.component';\nimport { MaterialModule } from './material.module';\nimport { ApplicationDataModule } from './store/app/application.module';\n\n/**\n * The main `ngx-tinynodes` module that builds the core single page application.\n * To view the application visit [the demo](https://tinynodes-ngx.firebaseapp.com/)\n */\n@NgModule({\n  declarations: [AppComponent, NavBarComponent, SidebarComponent],\n  imports: [\n    BrowserModule,\n    HttpClientModule,\n    BrowserAnimationsModule,\n    MaterialModule,\n    FlexLayoutModule,\n    ApplicationDataModule,\n    RouterModule.forRoot([]),\n    NgxEditorJSModule.forRoot(),\n    NgxEditorjsDemoModule,\n    MarkdownModule.forRoot({ loader: HttpClient }),\n    environment.production ? [] : [AkitaNgDevtools.forRoot(), AkitaNgRouterStoreModule.forRoot()]\n  ],\n  bootstrap: [AppComponent]\n})\nexport class AppModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/AppService.html":{"url":"injectables/AppService.html","title":"injectable - AppService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  AppService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/ngx-tinynodes/src/app/store/app/application.service.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                toggleSidebar\n                            \n                        \n                    \n                \n\n\n\n\n\n                    \n                        \n                            Accessors\n                        \n                    \n                    \n                        \n                            \n                                \n                                    hidden\n                                \n                            \n                        \n                    \n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(query: ApplicationQuery, store: ApplicationStore)\n                    \n                \n                        \n                            \n                                Defined in apps/ngx-tinynodes/src/app/store/app/application.service.ts:7\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        query\n                                                  \n                                                        \n                                                                        ApplicationQuery\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        store\n                                                  \n                                                        \n                                                                        ApplicationStore\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            toggleSidebar\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    toggleSidebar()\n                \n            \n\n\n            \n                \n                    Defined in apps/ngx-tinynodes/src/app/store/app/application.service.ts:14\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n\n            \n    \n        Accessors\n    \n        \n            \n                \n                    \n                        \n                        hidden\n                    \n                \n\n                \n                    \n                        gethidden()\n                    \n                \n                            \n                                \n                                    Defined in apps/ngx-tinynodes/src/app/store/app/application.service.ts:10\n                                \n                            \n\n            \n        \n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { ApplicationQuery } from './application.query';\nimport { ApplicationStore } from './application.store';\nimport { Observable } from 'rxjs';\n\n@Injectable()\nexport class AppService {\n  constructor(private readonly query: ApplicationQuery, private readonly store: ApplicationStore) {}\n\n  get hidden(): Observable {\n    return this.query.select('hidden');\n  }\n\n  public toggleSidebar() {\n    this.store.update({ hidden: !this.store._value().hidden });\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/ApplicationDataModule.html":{"url":"modules/ApplicationDataModule.html","title":"module - ApplicationDataModule","body":"\n                   \n\n\n\n\n    Modules\n    ApplicationDataModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_ApplicationDataModule\n\n\n\ncluster_ApplicationDataModule_providers\n\n\n\n\nAppService\n\nAppService\n\n\n\nApplicationDataModule\n\nApplicationDataModule\n\nApplicationDataModule -->\n\nAppService->ApplicationDataModule\n\n\n\n\n\nApplicationQuery\n\nApplicationQuery\n\nApplicationDataModule -->\n\nApplicationQuery->ApplicationDataModule\n\n\n\n\n\nApplicationStore\n\nApplicationStore\n\nApplicationDataModule -->\n\nApplicationStore->ApplicationDataModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            apps/ngx-tinynodes/src/app/store/app/application.module.ts\n        \n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            AppService\n                        \n                        \n                            ApplicationQuery\n                        \n                        \n                            ApplicationStore\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { NgModule } from '@angular/core';\nimport { ApplicationQuery } from './application.query';\nimport { AppService } from './application.service';\nimport { ApplicationStore } from './application.store';\n\n@NgModule({\n  providers: [AppService, ApplicationQuery, ApplicationStore]\n})\nexport class ApplicationDataModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/ApplicationQuery.html":{"url":"injectables/ApplicationQuery.html","title":"injectable - ApplicationQuery","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  ApplicationQuery\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/ngx-tinynodes/src/app/store/app/application.query.ts\n        \n\n\n            \n                Extends\n            \n            \n                        Query\n            \n\n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(store: ApplicationStore)\n                    \n                \n                        \n                            \n                                Defined in apps/ngx-tinynodes/src/app/store/app/application.query.ts:7\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        store\n                                                  \n                                                        \n                                                                        ApplicationStore\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { Query } from '@datorama/akita';\nimport { ApplicationState } from './application.model';\nimport { ApplicationStore } from './application.store';\n\n@Injectable()\nexport class ApplicationQuery extends Query {\n  constructor(protected store: ApplicationStore) {\n    super(store);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/ApplicationState.html":{"url":"interfaces/ApplicationState.html","title":"interface - ApplicationState","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  ApplicationState\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/ngx-tinynodes/src/app/store/app/application.model.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        hidden\n                                \n                                \n                                        menu\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        hidden\n                                    \n                                \n                                \n                                    \n                                        hidden:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        menu\n                                    \n                                \n                                \n                                    \n                                        menu:         MenuItem[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         MenuItem[]\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { RouterLink } from '@angular/router';\n\nexport interface MenuItem {\n  label: string;\n  link: RouterLink;\n}\n\nexport interface ApplicationState {\n  hidden: boolean;\n  menu: MenuItem[];\n}\n\n    \n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/ApplicationStore.html":{"url":"injectables/ApplicationStore.html","title":"injectable - ApplicationStore","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  ApplicationStore\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/ngx-tinynodes/src/app/store/app/application.store.ts\n        \n\n\n            \n                Extends\n            \n            \n                    Store\n            \n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                toggleMenu\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in apps/ngx-tinynodes/src/app/store/app/application.store.ts:7\n                            \n                        \n\n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            toggleMenu\n                        \n                        \n                    \n                \n            \n            \n                \ntoggleMenu()\n                \n            \n\n\n            \n                \n                    Defined in apps/ngx-tinynodes/src/app/store/app/application.store.ts:14\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Store, StoreConfig } from '@datorama/akita';\nimport { Injectable } from '@angular/core';\nimport { ApplicationState } from './application.model';\n\n@Injectable()\n@StoreConfig({ name: 'application' })\nexport class ApplicationStore extends Store {\n  constructor() {\n    super({\n      hidden: false\n    });\n  }\n\n  toggleMenu() {\n    this.update({ hidden: !this._value().hidden });\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/BasePlugin.html":{"url":"interfaces/BasePlugin.html","title":"interface - BasePlugin","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  BasePlugin\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            libs/ngx-editorjs/src/lib/types/plugins.ts\n        \n\n            \n                Description\n            \n            \n                Defines the interface for required and optional plugin methods.\nThese methods allow a plugin to return a EditorJS plugin and an optional shortcut\n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        plugin\n                                \n                                \n                                            Optional\n                                        shortcut\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        plugin\n                                    \n                                \n                                \n                                    \n                                        plugin:         function\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         function\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    The plugin settings to be returned\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        shortcut\n                                    \n                                \n                                \n                                    \n                                        shortcut:         function\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         function\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    Optional shortcut for the plugin\n\n                                \n                            \n                        \n                    \n            \n    \n\n\n    \n        import { InjectionToken } from '@angular/core';\nimport { ToolSettings, ToolConstructable } from '@editorjs/editorjs';\n\n/**\n * A Module plugin configuration\n */\nexport interface PluginConfig {\n  /**\n   * The key of the plugin and the plugin class extending `BasePlugin`\n   */\n  [key: string]: BasePlugin;\n}\n\n/**\n * A map of all the tools settings\n */\nexport interface ToolSettingsMap {\n  /**\n   * The key of the plugin and the plugin exported tool settings\n   */\n  [key: string]: ToolConstructable | ToolSettings;\n}\n\n/**\n * Defines the interface for required and optional plugin methods.\n * These methods allow a plugin to return a EditorJS plugin and an optional shortcut\n */\nexport interface BasePlugin {\n  /**\n   * The plugin settings to be returned\n   */\n  plugin: () => ToolConstructable | ToolSettings;\n\n  /**\n   * Optional shortcut for the plugin\n   */\n  shortcut?: () => string;\n}\n\n/**\n * The Injection token for initial plugins as defined in the ngx-editorjs module\n */\nexport const InitialPlugins = new InjectionToken('InitialPlugins');\n\n/**\n * The injection token for adding plugins via your own application\n */\nexport const UserPlugins = new InjectionToken('UserPlugins');\n\n    \n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/BasePlugin-1.html":{"url":"interfaces/BasePlugin-1.html","title":"interface - BasePlugin-1","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  BasePlugin\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            libs/ngx-editorjs-plugins/src/lib/types/plugins.ts\n        \n\n            \n                Description\n            \n            \n                Defines the interface for required and optional plugin methods.\nThese methods allow a plugin to return a EditorJS plugin and an optional shortcut\n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        plugin\n                                \n                                \n                                            Optional\n                                        shortcut\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        plugin\n                                    \n                                \n                                \n                                    \n                                        plugin:         function\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         function\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    The plugin settings to be returned\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        shortcut\n                                    \n                                \n                                \n                                    \n                                        shortcut:         function\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         function\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    Optional shortcut for the plugin\n\n                                \n                            \n                        \n                    \n            \n    \n\n\n    \n        import { InjectionToken } from '@angular/core';\nimport { ToolSettings, ToolConstructable } from '@editorjs/editorjs';\n\n/**\n * A Module plugin configuration\n */\nexport interface PluginConfig {\n  /**\n   * The key of the plugin and the plugin class extending `BasePlugin`\n   */\n  [key: string]: BasePlugin;\n}\n\n/**\n * A map of all the tools settings\n */\nexport interface ToolSettingsMap {\n  /**\n   * The key of the plugin and the plugin exported tool settings\n   */\n  [key: string]: ToolConstructable | ToolSettings;\n}\n\n/**\n * Defines the interface for required and optional plugin methods.\n * These methods allow a plugin to return a EditorJS plugin and an optional shortcut\n */\nexport interface BasePlugin {\n  /**\n   * The plugin settings to be returned\n   */\n  plugin: () => ToolConstructable | ToolSettings;\n\n  /**\n   * Optional shortcut for the plugin\n   */\n  shortcut?: () => string;\n}\n\n/**\n * The Injection token for initial plugins as defined in the ngx-editorjs module\n */\nexport const InitialPlugins = new InjectionToken('InitialPlugins');\n\n/**\n * The injection token for adding plugins via your own application\n */\nexport const UserPlugins = new InjectionToken('UserPlugins');\n\n    \n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/Block.html":{"url":"interfaces/Block.html","title":"interface - Block","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  Block\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            libs/ngx-editorjs/src/lib/types/blocks.ts\n        \n\n            \n                Description\n            \n            \n                Base block type for EditorJS\n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        data\n                                \n                                \n                                        type\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n            \n    Indexable\n        \n            \n                \n                    \n                        [key: string]:        any\n\n                    \n                \n                        \n                            \n                                Defined in libs/ngx-editorjs/src/lib/types/blocks.ts:13\n                            \n                        \n                \n                    \n                        Additional properties on the type\n\n                    \n                \n            \n        \n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        data\n                                    \n                                \n                                \n                                    \n                                        data:     T\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     T\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    The data interface for the block type\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        type\n                                    \n                                \n                                \n                                    \n                                        type:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    The EditorJS block type\n\n                                \n                            \n                        \n                    \n            \n    \n\n\n    \n        export interface Block {\n  /**\n   * The EditorJS block type\n   */\n  type: string;\n\n  /**\n   * The data interface for the block type\n   */\n  data: T;\n\n  /**\n   * Additional properties on the type\n   */\n  [key: string]: any;\n}\n\n/**\n * Available list styles, supports `ordered` and `unordered`.\n * A custom string can also be added\n */\nexport type ListStyle = 'ordered' | 'unordered' | string;\n\n/**\n * Default data type for a list block\n */\nexport interface List {\n  /**\n   * The list style\n   */\n  style: ListStyle;\n  /**\n   * List items of type T\n   */\n  items: T[];\n}\n\n/**\n * The default list block is provided by the EditorJS list plugin\n */\nexport interface ListBlock extends Block> {\n  /**\n   * The EditorJS block type\n   */\n  type: 'list';\n}\n\n/**\n * Default data type for a paragraph block\n */\ninterface Paragraph {\n  /**\n   * The paragraph text\n   */\n  text: string;\n}\n\n/**\n * Interface for a paragraph block\n */\nexport interface ParagraphBlock extends Block {\n  /**\n   * The EditorJS block type\n   */\n  type: 'paragraph';\n}\n\n/**\n * Default data type for a header block\n */\ninterface Header {\n  /**\n   * The header text\n   */\n  text: string;\n  /**\n   * The header level from 1-6\n   */\n  level: number;\n}\n\n/**\n * Interface for a header block\n */\nexport interface HeaderBlock extends Block {\n  /**\n   * The EditorJS block type\n   */\n  type: 'header';\n}\n\n/**\n * Default data type for a header block\n */\nexport interface Image {\n  /**\n   * The image URL\n   */\n  url: string;\n  /**\n   * Optional image caption\n   */\n  caption?: string;\n  /**\n   * Optional border property\n   */\n  withBorder?: boolean;\n\n  /**\n   * Optional background property\n   */\n  withBackground?: boolean;\n\n  /**\n   * Optional stretch property\n   */\n  stretched?: boolean;\n}\n\n/**\n * Interface for a image block\n */\nexport interface ImageBlock extends Block {\n  /**\n   * The EditorJS block type\n   */\n  type: 'image';\n}\n\n/**\n * Type of all the basic block type\n */\nexport type BlockTypes = ParagraphBlock | HeaderBlock | ImageBlock | ListBlock | Block;\n\n    \n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/BlocksMap.html":{"url":"interfaces/BlocksMap.html","title":"interface - BlocksMap","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  BlocksMap\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            libs/ngx-editorjs/src/lib/types/maps.ts\n        \n\n            \n                Description\n            \n            \n                A map containing BehaviorSubject of Block elements from EditorJS\n\n            \n\n\n\n\n            \n    Indexable\n        \n            \n                \n                    \n                        [key: string]:        BehaviorSubject\n\n                    \n                \n                        \n                            \n                                Defined in libs/ngx-editorjs/src/lib/types/maps.ts:15\n                            \n                        \n            \n        \n\n\n    \n\n\n    \n        import EditorJS from '@editorjs/editorjs';\nimport { BehaviorSubject } from 'rxjs';\nimport { Block } from './blocks';\n\n/**\n * A map containing instances of `EditorJS`\n */\nexport interface EditorMap {\n  [key: string]: EditorJS;\n}\n\n/**\n * A map containing `BehaviorSubject` of `Block` elements from `EditorJS`\n */\nexport interface BlocksMap {\n  [key: string]: BehaviorSubject;\n}\n\n/**\n * A map containing `BehaviorSubject` of `boolean` values of the ready state of `EditorJS`\n */\nexport interface ReadyMap {\n  [key: string]: BehaviorSubject;\n}\n\n/**\n * A map containing `BehaviorSubject` of `number` which is the timestamp of the last `EditorJS` change\n */\nexport interface ChangeMap {\n  [key: string]: BehaviorSubject;\n}\n\n    \n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/ChangeMap.html":{"url":"interfaces/ChangeMap.html","title":"interface - ChangeMap","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  ChangeMap\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            libs/ngx-editorjs/src/lib/types/maps.ts\n        \n\n            \n                Description\n            \n            \n                A map containing BehaviorSubject of number which is the timestamp of the last EditorJS change\n\n            \n\n\n\n\n            \n    Indexable\n        \n            \n                \n                    \n                        [key: string]:    BehaviorSubject\n\n                    \n                \n                        \n                            \n                                Defined in libs/ngx-editorjs/src/lib/types/maps.ts:29\n                            \n                        \n            \n        \n\n\n    \n\n\n    \n        import EditorJS from '@editorjs/editorjs';\nimport { BehaviorSubject } from 'rxjs';\nimport { Block } from './blocks';\n\n/**\n * A map containing instances of `EditorJS`\n */\nexport interface EditorMap {\n  [key: string]: EditorJS;\n}\n\n/**\n * A map containing `BehaviorSubject` of `Block` elements from `EditorJS`\n */\nexport interface BlocksMap {\n  [key: string]: BehaviorSubject;\n}\n\n/**\n * A map containing `BehaviorSubject` of `boolean` values of the ready state of `EditorJS`\n */\nexport interface ReadyMap {\n  [key: string]: BehaviorSubject;\n}\n\n/**\n * A map containing `BehaviorSubject` of `number` which is the timestamp of the last `EditorJS` change\n */\nexport interface ChangeMap {\n  [key: string]: BehaviorSubject;\n}\n\n    \n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/Changed.html":{"url":"classes/Changed.html","title":"class - Changed","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  Changed\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            libs/ngx-editorjs-ngrx/src/lib/actions/ngx-editorjs.actions.ts\n        \n\n\n\n            \n                Implements\n            \n            \n                        Action\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                payload\n                            \n                            \n                                    Readonly\n                                type\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(payload: literal type)\n                    \n                \n                        \n                            \n                                Defined in libs/ngx-editorjs-ngrx/src/lib/actions/ngx-editorjs.actions.ts:33\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        payload\n                                                  \n                                                        \n                                                                    literal type\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            payload\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     literal type\n\n                        \n                    \n                        \n                            \n                                    Defined in libs/ngx-editorjs-ngrx/src/lib/actions/ngx-editorjs.actions.ts:34\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                            type\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : EditorJSActionTypes.Changed\n                        \n                    \n                        \n                            \n                                    Defined in libs/ngx-editorjs-ngrx/src/lib/actions/ngx-editorjs.actions.ts:33\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { Action } from '@ngrx/store';\nimport { OutputData } from '@editorjs/editorjs';\n\nexport enum EditorJSActionTypes {\n  SaveStart = '[ngx-editorjs] Start Save',\n  SaveEnd = '[ngx-editorjs] Start End',\n  NotReady = '[ngx-editorjs] Not Ready',\n  Ready = '[ngx-editorjs] Ready',\n  Changed = '[ngx-editorjs] Changed'\n}\n\nexport class SaveStart implements Action {\n  readonly type = EditorJSActionTypes.SaveStart;\n  constructor(public payload: { holder: string }) {}\n}\n\nexport class SaveEnd implements Action {\n  readonly type = EditorJSActionTypes.SaveEnd;\n  constructor(public payload: { holder: string; data: OutputData }) {}\n}\n\nexport class NotReady implements Action {\n  readonly type = EditorJSActionTypes.NotReady;\n  constructor(public payload: { holder: string }) {}\n}\n\nexport class Ready implements Action {\n  readonly type = EditorJSActionTypes.Ready;\n  constructor(public payload: { holder: string }) {}\n}\n\nexport class Changed implements Action {\n  readonly type = EditorJSActionTypes.Changed;\n  constructor(public payload: { holder: string; data: OutputData }) {}\n}\n\nexport type NgxEditorJSActions = SaveStart | SaveEnd | NotReady | Ready | Changed;\n\n    \n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/EditorJSConfig.html":{"url":"interfaces/EditorJSConfig.html","title":"interface - EditorJSConfig","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  EditorJSConfig\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            libs/ngx-editorjs/src/lib/types/config.ts\n        \n\n            \n                Description\n            \n            \n                Configuration for the EditorJS instance\n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                            Optional\n                                        autofocus\n                                \n                                \n                                            Optional\n                                        data\n                                \n                                \n                                            Optional\n                                        hideToolbar\n                                \n                                \n                                            Optional\n                                        holder\n                                \n                                \n                                            Optional\n                                        initialBlock\n                                \n                                \n                                            Optional\n                                        minHeight\n                                \n                                \n                                            Optional\n                                        placeholder\n                                \n                                \n                                            Optional\n                                        sanitizer\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        autofocus\n                                    \n                                \n                                \n                                    \n                                        autofocus:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    If the EditorJS is autofocused on creation (default: false)\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        data\n                                    \n                                \n                                \n                                    \n                                        data:     OutputData\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     OutputData\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    Any initial output data to render\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        hideToolbar\n                                    \n                                \n                                \n                                    \n                                        hideToolbar:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    If true, toolbar won't be shown\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        holder\n                                    \n                                \n                                \n                                    \n                                        holder:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    ID of the element to hold the config\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        initialBlock\n                                    \n                                \n                                \n                                    \n                                        initialBlock:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    The name of the initial block (default \"paragraph\")\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        minHeight\n                                    \n                                \n                                \n                                    \n                                        minHeight:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    Height of Editor's bottom area that allows to set focus on the last Block\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        placeholder\n                                    \n                                \n                                \n                                    \n                                        placeholder:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    First Block placeholder\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        sanitizer\n                                    \n                                \n                                \n                                    \n                                        sanitizer:     SanitizerConfig\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     SanitizerConfig\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    Define default sanitizer configuration\n\n                                \n                            \n                        \n                    \n            \n    \n\n\n    \n        import { InjectionToken } from '@angular/core';\nimport { OutputData, SanitizerConfig } from '@editorjs/editorjs';\n\n/**\n * Configuration for the EditorJS instance\n */\nexport interface EditorJSConfig {\n  /**\n   * If the EditorJS is autofocused on creation (default: false)\n   */\n  autofocus?: boolean;\n\n  /**\n   * Any initial output data to render\n   */\n  data?: OutputData;\n\n  /**\n   * If true, toolbar won't be shown\n   */\n  hideToolbar?: boolean;\n\n  /**\n   * ID of the element to hold the config\n   */\n  holder?: string;\n\n  /**\n   * The name of the initial block (default \"paragraph\")\n   */\n  initialBlock?: string;\n\n  /**\n   * Height of Editor's bottom area that allows to set focus on the last Block\n   */\n  minHeight?: number;\n\n  /**\n   * First Block placeholder\n   */\n  placeholder?: string;\n\n  /**\n   * Define default sanitizer configuration\n   */\n  sanitizer?: SanitizerConfig;\n}\n\n/**\n * The configuration option that can be passed to the `NgxEditorJSModule.forRoot` method\n */\nexport interface NgxEditorJSConfig {\n  /**\n   * Configuration options for `EditorJS`\n   */\n  editorjs?: EditorJSConfig;\n}\n\n/**\n * Injection token provied for `NgxEditorJSConfig`\n */\nexport const NGX_EDITORJS_CONFIG = new InjectionToken('NGX_EDITORJS_CONFIG');\n\n    \n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/EditorMap.html":{"url":"interfaces/EditorMap.html","title":"interface - EditorMap","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  EditorMap\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            libs/ngx-editorjs/src/lib/types/maps.ts\n        \n\n            \n                Description\n            \n            \n                A map containing instances of EditorJS\n\n            \n\n\n\n\n            \n    Indexable\n        \n            \n                \n                    \n                        [key: string]:    EditorJS\n\n                    \n                \n                        \n                            \n                                Defined in libs/ngx-editorjs/src/lib/types/maps.ts:8\n                            \n                        \n            \n        \n\n\n    \n\n\n    \n        import EditorJS from '@editorjs/editorjs';\nimport { BehaviorSubject } from 'rxjs';\nimport { Block } from './blocks';\n\n/**\n * A map containing instances of `EditorJS`\n */\nexport interface EditorMap {\n  [key: string]: EditorJS;\n}\n\n/**\n * A map containing `BehaviorSubject` of `Block` elements from `EditorJS`\n */\nexport interface BlocksMap {\n  [key: string]: BehaviorSubject;\n}\n\n/**\n * A map containing `BehaviorSubject` of `boolean` values of the ready state of `EditorJS`\n */\nexport interface ReadyMap {\n  [key: string]: BehaviorSubject;\n}\n\n/**\n * A map containing `BehaviorSubject` of `number` which is the timestamp of the last `EditorJS` change\n */\nexport interface ChangeMap {\n  [key: string]: BehaviorSubject;\n}\n\n    \n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/EditorPageComponent.html":{"url":"components/EditorPageComponent.html","title":"component - EditorPageComponent","body":"\n                   \n\n\n\n\n\n  Components\n  EditorPageComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    libs/ngx-editorjs-demo/src/lib/containers/editor-page/editor-page.component.ts\n\n\n\n\n    \n        Implements\n    \n    \n                    AfterContentInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                ngx-editor-page\n            \n\n            \n                styleUrls\n                editor-page.component.scss\n            \n\n\n\n            \n                templateUrl\n                editor-page.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                onSubmit\n                            \n                        \n                    \n                \n\n\n\n\n\n                    \n                        \n                            Accessors\n                        \n                    \n                    \n                        \n                            \n                                \n                                    form\n                                \n                            \n                        \n                    \n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(fb: FormBuilder, editor: NgxEditorJSService)\n                    \n                \n                        \n                            \n                                Defined in libs/ngx-editorjs-demo/src/lib/containers/editor-page/editor-page.component.ts:12\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        fb\n                                                  \n                                                        \n                                                                        FormBuilder\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        editor\n                                                  \n                                                        \n                                                                        NgxEditorJSService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            onSubmit\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    onSubmit()\n                \n            \n\n\n            \n                \n                    Defined in libs/ngx-editorjs-demo/src/lib/containers/editor-page/editor-page.component.ts:30\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n\n    \n    \n        Accessors\n    \n        \n            \n                \n                    \n                        \n                        form\n                    \n                \n\n                \n                    \n                        getform()\n                    \n                \n                            \n                                \n                                    Defined in libs/ngx-editorjs-demo/src/lib/containers/editor-page/editor-page.component.ts:22\n                                \n                            \n\n            \n        \n\n\n\n\n    \n        import { AfterContentInit, Component } from '@angular/core';\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\nimport { Block, NgxEditorJSService } from '@tinynodes/ngx-editorjs';\nimport { combineLatest, Observable } from 'rxjs';\nimport { switchMap, tap } from 'rxjs/operators';\n\n@Component({\n  selector: 'ngx-editor-page',\n  templateUrl: 'editor-page.component.html',\n  styleUrls: ['editor-page.component.scss']\n})\nexport class EditorPageComponent implements AfterContentInit {\n  constructor(private readonly fb: FormBuilder, private readonly editor: NgxEditorJSService) {}\n\n  private form$ = this.fb.group({\n    pageTitle: ['', [Validators.required]],\n    pageTags: this.fb.array([])\n  });\n\n  private pageData$: Observable[]>)[]>;\n\n  get form(): FormGroup {\n    return this.form$;\n  }\n\n  ngAfterContentInit() {\n    // this.pageData$ = combineLatest([this.form$, this.editor.blocks]);\n  }\n\n  public onSubmit() {\n    this.pageData$.pipe(\n      switchMap(([form, blocks]) => {\n        return [];\n      })\n    );\n  }\n}\n\n    \n\n    \n        \n  Ngx-EditorJS Pages Manager\n  A useful demo of the\n    @tinynodes/ngx-editorjs\n    module\n  \n    How to use\n    Click on the editor area below, the EditorJS block tool should appear.\n    Add blocks to the page\n  \n   \n\n\n    \n\n    \n                \n                    editor-page.component.scss\n                \n                :host {\n  width: 100%;\n  height: 100vh;\n}\n\n.page {\n  width: 100%;\n}\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '  Ngx-EditorJS Pages Manager  A useful demo of the    @tinynodes/ngx-editorjs    module      How to use    Click on the editor area below, the EditorJS block tool should appear.    Add blocks to the page     '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'tinynodes-root'},{'name': 'EditorPageComponent', 'selector': 'ngx-editor-page'},{'name': 'NavBarComponent', 'selector': 'tinynodes-nav-bar'},{'name': 'NgxEditorJSComponent', 'selector': 'ngx-editorjs'},{'name': 'PageContainerComponent', 'selector': 'ngx-page-container'},{'name': 'SidebarComponent', 'selector': 'tinynodes-sidebar'}];\n    var DIRECTIVES = [{'name': 'NgxEditorJSDirective', 'selector': '[ngxEditorJS]'}];\n    var ACTUAL_COMPONENT = {'name': 'EditorPageComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/Header.html":{"url":"interfaces/Header.html","title":"interface - Header","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  Header\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            libs/ngx-editorjs/src/lib/types/blocks.ts\n        \n\n            \n                Description\n            \n            \n                Default data type for a header block\n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        level\n                                \n                                \n                                        text\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        level\n                                    \n                                \n                                \n                                    \n                                        level:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    The header level from 1-6\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        text\n                                    \n                                \n                                \n                                    \n                                        text:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    The header text\n\n                                \n                            \n                        \n                    \n            \n    \n\n\n    \n        export interface Block {\n  /**\n   * The EditorJS block type\n   */\n  type: string;\n\n  /**\n   * The data interface for the block type\n   */\n  data: T;\n\n  /**\n   * Additional properties on the type\n   */\n  [key: string]: any;\n}\n\n/**\n * Available list styles, supports `ordered` and `unordered`.\n * A custom string can also be added\n */\nexport type ListStyle = 'ordered' | 'unordered' | string;\n\n/**\n * Default data type for a list block\n */\nexport interface List {\n  /**\n   * The list style\n   */\n  style: ListStyle;\n  /**\n   * List items of type T\n   */\n  items: T[];\n}\n\n/**\n * The default list block is provided by the EditorJS list plugin\n */\nexport interface ListBlock extends Block> {\n  /**\n   * The EditorJS block type\n   */\n  type: 'list';\n}\n\n/**\n * Default data type for a paragraph block\n */\ninterface Paragraph {\n  /**\n   * The paragraph text\n   */\n  text: string;\n}\n\n/**\n * Interface for a paragraph block\n */\nexport interface ParagraphBlock extends Block {\n  /**\n   * The EditorJS block type\n   */\n  type: 'paragraph';\n}\n\n/**\n * Default data type for a header block\n */\ninterface Header {\n  /**\n   * The header text\n   */\n  text: string;\n  /**\n   * The header level from 1-6\n   */\n  level: number;\n}\n\n/**\n * Interface for a header block\n */\nexport interface HeaderBlock extends Block {\n  /**\n   * The EditorJS block type\n   */\n  type: 'header';\n}\n\n/**\n * Default data type for a header block\n */\nexport interface Image {\n  /**\n   * The image URL\n   */\n  url: string;\n  /**\n   * Optional image caption\n   */\n  caption?: string;\n  /**\n   * Optional border property\n   */\n  withBorder?: boolean;\n\n  /**\n   * Optional background property\n   */\n  withBackground?: boolean;\n\n  /**\n   * Optional stretch property\n   */\n  stretched?: boolean;\n}\n\n/**\n * Interface for a image block\n */\nexport interface ImageBlock extends Block {\n  /**\n   * The EditorJS block type\n   */\n  type: 'image';\n}\n\n/**\n * Type of all the basic block type\n */\nexport type BlockTypes = ParagraphBlock | HeaderBlock | ImageBlock | ListBlock | Block;\n\n    \n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/HeaderBlock.html":{"url":"interfaces/HeaderBlock.html","title":"interface - HeaderBlock","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  HeaderBlock\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            libs/ngx-editorjs/src/lib/types/blocks.ts\n        \n\n            \n                Description\n            \n            \n                Interface for a header block\n\n            \n\n            \n                Extends\n            \n            \n                        Block\n            \n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        type\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        type\n                                    \n                                \n                                \n                                    \n                                        type:     \n\n                                    \n                                \n\n\n\n\n\n\n\n                            \n                                \n                                    The EditorJS block type\n\n                                \n                            \n                        \n                    \n            \n    \n\n\n    \n        export interface Block {\n  /**\n   * The EditorJS block type\n   */\n  type: string;\n\n  /**\n   * The data interface for the block type\n   */\n  data: T;\n\n  /**\n   * Additional properties on the type\n   */\n  [key: string]: any;\n}\n\n/**\n * Available list styles, supports `ordered` and `unordered`.\n * A custom string can also be added\n */\nexport type ListStyle = 'ordered' | 'unordered' | string;\n\n/**\n * Default data type for a list block\n */\nexport interface List {\n  /**\n   * The list style\n   */\n  style: ListStyle;\n  /**\n   * List items of type T\n   */\n  items: T[];\n}\n\n/**\n * The default list block is provided by the EditorJS list plugin\n */\nexport interface ListBlock extends Block> {\n  /**\n   * The EditorJS block type\n   */\n  type: 'list';\n}\n\n/**\n * Default data type for a paragraph block\n */\ninterface Paragraph {\n  /**\n   * The paragraph text\n   */\n  text: string;\n}\n\n/**\n * Interface for a paragraph block\n */\nexport interface ParagraphBlock extends Block {\n  /**\n   * The EditorJS block type\n   */\n  type: 'paragraph';\n}\n\n/**\n * Default data type for a header block\n */\ninterface Header {\n  /**\n   * The header text\n   */\n  text: string;\n  /**\n   * The header level from 1-6\n   */\n  level: number;\n}\n\n/**\n * Interface for a header block\n */\nexport interface HeaderBlock extends Block {\n  /**\n   * The EditorJS block type\n   */\n  type: 'header';\n}\n\n/**\n * Default data type for a header block\n */\nexport interface Image {\n  /**\n   * The image URL\n   */\n  url: string;\n  /**\n   * Optional image caption\n   */\n  caption?: string;\n  /**\n   * Optional border property\n   */\n  withBorder?: boolean;\n\n  /**\n   * Optional background property\n   */\n  withBackground?: boolean;\n\n  /**\n   * Optional stretch property\n   */\n  stretched?: boolean;\n}\n\n/**\n * Interface for a image block\n */\nexport interface ImageBlock extends Block {\n  /**\n   * The EditorJS block type\n   */\n  type: 'image';\n}\n\n/**\n * Type of all the basic block type\n */\nexport type BlockTypes = ParagraphBlock | HeaderBlock | ImageBlock | ListBlock | Block;\n\n    \n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/Image.html":{"url":"interfaces/Image.html","title":"interface - Image","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  Image\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            libs/ngx-editorjs/src/lib/types/blocks.ts\n        \n\n            \n                Description\n            \n            \n                Default data type for a header block\n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                            Optional\n                                        caption\n                                \n                                \n                                            Optional\n                                        stretched\n                                \n                                \n                                        url\n                                \n                                \n                                            Optional\n                                        withBackground\n                                \n                                \n                                            Optional\n                                        withBorder\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        caption\n                                    \n                                \n                                \n                                    \n                                        caption:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    Optional image caption\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        stretched\n                                    \n                                \n                                \n                                    \n                                        stretched:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    Optional stretch property\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        url\n                                    \n                                \n                                \n                                    \n                                        url:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    The image URL\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        withBackground\n                                    \n                                \n                                \n                                    \n                                        withBackground:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    Optional background property\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        withBorder\n                                    \n                                \n                                \n                                    \n                                        withBorder:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    Optional border property\n\n                                \n                            \n                        \n                    \n            \n    \n\n\n    \n        export interface Block {\n  /**\n   * The EditorJS block type\n   */\n  type: string;\n\n  /**\n   * The data interface for the block type\n   */\n  data: T;\n\n  /**\n   * Additional properties on the type\n   */\n  [key: string]: any;\n}\n\n/**\n * Available list styles, supports `ordered` and `unordered`.\n * A custom string can also be added\n */\nexport type ListStyle = 'ordered' | 'unordered' | string;\n\n/**\n * Default data type for a list block\n */\nexport interface List {\n  /**\n   * The list style\n   */\n  style: ListStyle;\n  /**\n   * List items of type T\n   */\n  items: T[];\n}\n\n/**\n * The default list block is provided by the EditorJS list plugin\n */\nexport interface ListBlock extends Block> {\n  /**\n   * The EditorJS block type\n   */\n  type: 'list';\n}\n\n/**\n * Default data type for a paragraph block\n */\ninterface Paragraph {\n  /**\n   * The paragraph text\n   */\n  text: string;\n}\n\n/**\n * Interface for a paragraph block\n */\nexport interface ParagraphBlock extends Block {\n  /**\n   * The EditorJS block type\n   */\n  type: 'paragraph';\n}\n\n/**\n * Default data type for a header block\n */\ninterface Header {\n  /**\n   * The header text\n   */\n  text: string;\n  /**\n   * The header level from 1-6\n   */\n  level: number;\n}\n\n/**\n * Interface for a header block\n */\nexport interface HeaderBlock extends Block {\n  /**\n   * The EditorJS block type\n   */\n  type: 'header';\n}\n\n/**\n * Default data type for a header block\n */\nexport interface Image {\n  /**\n   * The image URL\n   */\n  url: string;\n  /**\n   * Optional image caption\n   */\n  caption?: string;\n  /**\n   * Optional border property\n   */\n  withBorder?: boolean;\n\n  /**\n   * Optional background property\n   */\n  withBackground?: boolean;\n\n  /**\n   * Optional stretch property\n   */\n  stretched?: boolean;\n}\n\n/**\n * Interface for a image block\n */\nexport interface ImageBlock extends Block {\n  /**\n   * The EditorJS block type\n   */\n  type: 'image';\n}\n\n/**\n * Type of all the basic block type\n */\nexport type BlockTypes = ParagraphBlock | HeaderBlock | ImageBlock | ListBlock | Block;\n\n    \n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/ImageBlock.html":{"url":"interfaces/ImageBlock.html","title":"interface - ImageBlock","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  ImageBlock\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            libs/ngx-editorjs/src/lib/types/blocks.ts\n        \n\n            \n                Description\n            \n            \n                Interface for a image block\n\n            \n\n            \n                Extends\n            \n            \n                        Block\n            \n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        type\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        type\n                                    \n                                \n                                \n                                    \n                                        type:     \n\n                                    \n                                \n\n\n\n\n\n\n\n                            \n                                \n                                    The EditorJS block type\n\n                                \n                            \n                        \n                    \n            \n    \n\n\n    \n        export interface Block {\n  /**\n   * The EditorJS block type\n   */\n  type: string;\n\n  /**\n   * The data interface for the block type\n   */\n  data: T;\n\n  /**\n   * Additional properties on the type\n   */\n  [key: string]: any;\n}\n\n/**\n * Available list styles, supports `ordered` and `unordered`.\n * A custom string can also be added\n */\nexport type ListStyle = 'ordered' | 'unordered' | string;\n\n/**\n * Default data type for a list block\n */\nexport interface List {\n  /**\n   * The list style\n   */\n  style: ListStyle;\n  /**\n   * List items of type T\n   */\n  items: T[];\n}\n\n/**\n * The default list block is provided by the EditorJS list plugin\n */\nexport interface ListBlock extends Block> {\n  /**\n   * The EditorJS block type\n   */\n  type: 'list';\n}\n\n/**\n * Default data type for a paragraph block\n */\ninterface Paragraph {\n  /**\n   * The paragraph text\n   */\n  text: string;\n}\n\n/**\n * Interface for a paragraph block\n */\nexport interface ParagraphBlock extends Block {\n  /**\n   * The EditorJS block type\n   */\n  type: 'paragraph';\n}\n\n/**\n * Default data type for a header block\n */\ninterface Header {\n  /**\n   * The header text\n   */\n  text: string;\n  /**\n   * The header level from 1-6\n   */\n  level: number;\n}\n\n/**\n * Interface for a header block\n */\nexport interface HeaderBlock extends Block {\n  /**\n   * The EditorJS block type\n   */\n  type: 'header';\n}\n\n/**\n * Default data type for a header block\n */\nexport interface Image {\n  /**\n   * The image URL\n   */\n  url: string;\n  /**\n   * Optional image caption\n   */\n  caption?: string;\n  /**\n   * Optional border property\n   */\n  withBorder?: boolean;\n\n  /**\n   * Optional background property\n   */\n  withBackground?: boolean;\n\n  /**\n   * Optional stretch property\n   */\n  stretched?: boolean;\n}\n\n/**\n * Interface for a image block\n */\nexport interface ImageBlock extends Block {\n  /**\n   * The EditorJS block type\n   */\n  type: 'image';\n}\n\n/**\n * Type of all the basic block type\n */\nexport type BlockTypes = ParagraphBlock | HeaderBlock | ImageBlock | ListBlock | Block;\n\n    \n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/List.html":{"url":"interfaces/List.html","title":"interface - List","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  List\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            libs/ngx-editorjs/src/lib/types/blocks.ts\n        \n\n            \n                Description\n            \n            \n                Default data type for a list block\n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        items\n                                \n                                \n                                        style\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        items\n                                    \n                                \n                                \n                                    \n                                        items:     T[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     T[]\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    List items of type T\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        style\n                                    \n                                \n                                \n                                    \n                                        style:         ListStyle\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         ListStyle\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    The list style\n\n                                \n                            \n                        \n                    \n            \n    \n\n\n    \n        export interface Block {\n  /**\n   * The EditorJS block type\n   */\n  type: string;\n\n  /**\n   * The data interface for the block type\n   */\n  data: T;\n\n  /**\n   * Additional properties on the type\n   */\n  [key: string]: any;\n}\n\n/**\n * Available list styles, supports `ordered` and `unordered`.\n * A custom string can also be added\n */\nexport type ListStyle = 'ordered' | 'unordered' | string;\n\n/**\n * Default data type for a list block\n */\nexport interface List {\n  /**\n   * The list style\n   */\n  style: ListStyle;\n  /**\n   * List items of type T\n   */\n  items: T[];\n}\n\n/**\n * The default list block is provided by the EditorJS list plugin\n */\nexport interface ListBlock extends Block> {\n  /**\n   * The EditorJS block type\n   */\n  type: 'list';\n}\n\n/**\n * Default data type for a paragraph block\n */\ninterface Paragraph {\n  /**\n   * The paragraph text\n   */\n  text: string;\n}\n\n/**\n * Interface for a paragraph block\n */\nexport interface ParagraphBlock extends Block {\n  /**\n   * The EditorJS block type\n   */\n  type: 'paragraph';\n}\n\n/**\n * Default data type for a header block\n */\ninterface Header {\n  /**\n   * The header text\n   */\n  text: string;\n  /**\n   * The header level from 1-6\n   */\n  level: number;\n}\n\n/**\n * Interface for a header block\n */\nexport interface HeaderBlock extends Block {\n  /**\n   * The EditorJS block type\n   */\n  type: 'header';\n}\n\n/**\n * Default data type for a header block\n */\nexport interface Image {\n  /**\n   * The image URL\n   */\n  url: string;\n  /**\n   * Optional image caption\n   */\n  caption?: string;\n  /**\n   * Optional border property\n   */\n  withBorder?: boolean;\n\n  /**\n   * Optional background property\n   */\n  withBackground?: boolean;\n\n  /**\n   * Optional stretch property\n   */\n  stretched?: boolean;\n}\n\n/**\n * Interface for a image block\n */\nexport interface ImageBlock extends Block {\n  /**\n   * The EditorJS block type\n   */\n  type: 'image';\n}\n\n/**\n * Type of all the basic block type\n */\nexport type BlockTypes = ParagraphBlock | HeaderBlock | ImageBlock | ListBlock | Block;\n\n    \n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/ListBlock.html":{"url":"interfaces/ListBlock.html","title":"interface - ListBlock","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  ListBlock\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            libs/ngx-editorjs/src/lib/types/blocks.ts\n        \n\n            \n                Description\n            \n            \n                The default list block is provided by the EditorJS list plugin\n\n            \n\n            \n                Extends\n            \n            \n                        Block\n            \n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        type\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        type\n                                    \n                                \n                                \n                                    \n                                        type:     \n\n                                    \n                                \n\n\n\n\n\n\n\n                            \n                                \n                                    The EditorJS block type\n\n                                \n                            \n                        \n                    \n            \n    \n\n\n    \n        export interface Block {\n  /**\n   * The EditorJS block type\n   */\n  type: string;\n\n  /**\n   * The data interface for the block type\n   */\n  data: T;\n\n  /**\n   * Additional properties on the type\n   */\n  [key: string]: any;\n}\n\n/**\n * Available list styles, supports `ordered` and `unordered`.\n * A custom string can also be added\n */\nexport type ListStyle = 'ordered' | 'unordered' | string;\n\n/**\n * Default data type for a list block\n */\nexport interface List {\n  /**\n   * The list style\n   */\n  style: ListStyle;\n  /**\n   * List items of type T\n   */\n  items: T[];\n}\n\n/**\n * The default list block is provided by the EditorJS list plugin\n */\nexport interface ListBlock extends Block> {\n  /**\n   * The EditorJS block type\n   */\n  type: 'list';\n}\n\n/**\n * Default data type for a paragraph block\n */\ninterface Paragraph {\n  /**\n   * The paragraph text\n   */\n  text: string;\n}\n\n/**\n * Interface for a paragraph block\n */\nexport interface ParagraphBlock extends Block {\n  /**\n   * The EditorJS block type\n   */\n  type: 'paragraph';\n}\n\n/**\n * Default data type for a header block\n */\ninterface Header {\n  /**\n   * The header text\n   */\n  text: string;\n  /**\n   * The header level from 1-6\n   */\n  level: number;\n}\n\n/**\n * Interface for a header block\n */\nexport interface HeaderBlock extends Block {\n  /**\n   * The EditorJS block type\n   */\n  type: 'header';\n}\n\n/**\n * Default data type for a header block\n */\nexport interface Image {\n  /**\n   * The image URL\n   */\n  url: string;\n  /**\n   * Optional image caption\n   */\n  caption?: string;\n  /**\n   * Optional border property\n   */\n  withBorder?: boolean;\n\n  /**\n   * Optional background property\n   */\n  withBackground?: boolean;\n\n  /**\n   * Optional stretch property\n   */\n  stretched?: boolean;\n}\n\n/**\n * Interface for a image block\n */\nexport interface ImageBlock extends Block {\n  /**\n   * The EditorJS block type\n   */\n  type: 'image';\n}\n\n/**\n * Type of all the basic block type\n */\nexport type BlockTypes = ParagraphBlock | HeaderBlock | ImageBlock | ListBlock | Block;\n\n    \n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/MaterialModule.html":{"url":"modules/MaterialModule.html","title":"module - MaterialModule","body":"\n                   \n\n\n\n\n    Modules\n    MaterialModule\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            apps/ngx-tinynodes/src/app/material.module.ts\n        \n\n\n\n\n        \n            \n            \n        \n\n\n    \n\n\n    \n        import { NgModule } from '@angular/core';\n\nimport { MatSidenavModule, MatToolbarModule, MatIconModule, MatListModule, MatCardModule } from '@angular/material';\n\n@NgModule({\n  imports: [MatSidenavModule, MatToolbarModule, MatIconModule, MatListModule, MatCardModule],\n  exports: [MatSidenavModule, MatToolbarModule, MatIconModule, MatListModule, MatCardModule]\n})\nexport class MaterialModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/MenuItem.html":{"url":"interfaces/MenuItem.html","title":"interface - MenuItem","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  MenuItem\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/ngx-tinynodes/src/app/store/app/application.model.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        label\n                                \n                                \n                                        link\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        label\n                                    \n                                \n                                \n                                    \n                                        label:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        link\n                                    \n                                \n                                \n                                    \n                                        link:         RouterLink\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         RouterLink\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { RouterLink } from '@angular/router';\n\nexport interface MenuItem {\n  label: string;\n  link: RouterLink;\n}\n\nexport interface ApplicationState {\n  hidden: boolean;\n  menu: MenuItem[];\n}\n\n    \n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/NavBarComponent.html":{"url":"components/NavBarComponent.html","title":"component - NavBarComponent","body":"\n                   \n\n\n\n\n\n  Components\n  NavBarComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    apps/ngx-tinynodes/src/app/components/nav-bar/nav-bar.component.ts\n\n\n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                tinynodes-nav-bar\n            \n\n            \n                styleUrls\n                nav-bar.component.scss\n            \n\n\n\n            \n                templateUrl\n                nav-bar.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                toggleSidebar\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                title\n                            \n                        \n                    \n                \n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(app: AppService)\n                    \n                \n                        \n                            \n                                Defined in apps/ngx-tinynodes/src/app/components/nav-bar/nav-bar.component.ts:11\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        app\n                                                  \n                                                        \n                                                                        AppService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        title\n                    \n                \n                \n                    \n                        Default value : 'Navbar Component'\n                    \n                \n                        \n                            \n                                    Defined in apps/ngx-tinynodes/src/app/components/nav-bar/nav-bar.component.ts:11\n                            \n                        \n            \n        \n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            toggleSidebar\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    toggleSidebar()\n                \n            \n\n\n            \n                \n                    Defined in apps/ngx-tinynodes/src/app/components/nav-bar/nav-bar.component.ts:15\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n\n\n\n\n    \n        import { Component, Input } from '@angular/core';\nimport { AppService } from '../../store/app/application.service';\n\n@Component({\n  selector: 'tinynodes-nav-bar',\n  templateUrl: 'nav-bar.component.html',\n  styleUrls: ['nav-bar.component.scss']\n})\nexport class NavBarComponent {\n  @Input()\n  title = 'Navbar Component';\n\n  constructor(private readonly app: AppService) {}\n\n  public toggleSidebar() {\n    this.app.toggleSidebar();\n  }\n}\n\n    \n\n    \n        \n  \n    menu\n  \n  &nbsp;\n  \n    {{ title }}\n  \n  \n    \n      \n        \n          Docs\n        \n      \n      \n        \n          Github\n        \n      \n      \n        \n          NPM\n        \n      \n    \n  \n\n\n    \n\n    \n                \n                    nav-bar.component.scss\n                \n                a {\n  text-decoration: none;\n  color: white;\n}\n\na:hover,\na:active {\n  color: lightgray;\n}\n\n.navigation-items {\n  list-style: none;\n  padding: 0;\n  margin: 0;\n  cursor: pointer;\n}\n\n.icon {\n  display: inline-block;\n  height: 30px;\n  margin: 0 auto;\n  padding-right: 5px;\n  text-align: center;\n  vertical-align: middle;\n  width: 15%;\n}\n\n.label {\n  display: inline-block;\n  line-height: 30px;\n  margin: 0;\n  width: 85%;\n}\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '      menu           {{ title }}                                Docs                                      Github                                      NPM                    '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'tinynodes-root'},{'name': 'EditorPageComponent', 'selector': 'ngx-editor-page'},{'name': 'NavBarComponent', 'selector': 'tinynodes-nav-bar'},{'name': 'NgxEditorJSComponent', 'selector': 'ngx-editorjs'},{'name': 'PageContainerComponent', 'selector': 'ngx-page-container'},{'name': 'SidebarComponent', 'selector': 'tinynodes-sidebar'}];\n    var DIRECTIVES = [{'name': 'NgxEditorJSDirective', 'selector': '[ngxEditorJS]'}];\n    var ACTUAL_COMPONENT = {'name': 'NavBarComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/NgxEditorJSComponent.html":{"url":"components/NgxEditorJSComponent.html","title":"component - NgxEditorJSComponent","body":"\n                   \n\n\n\n\n\n  Components\n  NgxEditorJSComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    libs/ngx-editorjs/src/lib/containers/editorjs-component/editorjs.component.ts\n\n\n    \n        Description\n    \n    \n        This component is provided as a shortcut to using EditorJS in your\napplication. The attributes are optional and without a default component\nwill be created\n\n    \n\n\n\n    \n        Example\n    \n    \n                \n                    \n                \n    \n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                ngx-editorjs\n            \n\n            \n                styleUrls\n                editorjs.component.scss\n            \n\n\n\n            \n                templateUrl\n                editorjs.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                editor\n                            \n                            \n                                    Public\n                                    Readonly\n                                service\n                            \n                        \n                    \n                \n\n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                blocks\n                            \n                            \n                                holder\n                            \n                        \n                    \n                \n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(service: NgxEditorJSService)\n                    \n                \n                        \n                            \n                                Defined in libs/ngx-editorjs/src/lib/containers/editorjs-component/editorjs.component.ts:35\n                            \n                        \n\n                \n                    \n                            When created an instance of the service is available as\na public interface\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        service\n                                                  \n                                                        \n                                                                        NgxEditorJSService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                The editor service\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        blocks\n                    \n                \n                \n                    \n                        Type :         Block[]\n\n                    \n                \n                        \n                            \n                                    Defined in libs/ngx-editorjs/src/lib/containers/editorjs-component/editorjs.component.ts:35\n                            \n                        \n                \n                    \n                        An initial set of blocks to render in the component\n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        holder\n                    \n                \n                \n                    \n                        Type :         string\n\n                    \n                \n                        \n                            \n                                    Defined in libs/ngx-editorjs/src/lib/containers/editorjs-component/editorjs.component.ts:29\n                            \n                        \n                \n                    \n                        The ID of the dom element that will hold the editor\n\n                    \n                \n            \n        \n\n\n\n\n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            editor\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     NgxEditorJSDirective\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @ViewChild(NgxEditorJSDirective)\n                            \n                        \n                    \n                        \n                            \n                                    Defined in libs/ngx-editorjs/src/lib/containers/editorjs-component/editorjs.component.ts:23\n                            \n                        \n\n                \n                    \n                        Access to the underlying editor directive\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                                Readonly\n                            service\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         NgxEditorJSService\n\n                        \n                    \n                        \n                            \n                                    Defined in libs/ngx-editorjs/src/lib/containers/editorjs-component/editorjs.component.ts:42\n                            \n                        \n\n                \n                    \n                        The editor service\n                    \n                \n\n            \n        \n\n\n\n\n\n    \n        import { Component, Input, ViewChild } from '@angular/core';\nimport { NgxEditorJSDirective } from '../../directives/ngx-editorjs.directive';\nimport { NgxEditorJSService } from '../../services/editorjs.service';\nimport { Block } from '../../types/blocks';\n\n/**\n * This component is provided as a shortcut to using EditorJS in your\n * application. The attributes are optional and without a default component\n * will be created\n *\n * @example\n * \n */\n@Component({\n  selector: 'ngx-editorjs',\n  templateUrl: 'editorjs.component.html',\n  styleUrls: ['editorjs.component.scss']\n})\nexport class NgxEditorJSComponent {\n  /**\n   * Access to the underlying editor directive\n   */\n  @ViewChild(NgxEditorJSDirective) public editor: NgxEditorJSDirective;\n\n  /**\n   * The ID of the dom element that will hold the editor\n   */\n  @Input()\n  public holder: string;\n\n  /**\n   * An initial set of blocks to render in the component\n   */\n  @Input()\n  public blocks: Block[];\n\n  /**\n   * When created an instance of the service is available as\n   * a public interface\n   * @param service The editor service\n   */\n  constructor(public readonly service: NgxEditorJSService) {}\n}\n\n    \n\n    \n        \n\n    \n\n    \n                \n                    editorjs.component.scss\n                \n                :host {\n  width: 100%;\n  height: 100vh;\n}\n\n.editor {\n  width: 100%;\n  height: 100vh;\n  border: 2px solid darkgray;\n  border-radius: 1em;\n  text-align: left;\n}\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = ''\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'tinynodes-root'},{'name': 'EditorPageComponent', 'selector': 'ngx-editor-page'},{'name': 'NavBarComponent', 'selector': 'tinynodes-nav-bar'},{'name': 'NgxEditorJSComponent', 'selector': 'ngx-editorjs'},{'name': 'PageContainerComponent', 'selector': 'ngx-page-container'},{'name': 'SidebarComponent', 'selector': 'tinynodes-sidebar'}];\n    var DIRECTIVES = [{'name': 'NgxEditorJSDirective', 'selector': '[ngxEditorJS]'}];\n    var ACTUAL_COMPONENT = {'name': 'NgxEditorJSComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/NgxEditorJSConfig.html":{"url":"interfaces/NgxEditorJSConfig.html","title":"interface - NgxEditorJSConfig","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  NgxEditorJSConfig\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            libs/ngx-editorjs/src/lib/types/config.ts\n        \n\n            \n                Description\n            \n            \n                The configuration option that can be passed to the NgxEditorJSModule.forRoot method\n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                            Optional\n                                        editorjs\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        editorjs\n                                    \n                                \n                                \n                                    \n                                        editorjs:         EditorJSConfig\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         EditorJSConfig\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    Configuration options for EditorJS\n\n                                \n                            \n                        \n                    \n            \n    \n\n\n    \n        import { InjectionToken } from '@angular/core';\nimport { OutputData, SanitizerConfig } from '@editorjs/editorjs';\n\n/**\n * Configuration for the EditorJS instance\n */\nexport interface EditorJSConfig {\n  /**\n   * If the EditorJS is autofocused on creation (default: false)\n   */\n  autofocus?: boolean;\n\n  /**\n   * Any initial output data to render\n   */\n  data?: OutputData;\n\n  /**\n   * If true, toolbar won't be shown\n   */\n  hideToolbar?: boolean;\n\n  /**\n   * ID of the element to hold the config\n   */\n  holder?: string;\n\n  /**\n   * The name of the initial block (default \"paragraph\")\n   */\n  initialBlock?: string;\n\n  /**\n   * Height of Editor's bottom area that allows to set focus on the last Block\n   */\n  minHeight?: number;\n\n  /**\n   * First Block placeholder\n   */\n  placeholder?: string;\n\n  /**\n   * Define default sanitizer configuration\n   */\n  sanitizer?: SanitizerConfig;\n}\n\n/**\n * The configuration option that can be passed to the `NgxEditorJSModule.forRoot` method\n */\nexport interface NgxEditorJSConfig {\n  /**\n   * Configuration options for `EditorJS`\n   */\n  editorjs?: EditorJSConfig;\n}\n\n/**\n * Injection token provied for `NgxEditorJSConfig`\n */\nexport const NGX_EDITORJS_CONFIG = new InjectionToken('NGX_EDITORJS_CONFIG');\n\n    \n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"directives/NgxEditorJSDirective.html":{"url":"directives/NgxEditorJSDirective.html","title":"directive - NgxEditorJSDirective","body":"\n                   \n\n\n\n\n\n\n\n  Directives\n  NgxEditorJSDirective\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            libs/ngx-editorjs/src/lib/directives/ngx-editorjs.directive.ts\n        \n\n            \n                Description\n            \n            \n                The main directive of ngx-editorjs provides a way to attach\nan EditorJS instance to any element and control it via\nAngular services and components\nTo use attach to any element with an id property\n\n            \n\n            \n                Implements\n            \n            \n                            OnDestroy\n                            OnChanges\n                            AfterViewInit\n            \n\n            \n                Example\n            \n            \n                        \n                            \n                        \n            \n\n        \n            Metadata\n            \n                \n\n                    \n                        Selector\n                        [ngxEditorJS]\n                    \n\n                \n            \n        \n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                    Readonly\n                                editorService\n                            \n                        \n                    \n                \n\n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                blocks\n                            \n                        \n                    \n                \n\n\n\n\n                    \n                        \n                            Accessors\n                        \n                    \n                    \n                        \n                            \n                                \n                                    editor\n                                \n                                \n                                    service\n                                \n                            \n                        \n                    \n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(el: ElementRef, editorService: NgxEditorJSService)\n                    \n                \n                        \n                            \n                                Defined in libs/ngx-editorjs/src/lib/directives/ngx-editorjs.directive.ts:24\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        el\n                                                  \n                                                        \n                                                                        ElementRef\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        editorService\n                                                  \n                                                        \n                                                                        NgxEditorJSService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    Inputs\n        \n            \n                \n                    \n                        \n                        blocks\n                    \n                \n                \n                    \n                        Type :         Block[]\n\n                    \n                \n                \n                    \n                        Default value : []\n                    \n                \n                        \n                            \n                                    Defined in libs/ngx-editorjs/src/lib/directives/ngx-editorjs.directive.ts:24\n                            \n                        \n                \n                    \n                        Provide EditorJS blocks to render within the instance\n\n                    \n                \n            \n        \n\n\n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                                Readonly\n                            editorService\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         NgxEditorJSService\n\n                        \n                    \n                        \n                            \n                                    Defined in libs/ngx-editorjs/src/lib/directives/ngx-editorjs.directive.ts:26\n                            \n                        \n\n\n            \n        \n\n\n            \n    \n        Accessors\n    \n        \n            \n                \n                    \n                        \n                        editor\n                    \n                \n\n                \n                    \n                        geteditor()\n                    \n                \n                            \n                                \n                                    Defined in libs/ngx-editorjs/src/lib/directives/ngx-editorjs.directive.ts:31\n                                \n                            \n                    \n                        \n                                Get the instance of the editor this directive has created\n\n\n                                \n                                    Returns :     EditorJS\n\n                                \n                        \n                    \n\n            \n        \n        \n            \n                \n                    \n                        \n                        service\n                    \n                \n\n                \n                    \n                        getservice()\n                    \n                \n                            \n                                \n                                    Defined in libs/ngx-editorjs/src/lib/directives/ngx-editorjs.directive.ts:35\n                                \n                            \n\n            \n        \n\n\n    \n\n\n    \n        import { AfterViewInit, Directive, ElementRef, Input, OnChanges, OnDestroy, SimpleChanges } from '@angular/core';\nimport EditorJS from '@editorjs/editorjs';\nimport { NgxEditorJSService } from '../services/editorjs.service';\nimport { Block } from '../types/blocks';\n\n/**\n * The main directive of `ngx-editorjs` provides a way to attach\n * an EditorJS instance to any element and control it via\n * Angular services and components\n *\n * To use attach to any element with an `id` property\n *\n * @example\n * \n */\n@Directive({\n  selector: '[ngxEditorJS]'\n})\nexport class NgxEditorJSDirective implements OnDestroy, OnChanges, AfterViewInit {\n  /**\n   * Provide `EditorJS` blocks to render within the instance\n   */\n  @Input()\n  blocks: Block[] = [];\n\n  constructor(private readonly el: ElementRef, public readonly editorService: NgxEditorJSService) {}\n\n  /**\n   * Get the instance of the editor this directive has created\n   */\n  get editor(): EditorJS {\n    return this.editorService.getEditor(this.el.nativeElement.id);\n  }\n\n  get service(): NgxEditorJSService {\n    return this.editorService;\n  }\n\n  ngOnChanges(changes: SimpleChanges): void {\n    if (changes.blocks && !changes.blocks.firstChange) {\n      this.editorService.update(this.el.nativeElement.id, changes.blocks.currentValue);\n    }\n  }\n\n  ngAfterViewInit() {\n    this.editorService.createEditor(this.el.nativeElement.id, this.blocks);\n  }\n\n  ngOnDestroy() {\n    this.editorService.destroy(this.el.nativeElement.id);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/NgxEditorJSEffects.html":{"url":"injectables/NgxEditorJSEffects.html","title":"injectable - NgxEditorJSEffects","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  NgxEditorJSEffects\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            libs/ngx-editorjs-ngrx/src/lib/effects/ngx-editorjs.effects.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                $save\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(actions$: Actions, editorService: NgxEditorJSService)\n                    \n                \n                        \n                            \n                                Defined in libs/ngx-editorjs-ngrx/src/lib/effects/ngx-editorjs.effects.ts:10\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        actions$\n                                                  \n                                                        \n                                                                    Actions\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        editorService\n                                                  \n                                                        \n                                                                        NgxEditorJSService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            $save\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : this.actions$.pipe(\n    ofType(EditorJSActionTypes.SaveStart),\n    map((action: SaveStart) => {\n      this.editorService.save(action.payload.holder);\n      return action;\n    }),\n    withLatestFrom([\n      map((action: SaveStart) => action),\n      (action: SaveStart): Observable => this.editorService.getBlocks(action.payload.holder)\n    ]),\n    mergeMap(([action, blocks]) => {\n      blocks.subscribe();\n      return new SaveEnd({\n        holder: action.payload.holder,\n        data: {\n          time: Date.now(),\n          version: EditorJS.version,\n          blocks: blocks\n        }\n      });\n    })\n  )\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Effect({dispatch: false})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in libs/ngx-editorjs-ngrx/src/lib/effects/ngx-editorjs.effects.ts:14\n                            \n                        \n\n\n            \n        \n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { Effect, Actions, ofType } from '@ngrx/effects';\nimport { NgxEditorJSService, Block } from '@tinynodes/ngx-editorjs';\nimport { EditorJSActionTypes, SaveStart, SaveEnd } from '../actions/ngx-editorjs.actions';\nimport { switchMap, map, withLatestFrom, tap, mergeMap } from 'rxjs/operators';\nimport { Observable } from 'rxjs';\nimport EditorJS from '@editorjs/editorjs';\n\n@Injectable()\nexport class NgxEditorJSEffects {\n  constructor(private readonly actions$: Actions, private readonly editorService: NgxEditorJSService) {}\n\n  @Effect({ dispatch: false })\n  $save = this.actions$.pipe(\n    ofType(EditorJSActionTypes.SaveStart),\n    map((action: SaveStart) => {\n      this.editorService.save(action.payload.holder);\n      return action;\n    }),\n    withLatestFrom([\n      map((action: SaveStart) => action),\n      (action: SaveStart): Observable => this.editorService.getBlocks(action.payload.holder)\n    ]),\n    mergeMap(([action, blocks]) => {\n      blocks.subscribe();\n      return new SaveEnd({\n        holder: action.payload.holder,\n        data: {\n          time: Date.now(),\n          version: EditorJS.version,\n          blocks: blocks\n        }\n      });\n    })\n  );\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/NgxEditorJSModule.html":{"url":"modules/NgxEditorJSModule.html","title":"module - NgxEditorJSModule","body":"\n                   \n\n\n\n\n    Modules\n    NgxEditorJSModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_NgxEditorJSModule\n\n\n\ncluster_NgxEditorJSModule_declarations\n\n\n\ncluster_NgxEditorJSModule_exports\n\n\n\ncluster_NgxEditorJSModule_providers\n\n\n\n\nNgxEditorJSComponent\n\nNgxEditorJSComponent\n\n\n\nNgxEditorJSModule\n\nNgxEditorJSModule\n\nNgxEditorJSModule -->\n\nNgxEditorJSComponent->NgxEditorJSModule\n\n\n\n\n\nNgxEditorJSDirective\n\nNgxEditorJSDirective\n\nNgxEditorJSModule -->\n\nNgxEditorJSDirective->NgxEditorJSModule\n\n\n\n\n\nNgxEditorJSComponent \n\nNgxEditorJSComponent \n\nNgxEditorJSComponent  -->\n\nNgxEditorJSModule->NgxEditorJSComponent \n\n\n\n\n\nNgxEditorJSDirective \n\nNgxEditorJSDirective \n\nNgxEditorJSDirective  -->\n\nNgxEditorJSModule->NgxEditorJSDirective \n\n\n\n\n\nNgxEditorJSPluginService\n\nNgxEditorJSPluginService\n\nNgxEditorJSModule -->\n\nNgxEditorJSPluginService->NgxEditorJSModule\n\n\n\n\n\nNgxEditorJSService\n\nNgxEditorJSService\n\nNgxEditorJSModule -->\n\nNgxEditorJSService->NgxEditorJSModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            libs/ngx-editorjs/src/lib/ngx-editorjs.module.ts\n        \n\n\n        \n            Description\n        \n        \n            The @tinynodes/ngx-editorjs module provides a collection of features to allow\nany Angular app to use and control an EditorJS instance\nTo use import the module NgxEditorJSModule.forRoot() into the root of your application.\nThe forRoot method takes an optional NgxEditorJSConfig config, this will provide a\ndefault instance.\n\n        \n\n\n        \n            \n                \n                    Declarations\n                    \n                        \n                            NgxEditorJSComponent\n                        \n                        \n                            NgxEditorJSDirective\n                        \n                    \n                \n                \n                    Providers\n                    \n                        \n                            NgxEditorJSPluginService\n                        \n                        \n                            NgxEditorJSService\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            NgxEditorJSComponent\n                        \n                        \n                            NgxEditorJSDirective\n                        \n                    \n                \n            \n        \n\n        \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Static\n                            forRoot\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    forRoot(config?: NgxEditorJSConfig)\n                \n            \n\n\n            \n                \n                    Defined in libs/ngx-editorjs/src/lib/ngx-editorjs.module.ts:88\n                \n            \n\n\n            \n                \n                    Use this method in the root of the application.  You can pass an optional configuration\nwhich sets some defaults, or use the provided defaults.\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    config\n                                    \n                                                NgxEditorJSConfig\n                                    \n\n                                    \n                                        Yes\n                                    \n\n\n                                    \n                                        The optional configuration to pass\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         ModuleWithProviders\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n    \n\n\n    \n        import { CommonModule } from '@angular/common';\nimport { InjectionToken, ModuleWithProviders, NgModule, Optional, SkipSelf } from '@angular/core';\nimport { NgxEditorJSComponent } from './containers/editorjs-component/editorjs.component';\nimport { NgxEditorJSDirective } from './directives/ngx-editorjs.directive';\nimport { NgxEditorJSService } from './services/editorjs.service';\nimport { NgxEditorJSPluginService } from './services/plugins.service';\nimport { EditorJSConfig, NgxEditorJSConfig, NGX_EDITORJS_CONFIG } from './types/config';\n\n/**\n * The default holder ID to attach `EditorJS` to\n */\nconst DEFAULT_HOLDER_ID = 'editor-js';\n\n/**\n * Creates a configuration for EditorJS\n * @param config Optional module configurations\n */\nexport function createConfig(config?: NgxEditorJSConfig): NgxEditorJSConfig {\n  if (!config || !config.editorjs) {\n    return {\n      editorjs: {\n        holder: DEFAULT_HOLDER_ID\n      }\n    };\n  }\n  const editorJsConfig: EditorJSConfig = {};\n  if (config.editorjs.autofocus) {\n    editorJsConfig.autofocus = config.editorjs.autofocus;\n  }\n  if (config.editorjs.data) {\n    editorJsConfig.data = config.editorjs.data;\n  }\n  if (config.editorjs.hideToolbar) {\n    editorJsConfig.hideToolbar = config.editorjs.hideToolbar;\n  }\n  if (config.editorjs.initialBlock) {\n    editorJsConfig.initialBlock = config.editorjs.initialBlock;\n  }\n  if (config.editorjs.minHeight) {\n    editorJsConfig.minHeight = config.editorjs.minHeight;\n  }\n  if (config.editorjs.placeholder) {\n    editorJsConfig.placeholder = config.editorjs.placeholder;\n  }\n  if (config.editorjs.sanitizer) {\n    editorJsConfig.sanitizer = config.editorjs.sanitizer;\n  }\n\n  return {\n    editorjs: {\n      holder: config.editorjs.holder || DEFAULT_HOLDER_ID,\n      ...editorJsConfig\n    }\n  };\n}\n\n/**\n * Internal token for injecting the `NgxEditorJSConfig` into the config factory\n */\nexport const FOR_ROOT_OPTIONS_TOKEN = new InjectionToken('forRoot() NgxEditorJSConfig.');\n\n/**\n * The `@tinynodes/ngx-editorjs` module provides a collection of features to allow\n * any Angular app to use and control an [EditorJS](http://editorjs.io) instance\n *\n * To use import the module `NgxEditorJSModule.forRoot()` into the root of your application.\n * The `forRoot` method takes an optional `NgxEditorJSConfig` config, this will provide a\n * default instance.\n */\n@NgModule({\n  imports: [CommonModule],\n  declarations: [NgxEditorJSComponent, NgxEditorJSDirective],\n  exports: [NgxEditorJSComponent, NgxEditorJSDirective],\n  providers: [NgxEditorJSService, NgxEditorJSPluginService]\n})\nexport class NgxEditorJSModule {\n  constructor(\n    @Optional()\n    @SkipSelf()\n    parentModule: NgxEditorJSModule\n  ) {}\n\n  /**\n   * Use this method in the root of the application.  You can pass an optional configuration\n   * which sets some defaults, or use the provided defaults.\n   * @param config The optional configuration to pass\n   */\n  static forRoot(@Optional() config?: NgxEditorJSConfig): ModuleWithProviders {\n    return {\n      ngModule: NgxEditorJSModule,\n      providers: [\n        {\n          provide: FOR_ROOT_OPTIONS_TOKEN,\n          useValue: config\n        },\n        {\n          provide: NGX_EDITORJS_CONFIG,\n          useFactory: createConfig,\n          deps: [FOR_ROOT_OPTIONS_TOKEN]\n        }\n      ]\n    };\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/NgxEditorJSPluginService.html":{"url":"injectables/NgxEditorJSPluginService.html","title":"injectable - NgxEditorJSPluginService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  NgxEditorJSPluginService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            libs/ngx-editorjs/src/lib/services/plugins.service.ts\n        \n\n            \n                Description\n            \n            \n                The plugin service provides a singleton to store all plugins injected into the application\nand makes them available for all instances of EditorJS\n\n            \n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                add\n                            \n                            \n                                    Public\n                                get\n                            \n                            \n                                    Public\n                                getTools\n                            \n                            \n                                    Public\n                                remove\n                            \n                        \n                    \n                \n\n\n\n\n\n                    \n                        \n                            Accessors\n                        \n                    \n                    \n                        \n                            \n                                \n                                    plugins\n                                \n                            \n                        \n                    \n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(userPlugins: PluginConfig)\n                    \n                \n                        \n                            \n                                Defined in libs/ngx-editorjs/src/lib/services/plugins.service.ts:15\n                            \n                        \n\n                \n                    \n                            When the class is initialized the initial plugins and any user plugins\nwill be passed in and merged and stored in the config map\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        userPlugins\n                                                  \n                                                        \n                                                                        PluginConfig\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                User plugins injected into the application\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            add\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    add(key: string, plugin: BasePlugin)\n                \n            \n\n\n            \n                \n                    Defined in libs/ngx-editorjs/src/lib/services/plugins.service.ts:32\n                \n            \n\n\n            \n                \n                    Add a plugin to the store\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    key\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        The key for the map to store the plugin\n\n                                    \n                                \n                                \n                                    plugin\n                                    \n                                                BasePlugin\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        The plugin instance to add to the service\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            get\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    get(key: string)\n                \n            \n\n\n            \n                \n                    Defined in libs/ngx-editorjs/src/lib/services/plugins.service.ts:49\n                \n            \n\n\n            \n                \n                    Get a single plugin from the map\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    key\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         BasePlugin\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            getTools\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    getTools(exclude: string[])\n                \n            \n\n\n            \n                \n                    Defined in libs/ngx-editorjs/src/lib/services/plugins.service.ts:64\n                \n            \n\n\n            \n                \n                    Returns a map of tools to be initialized by the editor\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Default value\n                                    Description\n                                \n                            \n                            \n                                \n                                    exclude\n                                    \n                                            string[]\n                                    \n\n                                    \n                                        No\n                                    \n\n                                    \n                                        []\n                                    \n\n                                    \n                                        Optional array of keys to exclude from the map\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         ToolSettingsMap\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            remove\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    remove(key: string)\n                \n            \n\n\n            \n                \n                    Defined in libs/ngx-editorjs/src/lib/services/plugins.service.ts:40\n                \n            \n\n\n            \n                \n                    Remove a plugin from the store\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    key\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n            \n    \n        Accessors\n    \n        \n            \n                \n                    \n                        \n                        plugins\n                    \n                \n\n                \n                    \n                        getplugins()\n                    \n                \n                            \n                                \n                                    Defined in libs/ngx-editorjs/src/lib/services/plugins.service.ts:56\n                                \n                            \n                    \n                        \n                                Returns a map of all the plugins registered with this service\n\n\n                                \n                                    Returns :         PluginConfig\n\n                                \n                        \n                    \n\n            \n        \n\n    \n\n\n    \n        import { Inject, Injectable } from '@angular/core';\nimport { BasePlugin, PluginConfig, ToolSettingsMap, UserPlugins } from '../types/plugins';\n\n/**\n * The plugin service provides a singleton to store all plugins injected into the application\n * and makes them available for all instances of `EditorJS`\n */\n@Injectable({\n  providedIn: 'root'\n})\nexport class NgxEditorJSPluginService {\n  /**\n   * Object map of the plugin configurations\n   */\n  private pluginsMap: PluginConfig = {};\n\n  /**\n   * When the class is initialized the initial plugins and any user plugins\n   * will be passed in and merged and stored in the config map\n   * @param initialPlugins Default plugins produced by the module\n   * @param userPlugins User plugins injected into the application\n   */\n  constructor(@Inject(UserPlugins) userPlugins: PluginConfig) {\n    Object.entries({ ...userPlugins }).forEach(([key, tool]) => this.add(key, tool));\n  }\n\n  /**\n   * Add a plugin to the store\n   * @param key The key for the map to store the plugin\n   * @param plugin The plugin instance to add to the service\n   */\n  public add(key: string, plugin: BasePlugin) {\n    this.pluginsMap[key] = plugin;\n  }\n\n  /**\n   * Remove a plugin from the store\n   * @param key\n   */\n  public remove(key: string) {\n    this.pluginsMap[key] = null;\n    delete this.pluginsMap[key];\n  }\n\n  /**\n   * Get a single plugin from the map\n   * @param name\n   */\n  public get(key: string): BasePlugin {\n    return this.pluginsMap[key];\n  }\n\n  /**\n   * Returns a map of all the plugins registered with this service\n   */\n  public get plugins(): PluginConfig {\n    return this.pluginsMap;\n  }\n\n  /**\n   * Returns a map of tools to be initialized by the editor\n   * @param exclude Optional array of keys to exclude from the map\n   */\n  public getTools(exclude: string[] = []): ToolSettingsMap {\n    return Object.entries(this.pluginsMap)\n      .filter(([key]) => {\n        return !exclude.includes(key);\n      })\n      .reduce((finalTools, [key, plugin]) => {\n        if (plugin.shortcut) {\n          return {\n            [key]: {\n              class: plugin.plugin(),\n              shortcut: plugin.shortcut()\n            },\n            ...finalTools\n          };\n        } else {\n          return { [key]: plugin.plugin(), ...finalTools };\n        }\n      }, {});\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/NgxEditorJSService.html":{"url":"injectables/NgxEditorJSService.html","title":"injectable - NgxEditorJSService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  NgxEditorJSService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            libs/ngx-editorjs/src/lib/services/editorjs.service.ts\n        \n\n            \n                Description\n            \n            \n                The NgxEditorJSService provides control EditorJS instances via Angular.\nThe service has several maps:\n- A map of EditorJS instances\n- A map of BehaviorSubject containing the current array of blocks\n- A map of ready states\nThe are generated from the last save made on that instance\n\n            \n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                createEditor\n                            \n                            \n                                    Public\n                                destroy\n                            \n                            \n                                    Public\n                                getBlocks\n                            \n                            \n                                    Public\n                                getEditor\n                            \n                            \n                                    Public\n                                hasChanged\n                            \n                            \n                                    Public\n                                isReady\n                            \n                            \n                                    Public\n                                save\n                            \n                            \n                                    Public\n                                update\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(config: NgxEditorJSConfig, plugins: NgxEditorJSPluginService, zone: NgZone)\n                    \n                \n                        \n                            \n                                Defined in libs/ngx-editorjs/src/lib/services/editorjs.service.ts:39\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        config\n                                                  \n                                                        \n                                                                        NgxEditorJSConfig\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        plugins\n                                                  \n                                                        \n                                                                        NgxEditorJSPluginService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        zone\n                                                  \n                                                        \n                                                                        NgZone\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            createEditor\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    createEditor(holder: string, blocks?: Block[], excludeTools?: string[], autoSave)\n                \n            \n\n\n            \n                \n                    Defined in libs/ngx-editorjs/src/lib/services/editorjs.service.ts:55\n                \n            \n\n\n            \n                \n                    This method creates a new EditorJS instance and adds it to the editor map.\nIf there is an existing editor it will clean up first before creating a new one\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Default value\n                                    Description\n                                \n                            \n                            \n                                \n                                    holder\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n                                    \n                                    \n\n                                    \n                                        The ID of the holder of the instance\n\n                                    \n                                \n                                \n                                    blocks\n                                    \n                                                Block[]\n                                    \n\n                                    \n                                        Yes\n                                    \n\n                                    \n                                    \n\n                                    \n                                        Optional initial set of blocks to render in the editor\n\n                                    \n                                \n                                \n                                    excludeTools\n                                    \n                                            string[]\n                                    \n\n                                    \n                                        Yes\n                                    \n\n                                    \n                                    \n\n                                    \n                                        String array of keys to not include with this editor\n\n                                    \n                                \n                                \n                                    autoSave\n                                    \n                                    \n\n                                    \n                                        No\n                                    \n\n                                    \n                                        true\n                                    \n\n                                    \n                                        When an instance changes we update the block map, set to false if you want to disable\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            destroy\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    destroy(holder: string)\n                \n            \n\n\n            \n                \n                    Defined in libs/ngx-editorjs/src/lib/services/editorjs.service.ts:189\n                \n            \n\n\n            \n                \n                    Destroy the EditorJS instance\nIt also calls the maps and sets their values back to their defaults and then\ncompletes and destroys them\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    holder\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        The ID of the holder of the instance\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            getBlocks\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    getBlocks(holder: string)\n                \n            \n\n\n            \n                \n                    Defined in libs/ngx-editorjs/src/lib/services/editorjs.service.ts:115\n                \n            \n\n\n            \n                \n                    Get an observable of the blocks for an EditorJS instance\nIf there is no instance of that name it will throw an error.\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    holder\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        The ID of the holder of the instance\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Observable\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            getEditor\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    getEditor(holder: string)\n                \n            \n\n\n            \n                \n                    Defined in libs/ngx-editorjs/src/lib/services/editorjs.service.ts:103\n                \n            \n\n\n            \n                \n                    Get an EditorJS instance, if the instance does not exist it will be created\nand returned with the default settings\nSee the EditorJS API docs for more details\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    holder\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        The ID of the holder of the instance\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     EditorJS\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            hasChanged\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    hasChanged(holder: string)\n                \n            \n\n\n            \n                \n                    Defined in libs/ngx-editorjs/src/lib/services/editorjs.service.ts:139\n                \n            \n\n\n            \n                \n                    Returns an Observable of the current timestamp of the last change\nthis can be subscribed to before calling the createEditor method\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    holder\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Observable\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            isReady\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    isReady(holder: string)\n                \n            \n\n\n            \n                \n                    Defined in libs/ngx-editorjs/src/lib/services/editorjs.service.ts:127\n                \n            \n\n\n            \n                \n                    Returns an Observable of the current ready state, this can be subscribed to before calling\nthe createEditor method\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    holder\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Observable\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            save\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    save(holder: string)\n                \n            \n\n\n            \n                \n                    Defined in libs/ngx-editorjs/src/lib/services/editorjs.service.ts:172\n                \n            \n\n\n            \n                \n                    Calls the EditorJS save method which returns an OutputData object.\nFrom this the service updates the blocks map and change map values\nIf there is no instance of that name it will throw an error.\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    holder\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        The ID of the holder of the instance\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            update\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    update(holder: string, blocks: Block[])\n                \n            \n\n\n            \n                \n                    Defined in libs/ngx-editorjs/src/lib/services/editorjs.service.ts:152\n                \n            \n\n\n            \n                \n                    This method updates the blocks within the EditorJS instance.\nIf there is no instance of that name it will throw an error.\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    holder\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        The ID of the holder of the instance\n\n                                    \n                                \n                                \n                                    blocks\n                                    \n                                                Block[]\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        The array of Block elements to render\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Inject, Injectable, NgZone } from '@angular/core';\nimport EditorJS, { EditorConfig } from '@editorjs/editorjs';\nimport { BehaviorSubject, Observable } from 'rxjs';\nimport { Block } from '../types/blocks';\nimport { NgxEditorJSConfig, NGX_EDITORJS_CONFIG } from '../types/config';\nimport { BlocksMap, ChangeMap, EditorMap, ReadyMap } from '../types/maps';\nimport { NgxEditorJSPluginService } from './plugins.service';\n\n/**\n * The NgxEditorJSService provides control EditorJS instances via Angular.\n * The service has several maps:\n * - A map of `EditorJS` instances\n * - A map of `BehaviorSubject` containing the current array of blocks\n * - A map of ready states\n * The are generated from the last save made on that instance\n */\n@Injectable({\n  providedIn: 'root'\n})\nexport class NgxEditorJSService {\n  /**\n   * Internal map of all EditorJS instances\n   */\n  private editorMap: EditorMap = {};\n\n  /**\n   * Internal map of all Block `BehaviorSubject` instances\n   */\n  private blocksMap: BlocksMap = {};\n\n  /**\n   * Internal map of all EditorJS ready states\n   */\n  private readyMap: ReadyMap = {};\n\n  /**\n   * Internal map of all EditorJS change states\n   */\n  private changeMap: ChangeMap = {};\n\n  constructor(\n    @Inject(NGX_EDITORJS_CONFIG) private config: NgxEditorJSConfig,\n    private readonly plugins: NgxEditorJSPluginService,\n    private zone: NgZone\n  ) {}\n\n  /**\n   * This method creates a new EditorJS instance and adds it to the editor map.\n   * If there is an existing editor it will clean up first before creating a new one\n   * @param holder The ID of the holder of the instance\n   * @param blocks Optional initial set of blocks to render in the editor\n   * @param excludeTools String array of keys to not include with this editor\n   * @param autoSave When an instance changes we update the block map, set to false if you want to disable\n   */\n  public createEditor(holder: string, blocks?: Block[], excludeTools?: string[], autoSave = true): void {\n    if (this.editorMap[holder]) {\n      this.destroy(holder);\n    }\n\n    if (this.readyMap[holder]) {\n      this.readyMap[holder].next(false);\n    } else {\n      this.readyMap[holder] = new BehaviorSubject(false);\n    }\n    if (this.changeMap[holder]) {\n      this.changeMap[holder].next(0);\n    } else {\n      this.changeMap[holder] = new BehaviorSubject(0);\n    }\n\n    this.zone.run(() => {\n      const options: EditorConfig = {\n        ...this.config.editorjs,\n        holder,\n        tools: this.plugins.getTools(excludeTools)\n      };\n      if (blocks) {\n        options.data = {\n          blocks,\n          time: Date.now(),\n          version: EditorJS.version\n        };\n      }\n      this.editorMap[holder] = new EditorJS({\n        ...options,\n        onReady: () => {\n          this.readyMap[holder].next(true);\n        },\n        onChange: () => {\n          this.changeMap[holder].next(Date.now());\n          if (autoSave) this.save(holder);\n        }\n      });\n    });\n  }\n\n  /**\n   * Get an `EditorJS` instance, if the instance does not exist it will be created\n   * and returned with the default settings\n   * See the [EditorJS API](https://editorjs.io/api) docs for more details\n   * @param holder The ID of the holder of the instance\n   */\n  public getEditor(holder: string): EditorJS {\n    if (!this.editorMap[holder]) {\n      this.createEditor(holder);\n    }\n    return this.editorMap[holder];\n  }\n\n  /**\n   * Get an observable of the blocks for an `EditorJS` instance\n   * If there is no instance of that name it will throw an error.\n   * @param holder The ID of the holder of the instance\n   */\n  public getBlocks(holder: string): Observable {\n    if (!this.blocksMap[holder]) {\n      this.blocksMap[holder] = new BehaviorSubject([]);\n    }\n    return this.blocksMap[holder].asObservable();\n  }\n\n  /**\n   * Returns an `Observable` of the current ready state, this can be subscribed to before calling\n   * the `createEditor` method\n   * @param holder\n   */\n  public isReady(holder: string): Observable {\n    if (!this.readyMap[holder]) {\n      this.readyMap[holder] = new BehaviorSubject(false);\n    }\n    return this.readyMap[holder].asObservable();\n  }\n\n  /**\n   * Returns an `Observable` of the current timestamp of the last change\n   * this can be subscribed to before calling the `createEditor` method\n   * @param holder\n   */\n  public hasChanged(holder: string): Observable {\n    if (!this.changeMap[holder]) {\n      this.changeMap[holder] = new BehaviorSubject(0);\n    }\n    return this.changeMap[holder].asObservable();\n  }\n\n  /**\n   * This method updates the blocks within the `EditorJS` instance.\n   * If there is no instance of that name it will throw an error.\n   * @param holder The ID of the holder of the instance\n   * @param blocks The array of `Block` elements to render\n   */\n  public update(holder: string, blocks: Block[]) {\n    if (!this.editorMap[holder]) {\n      throw new Error(`No EditorJS instance for ${holder}`);\n    }\n    this.zone.run(() => {\n      this.editorMap[holder].blocks.clear();\n      this.editorMap[holder].blocks.render({\n        blocks,\n        time: Date.now(),\n        version: EditorJS.version\n      });\n    });\n  }\n\n  /**\n   * Calls the `EditorJS` save method which returns an `OutputData` object.\n   * From this the service updates the blocks map and change map values\n   * If there is no instance of that name it will throw an error.\n   * @param holder The ID of the holder of the instance\n   */\n  public save(holder: string): void {\n    if (!this.editorMap[holder]) {\n      throw new Error(`No EditorJS instance for ${holder}`);\n    }\n    this.zone.run(async () => {\n      const outputData = await this.editorMap[holder].saver.save();\n      this.blocksMap[holder].next(outputData.blocks);\n      this.changeMap[holder].next(outputData.time);\n    });\n  }\n\n  /**\n   * Destroy the `EditorJS` instance\n   * It also calls the maps and sets their values back to their defaults and then\n   * completes and destroys them\n   * @param holder The ID of the holder of the instance\n   */\n  public destroy(holder: string): void {\n    // Clean up the maps\n    [['blocksMap', []], ['changeMap', 0], ['readyMap', false]].forEach(([mapKay, value]: [string, any]) => {\n      if (this[mapKay][holder]) {\n        this[mapKay][holder].next(value);\n        this[mapKay][holder].complete();\n        this[mapKay][holder] = null;\n        delete this[mapKay][holder];\n      }\n    });\n    this.zone.run(() => {\n      if (this.editorMap[holder]) {\n        this.editorMap[holder].destroy();\n        this.editorMap[holder] = null;\n        delete this.editorMap[holder];\n      }\n    });\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/NgxEditorjsDemoModule.html":{"url":"modules/NgxEditorjsDemoModule.html","title":"module - NgxEditorjsDemoModule","body":"\n                   \n\n\n\n\n    Modules\n    NgxEditorjsDemoModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_NgxEditorjsDemoModule\n\n\n\ncluster_NgxEditorjsDemoModule_declarations\n\n\n\ncluster_NgxEditorjsDemoModule_imports\n\n\n\ncluster_NgxEditorjsDemoModule_exports\n\n\n\n\nEditorPageComponent\n\nEditorPageComponent\n\n\n\nNgxEditorjsDemoModule\n\nNgxEditorjsDemoModule\n\nNgxEditorjsDemoModule -->\n\nEditorPageComponent->NgxEditorjsDemoModule\n\n\n\n\n\nPageContainerComponent\n\nPageContainerComponent\n\nNgxEditorjsDemoModule -->\n\nPageContainerComponent->NgxEditorjsDemoModule\n\n\n\n\n\nEditorPageComponent \n\nEditorPageComponent \n\nEditorPageComponent  -->\n\nNgxEditorjsDemoModule->EditorPageComponent \n\n\n\n\n\nPageContainerComponent \n\nPageContainerComponent \n\nPageContainerComponent  -->\n\nNgxEditorjsDemoModule->PageContainerComponent \n\n\n\n\n\nPageStoreModule \n\nPageStoreModule \n\nPageStoreModule  -->\n\nNgxEditorjsDemoModule->PageStoreModule \n\n\n\n\n\nNgxEditorJSModule\n\nNgxEditorJSModule\n\nNgxEditorjsDemoModule -->\n\nNgxEditorJSModule->NgxEditorjsDemoModule\n\n\n\n\n\nPageStoreModule\n\nPageStoreModule\n\nNgxEditorjsDemoModule -->\n\nPageStoreModule->NgxEditorjsDemoModule\n\n\n\n\n\nPluginCodeModule\n\nPluginCodeModule\n\nNgxEditorjsDemoModule -->\n\nPluginCodeModule->NgxEditorjsDemoModule\n\n\n\n\n\nPluginHeaderModule\n\nPluginHeaderModule\n\nNgxEditorjsDemoModule -->\n\nPluginHeaderModule->NgxEditorjsDemoModule\n\n\n\n\n\nPluginLinkModule\n\nPluginLinkModule\n\nNgxEditorjsDemoModule -->\n\nPluginLinkModule->NgxEditorjsDemoModule\n\n\n\n\n\nPluginListModule\n\nPluginListModule\n\nNgxEditorjsDemoModule -->\n\nPluginListModule->NgxEditorjsDemoModule\n\n\n\n\n\nPluginMarkerModule\n\nPluginMarkerModule\n\nNgxEditorjsDemoModule -->\n\nPluginMarkerModule->NgxEditorjsDemoModule\n\n\n\n\n\nPluginParagraphModule\n\nPluginParagraphModule\n\nNgxEditorjsDemoModule -->\n\nPluginParagraphModule->NgxEditorjsDemoModule\n\n\n\n\n\nPluginSimpleImageModule\n\nPluginSimpleImageModule\n\nNgxEditorjsDemoModule -->\n\nPluginSimpleImageModule->NgxEditorjsDemoModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            libs/ngx-editorjs-demo/src/lib/ngx-editorjs-demo.module.ts\n        \n\n\n\n\n        \n            \n                \n                    Declarations\n                    \n                        \n                            EditorPageComponent\n                        \n                        \n                            PageContainerComponent\n                        \n                    \n                \n                \n                    EntryComponents\n                    \n                        \n                            PageContainerComponent\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            NgxEditorJSModule\n                        \n                        \n                            PageStoreModule\n                        \n                        \n                            PluginCodeModule\n                        \n                        \n                            PluginHeaderModule\n                        \n                        \n                            PluginLinkModule\n                        \n                        \n                            PluginListModule\n                        \n                        \n                            PluginMarkerModule\n                        \n                        \n                            PluginParagraphModule\n                        \n                        \n                            PluginSimpleImageModule\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            EditorPageComponent\n                        \n                        \n                            PageContainerComponent\n                        \n                        \n                            PageStoreModule\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\nimport { ReactiveFormsModule } from '@angular/forms';\nimport { MatButtonModule, MatCardModule } from '@angular/material';\nimport { RouterModule } from '@angular/router';\nimport { NgxEditorJSModule, UserPlugins } from '@tinynodes/ngx-editorjs';\nimport {\n  PluginCodeModule,\n  PluginHeaderModule,\n  PluginLinkModule,\n  PluginListModule,\n  PluginMarkerModule,\n  PluginParagraphModule,\n  PluginSimpleImageModule\n} from '@tinynodes/ngx-editorjs-plugins';\nimport { MarkdownModule } from 'ngx-markdown';\nimport { createNgxEditorJSDemoTools } from './config';\nimport { EditorPageComponent } from './containers/editor-page/editor-page.component';\nimport { PageContainerComponent } from './containers/page-container/page-container.component';\nimport { ngxEditorjsDemoRoutes } from './ngx-editorjs-demo.routes';\nimport { PageStoreModule } from './store/pages/pages.module';\n\n@NgModule({\n  imports: [\n    CommonModule,\n    RouterModule.forChild(ngxEditorjsDemoRoutes),\n    MarkdownModule.forChild(),\n    ReactiveFormsModule,\n    PageStoreModule,\n    NgxEditorJSModule,\n    PluginHeaderModule,\n    PluginParagraphModule,\n    PluginListModule,\n    PluginCodeModule,\n    PluginSimpleImageModule,\n    PluginLinkModule,\n    PluginMarkerModule,\n    MatCardModule,\n    MatButtonModule\n  ],\n  providers: [\n    {\n      provide: UserPlugins,\n      useFactory: createNgxEditorJSDemoTools\n    }\n  ],\n  declarations: [EditorPageComponent, PageContainerComponent],\n  exports: [EditorPageComponent, PageStoreModule, PageContainerComponent],\n  entryComponents: [PageContainerComponent]\n})\nexport class NgxEditorjsDemoModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/NgxEditorjsNgrxModule.html":{"url":"modules/NgxEditorjsNgrxModule.html","title":"module - NgxEditorjsNgrxModule","body":"\n                   \n\n\n\n\n    Modules\n    NgxEditorjsNgrxModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_NgxEditorjsNgrxModule\n\n\n\ncluster_NgxEditorjsNgrxModule_imports\n\n\n\n\nNgxEditorJSModule\n\nNgxEditorJSModule\n\n\n\nNgxEditorjsNgrxModule\n\nNgxEditorjsNgrxModule\n\nNgxEditorjsNgrxModule -->\n\nNgxEditorJSModule->NgxEditorjsNgrxModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            libs/ngx-editorjs-ngrx/src/lib/ngx-editorjs-ngrx.module.ts\n        \n\n\n\n\n        \n            \n                \n                    Imports\n                    \n                        \n                            NgxEditorJSModule\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { EffectsModule } from '@ngrx/effects';\nimport { NgxEditorJSModule } from '@tinynodes/ngx-editorjs';\n\n@NgModule({\n  imports: [CommonModule, NgxEditorJSModule, EffectsModule.forFeature([])]\n})\nexport class NgxEditorjsNgrxModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/NgxEditorjsPluginsModule.html":{"url":"modules/NgxEditorjsPluginsModule.html","title":"module - NgxEditorjsPluginsModule","body":"\n                   \n\n\n\n\n    Modules\n    NgxEditorjsPluginsModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_NgxEditorjsPluginsModule\n\n\n\ncluster_NgxEditorjsPluginsModule_imports\n\n\n\ncluster_NgxEditorjsPluginsModule_exports\n\n\n\n\nPluginCodeModule\n\nPluginCodeModule\n\n\n\nNgxEditorjsPluginsModule\n\nNgxEditorjsPluginsModule\n\nNgxEditorjsPluginsModule -->\n\nPluginCodeModule->NgxEditorjsPluginsModule\n\n\n\n\n\nPluginHeaderModule\n\nPluginHeaderModule\n\nNgxEditorjsPluginsModule -->\n\nPluginHeaderModule->NgxEditorjsPluginsModule\n\n\n\n\n\nPluginImageModule\n\nPluginImageModule\n\nNgxEditorjsPluginsModule -->\n\nPluginImageModule->NgxEditorjsPluginsModule\n\n\n\n\n\nPluginLinkModule\n\nPluginLinkModule\n\nNgxEditorjsPluginsModule -->\n\nPluginLinkModule->NgxEditorjsPluginsModule\n\n\n\n\n\nPluginListModule\n\nPluginListModule\n\nNgxEditorjsPluginsModule -->\n\nPluginListModule->NgxEditorjsPluginsModule\n\n\n\n\n\nPluginMarkerModule\n\nPluginMarkerModule\n\nNgxEditorjsPluginsModule -->\n\nPluginMarkerModule->NgxEditorjsPluginsModule\n\n\n\n\n\nPluginParagraphModule\n\nPluginParagraphModule\n\nNgxEditorjsPluginsModule -->\n\nPluginParagraphModule->NgxEditorjsPluginsModule\n\n\n\n\n\nPluginSimpleImageModule\n\nPluginSimpleImageModule\n\nNgxEditorjsPluginsModule -->\n\nPluginSimpleImageModule->NgxEditorjsPluginsModule\n\n\n\n\n\nPluginCodeModule \n\nPluginCodeModule \n\nPluginCodeModule  -->\n\nNgxEditorjsPluginsModule->PluginCodeModule \n\n\n\n\n\nPluginHeaderModule \n\nPluginHeaderModule \n\nPluginHeaderModule  -->\n\nNgxEditorjsPluginsModule->PluginHeaderModule \n\n\n\n\n\nPluginImageModule \n\nPluginImageModule \n\nPluginImageModule  -->\n\nNgxEditorjsPluginsModule->PluginImageModule \n\n\n\n\n\nPluginLinkModule \n\nPluginLinkModule \n\nPluginLinkModule  -->\n\nNgxEditorjsPluginsModule->PluginLinkModule \n\n\n\n\n\nPluginListModule \n\nPluginListModule \n\nPluginListModule  -->\n\nNgxEditorjsPluginsModule->PluginListModule \n\n\n\n\n\nPluginMarkerModule \n\nPluginMarkerModule \n\nPluginMarkerModule  -->\n\nNgxEditorjsPluginsModule->PluginMarkerModule \n\n\n\n\n\nPluginParagraphModule \n\nPluginParagraphModule \n\nPluginParagraphModule  -->\n\nNgxEditorjsPluginsModule->PluginParagraphModule \n\n\n\n\n\nPluginSimpleImageModule \n\nPluginSimpleImageModule \n\nPluginSimpleImageModule  -->\n\nNgxEditorjsPluginsModule->PluginSimpleImageModule \n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            libs/ngx-editorjs-plugins/src/lib/ngx-editorjs-plugins.module.ts\n        \n\n\n        \n            Description\n        \n        \n            The NgxEditorjsPluginsModule provides several additional modules\nthat provide a way to easily plug in block and inline tools for EditorJS.\nImporting NgxEditorjsPluginsModule will include all modules, while it\nis also possible to import each individual module as required.\n\n        \n\n\n        \n            \n                \n                    Imports\n                    \n                        \n                            PluginCodeModule\n                        \n                        \n                            PluginHeaderModule\n                        \n                        \n                            PluginImageModule\n                        \n                        \n                            PluginLinkModule\n                        \n                        \n                            PluginListModule\n                        \n                        \n                            PluginMarkerModule\n                        \n                        \n                            PluginParagraphModule\n                        \n                        \n                            PluginSimpleImageModule\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            PluginCodeModule\n                        \n                        \n                            PluginHeaderModule\n                        \n                        \n                            PluginImageModule\n                        \n                        \n                            PluginLinkModule\n                        \n                        \n                            PluginListModule\n                        \n                        \n                            PluginMarkerModule\n                        \n                        \n                            PluginParagraphModule\n                        \n                        \n                            PluginSimpleImageModule\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\nimport { PluginCodeModule } from './plugins/code/code.module';\nimport { PluginHeaderModule } from './plugins/header/header.module';\nimport { PluginImageModule } from './plugins/image/image.module';\nimport { PluginLinkModule } from './plugins/link/link.module';\nimport { PluginListModule } from './plugins/list/list.module';\nimport { PluginMarkerModule } from './plugins/marker/marker.module';\nimport { PluginParagraphModule } from './plugins/paragraph/paragraph.module';\nimport { PluginSimpleImageModule } from './plugins/simple-image/simple-image.module';\n\n/**\n * The `NgxEditorjsPluginsModule` provides several additional modules\n * that provide a way to easily plug in block and inline tools for `EditorJS`.\n *\n * Importing `NgxEditorjsPluginsModule` will include all modules, while it\n * is also possible to import each individual module as required.\n */\n@NgModule({\n  imports: [\n    CommonModule,\n    PluginCodeModule,\n    PluginHeaderModule,\n    PluginImageModule,\n    PluginLinkModule,\n    PluginListModule,\n    PluginMarkerModule,\n    PluginParagraphModule,\n    PluginSimpleImageModule\n  ],\n  exports: [\n    PluginCodeModule,\n    PluginHeaderModule,\n    PluginImageModule,\n    PluginLinkModule,\n    PluginListModule,\n    PluginMarkerModule,\n    PluginParagraphModule,\n    PluginSimpleImageModule\n  ]\n})\nexport class NgxEditorjsPluginsModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/NotReady.html":{"url":"classes/NotReady.html","title":"class - NotReady","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  NotReady\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            libs/ngx-editorjs-ngrx/src/lib/actions/ngx-editorjs.actions.ts\n        \n\n\n\n            \n                Implements\n            \n            \n                        Action\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                payload\n                            \n                            \n                                    Readonly\n                                type\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(payload: literal type)\n                    \n                \n                        \n                            \n                                Defined in libs/ngx-editorjs-ngrx/src/lib/actions/ngx-editorjs.actions.ts:23\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        payload\n                                                  \n                                                        \n                                                                    literal type\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            payload\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     literal type\n\n                        \n                    \n                        \n                            \n                                    Defined in libs/ngx-editorjs-ngrx/src/lib/actions/ngx-editorjs.actions.ts:24\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                            type\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : EditorJSActionTypes.NotReady\n                        \n                    \n                        \n                            \n                                    Defined in libs/ngx-editorjs-ngrx/src/lib/actions/ngx-editorjs.actions.ts:23\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { Action } from '@ngrx/store';\nimport { OutputData } from '@editorjs/editorjs';\n\nexport enum EditorJSActionTypes {\n  SaveStart = '[ngx-editorjs] Start Save',\n  SaveEnd = '[ngx-editorjs] Start End',\n  NotReady = '[ngx-editorjs] Not Ready',\n  Ready = '[ngx-editorjs] Ready',\n  Changed = '[ngx-editorjs] Changed'\n}\n\nexport class SaveStart implements Action {\n  readonly type = EditorJSActionTypes.SaveStart;\n  constructor(public payload: { holder: string }) {}\n}\n\nexport class SaveEnd implements Action {\n  readonly type = EditorJSActionTypes.SaveEnd;\n  constructor(public payload: { holder: string; data: OutputData }) {}\n}\n\nexport class NotReady implements Action {\n  readonly type = EditorJSActionTypes.NotReady;\n  constructor(public payload: { holder: string }) {}\n}\n\nexport class Ready implements Action {\n  readonly type = EditorJSActionTypes.Ready;\n  constructor(public payload: { holder: string }) {}\n}\n\nexport class Changed implements Action {\n  readonly type = EditorJSActionTypes.Changed;\n  constructor(public payload: { holder: string; data: OutputData }) {}\n}\n\nexport type NgxEditorJSActions = SaveStart | SaveEnd | NotReady | Ready | Changed;\n\n    \n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/Page.html":{"url":"interfaces/Page.html","title":"interface - Page","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  Page\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            libs/ngx-editorjs-demo/src/lib/store/pages/pages.models.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        blocks\n                                \n                                \n                                        id\n                                \n                                \n                                        pageTags\n                                \n                                \n                                        pageTitle\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        blocks\n                                    \n                                \n                                \n                                    \n                                        blocks:     PageBlock[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     PageBlock[]\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        id\n                                    \n                                \n                                \n                                    \n                                        id:     ID\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     ID\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        pageTags\n                                    \n                                \n                                \n                                    \n                                        pageTags:         Tag[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         Tag[]\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        pageTitle\n                                    \n                                \n                                \n                                    \n                                        pageTitle:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { ID } from '@datorama/akita';\nimport { Block } from '@tinynodes/ngx-editorjs';\n\nexport interface Tag {\n  key: string;\n}\n\nexport interface PageBlock extends Block {\n  id: ID;\n}\n\nexport interface Page {\n  id: ID;\n  pageTitle: string;\n  pageTags: Tag[];\n  blocks: PageBlock[];\n}\n\n    \n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/PageBlock.html":{"url":"interfaces/PageBlock.html","title":"interface - PageBlock","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  PageBlock\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            libs/ngx-editorjs-demo/src/lib/store/pages/pages.models.ts\n        \n\n\n            \n                Extends\n            \n            \n                        Block\n            \n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        id\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        id\n                                    \n                                \n                                \n                                    \n                                        id:     ID\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     ID\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { ID } from '@datorama/akita';\nimport { Block } from '@tinynodes/ngx-editorjs';\n\nexport interface Tag {\n  key: string;\n}\n\nexport interface PageBlock extends Block {\n  id: ID;\n}\n\nexport interface Page {\n  id: ID;\n  pageTitle: string;\n  pageTags: Tag[];\n  blocks: PageBlock[];\n}\n\n    \n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/PageContainerComponent.html":{"url":"components/PageContainerComponent.html","title":"component - PageContainerComponent","body":"\n                   \n\n\n\n\n\n  Components\n  PageContainerComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    libs/ngx-editorjs-demo/src/lib/containers/page-container/page-container.component.ts\n\n\n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                ngx-page-container\n            \n\n            \n                styleUrls\n                page-container.component.scss\n            \n\n\n\n            \n                templateUrl\n                page-container.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n\n\n\n\n\n\n                    \n                        \n                            Accessors\n                        \n                    \n                    \n                        \n                            \n                                \n                                    pages\n                                \n                            \n                        \n                    \n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(pagesService: PagesService)\n                    \n                \n                        \n                            \n                                Defined in libs/ngx-editorjs-demo/src/lib/containers/page-container/page-container.component.ts:11\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        pagesService\n                                                  \n                                                        \n                                                                        PagesService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n\n\n    \n    \n        Accessors\n    \n        \n            \n                \n                    \n                        \n                        pages\n                    \n                \n\n                \n                    \n                        getpages()\n                    \n                \n                            \n                                \n                                    Defined in libs/ngx-editorjs-demo/src/lib/containers/page-container/page-container.component.ts:14\n                                \n                            \n\n            \n        \n\n\n\n\n    \n        import { Component } from '@angular/core';\nimport { Observable } from 'rxjs';\nimport { Page } from '../../store/pages/pages.models';\nimport { PagesService } from '../../store/pages/pages.service';\n\n@Component({\n  selector: 'ngx-page-container',\n  templateUrl: 'page-container.component.html',\n  styleUrls: ['page-container.component.scss']\n})\nexport class PageContainerComponent {\n  constructor(private readonly pagesService: PagesService) {}\n\n  get pages(): Observable {\n    return this.pagesService.pages;\n  }\n}\n\n    \n\n    \n        \n  Ngx-EditorJS Pages Manager\n  A useful demo of the\n    @tinynodes/ngx-editorjs\n    module\n  \n    Go to Demo &gt;\n  \n  \n    \n  \n\n\n    \n\n    \n                \n                    page-container.component.scss\n                \n                :host {\n  width: 100%;\n  height: 100vh;\n}\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '  Ngx-EditorJS Pages Manager  A useful demo of the    @tinynodes/ngx-editorjs    module      Go to Demo >          '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'tinynodes-root'},{'name': 'EditorPageComponent', 'selector': 'ngx-editor-page'},{'name': 'NavBarComponent', 'selector': 'tinynodes-nav-bar'},{'name': 'NgxEditorJSComponent', 'selector': 'ngx-editorjs'},{'name': 'PageContainerComponent', 'selector': 'ngx-page-container'},{'name': 'SidebarComponent', 'selector': 'tinynodes-sidebar'}];\n    var DIRECTIVES = [{'name': 'NgxEditorJSDirective', 'selector': '[ngxEditorJS]'}];\n    var ACTUAL_COMPONENT = {'name': 'PageContainerComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/PageStoreModule.html":{"url":"modules/PageStoreModule.html","title":"module - PageStoreModule","body":"\n                   \n\n\n\n\n    Modules\n    PageStoreModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_PageStoreModule\n\n\n\ncluster_PageStoreModule_providers\n\n\n\n\nPagesQuery\n\nPagesQuery\n\n\n\nPageStoreModule\n\nPageStoreModule\n\nPageStoreModule -->\n\nPagesQuery->PageStoreModule\n\n\n\n\n\nPagesService\n\nPagesService\n\nPageStoreModule -->\n\nPagesService->PageStoreModule\n\n\n\n\n\nPagesStore\n\nPagesStore\n\nPageStoreModule -->\n\nPagesStore->PageStoreModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            libs/ngx-editorjs-demo/src/lib/store/pages/pages.module.ts\n        \n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            PagesQuery\n                        \n                        \n                            PagesService\n                        \n                        \n                            PagesStore\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { NgModule } from '@angular/core';\nimport { PagesQuery } from './pages.query';\nimport { PagesService } from './pages.service';\nimport { PagesStore } from './pages.store';\n\n@NgModule({\n  providers: [PagesStore, PagesQuery, PagesService]\n})\nexport class PageStoreModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/PagesQuery.html":{"url":"injectables/PagesQuery.html","title":"injectable - PagesQuery","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  PagesQuery\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            libs/ngx-editorjs-demo/src/lib/store/pages/pages.query.ts\n        \n\n\n            \n                Extends\n            \n            \n                    QueryEntity\n            \n\n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(store: PagesStore)\n                    \n                \n                        \n                            \n                                Defined in libs/ngx-editorjs-demo/src/lib/store/pages/pages.query.ts:7\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        store\n                                                  \n                                                        \n                                                                        PagesStore\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { QueryEntity } from '@datorama/akita';\nimport { Page } from './pages.models';\nimport { PagesState, PagesStore } from './pages.store';\n\n@Injectable()\nexport class PagesQuery extends QueryEntity {\n  constructor(protected store: PagesStore) {\n    super(store);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/PagesService.html":{"url":"injectables/PagesService.html","title":"injectable - PagesService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  PagesService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            libs/ngx-editorjs-demo/src/lib/store/pages/pages.service.ts\n        \n\n            \n                Description\n            \n            \n                This page service provides a way to save and render pages\nvia the store\n\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                    Readonly\n                                query\n                            \n                            \n                                    Public\n                                    Readonly\n                                store\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                add\n                            \n                            \n                                addBlock\n                            \n                            \n                                delete\n                            \n                            \n                                removeBlock\n                            \n                            \n                                setBlocks\n                            \n                            \n                                upsert\n                            \n                        \n                    \n                \n\n\n\n\n\n                    \n                        \n                            Accessors\n                        \n                    \n                    \n                        \n                            \n                                \n                                    pages\n                                \n                            \n                        \n                    \n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(query: PagesQuery, store: PagesStore)\n                    \n                \n                        \n                            \n                                Defined in libs/ngx-editorjs-demo/src/lib/store/pages/pages.service.ts:15\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        query\n                                                  \n                                                        \n                                                                        PagesQuery\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        store\n                                                  \n                                                        \n                                                                        PagesStore\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            add\n                        \n                        \n                    \n                \n            \n            \n                \nadd(page?: Page)\n                \n            \n\n\n            \n                \n                    Defined in libs/ngx-editorjs-demo/src/lib/store/pages/pages.service.ts:32\n                \n            \n\n\n            \n                \n                    Add a page to the store\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    page\n                                    \n                                                Page\n                                    \n\n                                    \n                                        Yes\n                                    \n\n\n                                    \n                                        An optional page to be added\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            addBlock\n                        \n                        \n                    \n                \n            \n            \n                \naddBlock(pageId: ID, block: Block)\n                \n            \n\n\n            \n                \n                    Defined in libs/ngx-editorjs-demo/src/lib/store/pages/pages.service.ts:64\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    pageId\n                                    \n                                            ID\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    block\n                                    \n                                                Block\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            delete\n                        \n                        \n                    \n                \n            \n            \n                \ndelete(pageId: ID)\n                \n            \n\n\n            \n                \n                    Defined in libs/ngx-editorjs-demo/src/lib/store/pages/pages.service.ts:56\n                \n            \n\n\n            \n                \n                    Removes a page\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    pageId\n                                    \n                                            ID\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        The ID of the page to be removed\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            removeBlock\n                        \n                        \n                    \n                \n            \n            \n                \nremoveBlock(pageId: ID, block: PageBlock)\n                \n            \n\n\n            \n                \n                    Defined in libs/ngx-editorjs-demo/src/lib/store/pages/pages.service.ts:70\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    pageId\n                                    \n                                            ID\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    block\n                                    \n                                                PageBlock\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            setBlocks\n                        \n                        \n                    \n                \n            \n            \n                \nsetBlocks(pageId: ID | any, blocks: PageBlock[])\n                \n            \n\n\n            \n                \n                    Defined in libs/ngx-editorjs-demo/src/lib/store/pages/pages.service.ts:60\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    pageId\n                                    \n                                            ID | any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    blocks\n                                    \n                                            PageBlock[]\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            upsert\n                        \n                        \n                    \n                \n            \n            \n                \nupsert(page: Page)\n                \n            \n\n\n            \n                \n                    Defined in libs/ngx-editorjs-demo/src/lib/store/pages/pages.service.ts:47\n                \n            \n\n\n            \n                \n                    Updates or creates a page\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    page\n                                    \n                                                Page\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        The page to be updated, if not available it will be created\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                                Readonly\n                            query\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         PagesQuery\n\n                        \n                    \n                        \n                            \n                                    Defined in libs/ngx-editorjs-demo/src/lib/store/pages/pages.service.ts:17\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                                Readonly\n                            store\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         PagesStore\n\n                        \n                    \n                        \n                            \n                                    Defined in libs/ngx-editorjs-demo/src/lib/store/pages/pages.service.ts:17\n                            \n                        \n\n\n            \n        \n\n\n            \n    \n        Accessors\n    \n        \n            \n                \n                    \n                        \n                        pages\n                    \n                \n\n                \n                    \n                        getpages()\n                    \n                \n                            \n                                \n                                    Defined in libs/ngx-editorjs-demo/src/lib/store/pages/pages.service.ts:24\n                                \n                            \n                    \n                        \n                                Get an observable of all the pages in the store\n\n\n                                \n                                    Returns :         Observable\n\n                                \n                        \n                    \n\n            \n        \n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { arrayAdd, arrayRemove, guid, ID } from '@datorama/akita';\nimport { Block } from '@tinynodes/ngx-editorjs';\nimport { Observable } from 'rxjs';\nimport { Page, PageBlock } from './pages.models';\nimport { PagesQuery } from './pages.query';\nimport { PagesStore } from './pages.store';\n\n/**\n * This page service provides a way to save and render pages\n * via the store\n */\n@Injectable()\nexport class PagesService {\n  private pages$: Observable;\n\n  constructor(public readonly query: PagesQuery, public readonly store: PagesStore) {\n    this.pages$ = this.query.selectAll();\n  }\n\n  /**\n   * Get an observable of all the pages in the store\n   */\n  get pages(): Observable {\n    return this.pages$;\n  }\n\n  /**\n   * Add a page to the store\n   * @param page An optional page to be added\n   */\n  add(page?: Page) {\n    const newPage: Page = {\n      id: guid(),\n      pageTitle: 'New Page',\n      pageTags: [],\n      blocks: [],\n      ...page\n    };\n    this.store.add(newPage);\n  }\n\n  /**\n   * Updates or creates a page\n   * @param page The page to be updated, if not available it will be created\n   */\n  upsert(page: Page) {\n    if (!page.id) page.id = guid();\n    this.store.upsert(page.id, page);\n  }\n\n  /**\n   * Removes a page\n   * @param pageId The ID of the page to be removed\n   */\n  delete(pageId: ID) {\n    this.store.remove(pageId);\n  }\n\n  setBlocks(pageId: ID | any, blocks: PageBlock[]) {\n    this.store.update(pageId, { blocks });\n  }\n\n  addBlock(pageId: ID, block: Block) {\n    this.store.update(pageId, (entity: Page) => ({\n      blocks: arrayAdd(entity.blocks, { id: guid(), ...block })\n    }));\n  }\n\n  removeBlock(pageId: ID, block: PageBlock) {\n    this.store.update(pageId, (entity: Page) => ({\n      blocks: arrayRemove(entity.blocks, block.id)\n    }));\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/PagesState.html":{"url":"interfaces/PagesState.html","title":"interface - PagesState","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  PagesState\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            libs/ngx-editorjs-demo/src/lib/store/pages/pages.store.ts\n        \n\n\n            \n                Extends\n            \n            \n                    EntityState\n            \n\n\n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { EntityState, EntityStore, StoreConfig } from '@datorama/akita';\nimport { Page } from './pages.models';\n\nexport interface PagesState extends EntityState {}\n\n@Injectable()\n@StoreConfig({ name: 'pages' })\nexport class PagesStore extends EntityStore {\n  constructor() {\n    super();\n  }\n}\n\n    \n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/PagesStore.html":{"url":"injectables/PagesStore.html","title":"injectable - PagesStore","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  PagesStore\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            libs/ngx-editorjs-demo/src/lib/store/pages/pages.store.ts\n        \n\n\n            \n                Extends\n            \n            \n                    EntityStore\n            \n\n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in libs/ngx-editorjs-demo/src/lib/store/pages/pages.store.ts:9\n                            \n                        \n\n            \n        \n\n\n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { EntityState, EntityStore, StoreConfig } from '@datorama/akita';\nimport { Page } from './pages.models';\n\nexport interface PagesState extends EntityState {}\n\n@Injectable()\n@StoreConfig({ name: 'pages' })\nexport class PagesStore extends EntityStore {\n  constructor() {\n    super();\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/Paragraph.html":{"url":"interfaces/Paragraph.html","title":"interface - Paragraph","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  Paragraph\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            libs/ngx-editorjs/src/lib/types/blocks.ts\n        \n\n            \n                Description\n            \n            \n                Default data type for a paragraph block\n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        text\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        text\n                                    \n                                \n                                \n                                    \n                                        text:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    The paragraph text\n\n                                \n                            \n                        \n                    \n            \n    \n\n\n    \n        export interface Block {\n  /**\n   * The EditorJS block type\n   */\n  type: string;\n\n  /**\n   * The data interface for the block type\n   */\n  data: T;\n\n  /**\n   * Additional properties on the type\n   */\n  [key: string]: any;\n}\n\n/**\n * Available list styles, supports `ordered` and `unordered`.\n * A custom string can also be added\n */\nexport type ListStyle = 'ordered' | 'unordered' | string;\n\n/**\n * Default data type for a list block\n */\nexport interface List {\n  /**\n   * The list style\n   */\n  style: ListStyle;\n  /**\n   * List items of type T\n   */\n  items: T[];\n}\n\n/**\n * The default list block is provided by the EditorJS list plugin\n */\nexport interface ListBlock extends Block> {\n  /**\n   * The EditorJS block type\n   */\n  type: 'list';\n}\n\n/**\n * Default data type for a paragraph block\n */\ninterface Paragraph {\n  /**\n   * The paragraph text\n   */\n  text: string;\n}\n\n/**\n * Interface for a paragraph block\n */\nexport interface ParagraphBlock extends Block {\n  /**\n   * The EditorJS block type\n   */\n  type: 'paragraph';\n}\n\n/**\n * Default data type for a header block\n */\ninterface Header {\n  /**\n   * The header text\n   */\n  text: string;\n  /**\n   * The header level from 1-6\n   */\n  level: number;\n}\n\n/**\n * Interface for a header block\n */\nexport interface HeaderBlock extends Block {\n  /**\n   * The EditorJS block type\n   */\n  type: 'header';\n}\n\n/**\n * Default data type for a header block\n */\nexport interface Image {\n  /**\n   * The image URL\n   */\n  url: string;\n  /**\n   * Optional image caption\n   */\n  caption?: string;\n  /**\n   * Optional border property\n   */\n  withBorder?: boolean;\n\n  /**\n   * Optional background property\n   */\n  withBackground?: boolean;\n\n  /**\n   * Optional stretch property\n   */\n  stretched?: boolean;\n}\n\n/**\n * Interface for a image block\n */\nexport interface ImageBlock extends Block {\n  /**\n   * The EditorJS block type\n   */\n  type: 'image';\n}\n\n/**\n * Type of all the basic block type\n */\nexport type BlockTypes = ParagraphBlock | HeaderBlock | ImageBlock | ListBlock | Block;\n\n    \n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/ParagraphBlock.html":{"url":"interfaces/ParagraphBlock.html","title":"interface - ParagraphBlock","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  ParagraphBlock\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            libs/ngx-editorjs/src/lib/types/blocks.ts\n        \n\n            \n                Description\n            \n            \n                Interface for a paragraph block\n\n            \n\n            \n                Extends\n            \n            \n                        Block\n            \n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        type\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        type\n                                    \n                                \n                                \n                                    \n                                        type:     \n\n                                    \n                                \n\n\n\n\n\n\n\n                            \n                                \n                                    The EditorJS block type\n\n                                \n                            \n                        \n                    \n            \n    \n\n\n    \n        export interface Block {\n  /**\n   * The EditorJS block type\n   */\n  type: string;\n\n  /**\n   * The data interface for the block type\n   */\n  data: T;\n\n  /**\n   * Additional properties on the type\n   */\n  [key: string]: any;\n}\n\n/**\n * Available list styles, supports `ordered` and `unordered`.\n * A custom string can also be added\n */\nexport type ListStyle = 'ordered' | 'unordered' | string;\n\n/**\n * Default data type for a list block\n */\nexport interface List {\n  /**\n   * The list style\n   */\n  style: ListStyle;\n  /**\n   * List items of type T\n   */\n  items: T[];\n}\n\n/**\n * The default list block is provided by the EditorJS list plugin\n */\nexport interface ListBlock extends Block> {\n  /**\n   * The EditorJS block type\n   */\n  type: 'list';\n}\n\n/**\n * Default data type for a paragraph block\n */\ninterface Paragraph {\n  /**\n   * The paragraph text\n   */\n  text: string;\n}\n\n/**\n * Interface for a paragraph block\n */\nexport interface ParagraphBlock extends Block {\n  /**\n   * The EditorJS block type\n   */\n  type: 'paragraph';\n}\n\n/**\n * Default data type for a header block\n */\ninterface Header {\n  /**\n   * The header text\n   */\n  text: string;\n  /**\n   * The header level from 1-6\n   */\n  level: number;\n}\n\n/**\n * Interface for a header block\n */\nexport interface HeaderBlock extends Block {\n  /**\n   * The EditorJS block type\n   */\n  type: 'header';\n}\n\n/**\n * Default data type for a header block\n */\nexport interface Image {\n  /**\n   * The image URL\n   */\n  url: string;\n  /**\n   * Optional image caption\n   */\n  caption?: string;\n  /**\n   * Optional border property\n   */\n  withBorder?: boolean;\n\n  /**\n   * Optional background property\n   */\n  withBackground?: boolean;\n\n  /**\n   * Optional stretch property\n   */\n  stretched?: boolean;\n}\n\n/**\n * Interface for a image block\n */\nexport interface ImageBlock extends Block {\n  /**\n   * The EditorJS block type\n   */\n  type: 'image';\n}\n\n/**\n * Type of all the basic block type\n */\nexport type BlockTypes = ParagraphBlock | HeaderBlock | ImageBlock | ListBlock | Block;\n\n    \n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/PluginCode.html":{"url":"injectables/PluginCode.html","title":"injectable - PluginCode","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  PluginCode\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            libs/ngx-editorjs-plugins/src/lib/plugins/code/code.plugin.ts\n        \n\n            \n                Description\n            \n            \n                This plugin returns the tool settings for a  block tool for EditorJS\n\n            \n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                plugin\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            plugin\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    plugin()\n                \n            \n\n\n            \n                \n                    Defined in libs/ngx-editorjs-plugins/src/lib/plugins/code/code.plugin.ts:14\n                \n            \n\n\n            \n                \n                    Returns the ToolSettings for this plugin\n\n\n                    \n                        Returns :     ToolSettings\n\n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport Code from '@editorjs/code';\nimport { ToolSettings } from '@editorjs/editorjs';\nimport { BasePlugin } from '../../types/plugins';\n\n/**\n * This plugin returns the tool settings for a `` block tool for `EditorJS`\n */\n@Injectable()\nexport class PluginCode implements BasePlugin {\n  /**\n   * Returns the `ToolSettings` for this plugin\n   */\n  public plugin(): ToolSettings {\n    return Code;\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/PluginCodeModule.html":{"url":"modules/PluginCodeModule.html","title":"module - PluginCodeModule","body":"\n                   \n\n\n\n\n    Modules\n    PluginCodeModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_PluginCodeModule\n\n\n\ncluster_PluginCodeModule_providers\n\n\n\n\nPluginCode\n\nPluginCode\n\n\n\nPluginCodeModule\n\nPluginCodeModule\n\nPluginCodeModule -->\n\nPluginCode->PluginCodeModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            libs/ngx-editorjs-plugins/src/lib/plugins/code/code.module.ts\n        \n\n\n        \n            Description\n        \n        \n            A module that provides the default EditorJS  block tool.\nSee the GitHub repo for API details\n\n        \n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            PluginCode\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { NgModule } from '@angular/core';\nimport { PluginCode } from './code.plugin';\n\n/**\n * A module that provides the default `EditorJS` `` block tool.\n * See [the GitHub repo](https://github.com/editor-js/code) for API details\n */\n@NgModule({\n  providers: [PluginCode]\n})\nexport class PluginCodeModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/PluginConfig.html":{"url":"interfaces/PluginConfig.html","title":"interface - PluginConfig","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  PluginConfig\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            libs/ngx-editorjs/src/lib/types/plugins.ts\n        \n\n            \n                Description\n            \n            \n                A Module plugin configuration\n\n            \n\n\n\n\n            \n    Indexable\n        \n            \n                \n                    \n                        [key: string]:        BasePlugin\n\n                    \n                \n                        \n                            \n                                Defined in libs/ngx-editorjs/src/lib/types/plugins.ts:7\n                            \n                        \n                \n                    \n                        The key of the plugin and the plugin class extending BasePlugin\n\n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { InjectionToken } from '@angular/core';\nimport { ToolSettings, ToolConstructable } from '@editorjs/editorjs';\n\n/**\n * A Module plugin configuration\n */\nexport interface PluginConfig {\n  /**\n   * The key of the plugin and the plugin class extending `BasePlugin`\n   */\n  [key: string]: BasePlugin;\n}\n\n/**\n * A map of all the tools settings\n */\nexport interface ToolSettingsMap {\n  /**\n   * The key of the plugin and the plugin exported tool settings\n   */\n  [key: string]: ToolConstructable | ToolSettings;\n}\n\n/**\n * Defines the interface for required and optional plugin methods.\n * These methods allow a plugin to return a EditorJS plugin and an optional shortcut\n */\nexport interface BasePlugin {\n  /**\n   * The plugin settings to be returned\n   */\n  plugin: () => ToolConstructable | ToolSettings;\n\n  /**\n   * Optional shortcut for the plugin\n   */\n  shortcut?: () => string;\n}\n\n/**\n * The Injection token for initial plugins as defined in the ngx-editorjs module\n */\nexport const InitialPlugins = new InjectionToken('InitialPlugins');\n\n/**\n * The injection token for adding plugins via your own application\n */\nexport const UserPlugins = new InjectionToken('UserPlugins');\n\n    \n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/PluginConfig-1.html":{"url":"interfaces/PluginConfig-1.html","title":"interface - PluginConfig-1","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  PluginConfig\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            libs/ngx-editorjs-plugins/src/lib/types/plugins.ts\n        \n\n            \n                Description\n            \n            \n                A Module plugin configuration\n\n            \n\n\n\n\n            \n    Indexable\n        \n            \n                \n                    \n                        [key: string]:        BasePlugin\n\n                    \n                \n                        \n                            \n                                Defined in libs/ngx-editorjs-plugins/src/lib/types/plugins.ts:7\n                            \n                        \n                \n                    \n                        The key of the plugin and the plugin class extending BasePlugin\n\n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { InjectionToken } from '@angular/core';\nimport { ToolSettings, ToolConstructable } from '@editorjs/editorjs';\n\n/**\n * A Module plugin configuration\n */\nexport interface PluginConfig {\n  /**\n   * The key of the plugin and the plugin class extending `BasePlugin`\n   */\n  [key: string]: BasePlugin;\n}\n\n/**\n * A map of all the tools settings\n */\nexport interface ToolSettingsMap {\n  /**\n   * The key of the plugin and the plugin exported tool settings\n   */\n  [key: string]: ToolConstructable | ToolSettings;\n}\n\n/**\n * Defines the interface for required and optional plugin methods.\n * These methods allow a plugin to return a EditorJS plugin and an optional shortcut\n */\nexport interface BasePlugin {\n  /**\n   * The plugin settings to be returned\n   */\n  plugin: () => ToolConstructable | ToolSettings;\n\n  /**\n   * Optional shortcut for the plugin\n   */\n  shortcut?: () => string;\n}\n\n/**\n * The Injection token for initial plugins as defined in the ngx-editorjs module\n */\nexport const InitialPlugins = new InjectionToken('InitialPlugins');\n\n/**\n * The injection token for adding plugins via your own application\n */\nexport const UserPlugins = new InjectionToken('UserPlugins');\n\n    \n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/PluginHeader.html":{"url":"injectables/PluginHeader.html","title":"injectable - PluginHeader","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  PluginHeader\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            libs/ngx-editorjs-plugins/src/lib/plugins/header/header.plugin.ts\n        \n\n            \n                Description\n            \n            \n                This plugin returns the tool settings for a  -  block tool for EditorJS\n\n            \n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                plugin\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            plugin\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    plugin()\n                \n            \n\n\n            \n                \n                    Defined in libs/ngx-editorjs-plugins/src/lib/plugins/header/header.plugin.ts:14\n                \n            \n\n\n            \n                \n                    Returns the plugin settings\n\n\n                    \n                        Returns :     ToolSettings\n\n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { ToolSettings } from '@editorjs/editorjs';\nimport Header from '@editorjs/header';\nimport { BasePlugin } from '../../types/plugins';\n\n/**\n * This plugin returns the tool settings for a ` - ` block tool for `EditorJS`\n */\n@Injectable()\nexport class PluginHeader implements BasePlugin {\n  /**\n   * Returns the plugin settings\n   */\n  public plugin(): ToolSettings {\n    return Header;\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/PluginHeaderModule.html":{"url":"modules/PluginHeaderModule.html","title":"module - PluginHeaderModule","body":"\n                   \n\n\n\n\n    Modules\n    PluginHeaderModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_PluginHeaderModule\n\n\n\ncluster_PluginHeaderModule_providers\n\n\n\n\nPluginHeader\n\nPluginHeader\n\n\n\nPluginHeaderModule\n\nPluginHeaderModule\n\nPluginHeaderModule -->\n\nPluginHeader->PluginHeaderModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            libs/ngx-editorjs-plugins/src/lib/plugins/header/header.module.ts\n        \n\n\n        \n            Description\n        \n        \n            A module that provides the default EditorJS header block tool.\nSee the GitHub repo for API details\n\n        \n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            PluginHeader\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { NgModule } from '@angular/core';\nimport { PluginHeader } from './header.plugin';\n\n/**\n * A module that provides the default `EditorJS` header block tool.\n * See [the GitHub repo](https://github.com/editor-js/header) for API details\n */\n@NgModule({\n  providers: [PluginHeader]\n})\nexport class PluginHeaderModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/PluginImage.html":{"url":"injectables/PluginImage.html","title":"injectable - PluginImage","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  PluginImage\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            libs/ngx-editorjs-plugins/src/lib/plugins/image/image.plugin.ts\n        \n\n            \n                Description\n            \n            \n                This plugin returns the tool settings for a  -  block tool for EditorJS\n\n            \n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                plugin\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            plugin\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    plugin()\n                \n            \n\n\n            \n                \n                    Defined in libs/ngx-editorjs-plugins/src/lib/plugins/image/image.plugin.ts:14\n                \n            \n\n\n            \n                \n                    Returns the plugin settings\n\n\n                    \n                        Returns :     ToolSettings\n\n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { ToolSettings } from '@editorjs/editorjs';\nimport Image from '@editorjs/image';\nimport { BasePlugin } from '../../types/plugins';\n\n/**\n * This plugin returns the tool settings for a ` - ` block tool for `EditorJS`\n */\n@Injectable()\nexport class PluginImage implements BasePlugin {\n  /**\n   * Returns the plugin settings\n   */\n  public plugin(): ToolSettings {\n    return Image;\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/PluginImageModule.html":{"url":"modules/PluginImageModule.html","title":"module - PluginImageModule","body":"\n                   \n\n\n\n\n    Modules\n    PluginImageModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_PluginImageModule\n\n\n\ncluster_PluginImageModule_providers\n\n\n\n\nPluginImage\n\nPluginImage\n\n\n\nPluginImageModule\n\nPluginImageModule\n\nPluginImageModule -->\n\nPluginImage->PluginImageModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            libs/ngx-editorjs-plugins/src/lib/plugins/image/image.module.ts\n        \n\n\n        \n            Description\n        \n        \n            A module that provides the default EditorJS  block tool.\nSee the GitHub repo for API details\n\n        \n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            PluginImage\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { NgModule } from '@angular/core';\nimport { PluginImage } from './image.plugin';\n\n/**\n * A module that provides the default `EditorJS` `` block tool.\n * See [the GitHub repo](https://github.com/editor-js/image) for API details\n */\n@NgModule({\n  providers: [PluginImage]\n})\nexport class PluginImageModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/PluginLink.html":{"url":"injectables/PluginLink.html","title":"injectable - PluginLink","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  PluginLink\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            libs/ngx-editorjs-plugins/src/lib/plugins/link/link.plugin.ts\n        \n\n            \n                Description\n            \n            \n                This plugin returns the tool settings for a  block tool for EditorJS\n\n            \n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                plugin\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            plugin\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    plugin()\n                \n            \n\n\n            \n                \n                    Defined in libs/ngx-editorjs-plugins/src/lib/plugins/link/link.plugin.ts:14\n                \n            \n\n\n            \n                \n                    Returns the plugin settings\n\n\n                    \n                        Returns :     ToolSettings\n\n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { ToolSettings } from '@editorjs/editorjs';\nimport Link from '@editorjs/link';\nimport { BasePlugin } from '../../types/plugins';\n\n/**\n * This plugin returns the tool settings for a `` block tool for `EditorJS`\n */\n@Injectable()\nexport class PluginLink implements BasePlugin {\n  /**\n   * Returns the plugin settings\n   */\n  public plugin(): ToolSettings {\n    return Link;\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/PluginLinkModule.html":{"url":"modules/PluginLinkModule.html","title":"module - PluginLinkModule","body":"\n                   \n\n\n\n\n    Modules\n    PluginLinkModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_PluginLinkModule\n\n\n\ncluster_PluginLinkModule_providers\n\n\n\n\nPluginLink\n\nPluginLink\n\n\n\nPluginLinkModule\n\nPluginLinkModule\n\nPluginLinkModule -->\n\nPluginLink->PluginLinkModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            libs/ngx-editorjs-plugins/src/lib/plugins/link/link.module.ts\n        \n\n\n        \n            Description\n        \n        \n            A module that provides the default EditorJS  block tool.\nSee the GitHub repo for API details\n\n        \n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            PluginLink\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { NgModule } from '@angular/core';\nimport { PluginLink } from './link.plugin';\n\n/**\n * A module that provides the default `EditorJS` `` block tool.\n * See [the GitHub repo](https://github.com/editor-js/link) for API details\n */\n@NgModule({\n  providers: [PluginLink]\n})\nexport class PluginLinkModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/PluginList.html":{"url":"injectables/PluginList.html","title":"injectable - PluginList","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  PluginList\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            libs/ngx-editorjs-plugins/src/lib/plugins/list/list.plugin.ts\n        \n\n            \n                Description\n            \n            \n                This plugin returns the tool settings for a  and  block tool for EditorJS\n\n            \n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                plugin\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            plugin\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    plugin()\n                \n            \n\n\n            \n                \n                    Defined in libs/ngx-editorjs-plugins/src/lib/plugins/list/list.plugin.ts:14\n                \n            \n\n\n            \n                \n                    Returns the plugin settings\n\n\n                    \n                        Returns :     ToolSettings\n\n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { ToolSettings } from '@editorjs/editorjs';\nimport List from '@editorjs/list';\nimport { BasePlugin } from '../../types/plugins';\n\n/**\n * This plugin returns the tool settings for a `` and `` block tool for `EditorJS`\n */\n@Injectable()\nexport class PluginList implements BasePlugin {\n  /**\n   * Returns the plugin settings\n   */\n  public plugin(): ToolSettings {\n    return List;\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/PluginListModule.html":{"url":"modules/PluginListModule.html","title":"module - PluginListModule","body":"\n                   \n\n\n\n\n    Modules\n    PluginListModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_PluginListModule\n\n\n\ncluster_PluginListModule_providers\n\n\n\n\nPluginList\n\nPluginList\n\n\n\nPluginListModule\n\nPluginListModule\n\nPluginListModule -->\n\nPluginList->PluginListModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            libs/ngx-editorjs-plugins/src/lib/plugins/list/list.module.ts\n        \n\n\n        \n            Description\n        \n        \n            A module that provides the default EditorJS  and  block tool.\nSee the GitHub repo for API details\n\n        \n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            PluginList\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { NgModule } from '@angular/core';\nimport { PluginList } from './list.plugin';\n\n/**\n * A module that provides the default `EditorJS` `` and `` block tool.\n * See [the GitHub repo](https://github.com/editor-js/list) for API details\n */\n@NgModule({\n  providers: [PluginList]\n})\nexport class PluginListModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/PluginMarker.html":{"url":"injectables/PluginMarker.html","title":"injectable - PluginMarker","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  PluginMarker\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            libs/ngx-editorjs-plugins/src/lib/plugins/marker/marker.plugin.ts\n        \n\n            \n                Description\n            \n            \n                This plugin returns the tool settings for a inline marker tool for EditorJS\n\n            \n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                plugin\n                            \n                            \n                                    Public\n                                shortcut\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            plugin\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    plugin()\n                \n            \n\n\n            \n                \n                    Defined in libs/ngx-editorjs-plugins/src/lib/plugins/marker/marker.plugin.ts:14\n                \n            \n\n\n            \n                \n                    Returns the plugin settings\n\n\n                    \n                        Returns :     ToolSettings\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            shortcut\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    shortcut()\n                \n            \n\n\n            \n                \n                    Defined in libs/ngx-editorjs-plugins/src/lib/plugins/marker/marker.plugin.ts:20\n                \n            \n\n\n            \n                \n                    Returns the plugin shortcut\n\n\n                    \n                        Returns :         string\n\n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { ToolSettings } from '@editorjs/editorjs';\nimport Marker from '@editorjs/marker';\nimport { BasePlugin } from '../../types/plugins';\n\n/**\n * This plugin returns the tool settings for a inline marker tool for `EditorJS`\n */\n@Injectable()\nexport class PluginMarker implements BasePlugin {\n  /**\n   * Returns the plugin settings\n   */\n  public plugin(): ToolSettings {\n    return Marker;\n  }\n  /**\n   * Returns the plugin shortcut\n   */\n  public shortcut() {\n    return 'CMD+SHIFT+M';\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/PluginMarkerModule.html":{"url":"modules/PluginMarkerModule.html","title":"module - PluginMarkerModule","body":"\n                   \n\n\n\n\n    Modules\n    PluginMarkerModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_PluginMarkerModule\n\n\n\ncluster_PluginMarkerModule_providers\n\n\n\n\nPluginMarker\n\nPluginMarker\n\n\n\nPluginMarkerModule\n\nPluginMarkerModule\n\nPluginMarkerModule -->\n\nPluginMarker->PluginMarkerModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            libs/ngx-editorjs-plugins/src/lib/plugins/marker/marker.module.ts\n        \n\n\n        \n            Description\n        \n        \n            A module that provides the default EditorJS inline marker tool.\nSee the GitHub repo for API details\n\n        \n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            PluginMarker\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { NgModule } from '@angular/core';\nimport { PluginMarker } from './marker.plugin';\n\n/**\n * A module that provides the default `EditorJS` inline marker tool.\n * See [the GitHub repo](https://github.com/editor-js/marker) for API details\n */\n@NgModule({\n  providers: [PluginMarker]\n})\nexport class PluginMarkerModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/PluginParagraph.html":{"url":"injectables/PluginParagraph.html","title":"injectable - PluginParagraph","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  PluginParagraph\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            libs/ngx-editorjs-plugins/src/lib/plugins/paragraph/paragraph.plugin.ts\n        \n\n            \n                Description\n            \n            \n                This plugin returns the tool settings for a  block tool for EditorJS\n\n            \n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                plugin\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            plugin\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    plugin()\n                \n            \n\n\n            \n                \n                    Defined in libs/ngx-editorjs-plugins/src/lib/plugins/paragraph/paragraph.plugin.ts:14\n                \n            \n\n\n            \n                \n                    Returns the plugin settings\n\n\n                    \n                        Returns :     ToolSettings\n\n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport Paragraph from '@editorjs/paragraph';\nimport { ToolSettings } from '@editorjs/editorjs';\nimport { BasePlugin } from '../../types/plugins';\n\n/**\n * This plugin returns the tool settings for a `` block tool for `EditorJS`\n */\n@Injectable()\nexport class PluginParagraph implements BasePlugin {\n  /**\n   * Returns the plugin settings\n   */\n  public plugin(): ToolSettings {\n    return Paragraph;\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/PluginParagraphModule.html":{"url":"modules/PluginParagraphModule.html","title":"module - PluginParagraphModule","body":"\n                   \n\n\n\n\n    Modules\n    PluginParagraphModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_PluginParagraphModule\n\n\n\ncluster_PluginParagraphModule_providers\n\n\n\n\nPluginParagraph\n\nPluginParagraph\n\n\n\nPluginParagraphModule\n\nPluginParagraphModule\n\nPluginParagraphModule -->\n\nPluginParagraph->PluginParagraphModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            libs/ngx-editorjs-plugins/src/lib/plugins/paragraph/paragraph.module.ts\n        \n\n\n        \n            Description\n        \n        \n            A module that provides the default EditorJS  block tool.\nSee the GitHub repo for API details\n\n        \n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            PluginParagraph\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { NgModule } from '@angular/core';\nimport { PluginParagraph } from './paragraph.plugin';\n\n/**\n * A module that provides the default `EditorJS` `` block tool.\n * See [the GitHub repo](https://github.com/editor-js/paragraph) for API details\n */\n@NgModule({\n  providers: [PluginParagraph]\n})\nexport class PluginParagraphModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/PluginSimpleImage.html":{"url":"injectables/PluginSimpleImage.html","title":"injectable - PluginSimpleImage","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  PluginSimpleImage\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            libs/ngx-editorjs-plugins/src/lib/plugins/simple-image/simple-image.plugin.ts\n        \n\n            \n                Description\n            \n            \n                This plugin returns the simple image tool for  block editor EditorJS\n\n            \n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                plugin\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            plugin\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    plugin()\n                \n            \n\n\n            \n                \n                    Defined in libs/ngx-editorjs-plugins/src/lib/plugins/simple-image/simple-image.plugin.ts:14\n                \n            \n\n\n            \n                \n                    Returns the plugin settings\n\n\n                    \n                        Returns :     ToolSettings\n\n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { ToolSettings } from '@editorjs/editorjs';\nimport SimpleImage from '@editorjs/simple-image';\nimport { BasePlugin } from '../../types/plugins';\n\n/**\n * This plugin returns the simple image tool for `` block editor `EditorJS`\n */\n@Injectable()\nexport class PluginSimpleImage implements BasePlugin {\n  /**\n   * Returns the plugin settings\n   */\n  public plugin(): ToolSettings {\n    return SimpleImage;\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/PluginSimpleImageModule.html":{"url":"modules/PluginSimpleImageModule.html","title":"module - PluginSimpleImageModule","body":"\n                   \n\n\n\n\n    Modules\n    PluginSimpleImageModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_PluginSimpleImageModule\n\n\n\ncluster_PluginSimpleImageModule_providers\n\n\n\n\nPluginSimpleImage\n\nPluginSimpleImage\n\n\n\nPluginSimpleImageModule\n\nPluginSimpleImageModule\n\nPluginSimpleImageModule -->\n\nPluginSimpleImage->PluginSimpleImageModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            libs/ngx-editorjs-plugins/src/lib/plugins/simple-image/simple-image.module.ts\n        \n\n\n        \n            Description\n        \n        \n            A module that provides the simple image tools for EditorJS  block tool.\nSee the GitHub repo for API details\n\n        \n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            PluginSimpleImage\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { NgModule } from '@angular/core';\nimport { PluginSimpleImage } from './simple-image.plugin';\n\n/**\n * A module that provides the simple image tools for `EditorJS` `` block tool.\n * See [the GitHub repo](https://github.com/editor-js/image) for API details\n */\n@NgModule({\n  providers: [PluginSimpleImage]\n})\nexport class PluginSimpleImageModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/Ready.html":{"url":"classes/Ready.html","title":"class - Ready","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  Ready\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            libs/ngx-editorjs-ngrx/src/lib/actions/ngx-editorjs.actions.ts\n        \n\n\n\n            \n                Implements\n            \n            \n                        Action\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                payload\n                            \n                            \n                                    Readonly\n                                type\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(payload: literal type)\n                    \n                \n                        \n                            \n                                Defined in libs/ngx-editorjs-ngrx/src/lib/actions/ngx-editorjs.actions.ts:28\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        payload\n                                                  \n                                                        \n                                                                    literal type\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            payload\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     literal type\n\n                        \n                    \n                        \n                            \n                                    Defined in libs/ngx-editorjs-ngrx/src/lib/actions/ngx-editorjs.actions.ts:29\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                            type\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : EditorJSActionTypes.Ready\n                        \n                    \n                        \n                            \n                                    Defined in libs/ngx-editorjs-ngrx/src/lib/actions/ngx-editorjs.actions.ts:28\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { Action } from '@ngrx/store';\nimport { OutputData } from '@editorjs/editorjs';\n\nexport enum EditorJSActionTypes {\n  SaveStart = '[ngx-editorjs] Start Save',\n  SaveEnd = '[ngx-editorjs] Start End',\n  NotReady = '[ngx-editorjs] Not Ready',\n  Ready = '[ngx-editorjs] Ready',\n  Changed = '[ngx-editorjs] Changed'\n}\n\nexport class SaveStart implements Action {\n  readonly type = EditorJSActionTypes.SaveStart;\n  constructor(public payload: { holder: string }) {}\n}\n\nexport class SaveEnd implements Action {\n  readonly type = EditorJSActionTypes.SaveEnd;\n  constructor(public payload: { holder: string; data: OutputData }) {}\n}\n\nexport class NotReady implements Action {\n  readonly type = EditorJSActionTypes.NotReady;\n  constructor(public payload: { holder: string }) {}\n}\n\nexport class Ready implements Action {\n  readonly type = EditorJSActionTypes.Ready;\n  constructor(public payload: { holder: string }) {}\n}\n\nexport class Changed implements Action {\n  readonly type = EditorJSActionTypes.Changed;\n  constructor(public payload: { holder: string; data: OutputData }) {}\n}\n\nexport type NgxEditorJSActions = SaveStart | SaveEnd | NotReady | Ready | Changed;\n\n    \n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/ReadyMap.html":{"url":"interfaces/ReadyMap.html","title":"interface - ReadyMap","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  ReadyMap\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            libs/ngx-editorjs/src/lib/types/maps.ts\n        \n\n            \n                Description\n            \n            \n                A map containing BehaviorSubject of boolean values of the ready state of EditorJS\n\n            \n\n\n\n\n            \n    Indexable\n        \n            \n                \n                    \n                        [key: string]:    BehaviorSubject\n\n                    \n                \n                        \n                            \n                                Defined in libs/ngx-editorjs/src/lib/types/maps.ts:22\n                            \n                        \n            \n        \n\n\n    \n\n\n    \n        import EditorJS from '@editorjs/editorjs';\nimport { BehaviorSubject } from 'rxjs';\nimport { Block } from './blocks';\n\n/**\n * A map containing instances of `EditorJS`\n */\nexport interface EditorMap {\n  [key: string]: EditorJS;\n}\n\n/**\n * A map containing `BehaviorSubject` of `Block` elements from `EditorJS`\n */\nexport interface BlocksMap {\n  [key: string]: BehaviorSubject;\n}\n\n/**\n * A map containing `BehaviorSubject` of `boolean` values of the ready state of `EditorJS`\n */\nexport interface ReadyMap {\n  [key: string]: BehaviorSubject;\n}\n\n/**\n * A map containing `BehaviorSubject` of `number` which is the timestamp of the last `EditorJS` change\n */\nexport interface ChangeMap {\n  [key: string]: BehaviorSubject;\n}\n\n    \n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/SaveEnd.html":{"url":"classes/SaveEnd.html","title":"class - SaveEnd","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  SaveEnd\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            libs/ngx-editorjs-ngrx/src/lib/actions/ngx-editorjs.actions.ts\n        \n\n\n\n            \n                Implements\n            \n            \n                        Action\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                payload\n                            \n                            \n                                    Readonly\n                                type\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(payload: literal type)\n                    \n                \n                        \n                            \n                                Defined in libs/ngx-editorjs-ngrx/src/lib/actions/ngx-editorjs.actions.ts:18\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        payload\n                                                  \n                                                        \n                                                                    literal type\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            payload\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     literal type\n\n                        \n                    \n                        \n                            \n                                    Defined in libs/ngx-editorjs-ngrx/src/lib/actions/ngx-editorjs.actions.ts:19\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                            type\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : EditorJSActionTypes.SaveEnd\n                        \n                    \n                        \n                            \n                                    Defined in libs/ngx-editorjs-ngrx/src/lib/actions/ngx-editorjs.actions.ts:18\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { Action } from '@ngrx/store';\nimport { OutputData } from '@editorjs/editorjs';\n\nexport enum EditorJSActionTypes {\n  SaveStart = '[ngx-editorjs] Start Save',\n  SaveEnd = '[ngx-editorjs] Start End',\n  NotReady = '[ngx-editorjs] Not Ready',\n  Ready = '[ngx-editorjs] Ready',\n  Changed = '[ngx-editorjs] Changed'\n}\n\nexport class SaveStart implements Action {\n  readonly type = EditorJSActionTypes.SaveStart;\n  constructor(public payload: { holder: string }) {}\n}\n\nexport class SaveEnd implements Action {\n  readonly type = EditorJSActionTypes.SaveEnd;\n  constructor(public payload: { holder: string; data: OutputData }) {}\n}\n\nexport class NotReady implements Action {\n  readonly type = EditorJSActionTypes.NotReady;\n  constructor(public payload: { holder: string }) {}\n}\n\nexport class Ready implements Action {\n  readonly type = EditorJSActionTypes.Ready;\n  constructor(public payload: { holder: string }) {}\n}\n\nexport class Changed implements Action {\n  readonly type = EditorJSActionTypes.Changed;\n  constructor(public payload: { holder: string; data: OutputData }) {}\n}\n\nexport type NgxEditorJSActions = SaveStart | SaveEnd | NotReady | Ready | Changed;\n\n    \n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/SaveStart.html":{"url":"classes/SaveStart.html","title":"class - SaveStart","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  SaveStart\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            libs/ngx-editorjs-ngrx/src/lib/actions/ngx-editorjs.actions.ts\n        \n\n\n\n            \n                Implements\n            \n            \n                        Action\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                payload\n                            \n                            \n                                    Readonly\n                                type\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(payload: literal type)\n                    \n                \n                        \n                            \n                                Defined in libs/ngx-editorjs-ngrx/src/lib/actions/ngx-editorjs.actions.ts:13\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        payload\n                                                  \n                                                        \n                                                                    literal type\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            payload\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     literal type\n\n                        \n                    \n                        \n                            \n                                    Defined in libs/ngx-editorjs-ngrx/src/lib/actions/ngx-editorjs.actions.ts:14\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                            type\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : EditorJSActionTypes.SaveStart\n                        \n                    \n                        \n                            \n                                    Defined in libs/ngx-editorjs-ngrx/src/lib/actions/ngx-editorjs.actions.ts:13\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { Action } from '@ngrx/store';\nimport { OutputData } from '@editorjs/editorjs';\n\nexport enum EditorJSActionTypes {\n  SaveStart = '[ngx-editorjs] Start Save',\n  SaveEnd = '[ngx-editorjs] Start End',\n  NotReady = '[ngx-editorjs] Not Ready',\n  Ready = '[ngx-editorjs] Ready',\n  Changed = '[ngx-editorjs] Changed'\n}\n\nexport class SaveStart implements Action {\n  readonly type = EditorJSActionTypes.SaveStart;\n  constructor(public payload: { holder: string }) {}\n}\n\nexport class SaveEnd implements Action {\n  readonly type = EditorJSActionTypes.SaveEnd;\n  constructor(public payload: { holder: string; data: OutputData }) {}\n}\n\nexport class NotReady implements Action {\n  readonly type = EditorJSActionTypes.NotReady;\n  constructor(public payload: { holder: string }) {}\n}\n\nexport class Ready implements Action {\n  readonly type = EditorJSActionTypes.Ready;\n  constructor(public payload: { holder: string }) {}\n}\n\nexport class Changed implements Action {\n  readonly type = EditorJSActionTypes.Changed;\n  constructor(public payload: { holder: string; data: OutputData }) {}\n}\n\nexport type NgxEditorJSActions = SaveStart | SaveEnd | NotReady | Ready | Changed;\n\n    \n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/SidebarComponent.html":{"url":"components/SidebarComponent.html","title":"component - SidebarComponent","body":"\n                   \n\n\n\n\n\n  Components\n  SidebarComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    apps/ngx-tinynodes/src/app/components/sidebar-component/sidebar.component.ts\n\n\n\n\n    \n        Implements\n    \n    \n                    OnInit\n                    OnDestroy\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                tinynodes-sidebar\n            \n\n            \n                styleUrls\n                sidebar.component.scss\n            \n\n\n\n            \n                templateUrl\n                sidebar.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                sidenav\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(app: AppService)\n                    \n                \n                        \n                            \n                                Defined in apps/ngx-tinynodes/src/app/components/sidebar-component/sidebar.component.ts:15\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        app\n                                                  \n                                                        \n                                                                        AppService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            sidenav\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     MatSidenav\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @ViewChild(MatSidenav)\n                            \n                        \n                    \n                        \n                            \n                                    Defined in apps/ngx-tinynodes/src/app/components/sidebar-component/sidebar.component.ts:13\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n    \n        import { Component, OnInit, ViewChild, OnDestroy } from '@angular/core';\nimport { AppService } from '../../store/app/application.service';\nimport { MatSidenav } from '@angular/material';\nimport { Subject } from 'rxjs';\nimport { takeUntil } from 'rxjs/operators';\n\n@Component({\n  selector: 'tinynodes-sidebar',\n  templateUrl: 'sidebar.component.html',\n  styleUrls: ['sidebar.component.scss']\n})\nexport class SidebarComponent implements OnInit, OnDestroy {\n  @ViewChild(MatSidenav) sidenav: MatSidenav;\n\n  private readonly onDestroy$ = new Subject();\n\n  constructor(private readonly app: AppService) {}\n\n  ngOnInit() {\n    this.app.hidden.pipe(takeUntil(this.onDestroy$)).subscribe(value => {\n      value ? this.sidenav.close() : this.sidenav.open();\n    });\n  }\n\n  ngOnDestroy() {\n    this.onDestroy$.next(true);\n    this.onDestroy$.complete();\n  }\n}\n\n    \n\n    \n        \n  \n    Demo: ngx-editorjs\n  \n\n\n    \n\n    \n                \n                    sidebar.component.scss\n                \n                \n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '      Demo: ngx-editorjs  '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'tinynodes-root'},{'name': 'EditorPageComponent', 'selector': 'ngx-editor-page'},{'name': 'NavBarComponent', 'selector': 'tinynodes-nav-bar'},{'name': 'NgxEditorJSComponent', 'selector': 'ngx-editorjs'},{'name': 'PageContainerComponent', 'selector': 'ngx-page-container'},{'name': 'SidebarComponent', 'selector': 'tinynodes-sidebar'}];\n    var DIRECTIVES = [{'name': 'NgxEditorJSDirective', 'selector': '[ngxEditorJS]'}];\n    var ACTUAL_COMPONENT = {'name': 'SidebarComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/Tag.html":{"url":"interfaces/Tag.html","title":"interface - Tag","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  Tag\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            libs/ngx-editorjs-demo/src/lib/store/pages/pages.models.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        key\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        key\n                                    \n                                \n                                \n                                    \n                                        key:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { ID } from '@datorama/akita';\nimport { Block } from '@tinynodes/ngx-editorjs';\n\nexport interface Tag {\n  key: string;\n}\n\nexport interface PageBlock extends Block {\n  id: ID;\n}\n\nexport interface Page {\n  id: ID;\n  pageTitle: string;\n  pageTags: Tag[];\n  blocks: PageBlock[];\n}\n\n    \n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/ToolSettingsMap.html":{"url":"interfaces/ToolSettingsMap.html","title":"interface - ToolSettingsMap","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  ToolSettingsMap\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            libs/ngx-editorjs/src/lib/types/plugins.ts\n        \n\n            \n                Description\n            \n            \n                A map of all the tools settings\n\n            \n\n\n\n\n            \n    Indexable\n        \n            \n                \n                    \n                        [key: string]:    ToolConstructable | ToolSettings\n\n                    \n                \n                        \n                            \n                                Defined in libs/ngx-editorjs/src/lib/types/plugins.ts:17\n                            \n                        \n                \n                    \n                        The key of the plugin and the plugin exported tool settings\n\n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { InjectionToken } from '@angular/core';\nimport { ToolSettings, ToolConstructable } from '@editorjs/editorjs';\n\n/**\n * A Module plugin configuration\n */\nexport interface PluginConfig {\n  /**\n   * The key of the plugin and the plugin class extending `BasePlugin`\n   */\n  [key: string]: BasePlugin;\n}\n\n/**\n * A map of all the tools settings\n */\nexport interface ToolSettingsMap {\n  /**\n   * The key of the plugin and the plugin exported tool settings\n   */\n  [key: string]: ToolConstructable | ToolSettings;\n}\n\n/**\n * Defines the interface for required and optional plugin methods.\n * These methods allow a plugin to return a EditorJS plugin and an optional shortcut\n */\nexport interface BasePlugin {\n  /**\n   * The plugin settings to be returned\n   */\n  plugin: () => ToolConstructable | ToolSettings;\n\n  /**\n   * Optional shortcut for the plugin\n   */\n  shortcut?: () => string;\n}\n\n/**\n * The Injection token for initial plugins as defined in the ngx-editorjs module\n */\nexport const InitialPlugins = new InjectionToken('InitialPlugins');\n\n/**\n * The injection token for adding plugins via your own application\n */\nexport const UserPlugins = new InjectionToken('UserPlugins');\n\n    \n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/ToolSettingsMap-1.html":{"url":"interfaces/ToolSettingsMap-1.html","title":"interface - ToolSettingsMap-1","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  ToolSettingsMap\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            libs/ngx-editorjs-plugins/src/lib/types/plugins.ts\n        \n\n            \n                Description\n            \n            \n                A map of all the tools settings\n\n            \n\n\n\n\n            \n    Indexable\n        \n            \n                \n                    \n                        [key: string]:    ToolConstructable | ToolSettings\n\n                    \n                \n                        \n                            \n                                Defined in libs/ngx-editorjs-plugins/src/lib/types/plugins.ts:17\n                            \n                        \n                \n                    \n                        The key of the plugin and the plugin exported tool settings\n\n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { InjectionToken } from '@angular/core';\nimport { ToolSettings, ToolConstructable } from '@editorjs/editorjs';\n\n/**\n * A Module plugin configuration\n */\nexport interface PluginConfig {\n  /**\n   * The key of the plugin and the plugin class extending `BasePlugin`\n   */\n  [key: string]: BasePlugin;\n}\n\n/**\n * A map of all the tools settings\n */\nexport interface ToolSettingsMap {\n  /**\n   * The key of the plugin and the plugin exported tool settings\n   */\n  [key: string]: ToolConstructable | ToolSettings;\n}\n\n/**\n * Defines the interface for required and optional plugin methods.\n * These methods allow a plugin to return a EditorJS plugin and an optional shortcut\n */\nexport interface BasePlugin {\n  /**\n   * The plugin settings to be returned\n   */\n  plugin: () => ToolConstructable | ToolSettings;\n\n  /**\n   * Optional shortcut for the plugin\n   */\n  shortcut?: () => string;\n}\n\n/**\n * The Injection token for initial plugins as defined in the ngx-editorjs module\n */\nexport const InitialPlugins = new InjectionToken('InitialPlugins');\n\n/**\n * The injection token for adding plugins via your own application\n */\nexport const UserPlugins = new InjectionToken('UserPlugins');\n\n    \n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"changelog.html":{"url":"changelog.html","title":"getting-started - changelog","body":"\n                   \n\nTinynodes Changelog\n\nThis changelog is related to the overall site. You can also find changelogs for libraries under the library docs\n\n\nSunday, 12th May 2019\nThe first devlog is to report that currently version 1.2 has been delayed due to current build issues.\nA bug report has been filed on @nrwl/nx project.\nIn 1.2 there is a new @tinynodes/ngx-editorjs-plugins module that provides exports for several common EditorJS plugins and will be expanded to cover all the officially released plugins.\nWith this change the current build scripts break, and until it is resolved this will block the release.\nIn the meantime I'll continue to work on this small demo site, making it more useful as a good example of an Angular app.\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"contributing.html":{"url":"contributing.html","title":"getting-started - contributing","body":"\n                   \n\nContributing\nWhen contributing to this repository, please first discuss the change you wish to make via issue,\nemail, or any other method with the owners of this repository before making a change.\nPlease note we have a code of conduct, please follow it in all your interactions with the project.\nPull Request Process\n\nEnsure any install or build dependencies are removed before the end of the layer when doing a\nbuild.\nUpdate the README.md with details of changes to the interface, this includes new environment\nvariables, exposed ports, useful file locations and container parameters.\nIncrease the version numbers in any examples files and the README.md to the new version that this\nPull Request would represent. The versioning scheme we use is SemVer.\nYou may merge the Pull Request in once you have the sign-off of two other developers, or if you\ndo not have permission to do that, you may request the second reviewer to merge it for you.\n\nCode of Conduct\nOur Pledge\nIn the interest of fostering an open and welcoming environment, we as\ncontributors and maintainers pledge to making participation in our project and\nour community a harassment-free experience for everyone, regardless of age, body\nsize, disability, ethnicity, gender identity and expression, level of experience,\nnationality, personal appearance, race, religion, or sexual identity and\norientation.\nOur Standards\nExamples of behavior that contributes to creating a positive environment\ninclude:\n\nUsing welcoming and inclusive language\nBeing respectful of differing viewpoints and experiences\nGracefully accepting constructive criticism\nFocusing on what is best for the community\nShowing empathy towards other community members\n\nExamples of unacceptable behavior by participants include:\n\nThe use of sexualized language or imagery and unwelcome sexual attention or\nadvances\nTrolling, insulting/derogatory comments, and personal or political attacks\nPublic or private harassment\nPublishing others' private information, such as a physical or electronic\naddress, without explicit permission\nOther conduct which could reasonably be considered inappropriate in a\nprofessional setting\n\nOur Responsibilities\nProject maintainers are responsible for clarifying the standards of acceptable\nbehavior and are expected to take appropriate and fair corrective action in\nresponse to any instances of unacceptable behavior.\nProject maintainers have the right and responsibility to remove, edit, or\nreject comments, commits, code, wiki edits, issues, and other contributions\nthat are not aligned to this Code of Conduct, or to ban temporarily or\npermanently any contributor for other behaviors that they deem inappropriate,\nthreatening, offensive, or harmful.\nScope\nThis Code of Conduct applies both within project spaces and in public spaces\nwhen an individual is representing the project or its community. Examples of\nrepresenting a project or community include using an official project e-mail\naddress, posting via an official social media account, or acting as an appointed\nrepresentative at an online or offline event. Representation of a project may be\nfurther defined and clarified by project maintainers.\nEnforcement\nInstances of abusive, harassing, or otherwise unacceptable behavior may be\nreported by contacting the project team at me@tane.dev. All\ncomplaints will be reviewed and investigated and will result in a response that\nis deemed necessary and appropriate to the circumstances. The project team is\nobligated to maintain confidentiality with regard to the reporter of an incident.\nFurther details of specific enforcement policies may be posted separately.\nProject maintainers who do not follow or enforce the Code of Conduct in good\nfaith may face temporary or permanent repercussions as determined by other\nmembers of the project's leadership.\nAttribution\nThis Code of Conduct is adapted from the Contributor Covenant, version 1.4,\navailable at http://contributor-covenant.org/version/1/4\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"coverage.html":{"url":"coverage.html","title":"coverage - coverage","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    Documentation coverage\n\n\n\n    \n\n\n\n    \n        \n            File\n            Type\n            Identifier\n            Statements\n        \n    \n    \n        \n            \n                \n                apps/ngx-tinynodes-e2e/src/support/app.po.ts\n            \n            variable\n            getGreeting\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                apps/ngx-tinynodes/src/app/app.routes.ts\n            \n            variable\n            appRoutes\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                apps/ngx-tinynodes/src/app/components/app-component/app.component.ts\n            \n            component\n            AppComponent\n            \n                75 %\n                (3/4)\n            \n        \n        \n            \n                \n                apps/ngx-tinynodes/src/app/components/nav-bar/nav-bar.component.ts\n            \n            component\n            NavBarComponent\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                apps/ngx-tinynodes/src/app/components/sidebar-component/sidebar.component.ts\n            \n            component\n            SidebarComponent\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                apps/ngx-tinynodes/src/app/store/app/application.model.ts\n            \n            interface\n            ApplicationState\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                apps/ngx-tinynodes/src/app/store/app/application.model.ts\n            \n            interface\n            MenuItem\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                apps/ngx-tinynodes/src/app/store/app/application.query.ts\n            \n            injectable\n            ApplicationQuery\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                apps/ngx-tinynodes/src/app/store/app/application.service.ts\n            \n            injectable\n            AppService\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                apps/ngx-tinynodes/src/app/store/app/application.store.ts\n            \n            injectable\n            ApplicationStore\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                apps/ngx-tinynodes/src/environments/environment.prod.ts\n            \n            variable\n            environment\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                apps/ngx-tinynodes/src/environments/environment.ts\n            \n            variable\n            environment\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                libs/ngx-editorjs-demo/src/lib/config/index.ts\n            \n            function\n            createNgxEditorJSDemoTools\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                libs/ngx-editorjs-demo/src/lib/containers/editor-page/editor-page.component.ts\n            \n            component\n            EditorPageComponent\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                libs/ngx-editorjs-demo/src/lib/containers/page-container/page-container.component.ts\n            \n            component\n            PageContainerComponent\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                libs/ngx-editorjs-demo/src/lib/ngx-editorjs-demo.routes.ts\n            \n            variable\n            ngxEditorjsDemoRoutes\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                libs/ngx-editorjs-demo/src/lib/store/pages/pages.models.ts\n            \n            interface\n            Page\n            \n                0 %\n                (0/5)\n            \n        \n        \n            \n                \n                libs/ngx-editorjs-demo/src/lib/store/pages/pages.models.ts\n            \n            interface\n            PageBlock\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                libs/ngx-editorjs-demo/src/lib/store/pages/pages.models.ts\n            \n            interface\n            Tag\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                libs/ngx-editorjs-demo/src/lib/store/pages/pages.query.ts\n            \n            injectable\n            PagesQuery\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                libs/ngx-editorjs-demo/src/lib/store/pages/pages.service.ts\n            \n            injectable\n            PagesService\n            \n                40 %\n                (4/10)\n            \n        \n        \n            \n                \n                libs/ngx-editorjs-demo/src/lib/store/pages/pages.store.ts\n            \n            injectable\n            PagesStore\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                libs/ngx-editorjs-demo/src/lib/store/pages/pages.store.ts\n            \n            interface\n            PagesState\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                libs/ngx-editorjs-ngrx/src/lib/actions/ngx-editorjs.actions.ts\n            \n            class\n            Changed\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                libs/ngx-editorjs-ngrx/src/lib/actions/ngx-editorjs.actions.ts\n            \n            class\n            NotReady\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                libs/ngx-editorjs-ngrx/src/lib/actions/ngx-editorjs.actions.ts\n            \n            class\n            Ready\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                libs/ngx-editorjs-ngrx/src/lib/actions/ngx-editorjs.actions.ts\n            \n            class\n            SaveEnd\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                libs/ngx-editorjs-ngrx/src/lib/actions/ngx-editorjs.actions.ts\n            \n            class\n            SaveStart\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                libs/ngx-editorjs-ngrx/src/lib/effects/ngx-editorjs.effects.ts\n            \n            injectable\n            NgxEditorJSEffects\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                libs/ngx-editorjs-plugins/src/lib/plugins/code/code.plugin.ts\n            \n            injectable\n            PluginCode\n            \n                100 %\n                (2/2)\n            \n        \n        \n            \n                \n                libs/ngx-editorjs-plugins/src/lib/plugins/header/header.plugin.ts\n            \n            injectable\n            PluginHeader\n            \n                100 %\n                (2/2)\n            \n        \n        \n            \n                \n                libs/ngx-editorjs-plugins/src/lib/plugins/image/image.plugin.ts\n            \n            injectable\n            PluginImage\n            \n                100 %\n                (2/2)\n            \n        \n        \n            \n                \n                libs/ngx-editorjs-plugins/src/lib/plugins/link/link.plugin.ts\n            \n            injectable\n            PluginLink\n            \n                100 %\n                (2/2)\n            \n        \n        \n            \n                \n                libs/ngx-editorjs-plugins/src/lib/plugins/list/list.plugin.ts\n            \n            injectable\n            PluginList\n            \n                100 %\n                (2/2)\n            \n        \n        \n            \n                \n                libs/ngx-editorjs-plugins/src/lib/plugins/marker/marker.plugin.ts\n            \n            injectable\n            PluginMarker\n            \n                100 %\n                (3/3)\n            \n        \n        \n            \n                \n                libs/ngx-editorjs-plugins/src/lib/plugins/paragraph/paragraph.plugin.ts\n            \n            injectable\n            PluginParagraph\n            \n                100 %\n                (2/2)\n            \n        \n        \n            \n                \n                libs/ngx-editorjs-plugins/src/lib/plugins/simple-image/simple-image.plugin.ts\n            \n            injectable\n            PluginSimpleImage\n            \n                100 %\n                (2/2)\n            \n        \n        \n            \n                \n                libs/ngx-editorjs-plugins/src/lib/types/plugins.ts\n            \n            interface\n            BasePlugin\n            \n                100 %\n                (3/3)\n            \n        \n        \n            \n                \n                libs/ngx-editorjs-plugins/src/lib/types/plugins.ts\n            \n            interface\n            PluginConfig\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                libs/ngx-editorjs-plugins/src/lib/types/plugins.ts\n            \n            interface\n            ToolSettingsMap\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                libs/ngx-editorjs-plugins/src/lib/types/plugins.ts\n            \n            variable\n            InitialPlugins\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                libs/ngx-editorjs-plugins/src/lib/types/plugins.ts\n            \n            variable\n            UserPlugins\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                libs/ngx-editorjs/src/lib/containers/editorjs-component/editorjs.component.ts\n            \n            component\n            NgxEditorJSComponent\n            \n                100 %\n                (6/6)\n            \n        \n        \n            \n                \n                libs/ngx-editorjs/src/lib/directives/ngx-editorjs.directive.ts\n            \n            directive\n            NgxEditorJSDirective\n            \n                50 %\n                (2/4)\n            \n        \n        \n            \n                \n                libs/ngx-editorjs/src/lib/ngx-editorjs.module.ts\n            \n            function\n            createConfig\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                libs/ngx-editorjs/src/lib/ngx-editorjs.module.ts\n            \n            variable\n            DEFAULT_HOLDER_ID\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                libs/ngx-editorjs/src/lib/ngx-editorjs.module.ts\n            \n            variable\n            FOR_ROOT_OPTIONS_TOKEN\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                libs/ngx-editorjs/src/lib/services/editorjs.service.ts\n            \n            injectable\n            NgxEditorJSService\n            \n                90 %\n                (9/10)\n            \n        \n        \n            \n                \n                libs/ngx-editorjs/src/lib/services/plugins.service.ts\n            \n            injectable\n            NgxEditorJSPluginService\n            \n                100 %\n                (6/6)\n            \n        \n        \n            \n                \n                libs/ngx-editorjs/src/lib/types/blocks.ts\n            \n            interface\n            Block\n            \n                100 %\n                (3/3)\n            \n        \n        \n            \n                \n                libs/ngx-editorjs/src/lib/types/blocks.ts\n            \n            interface\n            Header\n            \n                100 %\n                (3/3)\n            \n        \n        \n            \n                \n                libs/ngx-editorjs/src/lib/types/blocks.ts\n            \n            interface\n            HeaderBlock\n            \n                100 %\n                (2/2)\n            \n        \n        \n            \n                \n                libs/ngx-editorjs/src/lib/types/blocks.ts\n            \n            interface\n            Image\n            \n                100 %\n                (6/6)\n            \n        \n        \n            \n                \n                libs/ngx-editorjs/src/lib/types/blocks.ts\n            \n            interface\n            ImageBlock\n            \n                100 %\n                (2/2)\n            \n        \n        \n            \n                \n                libs/ngx-editorjs/src/lib/types/blocks.ts\n            \n            interface\n            List\n            \n                100 %\n                (3/3)\n            \n        \n        \n            \n                \n                libs/ngx-editorjs/src/lib/types/blocks.ts\n            \n            interface\n            ListBlock\n            \n                100 %\n                (2/2)\n            \n        \n        \n            \n                \n                libs/ngx-editorjs/src/lib/types/blocks.ts\n            \n            interface\n            Paragraph\n            \n                100 %\n                (2/2)\n            \n        \n        \n            \n                \n                libs/ngx-editorjs/src/lib/types/blocks.ts\n            \n            interface\n            ParagraphBlock\n            \n                100 %\n                (2/2)\n            \n        \n        \n            \n                \n                libs/ngx-editorjs/src/lib/types/config.ts\n            \n            interface\n            EditorJSConfig\n            \n                100 %\n                (9/9)\n            \n        \n        \n            \n                \n                libs/ngx-editorjs/src/lib/types/config.ts\n            \n            interface\n            NgxEditorJSConfig\n            \n                100 %\n                (2/2)\n            \n        \n        \n            \n                \n                libs/ngx-editorjs/src/lib/types/config.ts\n            \n            variable\n            NGX_EDITORJS_CONFIG\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                libs/ngx-editorjs/src/lib/types/maps.ts\n            \n            interface\n            BlocksMap\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                libs/ngx-editorjs/src/lib/types/maps.ts\n            \n            interface\n            ChangeMap\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                libs/ngx-editorjs/src/lib/types/maps.ts\n            \n            interface\n            EditorMap\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                libs/ngx-editorjs/src/lib/types/maps.ts\n            \n            interface\n            ReadyMap\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                libs/ngx-editorjs/src/lib/types/plugins.ts\n            \n            interface\n            BasePlugin\n            \n                100 %\n                (3/3)\n            \n        \n        \n            \n                \n                libs/ngx-editorjs/src/lib/types/plugins.ts\n            \n            interface\n            PluginConfig\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                libs/ngx-editorjs/src/lib/types/plugins.ts\n            \n            interface\n            ToolSettingsMap\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                libs/ngx-editorjs/src/lib/types/plugins.ts\n            \n            variable\n            InitialPlugins\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                libs/ngx-editorjs/src/lib/types/plugins.ts\n            \n            variable\n            UserPlugins\n            \n                100 %\n                (1/1)\n            \n        \n    \n\n\n\n\n\n    new Tablesort(document.getElementById('coverage-table'));\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"dependencies.html":{"url":"dependencies.html","title":"package-dependencies - dependencies","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        Dependencies\n    \n    \n        \n            @angular/animations : ~7.2.15\n        \n            @angular/cdk : ^7.3.7\n        \n            @angular/common : ~7.2.15\n        \n            @angular/compiler : ~7.2.15\n        \n            @angular/core : ~7.2.15\n        \n            @angular/flex-layout : ^7.0.0-beta.24\n        \n            @angular/forms : ~7.2.15\n        \n            @angular/material : ^7.3.7\n        \n            @angular/platform-browser : ~7.2.15\n        \n            @angular/platform-browser-dynamic : ~7.2.15\n        \n            @angular/router : ~7.2.15\n        \n            @datorama/akita-ng-router-store : ^3.0.2\n        \n            @datorama/akita-ngdevtools : ^1.0.4\n        \n            @editorjs/editorjs : ^2.13.0\n        \n            @editorjs/header : ^2.2.3\n        \n            @editorjs/list : ^1.3.4\n        \n            @editorjs/paragraph : ^2.5.0\n        \n            @ngrx/effects : ^7.4.0\n        \n            @ngrx/store : ^7.4.0\n        \n            core-js : ^2.5.4\n        \n            hammerjs : ^2.0.8\n        \n            ngx-markdown : ^7.1.5\n        \n            rxjs : 6.3.3\n        \n            zone.js : ^0.8.26\n    \n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/enumerations.html":{"url":"miscellaneous/enumerations.html","title":"miscellaneous-enumerations - enumerations","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous\n  Enumerations\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            EditorJSActionTypes   (libs/.../ngx-editorjs.actions.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    libs/ngx-editorjs-ngrx/src/lib/actions/ngx-editorjs.actions.ts\n    \n        \n            \n                \n                    \n                        \n                        EditorJSActionTypes\n                    \n                \n                        \n                            \n                                 SaveStart\n                            \n                        \n                        \n                            \n                                Value : [ngx-editorjs] Start Save\n                            \n                        \n                        \n                            \n                                 SaveEnd\n                            \n                        \n                        \n                            \n                                Value : [ngx-editorjs] Start End\n                            \n                        \n                        \n                            \n                                 NotReady\n                            \n                        \n                        \n                            \n                                Value : [ngx-editorjs] Not Ready\n                            \n                        \n                        \n                            \n                                 Ready\n                            \n                        \n                        \n                            \n                                Value : [ngx-editorjs] Ready\n                            \n                        \n                        \n                            \n                                 Changed\n                            \n                        \n                        \n                            \n                                Value : [ngx-editorjs] Changed\n                            \n                        \n            \n        \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/functions.html":{"url":"miscellaneous/functions.html","title":"miscellaneous-functions - functions","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous\n  Functions\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            createConfig   (libs/.../ngx-editorjs.module.ts)\n                        \n                        \n                            createNgxEditorJSDemoTools   (libs/.../index.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    libs/ngx-editorjs/src/lib/ngx-editorjs.module.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        \n                            createConfig\n                        \n                        \n                    \n                \n            \n            \n                \ncreateConfig(config?)\n                \n            \n\n\n\n\n            \n                \n                    Creates a configuration for EditorJS\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    config\n\n                                    \n                                        Yes\n                                    \n\n\n                                    \n                                        Optional module configurations\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         NgxEditorJSConfig\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    libs/ngx-editorjs-demo/src/lib/config/index.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        \n                            createNgxEditorJSDemoTools\n                        \n                        \n                    \n                \n            \n            \n                \ncreateNgxEditorJSDemoTools()\n                \n            \n\n\n\n\n            \n                \n                    Creates the tools for the ngx-tinynodes demo application\n\n\n                    \n                        Returns :         PluginConfig\n\n                    \n                \n            \n        \n    \n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"index.html":{"url":"index.html","title":"getting-started - index","body":"\n                   \n\nNgx-Tinynodes\nThis repository is a collection of Angular components and demos with full documentation.\nSee the Changelog for the development diary of this site, or visit the documentation of libraries.\nYou can also find a fully searchable API documentation for all @tinynode components.\nLinks\n\nRepository\nDocumentation\nDemo Application Site\nNPM Collection\n\nLibraries\n@tinynodes/ngx-editorjs\nThis project provides a set of features for using EditorJS within Angular 7+ - including a directive, component and service\n\nReadme\nChangelog\nDemo\nProject Folder\n\nDevelopment Information\nThis repository is run by Tane Piper and was generated using Nx.\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"license.html":{"url":"license.html","title":"getting-started - license","body":"\n                   \n\nTinynodes General MIT Licence\nCopyright 2019 Tane Piper me@tane.dev\nPermission is hereby granted, free of charge, to any person obtaining a copy of this software and associated documentation files (the \"Software\"), to deal in the Software without restriction, including without limitation the rights to use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of the Software, and to permit persons to whom the Software is furnished to do so, subject to the following conditions:\nThe above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software.\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules.html":{"url":"modules.html","title":"modules - modules","body":"\n                   \n\n\n\n\n    Modules\n\n\n    \n            \n                \n                    \n                        ApplicationDataModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        AppModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        MaterialModule\n                    \n                    \n                                \n                                    No graph available.\n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        NgxEditorjsDemoModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        NgxEditorJSModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        NgxEditorjsNgrxModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        NgxEditorjsPluginsModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        PageStoreModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        PluginCodeModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        PluginHeaderModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        PluginImageModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        PluginLinkModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        PluginListModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        PluginMarkerModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        PluginParagraphModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        PluginSimpleImageModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"overview.html":{"url":"overview.html","title":"overview - overview","body":"\n                   \n\n\n\n    Overview\n\n  \n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_ApplicationDataModule\n\n\n\ncluster_ApplicationDataModule_providers\n\n\n\ncluster_AppModule\n\n\n\ncluster_AppModule_declarations\n\n\n\ncluster_AppModule_imports\n\n\n\ncluster_AppModule_bootstrap\n\n\n\ncluster_NgxEditorjsDemoModule\n\n\n\ncluster_NgxEditorjsDemoModule_declarations\n\n\n\ncluster_NgxEditorjsDemoModule_imports\n\n\n\ncluster_NgxEditorjsDemoModule_exports\n\n\n\ncluster_NgxEditorJSModule\n\n\n\ncluster_NgxEditorJSModule_declarations\n\n\n\ncluster_NgxEditorJSModule_exports\n\n\n\ncluster_NgxEditorJSModule_providers\n\n\n\ncluster_NgxEditorjsNgrxModule\n\n\n\ncluster_NgxEditorjsPluginsModule\n\n\n\ncluster_NgxEditorjsPluginsModule_imports\n\n\n\ncluster_NgxEditorjsPluginsModule_exports\n\n\n\ncluster_PageStoreModule\n\n\n\ncluster_PageStoreModule_providers\n\n\n\ncluster_PluginCodeModule\n\n\n\ncluster_PluginCodeModule_providers\n\n\n\ncluster_PluginHeaderModule\n\n\n\ncluster_PluginHeaderModule_providers\n\n\n\ncluster_PluginImageModule\n\n\n\ncluster_PluginImageModule_providers\n\n\n\ncluster_PluginLinkModule\n\n\n\ncluster_PluginLinkModule_providers\n\n\n\ncluster_PluginListModule\n\n\n\ncluster_PluginListModule_providers\n\n\n\ncluster_PluginMarkerModule\n\n\n\ncluster_PluginMarkerModule_providers\n\n\n\ncluster_PluginParagraphModule\n\n\n\ncluster_PluginParagraphModule_providers\n\n\n\ncluster_PluginSimpleImageModule\n\n\n\ncluster_PluginSimpleImageModule_providers\n\n\n\n\nAppService\n\nAppService\n\n\n\nApplicationDataModule\n\nApplicationDataModule\n\nApplicationDataModule -->\n\nAppService->ApplicationDataModule\n\n\n\n\n\nApplicationQuery\n\nApplicationQuery\n\nApplicationDataModule -->\n\nApplicationQuery->ApplicationDataModule\n\n\n\n\n\nApplicationStore\n\nApplicationStore\n\nApplicationDataModule -->\n\nApplicationStore->ApplicationDataModule\n\n\n\n\n\nAppModule\n\nAppModule\n\nAppModule -->\n\nApplicationDataModule->AppModule\n\n\n\n\n\nAppComponent\n\nAppComponent\n\nAppModule -->\n\nAppComponent->AppModule\n\n\n\n\n\nNavBarComponent\n\nNavBarComponent\n\nAppModule -->\n\nNavBarComponent->AppModule\n\n\n\n\n\nSidebarComponent\n\nSidebarComponent\n\nAppModule -->\n\nSidebarComponent->AppModule\n\n\n\n\n\nAppComponent \n\nAppComponent \n\nAppComponent  -->\n\nAppModule->AppComponent \n\n\n\n\n\nMaterialModule\n\nMaterialModule\n\nAppModule -->\n\nMaterialModule->AppModule\n\n\n\n\n\nNgxEditorJSModule\n\nNgxEditorJSModule\n\nAppModule -->\n\nNgxEditorJSModule->AppModule\n\n\n\n\n\nNgxEditorjsDemoModule\n\nNgxEditorjsDemoModule\n\nNgxEditorjsDemoModule -->\n\nNgxEditorJSModule->NgxEditorjsDemoModule\n\n\n\n\n\nNgxEditorJSComponent \n\nNgxEditorJSComponent \n\nNgxEditorJSComponent  -->\n\nNgxEditorJSModule->NgxEditorJSComponent \n\n\n\n\n\nNgxEditorJSDirective \n\nNgxEditorJSDirective \n\nNgxEditorJSDirective  -->\n\nNgxEditorJSModule->NgxEditorJSDirective \n\n\n\n\n\nNgxEditorjsNgrxModule\n\nNgxEditorjsNgrxModule\n\nNgxEditorjsNgrxModule -->\n\nNgxEditorJSModule->NgxEditorjsNgrxModule\n\n\n\nAppModule -->\n\nNgxEditorjsDemoModule->AppModule\n\n\n\n\n\nEditorPageComponent \n\nEditorPageComponent \n\nEditorPageComponent  -->\n\nNgxEditorjsDemoModule->EditorPageComponent \n\n\n\n\n\nPageContainerComponent \n\nPageContainerComponent \n\nPageContainerComponent  -->\n\nNgxEditorjsDemoModule->PageContainerComponent \n\n\n\n\n\nPageStoreModule \n\nPageStoreModule \n\nPageStoreModule  -->\n\nNgxEditorjsDemoModule->PageStoreModule \n\n\n\n\n\nEditorPageComponent\n\nEditorPageComponent\n\nNgxEditorjsDemoModule -->\n\nEditorPageComponent->NgxEditorjsDemoModule\n\n\n\n\n\nPageContainerComponent\n\nPageContainerComponent\n\nNgxEditorjsDemoModule -->\n\nPageContainerComponent->NgxEditorjsDemoModule\n\n\n\n\n\nPageStoreModule\n\nPageStoreModule\n\nNgxEditorjsDemoModule -->\n\nPageStoreModule->NgxEditorjsDemoModule\n\n\n\n\n\nPluginCodeModule\n\nPluginCodeModule\n\nNgxEditorjsDemoModule -->\n\nPluginCodeModule->NgxEditorjsDemoModule\n\n\n\n\n\nNgxEditorjsPluginsModule\n\nNgxEditorjsPluginsModule\n\nNgxEditorjsPluginsModule -->\n\nPluginCodeModule->NgxEditorjsPluginsModule\n\n\n\n\n\nPluginHeaderModule\n\nPluginHeaderModule\n\nNgxEditorjsDemoModule -->\n\nPluginHeaderModule->NgxEditorjsDemoModule\n\n\n\nNgxEditorjsPluginsModule -->\n\nPluginHeaderModule->NgxEditorjsPluginsModule\n\n\n\n\n\nPluginLinkModule\n\nPluginLinkModule\n\nNgxEditorjsDemoModule -->\n\nPluginLinkModule->NgxEditorjsDemoModule\n\n\n\nNgxEditorjsPluginsModule -->\n\nPluginLinkModule->NgxEditorjsPluginsModule\n\n\n\n\n\nPluginListModule\n\nPluginListModule\n\nNgxEditorjsDemoModule -->\n\nPluginListModule->NgxEditorjsDemoModule\n\n\n\nNgxEditorjsPluginsModule -->\n\nPluginListModule->NgxEditorjsPluginsModule\n\n\n\n\n\nPluginMarkerModule\n\nPluginMarkerModule\n\nNgxEditorjsDemoModule -->\n\nPluginMarkerModule->NgxEditorjsDemoModule\n\n\n\nNgxEditorjsPluginsModule -->\n\nPluginMarkerModule->NgxEditorjsPluginsModule\n\n\n\n\n\nPluginParagraphModule\n\nPluginParagraphModule\n\nNgxEditorjsDemoModule -->\n\nPluginParagraphModule->NgxEditorjsDemoModule\n\n\n\nNgxEditorjsPluginsModule -->\n\nPluginParagraphModule->NgxEditorjsPluginsModule\n\n\n\n\n\nPluginSimpleImageModule\n\nPluginSimpleImageModule\n\nNgxEditorjsDemoModule -->\n\nPluginSimpleImageModule->NgxEditorjsDemoModule\n\n\n\nNgxEditorjsPluginsModule -->\n\nPluginSimpleImageModule->NgxEditorjsPluginsModule\n\n\n\n\n\nNgxEditorJSComponent\n\nNgxEditorJSComponent\n\nNgxEditorJSModule -->\n\nNgxEditorJSComponent->NgxEditorJSModule\n\n\n\n\n\nNgxEditorJSDirective\n\nNgxEditorJSDirective\n\nNgxEditorJSModule -->\n\nNgxEditorJSDirective->NgxEditorJSModule\n\n\n\n\n\nNgxEditorJSPluginService\n\nNgxEditorJSPluginService\n\nNgxEditorJSModule -->\n\nNgxEditorJSPluginService->NgxEditorJSModule\n\n\n\n\n\nNgxEditorJSService\n\nNgxEditorJSService\n\nNgxEditorJSModule -->\n\nNgxEditorJSService->NgxEditorJSModule\n\n\n\n\n\nPluginImageModule\n\nPluginImageModule\n\nNgxEditorjsPluginsModule -->\n\nPluginImageModule->NgxEditorjsPluginsModule\n\n\n\n\n\nPluginCodeModule \n\nPluginCodeModule \n\nPluginCodeModule  -->\n\nNgxEditorjsPluginsModule->PluginCodeModule \n\n\n\n\n\nPluginHeaderModule \n\nPluginHeaderModule \n\nPluginHeaderModule  -->\n\nNgxEditorjsPluginsModule->PluginHeaderModule \n\n\n\n\n\nPluginImageModule \n\nPluginImageModule \n\nPluginImageModule  -->\n\nNgxEditorjsPluginsModule->PluginImageModule \n\n\n\n\n\nPluginLinkModule \n\nPluginLinkModule \n\nPluginLinkModule  -->\n\nNgxEditorjsPluginsModule->PluginLinkModule \n\n\n\n\n\nPluginListModule \n\nPluginListModule \n\nPluginListModule  -->\n\nNgxEditorjsPluginsModule->PluginListModule \n\n\n\n\n\nPluginMarkerModule \n\nPluginMarkerModule \n\nPluginMarkerModule  -->\n\nNgxEditorjsPluginsModule->PluginMarkerModule \n\n\n\n\n\nPluginParagraphModule \n\nPluginParagraphModule \n\nPluginParagraphModule  -->\n\nNgxEditorjsPluginsModule->PluginParagraphModule \n\n\n\n\n\nPluginSimpleImageModule \n\nPluginSimpleImageModule \n\nPluginSimpleImageModule  -->\n\nNgxEditorjsPluginsModule->PluginSimpleImageModule \n\n\n\n\n\nPagesQuery\n\nPagesQuery\n\nPageStoreModule -->\n\nPagesQuery->PageStoreModule\n\n\n\n\n\nPagesService\n\nPagesService\n\nPageStoreModule -->\n\nPagesService->PageStoreModule\n\n\n\n\n\nPagesStore\n\nPagesStore\n\nPageStoreModule -->\n\nPagesStore->PageStoreModule\n\n\n\n\n\nPluginCode\n\nPluginCode\n\nPluginCodeModule -->\n\nPluginCode->PluginCodeModule\n\n\n\n\n\nPluginHeader\n\nPluginHeader\n\nPluginHeaderModule -->\n\nPluginHeader->PluginHeaderModule\n\n\n\n\n\nPluginImage\n\nPluginImage\n\nPluginImageModule -->\n\nPluginImage->PluginImageModule\n\n\n\n\n\nPluginLink\n\nPluginLink\n\nPluginLinkModule -->\n\nPluginLink->PluginLinkModule\n\n\n\n\n\nPluginList\n\nPluginList\n\nPluginListModule -->\n\nPluginList->PluginListModule\n\n\n\n\n\nPluginMarker\n\nPluginMarker\n\nPluginMarkerModule -->\n\nPluginMarker->PluginMarkerModule\n\n\n\n\n\nPluginParagraph\n\nPluginParagraph\n\nPluginParagraphModule -->\n\nPluginParagraph->PluginParagraphModule\n\n\n\n\n\nPluginSimpleImage\n\nPluginSimpleImage\n\nPluginSimpleImageModule -->\n\nPluginSimpleImage->PluginSimpleImageModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n  \n\n    \n        \n            \n                \n                    \n                    \n                        16 Modules\n                    \n                \n            \n        \n        \n            \n                \n                    \n                    6 Components\n                \n            \n        \n        \n            \n                \n                    \n                    1 Directive\n                \n            \n        \n        \n            \n                \n                    \n                    17 Injectables\n                \n            \n        \n        \n            \n                \n                    \n                    5 Classes\n                \n            \n        \n        \n            \n                \n                    \n                    27 Interfaces\n                \n            \n        \n    \n\n\n \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"todo.html":{"url":"todo.html","title":"getting-started - todo","body":"\n                   \n\nngx-tinynodes Todo\nGeneral Todos\n\n Add CI pipeline for publishing modules\n Publish doc changes and tags back to repo\n\nngx-editorjs\n\n Add full EditorJS config support\n Add config options as @Input on component and directive\n Add autosave option support to module config\n Expose EditorJS CoreAPI via service helpers (e.g. blocks, selection, etc)\n Provide peer-dependency ngrx/effects via library to control service\n\nngx-editorjs-demo\n\n Add store for page\n Add controls for setting editor\n Add Save feature\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/typealiases.html":{"url":"miscellaneous/typealiases.html","title":"miscellaneous-typealiases - typealiases","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous\n  Type aliases\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            BlockTypes   (libs/.../blocks.ts)\n                        \n                        \n                            ListStyle   (libs/.../blocks.ts)\n                        \n                        \n                            NgxEditorJSActions   (libs/.../ngx-editorjs.actions.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    libs/ngx-editorjs/src/lib/types/blocks.ts\n    \n    \n        \n            \n                \n                    \n                    BlockTypes\n                \n            \n            \n                \n                    Type of all the basic block type\n\n                \n            \n            \n                \n                        ParagraphBlock | HeaderBlock | ImageBlock | ListBlock | Block\n\n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    ListStyle\n                \n            \n            \n                \n                    Available list styles, supports ordered and unordered.\nA custom string can also be added\n\n                \n            \n            \n                \n                        \"ordered\" | \"unordered\" | string\n\n                \n            \n        \n    \n    libs/ngx-editorjs-ngrx/src/lib/actions/ngx-editorjs.actions.ts\n    \n    \n        \n            \n                \n                    \n                    NgxEditorJSActions\n                \n            \n            \n                \n                        SaveStart | SaveEnd | NotReady | Ready | Changed\n\n                \n            \n        \n    \n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/variables.html":{"url":"miscellaneous/variables.html","title":"miscellaneous-variables - variables","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous\n  Variables\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            appRoutes   (apps/.../app.routes.ts)\n                        \n                        \n                            DEFAULT_HOLDER_ID   (libs/.../ngx-editorjs.module.ts)\n                        \n                        \n                            environment   (apps/.../environment.prod.ts)\n                        \n                        \n                            environment   (apps/.../environment.ts)\n                        \n                        \n                            FOR_ROOT_OPTIONS_TOKEN   (libs/.../ngx-editorjs.module.ts)\n                        \n                        \n                            getGreeting   (apps/.../app.po.ts)\n                        \n                        \n                            InitialPlugins   (libs/.../plugins.ts)\n                        \n                        \n                            InitialPlugins   (libs/.../plugins.ts)\n                        \n                        \n                            NGX_EDITORJS_CONFIG   (libs/.../config.ts)\n                        \n                        \n                            ngxEditorjsDemoRoutes   (libs/.../ngx-editorjs-demo.routes.ts)\n                        \n                        \n                            UserPlugins   (libs/.../plugins.ts)\n                        \n                        \n                            UserPlugins   (libs/.../plugins.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    apps/ngx-tinynodes/src/app/app.routes.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            appRoutes\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     Route[]\n\n                        \n                    \n                    \n                        \n                            Default value : [\n  {\n    path: '',\n    redirectTo: 'ngx-editorjs-demo',\n    pathMatch: 'full'\n  }\n]\n                        \n                    \n\n                \n                    \n                        The main application routes\n\n                    \n                \n\n            \n        \n\n    libs/ngx-editorjs/src/lib/ngx-editorjs.module.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            DEFAULT_HOLDER_ID\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Default value : 'editor-js'\n                        \n                    \n\n                \n                    \n                        The default holder ID to attach EditorJS to\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            FOR_ROOT_OPTIONS_TOKEN\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : new InjectionToken('forRoot() NgxEditorJSConfig.')\n                        \n                    \n\n                \n                    \n                        Internal token for injecting the NgxEditorJSConfig into the config factory\n\n                    \n                \n\n            \n        \n\n    apps/ngx-tinynodes/src/environments/environment.prod.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            environment\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         object\n\n                        \n                    \n                    \n                        \n                            Default value : {\n  production: true\n}\n                        \n                    \n\n\n            \n        \n\n    apps/ngx-tinynodes/src/environments/environment.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            environment\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         object\n\n                        \n                    \n                    \n                        \n                            Default value : {\n  production: false\n}\n                        \n                    \n\n\n            \n        \n\n    apps/ngx-tinynodes-e2e/src/support/app.po.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            getGreeting\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : () => cy.get('h1')\n                        \n                    \n\n\n            \n        \n\n    libs/ngx-editorjs/src/lib/types/plugins.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            InitialPlugins\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : new InjectionToken('InitialPlugins')\n                        \n                    \n\n                \n                    \n                        The Injection token for initial plugins as defined in the ngx-editorjs module\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            UserPlugins\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : new InjectionToken('UserPlugins')\n                        \n                    \n\n                \n                    \n                        The injection token for adding plugins via your own application\n\n                    \n                \n\n            \n        \n\n    libs/ngx-editorjs-plugins/src/lib/types/plugins.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            InitialPlugins\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : new InjectionToken('InitialPlugins')\n                        \n                    \n\n                \n                    \n                        The Injection token for initial plugins as defined in the ngx-editorjs module\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            UserPlugins\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : new InjectionToken('UserPlugins')\n                        \n                    \n\n                \n                    \n                        The injection token for adding plugins via your own application\n\n                    \n                \n\n            \n        \n\n    libs/ngx-editorjs/src/lib/types/config.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            NGX_EDITORJS_CONFIG\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : new InjectionToken('NGX_EDITORJS_CONFIG')\n                        \n                    \n\n                \n                    \n                        Injection token provied for NgxEditorJSConfig\n\n                    \n                \n\n            \n        \n\n    libs/ngx-editorjs-demo/src/lib/ngx-editorjs-demo.routes.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            ngxEditorjsDemoRoutes\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     Route[]\n\n                        \n                    \n                    \n                        \n                            Default value : [\n  {\n    path: 'ngx-editorjs-demo',\n    redirectTo: 'ngx-editorjs-demo/pages',\n    pathMatch: 'full'\n  },\n  {\n    path: 'ngx-editorjs-demo/pages',\n    component: PageContainerComponent\n  },\n  {\n    path: 'ngx-editorjs-demo/pages/editor',\n    component: EditorPageComponent\n  },\n  {\n    path: 'ngx-editorjs-demo/pages/editor/:id',\n    component: EditorPageComponent\n  }\n]\n                        \n                    \n\n\n            \n        \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"additional-documentation/tinynodes-library-docs.html":{"url":"additional-documentation/tinynodes-library-docs.html","title":"additional-page - Tinynodes Library Docs","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nNgx-Tinynodes Libraries\nHere you can find all the README and CHANGELOG details of all projects released to NPM\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"additional-documentation/tinynodes-library-docs/ngx-editorjs-readme.html":{"url":"additional-documentation/tinynodes-library-docs/ngx-editorjs-readme.html","title":"additional-page - ngx-editorjs Readme","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nNgx-EditorJS\nThis library provides Angular support for EditorJS via a directive, component and service.\nYou can see a demo in action or download it\non GitHub to see how it was implemented.\nFor changes see the CHANGELOG\nInstalling and usage\nInstall the library via npm:\n```bash\n\nnpm install @tinynodes/ngx-editorjs @tinynodes/ngx-editorjs-plugins\n```\n\nOnce installed, include the NgxEditorJSModule module in your project with the forRoot method. The forRoot takes an optional configuration.\nYou also need to pass a provider for UserPlugins with a factory function that returns an options map tools to provide to the EditorJS instance. An example of this is shows in the demo application\n```ts\nimport { NgModule } from '@angular/core';\nimport { BrowserModule } from '@angular/platform-browser';\nimport { NgxEditorJSModule } from '@tinynodes/ngx-editorjs';\nimport { AppComponent } from './app.component';\nimport EditorJS from '@editorjs/editorjs';\nimport {\n  PluginParagraphModule,\n  PluginParagraph,\n  PluginHeaderModule,\n  PluginHeader,\n  PluginListModule,\n  PluginList\n} from '@tinynodes/ngx-editorjs-plugins';\nexport function createTools() {\n  return {\n    paragraph: new PluginParagraph(),\n    header: new PluginHeader(),\n    list: new PluginList()\n  };\n}\n@NgModule({\n  declarations: [AppComponent],\n  imports: [\n    BrowserModule,\n    NgxEditorJSModule.forRoot({\n      editorjs: {\n        autofocus: false,\n        holder: 'editor',\n        initialBlock: 'paragraph',\n        data: {\n          time: Date.now(),\n          version: EditorJS.version,\n          blocks: []\n        }\n      }\n    })\n  ],\n  providers: [\n    {\n      provide: UserPlugins,\n      useFactory: createTools\n    }\n  ],\n  bootstrap: [AppComponent]\n})\nexport class AppModule {}\n```\nConfiguration\nEditorJS Config\nThe configuration is deigned to be extendable in the future, so each potential feature has a key. For configuring EditorJS pass the options below into a editorjs key in the config.\nThe module configuration allows EditorJS to be provided with a set of options for use. See the EditorJS docs for more details.\n| Configuration Key | Description                                                                                       |\n| ----------------- | ------------------------------------------------------------------------------------------------- |\n| autofocus       | Sets the EditorJS instance to autofocus on load                                                   |\n| data            | Initial data to load into the editor, this is an OutputData object from EditorJS                |\n| hideToolbar     | Hides the toolbar by default                                                                      |\n| holder          | The element ID of the holder, this will set all instances in this module to use this as a default |\n| initialBlock    | The default block type to use in the editor                                                       |\n| minHeight       | Height of Editor's bottom area that allows to set focus on the last Block                         |\n| placeholder     | Placeholder of the first block                                                                    |\n| sanitizer       | Content sanitizer configurations                                                                  |\nAdding custom tools\nTo include tools in an Angular AOT-friendly way, inside your project, create a folder for your plugin and add an Injectable class with a plugin() method, and optional shortcut method for features that support it.\n```ts\nimport { Injectable } from '@angular/core';\nimport { ToolSettings } from '@editorjs/editorjs';\nimport Marker from '@editorjs/marker';\nimport { BasePlugin } from '@tinynodes/ngx-editorjs';\n@Injectable()\nexport class PluginMarker implements BasePlugin {\n  plugin(): ToolSettings {\n    return Marker;\n  }\n  shortcut(): string {\n    return 'SHIFT+CTRL+M';\n  }\n}\n```\nThis allows Angular's AOT to include the editor component bundled within the application. Then export this via a module:\n```ts\nimport { NgModule } from '@angular/core';\nimport { PluginMarker } from './marker.plugin';\n@NgModule({\n  providers: [PluginMarker]\n})\nexport class PluginMarkerModule {}\n```\nOnce you have created all your required modules, inside your Application or Feature module you need to provide an instance of UserPlugins using a factory function. Inside your module you can now add the following:\n```ts\nimport { NgModule } from '@angular/core';\nimport { NgxEditorJSModule, UserPlugins, PluginConfig } from '@tinynodes/ngx-editorjs';\nimport { PluginMarkerModule } from './plugins/marker/marker.module';\nimport { PluginMarker } from '../plugins/marker/marker.plugin';\nexport function createTools(): PluginConfig {\n  return {\n    code: new PluginCode()\n  };\n}\n@NgModule({\n  imports: [NgxEditorJSModule, PluginMarker],\n  providers: [\n    {\n      provide: UserPlugins,\n      useFactory: createTools\n    }\n  ],\n  exports: [PluginMarker]\n})\nexport class CustomModule {}\n```\nWhat's in the library\nNgxEditorJSDirective\nThis is the main directive which can be used on any element with the [ngxEditorJS]. It has one input which is blocks and this takes an array of EditorJS blocks.\nNgxEditorJSComponent\nThis component can be used in any Angular component using the  tag. Again this component can take a set of blocks, it also provides a holder input for overriding the ID.\nNgxEditorJSService\nThis service provides handling the life-cycle of the EditorJS instance, and exposes the underlying EditorJS instance.API - in future releases more of the API will be exposed via service methods to make controlling the container easier.\nLinks\n\nDocumentation\nGitHub\nNPM\nAngular Demo\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"additional-documentation/tinynodes-library-docs/ngx-editorjs-readme/ngx-editorjs-changelog.html":{"url":"additional-documentation/tinynodes-library-docs/ngx-editorjs-readme/ngx-editorjs-changelog.html","title":"additional-page - ngx-editorjs Changelog","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nChangelog\nAll notable changes to this project will be documented in this file.\nThe format is based on Keep a Changelog,\nand this project adheres to Semantic Versioning.\n[1.2.0] - 2019-05-13\nAdded\n\nAdded all configuration options for EditorJS to the module configuration\n\nChanged\n\nRemoved all plugins from the ngx-editorjs project. All plugins are now provided by the @tinynodes/ngx-editorjs-plugins module and a default set of tools must be provided in an application.\nAdded NgxEditorJSPluginService back to core, all plugins must now be provided with a UserPlugin provider.\n\n[1.1.2] - 2019-05-11\nAdded\n\nImproved internal documentation for generated docs.\n\nRemoved\n\nGenerated docs no longer included in this module - all docs are now available via the generated docs site\n\n[1.1.1] - 2019-05-10\nAdded\n\nGenerated docs via CompoDoc in npm package\nInclude CHANGELOG.md in npm package\n\n[1.1.0] - 2019-05-10\nAdded\n\nEditorJS default paragraph plugin is now included in the default tools, fixes issue where the regenerated component failed to use the default plugin.\n\nChanged\n\nNgxEditorJSService is now provided in the root and now stores multiple editor instances. Getters removed and replaced with methods that take the holder parameter which is the ID of the DOM element the editor should be attached to.\nPlugins are now instances of an Injectable class for AOT and have an instance method of plugin. Also supports shortcut as an optional method that returns the string to set up as the shortcut.\nEditorJSPlugin now renamed BasePlugin and changed from class to interface.\nImproved documentation\n\n[1.0.0] - 2019-05-10\nAdded\n\nInitial release\nReadme, Changelog\nNgxEditorJSModule: That can be imported into the root of a project\nNgxEditorJSDirective: A directive that can attach an EditorJS instance to an element\nNgxEditorJSComponent: A component that is pre-configured to use the directive in any Angular project\nNgxEditorJSService: An Angular service for controlling an EditorJS instance\nDefault plugins for Header and List plugins, documentation on how to add plugins with AOT support\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"additional-documentation/tinynodes-library-docs/ngx-editorjs-plugins-readme.html":{"url":"additional-documentation/tinynodes-library-docs/ngx-editorjs-plugins-readme.html","title":"additional-page - ngx-editorjs-plugins Readme","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nNgx-EditorJS Plugins\nThis module provides a default set of EditorJS plugins for @tinynodes/ngx-editorjs via Angular modules.\nPlugin List\n| Plugin Name             | Description                                            | EditorJS Plugin Link                             |\n| ----------------------- | ------------------------------------------------------ | ------------------------------------------------ |\n| PluginCodeModule        | Provides a  block editor                       | GitHub      |\n| PluginHeaderModule      | Provides a  -  block editor                  | GitHub    |\n| PluginImageModule       | Provides an  block editor + file upload support | GitHub     |\n| PluginLinkModule        | Provides an  block editor                         | GitHub      |\n| PluginIListModule       | Provides an / block editor                   | GitHub      |\n| PluginMarkerModule      | Provides inline text marking                           | GitHub    |\n| PluginParagraphModule   | Provides an  block editor                         | GitHub |\n| PluginSimpleImageModule | Provides an  block editor with paste support    | GitHub |\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"additional-documentation/tinynodes-library-docs/ngx-editorjs-plugins-readme/ngx-editorjs-plugins-changelog.html":{"url":"additional-documentation/tinynodes-library-docs/ngx-editorjs-plugins-readme/ngx-editorjs-plugins-changelog.html","title":"additional-page - ngx-editorjs-plugins Changelog","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nChangelog\nAll notable changes to this project will be documented in this file.\nThe format is based on Keep a Changelog,\nand this project adheres to Semantic Versioning.\n[1.1.0] - 2019-05-13\nRemoved\n\nRemoved the NgxEditorJSPluginService from this module back to core\n\n[1.0.0] - 2019-05-11\nAdded\n\nInitial release of module with default plugins - see README.md for details.\nMoved the internal PluginService to public NgxEditorJSPluginService provided by this module\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"}}
}
