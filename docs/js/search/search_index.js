var COMPODOC_SEARCH_INDEX = {
    "index": {"version":"2.3.6","fields":["title","body"],"fieldVectors":[["title/components/AppContainerComponent.html",[0,1.864,1,2.683]],["body/components/AppContainerComponent.html",[0,3.125,1,3.506,2,2.564,3,0.106,4,0.199,5,1.919,6,1.302,7,1.668,8,1.919,9,0.08,10,3.093,11,2.89,12,0.221,13,3.24,14,1.296,15,1.411,16,3.835,17,4.05,18,1.832,19,4.362,20,4.546,21,1.824,22,4.819,23,1.959,24,2.95,25,5.412,26,2.95,27,4.443,28,0.37,29,0.993,30,7.211,31,1.411,32,4.896,33,5.364,34,2.364,35,4.546,36,3.121,37,3.801,38,2.677,39,6.075,40,5.412,41,4.779,42,4.779,43,0.918,44,2.552,45,3.367,46,1.446,47,2.89,48,1.014,49,0.009,50,1.389,51,0.615,52,0.562,53,2.002,54,0.692,55,1.263,56,2.285,57,2.207,58,2.89,59,2.055,60,2.677,61,2.89,62,3.923,63,1.949,64,2.688,65,2.89,66,4.779,67,2.89,68,5.412,69,2.329,70,4.443,71,2.89,72,3.923,73,2.918,74,2.89,75,2.89,76,2.89,77,2.89,78,2.7,79,2.89,80,2.89,81,5.364,82,2.89,83,2.89,84,3.581,85,0.366,86,2.677,87,2.552,88,0.442,89,2.03,90,0.918,91,1.742,92,1.668,93,2.462,94,2.37,95,1.302,96,3.325,97,2.329,98,1.824,99,0.1,100,0.296,101,2.37,102,2.439,103,1.733,104,2.552,105,2.163,106,0.941,107,2.552,108,1.824,109,2.89,110,2.89,111,1.838,112,2.89,113,2.89,114,2.89,115,2.329,116,2.329,117,2.89,118,1.097,119,2.89,120,2.89,121,2.552,122,2.552,123,2.552,124,1.919,125,2.89,126,2.89,127,6.075,128,2.163,129,3.262,130,2.552,131,4.05,132,2.89,133,2.207,134,2.552,135,3.923,136,3.923,137,2.552,138,2.552,139,2.552,140,2.552,141,2.552,142,1.227,143,1.014,144,1.541,145,3.923,146,3.835,147,4.779,148,2.552,149,2.552,150,1.742,151,2.564,152,2.95,153,0.68,154,3.923,155,2.552,156,2.329,157,2.552,158,3.581,159,2.552,160,2.552,161,2.552,162,2.329,163,1.742,164,2.552,165,2.552,166,1.041,167,2.95,168,2.207,169,1.435,170,4.034,171,1.919,172,1.919,173,1.541,174,1.742,175,1.919,176,1.668,177,1.919,178,1.919,179,1.541,180,0.97,181,1.919,182,1.602,183,1.919,184,1.668,185,1.824,186,1.486,187,1.742,188,1.919,189,0.003,190,0.004,191,0.003]],["title/modules/AppModule.html",[192,0.784,193,3.265]],["body/modules/AppModule.html",[1,4.912,3,0.139,4,0.139,9,0.105,10,1.475,12,0.289,13,2.894,14,1.479,23,1.628,49,0.009,53,1.704,59,2.06,85,0.495,88,0.579,89,2.655,90,2.015,91,3.824,99,0.13,100,0.387,166,1.362,173,4.076,176,4.411,180,1.385,184,4.411,189,0.004,190,0.005,191,0.004,192,1.071,193,6.354,194,1.327,195,1.398,196,2.617,197,2.617,198,1.475,199,1.435,200,3.338,201,3.338,202,3.338,203,3.338,204,5.367,205,5.075,206,5.075,207,4.237,208,5.367,209,5.075,210,2.303,211,1.559,212,1.516,213,3.781,214,5.426,215,4.372,216,4.791,217,4.372,218,2.06,219,3.007,220,4.372,221,5.426,222,3.047,223,2.116,224,5.426,225,3.338,226,3.338,227,4.791,228,4.372,229,2.511,230,5.426,231,3.781,232,3.781,233,2.695,234,3.338,235,3.338,236,1.816,237,3.781,238,3.338,239,0.344,240,3.338,241,3.047,242,3.047,243,3.781,244,3.781,245,3.781,246,3.781,247,3.338,248,3.781,249,3.781,250,3.781,251,3.781,252,3.338,253,3.338,254,3.047,255,3.781,256,3.781,257,2.655,258,3.781,259,3.781,260,3.781,261,3.781,262,3.781]],["title/modules/AppRoutingModule.html",[192,0.784,204,3.265]],["body/modules/AppRoutingModule.html",[0,2.314,3,0.212,4,0.212,9,0.161,10,2.251,12,0.442,13,3.078,14,1.677,15,2.29,49,0.009,53,3.249,85,0.439,88,0.883,99,0.249,100,0.59,173,3.846,174,4.345,189,0.006,190,0.007,191,0.006,192,1.216,194,2.026,199,2.191,204,5.064,219,3.199,223,2.812,252,5.096,253,5.096,263,5.096,264,5.096,265,7.21,266,6.366,267,7.21,268,5.81,269,5.81,270,3.199,271,5.096,272,2.772,273,5.096,274,6.366,275,5.096,276,5.096,277,4.319,278,5.771]],["title/injectables/AppService.html",[45,2.576,279,0.969]],["body/injectables/AppService.html",[3,0.118,4,0.118,9,0.089,12,0.491,13,3.421,14,1.595,15,1.529,23,1.851,28,0.411,31,2.037,34,2.498,35,4.8,38,2.902,43,1.529,45,2.669,46,1.275,48,2.411,49,0.009,50,1.571,51,0.951,52,1.123,63,2.77,64,1.596,73,2.313,78,2.502,85,0.429,88,0.492,93,4.359,95,1.448,96,3.603,98,2.029,99,0.111,100,0.329,101,3.08,102,2.603,106,2.348,111,2.079,118,2.608,146,2.029,189,0.003,190,0.005,191,0.003,198,1.878,218,2.738,220,5.169,222,2.59,236,3.694,279,1.004,280,1.188,281,0.513,282,3.213,283,3.186,284,3.881,285,1.529,286,2.153,287,3.881,288,3.382,289,4.252,290,4.252,291,3.881,292,2.59,293,3.866,294,3.555,295,6.369,296,3.213,297,2.779,298,3.382,299,4.826,300,5.398,301,4.252,302,4.252,303,1.05,304,3.213,305,1.607,306,3.881,307,4.252,308,5.537,309,4.252,310,3.213,311,3.881,312,2.192,313,4.252,314,1.535,315,3.213,316,3.881,317,2.837,318,3.213,319,2.476,320,1.492,321,2.405,322,1.253,323,2.669,324,1.653,325,1.596,326,2.105,327,2.134,328,2.59,329,2.257,330,3.533,331,2.837,332,2.837,333,2.837,334,2.837,335,2.837,336,2.837,337,2.837,338,2.837,339,2.837,340,2.405,341,3.603,342,2.837,343,2.837,344,2.837,345,2.837,346,2.837,347,2.837,348,1.253,349,2.837,350,2.837,351,2.837,352,2.837]],["title/injectables/AppService-1.html",[45,2.174,279,0.818,353,1.342]],["body/injectables/AppService-1.html",[3,0.119,4,0.119,9,0.09,10,2.822,12,0.493,13,3.436,14,1.6,15,1.539,28,0.415,31,2.046,34,2.504,35,4.821,38,2.92,43,1.539,45,2.686,46,1.279,48,2.42,49,0.009,50,1.576,51,0.954,52,1.129,63,2.777,64,1.61,73,2.328,78,2.513,85,0.43,88,0.496,93,4.369,95,1.461,96,3.627,98,2.046,99,0.112,100,0.332,101,3.096,102,2.616,106,2.355,111,2.086,118,2.618,146,2.046,189,0.003,190,0.005,191,0.003,198,1.89,218,2.747,220,5.191,222,2.612,236,3.703,279,1.01,280,1.198,283,3.199,284,3.906,285,1.539,286,2.158,287,3.906,288,3.404,289,4.279,290,4.279,291,3.906,292,2.612,293,3.882,294,3.57,295,6.389,297,2.797,298,3.404,299,4.843,300,5.415,301,4.279,302,4.279,303,1.053,305,1.617,306,3.906,307,4.279,308,5.557,309,4.279,311,3.906,312,2.204,313,4.279,314,1.541,316,3.906,317,2.862,319,2.492,320,1.502,321,2.425,322,1.264,323,2.686,324,1.667,325,1.61,326,2.119,327,2.152,328,2.612,329,2.276,330,3.546,331,2.862,332,2.862,333,2.862,334,2.862,335,2.862,336,2.862,337,2.862,338,2.862,339,2.862,340,2.425,341,3.627,342,2.862,343,2.862,344,2.862,345,2.862,346,2.862,347,2.862,348,1.264,349,2.862,350,2.862,351,2.862,352,2.862,354,3.241,355,3.241,356,3.241,357,3.241,358,3.241,359,3.241]],["title/interfaces/ApplicationData.html",[323,2.576,360,0.283]],["body/interfaces/ApplicationData.html",[3,0.169,4,0.169,9,0.128,12,0.539,14,1.327,23,1.596,28,0.589,29,1.39,49,0.009,51,0.861,52,1.37,53,2.804,60,4.551,73,3.385,78,3.457,85,0.257,99,0.243,118,3.086,142,3.205,143,2.183,150,3.749,151,2.656,163,3.749,189,0.004,190,0.006,191,0.004,270,2.55,281,0.327,303,1.21,312,2.867,314,1.575,320,1.426,323,3.448,348,2.945,360,0.479,361,1.028,362,3.708,363,4.132,364,1.895,365,4.132,366,2.362,367,4.132,368,4.681,369,4.767,370,4.248,371,2.656,372,3.056,373,3.928,374,2.074,375,2.773,376,4.681,377,2.804,378,3.056,379,3.056,380,2.012,381,3.056,382,3.056,383,2.905,384,2.55]],["title/interfaces/ApplicationData-1.html",[323,2.174,353,1.342,360,0.238]],["body/interfaces/ApplicationData-1.html",[3,0.17,4,0.17,9,0.128,10,1.798,12,0.54,14,1.329,23,1.183,28,0.59,29,1.392,49,0.009,51,0.862,52,1.372,53,2.808,60,4.554,73,3.389,78,3.458,85,0.257,99,0.243,118,3.088,142,3.208,143,2.186,150,3.754,151,2.661,163,3.754,189,0.004,190,0.006,191,0.004,270,2.555,303,1.211,312,2.869,314,1.576,320,1.429,323,3.453,348,2.948,360,0.48,361,1.03,363,4.137,364,1.897,365,4.137,366,2.365,367,4.137,368,4.686,369,4.771,370,4.252,371,2.661,372,3.062,373,3.933,374,2.078,375,2.778,376,4.686,377,2.808,378,3.062,379,3.062,380,2.016,381,3.062,382,3.062,383,2.911,384,2.555,385,3.716]],["title/modules/ApplicationDataModule.html",[192,0.784,205,3.087]],["body/modules/ApplicationDataModule.html",[3,0.203,4,0.203,9,0.154,12,0.422,14,1.495,23,1.976,45,4.738,49,0.009,85,0.452,88,0.845,99,0.19,100,0.565,106,2.281,166,1.987,189,0.005,190,0.007,191,0.005,192,1.3,194,1.937,195,2.04,196,2.276,197,2.276,198,3.005,199,2.095,205,5.938,210,2.975,211,2.276,212,2.213,223,2.734,281,0.393,293,5.152,294,4.738,328,4.448,329,3.876,371,4.046,386,4.873,387,4.873,388,5.519,389,3.739,390,7.009,391,5.649,392,4.655,393,5.519]],["title/injectables/ApplicationQuery.html",[279,0.969,293,2.801]],["body/injectables/ApplicationQuery.html",[3,0.206,4,0.206,9,0.156,12,0.542,14,1.512,23,1.818,43,1.783,46,1.042,48,1.97,49,0.009,50,1.283,51,0.777,52,1.092,85,0.455,88,0.859,99,0.194,100,0.794,106,2.306,189,0.005,190,0.007,191,0.005,233,2.788,236,4.187,279,1.477,280,2.075,281,0.504,286,1.905,293,4.27,294,4.52,299,5.906,327,3.728,329,3.943,330,2.887,389,3.78,394,5.614,395,5.711,396,2.196,397,4.525,398,5.614,399,2.619,400,3.008,401,2.53,402,4.525,403,4.525]],["title/injectables/ApplicationQuery-1.html",[279,0.818,293,2.363,353,1.342]],["body/injectables/ApplicationQuery-1.html",[3,0.207,4,0.207,9,0.157,10,2.773,12,0.544,14,1.516,43,1.792,46,1.047,48,1.98,49,0.009,50,1.29,51,0.781,52,1.097,85,0.456,88,0.863,99,0.195,100,0.796,106,2.314,189,0.005,190,0.007,191,0.005,233,2.802,236,4.192,279,1.482,280,2.086,286,1.911,293,4.284,294,4.528,299,5.915,327,3.747,329,3.963,330,2.902,389,3.791,395,5.729,396,2.203,397,4.547,399,2.628,400,3.017,401,2.543,402,4.547,403,4.547,404,5.642,405,5.642]],["title/interfaces/ApplicationState.html",[360,0.283,401,2.095]],["body/interfaces/ApplicationState.html",[3,0.156,4,0.156,9,0.118,12,0.325,14,1.636,23,1.511,28,0.544,29,1.316,49,0.009,50,1.347,51,0.936,57,3.358,78,2.298,85,0.329,90,1.349,99,0.274,106,2.377,118,3.198,153,0.901,180,1.674,189,0.004,190,0.006,191,0.004,218,3.271,239,0.503,281,0.302,285,1.349,286,2.316,303,0.618,305,1.417,312,2.772,314,1.511,319,3.029,320,1.826,324,2.185,325,2.11,326,3.767,348,3.286,360,0.495,361,0.949,364,1.818,380,1.857,396,1.317,401,2.655,406,2.821,407,3.142,408,3.265,409,2.655,410,2.11,411,2.04,412,2.185,413,2.266,414,2.185,415,1.782,416,3.029,417,2.185]],["title/interfaces/ApplicationState-1.html",[353,1.342,360,0.238,401,1.767]],["body/interfaces/ApplicationState-1.html",[3,0.157,4,0.157,9,0.118,10,1.66,12,0.326,14,1.637,23,1.092,28,0.545,29,1.318,49,0.009,50,1.348,51,0.937,57,3.362,78,2.3,85,0.329,90,1.352,99,0.274,106,2.379,118,3.199,153,0.903,180,1.675,189,0.004,190,0.006,191,0.004,218,3.272,239,0.503,285,1.352,286,2.317,303,0.62,305,1.42,312,2.774,314,1.512,319,3.033,320,1.828,324,2.189,325,2.114,326,3.768,348,3.287,360,0.495,361,0.951,364,1.819,380,1.861,396,1.319,401,2.658,407,3.146,408,3.269,409,2.658,410,2.114,411,2.044,412,2.189,413,2.27,414,2.189,415,1.784,416,3.033,417,2.189,418,2.826]],["title/injectables/ApplicationStore.html",[279,0.969,294,2.576]],["body/injectables/ApplicationStore.html",[3,0.213,4,0.213,9,0.161,12,0.444,14,1.811,23,1.856,43,2.503,46,1.076,49,0.009,50,1.326,85,0.44,88,0.888,99,0.2,100,0.593,106,2.686,118,2.202,189,0.006,190,0.007,191,0.006,233,2.881,236,4.078,279,1.508,280,2.144,281,0.515,286,1.944,294,4.009,326,2.536,327,3.852,348,2.263,389,3.858,396,2.242,401,2.614,419,5.801,420,5.801,421,5.413,422,5.413,423,4.074,424,2.983]],["title/injectables/ApplicationStore-1.html",[279,0.818,294,2.174,353,1.342]],["body/injectables/ApplicationStore-1.html",[3,0.214,4,0.214,9,0.162,10,2.83,12,0.446,14,1.814,43,2.509,46,1.082,49,0.009,50,1.333,85,0.441,88,0.892,99,0.201,100,0.596,106,2.69,118,2.214,189,0.006,190,0.007,191,0.006,233,2.896,236,4.084,279,1.513,280,2.155,286,1.95,294,4.021,326,2.549,327,3.872,348,2.274,389,3.87,396,2.249,401,2.628,421,5.43,422,5.43,423,4.095,424,2.999,425,5.831,426,5.831]],["title/interfaces/BasePlugin.html",[360,0.283,427,1.813]],["body/interfaces/BasePlugin.html",[3,0.168,4,0.168,9,0.127,12,0.35,14,0.976,28,0.585,29,1.384,31,2.392,46,0.848,49,0.009,51,0.857,52,1.641,85,0.346,88,0.7,99,0.272,100,0.468,103,2.417,111,1.875,180,0.998,189,0.004,190,0.006,191,0.004,192,1.045,239,0.445,272,2.976,281,0.325,285,1.452,303,1.023,314,1.683,322,1.784,360,0.478,361,1.022,427,2.938,428,3.422,429,4.115,430,3.734,431,2.747,432,3.576,433,4.193,434,5.002,435,3.618,436,4.115,437,2.639,438,3.072,439,4.667,440,1.173,441,2.127,442,2.535,443,3.037,444,2.127,445,2.639,446,3.037,447,1.647,448,3.434,449,3.434,450,2.63,451,2.756,452,2.887,453,2.756,454,1.999,455,2.535,456,2.887]],["title/interfaces/BasePlugin-1.html",[353,1.342,360,0.238,427,1.53]],["body/interfaces/BasePlugin-1.html",[3,0.168,4,0.168,9,0.127,12,0.349,14,0.974,28,0.584,29,1.382,31,2.39,46,0.847,49,0.009,51,0.856,52,1.641,85,0.345,88,0.698,99,0.271,100,0.467,103,2.413,111,1.872,180,0.996,189,0.004,190,0.006,191,0.004,192,1.044,239,0.477,272,2.972,281,0.325,285,1.449,303,1.022,314,1.681,322,1.78,360,0.478,361,1.02,427,2.935,429,4.109,430,3.729,431,2.746,432,3.571,433,4.191,434,4.998,435,3.615,436,4.109,437,2.634,438,3.069,439,4.662,440,1.171,441,2.122,442,2.53,443,3.031,444,2.122,445,2.634,446,3.031,447,1.644,448,3.429,449,3.429,450,2.626,451,2.75,452,2.881,453,2.75,454,1.995,455,2.53,456,2.881,457,3.415]],["title/interfaces/Block.html",[153,0.711,360,0.283]],["body/interfaces/Block.html",[3,0.129,4,0.129,6,1.583,9,0.098,12,0.269,28,0.449,29,1.496,46,0.652,49,0.009,51,1.256,52,1.302,54,1.707,99,0.278,133,3.327,142,2.183,143,2.77,144,2.743,153,1.374,189,0.003,190,0.005,191,0.003,239,0.5,266,3.101,281,0.366,286,2.2,303,1.208,305,2.379,314,1.149,353,1.201,360,0.519,361,0.785,364,1.636,366,1.333,374,2.318,396,2.076,400,1.491,431,1.062,458,1.946,459,1.946,460,3.512,461,2.248,462,1.873,463,2.85,464,2.85,465,1.873,466,1.687,467,2.85,468,2.743,469,3.026,470,2.743,471,3.267,472,2.743,473,1.946,474,1.448,475,2.743,476,3.424,477,2.968,478,1.946,479,3.372,480,2.027,481,2.027,482,2.027,483,2.027,484,2.027,485,2.743,486,1.946,487,1.946]],["title/interfaces/BlocksMap.html",[360,0.283,488,2.683]],["body/interfaces/BlocksMap.html",[3,0.169,4,0.169,9,0.128,12,0.351,46,0.85,49,0.009,51,0.859,85,0.392,92,5.207,94,2.444,95,2.065,99,0.28,106,1.492,153,1.206,189,0.004,190,0.006,191,0.004,239,0.542,281,0.441,303,1.209,305,1.529,314,1.966,322,3.432,360,0.494,361,1.024,364,1.668,399,1.694,415,1.386,440,1.176,459,2.54,474,2.559,488,3.581,489,3.043,490,5.844,491,3.917,492,4.583,493,3.439,494,2.893,495,3.739,496,2.357,497,2.762,498,2.201,499,2.762,500,2.645,501,2.003,502,2.645,503,2.893,504,2.357,505,2.276,506,2.645]],["title/interfaces/ChangeMap.html",[360,0.283,506,2.683]],["body/interfaces/ChangeMap.html",[3,0.168,4,0.168,9,0.127,12,0.349,46,0.847,49,0.009,51,0.856,85,0.392,92,5.205,94,2.434,95,2.057,99,0.28,106,1.486,153,1.074,189,0.004,190,0.006,191,0.004,239,0.542,281,0.44,303,1.208,305,1.523,314,1.965,322,3.43,360,0.493,361,1.02,364,1.663,399,1.687,415,1.381,440,1.171,459,2.53,474,3.104,488,2.634,489,3.031,490,5.84,491,2.881,493,3.429,494,2.881,495,3.729,496,2.347,497,2.75,498,2.192,499,2.75,500,2.634,501,1.995,502,2.634,503,3.906,504,3.182,505,3.073,506,3.571,507,4.564]],["title/classes/Changed.html",[100,0.476,508,2.683]],["body/classes/Changed.html",[3,0.161,4,0.161,9,0.122,18,3.302,28,0.559,29,1.342,34,1.908,43,1.388,46,1.273,48,1.534,49,0.009,50,0.999,51,1.217,52,0.85,54,1.046,55,1.911,85,0.335,99,0.283,100,0.793,102,3.696,180,1.692,189,0.004,190,0.006,191,0.004,239,0.537,281,0.526,286,1.615,303,1.128,409,1.97,440,1.121,496,4.296,501,3.388,508,4.472,509,2.523,510,4.666,511,2.759,512,4.733,513,3.07,514,4.821,515,6.007,516,4.371,517,4.219,518,2.903,519,3.962,520,2.759,521,3.962,522,3.792,523,1.911,524,3.962,525,2.759,526,4.137,527,3.07,528,4.891,529,3.492,530,3.07,531,3.07,532,3.07,533,2.903]],["title/interfaces/DemoData.html",[326,2.032,360,0.283]],["body/interfaces/DemoData.html",[3,0.159,4,0.159,9,0.12,12,0.33,14,1.454,23,1.527,28,0.552,29,1.33,49,0.009,50,1.823,51,0.824,57,2.956,78,1.682,85,0.332,90,1.37,99,0.275,106,2.218,118,2.927,153,0.911,180,1.741,189,0.004,190,0.006,191,0.004,218,3.37,239,0.517,281,0.307,285,1.37,286,2.373,303,0.992,305,2.274,312,2.26,314,1.523,319,2.218,320,1.337,324,2.218,325,2.142,326,3.573,348,3.008,360,0.506,361,0.963,364,1.159,380,2.602,396,1.337,401,1.944,406,2.864,407,2.3,408,2.39,409,2.683,410,2.142,411,2.859,412,2.218,413,2.3,414,2.218,415,1.801,416,3.061,417,2.218]],["title/interfaces/DemoData-1.html",[326,1.715,353,1.342,360,0.238]],["body/interfaces/DemoData-1.html",[3,0.159,4,0.159,9,0.12,10,1.685,12,0.331,14,1.456,23,1.109,28,0.553,29,1.331,49,0.009,50,1.824,51,0.825,57,2.96,78,1.685,85,0.332,90,1.372,99,0.275,106,2.221,118,2.929,153,0.912,180,1.742,189,0.004,190,0.006,191,0.004,218,3.371,239,0.518,285,1.372,286,2.374,303,0.993,305,2.277,312,2.263,314,1.524,319,2.222,320,1.339,324,2.222,325,2.146,326,3.574,348,3.01,360,0.506,361,0.965,364,1.161,380,2.606,396,1.339,401,1.947,407,2.305,408,2.395,409,2.686,410,2.146,411,2.862,412,2.222,413,2.305,414,2.222,415,1.803,416,3.065,417,2.222,418,2.869]],["title/interfaces/EditorJSConfig.html",[360,0.283,534,2.683]],["body/interfaces/EditorJSConfig.html",[3,0.139,4,0.139,9,0.105,12,0.289,28,0.484,29,1.212,49,0.009,50,1.24,51,1.114,52,1.703,53,1.704,54,1.829,85,0.303,88,0.579,99,0.253,103,2.475,129,3.27,153,1.17,168,2.695,189,0.004,190,0.005,191,0.004,239,0.51,257,2.655,272,3.048,281,0.269,285,2.202,286,2.054,303,1.194,320,1.682,360,0.33,361,0.845,364,2.054,377,2.445,399,2.346,424,2.79,437,2.182,440,0.97,441,3.554,448,2.095,449,3.007,469,2.303,474,2.617,504,2.79,519,4.002,529,3.125,534,3.662,535,3.047,536,4.87,537,4.87,538,4.87,539,4.87,540,5.367,541,5.367,542,4.791,543,4.06,544,4.06,545,4.372,546,3.811,547,4.791,548,4.06,549,2.606,550,4.06,551,2.951,552,3.811,553,3.811,554,3.603,555,3.811,556,3.811,557,3.425,558,5.189,559,4.06,560,3.047,561,3.047,562,2.182,563,4.006,564,2.511,565,3.047,566,2.655,567,3.047,568,2.095,569,3.047,570,2.511,571,2.829,572,3.047,573,2.829,574,3.047,575,3.047]],["title/modules/EditorJSInstanceModule.html",[192,0.784,576,3.265]],["body/modules/EditorJSInstanceModule.html",[3,0.21,4,0.21,9,0.159,12,0.437,15,2.275,49,0.009,85,0.437,88,0.874,99,0.197,100,0.584,166,2.057,189,0.006,190,0.007,191,0.006,192,1.32,194,2.005,195,2.112,196,2.356,197,2.356,198,3.053,199,2.169,210,3.041,211,2.356,212,2.291,223,2.794,239,0.554,279,1.493,281,0.406,369,4.523,389,3.047,440,1.466,498,3.441,570,4.758,576,6.058,577,5.045,578,5.045,579,6.058,580,4.604,581,5.713,582,5.774,583,5.774,584,4.275,585,5.045]],["title/injectables/EditorJSInstanceService.html",[279,0.969,579,3.265]],["body/injectables/EditorJSInstanceService.html",[3,0.052,4,0.052,7,1.414,9,0.039,12,0.48,14,0.523,15,0.446,16,0.886,20,1.051,28,0.18,31,0.778,34,2.553,43,0.778,46,1.164,48,2.128,49,0.009,50,1.386,51,0.989,52,1.179,54,0.586,55,2.824,56,2.855,63,2.611,64,2.893,66,1.24,85,0.31,88,0.215,92,2.557,93,4.071,94,2.363,95,0.633,97,1.131,98,0.886,99,0.085,100,0.498,101,3.687,102,1.104,103,2.744,107,1.24,111,1.584,115,1.974,116,1.131,121,1.24,122,1.24,142,1.383,146,0.886,153,0.891,168,1.217,189,0.001,190,0.002,191,0.001,239,0.551,272,2.515,279,0.511,280,0.519,281,0.46,283,2.417,297,1.414,298,3.418,303,1.193,320,0.435,321,1.051,322,2.042,330,4.033,340,2.439,341,1.833,371,0.81,377,1.759,395,2.626,399,3.126,400,0.596,415,2.129,424,1.676,437,0.81,440,0.36,441,1.139,448,0.778,449,0.778,488,2.253,493,1.358,495,0.846,496,0.722,497,1.964,498,1.875,499,1.964,500,1.881,501,1.937,502,2.253,505,1.939,506,2.253,523,2.289,529,3.841,549,3.609,551,1.515,562,2.557,568,3.228,570,1.627,579,1.721,580,5.206,582,1.974,583,1.131,586,1.24,587,3.447,588,3.904,589,5.143,590,2.163,591,2.45,592,3.477,593,3.477,594,2.45,595,1.974,596,2.45,597,2.45,598,2.45,599,3.922,600,1.404,601,5.055,602,3.146,603,3.447,604,3.904,605,1.404,606,1.974,607,2.45,608,4.867,609,2.45,610,2.163,611,1.404,612,4.623,613,4.156,614,2.45,615,2.289,616,1.404,617,1.721,618,4.867,619,2.45,620,1.404,621,2.45,622,1.833,623,2.45,624,1.404,625,2.163,626,2.45,627,2.163,628,1.404,629,2.45,630,1.404,631,2.45,632,1.404,633,2.45,634,1.404,635,2.163,636,1.404,637,2.163,638,1.404,639,2.626,640,1.131,641,1.404,642,1.051,643,1.404,644,1.051,645,1.24,646,1.24,647,1.131,648,2.45,649,1.404,650,1.404,651,2.45,652,1.404,653,3.259,654,4.43,655,1.404,656,1.404,657,1.404,658,4.43,659,1.404,660,1.404,661,1.404,662,3.259,663,4.43,664,4.867,665,5.551,666,1.404,667,1.404,668,2.45,669,1.404,670,2.45,671,1.404,672,1.404,673,2.45,674,1.404,675,1.404,676,1.404,677,1.404,678,1.404,679,1.404,680,1.404,681,1.404,682,1.404,683,2.878,684,0.986,685,1.404,686,1.404,687,1.404,688,2.45,689,4.43,690,1.404,691,2.45,692,1.404,693,1.24,694,1.404,695,1.404,696,1.404,697,3.904,698,1.404,699,1.404,700,1.404,701,1.404,702,1.404,703,1.404,704,1.404,705,1.131,706,1.404,707,1.404,708,2.626,709,2.626,710,1.404,711,1.404,712,1.404,713,2.878,714,2.878,715,1.404,716,1.404,717,1.404,718,1.404,719,1.404,720,1.404,721,1.404,722,1.404,723,0.846,724,0.846,725,0.778,726,0.986,727,1.404]],["title/interfaces/EditorMap.html",[360,0.283,499,2.801]],["body/interfaces/EditorMap.html",[3,0.169,4,0.169,9,0.128,12,0.352,46,0.854,49,0.009,51,0.861,85,0.393,92,5.19,94,2.454,95,2.074,99,0.281,106,1.498,153,1.079,189,0.004,190,0.006,191,0.004,239,0.549,281,0.443,303,1.21,305,1.535,314,1.967,322,3.435,360,0.494,361,1.028,364,1.672,399,1.701,415,1.392,440,1.181,459,2.55,474,2.566,488,2.656,489,3.056,490,5.848,491,2.905,493,3.448,494,2.905,495,3.749,496,2.366,497,2.773,498,2.988,499,3.749,500,2.656,501,2.012,502,2.656,503,2.905,504,2.366,505,2.285,506,2.656,728,4.601]],["title/interfaces/EventMap.html",[360,0.283,497,2.801]],["body/interfaces/EventMap.html",[3,0.169,4,0.169,9,0.128,12,0.351,46,0.85,49,0.009,51,0.859,85,0.392,92,5.187,94,3.309,95,2.065,99,0.28,106,1.492,153,1.077,189,0.004,190,0.006,191,0.004,239,0.542,281,0.441,303,1.209,305,1.529,314,1.966,322,3.432,360,0.494,361,1.024,364,1.668,399,2.294,415,1.386,440,1.176,459,2.54,474,2.559,488,2.645,489,3.043,490,5.844,491,2.893,493,3.899,494,2.893,495,4.239,496,2.357,497,3.739,498,2.201,499,2.762,500,2.645,501,2.003,502,2.645,503,2.893,504,2.357,505,2.276,506,2.645,729,4.583]],["title/interfaces/EventType.html",[360,0.283,495,2.801]],["body/interfaces/EventType.html",[3,0.167,4,0.167,9,0.126,12,0.347,28,0.581,29,1.377,49,0.009,51,1.166,52,1.198,85,0.39,92,5.133,94,2.42,95,2.045,99,0.279,106,1.477,153,1.071,189,0.004,190,0.006,191,0.004,239,0.541,281,0.323,303,1.227,305,2.335,314,1.93,322,3.369,360,0.492,361,1.014,364,1.656,399,1.677,415,1.373,440,1.164,474,2.541,488,2.618,489,3.013,490,5.737,491,2.864,493,3.879,494,3.89,495,4.217,496,3.861,497,2.734,498,2.179,499,2.734,500,2.618,501,1.983,502,2.618,503,2.864,504,2.333,505,2.253,506,2.618]],["title/interfaces/Header.html",[360,0.283,471,1.973]],["body/interfaces/Header.html",[3,0.131,4,0.131,6,1.605,9,0.099,12,0.272,28,0.456,29,1.37,49,0.009,51,1.241,52,1.311,54,1.792,99,0.279,133,3.935,142,2.205,143,2.781,144,2.771,153,1.364,189,0.003,190,0.005,191,0.003,239,0.474,281,0.253,286,2.078,303,1.195,305,2.047,314,0.796,353,1.778,360,0.516,361,0.796,364,1.649,366,1.352,374,2.342,396,2.09,400,1.512,431,1.077,458,1.974,461,1.557,462,1.9,463,2.88,464,2.88,465,1.9,466,1.71,467,2.88,468,2.771,469,3.044,470,2.771,471,3.532,472,3.993,473,2.88,474,2.53,475,2.771,476,3.444,477,2.999,478,1.974,479,3.4,480,2.055,481,2.055,482,2.055,483,2.055,484,2.055,485,2.771,486,1.974,487,1.974]],["title/interfaces/HeaderBlock.html",[360,0.283,475,2.48]],["body/interfaces/HeaderBlock.html",[3,0.134,4,0.134,6,1.641,9,0.101,12,0.279,28,0.466,29,1.388,49,0.009,51,1.247,52,1.325,54,1.732,99,0.28,133,3.384,142,2.241,143,2.798,144,2.816,153,1.376,189,0.004,190,0.005,191,0.004,239,0.493,281,0.259,286,2.028,303,1.161,305,2.073,314,0.813,353,1.246,360,0.523,361,0.813,364,1.67,366,1.382,374,2.38,396,2.242,400,1.546,431,1.102,458,2.018,461,1.592,462,1.942,463,2.927,464,2.927,465,1.942,466,1.749,467,2.927,468,2.816,469,3.071,470,2.816,471,3.384,472,2.816,473,2.018,474,1.502,475,3.314,476,3.475,477,3.048,478,2.018,479,3.443,480,2.102,481,2.102,482,2.102,483,2.102,484,2.102,485,2.816,486,2.018,487,2.018]],["title/components/HomePageComponent.html",[0,1.864,173,2.48]],["body/components/HomePageComponent.html",[0,2.755,1,2.527,2,4.269,3,0.161,4,0.161,5,2.908,6,1.974,7,2.527,8,2.908,9,0.122,10,2.68,21,2.765,22,5.353,23,2.223,24,3.995,26,3.995,28,0.56,34,1.391,38,3.625,43,1.391,44,3.867,45,4.1,46,1.116,48,1.537,49,0.009,50,1.691,51,0.606,52,0.851,53,2.711,56,3.094,57,2.988,59,2.608,73,2.103,78,3.024,85,0.336,88,0.67,90,1.391,99,0.151,100,0.448,102,1.974,108,2.765,111,1.325,123,3.867,124,2.908,143,2.111,166,1.577,167,3.995,168,2.988,169,2.175,170,4.912,171,2.908,172,2.908,173,3.946,174,5.036,175,2.908,176,2.527,177,2.908,178,2.908,179,2.336,180,1.313,181,2.908,182,2.427,183,2.908,184,2.527,185,2.765,186,2.252,187,2.639,188,2.908,189,0.004,190,0.006,191,0.004,217,4.848,218,2.284,291,3.529,392,4.912,461,2.63,730,6.871,731,4.379,732,6.871,733,6.015,734,4.379,735,4.379,736,3.277,737,6.015,738,4.848,739,5.311,740,4.501,741,6.015,742,6.015,743,4.848,744,5.311,745,3.797,746,4.501,747,5.311,748,6.015,749,4.501,750,3.995,751,4.848,752,6.015]],["title/interfaces/Image.html",[360,0.283,476,2.233]],["body/interfaces/Image.html",[3,0.124,4,0.124,6,1.517,9,0.094,12,0.257,28,0.431,29,1.326,49,0.009,51,1.243,52,1.673,54,1.756,99,0.275,133,3.259,142,2.116,143,2.736,144,2.659,153,1.356,189,0.003,190,0.005,191,0.003,239,0.465,281,0.239,286,2.041,303,1.211,305,1.981,314,0.752,353,1.152,360,0.511,361,0.752,364,2.141,366,1.278,374,3.307,396,2.034,400,1.429,431,1.018,458,1.865,461,1.472,462,1.795,463,2.763,464,2.763,465,1.795,466,1.617,467,2.763,468,2.659,469,2.974,470,2.659,471,3.31,472,2.659,473,1.865,474,1.388,475,2.659,476,3.745,477,4.235,478,2.763,479,4.066,480,3.788,481,2.877,482,3.788,483,2.877,484,3.788,485,2.659,486,1.865,487,1.865]],["title/interfaces/ImageBlock.html",[360,0.283,485,2.48]],["body/interfaces/ImageBlock.html",[3,0.134,4,0.134,6,1.641,9,0.101,12,0.279,28,0.466,29,1.388,49,0.009,51,1.247,52,1.325,54,1.732,99,0.28,133,3.384,142,2.241,143,2.798,144,2.816,153,1.376,189,0.004,190,0.005,191,0.004,239,0.493,281,0.259,286,2.028,303,1.161,305,2.073,314,0.813,353,1.246,360,0.523,361,0.813,364,1.67,366,1.382,374,2.38,396,2.242,400,1.546,431,1.102,458,2.018,461,1.592,462,1.942,463,2.927,464,2.927,465,1.942,466,1.749,467,2.927,468,2.816,469,3.071,470,2.816,471,3.304,472,2.816,473,2.018,474,1.502,475,2.816,476,3.624,477,3.048,478,2.018,479,3.443,480,2.102,481,2.102,482,2.102,483,2.102,484,2.102,485,3.314,486,2.018,487,2.018]],["title/interfaces/List.html",[143,1.632,360,0.283]],["body/interfaces/List.html",[3,0.131,4,0.131,6,1.605,9,0.099,12,0.272,28,0.456,29,1.37,49,0.009,51,1.244,52,1.311,54,1.792,99,0.279,133,3.349,142,3.178,143,2.953,144,3.993,153,1.364,189,0.003,190,0.005,191,0.003,239,0.474,281,0.253,286,2.078,303,1.154,305,2.498,314,0.796,353,1.218,360,0.516,361,0.796,364,1.649,366,1.352,374,2.342,396,2.09,400,1.512,431,1.077,458,1.974,461,1.557,462,1.9,463,2.88,464,2.88,465,1.9,466,1.71,467,3.737,468,2.771,469,3.044,470,2.771,471,3.281,472,2.771,473,1.974,474,1.469,475,2.771,476,3.444,477,2.999,478,1.974,479,3.4,480,2.055,481,2.055,482,2.055,483,2.055,484,2.055,485,2.771,486,1.974,487,1.974]],["title/interfaces/ListBlock.html",[360,0.283,468,2.48]],["body/interfaces/ListBlock.html",[3,0.133,4,0.133,6,1.631,9,0.101,12,0.277,28,0.463,29,1.383,49,0.009,51,1.246,52,1.321,54,1.802,99,0.28,133,3.374,142,2.231,143,2.892,144,2.803,153,1.375,189,0.004,190,0.005,191,0.004,239,0.504,281,0.257,286,2.023,303,1.159,305,2.065,314,0.808,353,1.238,360,0.518,361,0.808,364,1.664,366,1.374,374,2.369,396,2.237,400,2.231,431,1.59,458,2.005,461,1.582,462,1.93,463,2.913,464,2.913,465,1.93,466,1.738,467,2.913,468,3.302,469,3.063,470,2.803,471,3.297,472,2.803,473,2.005,474,1.492,475,2.803,476,3.466,477,3.033,478,2.005,479,3.431,480,2.088,481,2.088,482,2.088,483,2.088,484,2.088,485,2.803,486,2.005,487,2.005]],["title/modules/MaterialModule.html",[192,0.784,206,3.087]],["body/modules/MaterialModule.html",[3,0.224,4,0.224,9,0.169,10,2.372,12,0.465,49,0.009,56,3.83,72,6.575,85,0.415,88,0.931,89,4.271,99,0.21,100,0.622,189,0.006,190,0.007,191,0.006,192,1.256,194,2.134,199,2.308,206,4.945,219,3.37,223,2.904,254,6.487,284,6.001,430,4.487,568,4.127,753,6.081,754,5.572,755,8.049,756,8.049,757,8.049,758,8.049,759,7.107]],["title/interfaces/MenuGroup.html",[312,1.765,360,0.283]],["body/interfaces/MenuGroup.html",[3,0.161,4,0.161,9,0.122,12,0.526,14,0.936,23,1.545,28,0.561,29,1.346,49,0.009,51,0.952,52,1.596,53,2.715,60,5.112,73,3.303,78,3.487,85,0.245,99,0.237,118,2.287,142,3.643,143,1.54,150,3.63,151,2.532,163,3.63,189,0.004,190,0.006,191,0.004,270,2.432,281,0.312,303,1.262,312,2.611,314,1.868,320,1.867,323,2.432,348,1.711,360,0.45,361,0.98,362,3.536,363,2.914,364,1.179,365,2.914,366,1.666,367,2.914,368,4.568,369,4.674,370,4.676,371,2.532,372,2.914,373,4.342,374,1.977,375,2.644,376,4.916,377,3.1,378,4,379,4,380,2.633,381,4,382,4,383,3.803,384,3.338]],["title/interfaces/MenuGroup-1.html",[312,1.489,353,1.342,360,0.238]],["body/interfaces/MenuGroup-1.html",[3,0.162,4,0.162,9,0.122,10,1.715,12,0.527,14,0.938,23,1.128,28,0.563,29,1.347,49,0.009,51,0.953,52,1.597,53,2.718,60,5.114,73,3.307,78,3.488,85,0.245,99,0.238,118,2.29,142,3.645,143,1.543,150,3.635,151,2.537,163,3.635,189,0.004,190,0.006,191,0.004,270,2.436,303,1.262,312,2.614,314,1.869,320,1.869,323,2.436,348,1.715,360,0.45,361,0.982,363,2.919,364,1.182,365,2.919,366,1.669,367,2.919,368,4.572,369,4.678,370,4.679,371,2.537,372,2.919,373,4.346,374,1.981,375,2.649,376,4.92,377,3.103,378,4.005,379,4.005,380,2.637,381,4.005,382,4.005,383,3.808,384,3.343,385,3.543]],["title/interfaces/MenuItem.html",[360,0.283,370,2.801]],["body/interfaces/MenuItem.html",[3,0.154,4,0.154,9,0.117,12,0.621,14,0.896,23,1.725,28,0.538,29,1.306,49,0.009,51,1.057,52,1.686,53,3.275,60,4.603,73,2.807,78,3.45,85,0.234,99,0.232,118,2.219,142,3.085,143,1.474,150,4.766,151,3.373,163,4.766,189,0.004,190,0.006,191,0.004,270,2.328,281,0.299,303,1.294,312,2.219,314,1.502,320,1.302,323,2.328,348,1.638,360,0.442,361,0.938,362,3.385,363,2.79,364,1.129,365,2.79,366,1.595,367,2.79,368,5.252,369,5.223,370,4.766,371,3.373,372,3.881,373,4.243,374,2.634,375,4.379,376,5.388,377,3.029,378,2.79,379,2.79,380,1.837,381,2.79,382,2.79,383,2.652,384,2.328]],["title/interfaces/MenuItem-1.html",[353,1.342,360,0.238,370,2.363]],["body/interfaces/MenuItem-1.html",[3,0.155,4,0.155,9,0.117,10,1.642,12,0.621,14,0.898,23,1.502,28,0.539,29,1.307,49,0.009,51,1.058,52,1.687,53,3.278,60,4.606,73,2.811,78,3.451,85,0.235,99,0.232,118,2.222,142,3.087,143,1.477,150,4.769,151,3.378,163,4.769,189,0.004,190,0.006,191,0.004,270,2.332,303,1.294,312,2.222,314,1.503,320,1.304,323,2.332,348,1.642,360,0.442,361,0.94,363,2.795,364,1.131,365,2.795,366,1.598,367,2.795,368,5.255,369,5.225,370,4.769,371,3.378,372,3.886,373,4.248,374,2.638,375,4.383,376,5.39,377,3.032,378,2.795,379,2.795,380,1.84,381,2.795,382,2.795,383,2.657,384,2.332,385,3.392]],["title/classes/MockEditorJS.html",[100,0.476,760,3.479]],["body/classes/MockEditorJS.html",[3,0.176,4,0.176,9,0.133,18,1.969,28,0.611,29,1.425,34,1.517,43,2.026,46,1.482,48,1.676,49,0.009,50,1.092,51,1.105,52,0.928,64,2.372,85,0.401,99,0.248,100,0.784,108,3.015,111,2.319,189,0.005,190,0.006,191,0.005,281,0.585,303,0.929,377,2.875,415,2.319,427,2.488,431,1.445,433,3.168,434,3.171,438,2.789,440,1.225,509,2.756,523,2.088,534,4.424,551,3.34,592,3.171,593,4.77,723,2.878,724,2.878,725,4.249,760,4.773,761,3.848,762,5.789,763,4.217,764,6.379,765,4.775,766,4.775,767,4.775,768,3.848,769,3.848,770,4.773,771,3.848,772,3.574,773,5.789,774,3.848,775,3.848,776,3.354,777,3.848,778,3.574,779,3.848,780,3.848]],["title/injectables/MockNgZone.html",[279,0.969,781,4.105]],["body/injectables/MockNgZone.html",[3,0.184,4,0.184,9,0.139,12,0.383,28,0.641,29,1.471,31,2.09,43,2.335,46,1.505,48,2.31,49,0.009,50,1.505,51,1.018,52,1.28,54,1.199,55,2.189,63,2.648,64,3.269,85,0.279,88,0.766,99,0.173,100,0.512,103,2.567,111,1.992,189,0.005,190,0.006,191,0.005,279,1.372,280,1.851,281,0.593,375,3.018,396,2.04,423,3.517,424,2.575,434,5.531,601,6.713,602,6.539,606,5.305,781,5.812,782,8.329,783,5.007,784,6.582,785,6.582,786,7.354,787,6.582,788,7.811,789,6.582,790,6.582,791,5.007,792,7.811,793,6.582,794,5.007,795,5.007,796,6.493,797,6.582,798,5.007,799,5.007]],["title/classes/MockPlugin.html",[100,0.476,772,3.479]],["body/classes/MockPlugin.html",[3,0.184,4,0.184,9,0.139,18,2.711,28,0.639,31,2.087,34,2.333,43,1.587,46,1.219,49,0.009,63,2.367,64,2.481,85,0.41,99,0.253,100,0.798,108,3.154,111,2.361,189,0.005,190,0.006,191,0.005,281,0.523,303,0.957,377,2.962,415,1.989,427,2.865,431,2.361,433,4.027,438,3.212,440,1.282,509,2.884,523,2.184,534,3.794,551,3.056,592,3.318,593,3.318,723,3.011,724,3.011,725,3.643,760,3.739,761,4.026,762,4.026,768,4.026,769,4.026,770,4.919,771,4.026,772,4.919,773,5.92,774,4.026,775,4.026,776,3.509,777,4.026,778,3.739,779,4.026,780,4.026,800,4.996,801,4.996]],["title/components/NavBarComponent.html",[0,1.864,176,2.683]],["body/components/NavBarComponent.html",[0,3.284,1,2.171,2,3.12,3,0.138,4,0.138,5,2.498,6,1.695,7,2.171,8,2.498,9,0.105,10,2.698,12,0.288,13,2.884,14,1.153,15,1.717,21,2.375,22,5.171,23,2.101,24,3.59,26,3.59,28,0.481,35,4.735,36,3.797,46,1.174,49,0.009,50,1.447,51,0.748,54,0.901,55,1.645,59,1.428,60,4.737,73,3.519,78,3.066,85,0.302,86,3.814,88,0.576,90,1.195,99,0.13,100,0.385,103,1.467,129,3.258,131,4.046,133,2.685,134,3.322,135,4.774,136,4.774,137,3.322,138,3.322,139,3.322,140,3.322,141,3.322,142,1.597,143,1.32,144,2.007,145,4.774,146,4.367,147,5.588,148,3.322,149,3.322,150,2.267,151,3.12,152,3.59,153,0.827,154,4.774,155,3.322,156,3.032,157,3.322,158,4.357,159,3.322,160,3.322,161,3.322,162,3.032,163,2.267,164,3.322,165,3.322,166,1.355,167,3.59,168,2.685,169,1.868,170,4.594,171,2.498,172,2.498,173,2.007,174,2.267,175,2.498,176,3.993,177,5.341,178,2.498,179,2.007,180,1.18,181,2.498,182,2.085,183,2.498,184,2.171,185,2.375,186,1.935,187,2.267,188,2.498,189,0.004,190,0.005,191,0.004,247,6.108,312,2.402,320,1.676,493,2.996,544,4.046,568,2.996,736,2.815,796,5.588,802,6.918,803,3.762,804,6.918,805,3.413,806,5.406,807,6.918,808,5.406,809,5.406,810,6.328,811,5.406,812,5.406,813,3.762,814,3.762,815,3.762,816,5.406,817,3.762,818,5.406]],["title/components/NgxEditorJSComponent.html",[0,1.864,179,2.48]],["body/components/NgxEditorJSComponent.html",[0,3.078,1,1.475,2,2.329,3,0.094,4,0.094,5,1.697,6,1.151,7,2.887,8,1.697,9,0.071,12,0.309,14,0.861,21,1.613,22,4.64,23,1.458,24,2.68,26,2.68,28,0.327,29,0.902,34,2.624,36,2.835,43,0.811,46,1.47,48,0.897,49,0.009,50,1.504,51,1.096,52,0.973,54,1.709,55,1.765,59,0.97,69,2.059,73,1.227,85,0.345,86,4.627,87,2.256,88,0.391,93,3.15,99,0.088,100,0.261,102,2.255,129,3.425,131,3.02,133,1.269,151,1.475,153,1.125,158,2.059,166,0.92,167,2.68,168,2.823,169,2.485,170,3.774,171,1.697,172,1.697,173,1.363,174,1.54,175,1.697,176,1.475,177,1.697,178,1.697,179,3.031,180,1.241,181,1.697,182,1.416,183,1.697,184,1.475,185,1.613,186,2.923,187,1.54,188,1.697,189,0.002,190,0.004,191,0.002,229,2.68,239,0.477,281,0.571,283,3.738,285,1.805,288,3.992,297,3.28,303,1.096,320,2.213,330,1.314,353,0.874,360,0.245,364,1.768,366,1.532,377,1.819,399,2.101,400,1.713,415,2.084,421,3.02,424,2.076,433,2.004,440,0.656,441,1.877,444,2.643,469,1.713,474,1.664,478,2.237,504,2.076,505,2.004,523,1.765,528,1.613,529,2.255,536,4.347,537,3.514,538,3.514,539,3.514,540,4.347,541,4.347,546,2.835,548,3.02,549,1.938,550,3.02,552,2.835,553,2.835,554,2.68,555,2.835,556,2.835,557,2.548,558,3.744,559,3.02,613,3.949,615,3.514,642,1.912,684,3.992,747,2.256,819,8.022,820,2.555,821,2.835,822,4.036,823,3.02,824,3.02,825,5.003,826,4.036,827,4.032,828,2.555,829,3.43,830,4.036,831,2.555,832,3.253,833,2.555,834,3.564,835,2.555,836,2.555,837,2.555,838,2.835,839,4.253,840,2.555,841,2.555,842,2.555,843,2.555,844,4.036,845,2.555,846,4.036,847,3.253,848,2.555,849,2.256,850,2.256,851,2.059,852,2.256,853,4.036,854,4.036,855,5.018,856,4.417,857,2.555,858,2.555,859,2.555,860,2.555,861,2.555,862,2.555,863,2.555]],["title/interfaces/NgxEditorJSConfig.html",[360,0.283,563,2.935]],["body/interfaces/NgxEditorJSConfig.html",[3,0.166,4,0.166,9,0.125,12,0.344,28,0.576,29,1.369,49,0.009,50,1.029,51,0.623,52,1.192,53,2.028,54,1.668,85,0.342,88,0.689,99,0.27,103,2.718,129,2.712,153,1.067,168,2.235,189,0.004,190,0.006,191,0.004,239,0.546,257,4.305,272,3.347,281,0.32,285,1.946,286,1.647,303,1.015,320,1.395,360,0.373,361,1.005,364,1.647,377,2.028,399,2.266,424,2.315,437,2.598,440,1.155,441,3.756,448,2.494,449,3.397,469,1.91,474,1.856,504,2.315,519,3.537,529,2.028,534,4.319,535,3.627,536,3.161,537,3.161,538,3.161,539,3.161,540,4.305,541,4.305,542,3.974,543,3.368,544,3.368,545,3.627,546,3.161,547,3.974,548,3.368,549,2.162,550,3.368,551,2.85,552,3.161,553,3.161,554,2.989,555,3.161,556,3.161,557,2.841,558,4.587,559,3.368,560,4.939,561,4.939,562,3.537,563,4.724,564,4.07,565,3.627,566,3.161,567,3.627,568,2.494,569,3.627,570,2.989,571,3.368,572,3.627,573,3.368,574,3.627,575,3.627]],["title/interfaces/NgxEditorJSDemo.html",[360,0.283,414,2.391]],["body/interfaces/NgxEditorJSDemo.html",[3,0.161,4,0.161,9,0.122,12,0.336,14,1.467,23,1.545,28,0.561,29,1.346,49,0.009,50,1.377,51,0.607,57,2.991,78,1.711,85,0.336,90,1.393,99,0.277,106,2.239,118,2.945,153,1.133,180,1.75,189,0.004,190,0.006,191,0.004,218,3.34,239,0.52,281,0.312,285,1.913,286,2.307,303,0.639,305,1.464,312,2.287,314,1.537,319,2.256,320,1.36,324,2.256,325,2.179,326,3.504,348,3.026,360,0.508,361,0.98,364,1.179,380,1.918,396,1.36,401,1.977,406,2.914,407,2.34,408,2.432,409,2.715,410,2.179,411,2.107,412,3.098,413,3.213,414,3.098,415,2.425,416,3.098,417,2.256]],["title/interfaces/NgxEditorJSDemo-1.html",[353,1.342,360,0.238,414,2.017]],["body/interfaces/NgxEditorJSDemo-1.html",[3,0.162,4,0.162,9,0.122,10,1.715,12,0.336,14,1.469,23,1.128,28,0.563,29,1.347,49,0.009,50,1.379,51,0.608,57,2.995,78,1.715,85,0.336,90,1.396,99,0.277,106,2.241,118,2.947,153,1.134,180,1.751,189,0.004,190,0.006,191,0.004,218,3.341,239,0.52,285,1.915,286,2.308,303,0.64,305,1.467,312,2.29,314,1.538,319,2.261,320,1.363,324,2.261,325,2.183,326,3.506,348,3.028,360,0.508,361,0.982,364,1.182,380,1.922,396,1.363,401,1.981,407,2.345,408,2.436,409,2.718,410,2.183,411,2.111,412,3.102,413,3.217,414,3.102,415,2.426,416,3.102,417,2.261,418,2.919]],["title/interfaces/NgxEditorJSDemoData.html",[360,0.283,416,2.391]],["body/interfaces/NgxEditorJSDemoData.html",[3,0.166,4,0.166,9,0.125,12,0.344,14,1.487,23,1.573,49,0.009,50,1.401,57,3.044,78,1.755,85,0.342,90,1.429,99,0.279,106,2.268,118,2.972,153,0.938,180,1.763,189,0.004,190,0.006,191,0.004,218,3.353,239,0.523,281,0.32,285,1.429,286,2.319,303,0.655,305,1.502,312,2.327,314,1.557,319,2.315,320,1.395,324,2.315,325,2.235,326,3.613,348,3.053,360,0.502,361,1.005,364,1.21,380,1.968,396,1.9,401,2.028,406,2.989,407,2.401,408,2.494,409,2.762,410,2.235,411,2.162,412,2.315,413,2.401,414,2.315,415,1.854,416,3.584,417,2.315]],["title/interfaces/NgxEditorJSDemoData-1.html",[353,1.342,360,0.238,416,2.017]],["body/interfaces/NgxEditorJSDemoData-1.html",[3,0.166,4,0.166,9,0.126,10,1.759,12,0.345,14,1.488,23,1.157,49,0.009,50,1.403,57,3.048,78,1.759,85,0.342,90,1.432,99,0.279,106,2.271,118,2.974,153,0.939,180,1.764,189,0.004,190,0.006,191,0.004,218,3.354,239,0.524,285,1.432,286,2.319,303,0.657,305,1.505,312,2.33,314,1.559,319,2.319,320,1.398,324,2.319,325,2.24,326,3.615,348,3.056,360,0.503,361,1.007,364,1.212,380,1.972,396,1.902,401,2.032,407,2.405,408,2.499,409,2.766,410,2.24,411,2.166,412,2.319,413,2.405,414,2.319,415,1.857,416,3.588,417,2.319,418,2.995]],["title/directives/NgxEditorJSDirective.html",[169,2.309,186,2.391]],["body/directives/NgxEditorJSDirective.html",[0,2.047,2,2.006,3,0.078,4,0.078,7,2.006,9,0.059,12,0.266,13,1.854,15,1.104,18,1.434,19,3.558,20,3.304,21,1.34,22,2.195,28,0.272,31,1.104,32,4.114,33,4.507,34,2.47,36,2.442,38,2.095,43,0.674,46,1.476,48,1.55,49,0.009,50,1.288,51,1.045,52,0.858,54,1.448,55,1.52,56,1.788,63,2.179,64,3.004,85,0.356,86,4.383,88,0.325,93,3.54,95,0.956,99,0.073,100,0.217,101,2.355,102,1.567,103,1.722,108,1.34,111,1.544,128,2.601,129,2.095,146,1.34,153,1.056,168,3.172,169,3.612,180,0.759,185,1.34,186,1.788,187,2.095,189,0.002,190,0.003,191,0.002,229,2.309,239,0.492,272,1.019,281,0.571,283,3.172,285,1.621,288,4.249,297,2.946,303,1.059,320,2.066,330,1.788,364,1.626,377,1.567,399,2.744,415,2.246,421,2.601,424,1.788,440,0.545,441,2.374,444,2.374,454,1.52,469,1.476,474,1.434,479,2.829,501,1.52,504,1.788,505,1.727,523,1.52,529,2.301,534,3.491,536,4.249,537,3.585,538,3.585,539,3.585,540,4.249,541,4.249,546,2.442,548,2.601,549,2.905,550,2.601,551,2.619,552,2.442,553,2.442,554,2.309,555,2.442,556,2.442,557,2.195,558,3.304,559,2.601,582,4.114,593,2.309,613,3.885,615,3.101,617,2.442,642,1.588,683,3.07,684,2.442,713,3.07,723,1.279,724,1.279,725,1.176,726,1.491,776,2.442,805,2.195,824,2.601,827,3.558,829,3.695,832,2.802,834,4.507,838,2.442,839,3.82,851,1.71,864,8.031,865,2.122,866,2.802,867,3.82,868,3.476,869,2.095,870,4.415,871,3.07,872,5.105,873,2.122,874,5.105,875,3.558,876,3.476,877,3.476,878,2.122,879,2.122,880,2.122,881,2.122,882,2.122,883,2.122,884,2.122,885,2.122,886,2.122,887,3.07,888,2.122,889,1.491,890,2.122,891,3.476,892,5.105,893,2.122,894,3.07,895,3.476,896,4.507,897,3.476,898,3.07,899,2.802,900,3.476,901,3.476,902,2.195,903,2.122,904,1.874,905,2.122,906,2.122,907,2.122,908,2.802,909,2.122,910,1.71,911,2.122,912,2.122,913,2.122,914,2.122,915,2.122,916,2.122,917,2.122,918,2.122,919,2.122,920,5.105,921,3.476,922,2.122,923,2.122,924,1.874,925,2.122,926,2.122,927,2.122,928,2.122,929,2.122,930,2.122,931,2.122,932,2.122,933,2.122,934,2.122,935,2.122,936,2.122]],["title/injectables/NgxEditorJSEffects.html",[279,0.969,937,4.105]],["body/injectables/NgxEditorJSEffects.html",[3,0.164,4,0.164,9,0.124,28,0.57,29,1.36,43,1.415,46,1.129,48,1.564,49,0.009,50,1.019,51,0.617,52,0.866,54,1.067,55,1.948,69,3.592,85,0.46,88,0.682,90,1.415,93,3.843,95,2.008,98,2.813,99,0.154,100,0.456,101,2.377,102,2.744,103,2.375,108,2.813,111,2.255,153,0.682,189,0.004,190,0.006,191,0.004,239,0.494,279,1.269,280,1.647,281,0.493,286,1.636,322,1.738,415,2.437,424,3.131,440,1.143,512,4.648,520,2.813,521,4.758,523,3.032,524,4.002,529,2.744,723,3.669,724,3.669,725,3.374,726,4.276,829,4.13,875,5.588,937,5.376,938,6.934,939,4.457,940,4.457,941,7.111,942,4.457,943,6.088,944,6.088,945,7.452,946,6.088,947,6.934,948,6.088,949,6.088,950,6.088,951,6.088,952,4.457,953,4.457,954,6.088,955,4.457,956,3.335,957,4.457,958,4.457,959,4.457,960,3.935,961,4.457,962,4.457]],["title/modules/NgxEditorJSModule.html",[192,0.784,207,2.683]],["body/modules/NgxEditorJSModule.html",[3,0.131,4,0.131,9,0.099,12,0.397,14,1.437,15,1.648,16,4.254,31,1.129,43,1.129,46,0.66,48,1.248,49,0.009,50,0.813,51,0.492,52,1.57,53,2.339,54,1.242,56,2.669,63,1.28,85,0.469,88,0.544,90,1.648,99,0.123,100,0.364,111,1.076,166,1.28,179,4.486,186,4.326,189,0.003,190,0.005,191,0.003,192,1.209,194,1.248,195,1.314,196,2.528,197,1.466,198,2.628,199,2.327,207,5.087,210,2.203,211,1.466,212,1.426,219,2.876,223,2.39,239,0.388,257,3.645,281,0.369,297,2.995,330,1.829,389,3.594,399,2.491,400,2.203,432,2.995,441,3.133,551,3.593,562,3.889,563,4.724,566,3.645,571,4.586,576,5.908,585,3.14,738,4.182,754,3.884,805,3.276,829,4.147,849,3.14,850,3.14,851,2.866,869,4.773,889,2.497,910,2.866,963,3.14,964,3.14,965,3.556,966,3.14,967,3.14,968,4.724,969,5.19,970,3.556,971,5.412,972,4.582,973,5.19,974,3.556,975,3.556,976,5.95,977,5.95,978,6.129,979,3.645,980,2.361,981,5.19,982,5.19,983,2.866,984,4.582,985,3.556,986,3.556,987,3.556,988,3.556,989,3.14,990,3.556,991,3.556,992,3.556,993,3.556,994,2.866,995,3.556]],["title/injectables/NgxEditorJSPluginService.html",[279,0.969,968,2.935]],["body/injectables/NgxEditorJSPluginService.html",[3,0.115,4,0.115,9,0.087,12,0.484,14,1.35,15,1.499,16,1.975,28,0.4,31,1.499,34,2.631,38,2.845,43,0.994,46,1.325,48,2.384,49,0.009,50,1.632,51,0.94,52,1.441,54,1.13,55,1.368,62,5.589,63,2.812,64,2.344,85,0.263,88,0.479,99,0.108,100,0.647,101,1.669,111,2.16,189,0.003,190,0.005,191,0.003,192,0.528,215,3.804,236,3.665,239,0.299,279,0.984,280,1.157,281,0.527,283,3.547,285,1.499,303,1.193,314,1.778,322,3.231,330,3.812,366,1.792,399,1.745,410,2.344,411,1.503,427,2.785,431,2.62,433,1.554,442,4.108,444,2.195,445,3.28,447,1.7,450,3.552,451,1.886,455,3.765,498,2.267,551,2.195,561,3.804,573,4.736,590,4.168,613,2.428,640,2.522,647,2.522,708,2.522,709,2.522,838,3.315,968,2.98,996,3.129,997,4.72,998,4.72,999,5.015,1000,4.72,1001,5.589,1002,3.129,1003,3.129,1004,6.329,1005,4.72,1006,4.72,1007,3.129,1008,4.72,1009,3.129,1010,4.72,1011,3.129,1012,6.329,1013,4.72,1014,3.129,1015,3.129,1016,3.129,1017,4.72,1018,1.806,1019,2.342,1020,3.129,1021,3.129,1022,3.129,1023,3.129,1024,3.129,1025,3.129,1026,6.329,1027,3.129,1028,3.129,1029,3.129,1030,3.129,1031,3.129,1032,4.72,1033,4.72,1034,4.72]],["title/injectables/NgxEditorJSService.html",[279,0.969,829,2.576]],["body/injectables/NgxEditorJSService.html",[3,0.076,4,0.076,9,0.057,12,0.504,15,1.078,16,1.301,28,0.264,31,1.078,34,2.686,43,1.078,46,1.304,48,2.467,49,0.009,50,1.74,51,0.973,52,1.401,54,0.493,55,0.901,56,1.745,63,2.78,64,3.132,85,0.367,88,0.315,93,4.278,94,1.099,95,0.929,98,1.301,99,0.071,100,0.211,101,2.675,102,1.529,103,1.687,105,3.753,106,1.104,111,1.677,115,1.661,153,1.008,189,0.002,190,0.003,191,0.002,239,0.51,272,1.63,279,0.707,280,0.762,281,0.513,283,1.685,285,0.654,297,1.958,303,1.236,320,1.341,321,1.542,322,2.326,330,3.854,340,2.539,341,2.539,377,1.949,384,1.881,399,3.175,410,1.023,411,1.63,415,2.365,424,2.579,440,0.529,444,0.958,450,1.836,454,1.484,491,2.142,494,3.166,498,1.63,500,2.894,501,2.424,503,2.142,504,1.745,505,2.49,519,1.958,523,2.192,529,3.857,534,2.894,549,3.599,551,2.332,562,4.057,563,3.166,564,1.368,566,1.447,579,3.522,584,1.542,589,2.996,592,2.253,593,3.33,595,2.735,599,4.041,601,3.486,602,4.041,610,2.996,612,4.428,613,3.511,615,3.522,617,2.383,622,2.539,625,2.996,627,2.996,635,2.996,637,2.996,639,4.041,640,1.661,642,1.542,647,1.661,723,1.242,724,1.242,725,1.142,726,1.447,763,1.819,778,2.539,805,2.142,827,3.486,829,2.779,838,3.038,871,5.267,875,3.486,887,2.996,889,1.447,902,2.142,904,2.996,910,1.661,924,4.428,968,3.166,977,2.996,989,1.819,1035,2.061,1036,3.819,1037,3.393,1038,3.393,1039,2.061,1040,2.061,1041,3.393,1042,2.061,1043,2.996,1044,3.393,1045,3.393,1046,2.061,1047,3.393,1048,2.539,1049,3.393,1050,2.061,1051,3.393,1052,2.061,1053,1.63,1054,1.099,1055,2.253,1056,1.63,1057,3.393,1058,2.061,1059,5.015,1060,4.428,1061,3.393,1062,2.061,1063,2.061,1064,5.015,1065,2.061,1066,2.061,1067,2.061,1068,2.061,1069,1.447,1070,2.061,1071,2.061,1072,2.061,1073,2.061,1074,2.061,1075,2.061,1076,2.061,1077,2.061,1078,2.061,1079,2.061,1080,2.061,1081,2.061,1082,2.061,1083,2.061,1084,2.061,1085,2.061,1086,2.061,1087,2.061,1088,2.061,1089,2.061,1090,2.061,1091,2.061]],["title/modules/NgxEditorjsDemoModule.html",[192,0.784,208,3.265]],["body/modules/NgxEditorjsDemoModule.html",[3,0.144,4,0.144,9,0.109,10,1.531,23,1.007,49,0.009,85,0.485,88,0.601,89,2.757,90,2.057,99,0.135,100,0.401,166,1.413,180,1.216,182,4.824,189,0.004,190,0.005,191,0.004,192,0.662,194,1.377,195,1.451,196,2.672,197,1.619,198,2.173,199,2.46,206,5.138,207,4.466,208,6.435,209,5.138,210,2.365,211,1.619,212,1.574,219,3.088,223,2.173,239,0.472,240,3.465,241,3.163,254,4.491,269,3.163,270,2.175,281,0.279,389,2.093,450,1.666,455,3.088,551,1.825,736,2.937,759,4.92,979,3.914,980,2.606,983,3.163,994,3.163,1092,3.465,1093,3.465,1094,3.465,1095,3.465,1096,6.019,1097,4.885,1098,4.663,1099,4.885,1100,4.885,1101,4.885,1102,4.663,1103,4.885,1104,3.163,1105,3.163,1106,5.572,1107,5.572,1108,5.572,1109,5.572,1110,4.92,1111,3.925,1112,3.465,1113,3.925,1114,3.465,1115,3.925,1116,3.925,1117,3.925,1118,3.925,1119,3.925]],["title/modules/NgxEditorjsNgrxModule.html",[192,0.784,1120,3.479]],["body/modules/NgxEditorjsNgrxModule.html",[3,0.2,4,0.2,9,0.151,12,0.415,15,2.202,49,0.009,85,0.449,88,0.83,90,1.723,99,0.187,100,0.555,105,5.189,166,1.954,189,0.005,190,0.007,191,0.005,192,1.404,194,1.904,195,2.006,196,2.238,197,2.238,198,2.117,199,2.06,207,4.912,210,2.943,211,2.238,212,2.176,219,3.843,223,2.705,236,3.33,239,0.527,281,0.386,320,2.149,399,2.563,432,4.002,454,3.032,805,4.378,941,6.123,956,4.061,979,4.87,980,3.604,1120,6.369,1121,4.791,1122,5.426,1123,5.426,1124,5.426,1125,6.123,1126,5.588,1127,6.934,1128,6.934,1129,5.426,1130,5.426,1131,5.426,1132,5.426]],["title/modules/NgxEditorjsPluginsModule.html",[192,0.784,1133,3.479]],["body/modules/NgxEditorjsPluginsModule.html",[3,0.142,4,0.142,9,0.107,12,0.295,15,1.748,49,0.009,85,0.477,88,0.59,99,0.133,100,0.395,152,3.656,153,0.842,166,1.389,189,0.004,190,0.005,191,0.004,192,1.083,194,2.597,195,1.426,196,1.591,197,1.591,198,1.505,199,2.436,210,2.337,211,1.591,212,1.547,219,3.051,223,2.147,239,0.443,281,0.274,389,2.936,430,3.317,444,2.56,461,2.407,644,4.119,866,4.436,979,3.866,980,2.562,1069,3.866,1097,5.393,1098,5.148,1099,5.393,1100,5.393,1101,5.393,1102,5.148,1103,5.393,1133,6.867,1134,3.406,1135,3.406,1136,3.406,1137,5.673,1138,3.858,1139,3.858,1140,4.86,1141,5.505,1142,5.505,1143,5.505,1144,5.505,1145,4.86,1146,3.858,1147,3.858,1148,3.858,1149,3.858,1150,3.858,1151,3.858,1152,3.858,1153,3.858,1154,3.109,1155,3.858]],["title/modules/NgxHideableHeaderDemoModule.html",[192,0.784,1156,3.746]],["body/modules/NgxHideableHeaderDemoModule.html",[3,0.234,4,0.234,9,0.177,49,0.009,85,0.458,88,0.975,99,0.264,100,0.652,189,0.006,190,0.007,191,0.006,194,2.236,219,3.531,223,2.988,268,6.173,269,6.173,270,3.531,272,3.06,281,0.453,471,3.252,979,5.38,980,4.231,1104,5.134,1105,5.134,1156,6.173,1157,6.173,1158,5.625]],["title/modules/NgxTinynodesCoreModule.html",[192,0.784,209,3.087]],["body/modules/NgxTinynodesCoreModule.html",[3,0.201,4,0.201,9,0.152,12,0.418,15,2.564,23,2.072,45,3.861,49,0.009,85,0.389,88,0.836,91,4.198,99,0.189,100,0.559,106,2.267,166,1.968,189,0.005,190,0.007,191,0.005,192,1.294,194,1.918,195,2.02,196,2.254,197,2.254,198,2.132,199,2.911,205,6.05,209,5.755,210,2.957,211,2.254,212,2.191,219,3.861,223,2.717,281,0.389,286,1.873,392,4.626,454,3.046,754,5.213,899,5.614,1159,4.826,1160,5.466,1161,4.826,1162,5.466,1163,5.466,1164,6.966,1165,6.151,1166,6.151,1167,5.466]],["title/classes/NotReady.html",[100,0.476,526,2.801]],["body/classes/NotReady.html",[3,0.161,4,0.161,9,0.122,18,3.302,28,0.559,29,1.342,34,1.908,43,1.388,46,1.273,48,1.534,49,0.009,50,0.999,51,1.217,52,0.85,54,1.046,55,1.911,85,0.335,99,0.283,100,0.793,102,3.696,180,1.692,189,0.004,190,0.006,191,0.004,239,0.537,281,0.526,286,1.615,303,1.128,409,1.97,440,1.121,496,4.296,501,3.388,508,4.266,509,2.523,510,4.666,511,2.759,512,4.733,513,3.07,514,4.821,517,3.07,518,2.903,519,3.962,520,2.759,521,3.962,522,3.792,523,1.911,524,3.962,525,2.759,526,4.454,527,3.07,528,4.891,529,3.492,530,3.07,531,4.219,532,3.07,533,2.903,1168,6.007,1169,4.371]],["title/interfaces/Page.html",[59,1.765,360,0.283]],["body/interfaces/Page.html",[3,0.213,4,0.213,9,0.161,28,0.74,29,1.613,37,5.79,49,0.009,51,1.141,59,2.741,85,0.403,90,1.838,99,0.272,153,1.105,189,0.006,190,0.007,191,0.006,233,2.874,239,0.457,281,0.412,303,1.2,314,1.293,360,0.479,361,1.293,396,1.793,415,2.494,549,4.327,1170,4.663,1171,6.169,1172,5.79,1173,5.475]],["title/interfaces/PageBlock.html",[360,0.283,1172,3.265]],["body/interfaces/PageBlock.html",[3,0.224,4,0.224,9,0.169,28,0.778,29,1.664,37,4.271,49,0.009,51,0.841,59,2.308,85,0.415,90,1.931,99,0.278,153,1.232,189,0.006,190,0.007,191,0.006,233,3.02,239,0.472,281,0.433,303,1.084,314,1.358,360,0.489,361,1.358,396,2.308,415,1.84,549,4.36,1170,4.9,1171,4.55,1172,5.653,1173,4.945]],["title/components/PageContainerComponent.html",[0,1.864,182,2.576]],["body/components/PageContainerComponent.html",[0,2.483,1,1.142,2,1.893,3,0.073,4,0.073,5,1.314,6,0.891,7,1.142,8,1.314,9,0.055,12,0.251,13,1.75,14,0.7,15,1.553,17,3.66,18,1.353,19,3.387,20,2.455,21,1.249,22,4.245,23,1.391,24,2.178,26,2.178,28,0.253,29,0.733,31,1.042,32,3.941,34,2.512,38,1.977,43,1.553,45,2.71,46,1.319,48,1.151,49,0.009,50,1.24,51,0.582,52,0.638,53,2.204,54,1.006,55,1.434,59,3.003,63,2.106,64,2.693,73,0.95,84,3.387,85,0.345,88,0.303,90,1.857,92,1.142,93,2.71,94,2.242,95,0.891,96,2.455,97,1.594,98,1.249,99,0.068,100,0.202,101,3.303,102,1.894,103,1.279,106,1.068,111,1.641,116,1.594,124,3.883,128,2.455,129,1.977,130,2.896,131,2.455,143,1.716,153,0.992,166,0.712,167,2.178,168,1.629,169,0.982,170,3.248,171,1.314,172,1.314,173,1.055,174,1.192,175,1.314,176,1.142,177,1.314,178,1.314,179,1.055,180,1.513,181,1.314,182,2.71,183,1.314,184,1.142,185,1.249,186,1.017,187,1.192,188,1.314,189,0.002,190,0.003,191,0.004,211,2.673,215,2.644,216,2.896,218,2.972,239,0.535,281,0.517,283,3.219,285,1.042,286,1.863,297,1.893,298,2.304,303,0.288,311,2.644,316,2.644,322,0.772,330,2.515,353,0.677,364,1.13,374,1.478,399,1.808,415,2.436,431,0.992,447,1.181,461,1.434,469,1.392,471,1.392,476,1.575,505,1.629,522,3.087,523,2.833,529,2.444,544,4.058,549,1.575,554,2.178,562,1.893,568,1.096,587,2.896,592,4.304,595,1.594,603,2.896,613,4.068,708,1.594,714,2.896,736,1.48,749,3.66,776,2.952,829,2.71,852,1.747,855,2.896,856,1.747,869,1.977,960,2.896,999,2.304,1036,4.318,1053,1.575,1055,2.178,1056,1.575,1112,6.418,1166,2.896,1173,2.178,1174,7.268,1175,1.978,1176,3.28,1177,3.28,1178,3.28,1179,4.203,1180,3.28,1181,3.28,1182,5.847,1183,4.35,1184,5.423,1185,1.978,1186,4.35,1187,4.89,1188,4.89,1189,1.978,1190,1.978,1191,1.978,1192,3.28,1193,3.28,1194,1.978,1195,1.978,1196,3.28,1197,1.978,1198,6.193,1199,1.978,1200,1.978,1201,1.978,1202,1.978,1203,1.747,1204,1.978,1205,1.978,1206,1.978,1207,3.28,1208,3.28,1209,1.978,1210,1.978,1211,1.978,1212,1.978,1213,1.978,1214,1.978,1215,1.978,1216,3.28,1217,1.978,1218,1.978,1219,1.978,1220,1.978,1221,1.978,1222,1.978,1223,1.978,1224,1.978,1225,1.978,1226,1.978,1227,1.978,1228,1.978,1229,2.455,1230,2.896,1231,5.847,1232,3.28,1233,3.28,1234,3.28,1235,1.978,1236,1.978,1237,1.978,1238,1.978,1239,1.978,1240,1.978,1241,2.896,1242,3.28,1243,2.896,1244,3.28,1245,2.896,1246,3.28,1247,3.28,1248,3.28,1249,2.896,1250,1.687,1251,1.978,1252,1.978,1253,1.978]],["title/modules/PageStoreModule.html",[192,0.784,1096,3.265]],["body/modules/PageStoreModule.html",[3,0.195,4,0.195,9,0.148,12,0.406,49,0.009,59,2.597,85,0.446,88,0.813,99,0.183,100,0.543,166,1.913,180,1.493,189,0.005,190,0.007,191,0.005,192,1.395,194,1.864,195,1.964,196,2.191,197,2.191,198,2.951,199,2.017,210,2.904,211,2.191,212,2.13,218,2.597,223,2.668,236,3.285,239,0.479,281,0.378,432,3.948,543,5.119,568,3.791,1096,6.241,1125,6.04,1126,5.513,1183,4.804,1186,5.945,1254,4.69,1255,4.69,1256,5.945,1257,5.343,1258,5.312,1259,5.513,1260,4.543,1261,6.04,1262,4.69,1263,5.312,1264,4.281]],["title/injectables/PagesQuery.html",[279,0.969,1256,3.265]],["body/injectables/PagesQuery.html",[3,0.224,4,0.224,9,0.17,43,1.936,46,1.131,48,2.14,49,0.009,50,1.394,51,0.844,52,1.185,59,2.315,85,0.468,88,0.933,99,0.21,100,0.624,189,0.006,190,0.007,191,0.006,233,3.028,236,3.582,239,0.472,279,1.555,280,2.254,281,0.531,396,2.312,397,4.914,402,4.914,403,4.914,1256,5.239,1257,5.301,1264,4.914,1265,6.097,1266,8.059,1267,6.097,1268,4.563,1269,4.563]],["title/injectables/PagesService.html",[279,0.969,1186,3.265]],["body/injectables/PagesService.html",[3,0.112,4,0.112,9,0.085,12,0.478,15,1.471,28,0.391,29,1.035,31,1.471,34,2.134,37,2.144,38,2.792,43,0.97,46,1.467,48,2.58,49,0.009,50,1.68,51,1.073,52,1.508,59,3.41,63,2.647,64,3.513,85,0.41,88,0.467,90,0.97,93,3.921,95,1.376,99,0.105,100,0.312,101,1.629,102,3.188,103,1.191,111,0.924,153,1.23,189,0.003,190,0.005,191,0.003,233,1.516,236,3.86,239,0.516,272,1.466,279,0.966,280,1.129,281,0.572,283,2.301,288,3.254,292,2.461,299,4.39,330,2.88,366,1.759,377,2.088,415,2.224,454,2.026,466,2.225,523,2.026,528,1.928,549,4.096,617,3.254,639,3.734,684,3.254,709,3.734,866,3.734,889,2.144,999,4.39,1171,2.285,1172,5.163,1183,5.319,1186,3.254,1203,2.696,1256,4.72,1257,4.242,1262,2.696,1264,2.461,1268,2.285,1270,3.053,1271,4.633,1272,4.633,1273,4.633,1274,4.633,1275,3.053,1276,4.633,1277,3.053,1278,4.633,1279,3.053,1280,6.72,1281,4.633,1282,3.053,1283,4.633,1284,3.254,1285,4.633,1286,3.053,1287,4.633,1288,3.053,1289,4.633,1290,3.053,1291,4.633,1292,3.053,1293,3.053,1294,3.053,1295,6.251,1296,4.633,1297,3.053,1298,3.053,1299,3.053,1300,4.633,1301,3.053,1302,3.053,1303,5.599,1304,4.633,1305,3.053,1306,3.053,1307,3.053]],["title/interfaces/PagesState.html",[360,0.283,1269,3.479]],["body/interfaces/PagesState.html",[3,0.23,4,0.23,9,0.174,43,1.99,49,0.009,50,1.432,59,2.379,85,0.455,88,0.959,99,0.262,100,0.641,189,0.006,190,0.007,191,0.006,233,3.112,239,0.397,279,1.581,281,0.446,360,0.381,361,1.4,396,2.528,422,5.675,423,4.401,1183,4.401,1257,3.955,1268,4.689,1269,5.675,1308,5.532,1309,7.201,1310,6.696]],["title/injectables/PagesStore.html",[279,0.969,1257,2.935]],["body/injectables/PagesStore.html",[3,0.227,4,0.227,9,0.172,43,2.571,46,1.143,49,0.009,50,1.409,59,2.34,85,0.452,88,0.943,99,0.259,100,0.63,189,0.006,190,0.007,191,0.006,233,3.061,239,0.475,279,1.565,280,2.278,281,0.534,360,0.375,396,2.51,422,5.618,423,4.329,1183,4.329,1257,4.74,1268,4.612,1269,4.612,1308,5.442,1309,6.629,1310,7.149,1311,6.163]],["title/interfaces/Paragraph.html",[360,0.283,469,1.973]],["body/interfaces/Paragraph.html",[3,0.133,4,0.133,6,1.633,9,0.101,12,0.277,28,0.464,29,1.384,49,0.009,51,1.24,52,1.322,54,1.803,99,0.28,133,3.954,142,2.234,143,2.794,144,2.807,153,1.367,189,0.004,190,0.005,191,0.004,239,0.477,281,0.258,286,2.089,303,1.2,305,2.067,314,0.81,353,1.24,360,0.518,361,0.81,364,1.665,366,1.376,374,2.371,396,2.107,400,1.538,431,1.096,458,2.008,461,1.584,462,1.933,463,2.916,464,2.916,465,1.933,466,1.74,467,2.916,468,2.807,469,3.379,470,2.807,471,3.299,472,2.807,473,2.008,474,1.495,475,2.807,476,3.468,477,3.037,478,2.008,479,3.434,480,2.091,481,2.091,482,2.091,483,2.091,484,2.091,485,2.807,486,2.008,487,2.008]],["title/interfaces/ParagraphBlock.html",[360,0.283,470,2.48]],["body/interfaces/ParagraphBlock.html",[3,0.134,4,0.134,6,1.641,9,0.101,12,0.279,28,0.466,29,1.388,49,0.009,51,1.247,52,1.325,54,1.732,99,0.28,133,3.384,142,2.241,143,2.798,144,2.816,153,1.376,189,0.004,190,0.005,191,0.004,239,0.493,281,0.259,286,2.028,303,1.161,305,2.073,314,0.813,353,1.246,360,0.523,361,0.813,364,1.67,366,1.382,374,2.38,396,2.242,400,1.546,431,1.102,458,2.018,461,1.592,462,1.942,463,2.927,464,2.927,465,1.942,466,1.749,467,2.927,468,2.816,469,3.202,470,3.314,471,3.304,472,2.816,473,2.018,474,1.502,475,2.816,476,3.475,477,3.048,478,2.018,479,3.443,480,2.102,481,2.102,482,2.102,483,2.102,484,2.102,485,2.816,486,2.018,487,2.018]],["title/injectables/PluginCode.html",[279,0.969,1312,3.479]],["body/injectables/PluginCode.html",[3,0.21,4,0.21,9,0.159,12,0.437,18,2.356,28,0.731,31,2.275,34,2.486,46,1.06,49,0.009,63,3.044,85,0.458,88,0.874,99,0.197,100,0.584,111,1.729,153,1.096,189,0.006,190,0.007,191,0.006,239,0.52,279,1.493,280,2.112,281,0.51,427,2.794,431,2.678,435,3.441,438,3.695,440,1.466,447,2.955,751,5.774,1018,3.297,1312,5.361,1313,5.713,1314,5.713,1315,5.713]],["title/modules/PluginCodeModule.html",[192,0.784,1097,2.935]],["body/modules/PluginCodeModule.html",[3,0.213,4,0.213,9,0.161,12,0.444,15,2.297,49,0.009,54,1.731,85,0.403,88,0.888,99,0.2,100,0.593,153,1.107,166,2.089,189,0.006,190,0.007,191,0.006,192,1.33,194,2.036,195,2.144,196,2.392,197,2.392,198,3.074,199,2.202,210,3.07,211,2.392,212,2.326,223,2.821,239,0.499,281,0.413,447,2.605,1053,3.474,1054,3.858,1056,3.474,1097,5.466,1250,3.72,1312,6.479,1316,5.122,1317,5.122,1318,5.801,1319,3.348,1320,5.801,1321,3.496,1322,5.801]],["title/interfaces/PluginConfig.html",[360,0.283,442,2.576]],["body/interfaces/PluginConfig.html",[3,0.176,4,0.176,9,0.133,12,0.367,14,1.023,31,2.031,46,1.187,49,0.009,52,1.399,85,0.357,88,0.734,99,0.276,100,0.654,103,2.495,111,1.451,180,1.047,189,0.005,190,0.006,191,0.005,192,1.214,239,0.405,272,3.072,281,0.455,285,1.523,303,1.118,314,1.838,322,1.87,360,0.467,361,1.071,427,3.12,428,3.589,429,3.185,430,2.89,431,2.711,432,2.768,433,3.575,435,3.457,436,3.185,437,2.768,438,3.147,439,4.78,440,1.23,441,2.975,442,3.545,443,4.248,444,2.23,445,2.768,446,3.185,447,1.727,448,3.545,449,3.545,450,2.715,451,2.89,452,3.027,453,2.89,454,2.097,455,2.658,456,3.027,459,2.658,1323,4.796]],["title/interfaces/PluginConfig-1.html",[353,1.342,360,0.238,442,2.174]],["body/interfaces/PluginConfig-1.html",[3,0.176,4,0.176,9,0.133,12,0.365,14,1.019,31,2.026,46,1.183,49,0.009,52,1.397,85,0.356,88,0.731,99,0.276,100,0.653,103,2.488,111,1.445,180,1.043,189,0.005,190,0.006,191,0.005,192,1.212,239,0.485,272,3.064,281,0.454,285,1.517,303,1.116,314,1.836,322,1.863,360,0.466,361,1.067,427,3.116,429,3.171,430,2.878,431,2.71,432,2.756,433,3.567,435,3.45,436,3.171,437,2.756,438,3.14,439,4.77,440,1.225,441,2.966,442,3.535,443,4.236,444,2.221,445,2.756,446,3.171,447,1.72,448,3.535,449,3.535,450,2.708,451,2.878,452,3.015,453,2.878,454,2.088,455,2.647,456,3.015,457,3.574,459,2.647,1324,4.775]],["title/injectables/PluginHeader.html",[279,0.969,1325,3.265]],["body/injectables/PluginHeader.html",[3,0.21,4,0.21,9,0.159,12,0.436,18,2.35,28,0.729,31,2.272,34,2.483,46,1.057,49,0.009,63,3.042,85,0.457,88,0.872,99,0.197,100,0.583,111,1.724,153,1.095,189,0.006,190,0.007,191,0.006,239,0.519,279,1.491,280,2.107,281,0.509,427,2.79,431,2.676,435,3.938,438,3.418,440,1.462,447,2.953,471,3.036,1018,3.289,1325,5.024,1326,5.699,1327,5.699,1328,4.593]],["title/modules/PluginHeaderModule.html",[192,0.784,1098,2.801]],["body/modules/PluginHeaderModule.html",[3,0.213,4,0.213,9,0.161,12,0.443,15,2.293,49,0.009,54,1.729,85,0.403,88,0.885,99,0.2,100,0.592,153,1.105,166,2.084,189,0.006,190,0.007,191,0.006,192,1.328,194,2.031,195,2.139,196,2.386,197,2.386,198,3.071,199,2.197,210,3.065,211,2.386,212,2.32,223,2.817,239,0.499,281,0.412,447,2.601,471,3.065,1053,3.468,1054,3.852,1056,3.468,1098,5.214,1250,3.714,1319,3.339,1321,3.487,1325,6.077,1329,5.109,1330,5.109,1331,5.786,1332,5.786,1333,5.786]],["title/injectables/PluginImage.html",[279,0.969,1334,3.479]],["body/injectables/PluginImage.html",[3,0.21,4,0.21,9,0.159,12,0.436,18,2.35,28,0.729,31,2.272,34,2.483,46,1.057,49,0.009,63,3.042,85,0.457,88,0.872,99,0.197,100,0.583,111,1.724,153,1.095,189,0.006,190,0.007,191,0.006,239,0.519,279,1.491,280,2.107,281,0.509,427,2.79,431,2.676,435,3.938,438,3.418,440,1.462,447,2.953,476,3.435,1018,3.289,1334,5.353,1335,5.699,1336,5.699,1337,5.699]],["title/modules/PluginImageModule.html",[192,0.784,1137,3.087]],["body/modules/PluginImageModule.html",[3,0.213,4,0.213,9,0.161,12,0.444,15,2.297,49,0.009,54,1.731,85,0.403,88,0.888,99,0.2,100,0.593,153,1.107,166,2.089,189,0.006,190,0.007,191,0.006,192,1.33,194,2.036,195,2.144,196,2.392,197,2.392,198,3.074,199,2.202,210,3.07,211,2.392,212,2.326,223,2.821,239,0.499,281,0.413,447,2.605,1053,3.474,1054,3.858,1056,3.474,1137,5.749,1250,3.72,1319,3.348,1321,3.496,1334,6.479,1338,5.122,1339,5.122,1340,5.801,1341,5.122,1342,5.122]],["title/injectables/PluginLink.html",[279,0.969,1343,3.479]],["body/injectables/PluginLink.html",[3,0.21,4,0.21,9,0.159,12,0.437,18,2.356,28,0.731,31,2.275,34,2.486,46,1.06,49,0.009,63,3.044,85,0.458,88,0.874,99,0.197,100,0.584,111,1.729,153,1.096,189,0.006,190,0.007,191,0.006,239,0.52,279,1.493,280,2.112,281,0.51,375,4.317,427,2.794,431,2.678,435,3.941,438,3.422,440,1.466,447,2.955,1018,3.297,1343,5.361,1344,5.713,1345,5.713,1346,5.713]],["title/modules/PluginLinkModule.html",[192,0.784,1099,2.935]],["body/modules/PluginLinkModule.html",[3,0.213,4,0.213,9,0.161,12,0.444,15,2.297,49,0.009,54,1.731,85,0.403,88,0.888,99,0.2,100,0.593,153,1.107,166,2.089,189,0.006,190,0.007,191,0.006,192,1.33,194,2.036,195,2.144,196,2.392,197,2.392,198,3.074,199,2.202,210,3.07,211,2.392,212,2.326,223,2.821,239,0.499,281,0.413,447,2.605,1053,3.474,1054,3.858,1056,3.474,1099,5.466,1250,3.72,1319,3.348,1321,3.496,1343,6.479,1347,5.122,1348,5.122,1349,5.801,1350,5.801,1351,5.801]],["title/injectables/PluginList.html",[279,0.969,1352,3.265]],["body/injectables/PluginList.html",[3,0.21,4,0.21,9,0.159,12,0.436,18,2.35,28,0.729,31,2.272,34,2.483,46,1.057,49,0.009,63,3.042,85,0.457,88,0.872,99,0.197,100,0.583,111,1.724,143,2.51,153,1.095,189,0.006,190,0.007,191,0.006,239,0.519,279,1.491,280,2.107,281,0.509,427,2.79,431,2.676,435,3.938,438,3.418,440,1.462,447,2.953,1018,3.289,1352,5.024,1353,5.699,1354,5.699,1355,5.032]],["title/modules/PluginListModule.html",[192,0.784,1100,2.935]],["body/modules/PluginListModule.html",[3,0.213,4,0.213,9,0.161,12,0.443,15,2.293,49,0.009,54,1.729,85,0.403,88,0.885,99,0.2,100,0.592,153,1.105,166,2.084,189,0.006,190,0.007,191,0.006,192,1.328,194,2.031,195,2.139,196,2.386,197,2.386,198,3.071,199,2.197,210,3.065,211,2.386,212,2.32,223,2.817,239,0.499,281,0.412,447,2.601,1053,3.468,1054,3.852,1056,3.468,1100,5.462,1250,3.714,1319,3.339,1321,3.487,1352,6.077,1356,5.109,1357,5.109,1358,5.786,1359,5.786,1360,5.786]],["title/injectables/PluginMarker.html",[279,0.969,1361,3.479]],["body/injectables/PluginMarker.html",[3,0.196,4,0.196,9,0.149,12,0.408,18,2.201,28,0.683,31,2.179,34,2.691,46,1.273,49,0.009,63,3.144,85,0.446,88,0.817,99,0.184,100,0.546,111,2.076,152,4.556,189,0.005,190,0.007,191,0.005,239,0.524,279,1.43,280,1.973,281,0.539,303,0.777,427,2.676,431,2.69,433,4.209,435,3.844,438,3.315,440,1.369,447,2.882,1018,3.08,1361,5.134,1362,5.337,1363,7.067,1364,5.337,1365,5.337,1366,5.337,1367,5.337]],["title/modules/PluginMarkerModule.html",[192,0.784,1101,2.935]],["body/modules/PluginMarkerModule.html",[3,0.213,4,0.213,9,0.161,12,0.443,15,2.293,49,0.009,54,1.729,85,0.403,88,0.885,99,0.2,100,0.592,152,4.796,166,2.084,189,0.006,190,0.007,191,0.006,192,1.328,194,2.031,195,2.139,196,2.386,197,2.386,198,3.071,199,2.197,210,3.065,211,2.386,212,2.32,223,2.817,239,0.499,281,0.412,447,2.601,1053,3.468,1054,3.852,1056,3.468,1101,5.462,1250,3.714,1319,3.339,1321,3.487,1361,6.475,1363,6.376,1368,5.109,1369,5.109,1370,5.786,1371,5.786,1372,5.786]],["title/injectables/PluginParagraph.html",[279,0.969,1373,3.265]],["body/injectables/PluginParagraph.html",[3,0.21,4,0.21,9,0.159,12,0.437,18,2.356,28,0.731,31,2.275,34,2.486,46,1.06,49,0.009,63,3.044,85,0.458,88,0.874,99,0.197,100,0.584,111,1.729,153,1.096,189,0.006,190,0.007,191,0.006,239,0.52,279,1.493,280,2.112,281,0.51,427,2.794,431,2.678,435,3.941,438,3.422,440,1.466,447,2.955,469,3.041,1018,3.297,1373,5.032,1374,5.713,1375,5.713,1376,4.275]],["title/modules/PluginParagraphModule.html",[192,0.784,1102,2.801]],["body/modules/PluginParagraphModule.html",[3,0.213,4,0.213,9,0.161,12,0.444,15,2.297,49,0.009,54,1.731,85,0.403,88,0.888,99,0.2,100,0.593,153,1.107,166,2.089,189,0.006,190,0.007,191,0.006,192,1.33,194,2.036,195,2.144,196,2.392,197,2.392,198,3.074,199,2.202,210,3.07,211,2.392,212,2.326,223,2.821,239,0.499,281,0.413,447,2.605,1053,3.474,1054,3.858,1056,3.474,1102,5.217,1250,3.72,1319,3.348,1321,3.496,1373,6.081,1377,5.122,1378,5.122,1379,5.801,1380,5.801,1381,5.801]],["title/injectables/PluginSimpleImage.html",[279,0.969,1382,3.479]],["body/injectables/PluginSimpleImage.html",[3,0.206,4,0.206,9,0.156,12,0.429,18,2.315,28,0.718,31,2.25,34,2.466,46,1.042,49,0.009,63,3.028,85,0.455,88,0.859,99,0.194,100,0.574,111,1.699,153,1.084,189,0.005,190,0.007,191,0.005,239,0.516,279,1.477,280,2.075,281,0.504,427,2.764,431,2.669,435,3.403,438,3.395,440,1.441,447,2.552,476,3.729,613,3.644,1018,3.24,1154,5.711,1243,6.257,1382,5.303,1383,6.257,1384,5.614,1385,6.257,1386,5.614,1387,5.614]],["title/modules/PluginSimpleImageModule.html",[192,0.784,1103,2.935]],["body/modules/PluginSimpleImageModule.html",[3,0.21,4,0.21,9,0.159,12,0.436,15,2.272,49,0.009,85,0.399,88,0.872,99,0.197,100,0.583,153,1.095,166,2.052,189,0.006,190,0.007,191,0.006,192,1.319,194,2,195,2.107,196,2.35,197,2.35,198,3.049,199,2.163,210,3.036,211,2.35,212,2.285,223,2.79,239,0.495,281,0.405,444,3.326,447,2.576,476,3.435,1053,3.435,1054,3.815,1056,3.435,1103,5.441,1154,4.593,1250,3.679,1319,3.289,1321,3.434,1341,5.032,1342,5.032,1382,6.45,1383,5.032,1385,6.903,1388,5.032,1389,5.032,1390,5.699]],["title/classes/Ready.html",[100,0.476,501,2.032]],["body/classes/Ready.html",[3,0.161,4,0.161,9,0.122,18,3.302,28,0.559,29,1.342,34,1.908,43,1.388,46,1.273,48,1.534,49,0.009,50,0.999,51,1.217,52,0.85,54,1.046,55,1.911,85,0.335,99,0.283,100,0.793,102,3.696,180,1.692,189,0.004,190,0.006,191,0.004,239,0.537,281,0.526,286,1.615,303,1.128,409,1.97,440,1.121,496,4.296,501,3.5,508,4.266,509,2.523,510,4.666,511,2.759,512,4.733,513,3.07,514,4.821,517,3.07,518,2.903,519,3.962,520,2.759,521,3.962,522,3.792,523,1.911,524,3.962,525,2.759,526,4.137,527,3.07,528,4.891,529,3.492,530,3.07,531,3.07,532,4.219,533,2.903,1391,6.007,1392,4.371]],["title/interfaces/ReadyMap.html",[360,0.283,502,2.683]],["body/interfaces/ReadyMap.html",[3,0.168,4,0.168,9,0.127,12,0.349,46,0.847,49,0.009,51,0.856,85,0.392,92,5.205,94,2.434,95,2.057,99,0.28,106,2.014,153,1.074,189,0.004,190,0.006,191,0.004,239,0.542,281,0.44,303,1.208,305,1.523,314,1.965,322,3.43,360,0.493,361,1.02,364,2.023,399,1.687,415,1.381,440,1.171,459,2.53,474,2.552,488,2.634,489,3.031,490,5.84,491,2.881,493,3.429,494,2.881,495,3.729,496,2.347,497,2.75,498,2.192,499,2.75,500,3.571,501,2.705,502,3.571,503,2.881,504,2.347,505,2.267,506,2.634,1393,4.564]],["title/classes/SaveEnd.html",[100,0.476,524,2.683]],["body/classes/SaveEnd.html",[3,0.161,4,0.161,9,0.122,18,3.302,28,0.559,29,1.342,34,1.908,43,1.388,46,1.273,48,1.534,49,0.009,50,0.999,51,1.217,52,0.85,54,1.046,55,1.911,85,0.335,99,0.283,100,0.793,102,3.696,180,1.692,189,0.004,190,0.006,191,0.004,239,0.537,281,0.526,286,1.615,303,1.128,409,1.97,440,1.121,496,4.296,501,3.388,508,4.266,509,2.523,510,4.666,511,2.759,512,4.733,513,3.07,514,4.821,517,3.07,518,2.903,519,3.962,520,2.759,521,3.962,522,3.792,523,1.911,524,4.266,525,2.759,526,4.137,527,3.07,528,4.891,529,3.492,530,4.219,531,3.07,532,3.07,533,2.903,1394,6.007,1395,4.371]],["title/classes/SaveStart.html",[100,0.476,521,2.683]],["body/classes/SaveStart.html",[3,0.161,4,0.161,9,0.122,18,3.302,28,0.559,29,1.342,34,1.908,43,1.388,46,1.273,48,1.534,49,0.009,50,0.999,51,1.217,52,0.85,54,1.046,55,1.911,85,0.335,99,0.283,100,0.793,102,3.696,180,1.692,189,0.004,190,0.006,191,0.004,239,0.537,281,0.526,286,1.615,303,1.128,409,1.97,440,1.121,496,4.296,501,3.388,508,4.266,509,2.523,510,4.666,511,2.759,512,4.733,513,3.07,514,4.821,517,3.07,518,2.903,519,3.962,520,2.759,521,4.266,522,3.792,523,1.911,524,3.962,525,2.759,526,4.137,527,4.219,528,4.891,529,3.492,530,3.07,531,3.07,532,3.07,533,2.903,1396,6.007,1397,4.371]],["title/components/SidebarComponent.html",[0,1.864,184,2.683]],["body/components/SidebarComponent.html",[0,2.901,1,2.797,2,3.718,3,0.178,4,0.178,5,3.219,6,2.184,7,2.797,8,3.219,9,0.135,10,2.822,21,3.06,22,5.467,23,2.161,24,4.278,26,4.278,28,0.62,36,4.525,41,6.389,42,6.389,46,1.195,49,0.009,50,1.654,51,0.891,59,1.84,73,3.475,85,0.359,86,4.361,88,0.742,90,1.539,91,2.921,99,0.167,100,0.496,166,1.745,167,4.278,168,3.2,169,2.407,170,5.121,171,3.219,172,3.219,173,2.585,174,2.921,175,3.219,176,2.797,177,3.219,178,3.219,179,2.585,180,1.406,181,3.219,182,2.686,183,3.219,184,4.451,185,3.06,186,2.493,187,2.921,188,3.219,189,0.005,190,0.006,191,0.005,312,3.048,1398,7.236,1399,4.847,1400,7.236,1401,6.442,1402,4.847,1403,4.847,1404,6.442,1405,7.711,1406,6.442]],["title/interfaces/Tag.html",[360,0.283,1173,3.087]],["body/interfaces/Tag.html",[3,0.225,4,0.225,9,0.17,28,0.782,29,1.669,37,4.294,49,0.009,51,0.846,59,2.321,85,0.417,90,1.942,99,0.278,153,1.143,189,0.006,190,0.007,191,0.006,233,3.036,239,0.473,281,0.435,303,1.224,314,1.877,360,0.49,361,1.366,396,1.895,415,1.85,549,4.14,1170,4.927,1171,4.575,1172,5.247,1173,5.358]],["title/classes/TestClass.html",[100,0.476,770,3.479]],["body/classes/TestClass.html",[3,0.187,4,0.187,9,0.142,18,2.102,28,0.652,31,2.115,34,1.619,43,2.356,46,1.236,49,0.009,63,1.836,64,2.532,85,0.414,99,0.256,100,0.805,108,3.218,111,2.38,189,0.005,190,0.006,191,0.005,281,0.528,303,0.742,377,3.678,415,2.015,427,2.598,431,1.542,433,3.308,438,2.912,440,1.308,509,2.942,523,2.229,534,3.844,551,3.097,592,3.385,593,3.385,723,3.072,724,3.072,725,3.691,760,3.814,761,4.108,762,4.108,768,4.108,769,4.108,770,5.551,771,4.108,772,3.814,773,5.978,774,4.108,775,4.108,776,3.58,777,4.108,778,3.814,779,4.108,780,4.108,1407,5.097,1408,5.097]],["title/interfaces/TinynodeDemos.html",[360,0.283,417,2.391]],["body/interfaces/TinynodeDemos.html",[3,0.161,4,0.161,9,0.122,12,0.334,14,1.464,23,1.761,28,0.559,29,1.342,49,0.009,50,1.373,51,0.605,57,3.409,78,1.705,85,0.335,90,1.388,99,0.276,106,2.234,118,2.941,153,0.919,180,1.85,189,0.004,190,0.006,191,0.004,218,3.376,239,0.543,281,0.311,285,1.388,286,2.305,303,0.636,305,1.458,312,2.281,314,1.533,319,2.248,320,1.355,324,2.248,325,2.171,326,3.5,348,3.022,360,0.498,361,0.976,364,1.175,380,1.911,396,1.355,401,1.97,406,2.903,407,2.331,408,2.422,409,2.707,410,2.171,411,2.099,412,2.248,413,2.331,414,2.248,415,1.818,416,3.801,417,3.089]],["title/interfaces/TinynodeDemos-1.html",[353,1.342,360,0.238,417,2.017]],["body/interfaces/TinynodeDemos-1.html",[3,0.161,4,0.161,9,0.122,10,1.708,12,0.335,14,1.466,23,1.543,28,0.56,29,1.344,49,0.009,50,1.375,51,0.606,57,3.413,78,1.708,85,0.336,90,1.391,99,0.276,106,2.236,118,2.943,153,0.921,180,1.851,189,0.004,190,0.006,191,0.004,218,3.377,239,0.543,285,1.391,286,2.306,303,0.638,305,1.461,312,2.284,314,1.535,319,2.252,320,1.357,324,2.252,325,2.175,326,3.502,348,3.024,360,0.499,361,0.978,364,1.177,380,1.915,396,1.357,401,1.974,407,2.336,408,2.427,409,2.711,410,2.175,411,2.103,412,2.252,413,2.336,414,2.252,415,1.82,416,3.804,417,3.094,418,2.908]],["title/interfaces/ToolSettingsMap.html",[360,0.283,445,2.683]],["body/interfaces/ToolSettingsMap.html",[3,0.176,4,0.176,9,0.133,12,0.365,14,1.019,31,2.026,46,1.183,49,0.009,52,1.397,85,0.356,88,0.731,99,0.276,100,0.489,103,2.488,111,1.445,180,1.043,189,0.005,190,0.006,191,0.005,192,1.076,239,0.404,272,3.064,281,0.454,285,1.517,303,1.116,314,1.836,322,2.488,360,0.466,361,1.067,427,2.802,428,3.574,429,3.171,430,2.878,431,2.696,432,2.756,433,3.567,435,3.837,436,3.171,437,2.756,438,3.352,439,5.091,440,1.225,441,2.221,442,2.647,443,3.171,444,2.966,445,3.682,446,4.236,447,2.297,448,3.535,449,3.535,450,2.708,451,2.878,452,3.015,453,2.878,454,2.088,455,2.647,456,3.015,459,2.647,1409,4.775]],["title/interfaces/ToolSettingsMap-1.html",[353,1.342,360,0.238,445,2.263]],["body/interfaces/ToolSettingsMap-1.html",[3,0.175,4,0.175,9,0.132,12,0.364,14,1.014,31,2.02,46,1.18,49,0.009,52,1.394,85,0.355,88,0.728,99,0.275,100,0.486,103,2.481,111,1.439,180,1.038,189,0.005,190,0.006,191,0.005,192,1.073,239,0.485,272,3.055,281,0.453,285,1.51,303,1.114,314,1.834,322,2.481,360,0.465,361,1.062,427,2.796,429,3.158,430,2.866,431,2.694,432,2.745,433,3.56,435,3.831,436,3.158,437,2.745,438,3.346,439,5.082,440,1.22,441,2.211,442,2.636,443,3.158,444,2.958,445,3.671,446,4.224,447,2.291,448,3.525,449,3.525,450,2.7,451,2.866,452,3.002,453,2.866,454,2.079,455,2.636,456,3.002,457,3.559,459,2.636,1410,4.755]],["title/changelog.html",[1411,2.755,1412,2.755,1413,2.263]],["body/changelog.html",[0,2.091,13,2.781,14,1.112,15,1.656,23,1.338,49,0.007,53,3.046,54,1.248,56,2.682,90,2.382,91,3.142,103,2.636,105,5.058,153,0.798,189,0.005,190,0.007,191,0.005,192,1.14,199,1.98,218,2.566,239,0.475,384,2.89,392,4.488,399,1.928,450,3.489,466,2.504,472,2.781,505,3.357,557,3.292,584,3.902,684,3.662,693,4.604,725,2.89,740,3.902,743,6.044,744,4.604,746,3.902,750,3.463,821,3.662,823,3.902,824,3.902,847,4.202,1053,2.504,1055,3.463,1140,4.604,1249,4.604,1259,4.202,1284,3.662,1413,3.901,1414,5.214,1415,5.214,1416,3.902,1417,5.214,1418,5.214,1419,5.612,1420,6.759,1421,5.214,1422,5.214,1423,5.447,1424,5.214,1425,5.214,1426,6.759,1427,5.214,1428,5.214,1429,5.214,1430,5.214,1431,5.214,1432,5.214,1433,5.968,1434,4.202,1435,5.214,1436,5.214,1437,5.214,1438,6.759,1439,6.759,1440,5.214,1441,4.604,1442,5.968,1443,4.604,1444,4.604,1445,5.214,1446,5.214,1447,3.292,1448,5.214,1449,5.214,1450,5.214,1451,5.214,1452,5.214,1453,5.214,1454,5.214,1455,5.214,1456,5.214,1457,5.214,1458,5.214,1459,5.214,1460,5.214,1461,4.604,1462,4.604,1463,4.604]],["title/contributing.html",[1411,2.755,1412,2.755,1464,3.463]],["body/contributing.html",[9,0.097,17,2.6,34,1.62,46,0.645,48,1.219,49,0.005,84,2.8,101,2.721,103,1.99,156,2.8,189,0.005,190,0.005,191,0.003,195,1.284,242,4.873,306,2.8,360,0.211,366,1.319,407,1.853,454,2.231,472,1.853,493,1.925,498,2.451,505,2.534,512,2.005,525,2.193,557,2.193,562,2.005,599,2.8,622,2.6,705,2.8,725,3.351,751,6.181,821,3.584,823,2.6,832,5.371,869,3.075,894,3.067,898,3.067,902,2.193,1001,3.067,1056,2.451,1060,4.505,1069,4.247,1145,3.067,1165,3.067,1229,2.6,1284,2.44,1442,4.505,1443,3.067,1447,5.338,1461,4.505,1462,3.067,1463,3.067,1464,4.505,1465,4.505,1466,5.339,1467,3.474,1468,3.474,1469,3.067,1470,3.067,1471,3.474,1472,3.474,1473,3.067,1474,7.67,1475,5.102,1476,3.474,1477,6.047,1478,3.474,1479,2.6,1480,3.474,1481,3.474,1482,4.112,1483,2.8,1484,3.067,1485,3.474,1486,3.474,1487,3.474,1488,3.474,1489,6.664,1490,2.8,1491,3.474,1492,2.8,1493,3.474,1494,3.474,1495,4.112,1496,3.474,1497,3.474,1498,4.505,1499,3.474,1500,3.474,1501,5.102,1502,3.474,1503,3.474,1504,5.102,1505,3.474,1506,7.099,1507,3.474,1508,7.099,1509,5.102,1510,3.067,1511,5.102,1512,3.474,1513,3.474,1514,3.474,1515,3.474,1516,3.474,1517,3.474,1518,3.474,1519,3.474,1520,5.102,1521,3.474,1522,3.474,1523,5.102,1524,3.474,1525,3.474,1526,3.474,1527,5.102,1528,3.474,1529,5.102,1530,7.099,1531,3.474,1532,3.474,1533,3.474,1534,3.474,1535,5.102,1536,3.474,1537,3.474,1538,3.474,1539,3.474,1540,3.474,1541,3.474,1542,3.474,1543,3.474,1544,3.474,1545,3.474,1546,3.474,1547,3.474,1548,3.474,1549,3.474,1550,5.102,1551,6.047,1552,3.474,1553,3.474,1554,3.474,1555,3.474,1556,3.474,1557,3.474,1558,3.474,1559,3.474,1560,5.102,1561,3.474,1562,3.474,1563,3.067,1564,3.474,1565,3.474,1566,3.474,1567,3.474,1568,5.102,1569,3.474,1570,3.474,1571,3.474,1572,5.102,1573,3.474,1574,3.067,1575,3.474,1576,3.474,1577,3.474,1578,3.474,1579,3.474,1580,2.8,1581,5.102,1582,3.474,1583,3.474,1584,5.102,1585,3.474,1586,3.474,1587,3.474,1588,3.474,1589,3.474,1590,3.474,1591,3.474,1592,3.474,1593,3.474,1594,3.474,1595,3.474,1596,5.102,1597,3.474,1598,3.474,1599,3.474,1600,3.474,1601,3.474,1602,3.474,1603,3.474,1604,3.474,1605,5.102,1606,5.102,1607,5.102,1608,3.474,1609,3.474,1610,3.474,1611,3.474,1612,3.474,1613,3.474,1614,3.474,1615,3.474,1616,3.474,1617,3.474,1618,3.474,1619,5.102,1620,3.474,1621,5.102,1622,3.474,1623,3.474,1624,3.067,1625,3.474,1626,3.474,1627,5.102,1628,3.067,1629,3.474,1630,3.474,1631,3.474,1632,3.474,1633,3.474,1634,3.474,1635,3.474,1636,3.474,1637,3.474,1638,3.474,1639,3.474,1640,3.474,1641,3.474,1642,3.474,1643,3.474,1644,3.474,1645,3.474,1646,3.474,1647,3.474,1648,3.474,1649,3.474,1650,3.474,1651,3.474,1652,3.474,1653,3.474,1654,3.474,1655,3.474,1656,3.474,1657,3.474,1658,3.474]],["title/dependencies.html",[195,2.059,1434,3.161]],["body/dependencies.html",[49,0.009,88,0.851,89,3.905,91,3.35,95,2.505,180,1.537,189,0.005,190,0.007,191,0.005,195,2.055,225,4.909,226,4.909,228,5.675,229,4.677,233,3.497,234,4.909,235,4.909,236,2.67,238,4.909,241,4.48,270,3.081,440,1.426,471,2.36,518,3.692,745,3.51,956,4.16,980,3.692,983,4.48,1157,4.48,1328,4.48,1355,4.909,1376,4.16,1479,4.16,1659,5.559,1660,8.803,1661,5.559,1662,7.042,1663,5.559,1664,5.559,1665,5.559,1666,5.559,1667,5.559,1668,5.559,1669,5.559,1670,5.559,1671,5.559,1672,5.559,1673,7.042,1674,4.909,1675,5.559,1676,5.559,1677,5.559,1678,5.559,1679,5.559,1680,5.559,1681,5.559,1682,5.559,1683,5.559,1684,5.559]],["title/miscellaneous/enumerations.html",[1685,2.363,1686,4.918]],["body/miscellaneous/enumerations.html",[10,2.217,14,1.524,23,1.459,28,0.727,49,0.009,55,3.951,106,2.324,118,3.11,180,1.843,189,0.006,190,0.007,191,0.006,239,0.546,281,0.508,325,4.068,326,3.581,348,3.195,406,3.775,409,3.219,410,3.547,418,3.775,501,3.414,508,4.122,510,3.589,511,4.509,520,4.509,521,3.281,522,4.509,523,2.485,524,3.281,525,3.589,526,3.426,1685,3.426,1686,5.019,1687,5.685,1688,5.685,1689,4.581]],["title/miscellaneous/functions.html",[391,4.488,1685,2.363]],["body/miscellaneous/functions.html",[12,0.563,14,1.273,23,1.531,28,0.764,48,2.584,49,0.009,50,1.683,52,1.552,63,2.875,180,1.303,189,0.006,190,0.007,191,0.006,192,1.242,218,2.266,239,0.466,281,0.568,391,4.81,441,2.775,442,3.308,444,2.775,534,3.445,551,3.876,563,3.768,617,5.607,889,5.171,908,5.933,984,6.5,1019,4.467,1110,7.049,1495,4.81,1685,3.597,1690,5.27,1691,7.359,1692,5.969,1693,5.969,1694,5.27,1695,5.969,1696,5.969,1697,5.969,1698,5.969,1699,5.969]],["title/index.html",[28,0.502,1411,2.755,1412,2.755]],["body/index.html",[0,2.191,2,4.021,14,1.486,15,2.564,23,1.402,49,0.007,54,1.308,56,3.944,57,2.714,90,2.435,124,3.63,153,0.836,168,2.714,169,2.714,180,1.674,189,0.005,190,0.007,191,0.005,192,1.175,195,2.02,199,2.075,212,2.191,217,4.405,218,2.645,239,0.556,277,4.09,283,2.714,320,2.159,392,4.626,399,2.02,450,2.957,498,2.625,606,4.405,622,5.213,738,5.614,740,5.213,745,3.45,746,4.09,749,4.09,750,5.363,754,5.213,821,4.893,867,4.09,869,4.198,1053,2.625,1054,2.915,1126,5.614,1229,4.09,1413,4.426,1447,5.098,1465,6.771,1700,5.466,1701,5.466,1702,5.466,1703,5.466,1704,5.466,1705,5.466,1706,5.466,1707,4.626,1708,6.966,1709,4.826,1710,4.826,1711,4.405,1712,5.466]],["title/license.html",[1411,2.755,1412,2.755,1713,3.922]],["body/license.html",[23,1.426,49,0.007,94,2.965,189,0.005,190,0.007,191,0.005,212,2.229,400,2.36,493,3.081,512,3.209,750,3.692,823,5.784,839,4.16,869,4.244,1419,4.16,1490,4.48,1495,4.48,1498,6.218,1510,4.909,1624,4.909,1628,4.909,1709,4.909,1710,4.909,1714,4.909,1715,5.559,1716,5.559,1717,7.729,1718,5.559,1719,5.559,1720,5.559,1721,5.559,1722,5.559,1723,7.042,1724,8.885,1725,5.559,1726,5.559,1727,5.559,1728,7.042,1729,5.559,1730,5.559,1731,5.559,1732,4.909,1733,5.559,1734,5.559,1735,5.559,1736,5.559,1737,7.042,1738,5.559,1739,5.559,1740,5.559,1741,5.559,1742,5.559,1743,5.559,1744,7.042,1745,7.042,1746,5.559,1747,5.559,1748,5.559,1749,5.559,1750,5.559,1751,5.559,1752,5.559,1753,5.559,1754,5.559,1755,5.559,1756,5.559,1757,5.559,1758,5.559,1759,5.559,1760,5.559,1761,5.559,1762,5.559,1763,5.559,1764,5.559,1765,5.559,1766,5.559,1767,5.559,1768,5.559,1769,5.559,1770,5.559]],["title/modules.html",[194,2.199]],["body/modules.html",[49,0.007,189,0.005,190,0.007,191,0.005,193,3.784,194,1.891,204,3.784,205,4.584,206,3.578,207,3.11,208,3.784,209,4.584,229,6.125,366,2.892,576,3.784,1096,3.784,1097,3.401,1098,3.247,1099,3.401,1100,3.401,1101,3.401,1102,3.247,1103,3.401,1120,4.032,1133,4.032,1137,3.578,1156,4.342,1260,6.125,1771,9.224,1772,9.274,1773,7.617]],["title/overview.html",[1774,5.532]],["body/overview.html",[1,4.169,2,1.676,45,3.376,49,0.009,166,1.046,169,1.443,173,2.896,176,3.134,179,3.853,182,4.004,184,3.134,186,3.715,189,0.003,190,0.004,191,0.003,192,0.49,193,6.13,194,1.019,195,1.074,196,1.198,197,1.198,198,1.133,199,1.103,200,2.565,201,2.565,202,2.565,203,2.565,204,3.814,205,5.796,206,4.045,207,4.913,208,6.248,209,5.182,210,1.893,211,1.198,212,1.165,280,1.074,293,3.671,294,3.376,353,0.994,361,0.649,386,2.565,387,2.565,473,1.61,509,1.676,576,5.369,577,2.565,578,2.565,579,3.814,829,3.009,963,2.565,964,2.565,966,2.565,967,2.565,968,3.428,1092,2.565,1093,2.565,1094,2.565,1095,2.565,1096,5.729,1097,4.927,1098,4.703,1099,4.927,1100,4.927,1101,4.927,1102,4.703,1103,4.927,1120,4.558,1121,2.565,1133,6.601,1134,2.565,1135,2.565,1136,2.565,1137,5.077,1159,2.565,1161,2.565,1186,3.814,1254,2.565,1255,2.565,1256,3.814,1257,3.428,1312,4.063,1316,2.565,1317,2.565,1325,3.814,1329,2.565,1330,2.565,1334,4.063,1338,2.565,1339,2.565,1343,4.063,1347,2.565,1348,2.565,1352,3.814,1356,2.565,1357,2.565,1361,4.063,1368,2.565,1369,2.565,1373,3.814,1377,2.565,1378,2.565,1382,4.063,1388,2.565,1389,2.565,1774,2.565,1775,4.46,1776,2.905,1777,2.905]],["title/todo.html",[412,2.017,1411,2.755,1412,2.755]],["body/todo.html",[0,2.4,23,1.536,49,0.007,59,2.272,86,3.606,169,2.972,180,1.745,189,0.006,190,0.007,191,0.006,192,1.01,194,2.1,218,2.272,236,2.874,239,0.528,277,4.478,283,3.662,373,3.778,380,2.616,389,3.192,412,3.078,415,1.811,454,3.224,523,2.616,551,3.717,560,4.823,564,3.974,613,3.078,615,4.203,805,3.778,902,3.778,956,4.478,999,6.209,1048,4.478,1245,5.284,1260,4.897,1319,3.454,1416,4.478,1563,5.284,1574,5.284,1714,5.284,1732,5.284,1778,5.984,1779,5.984,1780,5.984,1781,5.984,1782,5.984,1783,5.984,1784,5.984,1785,5.984,1786,5.984,1787,5.284,1788,5.284,1789,5.284]],["title/miscellaneous/typealiases.html",[1685,2.363,1790,5.569]],["body/miscellaneous/typealiases.html",[6,2.77,28,0.786,49,0.009,51,1.119,143,2.157,153,1.147,189,0.006,190,0.007,191,0.006,239,0.389,281,0.533,303,1.091,366,2.333,458,3.407,462,3.279,463,4.154,464,4.154,465,3.279,466,2.952,467,4.154,468,3.279,470,3.279,475,3.279,485,3.279,486,3.407,487,4.154,501,2.687,508,3.548,510,3.88,511,4.732,521,3.548,524,3.548,526,3.704,533,4.978,1685,3.704,1689,4.954,1791,6.147,1792,7.496]],["title/miscellaneous/variables.html",[1483,4.488,1685,2.363]],["body/miscellaneous/variables.html",[0,2.502,10,2.668,13,1.958,14,1.331,23,0.942,28,0.47,46,0.985,49,0.009,51,1.08,53,1.654,54,2.11,55,3.813,100,0.376,103,3.116,146,2.317,173,1.958,174,3.201,180,1.652,182,2.944,189,0.004,190,0.005,191,0.004,192,0.896,218,1.394,239,0.541,242,5.512,263,3.241,264,4.69,268,5.03,271,3.241,273,4.69,274,6.408,275,4.69,276,4.69,277,3.975,281,0.555,285,1.687,303,0.534,322,1.432,399,1.357,411,2.551,424,2.732,428,2.747,448,4.193,449,4.324,450,2.903,451,4.122,452,3.353,453,3.201,454,2.322,455,3.791,456,3.353,457,2.747,471,2.649,488,2.119,500,2.119,502,2.119,506,2.119,529,1.654,535,2.958,545,2.958,549,1.763,551,1.707,563,3.353,565,2.958,566,3.73,567,2.958,568,2.944,569,2.958,570,2.438,571,3.975,572,2.958,573,2.747,574,4.28,575,2.958,580,2.958,583,4.28,586,5.511,613,1.888,644,2.747,645,4.69,646,3.241,867,2.747,1104,4.28,1105,4.28,1114,4.69,1157,5.03,1158,4.69,1483,2.958,1674,3.241,1685,2.212,1689,4.28,1690,3.241,1691,4.69,1694,3.241,1793,3.671,1794,5.311,1795,6.241,1796,5.311,1797,3.671,1798,3.671,1799,5.311,1800,3.671,1801,6.84,1802,5.311,1803,3.671,1804,5.311,1805,3.671,1806,3.671,1807,3.671,1808,5.311,1809,3.671]],["title/additional-documentation/tinynodes-library-docs.html",[23,0.767,59,1.134,461,1.306,1055,1.984,1416,2.236]],["body/additional-documentation/tinynodes-library-docs.html",[23,1.722,49,0.008,81,5.925,180,1.465,189,0.007,190,0.008,191,0.007,287,5.408,740,5.021,743,5.408,745,4.987,746,5.021,1056,3.223,1250,3.451,1259,5.408,1413,3.873,1441,5.925,1444,5.925,1466,5.925,1473,5.925,1482,5.408,1490,5.408,1707,4.456,1711,5.408,1810,5.925,1811,7.9,1812,6.71]],["title/additional-documentation/tinynodes-library-docs/ngx-editorjs-readme.html",[59,1.134,180,0.652,239,0.189,461,1.306,1707,1.984]],["body/additional-documentation/tinynodes-library-docs/ngx-editorjs-readme.html",[0,2.616,12,0.254,13,1.774,14,0.71,15,1.872,17,2.489,31,1.056,49,0.009,51,0.46,52,0.647,54,1.411,56,3.032,63,1.198,85,0.407,86,2.978,88,0.509,90,2.072,99,0.17,100,0.34,103,2.299,111,1.006,124,2.209,128,2.489,129,2.005,143,1.167,153,0.902,168,2.454,169,2.454,179,1.774,180,0.726,186,1.711,187,2.005,189,0.003,190,0.005,191,0.003,192,1.176,193,2.336,196,1.372,197,1.372,198,1.297,207,2.852,218,2.238,219,1.844,223,1.927,227,4.363,228,2.681,229,2.209,239,0.556,257,2.336,283,2.928,285,1.056,286,1.585,297,1.92,300,2.489,308,3.982,314,1.317,320,2.022,322,1.297,371,2.852,383,2.1,384,3.267,389,2.636,399,2.179,400,1.412,411,1.598,415,1.974,424,1.711,431,1.495,434,3.281,440,1.268,441,3.242,444,2.741,450,2.502,453,2.978,454,2.577,455,2.739,465,2.636,469,2.097,471,1.412,498,1.598,504,1.711,512,1.92,519,1.92,529,2.941,536,4.141,537,2.336,538,3.47,539,2.336,540,3.47,541,3.47,546,2.336,549,2.373,551,2.298,552,2.336,553,2.336,554,2.209,555,3.47,556,2.336,557,2.1,562,1.92,564,3.915,570,2.209,613,3.032,644,3.698,705,2.681,723,2.005,724,2.005,725,1.844,726,2.336,739,2.937,745,3.722,749,2.489,750,2.209,821,2.336,824,2.489,829,1.844,838,2.336,847,2.681,869,3.932,896,2.937,899,3.982,902,2.1,971,4.363,972,4.363,976,4.363,994,2.681,1019,2.489,1043,2.937,1053,3.509,1054,1.774,1055,3.281,1056,1.598,1069,2.336,1098,2.005,1100,2.1,1102,2.005,1173,2.209,1229,2.489,1230,2.937,1250,2.541,1260,2.209,1325,3.47,1352,3.47,1373,3.47,1376,2.489,1413,1.92,1416,4.412,1447,2.1,1469,2.937,1479,4.412,1484,2.937,1580,2.681,1788,2.937,1789,2.937,1813,3.326,1814,3.326,1815,3.326,1816,3.326,1817,2.937,1818,3.326,1819,3.326,1820,5.895,1821,3.326,1822,4.941,1823,3.326,1824,3.326,1825,4.941,1826,3.326,1827,3.326,1828,3.326,1829,3.326,1830,3.326,1831,3.326,1832,3.326,1833,3.326,1834,3.326,1835,3.326,1836,3.326,1837,3.326,1838,2.937,1839,3.326]],["title/additional-documentation/tinynodes-library-docs/ngx-editorjs-readme/ngx-editorjs-changelog.html",[59,1.134,180,0.652,239,0.189,461,1.306,1413,1.724]],["body/additional-documentation/tinynodes-library-docs/ngx-editorjs-readme/ngx-editorjs-changelog.html",[0,2.664,7,2.372,9,0.114,14,0.877,15,1.305,16,3.634,29,0.918,31,1.305,49,0.006,52,0.799,54,1.814,56,2.96,63,1.48,86,2.476,90,1.305,91,2.476,100,0.589,104,3.629,143,1.442,162,3.312,168,2.859,169,3.299,179,2.192,180,0.897,186,2.113,189,0.004,190,0.006,191,0.004,192,1.214,207,2.372,239,0.536,279,0.857,283,3.299,285,1.305,298,2.886,300,3.075,303,0.598,320,1.784,360,0.25,366,2.185,384,2.278,392,2.729,399,2.661,400,3.055,427,1.603,431,2.01,433,2.859,434,2.729,441,3.089,444,2.677,450,3.493,454,2.516,462,2.192,466,3.952,469,1.744,471,1.744,498,3.191,508,4.154,529,1.852,543,3.075,549,1.974,562,3.322,564,2.729,568,3.19,584,3.075,613,2.96,745,3.634,750,4.412,805,2.594,829,3.19,839,4.307,867,3.075,869,3.469,902,2.594,908,3.312,968,2.594,999,2.886,1019,3.075,1048,3.075,1055,5.032,1069,2.886,1260,2.729,1261,3.629,1284,4.666,1413,3.834,1419,5.877,1423,3.312,1433,7.383,1434,4.639,1447,4.784,1470,3.629,1492,3.312,1580,3.312,1707,2.729,1711,5.801,1810,3.629,1838,5.082,1840,3.629,1841,3.629,1842,3.629,1843,3.629,1844,3.629,1845,3.629,1846,3.629,1847,4.109,1848,6.935,1849,4.109,1850,4.109,1851,4.109,1852,4.109,1853,4.109,1854,3.629,1855,4.109,1856,4.109,1857,3.629,1858,5.756,1859,4.109,1860,4.109,1861,6.643,1862,4.109,1863,3.629,1864,4.109,1865,4.109,1866,4.109,1867,4.109,1868,4.109,1869,4.109,1870,4.109,1871,5.756,1872,4.109,1873,4.109,1874,3.629,1875,4.109,1876,4.109,1877,4.109]],["title/additional-documentation/tinynodes-library-docs/ngx-editorjs-plugins-readme.html",[59,1.013,180,0.583,239,0.169,450,1.133,461,1.167,1707,1.773]],["body/additional-documentation/tinynodes-library-docs/ngx-editorjs-plugins-readme.html",[9,0.14,12,0.384,14,1.071,15,2.769,16,4.162,49,0.009,50,1.147,54,1.201,56,3.786,90,1.594,124,3.333,133,2.492,143,1.761,152,3.333,153,1.3,180,1.096,189,0.005,190,0.006,191,0.005,192,0.847,194,2.314,195,1.855,239,0.495,320,1.555,431,1.994,450,3.125,454,2.194,613,4.369,745,3.168,1097,3.168,1098,3.024,1099,3.168,1101,3.168,1102,3.024,1103,3.168,1137,3.333,1241,4.431,1250,4.433,1260,4.378,1328,4.044,1376,3.755,1447,3.168,1479,4.933,1707,5.724,1787,4.431,1817,4.431,1878,5.018,1879,5.018,1880,5.018,1881,5.018,1882,5.018,1883,5.018,1884,5.018]],["title/additional-documentation/tinynodes-library-docs/ngx-editorjs-plugins-readme/ngx-editorjs-plugins-changelog.html",[59,1.013,180,0.583,239,0.169,450,1.133,461,1.167,1413,1.541]],["body/additional-documentation/tinynodes-library-docs/ngx-editorjs-plugins-readme/ngx-editorjs-plugins-changelog.html",[9,0.177,34,2.018,49,0.007,54,1.521,91,3.829,189,0.006,190,0.007,191,0.006,192,1.384,285,2.018,400,2.697,413,3.389,450,2.697,466,3.051,568,3.521,902,4.011,968,4.828,1048,4.754,1053,3.051,1056,3.051,1284,5.371,1413,4.414,1419,5.723,1423,5.12,1447,4.828,1482,5.12,1492,5.12,1840,5.61,1841,5.61,1842,5.61,1843,5.61,1844,5.61,1845,5.61,1846,5.61,1848,6.752,1854,5.61,1857,5.61,1863,5.61,1874,5.61,1885,6.353]]],"invertedIndex":[["",{"_index":49,"title":{},"body":{"components/AppContainerComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"injectables/AppService.html":{},"injectables/AppService-1.html":{},"interfaces/ApplicationData.html":{},"interfaces/ApplicationData-1.html":{},"modules/ApplicationDataModule.html":{},"injectables/ApplicationQuery.html":{},"injectables/ApplicationQuery-1.html":{},"interfaces/ApplicationState.html":{},"interfaces/ApplicationState-1.html":{},"injectables/ApplicationStore.html":{},"injectables/ApplicationStore-1.html":{},"interfaces/BasePlugin.html":{},"interfaces/BasePlugin-1.html":{},"interfaces/Block.html":{},"interfaces/BlocksMap.html":{},"interfaces/ChangeMap.html":{},"classes/Changed.html":{},"interfaces/DemoData.html":{},"interfaces/DemoData-1.html":{},"interfaces/EditorJSConfig.html":{},"modules/EditorJSInstanceModule.html":{},"injectables/EditorJSInstanceService.html":{},"interfaces/EditorMap.html":{},"interfaces/EventMap.html":{},"interfaces/EventType.html":{},"interfaces/Header.html":{},"interfaces/HeaderBlock.html":{},"components/HomePageComponent.html":{},"interfaces/Image.html":{},"interfaces/ImageBlock.html":{},"interfaces/List.html":{},"interfaces/ListBlock.html":{},"modules/MaterialModule.html":{},"interfaces/MenuGroup.html":{},"interfaces/MenuGroup-1.html":{},"interfaces/MenuItem.html":{},"interfaces/MenuItem-1.html":{},"classes/MockEditorJS.html":{},"injectables/MockNgZone.html":{},"classes/MockPlugin.html":{},"components/NavBarComponent.html":{},"components/NgxEditorJSComponent.html":{},"interfaces/NgxEditorJSConfig.html":{},"interfaces/NgxEditorJSDemo.html":{},"interfaces/NgxEditorJSDemo-1.html":{},"interfaces/NgxEditorJSDemoData.html":{},"interfaces/NgxEditorJSDemoData-1.html":{},"directives/NgxEditorJSDirective.html":{},"injectables/NgxEditorJSEffects.html":{},"modules/NgxEditorJSModule.html":{},"injectables/NgxEditorJSPluginService.html":{},"injectables/NgxEditorJSService.html":{},"modules/NgxEditorjsDemoModule.html":{},"modules/NgxEditorjsNgrxModule.html":{},"modules/NgxEditorjsPluginsModule.html":{},"modules/NgxHideableHeaderDemoModule.html":{},"modules/NgxTinynodesCoreModule.html":{},"classes/NotReady.html":{},"interfaces/Page.html":{},"interfaces/PageBlock.html":{},"components/PageContainerComponent.html":{},"modules/PageStoreModule.html":{},"injectables/PagesQuery.html":{},"injectables/PagesService.html":{},"interfaces/PagesState.html":{},"injectables/PagesStore.html":{},"interfaces/Paragraph.html":{},"interfaces/ParagraphBlock.html":{},"injectables/PluginCode.html":{},"modules/PluginCodeModule.html":{},"interfaces/PluginConfig.html":{},"interfaces/PluginConfig-1.html":{},"injectables/PluginHeader.html":{},"modules/PluginHeaderModule.html":{},"injectables/PluginImage.html":{},"modules/PluginImageModule.html":{},"injectables/PluginLink.html":{},"modules/PluginLinkModule.html":{},"injectables/PluginList.html":{},"modules/PluginListModule.html":{},"injectables/PluginMarker.html":{},"modules/PluginMarkerModule.html":{},"injectables/PluginParagraph.html":{},"modules/PluginParagraphModule.html":{},"injectables/PluginSimpleImage.html":{},"modules/PluginSimpleImageModule.html":{},"classes/Ready.html":{},"interfaces/ReadyMap.html":{},"classes/SaveEnd.html":{},"classes/SaveStart.html":{},"components/SidebarComponent.html":{},"interfaces/Tag.html":{},"classes/TestClass.html":{},"interfaces/TinynodeDemos.html":{},"interfaces/TinynodeDemos-1.html":{},"interfaces/ToolSettingsMap.html":{},"interfaces/ToolSettingsMap-1.html":{},"changelog.html":{},"contributing.html":{},"dependencies.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"index.html":{},"license.html":{},"modules.html":{},"overview.html":{},"todo.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{},"additional-documentation/tinynodes-library-docs.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-readme.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-readme/ngx-editorjs-changelog.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-plugins-readme.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-plugins-readme/ngx-editorjs-plugins-changelog.html":{}}}],["0",{"_index":146,"title":{},"body":{"components/AppContainerComponent.html":{},"injectables/AppService.html":{},"injectables/AppService-1.html":{},"injectables/EditorJSInstanceService.html":{},"components/NavBarComponent.html":{},"directives/NgxEditorJSDirective.html":{},"miscellaneous/variables.html":{}}}],["0.0.5",{"_index":1679,"title":{},"body":{"dependencies.html":{}}}],["0.12.2",{"_index":1678,"title":{},"body":{"dependencies.html":{}}}],["0.8.26",{"_index":1684,"title":{},"body":{"dependencies.html":{}}}],["05",{"_index":1848,"title":{},"body":{"additional-documentation/tinynodes-library-docs/ngx-editorjs-readme/ngx-editorjs-changelog.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-plugins-readme/ngx-editorjs-plugins-changelog.html":{}}}],["1",{"_index":353,"title":{"injectables/AppService-1.html":{},"interfaces/ApplicationData-1.html":{},"injectables/ApplicationQuery-1.html":{},"interfaces/ApplicationState-1.html":{},"injectables/ApplicationStore-1.html":{},"interfaces/BasePlugin-1.html":{},"interfaces/DemoData-1.html":{},"interfaces/MenuGroup-1.html":{},"interfaces/MenuItem-1.html":{},"interfaces/NgxEditorJSDemo-1.html":{},"interfaces/NgxEditorJSDemoData-1.html":{},"interfaces/PluginConfig-1.html":{},"interfaces/TinynodeDemos-1.html":{},"interfaces/ToolSettingsMap-1.html":{}},"body":{"interfaces/Block.html":{},"interfaces/Header.html":{},"interfaces/HeaderBlock.html":{},"interfaces/Image.html":{},"interfaces/ImageBlock.html":{},"interfaces/List.html":{},"interfaces/ListBlock.html":{},"components/NgxEditorJSComponent.html":{},"components/PageContainerComponent.html":{},"interfaces/Paragraph.html":{},"interfaces/ParagraphBlock.html":{},"overview.html":{}}}],["1.0.0",{"_index":1874,"title":{},"body":{"additional-documentation/tinynodes-library-docs/ngx-editorjs-readme/ngx-editorjs-changelog.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-plugins-readme/ngx-editorjs-plugins-changelog.html":{}}}],["1.0.4",{"_index":1668,"title":{},"body":{"dependencies.html":{}}}],["1.1.0",{"_index":1863,"title":{},"body":{"additional-documentation/tinynodes-library-docs/ngx-editorjs-readme/ngx-editorjs-changelog.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-plugins-readme/ngx-editorjs-plugins-changelog.html":{}}}],["1.1.1",{"_index":1860,"title":{},"body":{"additional-documentation/tinynodes-library-docs/ngx-editorjs-readme/ngx-editorjs-changelog.html":{}}}],["1.1.2",{"_index":1856,"title":{},"body":{"additional-documentation/tinynodes-library-docs/ngx-editorjs-readme/ngx-editorjs-changelog.html":{}}}],["1.2",{"_index":1439,"title":{},"body":{"changelog.html":{}}}],["1.2.0",{"_index":1853,"title":{},"body":{"additional-documentation/tinynodes-library-docs/ngx-editorjs-readme/ngx-editorjs-changelog.html":{}}}],["1.3.0",{"_index":1847,"title":{},"body":{"additional-documentation/tinynodes-library-docs/ngx-editorjs-readme/ngx-editorjs-changelog.html":{}}}],["1.3.4",{"_index":1671,"title":{},"body":{"dependencies.html":{}}}],["1.4",{"_index":1656,"title":{},"body":{"contributing.html":{}}}],["10",{"_index":1861,"title":{},"body":{"additional-documentation/tinynodes-library-docs/ngx-editorjs-readme/ngx-editorjs-changelog.html":{}}}],["100",{"_index":855,"title":{},"body":{"components/NgxEditorJSComponent.html":{},"components/PageContainerComponent.html":{}}}],["100vh",{"_index":130,"title":{},"body":{"components/AppContainerComponent.html":{},"components/PageContainerComponent.html":{}}}],["11",{"_index":1857,"title":{},"body":{"additional-documentation/tinynodes-library-docs/ngx-editorjs-readme/ngx-editorjs-changelog.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-plugins-readme/ngx-editorjs-plugins-changelog.html":{}}}],["12th",{"_index":1436,"title":{},"body":{"changelog.html":{}}}],["13",{"_index":1854,"title":{},"body":{"additional-documentation/tinynodes-library-docs/ngx-editorjs-readme/ngx-editorjs-changelog.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-plugins-readme/ngx-editorjs-plugins-changelog.html":{}}}],["13th",{"_index":1431,"title":{},"body":{"changelog.html":{}}}],["15",{"_index":162,"title":{},"body":{"components/AppContainerComponent.html":{},"components/NavBarComponent.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-readme/ngx-editorjs-changelog.html":{}}}],["15th",{"_index":1418,"title":{},"body":{"changelog.html":{}}}],["1em",{"_index":863,"title":{},"body":{"components/NgxEditorJSComponent.html":{}}}],["2.0.8",{"_index":1677,"title":{},"body":{"dependencies.html":{}}}],["2.13.0",{"_index":1669,"title":{},"body":{"dependencies.html":{}}}],["2.2.3",{"_index":1670,"title":{},"body":{"dependencies.html":{}}}],["2.5.0",{"_index":1672,"title":{},"body":{"dependencies.html":{}}}],["2.5.4",{"_index":1675,"title":{},"body":{"dependencies.html":{}}}],["2019",{"_index":1419,"title":{},"body":{"changelog.html":{},"license.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-readme/ngx-editorjs-changelog.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-plugins-readme/ngx-editorjs-plugins-changelog.html":{}}}],["22",{"_index":1775,"title":{},"body":{"overview.html":{}}}],["250px",{"_index":132,"title":{},"body":{"components/AppContainerComponent.html":{}}}],["2px",{"_index":859,"title":{},"body":{"components/NgxEditorJSComponent.html":{}}}],["3.0.2",{"_index":1667,"title":{},"body":{"dependencies.html":{}}}],["30px",{"_index":154,"title":{},"body":{"components/AppContainerComponent.html":{},"components/NavBarComponent.html":{}}}],["4",{"_index":1225,"title":{},"body":{"components/PageContainerComponent.html":{}}}],["43",{"_index":1777,"title":{},"body":{"overview.html":{}}}],["5px",{"_index":157,"title":{},"body":{"components/AppContainerComponent.html":{},"components/NavBarComponent.html":{}}}],["6",{"_index":473,"title":{},"body":{"interfaces/Block.html":{},"interfaces/Header.html":{},"interfaces/HeaderBlock.html":{},"interfaces/Image.html":{},"interfaces/ImageBlock.html":{},"interfaces/List.html":{},"interfaces/ListBlock.html":{},"interfaces/Paragraph.html":{},"interfaces/ParagraphBlock.html":{},"overview.html":{}}}],["6.3.3",{"_index":1682,"title":{},"body":{"dependencies.html":{}}}],["6.9.0",{"_index":1681,"title":{},"body":{"dependencies.html":{}}}],["7",{"_index":1706,"title":{},"body":{"index.html":{}}}],["7.0.0",{"_index":1664,"title":{},"body":{"dependencies.html":{}}}],["7.1.5",{"_index":1680,"title":{},"body":{"dependencies.html":{}}}],["7.2.15",{"_index":1660,"title":{},"body":{"dependencies.html":{}}}],["7.3.7",{"_index":1662,"title":{},"body":{"dependencies.html":{}}}],["7.4.0",{"_index":1673,"title":{},"body":{"dependencies.html":{}}}],["8",{"_index":1776,"title":{},"body":{"overview.html":{}}}],["85",{"_index":165,"title":{},"body":{"components/AppContainerComponent.html":{},"components/NavBarComponent.html":{}}}],["a:active",{"_index":139,"title":{},"body":{"components/AppContainerComponent.html":{},"components/NavBarComponent.html":{}}}],["a:hover",{"_index":138,"title":{},"body":{"components/AppContainerComponent.html":{},"components/NavBarComponent.html":{}}}],["above",{"_index":1743,"title":{},"body":{"license.html":{}}}],["abusive",{"_index":1622,"title":{},"body":{"contributing.html":{}}}],["acceptable",{"_index":1578,"title":{},"body":{"contributing.html":{}}}],["accepting",{"_index":1542,"title":{},"body":{"contributing.html":{}}}],["access",{"_index":846,"title":{},"body":{"components/NgxEditorJSComponent.html":{}}}],["accessors",{"_index":38,"title":{},"body":{"components/AppContainerComponent.html":{},"injectables/AppService.html":{},"injectables/AppService-1.html":{},"components/HomePageComponent.html":{},"directives/NgxEditorJSDirective.html":{},"injectables/NgxEditorJSPluginService.html":{},"components/PageContainerComponent.html":{},"injectables/PagesService.html":{}}}],["account",{"_index":1613,"title":{},"body":{"contributing.html":{}}}],["acting",{"_index":1614,"title":{},"body":{"contributing.html":{}}}],["action",{"_index":512,"title":{},"body":{"classes/Changed.html":{},"injectables/NgxEditorJSEffects.html":{},"classes/NotReady.html":{},"classes/Ready.html":{},"classes/SaveEnd.html":{},"classes/SaveStart.html":{},"contributing.html":{},"license.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-readme.html":{}}}],["action.payload.holder",{"_index":951,"title":{},"body":{"injectables/NgxEditorJSEffects.html":{}}}],["actions",{"_index":941,"title":{},"body":{"injectables/NgxEditorJSEffects.html":{},"modules/NgxEditorjsNgrxModule.html":{}}}],["actions/ngx",{"_index":957,"title":{},"body":{"injectables/NgxEditorJSEffects.html":{}}}],["actual_component",{"_index":188,"title":{},"body":{"components/AppContainerComponent.html":{},"components/HomePageComponent.html":{},"components/NavBarComponent.html":{},"components/NgxEditorJSComponent.html":{},"components/PageContainerComponent.html":{},"components/SidebarComponent.html":{}}}],["adapted",{"_index":1654,"title":{},"body":{"contributing.html":{}}}],["add",{"_index":999,"title":{},"body":{"injectables/NgxEditorJSPluginService.html":{},"components/PageContainerComponent.html":{},"injectables/PagesService.html":{},"todo.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-readme/ngx-editorjs-changelog.html":{}}}],["add(key",{"_index":1006,"title":{},"body":{"injectables/NgxEditorJSPluginService.html":{}}}],["add(page",{"_index":1276,"title":{},"body":{"injectables/PagesService.html":{}}}],["addblock",{"_index":1271,"title":{},"body":{"injectables/PagesService.html":{}}}],["addblock(pageid",{"_index":1278,"title":{},"body":{"injectables/PagesService.html":{}}}],["added",{"_index":466,"title":{},"body":{"interfaces/Block.html":{},"interfaces/Header.html":{},"interfaces/HeaderBlock.html":{},"interfaces/Image.html":{},"interfaces/ImageBlock.html":{},"interfaces/List.html":{},"interfaces/ListBlock.html":{},"injectables/PagesService.html":{},"interfaces/Paragraph.html":{},"interfaces/ParagraphBlock.html":{},"changelog.html":{},"miscellaneous/typealiases.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-readme/ngx-editorjs-changelog.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-plugins-readme/ngx-editorjs-plugins-changelog.html":{}}}],["adding",{"_index":453,"title":{},"body":{"interfaces/BasePlugin.html":{},"interfaces/BasePlugin-1.html":{},"interfaces/PluginConfig.html":{},"interfaces/PluginConfig-1.html":{},"interfaces/ToolSettingsMap.html":{},"interfaces/ToolSettingsMap-1.html":{},"miscellaneous/variables.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-readme.html":{}}}],["additional",{"_index":461,"title":{"additional-documentation/tinynodes-library-docs.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-readme.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-readme/ngx-editorjs-changelog.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-plugins-readme.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-plugins-readme/ngx-editorjs-plugins-changelog.html":{}},"body":{"interfaces/Block.html":{},"interfaces/Header.html":{},"interfaces/HeaderBlock.html":{},"components/HomePageComponent.html":{},"interfaces/Image.html":{},"interfaces/ImageBlock.html":{},"interfaces/List.html":{},"interfaces/ListBlock.html":{},"modules/NgxEditorjsPluginsModule.html":{},"components/PageContainerComponent.html":{},"interfaces/Paragraph.html":{},"interfaces/ParagraphBlock.html":{}}}],["address",{"_index":1568,"title":{},"body":{"contributing.html":{}}}],["adds",{"_index":619,"title":{},"body":{"injectables/EditorJSInstanceService.html":{}}}],["adheres",{"_index":1845,"title":{},"body":{"additional-documentation/tinynodes-library-docs/ngx-editorjs-readme/ngx-editorjs-changelog.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-plugins-readme/ngx-editorjs-plugins-changelog.html":{}}}],["advances",{"_index":1557,"title":{},"body":{"contributing.html":{}}}],["aftercontentinit",{"_index":19,"title":{},"body":{"components/AppContainerComponent.html":{},"directives/NgxEditorJSDirective.html":{},"components/PageContainerComponent.html":{}}}],["again",{"_index":1830,"title":{},"body":{"additional-documentation/tinynodes-library-docs/ngx-editorjs-readme.html":{}}}],["age",{"_index":1514,"title":{},"body":{"contributing.html":{}}}],["aggregate",{"_index":363,"title":{},"body":{"interfaces/ApplicationData.html":{},"interfaces/ApplicationData-1.html":{},"interfaces/MenuGroup.html":{},"interfaces/MenuGroup-1.html":{},"interfaces/MenuItem.html":{},"interfaces/MenuItem-1.html":{}}}],["akitangdevtools",{"_index":237,"title":{},"body":{"modules/AppModule.html":{}}}],["akitangdevtools.forroot",{"_index":261,"title":{},"body":{"modules/AppModule.html":{}}}],["akitangrouterstoremodule",{"_index":232,"title":{},"body":{"modules/AppModule.html":{}}}],["akitangrouterstoremodule.forroot",{"_index":262,"title":{},"body":{"modules/AppModule.html":{}}}],["aliases",{"_index":1791,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["align",{"_index":158,"title":{},"body":{"components/AppContainerComponent.html":{},"components/NavBarComponent.html":{},"components/NgxEditorJSComponent.html":{}}}],["aligned",{"_index":1592,"title":{},"body":{"contributing.html":{}}}],["allow",{"_index":432,"title":{},"body":{"interfaces/BasePlugin.html":{},"interfaces/BasePlugin-1.html":{},"modules/NgxEditorJSModule.html":{},"modules/NgxEditorjsNgrxModule.html":{},"modules/PageStoreModule.html":{},"interfaces/PluginConfig.html":{},"interfaces/PluginConfig-1.html":{},"interfaces/ToolSettingsMap.html":{},"interfaces/ToolSettingsMap-1.html":{}}}],["allows",{"_index":555,"title":{},"body":{"interfaces/EditorJSConfig.html":{},"components/NgxEditorJSComponent.html":{},"interfaces/NgxEditorJSConfig.html":{},"directives/NgxEditorJSDirective.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-readme.html":{}}}],["along",{"_index":1816,"title":{},"body":{"additional-documentation/tinynodes-library-docs/ngx-editorjs-readme.html":{}}}],["and/or",{"_index":1735,"title":{},"body":{"license.html":{}}}],["angular",{"_index":56,"title":{},"body":{"components/AppContainerComponent.html":{},"injectables/EditorJSInstanceService.html":{},"components/HomePageComponent.html":{},"modules/MaterialModule.html":{},"directives/NgxEditorJSDirective.html":{},"modules/NgxEditorJSModule.html":{},"injectables/NgxEditorJSService.html":{},"changelog.html":{},"index.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-readme.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-readme/ngx-editorjs-changelog.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-plugins-readme.html":{}}}],["angular/animations",{"_index":1659,"title":{},"body":{"dependencies.html":{}}}],["angular/cdk",{"_index":1661,"title":{},"body":{"dependencies.html":{}}}],["angular/common",{"_index":980,"title":{},"body":{"modules/NgxEditorJSModule.html":{},"modules/NgxEditorjsDemoModule.html":{},"modules/NgxEditorjsNgrxModule.html":{},"modules/NgxEditorjsPluginsModule.html":{},"modules/NgxHideableHeaderDemoModule.html":{},"dependencies.html":{}}}],["angular/common/http",{"_index":222,"title":{},"body":{"modules/AppModule.html":{},"injectables/AppService.html":{},"injectables/AppService-1.html":{}}}],["angular/compiler",{"_index":1663,"title":{},"body":{"dependencies.html":{}}}],["angular/core",{"_index":88,"title":{},"body":{"components/AppContainerComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"injectables/AppService.html":{},"injectables/AppService-1.html":{},"modules/ApplicationDataModule.html":{},"injectables/ApplicationQuery.html":{},"injectables/ApplicationQuery-1.html":{},"injectables/ApplicationStore.html":{},"injectables/ApplicationStore-1.html":{},"interfaces/BasePlugin.html":{},"interfaces/BasePlugin-1.html":{},"interfaces/EditorJSConfig.html":{},"modules/EditorJSInstanceModule.html":{},"injectables/EditorJSInstanceService.html":{},"components/HomePageComponent.html":{},"modules/MaterialModule.html":{},"injectables/MockNgZone.html":{},"components/NavBarComponent.html":{},"components/NgxEditorJSComponent.html":{},"interfaces/NgxEditorJSConfig.html":{},"directives/NgxEditorJSDirective.html":{},"injectables/NgxEditorJSEffects.html":{},"modules/NgxEditorJSModule.html":{},"injectables/NgxEditorJSPluginService.html":{},"injectables/NgxEditorJSService.html":{},"modules/NgxEditorjsDemoModule.html":{},"modules/NgxEditorjsNgrxModule.html":{},"modules/NgxEditorjsPluginsModule.html":{},"modules/NgxHideableHeaderDemoModule.html":{},"modules/NgxTinynodesCoreModule.html":{},"components/PageContainerComponent.html":{},"modules/PageStoreModule.html":{},"injectables/PagesQuery.html":{},"injectables/PagesService.html":{},"interfaces/PagesState.html":{},"injectables/PagesStore.html":{},"injectables/PluginCode.html":{},"modules/PluginCodeModule.html":{},"interfaces/PluginConfig.html":{},"interfaces/PluginConfig-1.html":{},"injectables/PluginHeader.html":{},"modules/PluginHeaderModule.html":{},"injectables/PluginImage.html":{},"modules/PluginImageModule.html":{},"injectables/PluginLink.html":{},"modules/PluginLinkModule.html":{},"injectables/PluginList.html":{},"modules/PluginListModule.html":{},"injectables/PluginMarker.html":{},"modules/PluginMarkerModule.html":{},"injectables/PluginParagraph.html":{},"modules/PluginParagraphModule.html":{},"injectables/PluginSimpleImage.html":{},"modules/PluginSimpleImageModule.html":{},"components/SidebarComponent.html":{},"interfaces/ToolSettingsMap.html":{},"interfaces/ToolSettingsMap-1.html":{},"dependencies.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-readme.html":{}}}],["angular/flex",{"_index":225,"title":{},"body":{"modules/AppModule.html":{},"dependencies.html":{}}}],["angular/forms",{"_index":983,"title":{},"body":{"modules/NgxEditorJSModule.html":{},"modules/NgxEditorjsDemoModule.html":{},"dependencies.html":{}}}],["angular/material",{"_index":89,"title":{},"body":{"components/AppContainerComponent.html":{},"modules/AppModule.html":{},"modules/MaterialModule.html":{},"modules/NgxEditorjsDemoModule.html":{},"dependencies.html":{}}}],["angular/platform",{"_index":228,"title":{},"body":{"modules/AppModule.html":{},"dependencies.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-readme.html":{}}}],["angular/router",{"_index":270,"title":{},"body":{"modules/AppRoutingModule.html":{},"interfaces/ApplicationData.html":{},"interfaces/ApplicationData-1.html":{},"interfaces/MenuGroup.html":{},"interfaces/MenuGroup-1.html":{},"interfaces/MenuItem.html":{},"interfaces/MenuItem-1.html":{},"modules/NgxEditorjsDemoModule.html":{},"modules/NgxHideableHeaderDemoModule.html":{},"dependencies.html":{}}}],["any)(editorconfig",{"_index":656,"title":{},"body":{"injectables/EditorJSInstanceService.html":{}}}],["any).onready",{"_index":780,"title":{},"body":{"classes/MockEditorJS.html":{},"classes/MockPlugin.html":{},"classes/TestClass.html":{}}}],["any).render",{"_index":1086,"title":{},"body":{"injectables/NgxEditorJSService.html":{}}}],["aot",{"_index":1871,"title":{},"body":{"additional-documentation/tinynodes-library-docs/ngx-editorjs-readme/ngx-editorjs-changelog.html":{}}}],["api",{"_index":1054,"title":{},"body":{"injectables/NgxEditorJSService.html":{},"modules/PluginCodeModule.html":{},"modules/PluginHeaderModule.html":{},"modules/PluginImageModule.html":{},"modules/PluginLinkModule.html":{},"modules/PluginListModule.html":{},"modules/PluginMarkerModule.html":{},"modules/PluginParagraphModule.html":{},"modules/PluginSimpleImageModule.html":{},"index.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-readme.html":{}}}],["api](https://editorjs.io/api",{"_index":1074,"title":{},"body":{"injectables/NgxEditorJSService.html":{}}}],["app",{"_index":53,"title":{},"body":{"components/AppContainerComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"interfaces/ApplicationData.html":{},"interfaces/ApplicationData-1.html":{},"interfaces/EditorJSConfig.html":{},"components/HomePageComponent.html":{},"interfaces/MenuGroup.html":{},"interfaces/MenuGroup-1.html":{},"interfaces/MenuItem.html":{},"interfaces/MenuItem-1.html":{},"interfaces/NgxEditorJSConfig.html":{},"modules/NgxEditorJSModule.html":{},"components/PageContainerComponent.html":{},"changelog.html":{},"miscellaneous/variables.html":{}}}],["app.component",{"_index":1821,"title":{},"body":{"additional-documentation/tinynodes-library-docs/ngx-editorjs-readme.html":{}}}],["app.component.html",{"_index":27,"title":{},"body":{"components/AppContainerComponent.html":{}}}],["app.component.scss",{"_index":25,"title":{},"body":{"components/AppContainerComponent.html":{}}}],["appcomponent",{"_index":1820,"title":{},"body":{"additional-documentation/tinynodes-library-docs/ngx-editorjs-readme.html":{}}}],["appcontainercomponent",{"_index":1,"title":{"components/AppContainerComponent.html":{}},"body":{"components/AppContainerComponent.html":{},"modules/AppModule.html":{},"components/HomePageComponent.html":{},"components/NavBarComponent.html":{},"components/NgxEditorJSComponent.html":{},"components/PageContainerComponent.html":{},"components/SidebarComponent.html":{},"overview.html":{}}}],["appear",{"_index":1233,"title":{},"body":{"components/PageContainerComponent.html":{}}}],["appearance",{"_index":1524,"title":{},"body":{"contributing.html":{}}}],["application",{"_index":14,"title":{},"body":{"components/AppContainerComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"injectables/AppService.html":{},"injectables/AppService-1.html":{},"interfaces/ApplicationData.html":{},"interfaces/ApplicationData-1.html":{},"modules/ApplicationDataModule.html":{},"injectables/ApplicationQuery.html":{},"injectables/ApplicationQuery-1.html":{},"interfaces/ApplicationState.html":{},"interfaces/ApplicationState-1.html":{},"injectables/ApplicationStore.html":{},"injectables/ApplicationStore-1.html":{},"interfaces/BasePlugin.html":{},"interfaces/BasePlugin-1.html":{},"interfaces/DemoData.html":{},"interfaces/DemoData-1.html":{},"injectables/EditorJSInstanceService.html":{},"interfaces/MenuGroup.html":{},"interfaces/MenuGroup-1.html":{},"interfaces/MenuItem.html":{},"interfaces/MenuItem-1.html":{},"components/NavBarComponent.html":{},"components/NgxEditorJSComponent.html":{},"interfaces/NgxEditorJSDemo.html":{},"interfaces/NgxEditorJSDemo-1.html":{},"interfaces/NgxEditorJSDemoData.html":{},"interfaces/NgxEditorJSDemoData-1.html":{},"modules/NgxEditorJSModule.html":{},"injectables/NgxEditorJSPluginService.html":{},"components/PageContainerComponent.html":{},"interfaces/PluginConfig.html":{},"interfaces/PluginConfig-1.html":{},"interfaces/TinynodeDemos.html":{},"interfaces/TinynodeDemos-1.html":{},"interfaces/ToolSettingsMap.html":{},"interfaces/ToolSettingsMap-1.html":{},"changelog.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"index.html":{},"miscellaneous/variables.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-readme.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-readme/ngx-editorjs-changelog.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-plugins-readme.html":{}}}],["application.model",{"_index":327,"title":{},"body":{"injectables/AppService.html":{},"injectables/AppService-1.html":{},"injectables/ApplicationQuery.html":{},"injectables/ApplicationQuery-1.html":{},"injectables/ApplicationStore.html":{},"injectables/ApplicationStore-1.html":{}}}],["application.query",{"_index":328,"title":{},"body":{"injectables/AppService.html":{},"injectables/AppService-1.html":{},"modules/ApplicationDataModule.html":{}}}],["application.service",{"_index":393,"title":{},"body":{"modules/ApplicationDataModule.html":{}}}],["application.store",{"_index":329,"title":{},"body":{"injectables/AppService.html":{},"injectables/AppService-1.html":{},"modules/ApplicationDataModule.html":{},"injectables/ApplicationQuery.html":{},"injectables/ApplicationQuery-1.html":{}}}],["applicationdata",{"_index":323,"title":{"interfaces/ApplicationData.html":{},"interfaces/ApplicationData-1.html":{}},"body":{"injectables/AppService.html":{},"injectables/AppService-1.html":{},"interfaces/ApplicationData.html":{},"interfaces/ApplicationData-1.html":{},"interfaces/MenuGroup.html":{},"interfaces/MenuGroup-1.html":{},"interfaces/MenuItem.html":{},"interfaces/MenuItem-1.html":{}}}],["applicationdatamodule",{"_index":205,"title":{"modules/ApplicationDataModule.html":{}},"body":{"modules/AppModule.html":{},"modules/ApplicationDataModule.html":{},"modules/NgxTinynodesCoreModule.html":{},"modules.html":{},"overview.html":{}}}],["applicationquery",{"_index":293,"title":{"injectables/ApplicationQuery.html":{},"injectables/ApplicationQuery-1.html":{}},"body":{"injectables/AppService.html":{},"injectables/AppService-1.html":{},"modules/ApplicationDataModule.html":{},"injectables/ApplicationQuery.html":{},"injectables/ApplicationQuery-1.html":{},"overview.html":{}}}],["applicationref",{"_index":604,"title":{},"body":{"injectables/EditorJSInstanceService.html":{}}}],["applicationstate",{"_index":401,"title":{"interfaces/ApplicationState.html":{},"interfaces/ApplicationState-1.html":{}},"body":{"injectables/ApplicationQuery.html":{},"injectables/ApplicationQuery-1.html":{},"interfaces/ApplicationState.html":{},"interfaces/ApplicationState-1.html":{},"injectables/ApplicationStore.html":{},"injectables/ApplicationStore-1.html":{},"interfaces/DemoData.html":{},"interfaces/DemoData-1.html":{},"interfaces/NgxEditorJSDemo.html":{},"interfaces/NgxEditorJSDemo-1.html":{},"interfaces/NgxEditorJSDemoData.html":{},"interfaces/NgxEditorJSDemoData-1.html":{},"interfaces/TinynodeDemos.html":{},"interfaces/TinynodeDemos-1.html":{}}}],["applicationstatekeys",{"_index":325,"title":{},"body":{"injectables/AppService.html":{},"injectables/AppService-1.html":{},"interfaces/ApplicationState.html":{},"interfaces/ApplicationState-1.html":{},"interfaces/DemoData.html":{},"interfaces/DemoData-1.html":{},"interfaces/NgxEditorJSDemo.html":{},"interfaces/NgxEditorJSDemo-1.html":{},"interfaces/NgxEditorJSDemoData.html":{},"interfaces/NgxEditorJSDemoData-1.html":{},"interfaces/TinynodeDemos.html":{},"interfaces/TinynodeDemos-1.html":{},"miscellaneous/enumerations.html":{}}}],["applicationstatekeys.hidden",{"_index":336,"title":{},"body":{"injectables/AppService.html":{},"injectables/AppService-1.html":{}}}],["applicationstore",{"_index":294,"title":{"injectables/ApplicationStore.html":{},"injectables/ApplicationStore-1.html":{}},"body":{"injectables/AppService.html":{},"injectables/AppService-1.html":{},"modules/ApplicationDataModule.html":{},"injectables/ApplicationQuery.html":{},"injectables/ApplicationQuery-1.html":{},"injectables/ApplicationStore.html":{},"injectables/ApplicationStore-1.html":{},"overview.html":{}}}],["applies",{"_index":1603,"title":{},"body":{"contributing.html":{}}}],["appmodule",{"_index":193,"title":{"modules/AppModule.html":{}},"body":{"modules/AppModule.html":{},"modules.html":{},"overview.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-readme.html":{}}}],["appointed",{"_index":1615,"title":{},"body":{"contributing.html":{}}}],["appropriate",{"_index":1581,"title":{},"body":{"contributing.html":{}}}],["approutes",{"_index":273,"title":{},"body":{"modules/AppRoutingModule.html":{},"miscellaneous/variables.html":{}}}],["approutingmodule",{"_index":204,"title":{"modules/AppRoutingModule.html":{}},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"modules.html":{},"overview.html":{}}}],["apps",{"_index":367,"title":{},"body":{"interfaces/ApplicationData.html":{},"interfaces/ApplicationData-1.html":{},"interfaces/MenuGroup.html":{},"interfaces/MenuGroup-1.html":{},"interfaces/MenuItem.html":{},"interfaces/MenuItem-1.html":{}}}],["apps/.../app",{"_index":1793,"title":{},"body":{"miscellaneous/variables.html":{}}}],["apps/.../app.po.ts",{"_index":1800,"title":{},"body":{"miscellaneous/variables.html":{}}}],["apps/.../application.model.ts",{"_index":1688,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["apps/.../environment.prod.ts",{"_index":1797,"title":{},"body":{"miscellaneous/variables.html":{}}}],["apps/.../environment.ts",{"_index":1798,"title":{},"body":{"miscellaneous/variables.html":{}}}],["apps/ngx",{"_index":10,"title":{},"body":{"components/AppContainerComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"injectables/AppService-1.html":{},"interfaces/ApplicationData-1.html":{},"injectables/ApplicationQuery-1.html":{},"interfaces/ApplicationState-1.html":{},"injectables/ApplicationStore-1.html":{},"interfaces/DemoData-1.html":{},"components/HomePageComponent.html":{},"modules/MaterialModule.html":{},"interfaces/MenuGroup-1.html":{},"interfaces/MenuItem-1.html":{},"components/NavBarComponent.html":{},"interfaces/NgxEditorJSDemo-1.html":{},"interfaces/NgxEditorJSDemoData-1.html":{},"modules/NgxEditorjsDemoModule.html":{},"components/SidebarComponent.html":{},"interfaces/TinynodeDemos-1.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/variables.html":{}}}],["appservice",{"_index":45,"title":{"injectables/AppService.html":{},"injectables/AppService-1.html":{}},"body":{"components/AppContainerComponent.html":{},"injectables/AppService.html":{},"injectables/AppService-1.html":{},"modules/ApplicationDataModule.html":{},"components/HomePageComponent.html":{},"modules/NgxTinynodesCoreModule.html":{},"components/PageContainerComponent.html":{},"overview.html":{}}}],["area",{"_index":554,"title":{},"body":{"interfaces/EditorJSConfig.html":{},"components/NgxEditorJSComponent.html":{},"interfaces/NgxEditorJSConfig.html":{},"directives/NgxEditorJSDirective.html":{},"components/PageContainerComponent.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-readme.html":{}}}],["aria",{"_index":372,"title":{},"body":{"interfaces/ApplicationData.html":{},"interfaces/ApplicationData-1.html":{},"interfaces/MenuGroup.html":{},"interfaces/MenuGroup-1.html":{},"interfaces/MenuItem.html":{},"interfaces/MenuItem-1.html":{}}}],["arising",{"_index":1768,"title":{},"body":{"license.html":{}}}],["array",{"_index":838,"title":{},"body":{"components/NgxEditorJSComponent.html":{},"directives/NgxEditorJSDirective.html":{},"injectables/NgxEditorJSPluginService.html":{},"injectables/NgxEditorJSService.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-readme.html":{}}}],["arrayadd",{"_index":1293,"title":{},"body":{"injectables/PagesService.html":{}}}],["arrayadd(entity.blocks",{"_index":1305,"title":{},"body":{"injectables/PagesService.html":{}}}],["arrayremove",{"_index":1294,"title":{},"body":{"injectables/PagesService.html":{}}}],["arrayremove(entity.blocks",{"_index":1306,"title":{},"body":{"injectables/PagesService.html":{}}}],["asjson",{"_index":1184,"title":{},"body":{"components/PageContainerComponent.html":{}}}],["associated",{"_index":1725,"title":{},"body":{"license.html":{}}}],["async",{"_index":1036,"title":{},"body":{"injectables/NgxEditorJSService.html":{},"components/PageContainerComponent.html":{}}}],["attach",{"_index":867,"title":{},"body":{"directives/NgxEditorJSDirective.html":{},"index.html":{},"miscellaneous/variables.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-readme/ngx-editorjs-changelog.html":{}}}],["attached",{"_index":1870,"title":{},"body":{"additional-documentation/tinynodes-library-docs/ngx-editorjs-readme/ngx-editorjs-changelog.html":{}}}],["attacks",{"_index":1562,"title":{},"body":{"contributing.html":{}}}],["attention",{"_index":1556,"title":{},"body":{"contributing.html":{}}}],["attributes",{"_index":822,"title":{},"body":{"components/NgxEditorJSComponent.html":{}}}],["attribution",{"_index":1653,"title":{},"body":{"contributing.html":{}}}],["authors",{"_index":1759,"title":{},"body":{"license.html":{}}}],["auto",{"_index":155,"title":{},"body":{"components/AppContainerComponent.html":{},"components/NavBarComponent.html":{}}}],["autofocus",{"_index":536,"title":{},"body":{"interfaces/EditorJSConfig.html":{},"components/NgxEditorJSComponent.html":{},"interfaces/NgxEditorJSConfig.html":{},"directives/NgxEditorJSDirective.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-readme.html":{}}}],["autofocused",{"_index":542,"title":{},"body":{"interfaces/EditorJSConfig.html":{},"interfaces/NgxEditorJSConfig.html":{}}}],["autosave",{"_index":615,"title":{},"body":{"injectables/EditorJSInstanceService.html":{},"components/NgxEditorJSComponent.html":{},"directives/NgxEditorJSDirective.html":{},"injectables/NgxEditorJSService.html":{},"todo.html":{}}}],["available",{"_index":366,"title":{},"body":{"interfaces/ApplicationData.html":{},"interfaces/ApplicationData-1.html":{},"interfaces/Block.html":{},"interfaces/Header.html":{},"interfaces/HeaderBlock.html":{},"interfaces/Image.html":{},"interfaces/ImageBlock.html":{},"interfaces/List.html":{},"interfaces/ListBlock.html":{},"interfaces/MenuGroup.html":{},"interfaces/MenuGroup-1.html":{},"interfaces/MenuItem.html":{},"interfaces/MenuItem-1.html":{},"components/NgxEditorJSComponent.html":{},"injectables/NgxEditorJSPluginService.html":{},"injectables/PagesService.html":{},"interfaces/Paragraph.html":{},"interfaces/ParagraphBlock.html":{},"contributing.html":{},"modules.html":{},"miscellaneous/typealiases.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-readme/ngx-editorjs-changelog.html":{}}}],["await",{"_index":1072,"title":{},"body":{"injectables/NgxEditorJSService.html":{}}}],["back",{"_index":1048,"title":{},"body":{"injectables/NgxEditorJSService.html":{},"todo.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-readme/ngx-editorjs-changelog.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-plugins-readme/ngx-editorjs-plugins-changelog.html":{}}}],["background",{"_index":481,"title":{},"body":{"interfaces/Block.html":{},"interfaces/Header.html":{},"interfaces/HeaderBlock.html":{},"interfaces/Image.html":{},"interfaces/ImageBlock.html":{},"interfaces/List.html":{},"interfaces/ListBlock.html":{},"interfaces/Paragraph.html":{},"interfaces/ParagraphBlock.html":{}}}],["ban",{"_index":1593,"title":{},"body":{"contributing.html":{}}}],["bar",{"_index":809,"title":{},"body":{"components/NavBarComponent.html":{}}}],["bar'},{'name",{"_index":178,"title":{},"body":{"components/AppContainerComponent.html":{},"components/HomePageComponent.html":{},"components/NavBarComponent.html":{},"components/NgxEditorJSComponent.html":{},"components/PageContainerComponent.html":{},"components/SidebarComponent.html":{}}}],["bar.component",{"_index":248,"title":{},"body":{"modules/AppModule.html":{}}}],["bar.component.html",{"_index":811,"title":{},"body":{"components/NavBarComponent.html":{}}}],["bar.component.scss",{"_index":810,"title":{},"body":{"components/NavBarComponent.html":{}}}],["bar.component.ts",{"_index":803,"title":{},"body":{"components/NavBarComponent.html":{}}}],["bar.component.ts:18",{"_index":814,"title":{},"body":{"components/NavBarComponent.html":{}}}],["bar.component.ts:21",{"_index":813,"title":{},"body":{"components/NavBarComponent.html":{}}}],["bar.component.ts:27",{"_index":815,"title":{},"body":{"components/NavBarComponent.html":{}}}],["bar/nav",{"_index":247,"title":{},"body":{"modules/AppModule.html":{},"components/NavBarComponent.html":{}}}],["base",{"_index":266,"title":{},"body":{"modules/AppRoutingModule.html":{},"interfaces/Block.html":{}}}],["based",{"_index":1843,"title":{},"body":{"additional-documentation/tinynodes-library-docs/ngx-editorjs-readme/ngx-editorjs-changelog.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-plugins-readme/ngx-editorjs-plugins-changelog.html":{}}}],["baseplugin",{"_index":427,"title":{"interfaces/BasePlugin.html":{},"interfaces/BasePlugin-1.html":{}},"body":{"interfaces/BasePlugin.html":{},"interfaces/BasePlugin-1.html":{},"classes/MockEditorJS.html":{},"classes/MockPlugin.html":{},"injectables/NgxEditorJSPluginService.html":{},"injectables/PluginCode.html":{},"interfaces/PluginConfig.html":{},"interfaces/PluginConfig-1.html":{},"injectables/PluginHeader.html":{},"injectables/PluginImage.html":{},"injectables/PluginLink.html":{},"injectables/PluginList.html":{},"injectables/PluginMarker.html":{},"injectables/PluginParagraph.html":{},"injectables/PluginSimpleImage.html":{},"classes/TestClass.html":{},"interfaces/ToolSettingsMap.html":{},"interfaces/ToolSettingsMap-1.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-readme/ngx-editorjs-changelog.html":{}}}],["bash",{"_index":1817,"title":{},"body":{"additional-documentation/tinynodes-library-docs/ngx-editorjs-readme.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-plugins-readme.html":{}}}],["basic",{"_index":486,"title":{},"body":{"interfaces/Block.html":{},"interfaces/Header.html":{},"interfaces/HeaderBlock.html":{},"interfaces/Image.html":{},"interfaces/ImageBlock.html":{},"interfaces/List.html":{},"interfaces/ListBlock.html":{},"interfaces/Paragraph.html":{},"interfaces/ParagraphBlock.html":{},"miscellaneous/typealiases.html":{}}}],["before",{"_index":1060,"title":{},"body":{"injectables/NgxEditorJSService.html":{},"contributing.html":{}}}],["behavior",{"_index":1530,"title":{},"body":{"contributing.html":{}}}],["behaviors",{"_index":1597,"title":{},"body":{"contributing.html":{}}}],["behaviorsubject",{"_index":92,"title":{},"body":{"components/AppContainerComponent.html":{},"interfaces/BlocksMap.html":{},"interfaces/ChangeMap.html":{},"injectables/EditorJSInstanceService.html":{},"interfaces/EditorMap.html":{},"interfaces/EventMap.html":{},"interfaces/EventType.html":{},"components/PageContainerComponent.html":{},"interfaces/ReadyMap.html":{}}}],["behaviorsubject(0",{"_index":671,"title":{},"body":{"injectables/EditorJSInstanceService.html":{}}}],["behaviorsubject(editor",{"_index":687,"title":{},"body":{"injectables/EditorJSInstanceService.html":{}}}],["behaviorsubject(false",{"_index":107,"title":{},"body":{"components/AppContainerComponent.html":{},"injectables/EditorJSInstanceService.html":{}}}],["behaviorsubject(true",{"_index":1213,"title":{},"body":{"components/PageContainerComponent.html":{}}}],["behaviorsubject(undefined",{"_index":666,"title":{},"body":{"injectables/EditorJSInstanceService.html":{}}}],["behaviorsubject(value",{"_index":690,"title":{},"body":{"injectables/EditorJSInstanceService.html":{}}}],["being",{"_index":1536,"title":{},"body":{"contributing.html":{}}}],["below",{"_index":749,"title":{},"body":{"components/HomePageComponent.html":{},"components/PageContainerComponent.html":{},"index.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-readme.html":{}}}],["best",{"_index":1546,"title":{},"body":{"contributing.html":{}}}],["beta.24",{"_index":1665,"title":{},"body":{"dependencies.html":{}}}],["block",{"_index":153,"title":{"interfaces/Block.html":{}},"body":{"components/AppContainerComponent.html":{},"interfaces/ApplicationState.html":{},"interfaces/ApplicationState-1.html":{},"interfaces/Block.html":{},"interfaces/BlocksMap.html":{},"interfaces/ChangeMap.html":{},"interfaces/DemoData.html":{},"interfaces/DemoData-1.html":{},"interfaces/EditorJSConfig.html":{},"injectables/EditorJSInstanceService.html":{},"interfaces/EditorMap.html":{},"interfaces/EventMap.html":{},"interfaces/EventType.html":{},"interfaces/Header.html":{},"interfaces/HeaderBlock.html":{},"interfaces/Image.html":{},"interfaces/ImageBlock.html":{},"interfaces/List.html":{},"interfaces/ListBlock.html":{},"components/NavBarComponent.html":{},"components/NgxEditorJSComponent.html":{},"interfaces/NgxEditorJSConfig.html":{},"interfaces/NgxEditorJSDemo.html":{},"interfaces/NgxEditorJSDemo-1.html":{},"interfaces/NgxEditorJSDemoData.html":{},"interfaces/NgxEditorJSDemoData-1.html":{},"directives/NgxEditorJSDirective.html":{},"injectables/NgxEditorJSEffects.html":{},"injectables/NgxEditorJSService.html":{},"modules/NgxEditorjsPluginsModule.html":{},"interfaces/Page.html":{},"interfaces/PageBlock.html":{},"components/PageContainerComponent.html":{},"injectables/PagesService.html":{},"interfaces/Paragraph.html":{},"interfaces/ParagraphBlock.html":{},"injectables/PluginCode.html":{},"modules/PluginCodeModule.html":{},"injectables/PluginHeader.html":{},"modules/PluginHeaderModule.html":{},"injectables/PluginImage.html":{},"modules/PluginImageModule.html":{},"injectables/PluginLink.html":{},"modules/PluginLinkModule.html":{},"injectables/PluginList.html":{},"modules/PluginListModule.html":{},"injectables/PluginParagraph.html":{},"modules/PluginParagraphModule.html":{},"injectables/PluginSimpleImage.html":{},"modules/PluginSimpleImageModule.html":{},"interfaces/ReadyMap.html":{},"interfaces/Tag.html":{},"interfaces/TinynodeDemos.html":{},"interfaces/TinynodeDemos-1.html":{},"changelog.html":{},"index.html":{},"miscellaneous/typealiases.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-readme.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-plugins-readme.html":{}}}],["block.id",{"_index":1307,"title":{},"body":{"injectables/PagesService.html":{}}}],["blocks",{"_index":415,"title":{},"body":{"interfaces/ApplicationState.html":{},"interfaces/ApplicationState-1.html":{},"interfaces/BlocksMap.html":{},"interfaces/ChangeMap.html":{},"interfaces/DemoData.html":{},"interfaces/DemoData-1.html":{},"injectables/EditorJSInstanceService.html":{},"interfaces/EditorMap.html":{},"interfaces/EventMap.html":{},"interfaces/EventType.html":{},"classes/MockEditorJS.html":{},"classes/MockPlugin.html":{},"components/NgxEditorJSComponent.html":{},"interfaces/NgxEditorJSDemo.html":{},"interfaces/NgxEditorJSDemo-1.html":{},"interfaces/NgxEditorJSDemoData.html":{},"interfaces/NgxEditorJSDemoData-1.html":{},"directives/NgxEditorJSDirective.html":{},"injectables/NgxEditorJSEffects.html":{},"injectables/NgxEditorJSService.html":{},"interfaces/Page.html":{},"interfaces/PageBlock.html":{},"components/PageContainerComponent.html":{},"injectables/PagesService.html":{},"interfaces/ReadyMap.html":{},"interfaces/Tag.html":{},"classes/TestClass.html":{},"interfaces/TinynodeDemos.html":{},"interfaces/TinynodeDemos-1.html":{},"todo.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-readme.html":{}}}],["blocks.subscribe",{"_index":950,"title":{},"body":{"injectables/NgxEditorJSEffects.html":{}}}],["blocksmap",{"_index":488,"title":{"interfaces/BlocksMap.html":{}},"body":{"interfaces/BlocksMap.html":{},"interfaces/ChangeMap.html":{},"injectables/EditorJSInstanceService.html":{},"interfaces/EditorMap.html":{},"interfaces/EventMap.html":{},"interfaces/EventType.html":{},"interfaces/ReadyMap.html":{},"miscellaneous/variables.html":{}}}],["blocktypes",{"_index":487,"title":{},"body":{"interfaces/Block.html":{},"interfaces/Header.html":{},"interfaces/HeaderBlock.html":{},"interfaces/Image.html":{},"interfaces/ImageBlock.html":{},"interfaces/List.html":{},"interfaces/ListBlock.html":{},"interfaces/Paragraph.html":{},"interfaces/ParagraphBlock.html":{},"miscellaneous/typealiases.html":{}}}],["body",{"_index":1515,"title":{},"body":{"contributing.html":{}}}],["boolean",{"_index":364,"title":{},"body":{"interfaces/ApplicationData.html":{},"interfaces/ApplicationData-1.html":{},"interfaces/ApplicationState.html":{},"interfaces/ApplicationState-1.html":{},"interfaces/Block.html":{},"interfaces/BlocksMap.html":{},"interfaces/ChangeMap.html":{},"interfaces/DemoData.html":{},"interfaces/DemoData-1.html":{},"interfaces/EditorJSConfig.html":{},"interfaces/EditorMap.html":{},"interfaces/EventMap.html":{},"interfaces/EventType.html":{},"interfaces/Header.html":{},"interfaces/HeaderBlock.html":{},"interfaces/Image.html":{},"interfaces/ImageBlock.html":{},"interfaces/List.html":{},"interfaces/ListBlock.html":{},"interfaces/MenuGroup.html":{},"interfaces/MenuGroup-1.html":{},"interfaces/MenuItem.html":{},"interfaces/MenuItem-1.html":{},"components/NgxEditorJSComponent.html":{},"interfaces/NgxEditorJSConfig.html":{},"interfaces/NgxEditorJSDemo.html":{},"interfaces/NgxEditorJSDemo-1.html":{},"interfaces/NgxEditorJSDemoData.html":{},"interfaces/NgxEditorJSDemoData-1.html":{},"directives/NgxEditorJSDirective.html":{},"components/PageContainerComponent.html":{},"interfaces/Paragraph.html":{},"interfaces/ParagraphBlock.html":{},"interfaces/ReadyMap.html":{},"interfaces/TinynodeDemos.html":{},"interfaces/TinynodeDemos-1.html":{}}}],["bootstrap",{"_index":197,"title":{},"body":{"modules/AppModule.html":{},"modules/ApplicationDataModule.html":{},"modules/EditorJSInstanceModule.html":{},"modules/NgxEditorJSModule.html":{},"modules/NgxEditorjsDemoModule.html":{},"modules/NgxEditorjsNgrxModule.html":{},"modules/NgxEditorjsPluginsModule.html":{},"modules/NgxTinynodesCoreModule.html":{},"modules/PageStoreModule.html":{},"modules/PluginCodeModule.html":{},"modules/PluginHeaderModule.html":{},"modules/PluginImageModule.html":{},"modules/PluginLinkModule.html":{},"modules/PluginListModule.html":{},"modules/PluginMarkerModule.html":{},"modules/PluginParagraphModule.html":{},"modules/PluginSimpleImageModule.html":{},"overview.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-readme.html":{}}}],["border",{"_index":478,"title":{},"body":{"interfaces/Block.html":{},"interfaces/Header.html":{},"interfaces/HeaderBlock.html":{},"interfaces/Image.html":{},"interfaces/ImageBlock.html":{},"interfaces/List.html":{},"interfaces/ListBlock.html":{},"components/NgxEditorJSComponent.html":{},"interfaces/Paragraph.html":{},"interfaces/ParagraphBlock.html":{}}}],["both",{"_index":1604,"title":{},"body":{"contributing.html":{}}}],["bottom",{"_index":553,"title":{},"body":{"interfaces/EditorJSConfig.html":{},"components/NgxEditorJSComponent.html":{},"interfaces/NgxEditorJSConfig.html":{},"directives/NgxEditorJSDirective.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-readme.html":{}}}],["box",{"_index":1704,"title":{},"body":{"index.html":{}}}],["break",{"_index":1453,"title":{},"body":{"changelog.html":{}}}],["browse",{"_index":1772,"title":{},"body":{"modules.html":{}}}],["browser",{"_index":229,"title":{},"body":{"modules/AppModule.html":{},"components/NgxEditorJSComponent.html":{},"directives/NgxEditorJSDirective.html":{},"dependencies.html":{},"modules.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-readme.html":{}}}],["browser/animations",{"_index":231,"title":{},"body":{"modules/AppModule.html":{}}}],["browseranimationsmodule",{"_index":230,"title":{},"body":{"modules/AppModule.html":{}}}],["browsermodule",{"_index":227,"title":{},"body":{"modules/AppModule.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-readme.html":{}}}],["bug",{"_index":1444,"title":{},"body":{"changelog.html":{},"additional-documentation/tinynodes-library-docs.html":{}}}],["build",{"_index":1442,"title":{},"body":{"changelog.html":{},"contributing.html":{}}}],["builds",{"_index":214,"title":{},"body":{"modules/AppModule.html":{}}}],["call",{"_index":587,"title":{},"body":{"injectables/EditorJSInstanceService.html":{},"components/PageContainerComponent.html":{}}}],["called",{"_index":834,"title":{},"body":{"components/NgxEditorJSComponent.html":{},"directives/NgxEditorJSDirective.html":{}}}],["calling",{"_index":494,"title":{},"body":{"interfaces/BlocksMap.html":{},"interfaces/ChangeMap.html":{},"interfaces/EditorMap.html":{},"interfaces/EventMap.html":{},"interfaces/EventType.html":{},"injectables/NgxEditorJSService.html":{},"interfaces/ReadyMap.html":{}}}],["calls",{"_index":612,"title":{},"body":{"injectables/EditorJSInstanceService.html":{},"injectables/NgxEditorJSService.html":{}}}],["caption",{"_index":477,"title":{},"body":{"interfaces/Block.html":{},"interfaces/Header.html":{},"interfaces/HeaderBlock.html":{},"interfaces/Image.html":{},"interfaces/ImageBlock.html":{},"interfaces/List.html":{},"interfaces/ListBlock.html":{},"interfaces/Paragraph.html":{},"interfaces/ParagraphBlock.html":{}}}],["card",{"_index":1251,"title":{},"body":{"components/PageContainerComponent.html":{}}}],["cd",{"_index":1187,"title":{},"body":{"components/PageContainerComponent.html":{}}}],["center",{"_index":159,"title":{},"body":{"components/AppContainerComponent.html":{},"components/NavBarComponent.html":{}}}],["change",{"_index":505,"title":{},"body":{"interfaces/BlocksMap.html":{},"interfaces/ChangeMap.html":{},"injectables/EditorJSInstanceService.html":{},"interfaces/EditorMap.html":{},"interfaces/EventMap.html":{},"interfaces/EventType.html":{},"components/NgxEditorJSComponent.html":{},"directives/NgxEditorJSDirective.html":{},"injectables/NgxEditorJSService.html":{},"components/PageContainerComponent.html":{},"interfaces/ReadyMap.html":{},"changelog.html":{},"contributing.html":{}}}],["changed",{"_index":508,"title":{"classes/Changed.html":{}},"body":{"classes/Changed.html":{},"classes/NotReady.html":{},"classes/Ready.html":{},"classes/SaveEnd.html":{},"classes/SaveStart.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/typealiases.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-readme/ngx-editorjs-changelog.html":{}}}],["changedetection",{"_index":1177,"title":{},"body":{"components/PageContainerComponent.html":{}}}],["changedetectionstrategy",{"_index":1209,"title":{},"body":{"components/PageContainerComponent.html":{}}}],["changedetectionstrategy.onpush",{"_index":1178,"title":{},"body":{"components/PageContainerComponent.html":{}}}],["changedetectorref",{"_index":1188,"title":{},"body":{"components/PageContainerComponent.html":{}}}],["changelog",{"_index":1413,"title":{"changelog.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-readme/ngx-editorjs-changelog.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-plugins-readme/ngx-editorjs-plugins-changelog.html":{}},"body":{"changelog.html":{},"index.html":{},"additional-documentation/tinynodes-library-docs.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-readme.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-readme/ngx-editorjs-changelog.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-plugins-readme/ngx-editorjs-plugins-changelog.html":{}}}],["changelog.md",{"_index":1862,"title":{},"body":{"additional-documentation/tinynodes-library-docs/ngx-editorjs-readme/ngx-editorjs-changelog.html":{}}}],["changelogs",{"_index":1415,"title":{},"body":{"changelog.html":{}}}],["changemap",{"_index":506,"title":{"interfaces/ChangeMap.html":{}},"body":{"interfaces/BlocksMap.html":{},"interfaces/ChangeMap.html":{},"injectables/EditorJSInstanceService.html":{},"interfaces/EditorMap.html":{},"interfaces/EventMap.html":{},"interfaces/EventType.html":{},"interfaces/ReadyMap.html":{},"miscellaneous/variables.html":{}}}],["changes",{"_index":902,"title":{},"body":{"directives/NgxEditorJSDirective.html":{},"injectables/NgxEditorJSService.html":{},"contributing.html":{},"todo.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-readme.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-readme/ngx-editorjs-changelog.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-plugins-readme/ngx-editorjs-plugins-changelog.html":{}}}],["changes.blocks",{"_index":916,"title":{},"body":{"directives/NgxEditorJSDirective.html":{}}}],["changes.blocks.currentvalue",{"_index":919,"title":{},"body":{"directives/NgxEditorJSDirective.html":{}}}],["changes.blocks.firstchange",{"_index":917,"title":{},"body":{"directives/NgxEditorJSDirective.html":{}}}],["charge",{"_index":1720,"title":{},"body":{"license.html":{}}}],["check",{"_index":1247,"title":{},"body":{"components/PageContainerComponent.html":{}}}],["child.label",{"_index":1405,"title":{},"body":{"components/SidebarComponent.html":{}}}],["children",{"_index":376,"title":{},"body":{"interfaces/ApplicationData.html":{},"interfaces/ApplicationData-1.html":{},"interfaces/MenuGroup.html":{},"interfaces/MenuGroup-1.html":{},"interfaces/MenuItem.html":{},"interfaces/MenuItem-1.html":{}}}],["ci",{"_index":1779,"title":{},"body":{"todo.html":{}}}],["circumstances",{"_index":1634,"title":{},"body":{"contributing.html":{}}}],["claim",{"_index":1762,"title":{},"body":{"license.html":{}}}],["clarified",{"_index":1620,"title":{},"body":{"contributing.html":{}}}],["clarifying",{"_index":1577,"title":{},"body":{"contributing.html":{}}}],["class",{"_index":100,"title":{"classes/Changed.html":{},"classes/MockEditorJS.html":{},"classes/MockPlugin.html":{},"classes/NotReady.html":{},"classes/Ready.html":{},"classes/SaveEnd.html":{},"classes/SaveStart.html":{},"classes/TestClass.html":{}},"body":{"components/AppContainerComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"injectables/AppService.html":{},"injectables/AppService-1.html":{},"modules/ApplicationDataModule.html":{},"injectables/ApplicationQuery.html":{},"injectables/ApplicationQuery-1.html":{},"injectables/ApplicationStore.html":{},"injectables/ApplicationStore-1.html":{},"interfaces/BasePlugin.html":{},"interfaces/BasePlugin-1.html":{},"classes/Changed.html":{},"modules/EditorJSInstanceModule.html":{},"injectables/EditorJSInstanceService.html":{},"components/HomePageComponent.html":{},"modules/MaterialModule.html":{},"classes/MockEditorJS.html":{},"injectables/MockNgZone.html":{},"classes/MockPlugin.html":{},"components/NavBarComponent.html":{},"components/NgxEditorJSComponent.html":{},"directives/NgxEditorJSDirective.html":{},"injectables/NgxEditorJSEffects.html":{},"modules/NgxEditorJSModule.html":{},"injectables/NgxEditorJSPluginService.html":{},"injectables/NgxEditorJSService.html":{},"modules/NgxEditorjsDemoModule.html":{},"modules/NgxEditorjsNgrxModule.html":{},"modules/NgxEditorjsPluginsModule.html":{},"modules/NgxHideableHeaderDemoModule.html":{},"modules/NgxTinynodesCoreModule.html":{},"classes/NotReady.html":{},"components/PageContainerComponent.html":{},"modules/PageStoreModule.html":{},"injectables/PagesQuery.html":{},"injectables/PagesService.html":{},"interfaces/PagesState.html":{},"injectables/PagesStore.html":{},"injectables/PluginCode.html":{},"modules/PluginCodeModule.html":{},"interfaces/PluginConfig.html":{},"interfaces/PluginConfig-1.html":{},"injectables/PluginHeader.html":{},"modules/PluginHeaderModule.html":{},"injectables/PluginImage.html":{},"modules/PluginImageModule.html":{},"injectables/PluginLink.html":{},"modules/PluginLinkModule.html":{},"injectables/PluginList.html":{},"modules/PluginListModule.html":{},"injectables/PluginMarker.html":{},"modules/PluginMarkerModule.html":{},"injectables/PluginParagraph.html":{},"modules/PluginParagraphModule.html":{},"injectables/PluginSimpleImage.html":{},"modules/PluginSimpleImageModule.html":{},"classes/Ready.html":{},"classes/SaveEnd.html":{},"classes/SaveStart.html":{},"components/SidebarComponent.html":{},"classes/TestClass.html":{},"interfaces/ToolSettingsMap.html":{},"interfaces/ToolSettingsMap-1.html":{},"miscellaneous/variables.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-readme.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-readme/ngx-editorjs-changelog.html":{}}}],["classes",{"_index":509,"title":{},"body":{"classes/Changed.html":{},"classes/MockEditorJS.html":{},"classes/MockPlugin.html":{},"classes/NotReady.html":{},"classes/Ready.html":{},"classes/SaveEnd.html":{},"classes/SaveStart.html":{},"classes/TestClass.html":{},"overview.html":{}}}],["cleaning",{"_index":704,"title":{},"body":{"injectables/EditorJSInstanceService.html":{}}}],["cleans",{"_index":626,"title":{},"body":{"injectables/EditorJSInstanceService.html":{}}}],["cleanupsubjects(holder",{"_index":706,"title":{},"body":{"injectables/EditorJSInstanceService.html":{}}}],["clear",{"_index":592,"title":{},"body":{"injectables/EditorJSInstanceService.html":{},"classes/MockEditorJS.html":{},"classes/MockPlugin.html":{},"injectables/NgxEditorJSService.html":{},"components/PageContainerComponent.html":{},"classes/TestClass.html":{}}}],["clear(holder",{"_index":610,"title":{},"body":{"injectables/EditorJSInstanceService.html":{},"injectables/NgxEditorJSService.html":{}}}],["clearhandler(holder",{"_index":718,"title":{},"body":{"injectables/EditorJSInstanceService.html":{}}}],["clears",{"_index":1041,"title":{},"body":{"injectables/NgxEditorJSService.html":{}}}],["click",{"_index":1231,"title":{},"body":{"components/PageContainerComponent.html":{}}}],["client",{"_index":301,"title":{},"body":{"injectables/AppService.html":{},"injectables/AppService-1.html":{}}}],["close",{"_index":1232,"title":{},"body":{"components/PageContainerComponent.html":{}}}],["cluster_applicationdatamodule",{"_index":386,"title":{},"body":{"modules/ApplicationDataModule.html":{},"overview.html":{}}}],["cluster_applicationdatamodule_providers",{"_index":387,"title":{},"body":{"modules/ApplicationDataModule.html":{},"overview.html":{}}}],["cluster_appmodule",{"_index":200,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_appmodule_bootstrap",{"_index":203,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_appmodule_declarations",{"_index":201,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_appmodule_imports",{"_index":202,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_editorjsinstancemodule",{"_index":577,"title":{},"body":{"modules/EditorJSInstanceModule.html":{},"overview.html":{}}}],["cluster_editorjsinstancemodule_providers",{"_index":578,"title":{},"body":{"modules/EditorJSInstanceModule.html":{},"overview.html":{}}}],["cluster_ngxeditorjsdemomodule",{"_index":1092,"title":{},"body":{"modules/NgxEditorjsDemoModule.html":{},"overview.html":{}}}],["cluster_ngxeditorjsdemomodule_declarations",{"_index":1093,"title":{},"body":{"modules/NgxEditorjsDemoModule.html":{},"overview.html":{}}}],["cluster_ngxeditorjsdemomodule_exports",{"_index":1095,"title":{},"body":{"modules/NgxEditorjsDemoModule.html":{},"overview.html":{}}}],["cluster_ngxeditorjsdemomodule_imports",{"_index":1094,"title":{},"body":{"modules/NgxEditorjsDemoModule.html":{},"overview.html":{}}}],["cluster_ngxeditorjsmodule",{"_index":963,"title":{},"body":{"modules/NgxEditorJSModule.html":{},"overview.html":{}}}],["cluster_ngxeditorjsmodule_declarations",{"_index":964,"title":{},"body":{"modules/NgxEditorJSModule.html":{},"overview.html":{}}}],["cluster_ngxeditorjsmodule_exports",{"_index":966,"title":{},"body":{"modules/NgxEditorJSModule.html":{},"overview.html":{}}}],["cluster_ngxeditorjsmodule_imports",{"_index":965,"title":{},"body":{"modules/NgxEditorJSModule.html":{}}}],["cluster_ngxeditorjsmodule_providers",{"_index":967,"title":{},"body":{"modules/NgxEditorJSModule.html":{},"overview.html":{}}}],["cluster_ngxeditorjsngrxmodule",{"_index":1121,"title":{},"body":{"modules/NgxEditorjsNgrxModule.html":{},"overview.html":{}}}],["cluster_ngxeditorjsngrxmodule_imports",{"_index":1122,"title":{},"body":{"modules/NgxEditorjsNgrxModule.html":{}}}],["cluster_ngxeditorjspluginsmodule",{"_index":1134,"title":{},"body":{"modules/NgxEditorjsPluginsModule.html":{},"overview.html":{}}}],["cluster_ngxeditorjspluginsmodule_exports",{"_index":1136,"title":{},"body":{"modules/NgxEditorjsPluginsModule.html":{},"overview.html":{}}}],["cluster_ngxeditorjspluginsmodule_imports",{"_index":1135,"title":{},"body":{"modules/NgxEditorjsPluginsModule.html":{},"overview.html":{}}}],["cluster_ngxtinynodescoremodule",{"_index":1159,"title":{},"body":{"modules/NgxTinynodesCoreModule.html":{},"overview.html":{}}}],["cluster_ngxtinynodescoremodule_exports",{"_index":1161,"title":{},"body":{"modules/NgxTinynodesCoreModule.html":{},"overview.html":{}}}],["cluster_ngxtinynodescoremodule_imports",{"_index":1160,"title":{},"body":{"modules/NgxTinynodesCoreModule.html":{}}}],["cluster_pagestoremodule",{"_index":1254,"title":{},"body":{"modules/PageStoreModule.html":{},"overview.html":{}}}],["cluster_pagestoremodule_providers",{"_index":1255,"title":{},"body":{"modules/PageStoreModule.html":{},"overview.html":{}}}],["cluster_plugincodemodule",{"_index":1316,"title":{},"body":{"modules/PluginCodeModule.html":{},"overview.html":{}}}],["cluster_plugincodemodule_providers",{"_index":1317,"title":{},"body":{"modules/PluginCodeModule.html":{},"overview.html":{}}}],["cluster_pluginheadermodule",{"_index":1329,"title":{},"body":{"modules/PluginHeaderModule.html":{},"overview.html":{}}}],["cluster_pluginheadermodule_providers",{"_index":1330,"title":{},"body":{"modules/PluginHeaderModule.html":{},"overview.html":{}}}],["cluster_pluginimagemodule",{"_index":1338,"title":{},"body":{"modules/PluginImageModule.html":{},"overview.html":{}}}],["cluster_pluginimagemodule_providers",{"_index":1339,"title":{},"body":{"modules/PluginImageModule.html":{},"overview.html":{}}}],["cluster_pluginlinkmodule",{"_index":1347,"title":{},"body":{"modules/PluginLinkModule.html":{},"overview.html":{}}}],["cluster_pluginlinkmodule_providers",{"_index":1348,"title":{},"body":{"modules/PluginLinkModule.html":{},"overview.html":{}}}],["cluster_pluginlistmodule",{"_index":1356,"title":{},"body":{"modules/PluginListModule.html":{},"overview.html":{}}}],["cluster_pluginlistmodule_providers",{"_index":1357,"title":{},"body":{"modules/PluginListModule.html":{},"overview.html":{}}}],["cluster_pluginmarkermodule",{"_index":1368,"title":{},"body":{"modules/PluginMarkerModule.html":{},"overview.html":{}}}],["cluster_pluginmarkermodule_providers",{"_index":1369,"title":{},"body":{"modules/PluginMarkerModule.html":{},"overview.html":{}}}],["cluster_pluginparagraphmodule",{"_index":1377,"title":{},"body":{"modules/PluginParagraphModule.html":{},"overview.html":{}}}],["cluster_pluginparagraphmodule_providers",{"_index":1378,"title":{},"body":{"modules/PluginParagraphModule.html":{},"overview.html":{}}}],["cluster_pluginsimpleimagemodule",{"_index":1388,"title":{},"body":{"modules/PluginSimpleImageModule.html":{},"overview.html":{}}}],["cluster_pluginsimpleimagemodule_providers",{"_index":1389,"title":{},"body":{"modules/PluginSimpleImageModule.html":{},"overview.html":{}}}],["cmd+shift+m",{"_index":1367,"title":{},"body":{"injectables/PluginMarker.html":{}}}],["code",{"_index":751,"title":{},"body":{"components/HomePageComponent.html":{},"injectables/PluginCode.html":{},"contributing.html":{}}}],["code.plugin",{"_index":1320,"title":{},"body":{"modules/PluginCodeModule.html":{}}}],["collection",{"_index":738,"title":{},"body":{"components/HomePageComponent.html":{},"modules/NgxEditorJSModule.html":{},"index.html":{}}}],["color",{"_index":136,"title":{},"body":{"components/AppContainerComponent.html":{},"components/NavBarComponent.html":{}}}],["combinelatest",{"_index":641,"title":{},"body":{"injectables/EditorJSInstanceService.html":{}}}],["combinelatest([this.eventmap[holder",{"_index":695,"title":{},"body":{"injectables/EditorJSInstanceService.html":{}}}],["combinelatest([this.isready(holder",{"_index":1081,"title":{},"body":{"injectables/NgxEditorJSService.html":{}}}],["comments",{"_index":1560,"title":{},"body":{"contributing.html":{}}}],["commits",{"_index":1588,"title":{},"body":{"contributing.html":{}}}],["common",{"_index":1448,"title":{},"body":{"changelog.html":{}}}],["commonmodule",{"_index":979,"title":{},"body":{"modules/NgxEditorJSModule.html":{},"modules/NgxEditorjsDemoModule.html":{},"modules/NgxEditorjsNgrxModule.html":{},"modules/NgxEditorjsPluginsModule.html":{},"modules/NgxHideableHeaderDemoModule.html":{}}}],["community",{"_index":1508,"title":{},"body":{"contributing.html":{}}}],["complaints",{"_index":1629,"title":{},"body":{"contributing.html":{}}}],["completes",{"_index":1049,"title":{},"body":{"injectables/NgxEditorJSService.html":{}}}],["compodoc",{"_index":1810,"title":{},"body":{"additional-documentation/tinynodes-library-docs.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-readme/ngx-editorjs-changelog.html":{}}}],["component",{"_index":0,"title":{"components/AppContainerComponent.html":{},"components/HomePageComponent.html":{},"components/NavBarComponent.html":{},"components/NgxEditorJSComponent.html":{},"components/PageContainerComponent.html":{},"components/SidebarComponent.html":{}},"body":{"components/AppContainerComponent.html":{},"modules/AppRoutingModule.html":{},"components/HomePageComponent.html":{},"components/NavBarComponent.html":{},"components/NgxEditorJSComponent.html":{},"directives/NgxEditorJSDirective.html":{},"components/PageContainerComponent.html":{},"components/SidebarComponent.html":{},"changelog.html":{},"index.html":{},"todo.html":{},"miscellaneous/variables.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-readme.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-readme/ngx-editorjs-changelog.html":{}}}],["component/editorjs.component",{"_index":987,"title":{},"body":{"modules/NgxEditorJSModule.html":{}}}],["component/editorjs.component.ts",{"_index":820,"title":{},"body":{"components/NgxEditorJSComponent.html":{}}}],["component/editorjs.component.ts:24",{"_index":845,"title":{},"body":{"components/NgxEditorJSComponent.html":{}}}],["component/editorjs.component.ts:30",{"_index":831,"title":{},"body":{"components/NgxEditorJSComponent.html":{}}}],["component/editorjs.component.ts:36",{"_index":835,"title":{},"body":{"components/NgxEditorJSComponent.html":{}}}],["component/editorjs.component.ts:42",{"_index":836,"title":{},"body":{"components/NgxEditorJSComponent.html":{}}}],["component/editorjs.component.ts:48",{"_index":840,"title":{},"body":{"components/NgxEditorJSComponent.html":{}}}],["component/editorjs.component.ts:54",{"_index":841,"title":{},"body":{"components/NgxEditorJSComponent.html":{}}}],["component/editorjs.component.ts:60",{"_index":842,"title":{},"body":{"components/NgxEditorJSComponent.html":{}}}],["component/editorjs.component.ts:66",{"_index":843,"title":{},"body":{"components/NgxEditorJSComponent.html":{}}}],["component/editorjs.component.ts:73",{"_index":837,"title":{},"body":{"components/NgxEditorJSComponent.html":{}}}],["component/editorjs.component.ts:80",{"_index":833,"title":{},"body":{"components/NgxEditorJSComponent.html":{}}}],["component/editorjs.component.ts:86",{"_index":830,"title":{},"body":{"components/NgxEditorJSComponent.html":{}}}],["component/editorjs.component.ts:93",{"_index":848,"title":{},"body":{"components/NgxEditorJSComponent.html":{}}}],["component/sidebar.component",{"_index":250,"title":{},"body":{"modules/AppModule.html":{}}}],["component/sidebar.component.ts",{"_index":1399,"title":{},"body":{"components/SidebarComponent.html":{}}}],["component/sidebar.component.ts:11",{"_index":1403,"title":{},"body":{"components/SidebarComponent.html":{}}}],["component/sidebar.component.ts:14",{"_index":1402,"title":{},"body":{"components/SidebarComponent.html":{}}}],["component_template",{"_index":171,"title":{},"body":{"components/AppContainerComponent.html":{},"components/HomePageComponent.html":{},"components/NavBarComponent.html":{},"components/NgxEditorJSComponent.html":{},"components/PageContainerComponent.html":{},"components/SidebarComponent.html":{}}}],["components",{"_index":2,"title":{},"body":{"components/AppContainerComponent.html":{},"components/HomePageComponent.html":{},"components/NavBarComponent.html":{},"components/NgxEditorJSComponent.html":{},"directives/NgxEditorJSDirective.html":{},"components/PageContainerComponent.html":{},"components/SidebarComponent.html":{},"index.html":{},"overview.html":{}}}],["components/nav",{"_index":246,"title":{},"body":{"modules/AppModule.html":{}}}],["components/sidebar",{"_index":249,"title":{},"body":{"modules/AppModule.html":{}}}],["conditions",{"_index":1742,"title":{},"body":{"license.html":{}}}],["conduct",{"_index":1474,"title":{},"body":{"contributing.html":{}}}],["confidentiality",{"_index":1637,"title":{},"body":{"contributing.html":{}}}],["config",{"_index":551,"title":{},"body":{"interfaces/EditorJSConfig.html":{},"injectables/EditorJSInstanceService.html":{},"classes/MockEditorJS.html":{},"classes/MockPlugin.html":{},"interfaces/NgxEditorJSConfig.html":{},"directives/NgxEditorJSDirective.html":{},"modules/NgxEditorJSModule.html":{},"injectables/NgxEditorJSPluginService.html":{},"injectables/NgxEditorJSService.html":{},"modules/NgxEditorjsDemoModule.html":{},"classes/TestClass.html":{},"miscellaneous/functions.html":{},"todo.html":{},"miscellaneous/variables.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-readme.html":{}}}],["config.data",{"_index":936,"title":{},"body":{"directives/NgxEditorJSDirective.html":{}}}],["config.holder",{"_index":651,"title":{},"body":{"injectables/EditorJSInstanceService.html":{}}}],["config.ts",{"_index":1691,"title":{},"body":{"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["config/editor",{"_index":909,"title":{},"body":{"directives/NgxEditorJSDirective.html":{}}}],["config/module",{"_index":985,"title":{},"body":{"modules/NgxEditorJSModule.html":{}}}],["configuration",{"_index":441,"title":{},"body":{"interfaces/BasePlugin.html":{},"interfaces/BasePlugin-1.html":{},"interfaces/EditorJSConfig.html":{},"injectables/EditorJSInstanceService.html":{},"components/NgxEditorJSComponent.html":{},"interfaces/NgxEditorJSConfig.html":{},"directives/NgxEditorJSDirective.html":{},"modules/NgxEditorJSModule.html":{},"interfaces/PluginConfig.html":{},"interfaces/PluginConfig-1.html":{},"interfaces/ToolSettingsMap.html":{},"interfaces/ToolSettingsMap-1.html":{},"miscellaneous/functions.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-readme.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-readme/ngx-editorjs-changelog.html":{}}}],["configurations",{"_index":1019,"title":{},"body":{"injectables/NgxEditorJSPluginService.html":{},"miscellaneous/functions.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-readme.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-readme/ngx-editorjs-changelog.html":{}}}],["configured",{"_index":1877,"title":{},"body":{"additional-documentation/tinynodes-library-docs/ngx-editorjs-readme/ngx-editorjs-changelog.html":{}}}],["configuring",{"_index":1827,"title":{},"body":{"additional-documentation/tinynodes-library-docs/ngx-editorjs-readme.html":{}}}],["connection",{"_index":1769,"title":{},"body":{"license.html":{}}}],["considered",{"_index":1571,"title":{},"body":{"contributing.html":{}}}],["const",{"_index":272,"title":{},"body":{"modules/AppRoutingModule.html":{},"interfaces/BasePlugin.html":{},"interfaces/BasePlugin-1.html":{},"interfaces/EditorJSConfig.html":{},"injectables/EditorJSInstanceService.html":{},"interfaces/NgxEditorJSConfig.html":{},"directives/NgxEditorJSDirective.html":{},"injectables/NgxEditorJSService.html":{},"modules/NgxHideableHeaderDemoModule.html":{},"injectables/PagesService.html":{},"interfaces/PluginConfig.html":{},"interfaces/PluginConfig-1.html":{},"interfaces/ToolSettingsMap.html":{},"interfaces/ToolSettingsMap-1.html":{}}}],["constructive",{"_index":1543,"title":{},"body":{"contributing.html":{}}}],["constructor",{"_index":43,"title":{},"body":{"components/AppContainerComponent.html":{},"injectables/AppService.html":{},"injectables/AppService-1.html":{},"injectables/ApplicationQuery.html":{},"injectables/ApplicationQuery-1.html":{},"injectables/ApplicationStore.html":{},"injectables/ApplicationStore-1.html":{},"classes/Changed.html":{},"injectables/EditorJSInstanceService.html":{},"components/HomePageComponent.html":{},"classes/MockEditorJS.html":{},"injectables/MockNgZone.html":{},"classes/MockPlugin.html":{},"components/NgxEditorJSComponent.html":{},"directives/NgxEditorJSDirective.html":{},"injectables/NgxEditorJSEffects.html":{},"modules/NgxEditorJSModule.html":{},"injectables/NgxEditorJSPluginService.html":{},"injectables/NgxEditorJSService.html":{},"classes/NotReady.html":{},"components/PageContainerComponent.html":{},"injectables/PagesQuery.html":{},"injectables/PagesService.html":{},"interfaces/PagesState.html":{},"injectables/PagesStore.html":{},"classes/Ready.html":{},"classes/SaveEnd.html":{},"classes/SaveStart.html":{},"classes/TestClass.html":{}}}],["constructor(@inject(userplugins",{"_index":1022,"title":{},"body":{"injectables/NgxEditorJSPluginService.html":{}}}],["constructor(actions",{"_index":940,"title":{},"body":{"injectables/NgxEditorJSEffects.html":{}}}],["constructor(app",{"_index":44,"title":{},"body":{"components/AppContainerComponent.html":{},"components/HomePageComponent.html":{}}}],["constructor(config",{"_index":763,"title":{},"body":{"classes/MockEditorJS.html":{},"injectables/NgxEditorJSService.html":{}}}],["constructor(editorjs",{"_index":600,"title":{},"body":{"injectables/EditorJSInstanceService.html":{}}}],["constructor(el",{"_index":873,"title":{},"body":{"directives/NgxEditorJSDirective.html":{}}}],["constructor(pagesservice",{"_index":1185,"title":{},"body":{"components/PageContainerComponent.html":{}}}],["constructor(payload",{"_index":513,"title":{},"body":{"classes/Changed.html":{},"classes/NotReady.html":{},"classes/Ready.html":{},"classes/SaveEnd.html":{},"classes/SaveStart.html":{}}}],["constructor(private",{"_index":108,"title":{},"body":{"components/AppContainerComponent.html":{},"components/HomePageComponent.html":{},"classes/MockEditorJS.html":{},"classes/MockPlugin.html":{},"directives/NgxEditorJSDirective.html":{},"injectables/NgxEditorJSEffects.html":{},"classes/TestClass.html":{}}}],["constructor(protected",{"_index":402,"title":{},"body":{"injectables/ApplicationQuery.html":{},"injectables/ApplicationQuery-1.html":{},"injectables/PagesQuery.html":{}}}],["constructor(public",{"_index":528,"title":{},"body":{"classes/Changed.html":{},"components/NgxEditorJSComponent.html":{},"classes/NotReady.html":{},"injectables/PagesService.html":{},"classes/Ready.html":{},"classes/SaveEnd.html":{},"classes/SaveStart.html":{}}}],["constructor(query",{"_index":292,"title":{},"body":{"injectables/AppService.html":{},"injectables/AppService-1.html":{},"injectables/PagesService.html":{}}}],["constructor(service",{"_index":828,"title":{},"body":{"components/NgxEditorJSComponent.html":{}}}],["constructor(store",{"_index":397,"title":{},"body":{"injectables/ApplicationQuery.html":{},"injectables/ApplicationQuery-1.html":{},"injectables/PagesQuery.html":{}}}],["constructor(userplugins",{"_index":1002,"title":{},"body":{"injectables/NgxEditorJSPluginService.html":{}}}],["contacting",{"_index":1626,"title":{},"body":{"contributing.html":{}}}],["contain",{"_index":382,"title":{},"body":{"interfaces/ApplicationData.html":{},"interfaces/ApplicationData-1.html":{},"interfaces/MenuGroup.html":{},"interfaces/MenuGroup-1.html":{},"interfaces/MenuItem.html":{},"interfaces/MenuItem-1.html":{}}}],["container",{"_index":17,"title":{},"body":{"components/AppContainerComponent.html":{},"components/PageContainerComponent.html":{},"contributing.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-readme.html":{}}}],["container'},{'name",{"_index":183,"title":{},"body":{"components/AppContainerComponent.html":{},"components/HomePageComponent.html":{},"components/NavBarComponent.html":{},"components/NgxEditorJSComponent.html":{},"components/PageContainerComponent.html":{},"components/SidebarComponent.html":{}}}],["container.component",{"_index":1113,"title":{},"body":{"modules/NgxEditorjsDemoModule.html":{}}}],["container.component.html",{"_index":1180,"title":{},"body":{"components/PageContainerComponent.html":{}}}],["container.component.scss",{"_index":1179,"title":{},"body":{"components/PageContainerComponent.html":{}}}],["container.component.ts",{"_index":1175,"title":{},"body":{"components/PageContainerComponent.html":{}}}],["container.component.ts:101",{"_index":1194,"title":{},"body":{"components/PageContainerComponent.html":{}}}],["container.component.ts:110",{"_index":1206,"title":{},"body":{"components/PageContainerComponent.html":{}}}],["container.component.ts:122",{"_index":1191,"title":{},"body":{"components/PageContainerComponent.html":{}}}],["container.component.ts:28",{"_index":1199,"title":{},"body":{"components/PageContainerComponent.html":{}}}],["container.component.ts:43",{"_index":1201,"title":{},"body":{"components/PageContainerComponent.html":{}}}],["container.component.ts:50",{"_index":1197,"title":{},"body":{"components/PageContainerComponent.html":{}}}],["container.component.ts:52",{"_index":1189,"title":{},"body":{"components/PageContainerComponent.html":{}}}],["container.component.ts:73",{"_index":1202,"title":{},"body":{"components/PageContainerComponent.html":{}}}],["container.component.ts:80",{"_index":1204,"title":{},"body":{"components/PageContainerComponent.html":{}}}],["container.component.ts:87",{"_index":1195,"title":{},"body":{"components/PageContainerComponent.html":{}}}],["container.component.ts:94",{"_index":1190,"title":{},"body":{"components/PageContainerComponent.html":{}}}],["container/page",{"_index":1112,"title":{},"body":{"modules/NgxEditorjsDemoModule.html":{},"components/PageContainerComponent.html":{}}}],["containers/app/app.component",{"_index":245,"title":{},"body":{"modules/AppModule.html":{}}}],["containers/editorjs",{"_index":986,"title":{},"body":{"modules/NgxEditorJSModule.html":{}}}],["containers/page",{"_index":1111,"title":{},"body":{"modules/NgxEditorjsDemoModule.html":{}}}],["containing",{"_index":490,"title":{},"body":{"interfaces/BlocksMap.html":{},"interfaces/ChangeMap.html":{},"interfaces/EditorMap.html":{},"interfaces/EventMap.html":{},"interfaces/EventType.html":{},"interfaces/ReadyMap.html":{}}}],["contains",{"_index":742,"title":{},"body":{"components/HomePageComponent.html":{}}}],["content",{"_index":128,"title":{},"body":{"components/AppContainerComponent.html":{},"directives/NgxEditorJSDirective.html":{},"components/PageContainerComponent.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-readme.html":{}}}],["continue",{"_index":1458,"title":{},"body":{"changelog.html":{}}}],["contract",{"_index":1766,"title":{},"body":{"license.html":{}}}],["contributes",{"_index":1531,"title":{},"body":{"contributing.html":{}}}],["contributing",{"_index":1464,"title":{"contributing.html":{}},"body":{"contributing.html":{}}}],["contributions",{"_index":1591,"title":{},"body":{"contributing.html":{}}}],["contributor",{"_index":1596,"title":{},"body":{"contributing.html":{}}}],["contributors",{"_index":1505,"title":{},"body":{"contributing.html":{}}}],["control",{"_index":805,"title":{},"body":{"components/NavBarComponent.html":{},"directives/NgxEditorJSDirective.html":{},"modules/NgxEditorJSModule.html":{},"injectables/NgxEditorJSService.html":{},"modules/NgxEditorjsNgrxModule.html":{},"todo.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-readme/ngx-editorjs-changelog.html":{}}}],["controlling",{"_index":1838,"title":{},"body":{"additional-documentation/tinynodes-library-docs/ngx-editorjs-readme.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-readme/ngx-editorjs-changelog.html":{}}}],["controls",{"_index":1245,"title":{},"body":{"components/PageContainerComponent.html":{},"todo.html":{}}}],["copies",{"_index":1737,"title":{},"body":{"license.html":{}}}],["copy",{"_index":1723,"title":{},"body":{"license.html":{}}}],["copyright",{"_index":1717,"title":{},"body":{"license.html":{}}}],["core",{"_index":91,"title":{},"body":{"components/AppContainerComponent.html":{},"modules/AppModule.html":{},"modules/NgxTinynodesCoreModule.html":{},"components/SidebarComponent.html":{},"changelog.html":{},"dependencies.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-readme/ngx-editorjs-changelog.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-plugins-readme/ngx-editorjs-plugins-changelog.html":{}}}],["core.module.ts",{"_index":1163,"title":{},"body":{"modules/NgxTinynodesCoreModule.html":{}}}],["core/src",{"_index":736,"title":{},"body":{"components/HomePageComponent.html":{},"components/NavBarComponent.html":{},"modules/NgxEditorjsDemoModule.html":{},"components/PageContainerComponent.html":{}}}],["core/src/lib/ngx",{"_index":1162,"title":{},"body":{"modules/NgxTinynodesCoreModule.html":{}}}],["core/src/lib/stores/app/application.model.ts",{"_index":406,"title":{},"body":{"interfaces/ApplicationState.html":{},"interfaces/DemoData.html":{},"interfaces/NgxEditorJSDemo.html":{},"interfaces/NgxEditorJSDemoData.html":{},"interfaces/TinynodeDemos.html":{},"miscellaneous/enumerations.html":{}}}],["core/src/lib/stores/app/application.module.ts",{"_index":388,"title":{},"body":{"modules/ApplicationDataModule.html":{}}}],["core/src/lib/stores/app/application.query.ts",{"_index":394,"title":{},"body":{"injectables/ApplicationQuery.html":{}}}],["core/src/lib/stores/app/application.query.ts:10",{"_index":398,"title":{},"body":{"injectables/ApplicationQuery.html":{}}}],["core/src/lib/stores/app/application.service.ts",{"_index":282,"title":{},"body":{"injectables/AppService.html":{}}}],["core/src/lib/stores/app/application.service.ts:15",{"_index":296,"title":{},"body":{"injectables/AppService.html":{}}}],["core/src/lib/stores/app/application.service.ts:34",{"_index":318,"title":{},"body":{"injectables/AppService.html":{}}}],["core/src/lib/stores/app/application.service.ts:41",{"_index":315,"title":{},"body":{"injectables/AppService.html":{}}}],["core/src/lib/stores/app/application.service.ts:49",{"_index":304,"title":{},"body":{"injectables/AppService.html":{}}}],["core/src/lib/stores/app/application.service.ts:62",{"_index":310,"title":{},"body":{"injectables/AppService.html":{}}}],["core/src/lib/stores/app/application.store.ts",{"_index":419,"title":{},"body":{"injectables/ApplicationStore.html":{}}}],["core/src/lib/stores/app/application.store.ts:10",{"_index":420,"title":{},"body":{"injectables/ApplicationStore.html":{}}}],["core/src/lib/types/app.ts",{"_index":362,"title":{},"body":{"interfaces/ApplicationData.html":{},"interfaces/MenuGroup.html":{},"interfaces/MenuItem.html":{}}}],["coreapi",{"_index":1784,"title":{},"body":{"todo.html":{}}}],["corrective",{"_index":1583,"title":{},"body":{"contributing.html":{}}}],["correctly",{"_index":1811,"title":{},"body":{"additional-documentation/tinynodes-library-docs.html":{}}}],["covenant",{"_index":1655,"title":{},"body":{"contributing.html":{}}}],["covenant.org/version/1/4",{"_index":1658,"title":{},"body":{"contributing.html":{}}}],["cover",{"_index":1450,"title":{},"body":{"changelog.html":{}}}],["create",{"_index":582,"title":{},"body":{"modules/EditorJSInstanceModule.html":{},"injectables/EditorJSInstanceService.html":{},"directives/NgxEditorJSDirective.html":{}}}],["createconfig",{"_index":928,"title":{},"body":{"directives/NgxEditorJSDirective.html":{}}}],["created",{"_index":684,"title":{},"body":{"injectables/EditorJSInstanceService.html":{},"components/NgxEditorJSComponent.html":{},"directives/NgxEditorJSDirective.html":{},"injectables/PagesService.html":{},"changelog.html":{}}}],["createeditor",{"_index":871,"title":{},"body":{"directives/NgxEditorJSDirective.html":{},"injectables/NgxEditorJSService.html":{}}}],["createeditor(config",{"_index":887,"title":{},"body":{"directives/NgxEditorJSDirective.html":{},"injectables/NgxEditorJSService.html":{}}}],["createeditorjsconfig",{"_index":908,"title":{},"body":{"directives/NgxEditorJSDirective.html":{},"miscellaneous/functions.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-readme/ngx-editorjs-changelog.html":{}}}],["createeditorjsconfig(inputconfig",{"_index":1695,"title":{},"body":{"miscellaneous/functions.html":{}}}],["createinstance",{"_index":588,"title":{},"body":{"injectables/EditorJSInstanceService.html":{}}}],["createinstance(config",{"_index":614,"title":{},"body":{"injectables/EditorJSInstanceService.html":{}}}],["createmoduleconfig",{"_index":984,"title":{},"body":{"modules/NgxEditorJSModule.html":{},"miscellaneous/functions.html":{}}}],["createmoduleconfig(config",{"_index":1698,"title":{},"body":{"miscellaneous/functions.html":{}}}],["createngxeditorjsdemotools",{"_index":1110,"title":{},"body":{"modules/NgxEditorjsDemoModule.html":{},"miscellaneous/functions.html":{}}}],["creates",{"_index":617,"title":{},"body":{"injectables/EditorJSInstanceService.html":{},"directives/NgxEditorJSDirective.html":{},"injectables/NgxEditorJSService.html":{},"injectables/PagesService.html":{},"miscellaneous/functions.html":{}}}],["createtools",{"_index":1822,"title":{},"body":{"additional-documentation/tinynodes-library-docs/ngx-editorjs-readme.html":{}}}],["creating",{"_index":1532,"title":{},"body":{"contributing.html":{}}}],["creation",{"_index":543,"title":{},"body":{"interfaces/EditorJSConfig.html":{},"interfaces/NgxEditorJSConfig.html":{},"modules/PageStoreModule.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-readme/ngx-editorjs-changelog.html":{}}}],["criticism",{"_index":1544,"title":{},"body":{"contributing.html":{}}}],["current",{"_index":105,"title":{},"body":{"components/AppContainerComponent.html":{},"injectables/NgxEditorJSService.html":{},"modules/NgxEditorjsNgrxModule.html":{},"changelog.html":{}}}],["currently",{"_index":1259,"title":{},"body":{"modules/PageStoreModule.html":{},"changelog.html":{},"additional-documentation/tinynodes-library-docs.html":{}}}],["cursor",{"_index":148,"title":{},"body":{"components/AppContainerComponent.html":{},"components/NavBarComponent.html":{}}}],["custom",{"_index":465,"title":{},"body":{"interfaces/Block.html":{},"interfaces/Header.html":{},"interfaces/HeaderBlock.html":{},"interfaces/Image.html":{},"interfaces/ImageBlock.html":{},"interfaces/List.html":{},"interfaces/ListBlock.html":{},"interfaces/Paragraph.html":{},"interfaces/ParagraphBlock.html":{},"miscellaneous/typealiases.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-readme.html":{}}}],["cy.get('h1",{"_index":1807,"title":{},"body":{"miscellaneous/variables.html":{}}}],["cycle",{"_index":1834,"title":{},"body":{"additional-documentation/tinynodes-library-docs/ngx-editorjs-readme.html":{}}}],["damages",{"_index":1763,"title":{},"body":{"license.html":{}}}],["darkgray",{"_index":861,"title":{},"body":{"components/NgxEditorJSComponent.html":{}}}],["data",{"_index":286,"title":{},"body":{"injectables/AppService.html":{},"injectables/AppService-1.html":{},"injectables/ApplicationQuery.html":{},"injectables/ApplicationQuery-1.html":{},"interfaces/ApplicationState.html":{},"interfaces/ApplicationState-1.html":{},"injectables/ApplicationStore.html":{},"injectables/ApplicationStore-1.html":{},"interfaces/Block.html":{},"classes/Changed.html":{},"interfaces/DemoData.html":{},"interfaces/DemoData-1.html":{},"interfaces/EditorJSConfig.html":{},"interfaces/Header.html":{},"interfaces/HeaderBlock.html":{},"interfaces/Image.html":{},"interfaces/ImageBlock.html":{},"interfaces/List.html":{},"interfaces/ListBlock.html":{},"interfaces/NgxEditorJSConfig.html":{},"interfaces/NgxEditorJSDemo.html":{},"interfaces/NgxEditorJSDemo-1.html":{},"interfaces/NgxEditorJSDemoData.html":{},"interfaces/NgxEditorJSDemoData-1.html":{},"injectables/NgxEditorJSEffects.html":{},"modules/NgxTinynodesCoreModule.html":{},"classes/NotReady.html":{},"components/PageContainerComponent.html":{},"interfaces/Paragraph.html":{},"interfaces/ParagraphBlock.html":{},"classes/Ready.html":{},"classes/SaveEnd.html":{},"classes/SaveStart.html":{},"interfaces/TinynodeDemos.html":{},"interfaces/TinynodeDemos-1.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-readme.html":{}}}],["data.json').subscribe((appdata",{"_index":332,"title":{},"body":{"injectables/AppService.html":{},"injectables/AppService-1.html":{}}}],["date.now",{"_index":724,"title":{},"body":{"injectables/EditorJSInstanceService.html":{},"classes/MockEditorJS.html":{},"classes/MockPlugin.html":{},"directives/NgxEditorJSDirective.html":{},"injectables/NgxEditorJSEffects.html":{},"injectables/NgxEditorJSService.html":{},"classes/TestClass.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-readme.html":{}}}],["datorama/akita",{"_index":233,"title":{},"body":{"modules/AppModule.html":{},"injectables/ApplicationQuery.html":{},"injectables/ApplicationQuery-1.html":{},"injectables/ApplicationStore.html":{},"injectables/ApplicationStore-1.html":{},"interfaces/Page.html":{},"interfaces/PageBlock.html":{},"injectables/PagesQuery.html":{},"injectables/PagesService.html":{},"interfaces/PagesState.html":{},"injectables/PagesStore.html":{},"interfaces/Tag.html":{},"dependencies.html":{}}}],["deal",{"_index":1726,"title":{},"body":{"license.html":{}}}],["dealings",{"_index":1770,"title":{},"body":{"license.html":{}}}],["declarations",{"_index":196,"title":{},"body":{"modules/AppModule.html":{},"modules/ApplicationDataModule.html":{},"modules/EditorJSInstanceModule.html":{},"modules/NgxEditorJSModule.html":{},"modules/NgxEditorjsDemoModule.html":{},"modules/NgxEditorjsNgrxModule.html":{},"modules/NgxEditorjsPluginsModule.html":{},"modules/NgxTinynodesCoreModule.html":{},"modules/PageStoreModule.html":{},"modules/PluginCodeModule.html":{},"modules/PluginHeaderModule.html":{},"modules/PluginImageModule.html":{},"modules/PluginLinkModule.html":{},"modules/PluginListModule.html":{},"modules/PluginMarkerModule.html":{},"modules/PluginParagraphModule.html":{},"modules/PluginSimpleImageModule.html":{},"overview.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-readme.html":{}}}],["decoration",{"_index":134,"title":{},"body":{"components/AppContainerComponent.html":{},"components/NavBarComponent.html":{}}}],["decorators",{"_index":69,"title":{},"body":{"components/AppContainerComponent.html":{},"components/NgxEditorJSComponent.html":{},"injectables/NgxEditorJSEffects.html":{}}}],["deem",{"_index":1598,"title":{},"body":{"contributing.html":{}}}],["deemed",{"_index":1632,"title":{},"body":{"contributing.html":{}}}],["default",{"_index":54,"title":{},"body":{"components/AppContainerComponent.html":{},"interfaces/Block.html":{},"classes/Changed.html":{},"interfaces/EditorJSConfig.html":{},"injectables/EditorJSInstanceService.html":{},"interfaces/Header.html":{},"interfaces/HeaderBlock.html":{},"interfaces/Image.html":{},"interfaces/ImageBlock.html":{},"interfaces/List.html":{},"interfaces/ListBlock.html":{},"injectables/MockNgZone.html":{},"components/NavBarComponent.html":{},"components/NgxEditorJSComponent.html":{},"interfaces/NgxEditorJSConfig.html":{},"directives/NgxEditorJSDirective.html":{},"injectables/NgxEditorJSEffects.html":{},"modules/NgxEditorJSModule.html":{},"injectables/NgxEditorJSPluginService.html":{},"injectables/NgxEditorJSService.html":{},"classes/NotReady.html":{},"components/PageContainerComponent.html":{},"interfaces/Paragraph.html":{},"interfaces/ParagraphBlock.html":{},"modules/PluginCodeModule.html":{},"modules/PluginHeaderModule.html":{},"modules/PluginImageModule.html":{},"modules/PluginLinkModule.html":{},"modules/PluginListModule.html":{},"modules/PluginMarkerModule.html":{},"modules/PluginParagraphModule.html":{},"classes/Ready.html":{},"classes/SaveEnd.html":{},"classes/SaveStart.html":{},"changelog.html":{},"index.html":{},"miscellaneous/variables.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-readme.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-readme/ngx-editorjs-changelog.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-plugins-readme.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-plugins-readme/ngx-editorjs-plugins-changelog.html":{}}}],["default_holder_id",{"_index":1794,"title":{},"body":{"miscellaneous/variables.html":{}}}],["defaults",{"_index":977,"title":{},"body":{"modules/NgxEditorJSModule.html":{},"injectables/NgxEditorJSService.html":{}}}],["define",{"_index":559,"title":{},"body":{"interfaces/EditorJSConfig.html":{},"components/NgxEditorJSComponent.html":{},"interfaces/NgxEditorJSConfig.html":{},"directives/NgxEditorJSDirective.html":{}}}],["defined",{"_index":46,"title":{},"body":{"components/AppContainerComponent.html":{},"injectables/AppService.html":{},"injectables/AppService-1.html":{},"injectables/ApplicationQuery.html":{},"injectables/ApplicationQuery-1.html":{},"injectables/ApplicationStore.html":{},"injectables/ApplicationStore-1.html":{},"interfaces/BasePlugin.html":{},"interfaces/BasePlugin-1.html":{},"interfaces/Block.html":{},"interfaces/BlocksMap.html":{},"interfaces/ChangeMap.html":{},"classes/Changed.html":{},"injectables/EditorJSInstanceService.html":{},"interfaces/EditorMap.html":{},"interfaces/EventMap.html":{},"components/HomePageComponent.html":{},"classes/MockEditorJS.html":{},"injectables/MockNgZone.html":{},"classes/MockPlugin.html":{},"components/NavBarComponent.html":{},"components/NgxEditorJSComponent.html":{},"directives/NgxEditorJSDirective.html":{},"injectables/NgxEditorJSEffects.html":{},"modules/NgxEditorJSModule.html":{},"injectables/NgxEditorJSPluginService.html":{},"injectables/NgxEditorJSService.html":{},"classes/NotReady.html":{},"components/PageContainerComponent.html":{},"injectables/PagesQuery.html":{},"injectables/PagesService.html":{},"injectables/PagesStore.html":{},"injectables/PluginCode.html":{},"interfaces/PluginConfig.html":{},"interfaces/PluginConfig-1.html":{},"injectables/PluginHeader.html":{},"injectables/PluginImage.html":{},"injectables/PluginLink.html":{},"injectables/PluginList.html":{},"injectables/PluginMarker.html":{},"injectables/PluginParagraph.html":{},"injectables/PluginSimpleImage.html":{},"classes/Ready.html":{},"interfaces/ReadyMap.html":{},"classes/SaveEnd.html":{},"classes/SaveStart.html":{},"components/SidebarComponent.html":{},"classes/TestClass.html":{},"interfaces/ToolSettingsMap.html":{},"interfaces/ToolSettingsMap-1.html":{},"contributing.html":{},"miscellaneous/variables.html":{}}}],["defines",{"_index":429,"title":{},"body":{"interfaces/BasePlugin.html":{},"interfaces/BasePlugin-1.html":{},"interfaces/PluginConfig.html":{},"interfaces/PluginConfig-1.html":{},"interfaces/ToolSettingsMap.html":{},"interfaces/ToolSettingsMap-1.html":{}}}],["deigned",{"_index":1823,"title":{},"body":{"additional-documentation/tinynodes-library-docs/ngx-editorjs-readme.html":{}}}],["delayed",{"_index":1440,"title":{},"body":{"changelog.html":{}}}],["delete",{"_index":709,"title":{},"body":{"injectables/EditorJSInstanceService.html":{},"injectables/NgxEditorJSPluginService.html":{},"injectables/PagesService.html":{}}}],["delete(pageid",{"_index":1281,"title":{},"body":{"injectables/PagesService.html":{}}}],["demo",{"_index":218,"title":{},"body":{"modules/AppModule.html":{},"injectables/AppService.html":{},"injectables/AppService-1.html":{},"interfaces/ApplicationState.html":{},"interfaces/ApplicationState-1.html":{},"interfaces/DemoData.html":{},"interfaces/DemoData-1.html":{},"components/HomePageComponent.html":{},"interfaces/NgxEditorJSDemo.html":{},"interfaces/NgxEditorJSDemo-1.html":{},"interfaces/NgxEditorJSDemoData.html":{},"interfaces/NgxEditorJSDemoData-1.html":{},"components/PageContainerComponent.html":{},"modules/PageStoreModule.html":{},"interfaces/TinynodeDemos.html":{},"interfaces/TinynodeDemos-1.html":{},"changelog.html":{},"miscellaneous/functions.html":{},"index.html":{},"todo.html":{},"miscellaneous/variables.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-readme.html":{}}}],["demo').subscribe((blocks",{"_index":1220,"title":{},"body":{"components/PageContainerComponent.html":{}}}],["demo.module.ts",{"_index":1105,"title":{},"body":{"modules/NgxEditorjsDemoModule.html":{},"modules/NgxHideableHeaderDemoModule.html":{},"miscellaneous/variables.html":{}}}],["demo.name",{"_index":344,"title":{},"body":{"injectables/AppService.html":{},"injectables/AppService-1.html":{}}}],["demo.routes",{"_index":1115,"title":{},"body":{"modules/NgxEditorjsDemoModule.html":{}}}],["demo.routes.ts",{"_index":1802,"title":{},"body":{"miscellaneous/variables.html":{}}}],["demo/pages",{"_index":1808,"title":{},"body":{"miscellaneous/variables.html":{}}}],["demo/pages/:id",{"_index":1809,"title":{},"body":{"miscellaneous/variables.html":{}}}],["demo/src/lib/config/index.ts",{"_index":1699,"title":{},"body":{"miscellaneous/functions.html":{}}}],["demo/src/lib/containers/page",{"_index":1174,"title":{},"body":{"components/PageContainerComponent.html":{}}}],["demo/src/lib/ngx",{"_index":1104,"title":{},"body":{"modules/NgxEditorjsDemoModule.html":{},"modules/NgxHideableHeaderDemoModule.html":{},"miscellaneous/variables.html":{}}}],["demo/src/lib/store/pages/pages.models.ts",{"_index":1170,"title":{},"body":{"interfaces/Page.html":{},"interfaces/PageBlock.html":{},"interfaces/Tag.html":{}}}],["demo/src/lib/store/pages/pages.module.ts",{"_index":1258,"title":{},"body":{"modules/PageStoreModule.html":{}}}],["demo/src/lib/store/pages/pages.query.ts",{"_index":1265,"title":{},"body":{"injectables/PagesQuery.html":{}}}],["demo/src/lib/store/pages/pages.query.ts:7",{"_index":1267,"title":{},"body":{"injectables/PagesQuery.html":{}}}],["demo/src/lib/store/pages/pages.service.ts",{"_index":1270,"title":{},"body":{"injectables/PagesService.html":{}}}],["demo/src/lib/store/pages/pages.service.ts:15",{"_index":1275,"title":{},"body":{"injectables/PagesService.html":{}}}],["demo/src/lib/store/pages/pages.service.ts:17",{"_index":1291,"title":{},"body":{"injectables/PagesService.html":{}}}],["demo/src/lib/store/pages/pages.service.ts:24",{"_index":1292,"title":{},"body":{"injectables/PagesService.html":{}}}],["demo/src/lib/store/pages/pages.service.ts:32",{"_index":1277,"title":{},"body":{"injectables/PagesService.html":{}}}],["demo/src/lib/store/pages/pages.service.ts:47",{"_index":1290,"title":{},"body":{"injectables/PagesService.html":{}}}],["demo/src/lib/store/pages/pages.service.ts:56",{"_index":1282,"title":{},"body":{"injectables/PagesService.html":{}}}],["demo/src/lib/store/pages/pages.service.ts:60",{"_index":1288,"title":{},"body":{"injectables/PagesService.html":{}}}],["demo/src/lib/store/pages/pages.service.ts:64",{"_index":1279,"title":{},"body":{"injectables/PagesService.html":{}}}],["demo/src/lib/store/pages/pages.service.ts:70",{"_index":1286,"title":{},"body":{"injectables/PagesService.html":{}}}],["demo/src/lib/store/pages/pages.store.ts",{"_index":1308,"title":{},"body":{"interfaces/PagesState.html":{},"injectables/PagesStore.html":{}}}],["demo/src/lib/store/pages/pages.store.ts:9",{"_index":1311,"title":{},"body":{"injectables/PagesStore.html":{}}}],["demo](https://tinynodes",{"_index":255,"title":{},"body":{"modules/AppModule.html":{}}}],["demodata",{"_index":326,"title":{"interfaces/DemoData.html":{},"interfaces/DemoData-1.html":{}},"body":{"injectables/AppService.html":{},"injectables/AppService-1.html":{},"interfaces/ApplicationState.html":{},"interfaces/ApplicationState-1.html":{},"injectables/ApplicationStore.html":{},"injectables/ApplicationStore-1.html":{},"interfaces/DemoData.html":{},"interfaces/DemoData-1.html":{},"interfaces/NgxEditorJSDemo.html":{},"interfaces/NgxEditorJSDemo-1.html":{},"interfaces/NgxEditorJSDemoData.html":{},"interfaces/NgxEditorJSDemoData-1.html":{},"interfaces/TinynodeDemos.html":{},"interfaces/TinynodeDemos-1.html":{},"miscellaneous/enumerations.html":{}}}],["demodata.find(demo",{"_index":343,"title":{},"body":{"injectables/AppService.html":{},"injectables/AppService-1.html":{}}}],["demoname",{"_index":307,"title":{},"body":{"injectables/AppService.html":{},"injectables/AppService-1.html":{}}}],["demoname).data",{"_index":345,"title":{},"body":{"injectables/AppService.html":{},"injectables/AppService-1.html":{}}}],["demos",{"_index":57,"title":{},"body":{"components/AppContainerComponent.html":{},"interfaces/ApplicationState.html":{},"interfaces/ApplicationState-1.html":{},"interfaces/DemoData.html":{},"interfaces/DemoData-1.html":{},"components/HomePageComponent.html":{},"interfaces/NgxEditorJSDemo.html":{},"interfaces/NgxEditorJSDemo-1.html":{},"interfaces/NgxEditorJSDemoData.html":{},"interfaces/NgxEditorJSDemoData-1.html":{},"interfaces/TinynodeDemos.html":{},"interfaces/TinynodeDemos-1.html":{},"index.html":{}}}],["dependencies",{"_index":195,"title":{"dependencies.html":{}},"body":{"modules/AppModule.html":{},"modules/ApplicationDataModule.html":{},"modules/EditorJSInstanceModule.html":{},"modules/NgxEditorJSModule.html":{},"modules/NgxEditorjsDemoModule.html":{},"modules/NgxEditorjsNgrxModule.html":{},"modules/NgxEditorjsPluginsModule.html":{},"modules/NgxTinynodesCoreModule.html":{},"modules/PageStoreModule.html":{},"modules/PluginCodeModule.html":{},"modules/PluginHeaderModule.html":{},"modules/PluginImageModule.html":{},"modules/PluginLinkModule.html":{},"modules/PluginListModule.html":{},"modules/PluginMarkerModule.html":{},"modules/PluginParagraphModule.html":{},"modules/PluginSimpleImageModule.html":{},"contributing.html":{},"dependencies.html":{},"index.html":{},"overview.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-plugins-readme.html":{}}}],["dependency",{"_index":1788,"title":{},"body":{"todo.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-readme.html":{}}}],["deps",{"_index":995,"title":{},"body":{"modules/NgxEditorJSModule.html":{}}}],["describes",{"_index":379,"title":{},"body":{"interfaces/ApplicationData.html":{},"interfaces/ApplicationData-1.html":{},"interfaces/MenuGroup.html":{},"interfaces/MenuGroup-1.html":{},"interfaces/MenuItem.html":{},"interfaces/MenuItem-1.html":{}}}],["description",{"_index":12,"title":{},"body":{"components/AppContainerComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"injectables/AppService.html":{},"injectables/AppService-1.html":{},"interfaces/ApplicationData.html":{},"interfaces/ApplicationData-1.html":{},"modules/ApplicationDataModule.html":{},"injectables/ApplicationQuery.html":{},"injectables/ApplicationQuery-1.html":{},"interfaces/ApplicationState.html":{},"interfaces/ApplicationState-1.html":{},"injectables/ApplicationStore.html":{},"injectables/ApplicationStore-1.html":{},"interfaces/BasePlugin.html":{},"interfaces/BasePlugin-1.html":{},"interfaces/Block.html":{},"interfaces/BlocksMap.html":{},"interfaces/ChangeMap.html":{},"interfaces/DemoData.html":{},"interfaces/DemoData-1.html":{},"interfaces/EditorJSConfig.html":{},"modules/EditorJSInstanceModule.html":{},"injectables/EditorJSInstanceService.html":{},"interfaces/EditorMap.html":{},"interfaces/EventMap.html":{},"interfaces/EventType.html":{},"interfaces/Header.html":{},"interfaces/HeaderBlock.html":{},"interfaces/Image.html":{},"interfaces/ImageBlock.html":{},"interfaces/List.html":{},"interfaces/ListBlock.html":{},"modules/MaterialModule.html":{},"interfaces/MenuGroup.html":{},"interfaces/MenuGroup-1.html":{},"interfaces/MenuItem.html":{},"interfaces/MenuItem-1.html":{},"injectables/MockNgZone.html":{},"components/NavBarComponent.html":{},"components/NgxEditorJSComponent.html":{},"interfaces/NgxEditorJSConfig.html":{},"interfaces/NgxEditorJSDemo.html":{},"interfaces/NgxEditorJSDemo-1.html":{},"interfaces/NgxEditorJSDemoData.html":{},"interfaces/NgxEditorJSDemoData-1.html":{},"directives/NgxEditorJSDirective.html":{},"modules/NgxEditorJSModule.html":{},"injectables/NgxEditorJSPluginService.html":{},"injectables/NgxEditorJSService.html":{},"modules/NgxEditorjsNgrxModule.html":{},"modules/NgxEditorjsPluginsModule.html":{},"modules/NgxTinynodesCoreModule.html":{},"components/PageContainerComponent.html":{},"modules/PageStoreModule.html":{},"injectables/PagesService.html":{},"interfaces/Paragraph.html":{},"interfaces/ParagraphBlock.html":{},"injectables/PluginCode.html":{},"modules/PluginCodeModule.html":{},"interfaces/PluginConfig.html":{},"interfaces/PluginConfig-1.html":{},"injectables/PluginHeader.html":{},"modules/PluginHeaderModule.html":{},"injectables/PluginImage.html":{},"modules/PluginImageModule.html":{},"injectables/PluginLink.html":{},"modules/PluginLinkModule.html":{},"injectables/PluginList.html":{},"modules/PluginListModule.html":{},"injectables/PluginMarker.html":{},"modules/PluginMarkerModule.html":{},"injectables/PluginParagraph.html":{},"modules/PluginParagraphModule.html":{},"injectables/PluginSimpleImage.html":{},"modules/PluginSimpleImageModule.html":{},"interfaces/ReadyMap.html":{},"interfaces/TinynodeDemos.html":{},"interfaces/TinynodeDemos-1.html":{},"interfaces/ToolSettingsMap.html":{},"interfaces/ToolSettingsMap-1.html":{},"miscellaneous/functions.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-readme.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-plugins-readme.html":{}}}],["destroy",{"_index":593,"title":{},"body":{"injectables/EditorJSInstanceService.html":{},"classes/MockEditorJS.html":{},"classes/MockPlugin.html":{},"directives/NgxEditorJSDirective.html":{},"injectables/NgxEditorJSService.html":{},"classes/TestClass.html":{}}}],["destroy(holder",{"_index":1045,"title":{},"body":{"injectables/NgxEditorJSService.html":{}}}],["destroyed",{"_index":66,"title":{},"body":{"components/AppContainerComponent.html":{},"injectables/EditorJSInstanceService.html":{}}}],["destroyinstance",{"_index":594,"title":{},"body":{"injectables/EditorJSInstanceService.html":{}}}],["destroyinstance(holder",{"_index":623,"title":{},"body":{"injectables/EditorJSInstanceService.html":{}}}],["destroys",{"_index":625,"title":{},"body":{"injectables/EditorJSInstanceService.html":{},"injectables/NgxEditorJSService.html":{}}}],["destructive",{"_index":897,"title":{},"body":{"directives/NgxEditorJSDirective.html":{}}}],["details",{"_index":1056,"title":{},"body":{"injectables/NgxEditorJSService.html":{},"components/PageContainerComponent.html":{},"modules/PluginCodeModule.html":{},"modules/PluginHeaderModule.html":{},"modules/PluginImageModule.html":{},"modules/PluginLinkModule.html":{},"modules/PluginListModule.html":{},"modules/PluginMarkerModule.html":{},"modules/PluginParagraphModule.html":{},"modules/PluginSimpleImageModule.html":{},"contributing.html":{},"additional-documentation/tinynodes-library-docs.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-readme.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-plugins-readme/ngx-editorjs-plugins-changelog.html":{}}}],["detection",{"_index":714,"title":{},"body":{"injectables/EditorJSInstanceService.html":{},"components/PageContainerComponent.html":{}}}],["determined",{"_index":1650,"title":{},"body":{"contributing.html":{}}}],["developers",{"_index":1497,"title":{},"body":{"contributing.html":{}}}],["development",{"_index":1126,"title":{},"body":{"modules/NgxEditorjsNgrxModule.html":{},"modules/PageStoreModule.html":{},"index.html":{}}}],["devlog",{"_index":1437,"title":{},"body":{"changelog.html":{}}}],["diary",{"_index":1700,"title":{},"body":{"index.html":{}}}],["differing",{"_index":1538,"title":{},"body":{"contributing.html":{}}}],["direction",{"_index":857,"title":{},"body":{"components/NgxEditorJSComponent.html":{}}}],["directive",{"_index":169,"title":{"directives/NgxEditorJSDirective.html":{}},"body":{"components/AppContainerComponent.html":{},"components/HomePageComponent.html":{},"components/NavBarComponent.html":{},"components/NgxEditorJSComponent.html":{},"directives/NgxEditorJSDirective.html":{},"components/PageContainerComponent.html":{},"components/SidebarComponent.html":{},"index.html":{},"overview.html":{},"todo.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-readme.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-readme/ngx-editorjs-changelog.html":{}}}],["directives",{"_index":185,"title":{},"body":{"components/AppContainerComponent.html":{},"components/HomePageComponent.html":{},"components/NavBarComponent.html":{},"components/NgxEditorJSComponent.html":{},"directives/NgxEditorJSDirective.html":{},"components/PageContainerComponent.html":{},"components/SidebarComponent.html":{}}}],["directives/ngx",{"_index":849,"title":{},"body":{"components/NgxEditorJSComponent.html":{},"modules/NgxEditorJSModule.html":{}}}],["disability",{"_index":1517,"title":{},"body":{"contributing.html":{}}}],["disable",{"_index":1044,"title":{},"body":{"injectables/NgxEditorJSService.html":{}}}],["discuss",{"_index":1467,"title":{},"body":{"contributing.html":{}}}],["dispatch",{"_index":962,"title":{},"body":{"injectables/NgxEditorJSEffects.html":{}}}],["display",{"_index":151,"title":{},"body":{"components/AppContainerComponent.html":{},"interfaces/ApplicationData.html":{},"interfaces/ApplicationData-1.html":{},"interfaces/MenuGroup.html":{},"interfaces/MenuGroup-1.html":{},"interfaces/MenuItem.html":{},"interfaces/MenuItem-1.html":{},"components/NavBarComponent.html":{},"components/NgxEditorJSComponent.html":{}}}],["displays",{"_index":808,"title":{},"body":{"components/NavBarComponent.html":{}}}],["distinctuntilchanged",{"_index":96,"title":{},"body":{"components/AppContainerComponent.html":{},"injectables/AppService.html":{},"injectables/AppService-1.html":{},"components/PageContainerComponent.html":{}}}],["distribute",{"_index":1733,"title":{},"body":{"license.html":{}}}],["doc",{"_index":1781,"title":{},"body":{"todo.html":{}}}],["docs",{"_index":1055,"title":{"additional-documentation/tinynodes-library-docs.html":{}},"body":{"injectables/NgxEditorJSService.html":{},"components/PageContainerComponent.html":{},"changelog.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-readme.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-readme/ngx-editorjs-changelog.html":{}}}],["document.createelement('div",{"_index":771,"title":{},"body":{"classes/MockEditorJS.html":{},"classes/MockPlugin.html":{},"classes/TestClass.html":{}}}],["documentation",{"_index":750,"title":{},"body":{"components/HomePageComponent.html":{},"changelog.html":{},"index.html":{},"license.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-readme.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-readme/ngx-editorjs-changelog.html":{}}}],["documented",{"_index":1841,"title":{},"body":{"additional-documentation/tinynodes-library-docs/ngx-editorjs-readme/ngx-editorjs-changelog.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-plugins-readme/ngx-editorjs-plugins-changelog.html":{}}}],["doing",{"_index":1481,"title":{},"body":{"contributing.html":{}}}],["dom",{"_index":7,"title":{},"body":{"components/AppContainerComponent.html":{},"injectables/EditorJSInstanceService.html":{},"components/HomePageComponent.html":{},"components/NavBarComponent.html":{},"components/NgxEditorJSComponent.html":{},"directives/NgxEditorJSDirective.html":{},"components/PageContainerComponent.html":{},"components/SidebarComponent.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-readme/ngx-editorjs-changelog.html":{}}}],["download",{"_index":1813,"title":{},"body":{"additional-documentation/tinynodes-library-docs/ngx-editorjs-readme.html":{}}}],["due",{"_index":1441,"title":{},"body":{"changelog.html":{},"additional-documentation/tinynodes-library-docs.html":{}}}],["dynamic",{"_index":1666,"title":{},"body":{"dependencies.html":{}}}],["e",{"_index":1608,"title":{},"body":{"contributing.html":{}}}],["e.g",{"_index":380,"title":{},"body":{"interfaces/ApplicationData.html":{},"interfaces/ApplicationData-1.html":{},"interfaces/ApplicationState.html":{},"interfaces/ApplicationState-1.html":{},"interfaces/DemoData.html":{},"interfaces/DemoData-1.html":{},"interfaces/MenuGroup.html":{},"interfaces/MenuGroup-1.html":{},"interfaces/MenuItem.html":{},"interfaces/MenuItem-1.html":{},"interfaces/NgxEditorJSDemo.html":{},"interfaces/NgxEditorJSDemo-1.html":{},"interfaces/NgxEditorJSDemoData.html":{},"interfaces/NgxEditorJSDemoData-1.html":{},"interfaces/TinynodeDemos.html":{},"interfaces/TinynodeDemos-1.html":{},"todo.html":{}}}],["e2e/src/support/app.po.ts",{"_index":1806,"title":{},"body":{"miscellaneous/variables.html":{}}}],["each",{"_index":644,"title":{},"body":{"injectables/EditorJSInstanceService.html":{},"modules/NgxEditorjsPluginsModule.html":{},"miscellaneous/variables.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-readme.html":{}}}],["easier",{"_index":1839,"title":{},"body":{"additional-documentation/tinynodes-library-docs/ngx-editorjs-readme.html":{}}}],["easily",{"_index":1141,"title":{},"body":{"modules/NgxEditorjsPluginsModule.html":{}}}],["edit",{"_index":1586,"title":{},"body":{"contributing.html":{}}}],["editior_js_instance",{"_index":574,"title":{},"body":{"interfaces/EditorJSConfig.html":{},"interfaces/NgxEditorJSConfig.html":{},"miscellaneous/variables.html":{}}}],["editor",{"_index":613,"title":{},"body":{"injectables/EditorJSInstanceService.html":{},"components/NgxEditorJSComponent.html":{},"directives/NgxEditorJSDirective.html":{},"injectables/NgxEditorJSPluginService.html":{},"injectables/NgxEditorJSService.html":{},"components/PageContainerComponent.html":{},"injectables/PluginSimpleImage.html":{},"todo.html":{},"miscellaneous/variables.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-readme.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-readme/ngx-editorjs-changelog.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-plugins-readme.html":{}}}],["editor's",{"_index":552,"title":{},"body":{"interfaces/EditorJSConfig.html":{},"components/NgxEditorJSComponent.html":{},"interfaces/NgxEditorJSConfig.html":{},"directives/NgxEditorJSDirective.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-readme.html":{}}}],["editor.blocks.clear",{"_index":719,"title":{},"body":{"injectables/EditorJSInstanceService.html":{}}}],["editor.blocks.render",{"_index":722,"title":{},"body":{"injectables/EditorJSInstanceService.html":{}}}],["editor.destroy",{"_index":679,"title":{},"body":{"injectables/EditorJSInstanceService.html":{}}}],["editor.isready.then",{"_index":657,"title":{},"body":{"injectables/EditorJSInstanceService.html":{}}}],["editor.saver.save().then(data",{"_index":716,"title":{},"body":{"injectables/EditorJSInstanceService.html":{}}}],["editorconfig",{"_index":589,"title":{},"body":{"injectables/EditorJSInstanceService.html":{},"injectables/NgxEditorJSService.html":{}}}],["editorjs",{"_index":239,"title":{"additional-documentation/tinynodes-library-docs/ngx-editorjs-readme.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-readme/ngx-editorjs-changelog.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-plugins-readme.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-plugins-readme/ngx-editorjs-plugins-changelog.html":{}},"body":{"modules/AppModule.html":{},"interfaces/ApplicationState.html":{},"interfaces/ApplicationState-1.html":{},"interfaces/BasePlugin.html":{},"interfaces/BasePlugin-1.html":{},"interfaces/Block.html":{},"interfaces/BlocksMap.html":{},"interfaces/ChangeMap.html":{},"classes/Changed.html":{},"interfaces/DemoData.html":{},"interfaces/DemoData-1.html":{},"interfaces/EditorJSConfig.html":{},"modules/EditorJSInstanceModule.html":{},"injectables/EditorJSInstanceService.html":{},"interfaces/EditorMap.html":{},"interfaces/EventMap.html":{},"interfaces/EventType.html":{},"interfaces/Header.html":{},"interfaces/HeaderBlock.html":{},"interfaces/Image.html":{},"interfaces/ImageBlock.html":{},"interfaces/List.html":{},"interfaces/ListBlock.html":{},"components/NgxEditorJSComponent.html":{},"interfaces/NgxEditorJSConfig.html":{},"interfaces/NgxEditorJSDemo.html":{},"interfaces/NgxEditorJSDemo-1.html":{},"interfaces/NgxEditorJSDemoData.html":{},"interfaces/NgxEditorJSDemoData-1.html":{},"directives/NgxEditorJSDirective.html":{},"injectables/NgxEditorJSEffects.html":{},"modules/NgxEditorJSModule.html":{},"injectables/NgxEditorJSPluginService.html":{},"injectables/NgxEditorJSService.html":{},"modules/NgxEditorjsDemoModule.html":{},"modules/NgxEditorjsNgrxModule.html":{},"modules/NgxEditorjsPluginsModule.html":{},"classes/NotReady.html":{},"interfaces/Page.html":{},"interfaces/PageBlock.html":{},"components/PageContainerComponent.html":{},"modules/PageStoreModule.html":{},"injectables/PagesQuery.html":{},"injectables/PagesService.html":{},"interfaces/PagesState.html":{},"injectables/PagesStore.html":{},"interfaces/Paragraph.html":{},"interfaces/ParagraphBlock.html":{},"injectables/PluginCode.html":{},"modules/PluginCodeModule.html":{},"interfaces/PluginConfig.html":{},"interfaces/PluginConfig-1.html":{},"injectables/PluginHeader.html":{},"modules/PluginHeaderModule.html":{},"injectables/PluginImage.html":{},"modules/PluginImageModule.html":{},"injectables/PluginLink.html":{},"modules/PluginLinkModule.html":{},"injectables/PluginList.html":{},"modules/PluginListModule.html":{},"injectables/PluginMarker.html":{},"modules/PluginMarkerModule.html":{},"injectables/PluginParagraph.html":{},"modules/PluginParagraphModule.html":{},"injectables/PluginSimpleImage.html":{},"modules/PluginSimpleImageModule.html":{},"classes/Ready.html":{},"interfaces/ReadyMap.html":{},"classes/SaveEnd.html":{},"classes/SaveStart.html":{},"interfaces/Tag.html":{},"interfaces/TinynodeDemos.html":{},"interfaces/TinynodeDemos-1.html":{},"interfaces/ToolSettingsMap.html":{},"interfaces/ToolSettingsMap-1.html":{},"changelog.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"index.html":{},"todo.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-readme.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-readme/ngx-editorjs-changelog.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-plugins-readme.html":{}}}],["editorjs'},{'name",{"_index":181,"title":{},"body":{"components/AppContainerComponent.html":{},"components/HomePageComponent.html":{},"components/NavBarComponent.html":{},"components/NgxEditorJSComponent.html":{},"components/PageContainerComponent.html":{},"components/SidebarComponent.html":{}}}],["editorjs.actions",{"_index":958,"title":{},"body":{"injectables/NgxEditorJSEffects.html":{}}}],["editorjs.actions.ts",{"_index":511,"title":{},"body":{"classes/Changed.html":{},"classes/NotReady.html":{},"classes/Ready.html":{},"classes/SaveEnd.html":{},"classes/SaveStart.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/typealiases.html":{}}}],["editorjs.actions.ts:13",{"_index":1396,"title":{},"body":{"classes/SaveStart.html":{}}}],["editorjs.actions.ts:14",{"_index":1397,"title":{},"body":{"classes/SaveStart.html":{}}}],["editorjs.actions.ts:18",{"_index":1394,"title":{},"body":{"classes/SaveEnd.html":{}}}],["editorjs.actions.ts:19",{"_index":1395,"title":{},"body":{"classes/SaveEnd.html":{}}}],["editorjs.actions.ts:23",{"_index":1168,"title":{},"body":{"classes/NotReady.html":{}}}],["editorjs.actions.ts:24",{"_index":1169,"title":{},"body":{"classes/NotReady.html":{}}}],["editorjs.actions.ts:28",{"_index":1391,"title":{},"body":{"classes/Ready.html":{}}}],["editorjs.actions.ts:29",{"_index":1392,"title":{},"body":{"classes/Ready.html":{}}}],["editorjs.actions.ts:33",{"_index":515,"title":{},"body":{"classes/Changed.html":{}}}],["editorjs.actions.ts:34",{"_index":516,"title":{},"body":{"classes/Changed.html":{}}}],["editorjs.component.html",{"_index":826,"title":{},"body":{"components/NgxEditorJSComponent.html":{}}}],["editorjs.component.scss",{"_index":825,"title":{},"body":{"components/NgxEditorJSComponent.html":{}}}],["editorjs.directive",{"_index":850,"title":{},"body":{"components/NgxEditorJSComponent.html":{},"modules/NgxEditorJSModule.html":{}}}],["editorjs.directive.ts",{"_index":865,"title":{},"body":{"directives/NgxEditorJSDirective.html":{}}}],["editorjs.directive.ts:107",{"_index":888,"title":{},"body":{"directives/NgxEditorJSDirective.html":{}}}],["editorjs.directive.ts:119",{"_index":893,"title":{},"body":{"directives/NgxEditorJSDirective.html":{}}}],["editorjs.directive.ts:131",{"_index":890,"title":{},"body":{"directives/NgxEditorJSDirective.html":{}}}],["editorjs.directive.ts:143",{"_index":903,"title":{},"body":{"directives/NgxEditorJSDirective.html":{}}}],["editorjs.directive.ts:29",{"_index":881,"title":{},"body":{"directives/NgxEditorJSDirective.html":{}}}],["editorjs.directive.ts:35",{"_index":878,"title":{},"body":{"directives/NgxEditorJSDirective.html":{}}}],["editorjs.directive.ts:41",{"_index":880,"title":{},"body":{"directives/NgxEditorJSDirective.html":{}}}],["editorjs.directive.ts:47",{"_index":883,"title":{},"body":{"directives/NgxEditorJSDirective.html":{}}}],["editorjs.directive.ts:53",{"_index":884,"title":{},"body":{"directives/NgxEditorJSDirective.html":{}}}],["editorjs.directive.ts:59",{"_index":885,"title":{},"body":{"directives/NgxEditorJSDirective.html":{}}}],["editorjs.directive.ts:65",{"_index":886,"title":{},"body":{"directives/NgxEditorJSDirective.html":{}}}],["editorjs.directive.ts:72",{"_index":882,"title":{},"body":{"directives/NgxEditorJSDirective.html":{}}}],["editorjs.directive.ts:79",{"_index":879,"title":{},"body":{"directives/NgxEditorJSDirective.html":{}}}],["editorjs.directive.ts:85",{"_index":876,"title":{},"body":{"directives/NgxEditorJSDirective.html":{}}}],["editorjs.directive.ts:92",{"_index":905,"title":{},"body":{"directives/NgxEditorJSDirective.html":{}}}],["editorjs.directive.ts:99",{"_index":907,"title":{},"body":{"directives/NgxEditorJSDirective.html":{}}}],["editorjs.effects.ts",{"_index":939,"title":{},"body":{"injectables/NgxEditorJSEffects.html":{}}}],["editorjs.effects.ts:10",{"_index":942,"title":{},"body":{"injectables/NgxEditorJSEffects.html":{}}}],["editorjs.effects.ts:14",{"_index":953,"title":{},"body":{"injectables/NgxEditorJSEffects.html":{}}}],["editorjs.module.ts",{"_index":970,"title":{},"body":{"modules/NgxEditorJSModule.html":{}}}],["editorjs.module.ts:38",{"_index":975,"title":{},"body":{"modules/NgxEditorJSModule.html":{}}}],["editorjs.version",{"_index":726,"title":{},"body":{"injectables/EditorJSInstanceService.html":{},"directives/NgxEditorJSDirective.html":{},"injectables/NgxEditorJSEffects.html":{},"injectables/NgxEditorJSService.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-readme.html":{}}}],["editorjs/code",{"_index":1315,"title":{},"body":{"injectables/PluginCode.html":{}}}],["editorjs/editorjs",{"_index":440,"title":{},"body":{"interfaces/BasePlugin.html":{},"interfaces/BasePlugin-1.html":{},"interfaces/BlocksMap.html":{},"interfaces/ChangeMap.html":{},"classes/Changed.html":{},"interfaces/EditorJSConfig.html":{},"modules/EditorJSInstanceModule.html":{},"injectables/EditorJSInstanceService.html":{},"interfaces/EditorMap.html":{},"interfaces/EventMap.html":{},"interfaces/EventType.html":{},"classes/MockEditorJS.html":{},"classes/MockPlugin.html":{},"components/NgxEditorJSComponent.html":{},"interfaces/NgxEditorJSConfig.html":{},"directives/NgxEditorJSDirective.html":{},"injectables/NgxEditorJSEffects.html":{},"injectables/NgxEditorJSService.html":{},"classes/NotReady.html":{},"injectables/PluginCode.html":{},"interfaces/PluginConfig.html":{},"interfaces/PluginConfig-1.html":{},"injectables/PluginHeader.html":{},"injectables/PluginImage.html":{},"injectables/PluginLink.html":{},"injectables/PluginList.html":{},"injectables/PluginMarker.html":{},"injectables/PluginParagraph.html":{},"injectables/PluginSimpleImage.html":{},"classes/Ready.html":{},"interfaces/ReadyMap.html":{},"classes/SaveEnd.html":{},"classes/SaveStart.html":{},"classes/TestClass.html":{},"interfaces/ToolSettingsMap.html":{},"interfaces/ToolSettingsMap-1.html":{},"dependencies.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-readme.html":{}}}],["editorjs/header",{"_index":1328,"title":{},"body":{"injectables/PluginHeader.html":{},"dependencies.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-plugins-readme.html":{}}}],["editorjs/image",{"_index":1337,"title":{},"body":{"injectables/PluginImage.html":{}}}],["editorjs/link",{"_index":1346,"title":{},"body":{"injectables/PluginLink.html":{}}}],["editorjs/list",{"_index":1355,"title":{},"body":{"injectables/PluginList.html":{},"dependencies.html":{}}}],["editorjs/marker",{"_index":1366,"title":{},"body":{"injectables/PluginMarker.html":{}}}],["editorjs/paragraph",{"_index":1376,"title":{},"body":{"injectables/PluginParagraph.html":{},"dependencies.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-readme.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-plugins-readme.html":{}}}],["editorjs/simple",{"_index":1387,"title":{},"body":{"injectables/PluginSimpleImage.html":{}}}],["editorjs/src",{"_index":1210,"title":{},"body":{"components/PageContainerComponent.html":{}}}],["editorjs/src/lib/config/editor",{"_index":1694,"title":{},"body":{"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["editorjs/src/lib/config/module",{"_index":1697,"title":{},"body":{"miscellaneous/functions.html":{}}}],["editorjs/src/lib/containers/editorjs",{"_index":819,"title":{},"body":{"components/NgxEditorJSComponent.html":{}}}],["editorjs/src/lib/directives/ngx",{"_index":864,"title":{},"body":{"directives/NgxEditorJSDirective.html":{}}}],["editorjs/src/lib/ngx",{"_index":969,"title":{},"body":{"modules/NgxEditorJSModule.html":{}}}],["editorjs/src/lib/services/editorjs.service.ts",{"_index":1035,"title":{},"body":{"injectables/NgxEditorJSService.html":{}}}],["editorjs/src/lib/services/editorjs.service.ts:113",{"_index":1063,"title":{},"body":{"injectables/NgxEditorJSService.html":{}}}],["editorjs/src/lib/services/editorjs.service.ts:121",{"_index":1040,"title":{},"body":{"injectables/NgxEditorJSService.html":{}}}],["editorjs/src/lib/services/editorjs.service.ts:131",{"_index":1046,"title":{},"body":{"injectables/NgxEditorJSService.html":{}}}],["editorjs/src/lib/services/editorjs.service.ts:16",{"_index":1039,"title":{},"body":{"injectables/NgxEditorJSService.html":{}}}],["editorjs/src/lib/services/editorjs.service.ts:31",{"_index":1042,"title":{},"body":{"injectables/NgxEditorJSService.html":{}}}],["editorjs/src/lib/services/editorjs.service.ts:46",{"_index":1052,"title":{},"body":{"injectables/NgxEditorJSService.html":{}}}],["editorjs/src/lib/services/editorjs.service.ts:54",{"_index":1050,"title":{},"body":{"injectables/NgxEditorJSService.html":{}}}],["editorjs/src/lib/services/editorjs.service.ts:63",{"_index":1062,"title":{},"body":{"injectables/NgxEditorJSService.html":{}}}],["editorjs/src/lib/services/editorjs.service.ts:72",{"_index":1058,"title":{},"body":{"injectables/NgxEditorJSService.html":{}}}],["editorjs/src/lib/services/editorjs.service.ts:82",{"_index":1065,"title":{},"body":{"injectables/NgxEditorJSService.html":{}}}],["editorjs/src/lib/services/plugins.service.ts",{"_index":996,"title":{},"body":{"injectables/NgxEditorJSPluginService.html":{}}}],["editorjs/src/lib/services/plugins.service.ts:15",{"_index":1003,"title":{},"body":{"injectables/NgxEditorJSPluginService.html":{}}}],["editorjs/src/lib/services/plugins.service.ts:32",{"_index":1007,"title":{},"body":{"injectables/NgxEditorJSPluginService.html":{}}}],["editorjs/src/lib/services/plugins.service.ts:40",{"_index":1014,"title":{},"body":{"injectables/NgxEditorJSPluginService.html":{}}}],["editorjs/src/lib/services/plugins.service.ts:49",{"_index":1009,"title":{},"body":{"injectables/NgxEditorJSPluginService.html":{}}}],["editorjs/src/lib/services/plugins.service.ts:56",{"_index":1016,"title":{},"body":{"injectables/NgxEditorJSPluginService.html":{}}}],["editorjs/src/lib/services/plugins.service.ts:64",{"_index":1011,"title":{},"body":{"injectables/NgxEditorJSPluginService.html":{}}}],["editorjs/src/lib/types/blocks.ts",{"_index":458,"title":{},"body":{"interfaces/Block.html":{},"interfaces/Header.html":{},"interfaces/HeaderBlock.html":{},"interfaces/Image.html":{},"interfaces/ImageBlock.html":{},"interfaces/List.html":{},"interfaces/ListBlock.html":{},"interfaces/Paragraph.html":{},"interfaces/ParagraphBlock.html":{},"miscellaneous/typealiases.html":{}}}],["editorjs/src/lib/types/blocks.ts:13",{"_index":460,"title":{},"body":{"interfaces/Block.html":{}}}],["editorjs/src/lib/types/config.ts",{"_index":535,"title":{},"body":{"interfaces/EditorJSConfig.html":{},"interfaces/NgxEditorJSConfig.html":{},"miscellaneous/variables.html":{}}}],["editorjs/src/lib/types/maps.ts",{"_index":489,"title":{},"body":{"interfaces/BlocksMap.html":{},"interfaces/ChangeMap.html":{},"interfaces/EditorMap.html":{},"interfaces/EventMap.html":{},"interfaces/EventType.html":{},"interfaces/ReadyMap.html":{}}}],["editorjs/src/lib/types/maps.ts:16",{"_index":729,"title":{},"body":{"interfaces/EventMap.html":{}}}],["editorjs/src/lib/types/maps.ts:26",{"_index":728,"title":{},"body":{"interfaces/EditorMap.html":{}}}],["editorjs/src/lib/types/maps.ts:36",{"_index":492,"title":{},"body":{"interfaces/BlocksMap.html":{}}}],["editorjs/src/lib/types/maps.ts:46",{"_index":1393,"title":{},"body":{"interfaces/ReadyMap.html":{}}}],["editorjs/src/lib/types/maps.ts:56",{"_index":507,"title":{},"body":{"interfaces/ChangeMap.html":{}}}],["editorjs/src/lib/types/plugins.ts",{"_index":428,"title":{},"body":{"interfaces/BasePlugin.html":{},"interfaces/PluginConfig.html":{},"interfaces/ToolSettingsMap.html":{},"miscellaneous/variables.html":{}}}],["editorjs/src/lib/types/plugins.ts:17",{"_index":1409,"title":{},"body":{"interfaces/ToolSettingsMap.html":{}}}],["editorjs/src/lib/types/plugins.ts:7",{"_index":1323,"title":{},"body":{"interfaces/PluginConfig.html":{}}}],["editorjs/src/lib/utils/editorjs",{"_index":580,"title":{},"body":{"modules/EditorJSInstanceModule.html":{},"injectables/EditorJSInstanceService.html":{},"miscellaneous/variables.html":{}}}],["editorjs/src/testing/ng",{"_index":782,"title":{},"body":{"injectables/MockNgZone.html":{}}}],["editorjs/src/testing/shared.ts",{"_index":761,"title":{},"body":{"classes/MockEditorJS.html":{},"classes/MockPlugin.html":{},"classes/TestClass.html":{}}}],["editorjs/src/testing/shared.ts:13",{"_index":800,"title":{},"body":{"classes/MockPlugin.html":{}}}],["editorjs/src/testing/shared.ts:16",{"_index":801,"title":{},"body":{"classes/MockPlugin.html":{}}}],["editorjs/src/testing/shared.ts:22",{"_index":765,"title":{},"body":{"classes/MockEditorJS.html":{}}}],["editorjs/src/testing/shared.ts:23",{"_index":766,"title":{},"body":{"classes/MockEditorJS.html":{}}}],["editorjs/src/testing/shared.ts:24",{"_index":767,"title":{},"body":{"classes/MockEditorJS.html":{}}}],["editorjs/src/testing/shared.ts:25",{"_index":764,"title":{},"body":{"classes/MockEditorJS.html":{}}}],["editorjs/src/testing/shared.ts:5",{"_index":1407,"title":{},"body":{"classes/TestClass.html":{}}}],["editorjs/src/testing/shared.ts:7",{"_index":1408,"title":{},"body":{"classes/TestClass.html":{}}}],["editorjs@1.2.0",{"_index":1432,"title":{},"body":{"changelog.html":{}}}],["editorjs@1.3.0",{"_index":1421,"title":{},"body":{"changelog.html":{}}}],["editorjs](http://editorjs.io",{"_index":991,"title":{},"body":{"modules/NgxEditorJSModule.html":{}}}],["editorjs_module_import",{"_index":583,"title":{},"body":{"modules/EditorJSInstanceModule.html":{},"injectables/EditorJSInstanceService.html":{},"miscellaneous/variables.html":{}}}],["editorjsactiontypes",{"_index":520,"title":{},"body":{"classes/Changed.html":{},"injectables/NgxEditorJSEffects.html":{},"classes/NotReady.html":{},"classes/Ready.html":{},"classes/SaveEnd.html":{},"classes/SaveStart.html":{},"miscellaneous/enumerations.html":{}}}],["editorjsactiontypes.changed",{"_index":517,"title":{},"body":{"classes/Changed.html":{},"classes/NotReady.html":{},"classes/Ready.html":{},"classes/SaveEnd.html":{},"classes/SaveStart.html":{}}}],["editorjsactiontypes.notready",{"_index":531,"title":{},"body":{"classes/Changed.html":{},"classes/NotReady.html":{},"classes/Ready.html":{},"classes/SaveEnd.html":{},"classes/SaveStart.html":{}}}],["editorjsactiontypes.ready",{"_index":532,"title":{},"body":{"classes/Changed.html":{},"classes/NotReady.html":{},"classes/Ready.html":{},"classes/SaveEnd.html":{},"classes/SaveStart.html":{}}}],["editorjsactiontypes.saveend",{"_index":530,"title":{},"body":{"classes/Changed.html":{},"classes/NotReady.html":{},"classes/Ready.html":{},"classes/SaveEnd.html":{},"classes/SaveStart.html":{}}}],["editorjsactiontypes.savestart",{"_index":527,"title":{},"body":{"classes/Changed.html":{},"classes/NotReady.html":{},"classes/Ready.html":{},"classes/SaveEnd.html":{},"classes/SaveStart.html":{}}}],["editorjsconfig",{"_index":534,"title":{"interfaces/EditorJSConfig.html":{}},"body":{"interfaces/EditorJSConfig.html":{},"classes/MockEditorJS.html":{},"classes/MockPlugin.html":{},"interfaces/NgxEditorJSConfig.html":{},"directives/NgxEditorJSDirective.html":{},"injectables/NgxEditorJSService.html":{},"classes/TestClass.html":{},"miscellaneous/functions.html":{}}}],["editorjsinstancemodule",{"_index":576,"title":{"modules/EditorJSInstanceModule.html":{}},"body":{"modules/EditorJSInstanceModule.html":{},"modules/NgxEditorJSModule.html":{},"modules.html":{},"overview.html":{}}}],["editorjsinstanceservice",{"_index":579,"title":{"injectables/EditorJSInstanceService.html":{}},"body":{"modules/EditorJSInstanceModule.html":{},"injectables/EditorJSInstanceService.html":{},"injectables/NgxEditorJSService.html":{},"overview.html":{}}}],["editorjsplugin",{"_index":1872,"title":{},"body":{"additional-documentation/tinynodes-library-docs/ngx-editorjs-readme/ngx-editorjs-changelog.html":{}}}],["editormap",{"_index":499,"title":{"interfaces/EditorMap.html":{}},"body":{"interfaces/BlocksMap.html":{},"interfaces/ChangeMap.html":{},"injectables/EditorJSInstanceService.html":{},"interfaces/EditorMap.html":{},"interfaces/EventMap.html":{},"interfaces/EventType.html":{},"interfaces/ReadyMap.html":{}}}],["editorservice",{"_index":875,"title":{},"body":{"directives/NgxEditorJSDirective.html":{},"injectables/NgxEditorJSEffects.html":{},"injectables/NgxEditorJSService.html":{}}}],["edits",{"_index":1590,"title":{},"body":{"contributing.html":{}}}],["effect",{"_index":954,"title":{},"body":{"injectables/NgxEditorJSEffects.html":{}}}],["effect({dispatch",{"_index":952,"title":{},"body":{"injectables/NgxEditorJSEffects.html":{}}}],["effects",{"_index":1129,"title":{},"body":{"modules/NgxEditorjsNgrxModule.html":{}}}],["effects](https://ngrx.io/guide/effects",{"_index":1131,"title":{},"body":{"modules/NgxEditorjsNgrxModule.html":{}}}],["effectsmodule",{"_index":1130,"title":{},"body":{"modules/NgxEditorjsNgrxModule.html":{}}}],["effectsmodule.forfeature",{"_index":1132,"title":{},"body":{"modules/NgxEditorjsNgrxModule.html":{}}}],["el",{"_index":877,"title":{},"body":{"directives/NgxEditorJSDirective.html":{}}}],["electronic",{"_index":1567,"title":{},"body":{"contributing.html":{}}}],["element",{"_index":168,"title":{},"body":{"components/AppContainerComponent.html":{},"interfaces/EditorJSConfig.html":{},"injectables/EditorJSInstanceService.html":{},"components/HomePageComponent.html":{},"components/NavBarComponent.html":{},"components/NgxEditorJSComponent.html":{},"interfaces/NgxEditorJSConfig.html":{},"directives/NgxEditorJSDirective.html":{},"components/PageContainerComponent.html":{},"components/SidebarComponent.html":{},"index.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-readme.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-readme/ngx-editorjs-changelog.html":{}}}],["elementref",{"_index":874,"title":{},"body":{"directives/NgxEditorJSDirective.html":{}}}],["elements",{"_index":491,"title":{},"body":{"interfaces/BlocksMap.html":{},"interfaces/ChangeMap.html":{},"interfaces/EditorMap.html":{},"interfaces/EventMap.html":{},"interfaces/EventType.html":{},"injectables/NgxEditorJSService.html":{},"interfaces/ReadyMap.html":{}}}],["email",{"_index":1471,"title":{},"body":{"contributing.html":{}}}],["empathy",{"_index":1548,"title":{},"body":{"contributing.html":{}}}],["empty",{"_index":421,"title":{},"body":{"injectables/ApplicationStore.html":{},"injectables/ApplicationStore-1.html":{},"components/NgxEditorJSComponent.html":{},"directives/NgxEditorJSDirective.html":{}}}],["enablelongstacktrace",{"_index":798,"title":{},"body":{"injectables/MockNgZone.html":{}}}],["end",{"_index":525,"title":{},"body":{"classes/Changed.html":{},"classes/NotReady.html":{},"classes/Ready.html":{},"classes/SaveEnd.html":{},"classes/SaveStart.html":{},"contributing.html":{},"miscellaneous/enumerations.html":{}}}],["enforce",{"_index":1644,"title":{},"body":{"contributing.html":{}}}],["enforcement",{"_index":1621,"title":{},"body":{"contributing.html":{}}}],["ensure",{"_index":1478,"title":{},"body":{"contributing.html":{}}}],["entity",{"_index":1304,"title":{},"body":{"injectables/PagesService.html":{}}}],["entitystate",{"_index":1309,"title":{},"body":{"interfaces/PagesState.html":{},"injectables/PagesStore.html":{}}}],["entitystore",{"_index":1310,"title":{},"body":{"interfaces/PagesState.html":{},"injectables/PagesStore.html":{}}}],["entrycomponents",{"_index":1106,"title":{},"body":{"modules/NgxEditorjsDemoModule.html":{}}}],["enum",{"_index":409,"title":{},"body":{"interfaces/ApplicationState.html":{},"interfaces/ApplicationState-1.html":{},"classes/Changed.html":{},"interfaces/DemoData.html":{},"interfaces/DemoData-1.html":{},"interfaces/NgxEditorJSDemo.html":{},"interfaces/NgxEditorJSDemo-1.html":{},"interfaces/NgxEditorJSDemoData.html":{},"interfaces/NgxEditorJSDemoData-1.html":{},"classes/NotReady.html":{},"classes/Ready.html":{},"classes/SaveEnd.html":{},"classes/SaveStart.html":{},"interfaces/TinynodeDemos.html":{},"interfaces/TinynodeDemos-1.html":{},"miscellaneous/enumerations.html":{}}}],["enumerations",{"_index":1686,"title":{"miscellaneous/enumerations.html":{}},"body":{"miscellaneous/enumerations.html":{}}}],["environment",{"_index":242,"title":{},"body":{"modules/AppModule.html":{},"contributing.html":{},"miscellaneous/variables.html":{}}}],["environment.production",{"_index":260,"title":{},"body":{"modules/AppModule.html":{}}}],["environments/environment",{"_index":243,"title":{},"body":{"modules/AppModule.html":{}}}],["error",{"_index":1064,"title":{},"body":{"injectables/NgxEditorJSService.html":{}}}],["error('error",{"_index":925,"title":{},"body":{"directives/NgxEditorJSDirective.html":{}}}],["etc",{"_index":373,"title":{},"body":{"interfaces/ApplicationData.html":{},"interfaces/ApplicationData-1.html":{},"interfaces/MenuGroup.html":{},"interfaces/MenuGroup-1.html":{},"interfaces/MenuItem.html":{},"interfaces/MenuItem-1.html":{},"todo.html":{}}}],["ethnicity",{"_index":1518,"title":{},"body":{"contributing.html":{}}}],["event",{"_index":493,"title":{},"body":{"interfaces/BlocksMap.html":{},"interfaces/ChangeMap.html":{},"injectables/EditorJSInstanceService.html":{},"interfaces/EditorMap.html":{},"interfaces/EventMap.html":{},"interfaces/EventType.html":{},"components/NavBarComponent.html":{},"interfaces/ReadyMap.html":{},"contributing.html":{},"license.html":{}}}],["event.payload.blocks",{"_index":702,"title":{},"body":{"injectables/EditorJSInstanceService.html":{}}}],["event.type",{"_index":697,"title":{},"body":{"injectables/EditorJSInstanceService.html":{}}}],["eventemitter",{"_index":796,"title":{},"body":{"injectables/MockNgZone.html":{},"components/NavBarComponent.html":{}}}],["eventemitter(false",{"_index":797,"title":{},"body":{"injectables/MockNgZone.html":{}}}],["eventmap",{"_index":497,"title":{"interfaces/EventMap.html":{}},"body":{"interfaces/BlocksMap.html":{},"interfaces/ChangeMap.html":{},"injectables/EditorJSInstanceService.html":{},"interfaces/EditorMap.html":{},"interfaces/EventMap.html":{},"interfaces/EventType.html":{},"interfaces/ReadyMap.html":{}}}],["events",{"_index":649,"title":{},"body":{"injectables/EditorJSInstanceService.html":{}}}],["eventtype",{"_index":495,"title":{"interfaces/EventType.html":{}},"body":{"interfaces/BlocksMap.html":{},"interfaces/ChangeMap.html":{},"injectables/EditorJSInstanceService.html":{},"interfaces/EditorMap.html":{},"interfaces/EventMap.html":{},"interfaces/EventType.html":{},"interfaces/ReadyMap.html":{}}}],["everyone",{"_index":1512,"title":{},"body":{"contributing.html":{}}}],["example",{"_index":824,"title":{},"body":{"components/NgxEditorJSComponent.html":{},"directives/NgxEditorJSDirective.html":{},"changelog.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-readme.html":{}}}],["examples",{"_index":1489,"title":{},"body":{"contributing.html":{}}}],["exclude",{"_index":1012,"title":{},"body":{"injectables/NgxEditorJSPluginService.html":{}}}],["exclude.includes(key",{"_index":1030,"title":{},"body":{"injectables/NgxEditorJSPluginService.html":{}}}],["excludetools",{"_index":1068,"title":{},"body":{"injectables/NgxEditorJSService.html":{}}}],["existing",{"_index":901,"title":{},"body":{"directives/NgxEditorJSDirective.html":{}}}],["expanded",{"_index":1449,"title":{},"body":{"changelog.html":{}}}],["expected",{"_index":1579,"title":{},"body":{"contributing.html":{}}}],["experience",{"_index":1511,"title":{},"body":{"contributing.html":{}}}],["experiences",{"_index":1540,"title":{},"body":{"contributing.html":{}}}],["explicit",{"_index":1569,"title":{},"body":{"contributing.html":{}}}],["export",{"_index":99,"title":{},"body":{"components/AppContainerComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"injectables/AppService.html":{},"injectables/AppService-1.html":{},"interfaces/ApplicationData.html":{},"interfaces/ApplicationData-1.html":{},"modules/ApplicationDataModule.html":{},"injectables/ApplicationQuery.html":{},"injectables/ApplicationQuery-1.html":{},"interfaces/ApplicationState.html":{},"interfaces/ApplicationState-1.html":{},"injectables/ApplicationStore.html":{},"injectables/ApplicationStore-1.html":{},"interfaces/BasePlugin.html":{},"interfaces/BasePlugin-1.html":{},"interfaces/Block.html":{},"interfaces/BlocksMap.html":{},"interfaces/ChangeMap.html":{},"classes/Changed.html":{},"interfaces/DemoData.html":{},"interfaces/DemoData-1.html":{},"interfaces/EditorJSConfig.html":{},"modules/EditorJSInstanceModule.html":{},"injectables/EditorJSInstanceService.html":{},"interfaces/EditorMap.html":{},"interfaces/EventMap.html":{},"interfaces/EventType.html":{},"interfaces/Header.html":{},"interfaces/HeaderBlock.html":{},"components/HomePageComponent.html":{},"interfaces/Image.html":{},"interfaces/ImageBlock.html":{},"interfaces/List.html":{},"interfaces/ListBlock.html":{},"modules/MaterialModule.html":{},"interfaces/MenuGroup.html":{},"interfaces/MenuGroup-1.html":{},"interfaces/MenuItem.html":{},"interfaces/MenuItem-1.html":{},"classes/MockEditorJS.html":{},"injectables/MockNgZone.html":{},"classes/MockPlugin.html":{},"components/NavBarComponent.html":{},"components/NgxEditorJSComponent.html":{},"interfaces/NgxEditorJSConfig.html":{},"interfaces/NgxEditorJSDemo.html":{},"interfaces/NgxEditorJSDemo-1.html":{},"interfaces/NgxEditorJSDemoData.html":{},"interfaces/NgxEditorJSDemoData-1.html":{},"directives/NgxEditorJSDirective.html":{},"injectables/NgxEditorJSEffects.html":{},"modules/NgxEditorJSModule.html":{},"injectables/NgxEditorJSPluginService.html":{},"injectables/NgxEditorJSService.html":{},"modules/NgxEditorjsDemoModule.html":{},"modules/NgxEditorjsNgrxModule.html":{},"modules/NgxEditorjsPluginsModule.html":{},"modules/NgxHideableHeaderDemoModule.html":{},"modules/NgxTinynodesCoreModule.html":{},"classes/NotReady.html":{},"interfaces/Page.html":{},"interfaces/PageBlock.html":{},"components/PageContainerComponent.html":{},"modules/PageStoreModule.html":{},"injectables/PagesQuery.html":{},"injectables/PagesService.html":{},"interfaces/PagesState.html":{},"injectables/PagesStore.html":{},"interfaces/Paragraph.html":{},"interfaces/ParagraphBlock.html":{},"injectables/PluginCode.html":{},"modules/PluginCodeModule.html":{},"interfaces/PluginConfig.html":{},"interfaces/PluginConfig-1.html":{},"injectables/PluginHeader.html":{},"modules/PluginHeaderModule.html":{},"injectables/PluginImage.html":{},"modules/PluginImageModule.html":{},"injectables/PluginLink.html":{},"modules/PluginLinkModule.html":{},"injectables/PluginList.html":{},"modules/PluginListModule.html":{},"injectables/PluginMarker.html":{},"modules/PluginMarkerModule.html":{},"injectables/PluginParagraph.html":{},"modules/PluginParagraphModule.html":{},"injectables/PluginSimpleImage.html":{},"modules/PluginSimpleImageModule.html":{},"classes/Ready.html":{},"interfaces/ReadyMap.html":{},"classes/SaveEnd.html":{},"classes/SaveStart.html":{},"components/SidebarComponent.html":{},"interfaces/Tag.html":{},"classes/TestClass.html":{},"interfaces/TinynodeDemos.html":{},"interfaces/TinynodeDemos-1.html":{},"interfaces/ToolSettingsMap.html":{},"interfaces/ToolSettingsMap-1.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-readme.html":{}}}],["exported",{"_index":446,"title":{},"body":{"interfaces/BasePlugin.html":{},"interfaces/BasePlugin-1.html":{},"interfaces/PluginConfig.html":{},"interfaces/PluginConfig-1.html":{},"interfaces/ToolSettingsMap.html":{},"interfaces/ToolSettingsMap-1.html":{}}}],["exports",{"_index":199,"title":{},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"modules/ApplicationDataModule.html":{},"modules/EditorJSInstanceModule.html":{},"modules/MaterialModule.html":{},"modules/NgxEditorJSModule.html":{},"modules/NgxEditorjsDemoModule.html":{},"modules/NgxEditorjsNgrxModule.html":{},"modules/NgxEditorjsPluginsModule.html":{},"modules/NgxTinynodesCoreModule.html":{},"modules/PageStoreModule.html":{},"modules/PluginCodeModule.html":{},"modules/PluginHeaderModule.html":{},"modules/PluginImageModule.html":{},"modules/PluginLinkModule.html":{},"modules/PluginListModule.html":{},"modules/PluginMarkerModule.html":{},"modules/PluginParagraphModule.html":{},"modules/PluginSimpleImageModule.html":{},"changelog.html":{},"index.html":{},"overview.html":{}}}],["expose",{"_index":1783,"title":{},"body":{"todo.html":{}}}],["exposed",{"_index":1484,"title":{},"body":{"contributing.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-readme.html":{}}}],["exposes",{"_index":1835,"title":{},"body":{"additional-documentation/tinynodes-library-docs/ngx-editorjs-readme.html":{}}}],["express",{"_index":1750,"title":{},"body":{"license.html":{}}}],["expression",{"_index":1521,"title":{},"body":{"contributing.html":{}}}],["extendable",{"_index":1824,"title":{},"body":{"additional-documentation/tinynodes-library-docs/ngx-editorjs-readme.html":{}}}],["extending",{"_index":443,"title":{},"body":{"interfaces/BasePlugin.html":{},"interfaces/BasePlugin-1.html":{},"interfaces/PluginConfig.html":{},"interfaces/PluginConfig-1.html":{},"interfaces/ToolSettingsMap.html":{},"interfaces/ToolSettingsMap-1.html":{}}}],["extends",{"_index":396,"title":{},"body":{"injectables/ApplicationQuery.html":{},"injectables/ApplicationQuery-1.html":{},"interfaces/ApplicationState.html":{},"interfaces/ApplicationState-1.html":{},"injectables/ApplicationStore.html":{},"injectables/ApplicationStore-1.html":{},"interfaces/Block.html":{},"interfaces/DemoData.html":{},"interfaces/DemoData-1.html":{},"interfaces/Header.html":{},"interfaces/HeaderBlock.html":{},"interfaces/Image.html":{},"interfaces/ImageBlock.html":{},"interfaces/List.html":{},"interfaces/ListBlock.html":{},"injectables/MockNgZone.html":{},"interfaces/NgxEditorJSDemo.html":{},"interfaces/NgxEditorJSDemo-1.html":{},"interfaces/NgxEditorJSDemoData.html":{},"interfaces/NgxEditorJSDemoData-1.html":{},"interfaces/Page.html":{},"interfaces/PageBlock.html":{},"injectables/PagesQuery.html":{},"interfaces/PagesState.html":{},"injectables/PagesStore.html":{},"interfaces/Paragraph.html":{},"interfaces/ParagraphBlock.html":{},"interfaces/Tag.html":{},"interfaces/TinynodeDemos.html":{},"interfaces/TinynodeDemos-1.html":{}}}],["face",{"_index":1646,"title":{},"body":{"contributing.html":{}}}],["factory",{"_index":570,"title":{},"body":{"interfaces/EditorJSConfig.html":{},"modules/EditorJSInstanceModule.html":{},"injectables/EditorJSInstanceService.html":{},"interfaces/NgxEditorJSConfig.html":{},"miscellaneous/variables.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-readme.html":{}}}],["failed",{"_index":1866,"title":{},"body":{"additional-documentation/tinynodes-library-docs/ngx-editorjs-readme/ngx-editorjs-changelog.html":{}}}],["fair",{"_index":1582,"title":{},"body":{"contributing.html":{}}}],["faith",{"_index":1645,"title":{},"body":{"contributing.html":{}}}],["false",{"_index":424,"title":{},"body":{"injectables/ApplicationStore.html":{},"injectables/ApplicationStore-1.html":{},"interfaces/EditorJSConfig.html":{},"injectables/EditorJSInstanceService.html":{},"injectables/MockNgZone.html":{},"components/NgxEditorJSComponent.html":{},"interfaces/NgxEditorJSConfig.html":{},"directives/NgxEditorJSDirective.html":{},"injectables/NgxEditorJSEffects.html":{},"injectables/NgxEditorJSService.html":{},"miscellaneous/variables.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-readme.html":{}}}],["feature",{"_index":1789,"title":{},"body":{"todo.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-readme.html":{}}}],["features",{"_index":754,"title":{},"body":{"modules/MaterialModule.html":{},"modules/NgxEditorJSModule.html":{},"modules/NgxTinynodesCoreModule.html":{},"index.html":{}}}],["file",{"_index":9,"title":{},"body":{"components/AppContainerComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"injectables/AppService.html":{},"injectables/AppService-1.html":{},"interfaces/ApplicationData.html":{},"interfaces/ApplicationData-1.html":{},"modules/ApplicationDataModule.html":{},"injectables/ApplicationQuery.html":{},"injectables/ApplicationQuery-1.html":{},"interfaces/ApplicationState.html":{},"interfaces/ApplicationState-1.html":{},"injectables/ApplicationStore.html":{},"injectables/ApplicationStore-1.html":{},"interfaces/BasePlugin.html":{},"interfaces/BasePlugin-1.html":{},"interfaces/Block.html":{},"interfaces/BlocksMap.html":{},"interfaces/ChangeMap.html":{},"classes/Changed.html":{},"interfaces/DemoData.html":{},"interfaces/DemoData-1.html":{},"interfaces/EditorJSConfig.html":{},"modules/EditorJSInstanceModule.html":{},"injectables/EditorJSInstanceService.html":{},"interfaces/EditorMap.html":{},"interfaces/EventMap.html":{},"interfaces/EventType.html":{},"interfaces/Header.html":{},"interfaces/HeaderBlock.html":{},"components/HomePageComponent.html":{},"interfaces/Image.html":{},"interfaces/ImageBlock.html":{},"interfaces/List.html":{},"interfaces/ListBlock.html":{},"modules/MaterialModule.html":{},"interfaces/MenuGroup.html":{},"interfaces/MenuGroup-1.html":{},"interfaces/MenuItem.html":{},"interfaces/MenuItem-1.html":{},"classes/MockEditorJS.html":{},"injectables/MockNgZone.html":{},"classes/MockPlugin.html":{},"components/NavBarComponent.html":{},"components/NgxEditorJSComponent.html":{},"interfaces/NgxEditorJSConfig.html":{},"interfaces/NgxEditorJSDemo.html":{},"interfaces/NgxEditorJSDemo-1.html":{},"interfaces/NgxEditorJSDemoData.html":{},"interfaces/NgxEditorJSDemoData-1.html":{},"directives/NgxEditorJSDirective.html":{},"injectables/NgxEditorJSEffects.html":{},"modules/NgxEditorJSModule.html":{},"injectables/NgxEditorJSPluginService.html":{},"injectables/NgxEditorJSService.html":{},"modules/NgxEditorjsDemoModule.html":{},"modules/NgxEditorjsNgrxModule.html":{},"modules/NgxEditorjsPluginsModule.html":{},"modules/NgxHideableHeaderDemoModule.html":{},"modules/NgxTinynodesCoreModule.html":{},"classes/NotReady.html":{},"interfaces/Page.html":{},"interfaces/PageBlock.html":{},"components/PageContainerComponent.html":{},"modules/PageStoreModule.html":{},"injectables/PagesQuery.html":{},"injectables/PagesService.html":{},"interfaces/PagesState.html":{},"injectables/PagesStore.html":{},"interfaces/Paragraph.html":{},"interfaces/ParagraphBlock.html":{},"injectables/PluginCode.html":{},"modules/PluginCodeModule.html":{},"interfaces/PluginConfig.html":{},"interfaces/PluginConfig-1.html":{},"injectables/PluginHeader.html":{},"modules/PluginHeaderModule.html":{},"injectables/PluginImage.html":{},"modules/PluginImageModule.html":{},"injectables/PluginLink.html":{},"modules/PluginLinkModule.html":{},"injectables/PluginList.html":{},"modules/PluginListModule.html":{},"injectables/PluginMarker.html":{},"modules/PluginMarkerModule.html":{},"injectables/PluginParagraph.html":{},"modules/PluginParagraphModule.html":{},"injectables/PluginSimpleImage.html":{},"modules/PluginSimpleImageModule.html":{},"classes/Ready.html":{},"interfaces/ReadyMap.html":{},"classes/SaveEnd.html":{},"classes/SaveStart.html":{},"components/SidebarComponent.html":{},"interfaces/Tag.html":{},"classes/TestClass.html":{},"interfaces/TinynodeDemos.html":{},"interfaces/TinynodeDemos-1.html":{},"interfaces/ToolSettingsMap.html":{},"interfaces/ToolSettingsMap-1.html":{},"contributing.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-readme/ngx-editorjs-changelog.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-plugins-readme.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-plugins-readme/ngx-editorjs-plugins-changelog.html":{}}}],["filed",{"_index":1445,"title":{},"body":{"changelog.html":{}}}],["files",{"_index":1490,"title":{},"body":{"contributing.html":{},"license.html":{},"additional-documentation/tinynodes-library-docs.html":{}}}],["filter",{"_index":321,"title":{},"body":{"injectables/AppService.html":{},"injectables/AppService-1.html":{},"injectables/EditorJSInstanceService.html":{},"injectables/NgxEditorJSService.html":{}}}],["filter(([event",{"_index":696,"title":{},"body":{"injectables/EditorJSInstanceService.html":{}}}],["filter(([key",{"_index":1029,"title":{},"body":{"injectables/NgxEditorJSPluginService.html":{}}}],["filter(([ready",{"_index":1084,"title":{},"body":{"injectables/NgxEditorJSService.html":{}}}],["filter(data",{"_index":339,"title":{},"body":{"injectables/AppService.html":{},"injectables/AppService-1.html":{}}}],["filter(editor",{"_index":676,"title":{},"body":{"injectables/EditorJSInstanceService.html":{}}}],["filter(menus",{"_index":347,"title":{},"body":{"injectables/AppService.html":{},"injectables/AppService-1.html":{}}}],["finaltools",{"_index":1034,"title":{},"body":{"injectables/NgxEditorJSPluginService.html":{}}}],["find",{"_index":746,"title":{},"body":{"components/HomePageComponent.html":{},"changelog.html":{},"index.html":{},"additional-documentation/tinynodes-library-docs.html":{}}}],["first",{"_index":557,"title":{},"body":{"interfaces/EditorJSConfig.html":{},"components/NgxEditorJSComponent.html":{},"interfaces/NgxEditorJSConfig.html":{},"directives/NgxEditorJSDirective.html":{},"changelog.html":{},"contributing.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-readme.html":{}}}],["fitness",{"_index":1755,"title":{},"body":{"license.html":{}}}],["fixes",{"_index":1864,"title":{},"body":{"additional-documentation/tinynodes-library-docs/ngx-editorjs-readme/ngx-editorjs-changelog.html":{}}}],["flex",{"_index":856,"title":{},"body":{"components/NgxEditorJSComponent.html":{},"components/PageContainerComponent.html":{}}}],["flexlayoutmodule",{"_index":224,"title":{},"body":{"modules/AppModule.html":{}}}],["fn",{"_index":792,"title":{},"body":{"injectables/MockNgZone.html":{}}}],["focus",{"_index":556,"title":{},"body":{"interfaces/EditorJSConfig.html":{},"components/NgxEditorJSComponent.html":{},"interfaces/NgxEditorJSConfig.html":{},"directives/NgxEditorJSDirective.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-readme.html":{}}}],["focusing",{"_index":1545,"title":{},"body":{"contributing.html":{}}}],["folder",{"_index":1708,"title":{},"body":{"index.html":{}}}],["follow",{"_index":1475,"title":{},"body":{"contributing.html":{}}}],["following",{"_index":1741,"title":{},"body":{"license.html":{}}}],["for_root_options_token",{"_index":571,"title":{},"body":{"interfaces/EditorJSConfig.html":{},"interfaces/NgxEditorJSConfig.html":{},"modules/NgxEditorJSModule.html":{},"miscellaneous/variables.html":{}}}],["foreach(([key",{"_index":1024,"title":{},"body":{"injectables/NgxEditorJSPluginService.html":{}}}],["format",{"_index":1842,"title":{},"body":{"additional-documentation/tinynodes-library-docs/ngx-editorjs-readme/ngx-editorjs-changelog.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-plugins-readme/ngx-editorjs-plugins-changelog.html":{}}}],["formatted",{"_index":1207,"title":{},"body":{"components/PageContainerComponent.html":{}}}],["forms",{"_index":1422,"title":{},"body":{"changelog.html":{}}}],["formsmodule",{"_index":982,"title":{},"body":{"modules/NgxEditorJSModule.html":{}}}],["forroot",{"_index":971,"title":{},"body":{"modules/NgxEditorJSModule.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-readme.html":{}}}],["forroot(@optional",{"_index":993,"title":{},"body":{"modules/NgxEditorJSModule.html":{}}}],["forroot(config",{"_index":974,"title":{},"body":{"modules/NgxEditorJSModule.html":{}}}],["fostering",{"_index":1503,"title":{},"body":{"contributing.html":{}}}],["free",{"_index":1510,"title":{},"body":{"contributing.html":{},"license.html":{}}}],["full",{"_index":277,"title":{},"body":{"modules/AppRoutingModule.html":{},"index.html":{},"todo.html":{},"miscellaneous/variables.html":{}}}],["fully",{"_index":1701,"title":{},"body":{"index.html":{}}}],["function",{"_index":434,"title":{},"body":{"interfaces/BasePlugin.html":{},"interfaces/BasePlugin-1.html":{},"classes/MockEditorJS.html":{},"injectables/MockNgZone.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-readme.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-readme/ngx-editorjs-changelog.html":{}}}],["functions",{"_index":391,"title":{"miscellaneous/functions.html":{}},"body":{"modules/ApplicationDataModule.html":{},"miscellaneous/functions.html":{}}}],["furnished",{"_index":1740,"title":{},"body":{"license.html":{}}}],["further",{"_index":1619,"title":{},"body":{"contributing.html":{}}}],["future",{"_index":1825,"title":{},"body":{"additional-documentation/tinynodes-library-docs/ngx-editorjs-readme.html":{}}}],["gender",{"_index":1519,"title":{},"body":{"contributing.html":{}}}],["general",{"_index":1714,"title":{},"body":{"license.html":{},"todo.html":{}}}],["generate",{"_index":1850,"title":{},"body":{"additional-documentation/tinynodes-library-docs/ngx-editorjs-readme/ngx-editorjs-changelog.html":{}}}],["generated",{"_index":1711,"title":{},"body":{"index.html":{},"additional-documentation/tinynodes-library-docs.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-readme/ngx-editorjs-changelog.html":{}}}],["get(key",{"_index":1008,"title":{},"body":{"injectables/NgxEditorJSPluginService.html":{}}}],["getasjson",{"_index":1205,"title":{},"body":{"components/PageContainerComponent.html":{}}}],["getblocks",{"_index":595,"title":{},"body":{"injectables/EditorJSInstanceService.html":{},"injectables/NgxEditorJSService.html":{},"components/PageContainerComponent.html":{}}}],["getblocks(holder",{"_index":627,"title":{},"body":{"injectables/EditorJSInstanceService.html":{},"injectables/NgxEditorJSService.html":{}}}],["getchanged",{"_index":596,"title":{},"body":{"injectables/EditorJSInstanceService.html":{}}}],["getchanged(holder",{"_index":629,"title":{},"body":{"injectables/EditorJSInstanceService.html":{}}}],["getdemodata",{"_index":290,"title":{},"body":{"injectables/AppService.html":{},"injectables/AppService-1.html":{}}}],["getdemodata(demoname",{"_index":302,"title":{},"body":{"injectables/AppService.html":{},"injectables/AppService-1.html":{}}}],["geteditor",{"_index":904,"title":{},"body":{"directives/NgxEditorJSDirective.html":{},"injectables/NgxEditorJSService.html":{}}}],["geteditor(holder",{"_index":1051,"title":{},"body":{"injectables/NgxEditorJSService.html":{}}}],["getgreeting",{"_index":1799,"title":{},"body":{"miscellaneous/variables.html":{}}}],["gethidden",{"_index":317,"title":{},"body":{"injectables/AppService.html":{},"injectables/AppService-1.html":{}}}],["getinstance",{"_index":597,"title":{},"body":{"injectables/EditorJSInstanceService.html":{}}}],["getinstance(holder",{"_index":631,"title":{},"body":{"injectables/EditorJSInstanceService.html":{}}}],["getmainmenu",{"_index":76,"title":{},"body":{"components/AppContainerComponent.html":{}}}],["getmenu",{"_index":291,"title":{},"body":{"injectables/AppService.html":{},"injectables/AppService-1.html":{},"components/HomePageComponent.html":{}}}],["getmenu(key",{"_index":309,"title":{},"body":{"injectables/AppService.html":{},"injectables/AppService-1.html":{}}}],["getopensourcemenu",{"_index":82,"title":{},"body":{"components/AppContainerComponent.html":{}}}],["getpages",{"_index":1203,"title":{},"body":{"components/PageContainerComponent.html":{},"injectables/PagesService.html":{}}}],["getpanelopen",{"_index":1200,"title":{},"body":{"components/PageContainerComponent.html":{}}}],["getplugins",{"_index":1015,"title":{},"body":{"injectables/NgxEditorJSPluginService.html":{}}}],["getprojectsmenu",{"_index":79,"title":{},"body":{"components/AppContainerComponent.html":{}}}],["getready",{"_index":598,"title":{},"body":{"injectables/EditorJSInstanceService.html":{}}}],["getready(holder",{"_index":633,"title":{},"body":{"injectables/EditorJSInstanceService.html":{}}}],["gets",{"_index":311,"title":{},"body":{"injectables/AppService.html":{},"injectables/AppService-1.html":{},"components/PageContainerComponent.html":{}}}],["getservice",{"_index":906,"title":{},"body":{"directives/NgxEditorJSDirective.html":{}}}],["getsidebarhidden",{"_index":74,"title":{},"body":{"components/AppContainerComponent.html":{}}}],["getters",{"_index":1867,"title":{},"body":{"additional-documentation/tinynodes-library-docs/ngx-editorjs-readme/ngx-editorjs-changelog.html":{}}}],["getting",{"_index":1411,"title":{"changelog.html":{},"contributing.html":{},"index.html":{},"license.html":{},"todo.html":{}},"body":{}}],["gettools",{"_index":1000,"title":{},"body":{"injectables/NgxEditorJSPluginService.html":{}}}],["gettools(exclude",{"_index":1010,"title":{},"body":{"injectables/NgxEditorJSPluginService.html":{}}}],["github",{"_index":1250,"title":{},"body":{"components/PageContainerComponent.html":{},"modules/PluginCodeModule.html":{},"modules/PluginHeaderModule.html":{},"modules/PluginImageModule.html":{},"modules/PluginLinkModule.html":{},"modules/PluginListModule.html":{},"modules/PluginMarkerModule.html":{},"modules/PluginParagraphModule.html":{},"modules/PluginSimpleImageModule.html":{},"additional-documentation/tinynodes-library-docs.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-readme.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-plugins-readme.html":{}}}],["good",{"_index":1463,"title":{},"body":{"changelog.html":{},"contributing.html":{}}}],["gracefully",{"_index":1541,"title":{},"body":{"contributing.html":{}}}],["granted",{"_index":1719,"title":{},"body":{"license.html":{}}}],["graph",{"_index":1773,"title":{},"body":{"modules.html":{}}}],["group",{"_index":378,"title":{},"body":{"interfaces/ApplicationData.html":{},"interfaces/ApplicationData-1.html":{},"interfaces/MenuGroup.html":{},"interfaces/MenuGroup-1.html":{},"interfaces/MenuItem.html":{},"interfaces/MenuItem-1.html":{}}}],["groups",{"_index":365,"title":{},"body":{"interfaces/ApplicationData.html":{},"interfaces/ApplicationData-1.html":{},"interfaces/MenuGroup.html":{},"interfaces/MenuGroup-1.html":{},"interfaces/MenuItem.html":{},"interfaces/MenuItem-1.html":{}}}],["guid",{"_index":1295,"title":{},"body":{"injectables/PagesService.html":{}}}],["hammerjs",{"_index":1676,"title":{},"body":{"dependencies.html":{}}}],["handle",{"_index":693,"title":{},"body":{"injectables/EditorJSInstanceService.html":{},"changelog.html":{}}}],["handler",{"_index":395,"title":{},"body":{"injectables/ApplicationQuery.html":{},"injectables/ApplicationQuery-1.html":{},"injectables/EditorJSInstanceService.html":{}}}],["handles",{"_index":703,"title":{},"body":{"injectables/EditorJSInstanceService.html":{}}}],["handling",{"_index":1832,"title":{},"body":{"additional-documentation/tinynodes-library-docs/ngx-editorjs-readme.html":{}}}],["harassing",{"_index":1623,"title":{},"body":{"contributing.html":{}}}],["harassment",{"_index":1509,"title":{},"body":{"contributing.html":{}}}],["harmful",{"_index":1601,"title":{},"body":{"contributing.html":{}}}],["haschanged",{"_index":1037,"title":{},"body":{"injectables/NgxEditorJSService.html":{}}}],["haschanged(holder",{"_index":1057,"title":{},"body":{"injectables/NgxEditorJSService.html":{}}}],["header",{"_index":471,"title":{"interfaces/Header.html":{}},"body":{"interfaces/Block.html":{},"interfaces/Header.html":{},"interfaces/HeaderBlock.html":{},"interfaces/Image.html":{},"interfaces/ImageBlock.html":{},"interfaces/List.html":{},"interfaces/ListBlock.html":{},"modules/NgxHideableHeaderDemoModule.html":{},"components/PageContainerComponent.html":{},"interfaces/Paragraph.html":{},"interfaces/ParagraphBlock.html":{},"injectables/PluginHeader.html":{},"modules/PluginHeaderModule.html":{},"dependencies.html":{},"miscellaneous/variables.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-readme.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-readme/ngx-editorjs-changelog.html":{}}}],["header.plugin",{"_index":1332,"title":{},"body":{"modules/PluginHeaderModule.html":{}}}],["headerblock",{"_index":475,"title":{"interfaces/HeaderBlock.html":{}},"body":{"interfaces/Block.html":{},"interfaces/Header.html":{},"interfaces/HeaderBlock.html":{},"interfaces/Image.html":{},"interfaces/ImageBlock.html":{},"interfaces/List.html":{},"interfaces/ListBlock.html":{},"interfaces/Paragraph.html":{},"interfaces/ParagraphBlock.html":{},"miscellaneous/typealiases.html":{}}}],["height",{"_index":129,"title":{},"body":{"components/AppContainerComponent.html":{},"interfaces/EditorJSConfig.html":{},"components/NavBarComponent.html":{},"components/NgxEditorJSComponent.html":{},"interfaces/NgxEditorJSConfig.html":{},"directives/NgxEditorJSDirective.html":{},"components/PageContainerComponent.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-readme.html":{}}}],["helper",{"_index":390,"title":{},"body":{"modules/ApplicationDataModule.html":{}}}],["helpers",{"_index":1785,"title":{},"body":{"todo.html":{}}}],["here",{"_index":287,"title":{},"body":{"injectables/AppService.html":{},"injectables/AppService-1.html":{},"additional-documentation/tinynodes-library-docs.html":{}}}],["hereby",{"_index":1718,"title":{},"body":{"license.html":{}}}],["hidden",{"_index":118,"title":{},"body":{"components/AppContainerComponent.html":{},"injectables/AppService.html":{},"injectables/AppService-1.html":{},"interfaces/ApplicationData.html":{},"interfaces/ApplicationData-1.html":{},"interfaces/ApplicationState.html":{},"interfaces/ApplicationState-1.html":{},"injectables/ApplicationStore.html":{},"injectables/ApplicationStore-1.html":{},"interfaces/DemoData.html":{},"interfaces/DemoData-1.html":{},"interfaces/MenuGroup.html":{},"interfaces/MenuGroup-1.html":{},"interfaces/MenuItem.html":{},"interfaces/MenuItem-1.html":{},"interfaces/NgxEditorJSDemo.html":{},"interfaces/NgxEditorJSDemo-1.html":{},"interfaces/NgxEditorJSDemoData.html":{},"interfaces/NgxEditorJSDemoData-1.html":{},"interfaces/TinynodeDemos.html":{},"interfaces/TinynodeDemos-1.html":{},"miscellaneous/enumerations.html":{}}}],["hideable",{"_index":1157,"title":{},"body":{"modules/NgxHideableHeaderDemoModule.html":{},"dependencies.html":{},"miscellaneous/variables.html":{}}}],["hides",{"_index":1828,"title":{},"body":{"additional-documentation/tinynodes-library-docs/ngx-editorjs-readme.html":{}}}],["hidetoolbar",{"_index":537,"title":{},"body":{"interfaces/EditorJSConfig.html":{},"components/NgxEditorJSComponent.html":{},"interfaces/NgxEditorJSConfig.html":{},"directives/NgxEditorJSDirective.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-readme.html":{}}}],["hold",{"_index":550,"title":{},"body":{"interfaces/EditorJSConfig.html":{},"components/NgxEditorJSComponent.html":{},"interfaces/NgxEditorJSConfig.html":{},"directives/NgxEditorJSDirective.html":{}}}],["holder",{"_index":529,"title":{},"body":{"classes/Changed.html":{},"interfaces/EditorJSConfig.html":{},"injectables/EditorJSInstanceService.html":{},"components/NgxEditorJSComponent.html":{},"interfaces/NgxEditorJSConfig.html":{},"directives/NgxEditorJSDirective.html":{},"injectables/NgxEditorJSEffects.html":{},"injectables/NgxEditorJSService.html":{},"classes/NotReady.html":{},"components/PageContainerComponent.html":{},"classes/Ready.html":{},"classes/SaveEnd.html":{},"classes/SaveStart.html":{},"miscellaneous/variables.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-readme.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-readme/ngx-editorjs-changelog.html":{}}}],["holders",{"_index":1760,"title":{},"body":{"license.html":{}}}],["home",{"_index":174,"title":{},"body":{"components/AppContainerComponent.html":{},"modules/AppRoutingModule.html":{},"components/HomePageComponent.html":{},"components/NavBarComponent.html":{},"components/NgxEditorJSComponent.html":{},"components/PageContainerComponent.html":{},"components/SidebarComponent.html":{},"miscellaneous/variables.html":{}}}],["homepagecomponent",{"_index":173,"title":{"components/HomePageComponent.html":{}},"body":{"components/AppContainerComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"components/HomePageComponent.html":{},"components/NavBarComponent.html":{},"components/NgxEditorJSComponent.html":{},"components/PageContainerComponent.html":{},"components/SidebarComponent.html":{},"overview.html":{},"miscellaneous/variables.html":{}}}],["host",{"_index":852,"title":{},"body":{"components/NgxEditorJSComponent.html":{},"components/PageContainerComponent.html":{}}}],["html",{"_index":167,"title":{},"body":{"components/AppContainerComponent.html":{},"components/HomePageComponent.html":{},"components/NavBarComponent.html":{},"components/NgxEditorJSComponent.html":{},"components/PageContainerComponent.html":{},"components/SidebarComponent.html":{}}}],["http",{"_index":295,"title":{},"body":{"injectables/AppService.html":{},"injectables/AppService-1.html":{}}}],["http://contributor",{"_index":1657,"title":{},"body":{"contributing.html":{}}}],["httpclient",{"_index":220,"title":{},"body":{"modules/AppModule.html":{},"injectables/AppService.html":{},"injectables/AppService-1.html":{}}}],["httpclientmodule",{"_index":221,"title":{},"body":{"modules/AppModule.html":{}}}],["i'll",{"_index":1457,"title":{},"body":{"changelog.html":{}}}],["i'm",{"_index":1425,"title":{},"body":{"changelog.html":{}}}],["i've",{"_index":1426,"title":{},"body":{"changelog.html":{}}}],["icon",{"_index":150,"title":{},"body":{"components/AppContainerComponent.html":{},"interfaces/ApplicationData.html":{},"interfaces/ApplicationData-1.html":{},"interfaces/MenuGroup.html":{},"interfaces/MenuGroup-1.html":{},"interfaces/MenuItem.html":{},"interfaces/MenuItem-1.html":{},"components/NavBarComponent.html":{}}}],["id",{"_index":549,"title":{},"body":{"interfaces/EditorJSConfig.html":{},"injectables/EditorJSInstanceService.html":{},"components/NgxEditorJSComponent.html":{},"interfaces/NgxEditorJSConfig.html":{},"directives/NgxEditorJSDirective.html":{},"injectables/NgxEditorJSService.html":{},"interfaces/Page.html":{},"interfaces/PageBlock.html":{},"components/PageContainerComponent.html":{},"injectables/PagesService.html":{},"interfaces/Tag.html":{},"miscellaneous/variables.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-readme.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-readme/ngx-editorjs-changelog.html":{}}}],["identity",{"_index":1520,"title":{},"body":{"contributing.html":{}}}],["image",{"_index":476,"title":{"interfaces/Image.html":{}},"body":{"interfaces/Block.html":{},"interfaces/Header.html":{},"interfaces/HeaderBlock.html":{},"interfaces/Image.html":{},"interfaces/ImageBlock.html":{},"interfaces/List.html":{},"interfaces/ListBlock.html":{},"components/PageContainerComponent.html":{},"interfaces/Paragraph.html":{},"interfaces/ParagraphBlock.html":{},"injectables/PluginImage.html":{},"injectables/PluginSimpleImage.html":{},"modules/PluginSimpleImageModule.html":{}}}],["image.module",{"_index":1155,"title":{},"body":{"modules/NgxEditorjsPluginsModule.html":{}}}],["image.module.ts",{"_index":1390,"title":{},"body":{"modules/PluginSimpleImageModule.html":{}}}],["image.plugin",{"_index":1341,"title":{},"body":{"modules/PluginImageModule.html":{},"modules/PluginSimpleImageModule.html":{}}}],["image.plugin.ts",{"_index":1384,"title":{},"body":{"injectables/PluginSimpleImage.html":{}}}],["image.plugin.ts:14",{"_index":1386,"title":{},"body":{"injectables/PluginSimpleImage.html":{}}}],["image/simple",{"_index":1154,"title":{},"body":{"modules/NgxEditorjsPluginsModule.html":{},"injectables/PluginSimpleImage.html":{},"modules/PluginSimpleImageModule.html":{}}}],["imageblock",{"_index":485,"title":{"interfaces/ImageBlock.html":{}},"body":{"interfaces/Block.html":{},"interfaces/Header.html":{},"interfaces/HeaderBlock.html":{},"interfaces/Image.html":{},"interfaces/ImageBlock.html":{},"interfaces/List.html":{},"interfaces/ListBlock.html":{},"interfaces/Paragraph.html":{},"interfaces/ParagraphBlock.html":{},"miscellaneous/typealiases.html":{}}}],["imagery",{"_index":1554,"title":{},"body":{"contributing.html":{}}}],["implementation",{"_index":785,"title":{},"body":{"injectables/MockNgZone.html":{}}}],["implemented",{"_index":1814,"title":{},"body":{"additional-documentation/tinynodes-library-docs/ngx-editorjs-readme.html":{}}}],["implements",{"_index":18,"title":{},"body":{"components/AppContainerComponent.html":{},"classes/Changed.html":{},"classes/MockEditorJS.html":{},"classes/MockPlugin.html":{},"directives/NgxEditorJSDirective.html":{},"classes/NotReady.html":{},"components/PageContainerComponent.html":{},"injectables/PluginCode.html":{},"injectables/PluginHeader.html":{},"injectables/PluginImage.html":{},"injectables/PluginLink.html":{},"injectables/PluginList.html":{},"injectables/PluginMarker.html":{},"injectables/PluginParagraph.html":{},"injectables/PluginSimpleImage.html":{},"classes/Ready.html":{},"classes/SaveEnd.html":{},"classes/SaveStart.html":{},"classes/TestClass.html":{}}}],["implied",{"_index":1751,"title":{},"body":{"license.html":{}}}],["import",{"_index":85,"title":{},"body":{"components/AppContainerComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"injectables/AppService.html":{},"injectables/AppService-1.html":{},"interfaces/ApplicationData.html":{},"interfaces/ApplicationData-1.html":{},"modules/ApplicationDataModule.html":{},"injectables/ApplicationQuery.html":{},"injectables/ApplicationQuery-1.html":{},"interfaces/ApplicationState.html":{},"interfaces/ApplicationState-1.html":{},"injectables/ApplicationStore.html":{},"injectables/ApplicationStore-1.html":{},"interfaces/BasePlugin.html":{},"interfaces/BasePlugin-1.html":{},"interfaces/BlocksMap.html":{},"interfaces/ChangeMap.html":{},"classes/Changed.html":{},"interfaces/DemoData.html":{},"interfaces/DemoData-1.html":{},"interfaces/EditorJSConfig.html":{},"modules/EditorJSInstanceModule.html":{},"injectables/EditorJSInstanceService.html":{},"interfaces/EditorMap.html":{},"interfaces/EventMap.html":{},"interfaces/EventType.html":{},"components/HomePageComponent.html":{},"modules/MaterialModule.html":{},"interfaces/MenuGroup.html":{},"interfaces/MenuGroup-1.html":{},"interfaces/MenuItem.html":{},"interfaces/MenuItem-1.html":{},"classes/MockEditorJS.html":{},"injectables/MockNgZone.html":{},"classes/MockPlugin.html":{},"components/NavBarComponent.html":{},"components/NgxEditorJSComponent.html":{},"interfaces/NgxEditorJSConfig.html":{},"interfaces/NgxEditorJSDemo.html":{},"interfaces/NgxEditorJSDemo-1.html":{},"interfaces/NgxEditorJSDemoData.html":{},"interfaces/NgxEditorJSDemoData-1.html":{},"directives/NgxEditorJSDirective.html":{},"injectables/NgxEditorJSEffects.html":{},"modules/NgxEditorJSModule.html":{},"injectables/NgxEditorJSPluginService.html":{},"injectables/NgxEditorJSService.html":{},"modules/NgxEditorjsDemoModule.html":{},"modules/NgxEditorjsNgrxModule.html":{},"modules/NgxEditorjsPluginsModule.html":{},"modules/NgxHideableHeaderDemoModule.html":{},"modules/NgxTinynodesCoreModule.html":{},"classes/NotReady.html":{},"interfaces/Page.html":{},"interfaces/PageBlock.html":{},"components/PageContainerComponent.html":{},"modules/PageStoreModule.html":{},"injectables/PagesQuery.html":{},"injectables/PagesService.html":{},"interfaces/PagesState.html":{},"injectables/PagesStore.html":{},"injectables/PluginCode.html":{},"modules/PluginCodeModule.html":{},"interfaces/PluginConfig.html":{},"interfaces/PluginConfig-1.html":{},"injectables/PluginHeader.html":{},"modules/PluginHeaderModule.html":{},"injectables/PluginImage.html":{},"modules/PluginImageModule.html":{},"injectables/PluginLink.html":{},"modules/PluginLinkModule.html":{},"injectables/PluginList.html":{},"modules/PluginListModule.html":{},"injectables/PluginMarker.html":{},"modules/PluginMarkerModule.html":{},"injectables/PluginParagraph.html":{},"modules/PluginParagraphModule.html":{},"injectables/PluginSimpleImage.html":{},"modules/PluginSimpleImageModule.html":{},"classes/Ready.html":{},"interfaces/ReadyMap.html":{},"classes/SaveEnd.html":{},"classes/SaveStart.html":{},"components/SidebarComponent.html":{},"interfaces/Tag.html":{},"classes/TestClass.html":{},"interfaces/TinynodeDemos.html":{},"interfaces/TinynodeDemos-1.html":{},"interfaces/ToolSettingsMap.html":{},"interfaces/ToolSettingsMap-1.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-readme.html":{}}}],["imported",{"_index":1875,"title":{},"body":{"additional-documentation/tinynodes-library-docs/ngx-editorjs-readme/ngx-editorjs-changelog.html":{}}}],["importing",{"_index":1143,"title":{},"body":{"modules/NgxEditorjsPluginsModule.html":{}}}],["imports",{"_index":219,"title":{},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"modules/MaterialModule.html":{},"modules/NgxEditorJSModule.html":{},"modules/NgxEditorjsDemoModule.html":{},"modules/NgxEditorjsNgrxModule.html":{},"modules/NgxEditorjsPluginsModule.html":{},"modules/NgxHideableHeaderDemoModule.html":{},"modules/NgxTinynodesCoreModule.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-readme.html":{}}}],["improved",{"_index":1858,"title":{},"body":{"additional-documentation/tinynodes-library-docs/ngx-editorjs-readme/ngx-editorjs-changelog.html":{}}}],["improvments",{"_index":1429,"title":{},"body":{"changelog.html":{}}}],["inappropriate",{"_index":1572,"title":{},"body":{"contributing.html":{}}}],["incident",{"_index":1640,"title":{},"body":{"contributing.html":{}}}],["include",{"_index":1069,"title":{},"body":{"injectables/NgxEditorJSService.html":{},"modules/NgxEditorjsPluginsModule.html":{},"contributing.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-readme.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-readme/ngx-editorjs-changelog.html":{}}}],["included",{"_index":839,"title":{},"body":{"components/NgxEditorJSComponent.html":{},"directives/NgxEditorJSDirective.html":{},"license.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-readme/ngx-editorjs-changelog.html":{}}}],["includes",{"_index":1165,"title":{},"body":{"modules/NgxTinynodesCoreModule.html":{},"contributing.html":{}}}],["includetools",{"_index":827,"title":{},"body":{"components/NgxEditorJSComponent.html":{},"directives/NgxEditorJSDirective.html":{},"injectables/NgxEditorJSService.html":{}}}],["including",{"_index":1728,"title":{},"body":{"license.html":{}}}],["inclusive",{"_index":1534,"title":{},"body":{"contributing.html":{}}}],["increase",{"_index":1487,"title":{},"body":{"contributing.html":{}}}],["index",{"_index":28,"title":{"index.html":{}},"body":{"components/AppContainerComponent.html":{},"injectables/AppService.html":{},"injectables/AppService-1.html":{},"interfaces/ApplicationData.html":{},"interfaces/ApplicationData-1.html":{},"interfaces/ApplicationState.html":{},"interfaces/ApplicationState-1.html":{},"interfaces/BasePlugin.html":{},"interfaces/BasePlugin-1.html":{},"interfaces/Block.html":{},"classes/Changed.html":{},"interfaces/DemoData.html":{},"interfaces/DemoData-1.html":{},"interfaces/EditorJSConfig.html":{},"injectables/EditorJSInstanceService.html":{},"interfaces/EventType.html":{},"interfaces/Header.html":{},"interfaces/HeaderBlock.html":{},"components/HomePageComponent.html":{},"interfaces/Image.html":{},"interfaces/ImageBlock.html":{},"interfaces/List.html":{},"interfaces/ListBlock.html":{},"interfaces/MenuGroup.html":{},"interfaces/MenuGroup-1.html":{},"interfaces/MenuItem.html":{},"interfaces/MenuItem-1.html":{},"classes/MockEditorJS.html":{},"injectables/MockNgZone.html":{},"classes/MockPlugin.html":{},"components/NavBarComponent.html":{},"components/NgxEditorJSComponent.html":{},"interfaces/NgxEditorJSConfig.html":{},"interfaces/NgxEditorJSDemo.html":{},"interfaces/NgxEditorJSDemo-1.html":{},"directives/NgxEditorJSDirective.html":{},"injectables/NgxEditorJSEffects.html":{},"injectables/NgxEditorJSPluginService.html":{},"injectables/NgxEditorJSService.html":{},"classes/NotReady.html":{},"interfaces/Page.html":{},"interfaces/PageBlock.html":{},"components/PageContainerComponent.html":{},"injectables/PagesService.html":{},"interfaces/Paragraph.html":{},"interfaces/ParagraphBlock.html":{},"injectables/PluginCode.html":{},"injectables/PluginHeader.html":{},"injectables/PluginImage.html":{},"injectables/PluginLink.html":{},"injectables/PluginList.html":{},"injectables/PluginMarker.html":{},"injectables/PluginParagraph.html":{},"injectables/PluginSimpleImage.html":{},"classes/Ready.html":{},"classes/SaveEnd.html":{},"classes/SaveStart.html":{},"components/SidebarComponent.html":{},"interfaces/Tag.html":{},"classes/TestClass.html":{},"interfaces/TinynodeDemos.html":{},"interfaces/TinynodeDemos-1.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["indexable",{"_index":459,"title":{},"body":{"interfaces/Block.html":{},"interfaces/BlocksMap.html":{},"interfaces/ChangeMap.html":{},"interfaces/EditorMap.html":{},"interfaces/EventMap.html":{},"interfaces/PluginConfig.html":{},"interfaces/PluginConfig-1.html":{},"interfaces/ReadyMap.html":{},"interfaces/ToolSettingsMap.html":{},"interfaces/ToolSettingsMap-1.html":{}}}],["individual",{"_index":1145,"title":{},"body":{"modules/NgxEditorjsPluginsModule.html":{},"contributing.html":{}}}],["info",{"_index":3,"title":{},"body":{"components/AppContainerComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"injectables/AppService.html":{},"injectables/AppService-1.html":{},"interfaces/ApplicationData.html":{},"interfaces/ApplicationData-1.html":{},"modules/ApplicationDataModule.html":{},"injectables/ApplicationQuery.html":{},"injectables/ApplicationQuery-1.html":{},"interfaces/ApplicationState.html":{},"interfaces/ApplicationState-1.html":{},"injectables/ApplicationStore.html":{},"injectables/ApplicationStore-1.html":{},"interfaces/BasePlugin.html":{},"interfaces/BasePlugin-1.html":{},"interfaces/Block.html":{},"interfaces/BlocksMap.html":{},"interfaces/ChangeMap.html":{},"classes/Changed.html":{},"interfaces/DemoData.html":{},"interfaces/DemoData-1.html":{},"interfaces/EditorJSConfig.html":{},"modules/EditorJSInstanceModule.html":{},"injectables/EditorJSInstanceService.html":{},"interfaces/EditorMap.html":{},"interfaces/EventMap.html":{},"interfaces/EventType.html":{},"interfaces/Header.html":{},"interfaces/HeaderBlock.html":{},"components/HomePageComponent.html":{},"interfaces/Image.html":{},"interfaces/ImageBlock.html":{},"interfaces/List.html":{},"interfaces/ListBlock.html":{},"modules/MaterialModule.html":{},"interfaces/MenuGroup.html":{},"interfaces/MenuGroup-1.html":{},"interfaces/MenuItem.html":{},"interfaces/MenuItem-1.html":{},"classes/MockEditorJS.html":{},"injectables/MockNgZone.html":{},"classes/MockPlugin.html":{},"components/NavBarComponent.html":{},"components/NgxEditorJSComponent.html":{},"interfaces/NgxEditorJSConfig.html":{},"interfaces/NgxEditorJSDemo.html":{},"interfaces/NgxEditorJSDemo-1.html":{},"interfaces/NgxEditorJSDemoData.html":{},"interfaces/NgxEditorJSDemoData-1.html":{},"directives/NgxEditorJSDirective.html":{},"injectables/NgxEditorJSEffects.html":{},"modules/NgxEditorJSModule.html":{},"injectables/NgxEditorJSPluginService.html":{},"injectables/NgxEditorJSService.html":{},"modules/NgxEditorjsDemoModule.html":{},"modules/NgxEditorjsNgrxModule.html":{},"modules/NgxEditorjsPluginsModule.html":{},"modules/NgxHideableHeaderDemoModule.html":{},"modules/NgxTinynodesCoreModule.html":{},"classes/NotReady.html":{},"interfaces/Page.html":{},"interfaces/PageBlock.html":{},"components/PageContainerComponent.html":{},"modules/PageStoreModule.html":{},"injectables/PagesQuery.html":{},"injectables/PagesService.html":{},"interfaces/PagesState.html":{},"injectables/PagesStore.html":{},"interfaces/Paragraph.html":{},"interfaces/ParagraphBlock.html":{},"injectables/PluginCode.html":{},"modules/PluginCodeModule.html":{},"interfaces/PluginConfig.html":{},"interfaces/PluginConfig-1.html":{},"injectables/PluginHeader.html":{},"modules/PluginHeaderModule.html":{},"injectables/PluginImage.html":{},"modules/PluginImageModule.html":{},"injectables/PluginLink.html":{},"modules/PluginLinkModule.html":{},"injectables/PluginList.html":{},"modules/PluginListModule.html":{},"injectables/PluginMarker.html":{},"modules/PluginMarkerModule.html":{},"injectables/PluginParagraph.html":{},"modules/PluginParagraphModule.html":{},"injectables/PluginSimpleImage.html":{},"modules/PluginSimpleImageModule.html":{},"classes/Ready.html":{},"interfaces/ReadyMap.html":{},"classes/SaveEnd.html":{},"classes/SaveStart.html":{},"components/SidebarComponent.html":{},"interfaces/Tag.html":{},"classes/TestClass.html":{},"interfaces/TinynodeDemos.html":{},"interfaces/TinynodeDemos-1.html":{},"interfaces/ToolSettingsMap.html":{},"interfaces/ToolSettingsMap-1.html":{}}}],["information",{"_index":1229,"title":{},"body":{"components/PageContainerComponent.html":{},"contributing.html":{},"index.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-readme.html":{}}}],["init",{"_index":1192,"title":{},"body":{"components/PageContainerComponent.html":{}}}],["initial",{"_index":285,"title":{},"body":{"injectables/AppService.html":{},"injectables/AppService-1.html":{},"interfaces/ApplicationState.html":{},"interfaces/ApplicationState-1.html":{},"interfaces/BasePlugin.html":{},"interfaces/BasePlugin-1.html":{},"interfaces/DemoData.html":{},"interfaces/DemoData-1.html":{},"interfaces/EditorJSConfig.html":{},"components/NgxEditorJSComponent.html":{},"interfaces/NgxEditorJSConfig.html":{},"interfaces/NgxEditorJSDemo.html":{},"interfaces/NgxEditorJSDemo-1.html":{},"interfaces/NgxEditorJSDemoData.html":{},"interfaces/NgxEditorJSDemoData-1.html":{},"directives/NgxEditorJSDirective.html":{},"injectables/NgxEditorJSPluginService.html":{},"injectables/NgxEditorJSService.html":{},"components/PageContainerComponent.html":{},"interfaces/PluginConfig.html":{},"interfaces/PluginConfig-1.html":{},"interfaces/TinynodeDemos.html":{},"interfaces/TinynodeDemos-1.html":{},"interfaces/ToolSettingsMap.html":{},"interfaces/ToolSettingsMap-1.html":{},"miscellaneous/variables.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-readme.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-readme/ngx-editorjs-changelog.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-plugins-readme/ngx-editorjs-plugins-changelog.html":{}}}],["initialblock",{"_index":538,"title":{},"body":{"interfaces/EditorJSConfig.html":{},"components/NgxEditorJSComponent.html":{},"interfaces/NgxEditorJSConfig.html":{},"directives/NgxEditorJSDirective.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-readme.html":{}}}],["initialized",{"_index":62,"title":{},"body":{"components/AppContainerComponent.html":{},"injectables/NgxEditorJSPluginService.html":{}}}],["initialplugins",{"_index":451,"title":{},"body":{"interfaces/BasePlugin.html":{},"interfaces/BasePlugin-1.html":{},"injectables/NgxEditorJSPluginService.html":{},"interfaces/PluginConfig.html":{},"interfaces/PluginConfig-1.html":{},"interfaces/ToolSettingsMap.html":{},"interfaces/ToolSettingsMap-1.html":{},"miscellaneous/variables.html":{}}}],["inject",{"_index":640,"title":{},"body":{"injectables/EditorJSInstanceService.html":{},"injectables/NgxEditorJSPluginService.html":{},"injectables/NgxEditorJSService.html":{}}}],["inject(editorjs_module_import",{"_index":650,"title":{},"body":{"injectables/EditorJSInstanceService.html":{}}}],["inject(ngx_editorjs_config",{"_index":1067,"title":{},"body":{"injectables/NgxEditorJSService.html":{}}}],["injectable",{"_index":279,"title":{"injectables/AppService.html":{},"injectables/AppService-1.html":{},"injectables/ApplicationQuery.html":{},"injectables/ApplicationQuery-1.html":{},"injectables/ApplicationStore.html":{},"injectables/ApplicationStore-1.html":{},"injectables/EditorJSInstanceService.html":{},"injectables/MockNgZone.html":{},"injectables/NgxEditorJSEffects.html":{},"injectables/NgxEditorJSPluginService.html":{},"injectables/NgxEditorJSService.html":{},"injectables/PagesQuery.html":{},"injectables/PagesService.html":{},"injectables/PagesStore.html":{},"injectables/PluginCode.html":{},"injectables/PluginHeader.html":{},"injectables/PluginImage.html":{},"injectables/PluginLink.html":{},"injectables/PluginList.html":{},"injectables/PluginMarker.html":{},"injectables/PluginParagraph.html":{},"injectables/PluginSimpleImage.html":{}},"body":{"injectables/AppService.html":{},"injectables/AppService-1.html":{},"injectables/ApplicationQuery.html":{},"injectables/ApplicationQuery-1.html":{},"injectables/ApplicationStore.html":{},"injectables/ApplicationStore-1.html":{},"modules/EditorJSInstanceModule.html":{},"injectables/EditorJSInstanceService.html":{},"injectables/MockNgZone.html":{},"injectables/NgxEditorJSEffects.html":{},"injectables/NgxEditorJSPluginService.html":{},"injectables/NgxEditorJSService.html":{},"injectables/PagesQuery.html":{},"injectables/PagesService.html":{},"interfaces/PagesState.html":{},"injectables/PagesStore.html":{},"injectables/PluginCode.html":{},"injectables/PluginHeader.html":{},"injectables/PluginImage.html":{},"injectables/PluginLink.html":{},"injectables/PluginList.html":{},"injectables/PluginMarker.html":{},"injectables/PluginParagraph.html":{},"injectables/PluginSimpleImage.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-readme/ngx-editorjs-changelog.html":{}}}],["injectables",{"_index":280,"title":{},"body":{"injectables/AppService.html":{},"injectables/AppService-1.html":{},"injectables/ApplicationQuery.html":{},"injectables/ApplicationQuery-1.html":{},"injectables/ApplicationStore.html":{},"injectables/ApplicationStore-1.html":{},"injectables/EditorJSInstanceService.html":{},"injectables/MockNgZone.html":{},"injectables/NgxEditorJSEffects.html":{},"injectables/NgxEditorJSPluginService.html":{},"injectables/NgxEditorJSService.html":{},"injectables/PagesQuery.html":{},"injectables/PagesService.html":{},"injectables/PagesStore.html":{},"injectables/PluginCode.html":{},"injectables/PluginHeader.html":{},"injectables/PluginImage.html":{},"injectables/PluginLink.html":{},"injectables/PluginList.html":{},"injectables/PluginMarker.html":{},"injectables/PluginParagraph.html":{},"injectables/PluginSimpleImage.html":{},"overview.html":{}}}],["injected",{"_index":573,"title":{},"body":{"interfaces/EditorJSConfig.html":{},"interfaces/NgxEditorJSConfig.html":{},"injectables/NgxEditorJSPluginService.html":{},"miscellaneous/variables.html":{}}}],["injecting",{"_index":569,"title":{},"body":{"interfaces/EditorJSConfig.html":{},"interfaces/NgxEditorJSConfig.html":{},"miscellaneous/variables.html":{}}}],["injection",{"_index":448,"title":{},"body":{"interfaces/BasePlugin.html":{},"interfaces/BasePlugin-1.html":{},"interfaces/EditorJSConfig.html":{},"injectables/EditorJSInstanceService.html":{},"interfaces/NgxEditorJSConfig.html":{},"interfaces/PluginConfig.html":{},"interfaces/PluginConfig-1.html":{},"interfaces/ToolSettingsMap.html":{},"interfaces/ToolSettingsMap-1.html":{},"miscellaneous/variables.html":{}}}],["injectiontoken",{"_index":437,"title":{},"body":{"interfaces/BasePlugin.html":{},"interfaces/BasePlugin-1.html":{},"interfaces/EditorJSConfig.html":{},"injectables/EditorJSInstanceService.html":{},"interfaces/NgxEditorJSConfig.html":{},"interfaces/PluginConfig.html":{},"interfaces/PluginConfig-1.html":{},"interfaces/ToolSettingsMap.html":{},"interfaces/ToolSettingsMap-1.html":{}}}],["injectiontoken('editior_js_instance",{"_index":575,"title":{},"body":{"interfaces/EditorJSConfig.html":{},"interfaces/NgxEditorJSConfig.html":{},"miscellaneous/variables.html":{}}}],["injectiontoken('editorjs_module_import",{"_index":646,"title":{},"body":{"injectables/EditorJSInstanceService.html":{},"miscellaneous/variables.html":{}}}],["injectiontoken('for_root_options_token",{"_index":572,"title":{},"body":{"interfaces/EditorJSConfig.html":{},"interfaces/NgxEditorJSConfig.html":{},"miscellaneous/variables.html":{}}}],["injectiontoken('initialplugins",{"_index":452,"title":{},"body":{"interfaces/BasePlugin.html":{},"interfaces/BasePlugin-1.html":{},"interfaces/PluginConfig.html":{},"interfaces/PluginConfig-1.html":{},"interfaces/ToolSettingsMap.html":{},"interfaces/ToolSettingsMap-1.html":{},"miscellaneous/variables.html":{}}}],["injectiontoken('ngx_editorjs_config",{"_index":567,"title":{},"body":{"interfaces/EditorJSConfig.html":{},"interfaces/NgxEditorJSConfig.html":{},"miscellaneous/variables.html":{}}}],["injectiontoken('userplugins",{"_index":456,"title":{},"body":{"interfaces/BasePlugin.html":{},"interfaces/BasePlugin-1.html":{},"interfaces/PluginConfig.html":{},"interfaces/PluginConfig-1.html":{},"interfaces/ToolSettingsMap.html":{},"interfaces/ToolSettingsMap-1.html":{},"miscellaneous/variables.html":{}}}],["injector",{"_index":584,"title":{},"body":{"modules/EditorJSInstanceModule.html":{},"injectables/NgxEditorJSService.html":{},"changelog.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-readme/ngx-editorjs-changelog.html":{}}}],["injector.module",{"_index":990,"title":{},"body":{"modules/NgxEditorJSModule.html":{}}}],["injector.module.ts",{"_index":581,"title":{},"body":{"modules/EditorJSInstanceModule.html":{}}}],["injector.ts",{"_index":586,"title":{},"body":{"injectables/EditorJSInstanceService.html":{},"miscellaneous/variables.html":{}}}],["injector.ts:100",{"_index":636,"title":{},"body":{"injectables/EditorJSInstanceService.html":{}}}],["injector.ts:108",{"_index":611,"title":{},"body":{"injectables/EditorJSInstanceService.html":{}}}],["injector.ts:117",{"_index":638,"title":{},"body":{"injectables/EditorJSInstanceService.html":{}}}],["injector.ts:128",{"_index":632,"title":{},"body":{"injectables/EditorJSInstanceService.html":{}}}],["injector.ts:139",{"_index":634,"title":{},"body":{"injectables/EditorJSInstanceService.html":{}}}],["injector.ts:150",{"_index":630,"title":{},"body":{"injectables/EditorJSInstanceService.html":{}}}],["injector.ts:161",{"_index":628,"title":{},"body":{"injectables/EditorJSInstanceService.html":{}}}],["injector.ts:172",{"_index":624,"title":{},"body":{"injectables/EditorJSInstanceService.html":{}}}],["injector.ts:265",{"_index":620,"title":{},"body":{"injectables/EditorJSInstanceService.html":{}}}],["injector.ts:55",{"_index":605,"title":{},"body":{"injectables/EditorJSInstanceService.html":{}}}],["injector.ts:74",{"_index":616,"title":{},"body":{"injectables/EditorJSInstanceService.html":{}}}],["inline",{"_index":152,"title":{},"body":{"components/AppContainerComponent.html":{},"components/NavBarComponent.html":{},"modules/NgxEditorjsPluginsModule.html":{},"injectables/PluginMarker.html":{},"modules/PluginMarkerModule.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-plugins-readme.html":{}}}],["input",{"_index":86,"title":{},"body":{"components/AppContainerComponent.html":{},"components/NavBarComponent.html":{},"components/NgxEditorJSComponent.html":{},"directives/NgxEditorJSDirective.html":{},"components/SidebarComponent.html":{},"todo.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-readme.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-readme/ngx-editorjs-changelog.html":{}}}],["inputconfig",{"_index":1696,"title":{},"body":{"miscellaneous/functions.html":{}}}],["inputs",{"_index":36,"title":{},"body":{"components/AppContainerComponent.html":{},"components/NavBarComponent.html":{},"components/NgxEditorJSComponent.html":{},"directives/NgxEditorJSDirective.html":{},"components/SidebarComponent.html":{}}}],["install",{"_index":1479,"title":{},"body":{"contributing.html":{},"dependencies.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-readme.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-plugins-readme.html":{}}}],["installed",{"_index":1818,"title":{},"body":{"additional-documentation/tinynodes-library-docs/ngx-editorjs-readme.html":{}}}],["installing",{"_index":1815,"title":{},"body":{"additional-documentation/tinynodes-library-docs/ngx-editorjs-readme.html":{}}}],["instance",{"_index":399,"title":{},"body":{"injectables/ApplicationQuery.html":{},"injectables/ApplicationQuery-1.html":{},"interfaces/BlocksMap.html":{},"interfaces/ChangeMap.html":{},"interfaces/EditorJSConfig.html":{},"injectables/EditorJSInstanceService.html":{},"interfaces/EditorMap.html":{},"interfaces/EventMap.html":{},"interfaces/EventType.html":{},"components/NgxEditorJSComponent.html":{},"interfaces/NgxEditorJSConfig.html":{},"directives/NgxEditorJSDirective.html":{},"modules/NgxEditorJSModule.html":{},"injectables/NgxEditorJSPluginService.html":{},"injectables/NgxEditorJSService.html":{},"modules/NgxEditorjsNgrxModule.html":{},"components/PageContainerComponent.html":{},"interfaces/ReadyMap.html":{},"changelog.html":{},"index.html":{},"miscellaneous/variables.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-readme.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-readme/ngx-editorjs-changelog.html":{}}}],["instance.api",{"_index":1836,"title":{},"body":{"additional-documentation/tinynodes-library-docs/ngx-editorjs-readme.html":{}}}],["instancedestroyed",{"_index":675,"title":{},"body":{"injectables/EditorJSInstanceService.html":{}}}],["instancedestroyed.complete",{"_index":682,"title":{},"body":{"injectables/EditorJSInstanceService.html":{}}}],["instancedestroyed.next(true",{"_index":681,"title":{},"body":{"injectables/EditorJSInstanceService.html":{}}}],["instances",{"_index":498,"title":{},"body":{"interfaces/BlocksMap.html":{},"interfaces/ChangeMap.html":{},"modules/EditorJSInstanceModule.html":{},"injectables/EditorJSInstanceService.html":{},"interfaces/EditorMap.html":{},"interfaces/EventMap.html":{},"interfaces/EventType.html":{},"injectables/NgxEditorJSPluginService.html":{},"injectables/NgxEditorJSService.html":{},"interfaces/ReadyMap.html":{},"contributing.html":{},"index.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-readme.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-readme/ngx-editorjs-changelog.html":{}}}],["insulting/derogatory",{"_index":1559,"title":{},"body":{"contributing.html":{}}}],["interact",{"_index":1705,"title":{},"body":{"index.html":{}}}],["interactions",{"_index":1476,"title":{},"body":{"contributing.html":{}}}],["interest",{"_index":1502,"title":{},"body":{"contributing.html":{}}}],["interface",{"_index":360,"title":{"interfaces/ApplicationData.html":{},"interfaces/ApplicationData-1.html":{},"interfaces/ApplicationState.html":{},"interfaces/ApplicationState-1.html":{},"interfaces/BasePlugin.html":{},"interfaces/BasePlugin-1.html":{},"interfaces/Block.html":{},"interfaces/BlocksMap.html":{},"interfaces/ChangeMap.html":{},"interfaces/DemoData.html":{},"interfaces/DemoData-1.html":{},"interfaces/EditorJSConfig.html":{},"interfaces/EditorMap.html":{},"interfaces/EventMap.html":{},"interfaces/EventType.html":{},"interfaces/Header.html":{},"interfaces/HeaderBlock.html":{},"interfaces/Image.html":{},"interfaces/ImageBlock.html":{},"interfaces/List.html":{},"interfaces/ListBlock.html":{},"interfaces/MenuGroup.html":{},"interfaces/MenuGroup-1.html":{},"interfaces/MenuItem.html":{},"interfaces/MenuItem-1.html":{},"interfaces/NgxEditorJSConfig.html":{},"interfaces/NgxEditorJSDemo.html":{},"interfaces/NgxEditorJSDemo-1.html":{},"interfaces/NgxEditorJSDemoData.html":{},"interfaces/NgxEditorJSDemoData-1.html":{},"interfaces/Page.html":{},"interfaces/PageBlock.html":{},"interfaces/PagesState.html":{},"interfaces/Paragraph.html":{},"interfaces/ParagraphBlock.html":{},"interfaces/PluginConfig.html":{},"interfaces/PluginConfig-1.html":{},"interfaces/ReadyMap.html":{},"interfaces/Tag.html":{},"interfaces/TinynodeDemos.html":{},"interfaces/TinynodeDemos-1.html":{},"interfaces/ToolSettingsMap.html":{},"interfaces/ToolSettingsMap-1.html":{}},"body":{"interfaces/ApplicationData.html":{},"interfaces/ApplicationData-1.html":{},"interfaces/ApplicationState.html":{},"interfaces/ApplicationState-1.html":{},"interfaces/BasePlugin.html":{},"interfaces/BasePlugin-1.html":{},"interfaces/Block.html":{},"interfaces/BlocksMap.html":{},"interfaces/ChangeMap.html":{},"interfaces/DemoData.html":{},"interfaces/DemoData-1.html":{},"interfaces/EditorJSConfig.html":{},"interfaces/EditorMap.html":{},"interfaces/EventMap.html":{},"interfaces/EventType.html":{},"interfaces/Header.html":{},"interfaces/HeaderBlock.html":{},"interfaces/Image.html":{},"interfaces/ImageBlock.html":{},"interfaces/List.html":{},"interfaces/ListBlock.html":{},"interfaces/MenuGroup.html":{},"interfaces/MenuGroup-1.html":{},"interfaces/MenuItem.html":{},"interfaces/MenuItem-1.html":{},"components/NgxEditorJSComponent.html":{},"interfaces/NgxEditorJSConfig.html":{},"interfaces/NgxEditorJSDemo.html":{},"interfaces/NgxEditorJSDemo-1.html":{},"interfaces/NgxEditorJSDemoData.html":{},"interfaces/NgxEditorJSDemoData-1.html":{},"interfaces/Page.html":{},"interfaces/PageBlock.html":{},"interfaces/PagesState.html":{},"injectables/PagesStore.html":{},"interfaces/Paragraph.html":{},"interfaces/ParagraphBlock.html":{},"interfaces/PluginConfig.html":{},"interfaces/PluginConfig-1.html":{},"interfaces/ReadyMap.html":{},"interfaces/Tag.html":{},"interfaces/TinynodeDemos.html":{},"interfaces/TinynodeDemos-1.html":{},"interfaces/ToolSettingsMap.html":{},"interfaces/ToolSettingsMap-1.html":{},"contributing.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-readme/ngx-editorjs-changelog.html":{}}}],["interfaces",{"_index":361,"title":{},"body":{"interfaces/ApplicationData.html":{},"interfaces/ApplicationData-1.html":{},"interfaces/ApplicationState.html":{},"interfaces/ApplicationState-1.html":{},"interfaces/BasePlugin.html":{},"interfaces/BasePlugin-1.html":{},"interfaces/Block.html":{},"interfaces/BlocksMap.html":{},"interfaces/ChangeMap.html":{},"interfaces/DemoData.html":{},"interfaces/DemoData-1.html":{},"interfaces/EditorJSConfig.html":{},"interfaces/EditorMap.html":{},"interfaces/EventMap.html":{},"interfaces/EventType.html":{},"interfaces/Header.html":{},"interfaces/HeaderBlock.html":{},"interfaces/Image.html":{},"interfaces/ImageBlock.html":{},"interfaces/List.html":{},"interfaces/ListBlock.html":{},"interfaces/MenuGroup.html":{},"interfaces/MenuGroup-1.html":{},"interfaces/MenuItem.html":{},"interfaces/MenuItem-1.html":{},"interfaces/NgxEditorJSConfig.html":{},"interfaces/NgxEditorJSDemo.html":{},"interfaces/NgxEditorJSDemo-1.html":{},"interfaces/NgxEditorJSDemoData.html":{},"interfaces/NgxEditorJSDemoData-1.html":{},"interfaces/Page.html":{},"interfaces/PageBlock.html":{},"interfaces/PagesState.html":{},"interfaces/Paragraph.html":{},"interfaces/ParagraphBlock.html":{},"interfaces/PluginConfig.html":{},"interfaces/PluginConfig-1.html":{},"interfaces/ReadyMap.html":{},"interfaces/Tag.html":{},"interfaces/TinynodeDemos.html":{},"interfaces/TinynodeDemos-1.html":{},"interfaces/ToolSettingsMap.html":{},"interfaces/ToolSettingsMap-1.html":{},"overview.html":{}}}],["internal",{"_index":568,"title":{},"body":{"interfaces/EditorJSConfig.html":{},"injectables/EditorJSInstanceService.html":{},"modules/MaterialModule.html":{},"components/NavBarComponent.html":{},"interfaces/NgxEditorJSConfig.html":{},"components/PageContainerComponent.html":{},"modules/PageStoreModule.html":{},"miscellaneous/variables.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-readme/ngx-editorjs-changelog.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-plugins-readme/ngx-editorjs-plugins-changelog.html":{}}}],["internally",{"_index":1424,"title":{},"body":{"changelog.html":{}}}],["investigated",{"_index":1631,"title":{},"body":{"contributing.html":{}}}],["isready",{"_index":1038,"title":{},"body":{"injectables/NgxEditorJSService.html":{}}}],["isready(holder",{"_index":1061,"title":{},"body":{"injectables/NgxEditorJSService.html":{}}}],["issue",{"_index":1470,"title":{},"body":{"contributing.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-readme/ngx-editorjs-changelog.html":{}}}],["issues",{"_index":1443,"title":{},"body":{"changelog.html":{},"contributing.html":{}}}],["it's",{"_index":896,"title":{},"body":{"directives/NgxEditorJSDirective.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-readme.html":{}}}],["item",{"_index":369,"title":{},"body":{"interfaces/ApplicationData.html":{},"interfaces/ApplicationData-1.html":{},"modules/EditorJSInstanceModule.html":{},"interfaces/MenuGroup.html":{},"interfaces/MenuGroup-1.html":{},"interfaces/MenuItem.html":{},"interfaces/MenuItem-1.html":{}}}],["items",{"_index":142,"title":{},"body":{"components/AppContainerComponent.html":{},"interfaces/ApplicationData.html":{},"interfaces/ApplicationData-1.html":{},"interfaces/Block.html":{},"injectables/EditorJSInstanceService.html":{},"interfaces/Header.html":{},"interfaces/HeaderBlock.html":{},"interfaces/Image.html":{},"interfaces/ImageBlock.html":{},"interfaces/List.html":{},"interfaces/ListBlock.html":{},"interfaces/MenuGroup.html":{},"interfaces/MenuGroup-1.html":{},"interfaces/MenuItem.html":{},"interfaces/MenuItem-1.html":{},"components/NavBarComponent.html":{},"interfaces/Paragraph.html":{},"interfaces/ParagraphBlock.html":{}}}],["js",{"_index":1674,"title":{},"body":{"dependencies.html":{},"miscellaneous/variables.html":{}}}],["js/code",{"_index":1322,"title":{},"body":{"modules/PluginCodeModule.html":{}}}],["js/header",{"_index":1333,"title":{},"body":{"modules/PluginHeaderModule.html":{}}}],["js/image",{"_index":1342,"title":{},"body":{"modules/PluginImageModule.html":{},"modules/PluginSimpleImageModule.html":{}}}],["js/link",{"_index":1351,"title":{},"body":{"modules/PluginLinkModule.html":{}}}],["js/list",{"_index":1360,"title":{},"body":{"modules/PluginListModule.html":{}}}],["js/marker",{"_index":1372,"title":{},"body":{"modules/PluginMarkerModule.html":{}}}],["js/paragraph",{"_index":1381,"title":{},"body":{"modules/PluginParagraphModule.html":{}}}],["json",{"_index":1208,"title":{},"body":{"components/PageContainerComponent.html":{}}}],["json.stringify(blocks",{"_index":1224,"title":{},"body":{"components/PageContainerComponent.html":{}}}],["keep",{"_index":1844,"title":{},"body":{"additional-documentation/tinynodes-library-docs/ngx-editorjs-readme/ngx-editorjs-changelog.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-plugins-readme/ngx-editorjs-plugins-changelog.html":{}}}],["key",{"_index":314,"title":{},"body":{"injectables/AppService.html":{},"injectables/AppService-1.html":{},"interfaces/ApplicationData.html":{},"interfaces/ApplicationData-1.html":{},"interfaces/ApplicationState.html":{},"interfaces/ApplicationState-1.html":{},"interfaces/BasePlugin.html":{},"interfaces/BasePlugin-1.html":{},"interfaces/Block.html":{},"interfaces/BlocksMap.html":{},"interfaces/ChangeMap.html":{},"interfaces/DemoData.html":{},"interfaces/DemoData-1.html":{},"interfaces/EditorMap.html":{},"interfaces/EventMap.html":{},"interfaces/EventType.html":{},"interfaces/Header.html":{},"interfaces/HeaderBlock.html":{},"interfaces/Image.html":{},"interfaces/ImageBlock.html":{},"interfaces/List.html":{},"interfaces/ListBlock.html":{},"interfaces/MenuGroup.html":{},"interfaces/MenuGroup-1.html":{},"interfaces/MenuItem.html":{},"interfaces/MenuItem-1.html":{},"interfaces/NgxEditorJSDemo.html":{},"interfaces/NgxEditorJSDemo-1.html":{},"interfaces/NgxEditorJSDemoData.html":{},"interfaces/NgxEditorJSDemoData-1.html":{},"injectables/NgxEditorJSPluginService.html":{},"interfaces/Page.html":{},"interfaces/PageBlock.html":{},"interfaces/Paragraph.html":{},"interfaces/ParagraphBlock.html":{},"interfaces/PluginConfig.html":{},"interfaces/PluginConfig-1.html":{},"interfaces/ReadyMap.html":{},"interfaces/Tag.html":{},"interfaces/TinynodeDemos.html":{},"interfaces/TinynodeDemos-1.html":{},"interfaces/ToolSettingsMap.html":{},"interfaces/ToolSettingsMap-1.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-readme.html":{}}}],["keys",{"_index":410,"title":{},"body":{"interfaces/ApplicationState.html":{},"interfaces/ApplicationState-1.html":{},"interfaces/DemoData.html":{},"interfaces/DemoData-1.html":{},"interfaces/NgxEditorJSDemo.html":{},"interfaces/NgxEditorJSDemo-1.html":{},"interfaces/NgxEditorJSDemoData.html":{},"interfaces/NgxEditorJSDemoData-1.html":{},"injectables/NgxEditorJSPluginService.html":{},"injectables/NgxEditorJSService.html":{},"interfaces/TinynodeDemos.html":{},"interfaces/TinynodeDemos-1.html":{},"miscellaneous/enumerations.html":{}}}],["kind",{"_index":1749,"title":{},"body":{"license.html":{}}}],["label",{"_index":163,"title":{},"body":{"components/AppContainerComponent.html":{},"interfaces/ApplicationData.html":{},"interfaces/ApplicationData-1.html":{},"interfaces/MenuGroup.html":{},"interfaces/MenuGroup-1.html":{},"interfaces/MenuItem.html":{},"interfaces/MenuItem-1.html":{},"components/NavBarComponent.html":{}}}],["language",{"_index":1535,"title":{},"body":{"contributing.html":{}}}],["last",{"_index":504,"title":{},"body":{"interfaces/BlocksMap.html":{},"interfaces/ChangeMap.html":{},"interfaces/EditorJSConfig.html":{},"interfaces/EditorMap.html":{},"interfaces/EventMap.html":{},"interfaces/EventType.html":{},"components/NgxEditorJSComponent.html":{},"interfaces/NgxEditorJSConfig.html":{},"directives/NgxEditorJSDirective.html":{},"injectables/NgxEditorJSService.html":{},"interfaces/ReadyMap.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-readme.html":{}}}],["layer",{"_index":1480,"title":{},"body":{"contributing.html":{}}}],["layout",{"_index":226,"title":{},"body":{"modules/AppModule.html":{},"dependencies.html":{}}}],["leadership",{"_index":1652,"title":{},"body":{"contributing.html":{}}}],["left",{"_index":747,"title":{},"body":{"components/HomePageComponent.html":{},"components/NgxEditorJSComponent.html":{}}}],["legend",{"_index":166,"title":{},"body":{"components/AppContainerComponent.html":{},"modules/AppModule.html":{},"modules/ApplicationDataModule.html":{},"modules/EditorJSInstanceModule.html":{},"components/HomePageComponent.html":{},"components/NavBarComponent.html":{},"components/NgxEditorJSComponent.html":{},"modules/NgxEditorJSModule.html":{},"modules/NgxEditorjsDemoModule.html":{},"modules/NgxEditorjsNgrxModule.html":{},"modules/NgxEditorjsPluginsModule.html":{},"modules/NgxTinynodesCoreModule.html":{},"components/PageContainerComponent.html":{},"modules/PageStoreModule.html":{},"modules/PluginCodeModule.html":{},"modules/PluginHeaderModule.html":{},"modules/PluginImageModule.html":{},"modules/PluginLinkModule.html":{},"modules/PluginListModule.html":{},"modules/PluginMarkerModule.html":{},"modules/PluginParagraphModule.html":{},"modules/PluginSimpleImageModule.html":{},"components/SidebarComponent.html":{},"overview.html":{}}}],["level",{"_index":472,"title":{},"body":{"interfaces/Block.html":{},"interfaces/Header.html":{},"interfaces/HeaderBlock.html":{},"interfaces/Image.html":{},"interfaces/ImageBlock.html":{},"interfaces/List.html":{},"interfaces/ListBlock.html":{},"interfaces/Paragraph.html":{},"interfaces/ParagraphBlock.html":{},"changelog.html":{},"contributing.html":{}}}],["liability",{"_index":1764,"title":{},"body":{"license.html":{}}}],["liable",{"_index":1761,"title":{},"body":{"license.html":{}}}],["lib/types/config",{"_index":769,"title":{},"body":{"classes/MockEditorJS.html":{},"classes/MockPlugin.html":{},"classes/TestClass.html":{}}}],["lib/types/plugins",{"_index":768,"title":{},"body":{"classes/MockEditorJS.html":{},"classes/MockPlugin.html":{},"classes/TestClass.html":{}}}],["libraries",{"_index":740,"title":{},"body":{"components/HomePageComponent.html":{},"changelog.html":{},"index.html":{},"additional-documentation/tinynodes-library-docs.html":{}}}],["library",{"_index":1416,"title":{"additional-documentation/tinynodes-library-docs.html":{}},"body":{"changelog.html":{},"todo.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-readme.html":{}}}],["libs/.../application.model.ts",{"_index":1687,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["libs/.../blocks.ts",{"_index":1792,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["libs/.../config.ts",{"_index":1795,"title":{},"body":{"miscellaneous/variables.html":{}}}],["libs/.../editor",{"_index":1690,"title":{},"body":{"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["libs/.../editorjs",{"_index":1796,"title":{},"body":{"miscellaneous/variables.html":{}}}],["libs/.../index.ts",{"_index":1693,"title":{},"body":{"miscellaneous/functions.html":{}}}],["libs/.../module",{"_index":1692,"title":{},"body":{"miscellaneous/functions.html":{}}}],["libs/.../ngx",{"_index":1689,"title":{},"body":{"miscellaneous/enumerations.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["libs/.../plugins.ts",{"_index":1801,"title":{},"body":{"miscellaneous/variables.html":{}}}],["libs/ngx",{"_index":281,"title":{},"body":{"injectables/AppService.html":{},"interfaces/ApplicationData.html":{},"modules/ApplicationDataModule.html":{},"injectables/ApplicationQuery.html":{},"interfaces/ApplicationState.html":{},"injectables/ApplicationStore.html":{},"interfaces/BasePlugin.html":{},"interfaces/BasePlugin-1.html":{},"interfaces/Block.html":{},"interfaces/BlocksMap.html":{},"interfaces/ChangeMap.html":{},"classes/Changed.html":{},"interfaces/DemoData.html":{},"interfaces/EditorJSConfig.html":{},"modules/EditorJSInstanceModule.html":{},"injectables/EditorJSInstanceService.html":{},"interfaces/EditorMap.html":{},"interfaces/EventMap.html":{},"interfaces/EventType.html":{},"interfaces/Header.html":{},"interfaces/HeaderBlock.html":{},"interfaces/Image.html":{},"interfaces/ImageBlock.html":{},"interfaces/List.html":{},"interfaces/ListBlock.html":{},"interfaces/MenuGroup.html":{},"interfaces/MenuItem.html":{},"classes/MockEditorJS.html":{},"injectables/MockNgZone.html":{},"classes/MockPlugin.html":{},"components/NgxEditorJSComponent.html":{},"interfaces/NgxEditorJSConfig.html":{},"interfaces/NgxEditorJSDemo.html":{},"interfaces/NgxEditorJSDemoData.html":{},"directives/NgxEditorJSDirective.html":{},"injectables/NgxEditorJSEffects.html":{},"modules/NgxEditorJSModule.html":{},"injectables/NgxEditorJSPluginService.html":{},"injectables/NgxEditorJSService.html":{},"modules/NgxEditorjsDemoModule.html":{},"modules/NgxEditorjsNgrxModule.html":{},"modules/NgxEditorjsPluginsModule.html":{},"modules/NgxHideableHeaderDemoModule.html":{},"modules/NgxTinynodesCoreModule.html":{},"classes/NotReady.html":{},"interfaces/Page.html":{},"interfaces/PageBlock.html":{},"components/PageContainerComponent.html":{},"modules/PageStoreModule.html":{},"injectables/PagesQuery.html":{},"injectables/PagesService.html":{},"interfaces/PagesState.html":{},"injectables/PagesStore.html":{},"interfaces/Paragraph.html":{},"interfaces/ParagraphBlock.html":{},"injectables/PluginCode.html":{},"modules/PluginCodeModule.html":{},"interfaces/PluginConfig.html":{},"interfaces/PluginConfig-1.html":{},"injectables/PluginHeader.html":{},"modules/PluginHeaderModule.html":{},"injectables/PluginImage.html":{},"modules/PluginImageModule.html":{},"injectables/PluginLink.html":{},"modules/PluginLinkModule.html":{},"injectables/PluginList.html":{},"modules/PluginListModule.html":{},"injectables/PluginMarker.html":{},"modules/PluginMarkerModule.html":{},"injectables/PluginParagraph.html":{},"modules/PluginParagraphModule.html":{},"injectables/PluginSimpleImage.html":{},"modules/PluginSimpleImageModule.html":{},"classes/Ready.html":{},"interfaces/ReadyMap.html":{},"classes/SaveEnd.html":{},"classes/SaveStart.html":{},"interfaces/Tag.html":{},"classes/TestClass.html":{},"interfaces/TinynodeDemos.html":{},"interfaces/ToolSettingsMap.html":{},"interfaces/ToolSettingsMap-1.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["licence",{"_index":1716,"title":{},"body":{"license.html":{}}}],["license",{"_index":1713,"title":{"license.html":{}},"body":{}}],["life",{"_index":1833,"title":{},"body":{"additional-documentation/tinynodes-library-docs/ngx-editorjs-readme.html":{}}}],["lightgray",{"_index":140,"title":{},"body":{"components/AppContainerComponent.html":{},"components/NavBarComponent.html":{}}}],["limitation",{"_index":1729,"title":{},"body":{"license.html":{}}}],["limited",{"_index":1752,"title":{},"body":{"license.html":{}}}],["line",{"_index":164,"title":{},"body":{"components/AppContainerComponent.html":{},"components/NavBarComponent.html":{}}}],["link",{"_index":375,"title":{},"body":{"interfaces/ApplicationData.html":{},"interfaces/ApplicationData-1.html":{},"interfaces/MenuGroup.html":{},"interfaces/MenuGroup-1.html":{},"interfaces/MenuItem.html":{},"interfaces/MenuItem-1.html":{},"injectables/MockNgZone.html":{},"injectables/PluginLink.html":{}}}],["link.plugin",{"_index":1350,"title":{},"body":{"modules/PluginLinkModule.html":{}}}],["links",{"_index":124,"title":{},"body":{"components/AppContainerComponent.html":{},"components/HomePageComponent.html":{},"components/PageContainerComponent.html":{},"index.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-readme.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-plugins-readme.html":{}}}],["list",{"_index":143,"title":{"interfaces/List.html":{}},"body":{"components/AppContainerComponent.html":{},"interfaces/ApplicationData.html":{},"interfaces/ApplicationData-1.html":{},"interfaces/Block.html":{},"interfaces/Header.html":{},"interfaces/HeaderBlock.html":{},"components/HomePageComponent.html":{},"interfaces/Image.html":{},"interfaces/ImageBlock.html":{},"interfaces/List.html":{},"interfaces/ListBlock.html":{},"interfaces/MenuGroup.html":{},"interfaces/MenuGroup-1.html":{},"interfaces/MenuItem.html":{},"interfaces/MenuItem-1.html":{},"components/NavBarComponent.html":{},"components/PageContainerComponent.html":{},"interfaces/Paragraph.html":{},"interfaces/ParagraphBlock.html":{},"injectables/PluginList.html":{},"miscellaneous/typealiases.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-readme.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-readme/ngx-editorjs-changelog.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-plugins-readme.html":{}}}],["list.plugin",{"_index":1359,"title":{},"body":{"modules/PluginListModule.html":{}}}],["listblock",{"_index":468,"title":{"interfaces/ListBlock.html":{}},"body":{"interfaces/Block.html":{},"interfaces/Header.html":{},"interfaces/HeaderBlock.html":{},"interfaces/Image.html":{},"interfaces/ImageBlock.html":{},"interfaces/List.html":{},"interfaces/ListBlock.html":{},"interfaces/Paragraph.html":{},"interfaces/ParagraphBlock.html":{},"miscellaneous/typealiases.html":{}}}],["listed",{"_index":1878,"title":{},"body":{"additional-documentation/tinynodes-library-docs/ngx-editorjs-plugins-readme.html":{}}}],["listener",{"_index":692,"title":{},"body":{"injectables/EditorJSInstanceService.html":{}}}],["liststyle",{"_index":467,"title":{},"body":{"interfaces/Block.html":{},"interfaces/Header.html":{},"interfaces/HeaderBlock.html":{},"interfaces/Image.html":{},"interfaces/ImageBlock.html":{},"interfaces/List.html":{},"interfaces/ListBlock.html":{},"interfaces/Paragraph.html":{},"interfaces/ParagraphBlock.html":{},"miscellaneous/typealiases.html":{}}}],["literal",{"_index":514,"title":{},"body":{"classes/Changed.html":{},"classes/NotReady.html":{},"classes/Ready.html":{},"classes/SaveEnd.html":{},"classes/SaveStart.html":{}}}],["load",{"_index":308,"title":{},"body":{"injectables/AppService.html":{},"injectables/AppService-1.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-readme.html":{}}}],["loaded",{"_index":408,"title":{},"body":{"interfaces/ApplicationState.html":{},"interfaces/ApplicationState-1.html":{},"interfaces/DemoData.html":{},"interfaces/DemoData-1.html":{},"interfaces/NgxEditorJSDemo.html":{},"interfaces/NgxEditorJSDemo-1.html":{},"interfaces/NgxEditorJSDemoData.html":{},"interfaces/NgxEditorJSDemoData-1.html":{},"interfaces/TinynodeDemos.html":{},"interfaces/TinynodeDemos-1.html":{}}}],["loader",{"_index":259,"title":{},"body":{"modules/AppModule.html":{}}}],["loading",{"_index":1166,"title":{},"body":{"modules/NgxTinynodesCoreModule.html":{},"components/PageContainerComponent.html":{}}}],["loads",{"_index":284,"title":{},"body":{"injectables/AppService.html":{},"injectables/AppService-1.html":{},"modules/MaterialModule.html":{}}}],["locations",{"_index":1486,"title":{},"body":{"contributing.html":{}}}],["longer",{"_index":1859,"title":{},"body":{"additional-documentation/tinynodes-library-docs/ngx-editorjs-readme/ngx-editorjs-changelog.html":{}}}],["lot",{"_index":1428,"title":{},"body":{"changelog.html":{}}}],["lt;code",{"_index":1240,"title":{},"body":{"components/PageContainerComponent.html":{}}}],["lt;h1",{"_index":1236,"title":{},"body":{"components/PageContainerComponent.html":{}}}],["lt;h6",{"_index":1237,"title":{},"body":{"components/PageContainerComponent.html":{}}}],["lt;img",{"_index":1242,"title":{},"body":{"components/PageContainerComponent.html":{}}}],["lt;li",{"_index":1239,"title":{},"body":{"components/PageContainerComponent.html":{}}}],["lt;ol",{"_index":1238,"title":{},"body":{"components/PageContainerComponent.html":{}}}],["lt;p",{"_index":1235,"title":{},"body":{"components/PageContainerComponent.html":{}}}],["mail",{"_index":1609,"title":{},"body":{"contributing.html":{}}}],["main",{"_index":13,"title":{},"body":{"components/AppContainerComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"injectables/AppService.html":{},"injectables/AppService-1.html":{},"components/NavBarComponent.html":{},"directives/NgxEditorJSDirective.html":{},"components/PageContainerComponent.html":{},"changelog.html":{},"miscellaneous/variables.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-readme.html":{}}}],["mainmenu",{"_index":40,"title":{},"body":{"components/AppContainerComponent.html":{}}}],["maintain",{"_index":1636,"title":{},"body":{"contributing.html":{}}}],["maintainers",{"_index":1506,"title":{},"body":{"contributing.html":{}}}],["make",{"_index":1469,"title":{},"body":{"contributing.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-readme.html":{}}}],["makes",{"_index":998,"title":{},"body":{"injectables/NgxEditorJSPluginService.html":{}}}],["making",{"_index":1461,"title":{},"body":{"changelog.html":{},"contributing.html":{}}}],["managing",{"_index":1427,"title":{},"body":{"changelog.html":{}}}],["manually",{"_index":1881,"title":{},"body":{"additional-documentation/tinynodes-library-docs/ngx-editorjs-plugins-readme.html":{}}}],["map",{"_index":322,"title":{},"body":{"injectables/AppService.html":{},"injectables/AppService-1.html":{},"interfaces/BasePlugin.html":{},"interfaces/BasePlugin-1.html":{},"interfaces/BlocksMap.html":{},"interfaces/ChangeMap.html":{},"injectables/EditorJSInstanceService.html":{},"interfaces/EditorMap.html":{},"interfaces/EventMap.html":{},"interfaces/EventType.html":{},"injectables/NgxEditorJSEffects.html":{},"injectables/NgxEditorJSPluginService.html":{},"injectables/NgxEditorJSService.html":{},"components/PageContainerComponent.html":{},"interfaces/PluginConfig.html":{},"interfaces/PluginConfig-1.html":{},"interfaces/ReadyMap.html":{},"interfaces/ToolSettingsMap.html":{},"interfaces/ToolSettingsMap-1.html":{},"miscellaneous/variables.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-readme.html":{}}}],["map((action",{"_index":945,"title":{},"body":{"injectables/NgxEditorJSEffects.html":{}}}],["map((demodata",{"_index":342,"title":{},"body":{"injectables/AppService.html":{},"injectables/AppService-1.html":{}}}],["map(blocks",{"_index":1223,"title":{},"body":{"components/PageContainerComponent.html":{}}}],["map(menus",{"_index":350,"title":{},"body":{"injectables/AppService.html":{},"injectables/AppService-1.html":{}}}],["map_defaults",{"_index":645,"title":{},"body":{"injectables/EditorJSInstanceService.html":{},"miscellaneous/variables.html":{}}}],["map_defaults.foreach(([mapkay",{"_index":688,"title":{},"body":{"injectables/EditorJSInstanceService.html":{}}}],["maps",{"_index":1047,"title":{},"body":{"injectables/NgxEditorJSService.html":{}}}],["margin",{"_index":147,"title":{},"body":{"components/AppContainerComponent.html":{},"components/NavBarComponent.html":{}}}],["markdown",{"_index":241,"title":{},"body":{"modules/AppModule.html":{},"modules/NgxEditorjsDemoModule.html":{},"dependencies.html":{}}}],["markdownmodule",{"_index":240,"title":{},"body":{"modules/AppModule.html":{},"modules/NgxEditorjsDemoModule.html":{}}}],["markdownmodule.forchild",{"_index":1119,"title":{},"body":{"modules/NgxEditorjsDemoModule.html":{}}}],["markdownmodule.forroot",{"_index":258,"title":{},"body":{"modules/AppModule.html":{}}}],["marker",{"_index":1363,"title":{},"body":{"injectables/PluginMarker.html":{},"modules/PluginMarkerModule.html":{}}}],["marker.plugin",{"_index":1371,"title":{},"body":{"modules/PluginMarkerModule.html":{}}}],["marking",{"_index":1884,"title":{},"body":{"additional-documentation/tinynodes-library-docs/ngx-editorjs-plugins-readme.html":{}}}],["mat",{"_index":127,"title":{},"body":{"components/AppContainerComponent.html":{}}}],["matbuttonmodule",{"_index":254,"title":{},"body":{"modules/AppModule.html":{},"modules/MaterialModule.html":{},"modules/NgxEditorjsDemoModule.html":{}}}],["matcardmodule",{"_index":759,"title":{},"body":{"modules/MaterialModule.html":{},"modules/NgxEditorjsDemoModule.html":{}}}],["matching",{"_index":190,"title":{},"body":{"components/AppContainerComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"injectables/AppService.html":{},"injectables/AppService-1.html":{},"interfaces/ApplicationData.html":{},"interfaces/ApplicationData-1.html":{},"modules/ApplicationDataModule.html":{},"injectables/ApplicationQuery.html":{},"injectables/ApplicationQuery-1.html":{},"interfaces/ApplicationState.html":{},"interfaces/ApplicationState-1.html":{},"injectables/ApplicationStore.html":{},"injectables/ApplicationStore-1.html":{},"interfaces/BasePlugin.html":{},"interfaces/BasePlugin-1.html":{},"interfaces/Block.html":{},"interfaces/BlocksMap.html":{},"interfaces/ChangeMap.html":{},"classes/Changed.html":{},"interfaces/DemoData.html":{},"interfaces/DemoData-1.html":{},"interfaces/EditorJSConfig.html":{},"modules/EditorJSInstanceModule.html":{},"injectables/EditorJSInstanceService.html":{},"interfaces/EditorMap.html":{},"interfaces/EventMap.html":{},"interfaces/EventType.html":{},"interfaces/Header.html":{},"interfaces/HeaderBlock.html":{},"components/HomePageComponent.html":{},"interfaces/Image.html":{},"interfaces/ImageBlock.html":{},"interfaces/List.html":{},"interfaces/ListBlock.html":{},"modules/MaterialModule.html":{},"interfaces/MenuGroup.html":{},"interfaces/MenuGroup-1.html":{},"interfaces/MenuItem.html":{},"interfaces/MenuItem-1.html":{},"classes/MockEditorJS.html":{},"injectables/MockNgZone.html":{},"classes/MockPlugin.html":{},"components/NavBarComponent.html":{},"components/NgxEditorJSComponent.html":{},"interfaces/NgxEditorJSConfig.html":{},"interfaces/NgxEditorJSDemo.html":{},"interfaces/NgxEditorJSDemo-1.html":{},"interfaces/NgxEditorJSDemoData.html":{},"interfaces/NgxEditorJSDemoData-1.html":{},"directives/NgxEditorJSDirective.html":{},"injectables/NgxEditorJSEffects.html":{},"modules/NgxEditorJSModule.html":{},"injectables/NgxEditorJSPluginService.html":{},"injectables/NgxEditorJSService.html":{},"modules/NgxEditorjsDemoModule.html":{},"modules/NgxEditorjsNgrxModule.html":{},"modules/NgxEditorjsPluginsModule.html":{},"modules/NgxHideableHeaderDemoModule.html":{},"modules/NgxTinynodesCoreModule.html":{},"classes/NotReady.html":{},"interfaces/Page.html":{},"interfaces/PageBlock.html":{},"components/PageContainerComponent.html":{},"modules/PageStoreModule.html":{},"injectables/PagesQuery.html":{},"injectables/PagesService.html":{},"interfaces/PagesState.html":{},"injectables/PagesStore.html":{},"interfaces/Paragraph.html":{},"interfaces/ParagraphBlock.html":{},"injectables/PluginCode.html":{},"modules/PluginCodeModule.html":{},"interfaces/PluginConfig.html":{},"interfaces/PluginConfig-1.html":{},"injectables/PluginHeader.html":{},"modules/PluginHeaderModule.html":{},"injectables/PluginImage.html":{},"modules/PluginImageModule.html":{},"injectables/PluginLink.html":{},"modules/PluginLinkModule.html":{},"injectables/PluginList.html":{},"modules/PluginListModule.html":{},"injectables/PluginMarker.html":{},"modules/PluginMarkerModule.html":{},"injectables/PluginParagraph.html":{},"modules/PluginParagraphModule.html":{},"injectables/PluginSimpleImage.html":{},"modules/PluginSimpleImageModule.html":{},"classes/Ready.html":{},"interfaces/ReadyMap.html":{},"classes/SaveEnd.html":{},"classes/SaveStart.html":{},"components/SidebarComponent.html":{},"interfaces/Tag.html":{},"classes/TestClass.html":{},"interfaces/TinynodeDemos.html":{},"interfaces/TinynodeDemos-1.html":{},"interfaces/ToolSettingsMap.html":{},"interfaces/ToolSettingsMap-1.html":{},"changelog.html":{},"contributing.html":{},"dependencies.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"index.html":{},"license.html":{},"modules.html":{},"overview.html":{},"todo.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{},"additional-documentation/tinynodes-library-docs.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-readme.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-readme/ngx-editorjs-changelog.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-plugins-readme.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-plugins-readme/ngx-editorjs-plugins-changelog.html":{}}}],["material",{"_index":72,"title":{},"body":{"components/AppContainerComponent.html":{},"modules/MaterialModule.html":{}}}],["material.module",{"_index":251,"title":{},"body":{"modules/AppModule.html":{}}}],["materialmodule",{"_index":206,"title":{"modules/MaterialModule.html":{}},"body":{"modules/AppModule.html":{},"modules/MaterialModule.html":{},"modules/NgxEditorjsDemoModule.html":{},"modules.html":{},"overview.html":{}}}],["matexpansionmodule",{"_index":1109,"title":{},"body":{"modules/NgxEditorjsDemoModule.html":{}}}],["matgridlistmodule",{"_index":1108,"title":{},"body":{"modules/NgxEditorjsDemoModule.html":{}}}],["maticonmodule",{"_index":757,"title":{},"body":{"modules/MaterialModule.html":{}}}],["matlistmodule",{"_index":758,"title":{},"body":{"modules/MaterialModule.html":{}}}],["matsidenav",{"_index":68,"title":{},"body":{"components/AppContainerComponent.html":{}}}],["matsidenavmodule",{"_index":755,"title":{},"body":{"modules/MaterialModule.html":{}}}],["mattoolbarmodule",{"_index":756,"title":{},"body":{"modules/MaterialModule.html":{}}}],["me@tane.dev",{"_index":1628,"title":{},"body":{"contributing.html":{},"license.html":{}}}],["means",{"_index":713,"title":{},"body":{"injectables/EditorJSInstanceService.html":{},"directives/NgxEditorJSDirective.html":{}}}],["meantime",{"_index":1456,"title":{},"body":{"changelog.html":{}}}],["media",{"_index":1612,"title":{},"body":{"contributing.html":{}}}],["members",{"_index":1550,"title":{},"body":{"contributing.html":{}}}],["men",{"_index":313,"title":{},"body":{"injectables/AppService.html":{},"injectables/AppService-1.html":{}}}],["menu",{"_index":78,"title":{},"body":{"components/AppContainerComponent.html":{},"injectables/AppService.html":{},"injectables/AppService-1.html":{},"interfaces/ApplicationData.html":{},"interfaces/ApplicationData-1.html":{},"interfaces/ApplicationState.html":{},"interfaces/ApplicationState-1.html":{},"interfaces/DemoData.html":{},"interfaces/DemoData-1.html":{},"components/HomePageComponent.html":{},"interfaces/MenuGroup.html":{},"interfaces/MenuGroup-1.html":{},"interfaces/MenuItem.html":{},"interfaces/MenuItem-1.html":{},"components/NavBarComponent.html":{},"interfaces/NgxEditorJSDemo.html":{},"interfaces/NgxEditorJSDemo-1.html":{},"interfaces/NgxEditorJSDemoData.html":{},"interfaces/NgxEditorJSDemoData-1.html":{},"interfaces/TinynodeDemos.html":{},"interfaces/TinynodeDemos-1.html":{}}}],["menu.key",{"_index":352,"title":{},"body":{"injectables/AppService.html":{},"injectables/AppService-1.html":{}}}],["menu.label",{"_index":752,"title":{},"body":{"components/HomePageComponent.html":{}}}],["menugroup",{"_index":312,"title":{"interfaces/MenuGroup.html":{},"interfaces/MenuGroup-1.html":{}},"body":{"injectables/AppService.html":{},"injectables/AppService-1.html":{},"interfaces/ApplicationData.html":{},"interfaces/ApplicationData-1.html":{},"interfaces/ApplicationState.html":{},"interfaces/ApplicationState-1.html":{},"interfaces/DemoData.html":{},"interfaces/DemoData-1.html":{},"interfaces/MenuGroup.html":{},"interfaces/MenuGroup-1.html":{},"interfaces/MenuItem.html":{},"interfaces/MenuItem-1.html":{},"components/NavBarComponent.html":{},"interfaces/NgxEditorJSDemo.html":{},"interfaces/NgxEditorJSDemo-1.html":{},"interfaces/NgxEditorJSDemoData.html":{},"interfaces/NgxEditorJSDemoData-1.html":{},"components/SidebarComponent.html":{},"interfaces/TinynodeDemos.html":{},"interfaces/TinynodeDemos-1.html":{}}}],["menuitem",{"_index":370,"title":{"interfaces/MenuItem.html":{},"interfaces/MenuItem-1.html":{}},"body":{"interfaces/ApplicationData.html":{},"interfaces/ApplicationData-1.html":{},"interfaces/MenuGroup.html":{},"interfaces/MenuGroup-1.html":{},"interfaces/MenuItem.html":{},"interfaces/MenuItem-1.html":{}}}],["menuitem.label",{"_index":818,"title":{},"body":{"components/NavBarComponent.html":{}}}],["menus",{"_index":348,"title":{},"body":{"injectables/AppService.html":{},"injectables/AppService-1.html":{},"interfaces/ApplicationData.html":{},"interfaces/ApplicationData-1.html":{},"interfaces/ApplicationState.html":{},"interfaces/ApplicationState-1.html":{},"injectables/ApplicationStore.html":{},"injectables/ApplicationStore-1.html":{},"interfaces/DemoData.html":{},"interfaces/DemoData-1.html":{},"interfaces/MenuGroup.html":{},"interfaces/MenuGroup-1.html":{},"interfaces/MenuItem.html":{},"interfaces/MenuItem-1.html":{},"interfaces/NgxEditorJSDemo.html":{},"interfaces/NgxEditorJSDemo-1.html":{},"interfaces/NgxEditorJSDemoData.html":{},"interfaces/NgxEditorJSDemoData-1.html":{},"interfaces/TinynodeDemos.html":{},"interfaces/TinynodeDemos-1.html":{},"miscellaneous/enumerations.html":{}}}],["menus.find(menu",{"_index":351,"title":{},"body":{"injectables/AppService.html":{},"injectables/AppService-1.html":{}}}],["menus.length",{"_index":349,"title":{},"body":{"injectables/AppService.html":{},"injectables/AppService-1.html":{}}}],["merchantability",{"_index":1754,"title":{},"body":{"license.html":{}}}],["merge",{"_index":1495,"title":{},"body":{"contributing.html":{},"miscellaneous/functions.html":{},"license.html":{}}}],["merged",{"_index":1005,"title":{},"body":{"injectables/NgxEditorJSPluginService.html":{}}}],["mergemap",{"_index":961,"title":{},"body":{"injectables/NgxEditorJSEffects.html":{}}}],["mergemap(([action",{"_index":949,"title":{},"body":{"injectables/NgxEditorJSEffects.html":{}}}],["metadata",{"_index":21,"title":{},"body":{"components/AppContainerComponent.html":{},"components/HomePageComponent.html":{},"components/NavBarComponent.html":{},"components/NgxEditorJSComponent.html":{},"directives/NgxEditorJSDirective.html":{},"components/PageContainerComponent.html":{},"components/SidebarComponent.html":{}}}],["method",{"_index":562,"title":{},"body":{"interfaces/EditorJSConfig.html":{},"injectables/EditorJSInstanceService.html":{},"interfaces/NgxEditorJSConfig.html":{},"modules/NgxEditorJSModule.html":{},"injectables/NgxEditorJSService.html":{},"components/PageContainerComponent.html":{},"contributing.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-readme.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-readme/ngx-editorjs-changelog.html":{}}}],["methods",{"_index":31,"title":{},"body":{"components/AppContainerComponent.html":{},"injectables/AppService.html":{},"injectables/AppService-1.html":{},"interfaces/BasePlugin.html":{},"interfaces/BasePlugin-1.html":{},"injectables/EditorJSInstanceService.html":{},"injectables/MockNgZone.html":{},"classes/MockPlugin.html":{},"directives/NgxEditorJSDirective.html":{},"modules/NgxEditorJSModule.html":{},"injectables/NgxEditorJSPluginService.html":{},"injectables/NgxEditorJSService.html":{},"components/PageContainerComponent.html":{},"injectables/PagesService.html":{},"injectables/PluginCode.html":{},"interfaces/PluginConfig.html":{},"interfaces/PluginConfig-1.html":{},"injectables/PluginHeader.html":{},"injectables/PluginImage.html":{},"injectables/PluginLink.html":{},"injectables/PluginList.html":{},"injectables/PluginMarker.html":{},"injectables/PluginParagraph.html":{},"injectables/PluginSimpleImage.html":{},"classes/TestClass.html":{},"interfaces/ToolSettingsMap.html":{},"interfaces/ToolSettingsMap-1.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-readme.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-readme/ngx-editorjs-changelog.html":{}}}],["middle",{"_index":161,"title":{},"body":{"components/AppContainerComponent.html":{},"components/NavBarComponent.html":{}}}],["minheight",{"_index":539,"title":{},"body":{"interfaces/EditorJSConfig.html":{},"components/NgxEditorJSComponent.html":{},"interfaces/NgxEditorJSConfig.html":{},"directives/NgxEditorJSDirective.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-readme.html":{}}}],["miscellaneous",{"_index":1685,"title":{"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}},"body":{"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["mit",{"_index":1715,"title":{},"body":{"license.html":{}}}],["mock",{"_index":784,"title":{},"body":{"injectables/MockNgZone.html":{}}}],["mock.ts",{"_index":783,"title":{},"body":{"injectables/MockNgZone.html":{}}}],["mock.ts:16",{"_index":789,"title":{},"body":{"injectables/MockNgZone.html":{}}}],["mock.ts:22",{"_index":791,"title":{},"body":{"injectables/MockNgZone.html":{}}}],["mock.ts:26",{"_index":794,"title":{},"body":{"injectables/MockNgZone.html":{}}}],["mock.ts:30",{"_index":795,"title":{},"body":{"injectables/MockNgZone.html":{}}}],["mockeditorjs",{"_index":760,"title":{"classes/MockEditorJS.html":{}},"body":{"classes/MockEditorJS.html":{},"classes/MockPlugin.html":{},"classes/TestClass.html":{}}}],["mockngzone",{"_index":781,"title":{"injectables/MockNgZone.html":{}},"body":{"injectables/MockNgZone.html":{}}}],["mockplugin",{"_index":772,"title":{"classes/MockPlugin.html":{}},"body":{"classes/MockEditorJS.html":{},"classes/MockPlugin.html":{},"classes/TestClass.html":{}}}],["modify",{"_index":1731,"title":{},"body":{"license.html":{}}}],["module",{"_index":192,"title":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"modules/ApplicationDataModule.html":{},"modules/EditorJSInstanceModule.html":{},"modules/MaterialModule.html":{},"modules/NgxEditorJSModule.html":{},"modules/NgxEditorjsDemoModule.html":{},"modules/NgxEditorjsNgrxModule.html":{},"modules/NgxEditorjsPluginsModule.html":{},"modules/NgxHideableHeaderDemoModule.html":{},"modules/NgxTinynodesCoreModule.html":{},"modules/PageStoreModule.html":{},"modules/PluginCodeModule.html":{},"modules/PluginHeaderModule.html":{},"modules/PluginImageModule.html":{},"modules/PluginLinkModule.html":{},"modules/PluginListModule.html":{},"modules/PluginMarkerModule.html":{},"modules/PluginParagraphModule.html":{},"modules/PluginSimpleImageModule.html":{}},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"modules/ApplicationDataModule.html":{},"interfaces/BasePlugin.html":{},"interfaces/BasePlugin-1.html":{},"modules/EditorJSInstanceModule.html":{},"modules/MaterialModule.html":{},"modules/NgxEditorJSModule.html":{},"injectables/NgxEditorJSPluginService.html":{},"modules/NgxEditorjsDemoModule.html":{},"modules/NgxEditorjsNgrxModule.html":{},"modules/NgxEditorjsPluginsModule.html":{},"modules/NgxTinynodesCoreModule.html":{},"modules/PageStoreModule.html":{},"modules/PluginCodeModule.html":{},"interfaces/PluginConfig.html":{},"interfaces/PluginConfig-1.html":{},"modules/PluginHeaderModule.html":{},"modules/PluginImageModule.html":{},"modules/PluginLinkModule.html":{},"modules/PluginListModule.html":{},"modules/PluginMarkerModule.html":{},"modules/PluginParagraphModule.html":{},"modules/PluginSimpleImageModule.html":{},"interfaces/ToolSettingsMap.html":{},"interfaces/ToolSettingsMap-1.html":{},"changelog.html":{},"miscellaneous/functions.html":{},"index.html":{},"overview.html":{},"todo.html":{},"miscellaneous/variables.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-readme.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-readme/ngx-editorjs-changelog.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-plugins-readme.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-plugins-readme/ngx-editorjs-plugins-changelog.html":{}}}],["modules",{"_index":194,"title":{"modules.html":{}},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"modules/ApplicationDataModule.html":{},"modules/EditorJSInstanceModule.html":{},"modules/MaterialModule.html":{},"modules/NgxEditorJSModule.html":{},"modules/NgxEditorjsDemoModule.html":{},"modules/NgxEditorjsNgrxModule.html":{},"modules/NgxEditorjsPluginsModule.html":{},"modules/NgxHideableHeaderDemoModule.html":{},"modules/NgxTinynodesCoreModule.html":{},"modules/PageStoreModule.html":{},"modules/PluginCodeModule.html":{},"modules/PluginHeaderModule.html":{},"modules/PluginImageModule.html":{},"modules/PluginLinkModule.html":{},"modules/PluginListModule.html":{},"modules/PluginMarkerModule.html":{},"modules/PluginParagraphModule.html":{},"modules/PluginSimpleImageModule.html":{},"modules.html":{},"overview.html":{},"todo.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-plugins-readme.html":{}}}],["modulewithproviders",{"_index":978,"title":{},"body":{"modules/NgxEditorJSModule.html":{}}}],["monday",{"_index":1430,"title":{},"body":{"changelog.html":{}}}],["more",{"_index":384,"title":{},"body":{"interfaces/ApplicationData.html":{},"interfaces/ApplicationData-1.html":{},"interfaces/MenuGroup.html":{},"interfaces/MenuGroup-1.html":{},"interfaces/MenuItem.html":{},"interfaces/MenuItem-1.html":{},"injectables/NgxEditorJSService.html":{},"changelog.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-readme.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-readme/ngx-editorjs-changelog.html":{}}}],["moved",{"_index":413,"title":{},"body":{"interfaces/ApplicationState.html":{},"interfaces/ApplicationState-1.html":{},"interfaces/DemoData.html":{},"interfaces/DemoData-1.html":{},"interfaces/NgxEditorJSDemo.html":{},"interfaces/NgxEditorJSDemo-1.html":{},"interfaces/NgxEditorJSDemoData.html":{},"interfaces/NgxEditorJSDemoData-1.html":{},"interfaces/TinynodeDemos.html":{},"interfaces/TinynodeDemos-1.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-plugins-readme/ngx-editorjs-plugins-changelog.html":{}}}],["multiple",{"_index":1261,"title":{},"body":{"modules/PageStoreModule.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-readme/ngx-editorjs-changelog.html":{}}}],["name",{"_index":50,"title":{},"body":{"components/AppContainerComponent.html":{},"injectables/AppService.html":{},"injectables/AppService-1.html":{},"injectables/ApplicationQuery.html":{},"injectables/ApplicationQuery-1.html":{},"interfaces/ApplicationState.html":{},"interfaces/ApplicationState-1.html":{},"injectables/ApplicationStore.html":{},"injectables/ApplicationStore-1.html":{},"classes/Changed.html":{},"interfaces/DemoData.html":{},"interfaces/DemoData-1.html":{},"interfaces/EditorJSConfig.html":{},"injectables/EditorJSInstanceService.html":{},"components/HomePageComponent.html":{},"classes/MockEditorJS.html":{},"injectables/MockNgZone.html":{},"components/NavBarComponent.html":{},"components/NgxEditorJSComponent.html":{},"interfaces/NgxEditorJSConfig.html":{},"interfaces/NgxEditorJSDemo.html":{},"interfaces/NgxEditorJSDemo-1.html":{},"interfaces/NgxEditorJSDemoData.html":{},"interfaces/NgxEditorJSDemoData-1.html":{},"directives/NgxEditorJSDirective.html":{},"injectables/NgxEditorJSEffects.html":{},"modules/NgxEditorJSModule.html":{},"injectables/NgxEditorJSPluginService.html":{},"injectables/NgxEditorJSService.html":{},"classes/NotReady.html":{},"components/PageContainerComponent.html":{},"injectables/PagesQuery.html":{},"injectables/PagesService.html":{},"interfaces/PagesState.html":{},"injectables/PagesStore.html":{},"classes/Ready.html":{},"classes/SaveEnd.html":{},"classes/SaveStart.html":{},"components/SidebarComponent.html":{},"interfaces/TinynodeDemos.html":{},"interfaces/TinynodeDemos-1.html":{},"miscellaneous/functions.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-plugins-readme.html":{}}}],["nationality",{"_index":1522,"title":{},"body":{"contributing.html":{}}}],["nav",{"_index":177,"title":{},"body":{"components/AppContainerComponent.html":{},"components/HomePageComponent.html":{},"components/NavBarComponent.html":{},"components/NgxEditorJSComponent.html":{},"components/PageContainerComponent.html":{},"components/SidebarComponent.html":{}}}],["navbar",{"_index":804,"title":{},"body":{"components/NavBarComponent.html":{}}}],["navbarcomponent",{"_index":176,"title":{"components/NavBarComponent.html":{}},"body":{"components/AppContainerComponent.html":{},"modules/AppModule.html":{},"components/HomePageComponent.html":{},"components/NavBarComponent.html":{},"components/NgxEditorJSComponent.html":{},"components/PageContainerComponent.html":{},"components/SidebarComponent.html":{},"overview.html":{}}}],["navigation",{"_index":141,"title":{},"body":{"components/AppContainerComponent.html":{},"components/NavBarComponent.html":{}}}],["nbsp",{"_index":817,"title":{},"body":{"components/NavBarComponent.html":{}}}],["necessary",{"_index":1633,"title":{},"body":{"contributing.html":{}}}],["need",{"_index":899,"title":{},"body":{"directives/NgxEditorJSDirective.html":{},"modules/NgxTinynodesCoreModule.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-readme.html":{}}}],["new",{"_index":103,"title":{},"body":{"components/AppContainerComponent.html":{},"interfaces/BasePlugin.html":{},"interfaces/BasePlugin-1.html":{},"interfaces/EditorJSConfig.html":{},"injectables/EditorJSInstanceService.html":{},"injectables/MockNgZone.html":{},"components/NavBarComponent.html":{},"interfaces/NgxEditorJSConfig.html":{},"directives/NgxEditorJSDirective.html":{},"injectables/NgxEditorJSEffects.html":{},"injectables/NgxEditorJSService.html":{},"components/PageContainerComponent.html":{},"injectables/PagesService.html":{},"interfaces/PluginConfig.html":{},"interfaces/PluginConfig-1.html":{},"interfaces/ToolSettingsMap.html":{},"interfaces/ToolSettingsMap-1.html":{},"changelog.html":{},"contributing.html":{},"miscellaneous/variables.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-readme.html":{}}}],["newpage",{"_index":1298,"title":{},"body":{"injectables/PagesService.html":{}}}],["ng",{"_index":234,"title":{},"body":{"modules/AppModule.html":{},"dependencies.html":{}}}],["ngaftercontentinit",{"_index":32,"title":{},"body":{"components/AppContainerComponent.html":{},"directives/NgxEditorJSDirective.html":{},"components/PageContainerComponent.html":{}}}],["ngdevtools",{"_index":238,"title":{},"body":{"modules/AppModule.html":{},"dependencies.html":{}}}],["ngmodule",{"_index":223,"title":{},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"modules/ApplicationDataModule.html":{},"modules/EditorJSInstanceModule.html":{},"modules/MaterialModule.html":{},"modules/NgxEditorJSModule.html":{},"modules/NgxEditorjsDemoModule.html":{},"modules/NgxEditorjsNgrxModule.html":{},"modules/NgxEditorjsPluginsModule.html":{},"modules/NgxHideableHeaderDemoModule.html":{},"modules/NgxTinynodesCoreModule.html":{},"modules/PageStoreModule.html":{},"modules/PluginCodeModule.html":{},"modules/PluginHeaderModule.html":{},"modules/PluginImageModule.html":{},"modules/PluginLinkModule.html":{},"modules/PluginListModule.html":{},"modules/PluginMarkerModule.html":{},"modules/PluginParagraphModule.html":{},"modules/PluginSimpleImageModule.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-readme.html":{}}}],["ngonchanges",{"_index":872,"title":{},"body":{"directives/NgxEditorJSDirective.html":{}}}],["ngonchanges(changes",{"_index":891,"title":{},"body":{"directives/NgxEditorJSDirective.html":{}}}],["ngondestroy",{"_index":33,"title":{},"body":{"components/AppContainerComponent.html":{},"directives/NgxEditorJSDirective.html":{}}}],["ngrx",{"_index":1128,"title":{},"body":{"modules/NgxEditorjsNgrxModule.html":{}}}],["ngrx.module.ts",{"_index":1124,"title":{},"body":{"modules/NgxEditorjsNgrxModule.html":{}}}],["ngrx/effects",{"_index":956,"title":{},"body":{"injectables/NgxEditorJSEffects.html":{},"modules/NgxEditorjsNgrxModule.html":{},"dependencies.html":{},"todo.html":{}}}],["ngrx/src/lib/actions/ngx",{"_index":510,"title":{},"body":{"classes/Changed.html":{},"classes/NotReady.html":{},"classes/Ready.html":{},"classes/SaveEnd.html":{},"classes/SaveStart.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/typealiases.html":{}}}],["ngrx/src/lib/effects/ngx",{"_index":938,"title":{},"body":{"injectables/NgxEditorJSEffects.html":{}}}],["ngrx/src/lib/ngx",{"_index":1123,"title":{},"body":{"modules/NgxEditorjsNgrxModule.html":{}}}],["ngrx/store",{"_index":518,"title":{},"body":{"classes/Changed.html":{},"classes/NotReady.html":{},"classes/Ready.html":{},"classes/SaveEnd.html":{},"classes/SaveStart.html":{},"dependencies.html":{}}}],["ngx",{"_index":180,"title":{"additional-documentation/tinynodes-library-docs/ngx-editorjs-readme.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-readme/ngx-editorjs-changelog.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-plugins-readme.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-plugins-readme/ngx-editorjs-plugins-changelog.html":{}},"body":{"components/AppContainerComponent.html":{},"modules/AppModule.html":{},"interfaces/ApplicationState.html":{},"interfaces/ApplicationState-1.html":{},"interfaces/BasePlugin.html":{},"interfaces/BasePlugin-1.html":{},"classes/Changed.html":{},"interfaces/DemoData.html":{},"interfaces/DemoData-1.html":{},"components/HomePageComponent.html":{},"components/NavBarComponent.html":{},"components/NgxEditorJSComponent.html":{},"interfaces/NgxEditorJSDemo.html":{},"interfaces/NgxEditorJSDemo-1.html":{},"interfaces/NgxEditorJSDemoData.html":{},"interfaces/NgxEditorJSDemoData-1.html":{},"directives/NgxEditorJSDirective.html":{},"modules/NgxEditorjsDemoModule.html":{},"classes/NotReady.html":{},"components/PageContainerComponent.html":{},"modules/PageStoreModule.html":{},"interfaces/PluginConfig.html":{},"interfaces/PluginConfig-1.html":{},"classes/Ready.html":{},"classes/SaveEnd.html":{},"classes/SaveStart.html":{},"components/SidebarComponent.html":{},"interfaces/TinynodeDemos.html":{},"interfaces/TinynodeDemos-1.html":{},"interfaces/ToolSettingsMap.html":{},"interfaces/ToolSettingsMap-1.html":{},"dependencies.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"index.html":{},"todo.html":{},"miscellaneous/variables.html":{},"additional-documentation/tinynodes-library-docs.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-readme.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-readme/ngx-editorjs-changelog.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-plugins-readme.html":{}}}],["ngx.firebaseapp.com",{"_index":256,"title":{},"body":{"modules/AppModule.html":{}}}],["ngx_editorjs_config",{"_index":566,"title":{},"body":{"interfaces/EditorJSConfig.html":{},"interfaces/NgxEditorJSConfig.html":{},"modules/NgxEditorJSModule.html":{},"injectables/NgxEditorJSService.html":{},"miscellaneous/variables.html":{}}}],["ngxeditorjs",{"_index":187,"title":{},"body":{"components/AppContainerComponent.html":{},"components/HomePageComponent.html":{},"components/NavBarComponent.html":{},"components/NgxEditorJSComponent.html":{},"directives/NgxEditorJSDirective.html":{},"components/PageContainerComponent.html":{},"components/SidebarComponent.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-readme.html":{}}}],["ngxeditorjsactions",{"_index":533,"title":{},"body":{"classes/Changed.html":{},"classes/NotReady.html":{},"classes/Ready.html":{},"classes/SaveEnd.html":{},"classes/SaveStart.html":{},"miscellaneous/typealiases.html":{}}}],["ngxeditorjscomponent",{"_index":179,"title":{"components/NgxEditorJSComponent.html":{}},"body":{"components/AppContainerComponent.html":{},"components/HomePageComponent.html":{},"components/NavBarComponent.html":{},"components/NgxEditorJSComponent.html":{},"modules/NgxEditorJSModule.html":{},"components/PageContainerComponent.html":{},"components/SidebarComponent.html":{},"overview.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-readme.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-readme/ngx-editorjs-changelog.html":{}}}],["ngxeditorjsconfig",{"_index":563,"title":{"interfaces/NgxEditorJSConfig.html":{}},"body":{"interfaces/EditorJSConfig.html":{},"interfaces/NgxEditorJSConfig.html":{},"modules/NgxEditorJSModule.html":{},"injectables/NgxEditorJSService.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["ngxeditorjsdemo",{"_index":414,"title":{"interfaces/NgxEditorJSDemo.html":{},"interfaces/NgxEditorJSDemo-1.html":{}},"body":{"interfaces/ApplicationState.html":{},"interfaces/ApplicationState-1.html":{},"interfaces/DemoData.html":{},"interfaces/DemoData-1.html":{},"interfaces/NgxEditorJSDemo.html":{},"interfaces/NgxEditorJSDemo-1.html":{},"interfaces/NgxEditorJSDemoData.html":{},"interfaces/NgxEditorJSDemoData-1.html":{},"interfaces/TinynodeDemos.html":{},"interfaces/TinynodeDemos-1.html":{}}}],["ngxeditorjsdemodata",{"_index":416,"title":{"interfaces/NgxEditorJSDemoData.html":{},"interfaces/NgxEditorJSDemoData-1.html":{}},"body":{"interfaces/ApplicationState.html":{},"interfaces/ApplicationState-1.html":{},"interfaces/DemoData.html":{},"interfaces/DemoData-1.html":{},"interfaces/NgxEditorJSDemo.html":{},"interfaces/NgxEditorJSDemo-1.html":{},"interfaces/NgxEditorJSDemoData.html":{},"interfaces/NgxEditorJSDemoData-1.html":{},"interfaces/TinynodeDemos.html":{},"interfaces/TinynodeDemos-1.html":{}}}],["ngxeditorjsdemomodule",{"_index":208,"title":{"modules/NgxEditorjsDemoModule.html":{}},"body":{"modules/AppModule.html":{},"modules/NgxEditorjsDemoModule.html":{},"modules.html":{},"overview.html":{}}}],["ngxeditorjsdemoroutes",{"_index":1114,"title":{},"body":{"modules/NgxEditorjsDemoModule.html":{},"miscellaneous/variables.html":{}}}],["ngxeditorjsdirective",{"_index":186,"title":{"directives/NgxEditorJSDirective.html":{}},"body":{"components/AppContainerComponent.html":{},"components/HomePageComponent.html":{},"components/NavBarComponent.html":{},"components/NgxEditorJSComponent.html":{},"directives/NgxEditorJSDirective.html":{},"modules/NgxEditorJSModule.html":{},"components/PageContainerComponent.html":{},"components/SidebarComponent.html":{},"overview.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-readme.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-readme/ngx-editorjs-changelog.html":{}}}],["ngxeditorjsdirective::ngaftercontentinit",{"_index":926,"title":{},"body":{"directives/NgxEditorJSDirective.html":{}}}],["ngxeditorjseffects",{"_index":937,"title":{"injectables/NgxEditorJSEffects.html":{}},"body":{"injectables/NgxEditorJSEffects.html":{}}}],["ngxeditorjsmodule",{"_index":207,"title":{"modules/NgxEditorJSModule.html":{}},"body":{"modules/AppModule.html":{},"modules/NgxEditorJSModule.html":{},"modules/NgxEditorjsDemoModule.html":{},"modules/NgxEditorjsNgrxModule.html":{},"modules.html":{},"overview.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-readme.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-readme/ngx-editorjs-changelog.html":{}}}],["ngxeditorjsmodule.forroot",{"_index":257,"title":{},"body":{"modules/AppModule.html":{},"interfaces/EditorJSConfig.html":{},"interfaces/NgxEditorJSConfig.html":{},"modules/NgxEditorJSModule.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-readme.html":{}}}],["ngxeditorjsngrxmodule",{"_index":1120,"title":{"modules/NgxEditorjsNgrxModule.html":{}},"body":{"modules/NgxEditorjsNgrxModule.html":{},"modules.html":{},"overview.html":{}}}],["ngxeditorjspluginservice",{"_index":968,"title":{"injectables/NgxEditorJSPluginService.html":{}},"body":{"modules/NgxEditorJSModule.html":{},"injectables/NgxEditorJSPluginService.html":{},"injectables/NgxEditorJSService.html":{},"overview.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-readme/ngx-editorjs-changelog.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-plugins-readme/ngx-editorjs-plugins-changelog.html":{}}}],["ngxeditorjspluginsmodule",{"_index":1133,"title":{"modules/NgxEditorjsPluginsModule.html":{}},"body":{"modules/NgxEditorjsPluginsModule.html":{},"modules.html":{},"overview.html":{}}}],["ngxeditorjsservice",{"_index":829,"title":{"injectables/NgxEditorJSService.html":{}},"body":{"components/NgxEditorJSComponent.html":{},"directives/NgxEditorJSDirective.html":{},"injectables/NgxEditorJSEffects.html":{},"modules/NgxEditorJSModule.html":{},"injectables/NgxEditorJSService.html":{},"components/PageContainerComponent.html":{},"overview.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-readme.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-readme/ngx-editorjs-changelog.html":{}}}],["ngxhideableheaderdemomodule",{"_index":1156,"title":{"modules/NgxHideableHeaderDemoModule.html":{}},"body":{"modules/NgxHideableHeaderDemoModule.html":{},"modules.html":{}}}],["ngxhideableheaderdemoroutes",{"_index":1158,"title":{},"body":{"modules/NgxHideableHeaderDemoModule.html":{},"miscellaneous/variables.html":{}}}],["ngxtinynodescoremodule",{"_index":209,"title":{"modules/NgxTinynodesCoreModule.html":{}},"body":{"modules/AppModule.html":{},"modules/NgxEditorjsDemoModule.html":{},"modules/NgxTinynodesCoreModule.html":{},"modules.html":{},"overview.html":{}}}],["ngzone",{"_index":602,"title":{},"body":{"injectables/EditorJSInstanceService.html":{},"injectables/MockNgZone.html":{},"injectables/NgxEditorJSService.html":{}}}],["none",{"_index":135,"title":{},"body":{"components/AppContainerComponent.html":{},"components/NavBarComponent.html":{}}}],["noninfringement",{"_index":1758,"title":{},"body":{"license.html":{}}}],["notable",{"_index":1840,"title":{},"body":{"additional-documentation/tinynodes-library-docs/ngx-editorjs-readme/ngx-editorjs-changelog.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-plugins-readme/ngx-editorjs-plugins-changelog.html":{}}}],["note",{"_index":1473,"title":{},"body":{"contributing.html":{},"additional-documentation/tinynodes-library-docs.html":{}}}],["notice",{"_index":1744,"title":{},"body":{"license.html":{}}}],["notready",{"_index":526,"title":{"classes/NotReady.html":{}},"body":{"classes/Changed.html":{},"classes/NotReady.html":{},"classes/Ready.html":{},"classes/SaveEnd.html":{},"classes/SaveStart.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/typealiases.html":{}}}],["now",{"_index":1433,"title":{},"body":{"changelog.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-readme/ngx-editorjs-changelog.html":{}}}],["npm",{"_index":745,"title":{},"body":{"components/HomePageComponent.html":{},"dependencies.html":{},"index.html":{},"additional-documentation/tinynodes-library-docs.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-readme.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-readme/ngx-editorjs-changelog.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-plugins-readme.html":{}}}],["nrwl/nx",{"_index":1446,"title":{},"body":{"changelog.html":{}}}],["null",{"_index":708,"title":{},"body":{"injectables/EditorJSInstanceService.html":{},"injectables/NgxEditorJSPluginService.html":{},"components/PageContainerComponent.html":{}}}],["number",{"_index":474,"title":{},"body":{"interfaces/Block.html":{},"interfaces/BlocksMap.html":{},"interfaces/ChangeMap.html":{},"interfaces/EditorJSConfig.html":{},"interfaces/EditorMap.html":{},"interfaces/EventMap.html":{},"interfaces/EventType.html":{},"interfaces/Header.html":{},"interfaces/HeaderBlock.html":{},"interfaces/Image.html":{},"interfaces/ImageBlock.html":{},"interfaces/List.html":{},"interfaces/ListBlock.html":{},"components/NgxEditorJSComponent.html":{},"interfaces/NgxEditorJSConfig.html":{},"directives/NgxEditorJSDirective.html":{},"interfaces/Paragraph.html":{},"interfaces/ParagraphBlock.html":{},"interfaces/ReadyMap.html":{}}}],["numbers",{"_index":1488,"title":{},"body":{"contributing.html":{}}}],["nx",{"_index":1712,"title":{},"body":{"index.html":{}}}],["object",{"_index":411,"title":{},"body":{"interfaces/ApplicationState.html":{},"interfaces/ApplicationState-1.html":{},"interfaces/DemoData.html":{},"interfaces/DemoData-1.html":{},"interfaces/NgxEditorJSDemo.html":{},"interfaces/NgxEditorJSDemo-1.html":{},"interfaces/NgxEditorJSDemoData.html":{},"interfaces/NgxEditorJSDemoData-1.html":{},"injectables/NgxEditorJSPluginService.html":{},"injectables/NgxEditorJSService.html":{},"interfaces/TinynodeDemos.html":{},"interfaces/TinynodeDemos-1.html":{},"miscellaneous/variables.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-readme.html":{}}}],["object.entries",{"_index":1023,"title":{},"body":{"injectables/NgxEditorJSPluginService.html":{}}}],["object.entries(this.pluginsmap",{"_index":1028,"title":{},"body":{"injectables/NgxEditorJSPluginService.html":{}}}],["object.keys(this.editormap).foreach(key",{"_index":711,"title":{},"body":{"injectables/EditorJSInstanceService.html":{}}}],["obligated",{"_index":1635,"title":{},"body":{"contributing.html":{}}}],["observable",{"_index":93,"title":{},"body":{"components/AppContainerComponent.html":{},"injectables/AppService.html":{},"injectables/AppService-1.html":{},"injectables/EditorJSInstanceService.html":{},"components/NgxEditorJSComponent.html":{},"directives/NgxEditorJSDirective.html":{},"injectables/NgxEditorJSEffects.html":{},"injectables/NgxEditorJSService.html":{},"components/PageContainerComponent.html":{},"injectables/PagesService.html":{}}}],["obtaining",{"_index":1722,"title":{},"body":{"license.html":{}}}],["offensive",{"_index":1600,"title":{},"body":{"contributing.html":{}}}],["official",{"_index":1607,"title":{},"body":{"contributing.html":{}}}],["officially",{"_index":1451,"title":{},"body":{"changelog.html":{}}}],["offline",{"_index":1618,"title":{},"body":{"contributing.html":{}}}],["oftype",{"_index":955,"title":{},"body":{"injectables/NgxEditorJSEffects.html":{}}}],["oftype(editorjsactiontypes.savestart",{"_index":944,"title":{},"body":{"injectables/NgxEditorJSEffects.html":{}}}],["once",{"_index":705,"title":{},"body":{"injectables/EditorJSInstanceService.html":{},"contributing.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-readme.html":{}}}],["onchange",{"_index":652,"title":{},"body":{"injectables/EditorJSInstanceService.html":{}}}],["onchanges",{"_index":870,"title":{},"body":{"directives/NgxEditorJSDirective.html":{}}}],["ondestroy",{"_index":20,"title":{},"body":{"components/AppContainerComponent.html":{},"injectables/EditorJSInstanceService.html":{},"directives/NgxEditorJSDirective.html":{},"components/PageContainerComponent.html":{}}}],["one",{"_index":383,"title":{},"body":{"interfaces/ApplicationData.html":{},"interfaces/ApplicationData-1.html":{},"interfaces/MenuGroup.html":{},"interfaces/MenuGroup-1.html":{},"interfaces/MenuItem.html":{},"interfaces/MenuItem-1.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-readme.html":{}}}],["online",{"_index":1617,"title":{},"body":{"contributing.html":{}}}],["onstable",{"_index":786,"title":{},"body":{"injectables/MockNgZone.html":{}}}],["open",{"_index":84,"title":{},"body":{"components/AppContainerComponent.html":{},"components/PageContainerComponent.html":{},"contributing.html":{}}}],["opensourcemenu",{"_index":42,"title":{},"body":{"components/AppContainerComponent.html":{},"components/SidebarComponent.html":{}}}],["opensourcemenu.title",{"_index":1406,"title":{},"body":{"components/SidebarComponent.html":{}}}],["option",{"_index":560,"title":{},"body":{"interfaces/EditorJSConfig.html":{},"interfaces/NgxEditorJSConfig.html":{},"todo.html":{}}}],["optional",{"_index":52,"title":{},"body":{"components/AppContainerComponent.html":{},"injectables/AppService.html":{},"injectables/AppService-1.html":{},"interfaces/ApplicationData.html":{},"interfaces/ApplicationData-1.html":{},"injectables/ApplicationQuery.html":{},"injectables/ApplicationQuery-1.html":{},"interfaces/BasePlugin.html":{},"interfaces/BasePlugin-1.html":{},"interfaces/Block.html":{},"classes/Changed.html":{},"interfaces/EditorJSConfig.html":{},"injectables/EditorJSInstanceService.html":{},"interfaces/EventType.html":{},"interfaces/Header.html":{},"interfaces/HeaderBlock.html":{},"components/HomePageComponent.html":{},"interfaces/Image.html":{},"interfaces/ImageBlock.html":{},"interfaces/List.html":{},"interfaces/ListBlock.html":{},"interfaces/MenuGroup.html":{},"interfaces/MenuGroup-1.html":{},"interfaces/MenuItem.html":{},"interfaces/MenuItem-1.html":{},"classes/MockEditorJS.html":{},"injectables/MockNgZone.html":{},"components/NgxEditorJSComponent.html":{},"interfaces/NgxEditorJSConfig.html":{},"directives/NgxEditorJSDirective.html":{},"injectables/NgxEditorJSEffects.html":{},"modules/NgxEditorJSModule.html":{},"injectables/NgxEditorJSPluginService.html":{},"injectables/NgxEditorJSService.html":{},"classes/NotReady.html":{},"components/PageContainerComponent.html":{},"injectables/PagesQuery.html":{},"injectables/PagesService.html":{},"interfaces/Paragraph.html":{},"interfaces/ParagraphBlock.html":{},"interfaces/PluginConfig.html":{},"interfaces/PluginConfig-1.html":{},"classes/Ready.html":{},"classes/SaveEnd.html":{},"classes/SaveStart.html":{},"interfaces/ToolSettingsMap.html":{},"interfaces/ToolSettingsMap-1.html":{},"miscellaneous/functions.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-readme.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-readme/ngx-editorjs-changelog.html":{}}}],["options",{"_index":564,"title":{},"body":{"interfaces/EditorJSConfig.html":{},"interfaces/NgxEditorJSConfig.html":{},"injectables/NgxEditorJSService.html":{},"todo.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-readme.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-readme/ngx-editorjs-changelog.html":{}}}],["ordered",{"_index":463,"title":{},"body":{"interfaces/Block.html":{},"interfaces/Header.html":{},"interfaces/HeaderBlock.html":{},"interfaces/Image.html":{},"interfaces/ImageBlock.html":{},"interfaces/List.html":{},"interfaces/ListBlock.html":{},"interfaces/Paragraph.html":{},"interfaces/ParagraphBlock.html":{},"miscellaneous/typealiases.html":{}}}],["orientation",{"_index":1528,"title":{},"body":{"contributing.html":{}}}],["others",{"_index":1564,"title":{},"body":{"contributing.html":{}}}],["otherwise",{"_index":1624,"title":{},"body":{"contributing.html":{},"license.html":{}}}],["out",{"_index":212,"title":{},"body":{"modules/AppModule.html":{},"modules/ApplicationDataModule.html":{},"modules/EditorJSInstanceModule.html":{},"modules/NgxEditorJSModule.html":{},"modules/NgxEditorjsDemoModule.html":{},"modules/NgxEditorjsNgrxModule.html":{},"modules/NgxEditorjsPluginsModule.html":{},"modules/NgxTinynodesCoreModule.html":{},"modules/PageStoreModule.html":{},"modules/PluginCodeModule.html":{},"modules/PluginHeaderModule.html":{},"modules/PluginImageModule.html":{},"modules/PluginLinkModule.html":{},"modules/PluginListModule.html":{},"modules/PluginMarkerModule.html":{},"modules/PluginParagraphModule.html":{},"modules/PluginSimpleImageModule.html":{},"index.html":{},"license.html":{},"overview.html":{}}}],["output",{"_index":544,"title":{},"body":{"interfaces/EditorJSConfig.html":{},"components/NavBarComponent.html":{},"interfaces/NgxEditorJSConfig.html":{},"components/PageContainerComponent.html":{}}}],["outputdata",{"_index":519,"title":{},"body":{"classes/Changed.html":{},"interfaces/EditorJSConfig.html":{},"interfaces/NgxEditorJSConfig.html":{},"injectables/NgxEditorJSService.html":{},"classes/NotReady.html":{},"classes/Ready.html":{},"classes/SaveEnd.html":{},"classes/SaveStart.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-readme.html":{}}}],["outputs",{"_index":812,"title":{},"body":{"components/NavBarComponent.html":{}}}],["outside",{"_index":618,"title":{},"body":{"injectables/EditorJSInstanceService.html":{}}}],["over",{"_index":806,"title":{},"body":{"components/NavBarComponent.html":{}}}],["overall",{"_index":1414,"title":{},"body":{"changelog.html":{}}}],["overflow",{"_index":1252,"title":{},"body":{"components/PageContainerComponent.html":{}}}],["overide",{"_index":1193,"title":{},"body":{"components/PageContainerComponent.html":{}}}],["overriding",{"_index":1831,"title":{},"body":{"additional-documentation/tinynodes-library-docs/ngx-editorjs-readme.html":{}}}],["overview",{"_index":1774,"title":{"overview.html":{}},"body":{"overview.html":{}}}],["owners",{"_index":1472,"title":{},"body":{"contributing.html":{}}}],["package",{"_index":1434,"title":{"dependencies.html":{}},"body":{"changelog.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-readme/ngx-editorjs-changelog.html":{}}}],["padding",{"_index":145,"title":{},"body":{"components/AppContainerComponent.html":{},"components/NavBarComponent.html":{}}}],["page",{"_index":59,"title":{"interfaces/Page.html":{},"additional-documentation/tinynodes-library-docs.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-readme.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-readme/ngx-editorjs-changelog.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-plugins-readme.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-plugins-readme/ngx-editorjs-plugins-changelog.html":{}},"body":{"components/AppContainerComponent.html":{},"modules/AppModule.html":{},"components/HomePageComponent.html":{},"components/NavBarComponent.html":{},"components/NgxEditorJSComponent.html":{},"interfaces/Page.html":{},"interfaces/PageBlock.html":{},"components/PageContainerComponent.html":{},"modules/PageStoreModule.html":{},"injectables/PagesQuery.html":{},"injectables/PagesService.html":{},"interfaces/PagesState.html":{},"injectables/PagesStore.html":{},"components/SidebarComponent.html":{},"interfaces/Tag.html":{},"todo.html":{}}}],["page'},{'name",{"_index":175,"title":{},"body":{"components/AppContainerComponent.html":{},"components/HomePageComponent.html":{},"components/NavBarComponent.html":{},"components/NgxEditorJSComponent.html":{},"components/PageContainerComponent.html":{},"components/SidebarComponent.html":{}}}],["page.component",{"_index":253,"title":{},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{}}}],["page.component.html",{"_index":733,"title":{},"body":{"components/HomePageComponent.html":{}}}],["page.component.scss",{"_index":732,"title":{},"body":{"components/HomePageComponent.html":{}}}],["page.component.ts",{"_index":731,"title":{},"body":{"components/HomePageComponent.html":{}}}],["page.component.ts:12",{"_index":735,"title":{},"body":{"components/HomePageComponent.html":{}}}],["page.component.ts:9",{"_index":734,"title":{},"body":{"components/HomePageComponent.html":{}}}],["page.id",{"_index":1300,"title":{},"body":{"injectables/PagesService.html":{}}}],["pageblock",{"_index":1172,"title":{"interfaces/PageBlock.html":{}},"body":{"interfaces/Page.html":{},"interfaces/PageBlock.html":{},"injectables/PagesService.html":{},"interfaces/Tag.html":{}}}],["pagecontainercomponent",{"_index":182,"title":{"components/PageContainerComponent.html":{}},"body":{"components/AppContainerComponent.html":{},"components/HomePageComponent.html":{},"components/NavBarComponent.html":{},"components/NgxEditorJSComponent.html":{},"modules/NgxEditorjsDemoModule.html":{},"components/PageContainerComponent.html":{},"components/SidebarComponent.html":{},"overview.html":{},"miscellaneous/variables.html":{}}}],["pageid",{"_index":1280,"title":{},"body":{"injectables/PagesService.html":{}}}],["pages",{"_index":1183,"title":{},"body":{"components/PageContainerComponent.html":{},"modules/PageStoreModule.html":{},"injectables/PagesService.html":{},"interfaces/PagesState.html":{},"injectables/PagesStore.html":{}}}],["pages.models",{"_index":1268,"title":{},"body":{"injectables/PagesQuery.html":{},"injectables/PagesService.html":{},"interfaces/PagesState.html":{},"injectables/PagesStore.html":{}}}],["pages.query",{"_index":1262,"title":{},"body":{"modules/PageStoreModule.html":{},"injectables/PagesService.html":{}}}],["pages.service",{"_index":1263,"title":{},"body":{"modules/PageStoreModule.html":{}}}],["pages.store",{"_index":1264,"title":{},"body":{"modules/PageStoreModule.html":{},"injectables/PagesQuery.html":{},"injectables/PagesService.html":{}}}],["pages/home/home",{"_index":252,"title":{},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{}}}],["pagesquery",{"_index":1256,"title":{"injectables/PagesQuery.html":{}},"body":{"modules/PageStoreModule.html":{},"injectables/PagesQuery.html":{},"injectables/PagesService.html":{},"overview.html":{}}}],["pagesservice",{"_index":1186,"title":{"injectables/PagesService.html":{}},"body":{"components/PageContainerComponent.html":{},"modules/PageStoreModule.html":{},"injectables/PagesService.html":{},"overview.html":{}}}],["pagesstate",{"_index":1269,"title":{"interfaces/PagesState.html":{}},"body":{"injectables/PagesQuery.html":{},"interfaces/PagesState.html":{},"injectables/PagesStore.html":{}}}],["pagesstore",{"_index":1257,"title":{"injectables/PagesStore.html":{}},"body":{"modules/PageStoreModule.html":{},"injectables/PagesQuery.html":{},"injectables/PagesService.html":{},"interfaces/PagesState.html":{},"injectables/PagesStore.html":{},"overview.html":{}}}],["pagestoremodule",{"_index":1096,"title":{"modules/PageStoreModule.html":{}},"body":{"modules/NgxEditorjsDemoModule.html":{},"modules/PageStoreModule.html":{},"modules.html":{},"overview.html":{}}}],["pagetags",{"_index":1171,"title":{},"body":{"interfaces/Page.html":{},"interfaces/PageBlock.html":{},"injectables/PagesService.html":{},"interfaces/Tag.html":{}}}],["pagetitle",{"_index":37,"title":{},"body":{"components/AppContainerComponent.html":{},"interfaces/Page.html":{},"interfaces/PageBlock.html":{},"injectables/PagesService.html":{},"interfaces/Tag.html":{}}}],["panel",{"_index":1198,"title":{},"body":{"components/PageContainerComponent.html":{}}}],["panelopen",{"_index":1182,"title":{},"body":{"components/PageContainerComponent.html":{}}}],["paragraph",{"_index":469,"title":{"interfaces/Paragraph.html":{}},"body":{"interfaces/Block.html":{},"interfaces/EditorJSConfig.html":{},"interfaces/Header.html":{},"interfaces/HeaderBlock.html":{},"interfaces/Image.html":{},"interfaces/ImageBlock.html":{},"interfaces/List.html":{},"interfaces/ListBlock.html":{},"components/NgxEditorJSComponent.html":{},"interfaces/NgxEditorJSConfig.html":{},"directives/NgxEditorJSDirective.html":{},"components/PageContainerComponent.html":{},"interfaces/Paragraph.html":{},"interfaces/ParagraphBlock.html":{},"injectables/PluginParagraph.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-readme.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-readme/ngx-editorjs-changelog.html":{}}}],["paragraph.plugin",{"_index":1380,"title":{},"body":{"modules/PluginParagraphModule.html":{}}}],["paragraphblock",{"_index":470,"title":{"interfaces/ParagraphBlock.html":{}},"body":{"interfaces/Block.html":{},"interfaces/Header.html":{},"interfaces/HeaderBlock.html":{},"interfaces/Image.html":{},"interfaces/ImageBlock.html":{},"interfaces/List.html":{},"interfaces/ListBlock.html":{},"interfaces/Paragraph.html":{},"interfaces/ParagraphBlock.html":{},"miscellaneous/typealiases.html":{}}}],["param",{"_index":330,"title":{},"body":{"injectables/AppService.html":{},"injectables/AppService-1.html":{},"injectables/ApplicationQuery.html":{},"injectables/ApplicationQuery-1.html":{},"injectables/EditorJSInstanceService.html":{},"components/NgxEditorJSComponent.html":{},"directives/NgxEditorJSDirective.html":{},"modules/NgxEditorJSModule.html":{},"injectables/NgxEditorJSPluginService.html":{},"injectables/NgxEditorJSService.html":{},"components/PageContainerComponent.html":{},"injectables/PagesService.html":{}}}],["parameter",{"_index":1869,"title":{},"body":{"additional-documentation/tinynodes-library-docs/ngx-editorjs-readme/ngx-editorjs-changelog.html":{}}}],["parameters",{"_index":48,"title":{},"body":{"components/AppContainerComponent.html":{},"injectables/AppService.html":{},"injectables/AppService-1.html":{},"injectables/ApplicationQuery.html":{},"injectables/ApplicationQuery-1.html":{},"classes/Changed.html":{},"injectables/EditorJSInstanceService.html":{},"components/HomePageComponent.html":{},"classes/MockEditorJS.html":{},"injectables/MockNgZone.html":{},"components/NgxEditorJSComponent.html":{},"directives/NgxEditorJSDirective.html":{},"injectables/NgxEditorJSEffects.html":{},"modules/NgxEditorJSModule.html":{},"injectables/NgxEditorJSPluginService.html":{},"injectables/NgxEditorJSService.html":{},"classes/NotReady.html":{},"components/PageContainerComponent.html":{},"injectables/PagesQuery.html":{},"injectables/PagesService.html":{},"classes/Ready.html":{},"classes/SaveEnd.html":{},"classes/SaveStart.html":{},"contributing.html":{},"miscellaneous/functions.html":{}}}],["parentmodule",{"_index":992,"title":{},"body":{"modules/NgxEditorJSModule.html":{}}}],["participants",{"_index":1552,"title":{},"body":{"contributing.html":{}}}],["participation",{"_index":1507,"title":{},"body":{"contributing.html":{}}}],["particular",{"_index":1756,"title":{},"body":{"license.html":{}}}],["pass",{"_index":976,"title":{},"body":{"modules/NgxEditorJSModule.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-readme.html":{}}}],["passed",{"_index":561,"title":{},"body":{"interfaces/EditorJSConfig.html":{},"interfaces/NgxEditorJSConfig.html":{},"injectables/NgxEditorJSPluginService.html":{}}}],["paste",{"_index":1241,"title":{},"body":{"components/PageContainerComponent.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-plugins-readme.html":{}}}],["path",{"_index":274,"title":{},"body":{"modules/AppRoutingModule.html":{},"miscellaneous/variables.html":{}}}],["pathmatch",{"_index":276,"title":{},"body":{"modules/AppRoutingModule.html":{},"miscellaneous/variables.html":{}}}],["paths",{"_index":895,"title":{},"body":{"directives/NgxEditorJSDirective.html":{}}}],["payload",{"_index":496,"title":{},"body":{"interfaces/BlocksMap.html":{},"interfaces/ChangeMap.html":{},"classes/Changed.html":{},"injectables/EditorJSInstanceService.html":{},"interfaces/EditorMap.html":{},"interfaces/EventMap.html":{},"interfaces/EventType.html":{},"classes/NotReady.html":{},"classes/Ready.html":{},"interfaces/ReadyMap.html":{},"classes/SaveEnd.html":{},"classes/SaveStart.html":{}}}],["peer",{"_index":1787,"title":{},"body":{"todo.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-plugins-readme.html":{}}}],["peerdependencies",{"_index":1879,"title":{},"body":{"additional-documentation/tinynodes-library-docs/ngx-editorjs-plugins-readme.html":{}}}],["permanent",{"_index":1648,"title":{},"body":{"contributing.html":{}}}],["permanently",{"_index":1595,"title":{},"body":{"contributing.html":{}}}],["permission",{"_index":1498,"title":{},"body":{"contributing.html":{},"license.html":{}}}],["permit",{"_index":1738,"title":{},"body":{"license.html":{}}}],["person",{"_index":1721,"title":{},"body":{"license.html":{}}}],["personal",{"_index":1523,"title":{},"body":{"contributing.html":{}}}],["persons",{"_index":1739,"title":{},"body":{"license.html":{}}}],["physical",{"_index":1566,"title":{},"body":{"contributing.html":{}}}],["pipe",{"_index":115,"title":{},"body":{"components/AppContainerComponent.html":{},"injectables/EditorJSInstanceService.html":{},"injectables/NgxEditorJSService.html":{}}}],["pipeline",{"_index":1780,"title":{},"body":{"todo.html":{}}}],["piper",{"_index":1710,"title":{},"body":{"index.html":{},"license.html":{}}}],["placeholder",{"_index":540,"title":{},"body":{"interfaces/EditorJSConfig.html":{},"components/NgxEditorJSComponent.html":{},"interfaces/NgxEditorJSConfig.html":{},"directives/NgxEditorJSDirective.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-readme.html":{}}}],["please",{"_index":1466,"title":{},"body":{"contributing.html":{},"additional-documentation/tinynodes-library-docs.html":{}}}],["pledge",{"_index":1501,"title":{},"body":{"contributing.html":{}}}],["plug",{"_index":1142,"title":{},"body":{"modules/NgxEditorjsPluginsModule.html":{}}}],["plugin",{"_index":431,"title":{},"body":{"interfaces/BasePlugin.html":{},"interfaces/BasePlugin-1.html":{},"interfaces/Block.html":{},"interfaces/Header.html":{},"interfaces/HeaderBlock.html":{},"interfaces/Image.html":{},"interfaces/ImageBlock.html":{},"interfaces/List.html":{},"interfaces/ListBlock.html":{},"classes/MockEditorJS.html":{},"classes/MockPlugin.html":{},"injectables/NgxEditorJSPluginService.html":{},"components/PageContainerComponent.html":{},"interfaces/Paragraph.html":{},"interfaces/ParagraphBlock.html":{},"injectables/PluginCode.html":{},"interfaces/PluginConfig.html":{},"interfaces/PluginConfig-1.html":{},"injectables/PluginHeader.html":{},"injectables/PluginImage.html":{},"injectables/PluginLink.html":{},"injectables/PluginList.html":{},"injectables/PluginMarker.html":{},"injectables/PluginParagraph.html":{},"injectables/PluginSimpleImage.html":{},"classes/TestClass.html":{},"interfaces/ToolSettingsMap.html":{},"interfaces/ToolSettingsMap-1.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-readme.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-readme/ngx-editorjs-changelog.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-plugins-readme.html":{}}}],["plugin.plugin",{"_index":1033,"title":{},"body":{"injectables/NgxEditorJSPluginService.html":{}}}],["plugin.shortcut",{"_index":1032,"title":{},"body":{"injectables/NgxEditorJSPluginService.html":{}}}],["plugincode",{"_index":1312,"title":{"injectables/PluginCode.html":{}},"body":{"injectables/PluginCode.html":{},"modules/PluginCodeModule.html":{},"overview.html":{}}}],["plugincodemodule",{"_index":1097,"title":{"modules/PluginCodeModule.html":{}},"body":{"modules/NgxEditorjsDemoModule.html":{},"modules/NgxEditorjsPluginsModule.html":{},"modules/PluginCodeModule.html":{},"modules.html":{},"overview.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-plugins-readme.html":{}}}],["pluginconfig",{"_index":442,"title":{"interfaces/PluginConfig.html":{},"interfaces/PluginConfig-1.html":{}},"body":{"interfaces/BasePlugin.html":{},"interfaces/BasePlugin-1.html":{},"injectables/NgxEditorJSPluginService.html":{},"interfaces/PluginConfig.html":{},"interfaces/PluginConfig-1.html":{},"interfaces/ToolSettingsMap.html":{},"interfaces/ToolSettingsMap-1.html":{},"miscellaneous/functions.html":{}}}],["pluginheader",{"_index":1325,"title":{"injectables/PluginHeader.html":{}},"body":{"injectables/PluginHeader.html":{},"modules/PluginHeaderModule.html":{},"overview.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-readme.html":{}}}],["pluginheadermodule",{"_index":1098,"title":{"modules/PluginHeaderModule.html":{}},"body":{"modules/NgxEditorjsDemoModule.html":{},"modules/NgxEditorjsPluginsModule.html":{},"modules/PluginHeaderModule.html":{},"modules.html":{},"overview.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-readme.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-plugins-readme.html":{}}}],["pluginilistmodule",{"_index":1883,"title":{},"body":{"additional-documentation/tinynodes-library-docs/ngx-editorjs-plugins-readme.html":{}}}],["pluginimage",{"_index":1334,"title":{"injectables/PluginImage.html":{}},"body":{"injectables/PluginImage.html":{},"modules/PluginImageModule.html":{},"overview.html":{}}}],["pluginimagemodule",{"_index":1137,"title":{"modules/PluginImageModule.html":{}},"body":{"modules/NgxEditorjsPluginsModule.html":{},"modules/PluginImageModule.html":{},"modules.html":{},"overview.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-plugins-readme.html":{}}}],["pluginlink",{"_index":1343,"title":{"injectables/PluginLink.html":{}},"body":{"injectables/PluginLink.html":{},"modules/PluginLinkModule.html":{},"overview.html":{}}}],["pluginlinkmodule",{"_index":1099,"title":{"modules/PluginLinkModule.html":{}},"body":{"modules/NgxEditorjsDemoModule.html":{},"modules/NgxEditorjsPluginsModule.html":{},"modules/PluginLinkModule.html":{},"modules.html":{},"overview.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-plugins-readme.html":{}}}],["pluginlist",{"_index":1352,"title":{"injectables/PluginList.html":{}},"body":{"injectables/PluginList.html":{},"modules/PluginListModule.html":{},"overview.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-readme.html":{}}}],["pluginlistmodule",{"_index":1100,"title":{"modules/PluginListModule.html":{}},"body":{"modules/NgxEditorjsDemoModule.html":{},"modules/NgxEditorjsPluginsModule.html":{},"modules/PluginListModule.html":{},"modules.html":{},"overview.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-readme.html":{}}}],["pluginmarker",{"_index":1361,"title":{"injectables/PluginMarker.html":{}},"body":{"injectables/PluginMarker.html":{},"modules/PluginMarkerModule.html":{},"overview.html":{}}}],["pluginmarkermodule",{"_index":1101,"title":{"modules/PluginMarkerModule.html":{}},"body":{"modules/NgxEditorjsDemoModule.html":{},"modules/NgxEditorjsPluginsModule.html":{},"modules/PluginMarkerModule.html":{},"modules.html":{},"overview.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-plugins-readme.html":{}}}],["pluginparagraph",{"_index":1373,"title":{"injectables/PluginParagraph.html":{}},"body":{"injectables/PluginParagraph.html":{},"modules/PluginParagraphModule.html":{},"overview.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-readme.html":{}}}],["pluginparagraphmodule",{"_index":1102,"title":{"modules/PluginParagraphModule.html":{}},"body":{"modules/NgxEditorjsDemoModule.html":{},"modules/NgxEditorjsPluginsModule.html":{},"modules/PluginParagraphModule.html":{},"modules.html":{},"overview.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-readme.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-plugins-readme.html":{}}}],["plugins",{"_index":450,"title":{"additional-documentation/tinynodes-library-docs/ngx-editorjs-plugins-readme.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-plugins-readme/ngx-editorjs-plugins-changelog.html":{}},"body":{"interfaces/BasePlugin.html":{},"interfaces/BasePlugin-1.html":{},"injectables/NgxEditorJSPluginService.html":{},"injectables/NgxEditorJSService.html":{},"modules/NgxEditorjsDemoModule.html":{},"interfaces/PluginConfig.html":{},"interfaces/PluginConfig-1.html":{},"interfaces/ToolSettingsMap.html":{},"interfaces/ToolSettingsMap-1.html":{},"changelog.html":{},"index.html":{},"miscellaneous/variables.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-readme.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-readme/ngx-editorjs-changelog.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-plugins-readme.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-plugins-readme/ngx-editorjs-plugins-changelog.html":{}}}],["plugins.module.ts",{"_index":1139,"title":{},"body":{"modules/NgxEditorjsPluginsModule.html":{}}}],["plugins.service",{"_index":1066,"title":{},"body":{"injectables/NgxEditorJSService.html":{}}}],["plugins/code/code.module",{"_index":1146,"title":{},"body":{"modules/NgxEditorjsPluginsModule.html":{}}}],["plugins/header/header.module",{"_index":1147,"title":{},"body":{"modules/NgxEditorjsPluginsModule.html":{}}}],["plugins/image/image.module",{"_index":1148,"title":{},"body":{"modules/NgxEditorjsPluginsModule.html":{}}}],["plugins/link/link.module",{"_index":1149,"title":{},"body":{"modules/NgxEditorjsPluginsModule.html":{}}}],["plugins/list/list.module",{"_index":1150,"title":{},"body":{"modules/NgxEditorjsPluginsModule.html":{}}}],["plugins/marker/marker.module",{"_index":1151,"title":{},"body":{"modules/NgxEditorjsPluginsModule.html":{}}}],["plugins/paragraph/paragraph.module",{"_index":1152,"title":{},"body":{"modules/NgxEditorjsPluginsModule.html":{}}}],["plugins/simple",{"_index":1153,"title":{},"body":{"modules/NgxEditorjsPluginsModule.html":{}}}],["plugins/src/lib/ngx",{"_index":1138,"title":{},"body":{"modules/NgxEditorjsPluginsModule.html":{}}}],["plugins/src/lib/plugins/code/code.module.ts",{"_index":1318,"title":{},"body":{"modules/PluginCodeModule.html":{}}}],["plugins/src/lib/plugins/code/code.plugin.ts",{"_index":1313,"title":{},"body":{"injectables/PluginCode.html":{}}}],["plugins/src/lib/plugins/code/code.plugin.ts:14",{"_index":1314,"title":{},"body":{"injectables/PluginCode.html":{}}}],["plugins/src/lib/plugins/header/header.module.ts",{"_index":1331,"title":{},"body":{"modules/PluginHeaderModule.html":{}}}],["plugins/src/lib/plugins/header/header.plugin.ts",{"_index":1326,"title":{},"body":{"injectables/PluginHeader.html":{}}}],["plugins/src/lib/plugins/header/header.plugin.ts:14",{"_index":1327,"title":{},"body":{"injectables/PluginHeader.html":{}}}],["plugins/src/lib/plugins/image/image.module.ts",{"_index":1340,"title":{},"body":{"modules/PluginImageModule.html":{}}}],["plugins/src/lib/plugins/image/image.plugin.ts",{"_index":1335,"title":{},"body":{"injectables/PluginImage.html":{}}}],["plugins/src/lib/plugins/image/image.plugin.ts:14",{"_index":1336,"title":{},"body":{"injectables/PluginImage.html":{}}}],["plugins/src/lib/plugins/link/link.module.ts",{"_index":1349,"title":{},"body":{"modules/PluginLinkModule.html":{}}}],["plugins/src/lib/plugins/link/link.plugin.ts",{"_index":1344,"title":{},"body":{"injectables/PluginLink.html":{}}}],["plugins/src/lib/plugins/link/link.plugin.ts:14",{"_index":1345,"title":{},"body":{"injectables/PluginLink.html":{}}}],["plugins/src/lib/plugins/list/list.module.ts",{"_index":1358,"title":{},"body":{"modules/PluginListModule.html":{}}}],["plugins/src/lib/plugins/list/list.plugin.ts",{"_index":1353,"title":{},"body":{"injectables/PluginList.html":{}}}],["plugins/src/lib/plugins/list/list.plugin.ts:14",{"_index":1354,"title":{},"body":{"injectables/PluginList.html":{}}}],["plugins/src/lib/plugins/marker/marker.module.ts",{"_index":1370,"title":{},"body":{"modules/PluginMarkerModule.html":{}}}],["plugins/src/lib/plugins/marker/marker.plugin.ts",{"_index":1362,"title":{},"body":{"injectables/PluginMarker.html":{}}}],["plugins/src/lib/plugins/marker/marker.plugin.ts:14",{"_index":1364,"title":{},"body":{"injectables/PluginMarker.html":{}}}],["plugins/src/lib/plugins/marker/marker.plugin.ts:20",{"_index":1365,"title":{},"body":{"injectables/PluginMarker.html":{}}}],["plugins/src/lib/plugins/paragraph/paragraph.module.ts",{"_index":1379,"title":{},"body":{"modules/PluginParagraphModule.html":{}}}],["plugins/src/lib/plugins/paragraph/paragraph.plugin.ts",{"_index":1374,"title":{},"body":{"injectables/PluginParagraph.html":{}}}],["plugins/src/lib/plugins/paragraph/paragraph.plugin.ts:14",{"_index":1375,"title":{},"body":{"injectables/PluginParagraph.html":{}}}],["plugins/src/lib/plugins/simple",{"_index":1383,"title":{},"body":{"injectables/PluginSimpleImage.html":{},"modules/PluginSimpleImageModule.html":{}}}],["plugins/src/lib/types/plugins.ts",{"_index":457,"title":{},"body":{"interfaces/BasePlugin-1.html":{},"interfaces/PluginConfig-1.html":{},"interfaces/ToolSettingsMap-1.html":{},"miscellaneous/variables.html":{}}}],["plugins/src/lib/types/plugins.ts:17",{"_index":1410,"title":{},"body":{"interfaces/ToolSettingsMap-1.html":{}}}],["plugins/src/lib/types/plugins.ts:7",{"_index":1324,"title":{},"body":{"interfaces/PluginConfig-1.html":{}}}],["pluginservice",{"_index":1885,"title":{},"body":{"additional-documentation/tinynodes-library-docs/ngx-editorjs-plugins-readme/ngx-editorjs-plugins-changelog.html":{}}}],["pluginsimpleimage",{"_index":1382,"title":{"injectables/PluginSimpleImage.html":{}},"body":{"injectables/PluginSimpleImage.html":{},"modules/PluginSimpleImageModule.html":{},"overview.html":{}}}],["pluginsimpleimagemodule",{"_index":1103,"title":{"modules/PluginSimpleImageModule.html":{}},"body":{"modules/NgxEditorjsDemoModule.html":{},"modules/NgxEditorjsPluginsModule.html":{},"modules/PluginSimpleImageModule.html":{},"modules.html":{},"overview.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-plugins-readme.html":{}}}],["pluginsmap",{"_index":1020,"title":{},"body":{"injectables/NgxEditorJSPluginService.html":{}}}],["pointer",{"_index":149,"title":{},"body":{"components/AppContainerComponent.html":{},"components/NavBarComponent.html":{}}}],["pointing",{"_index":1244,"title":{},"body":{"components/PageContainerComponent.html":{}}}],["policies",{"_index":1641,"title":{},"body":{"contributing.html":{}}}],["political",{"_index":1561,"title":{},"body":{"contributing.html":{}}}],["portions",{"_index":1747,"title":{},"body":{"license.html":{}}}],["ports",{"_index":1485,"title":{},"body":{"contributing.html":{}}}],["position",{"_index":853,"title":{},"body":{"components/NgxEditorJSComponent.html":{}}}],["positive",{"_index":1533,"title":{},"body":{"contributing.html":{}}}],["possible",{"_index":1144,"title":{},"body":{"modules/NgxEditorjsPluginsModule.html":{}}}],["posted",{"_index":1642,"title":{},"body":{"contributing.html":{}}}],["posting",{"_index":1610,"title":{},"body":{"contributing.html":{}}}],["potential",{"_index":1826,"title":{},"body":{"additional-documentation/tinynodes-library-docs/ngx-editorjs-readme.html":{}}}],["pre",{"_index":1876,"title":{},"body":{"additional-documentation/tinynodes-library-docs/ngx-editorjs-readme/ngx-editorjs-changelog.html":{}}}],["pressed",{"_index":816,"title":{},"body":{"components/NavBarComponent.html":{}}}],["private",{"_index":101,"title":{},"body":{"components/AppContainerComponent.html":{},"injectables/AppService.html":{},"injectables/AppService-1.html":{},"injectables/EditorJSInstanceService.html":{},"directives/NgxEditorJSDirective.html":{},"injectables/NgxEditorJSEffects.html":{},"injectables/NgxEditorJSPluginService.html":{},"injectables/NgxEditorJSService.html":{},"components/PageContainerComponent.html":{},"injectables/PagesService.html":{},"contributing.html":{}}}],["process",{"_index":898,"title":{},"body":{"directives/NgxEditorJSDirective.html":{},"contributing.html":{}}}],["produced",{"_index":1021,"title":{},"body":{"injectables/NgxEditorJSPluginService.html":{}}}],["production",{"_index":1804,"title":{},"body":{"miscellaneous/variables.html":{}}}],["professional",{"_index":1573,"title":{},"body":{"contributing.html":{}}}],["project",{"_index":1447,"title":{},"body":{"changelog.html":{},"contributing.html":{},"index.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-readme.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-readme/ngx-editorjs-changelog.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-plugins-readme.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-plugins-readme/ngx-editorjs-plugins-changelog.html":{}}}],["project's",{"_index":1651,"title":{},"body":{"contributing.html":{}}}],["projects",{"_index":81,"title":{},"body":{"components/AppContainerComponent.html":{},"additional-documentation/tinynodes-library-docs.html":{}}}],["projectsmenu",{"_index":41,"title":{},"body":{"components/AppContainerComponent.html":{},"components/SidebarComponent.html":{}}}],["projectsmenu.title",{"_index":1404,"title":{},"body":{"components/SidebarComponent.html":{}}}],["promise",{"_index":778,"title":{},"body":{"classes/MockEditorJS.html":{},"classes/MockPlugin.html":{},"injectables/NgxEditorJSService.html":{},"classes/TestClass.html":{}}}],["promise.resolve",{"_index":779,"title":{},"body":{"classes/MockEditorJS.html":{},"classes/MockPlugin.html":{},"classes/TestClass.html":{}}}],["properties",{"_index":29,"title":{},"body":{"components/AppContainerComponent.html":{},"interfaces/ApplicationData.html":{},"interfaces/ApplicationData-1.html":{},"interfaces/ApplicationState.html":{},"interfaces/ApplicationState-1.html":{},"interfaces/BasePlugin.html":{},"interfaces/BasePlugin-1.html":{},"interfaces/Block.html":{},"classes/Changed.html":{},"interfaces/DemoData.html":{},"interfaces/DemoData-1.html":{},"interfaces/EditorJSConfig.html":{},"interfaces/EventType.html":{},"interfaces/Header.html":{},"interfaces/HeaderBlock.html":{},"interfaces/Image.html":{},"interfaces/ImageBlock.html":{},"interfaces/List.html":{},"interfaces/ListBlock.html":{},"interfaces/MenuGroup.html":{},"interfaces/MenuGroup-1.html":{},"interfaces/MenuItem.html":{},"interfaces/MenuItem-1.html":{},"classes/MockEditorJS.html":{},"injectables/MockNgZone.html":{},"components/NgxEditorJSComponent.html":{},"interfaces/NgxEditorJSConfig.html":{},"interfaces/NgxEditorJSDemo.html":{},"interfaces/NgxEditorJSDemo-1.html":{},"injectables/NgxEditorJSEffects.html":{},"classes/NotReady.html":{},"interfaces/Page.html":{},"interfaces/PageBlock.html":{},"components/PageContainerComponent.html":{},"injectables/PagesService.html":{},"interfaces/Paragraph.html":{},"interfaces/ParagraphBlock.html":{},"classes/Ready.html":{},"classes/SaveEnd.html":{},"classes/SaveStart.html":{},"interfaces/Tag.html":{},"interfaces/TinynodeDemos.html":{},"interfaces/TinynodeDemos-1.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-readme/ngx-editorjs-changelog.html":{}}}],["property",{"_index":479,"title":{},"body":{"interfaces/Block.html":{},"interfaces/Header.html":{},"interfaces/HeaderBlock.html":{},"interfaces/Image.html":{},"interfaces/ImageBlock.html":{},"interfaces/List.html":{},"interfaces/ListBlock.html":{},"directives/NgxEditorJSDirective.html":{},"interfaces/Paragraph.html":{},"interfaces/ParagraphBlock.html":{}}}],["provide",{"_index":389,"title":{},"body":{"modules/ApplicationDataModule.html":{},"injectables/ApplicationQuery.html":{},"injectables/ApplicationQuery-1.html":{},"injectables/ApplicationStore.html":{},"injectables/ApplicationStore-1.html":{},"modules/EditorJSInstanceModule.html":{},"modules/NgxEditorJSModule.html":{},"modules/NgxEditorjsDemoModule.html":{},"modules/NgxEditorjsPluginsModule.html":{},"todo.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-readme.html":{}}}],["provided",{"_index":400,"title":{},"body":{"injectables/ApplicationQuery.html":{},"injectables/ApplicationQuery-1.html":{},"interfaces/Block.html":{},"injectables/EditorJSInstanceService.html":{},"interfaces/Header.html":{},"interfaces/HeaderBlock.html":{},"interfaces/Image.html":{},"interfaces/ImageBlock.html":{},"interfaces/List.html":{},"interfaces/ListBlock.html":{},"components/NgxEditorJSComponent.html":{},"modules/NgxEditorJSModule.html":{},"interfaces/Paragraph.html":{},"interfaces/ParagraphBlock.html":{},"license.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-readme.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-readme/ngx-editorjs-changelog.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-plugins-readme/ngx-editorjs-plugins-changelog.html":{}}}],["providedin",{"_index":647,"title":{},"body":{"injectables/EditorJSInstanceService.html":{},"injectables/NgxEditorJSPluginService.html":{},"injectables/NgxEditorJSService.html":{}}}],["provider",{"_index":300,"title":{},"body":{"injectables/AppService.html":{},"injectables/AppService-1.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-readme.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-readme/ngx-editorjs-changelog.html":{}}}],["providers",{"_index":198,"title":{},"body":{"modules/AppModule.html":{},"injectables/AppService.html":{},"injectables/AppService-1.html":{},"modules/ApplicationDataModule.html":{},"modules/EditorJSInstanceModule.html":{},"modules/NgxEditorJSModule.html":{},"modules/NgxEditorjsDemoModule.html":{},"modules/NgxEditorjsNgrxModule.html":{},"modules/NgxEditorjsPluginsModule.html":{},"modules/NgxTinynodesCoreModule.html":{},"modules/PageStoreModule.html":{},"modules/PluginCodeModule.html":{},"modules/PluginHeaderModule.html":{},"modules/PluginImageModule.html":{},"modules/PluginLinkModule.html":{},"modules/PluginListModule.html":{},"modules/PluginMarkerModule.html":{},"modules/PluginParagraphModule.html":{},"modules/PluginSimpleImageModule.html":{},"overview.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-readme.html":{}}}],["provides",{"_index":15,"title":{},"body":{"components/AppContainerComponent.html":{},"modules/AppRoutingModule.html":{},"injectables/AppService.html":{},"injectables/AppService-1.html":{},"modules/EditorJSInstanceModule.html":{},"injectables/EditorJSInstanceService.html":{},"components/NavBarComponent.html":{},"directives/NgxEditorJSDirective.html":{},"modules/NgxEditorJSModule.html":{},"injectables/NgxEditorJSPluginService.html":{},"injectables/NgxEditorJSService.html":{},"modules/NgxEditorjsNgrxModule.html":{},"modules/NgxEditorjsPluginsModule.html":{},"modules/NgxTinynodesCoreModule.html":{},"components/PageContainerComponent.html":{},"injectables/PagesService.html":{},"modules/PluginCodeModule.html":{},"modules/PluginHeaderModule.html":{},"modules/PluginImageModule.html":{},"modules/PluginLinkModule.html":{},"modules/PluginListModule.html":{},"modules/PluginMarkerModule.html":{},"modules/PluginParagraphModule.html":{},"modules/PluginSimpleImageModule.html":{},"changelog.html":{},"index.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-readme.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-readme/ngx-editorjs-changelog.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-plugins-readme.html":{}}}],["providing",{"_index":1849,"title":{},"body":{"additional-documentation/tinynodes-library-docs/ngx-editorjs-readme/ngx-editorjs-changelog.html":{}}}],["provied",{"_index":565,"title":{},"body":{"interfaces/EditorJSConfig.html":{},"interfaces/NgxEditorJSConfig.html":{},"miscellaneous/variables.html":{}}}],["public",{"_index":34,"title":{},"body":{"components/AppContainerComponent.html":{},"injectables/AppService.html":{},"injectables/AppService-1.html":{},"classes/Changed.html":{},"injectables/EditorJSInstanceService.html":{},"components/HomePageComponent.html":{},"classes/MockEditorJS.html":{},"classes/MockPlugin.html":{},"components/NgxEditorJSComponent.html":{},"directives/NgxEditorJSDirective.html":{},"injectables/NgxEditorJSPluginService.html":{},"injectables/NgxEditorJSService.html":{},"classes/NotReady.html":{},"components/PageContainerComponent.html":{},"injectables/PagesService.html":{},"injectables/PluginCode.html":{},"injectables/PluginHeader.html":{},"injectables/PluginImage.html":{},"injectables/PluginLink.html":{},"injectables/PluginList.html":{},"injectables/PluginMarker.html":{},"injectables/PluginParagraph.html":{},"injectables/PluginSimpleImage.html":{},"classes/Ready.html":{},"classes/SaveEnd.html":{},"classes/SaveStart.html":{},"classes/TestClass.html":{},"contributing.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-plugins-readme/ngx-editorjs-plugins-changelog.html":{}}}],["publish",{"_index":1732,"title":{},"body":{"license.html":{},"todo.html":{}}}],["published",{"_index":1127,"title":{},"body":{"modules/NgxEditorjsNgrxModule.html":{}}}],["publishing",{"_index":1563,"title":{},"body":{"contributing.html":{},"todo.html":{}}}],["pull",{"_index":1477,"title":{},"body":{"contributing.html":{}}}],["purpose",{"_index":1757,"title":{},"body":{"license.html":{}}}],["queried",{"_index":289,"title":{},"body":{"injectables/AppService.html":{},"injectables/AppService-1.html":{}}}],["query",{"_index":299,"title":{},"body":{"injectables/AppService.html":{},"injectables/AppService-1.html":{},"injectables/ApplicationQuery.html":{},"injectables/ApplicationQuery-1.html":{},"injectables/PagesService.html":{}}}],["queryentity",{"_index":1266,"title":{},"body":{"injectables/PagesQuery.html":{}}}],["race",{"_index":1525,"title":{},"body":{"contributing.html":{}}}],["radius",{"_index":862,"title":{},"body":{"components/NgxEditorJSComponent.html":{}}}],["reactiveformsmodule",{"_index":1107,"title":{},"body":{"modules/NgxEditorjsDemoModule.html":{}}}],["readme",{"_index":1707,"title":{"additional-documentation/tinynodes-library-docs/ngx-editorjs-readme.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-plugins-readme.html":{}},"body":{"index.html":{},"additional-documentation/tinynodes-library-docs.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-readme/ngx-editorjs-changelog.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-plugins-readme.html":{}}}],["readme.md",{"_index":1482,"title":{},"body":{"contributing.html":{},"additional-documentation/tinynodes-library-docs.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-plugins-readme/ngx-editorjs-plugins-changelog.html":{}}}],["readonly",{"_index":102,"title":{},"body":{"components/AppContainerComponent.html":{},"injectables/AppService.html":{},"injectables/AppService-1.html":{},"classes/Changed.html":{},"injectables/EditorJSInstanceService.html":{},"components/HomePageComponent.html":{},"components/NgxEditorJSComponent.html":{},"directives/NgxEditorJSDirective.html":{},"injectables/NgxEditorJSEffects.html":{},"injectables/NgxEditorJSService.html":{},"classes/NotReady.html":{},"components/PageContainerComponent.html":{},"injectables/PagesService.html":{},"classes/Ready.html":{},"classes/SaveEnd.html":{},"classes/SaveStart.html":{}}}],["ready",{"_index":501,"title":{"classes/Ready.html":{}},"body":{"interfaces/BlocksMap.html":{},"interfaces/ChangeMap.html":{},"classes/Changed.html":{},"injectables/EditorJSInstanceService.html":{},"interfaces/EditorMap.html":{},"interfaces/EventMap.html":{},"interfaces/EventType.html":{},"directives/NgxEditorJSDirective.html":{},"injectables/NgxEditorJSService.html":{},"classes/NotReady.html":{},"classes/Ready.html":{},"interfaces/ReadyMap.html":{},"classes/SaveEnd.html":{},"classes/SaveStart.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/typealiases.html":{}}}],["readymap",{"_index":502,"title":{"interfaces/ReadyMap.html":{}},"body":{"interfaces/BlocksMap.html":{},"interfaces/ChangeMap.html":{},"injectables/EditorJSInstanceService.html":{},"interfaces/EditorMap.html":{},"interfaces/EventMap.html":{},"interfaces/EventType.html":{},"interfaces/ReadyMap.html":{},"miscellaneous/variables.html":{}}}],["reasonably",{"_index":1570,"title":{},"body":{"contributing.html":{}}}],["redirectto",{"_index":275,"title":{},"body":{"modules/AppRoutingModule.html":{},"miscellaneous/variables.html":{}}}],["reduce((finaltools",{"_index":1031,"title":{},"body":{"injectables/NgxEditorJSPluginService.html":{}}}],["ref",{"_index":603,"title":{},"body":{"injectables/EditorJSInstanceService.html":{},"components/PageContainerComponent.html":{}}}],["reference",{"_index":607,"title":{},"body":{"injectables/EditorJSInstanceService.html":{}}}],["regard",{"_index":1638,"title":{},"body":{"contributing.html":{}}}],["regardless",{"_index":1513,"title":{},"body":{"contributing.html":{}}}],["regenerated",{"_index":1865,"title":{},"body":{"additional-documentation/tinynodes-library-docs/ngx-editorjs-readme/ngx-editorjs-changelog.html":{}}}],["registered",{"_index":1017,"title":{},"body":{"injectables/NgxEditorJSPluginService.html":{}}}],["reject",{"_index":1587,"title":{},"body":{"contributing.html":{}}}],["related",{"_index":1249,"title":{},"body":{"components/PageContainerComponent.html":{},"changelog.html":{}}}],["relative",{"_index":854,"title":{},"body":{"components/NgxEditorJSComponent.html":{}}}],["release",{"_index":1423,"title":{},"body":{"changelog.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-readme/ngx-editorjs-changelog.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-plugins-readme/ngx-editorjs-plugins-changelog.html":{}}}],["released",{"_index":743,"title":{},"body":{"components/HomePageComponent.html":{},"changelog.html":{},"additional-documentation/tinynodes-library-docs.html":{}}}],["releases",{"_index":1837,"title":{},"body":{"additional-documentation/tinynodes-library-docs/ngx-editorjs-readme.html":{}}}],["religion",{"_index":1526,"title":{},"body":{"contributing.html":{}}}],["remove",{"_index":1001,"title":{},"body":{"injectables/NgxEditorJSPluginService.html":{},"contributing.html":{}}}],["remove(key",{"_index":1013,"title":{},"body":{"injectables/NgxEditorJSPluginService.html":{}}}],["removeblock",{"_index":1272,"title":{},"body":{"injectables/PagesService.html":{}}}],["removeblock(pageid",{"_index":1285,"title":{},"body":{"injectables/PagesService.html":{}}}],["removed",{"_index":1284,"title":{},"body":{"injectables/PagesService.html":{},"changelog.html":{},"contributing.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-readme/ngx-editorjs-changelog.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-plugins-readme/ngx-editorjs-plugins-changelog.html":{}}}],["removes",{"_index":1283,"title":{},"body":{"injectables/PagesService.html":{}}}],["renamed",{"_index":1873,"title":{},"body":{"additional-documentation/tinynodes-library-docs/ngx-editorjs-readme/ngx-editorjs-changelog.html":{}}}],["render",{"_index":377,"title":{},"body":{"interfaces/ApplicationData.html":{},"interfaces/ApplicationData-1.html":{},"interfaces/EditorJSConfig.html":{},"injectables/EditorJSInstanceService.html":{},"interfaces/MenuGroup.html":{},"interfaces/MenuGroup-1.html":{},"interfaces/MenuItem.html":{},"interfaces/MenuItem-1.html":{},"classes/MockEditorJS.html":{},"classes/MockPlugin.html":{},"components/NgxEditorJSComponent.html":{},"interfaces/NgxEditorJSConfig.html":{},"directives/NgxEditorJSDirective.html":{},"injectables/NgxEditorJSService.html":{},"injectables/PagesService.html":{},"classes/TestClass.html":{}}}],["rendered",{"_index":1812,"title":{},"body":{"additional-documentation/tinynodes-library-docs.html":{}}}],["repercussions",{"_index":1649,"title":{},"body":{"contributing.html":{}}}],["replaced",{"_index":1868,"title":{},"body":{"additional-documentation/tinynodes-library-docs/ngx-editorjs-readme/ngx-editorjs-changelog.html":{}}}],["repo",{"_index":1319,"title":{},"body":{"modules/PluginCodeModule.html":{},"modules/PluginHeaderModule.html":{},"modules/PluginImageModule.html":{},"modules/PluginLinkModule.html":{},"modules/PluginListModule.html":{},"modules/PluginMarkerModule.html":{},"modules/PluginParagraphModule.html":{},"modules/PluginSimpleImageModule.html":{},"todo.html":{}}}],["repo](https://github.com/editor",{"_index":1321,"title":{},"body":{"modules/PluginCodeModule.html":{},"modules/PluginHeaderModule.html":{},"modules/PluginImageModule.html":{},"modules/PluginLinkModule.html":{},"modules/PluginListModule.html":{},"modules/PluginMarkerModule.html":{},"modules/PluginParagraphModule.html":{},"modules/PluginSimpleImageModule.html":{}}}],["report",{"_index":1438,"title":{},"body":{"changelog.html":{}}}],["reported",{"_index":1625,"title":{},"body":{"contributing.html":{}}}],["reporter",{"_index":1639,"title":{},"body":{"contributing.html":{}}}],["repository",{"_index":1465,"title":{},"body":{"contributing.html":{},"index.html":{}}}],["represent",{"_index":1491,"title":{},"body":{"contributing.html":{}}}],["representation",{"_index":407,"title":{},"body":{"interfaces/ApplicationState.html":{},"interfaces/ApplicationState-1.html":{},"interfaces/DemoData.html":{},"interfaces/DemoData-1.html":{},"interfaces/NgxEditorJSDemo.html":{},"interfaces/NgxEditorJSDemo-1.html":{},"interfaces/NgxEditorJSDemoData.html":{},"interfaces/NgxEditorJSDemoData-1.html":{},"interfaces/TinynodeDemos.html":{},"interfaces/TinynodeDemos-1.html":{},"contributing.html":{}}}],["representative",{"_index":1616,"title":{},"body":{"contributing.html":{}}}],["representing",{"_index":1606,"title":{},"body":{"contributing.html":{}}}],["request",{"_index":832,"title":{},"body":{"components/NgxEditorJSComponent.html":{},"directives/NgxEditorJSDirective.html":{},"contributing.html":{}}}],["required",{"_index":430,"title":{},"body":{"interfaces/BasePlugin.html":{},"interfaces/BasePlugin-1.html":{},"modules/MaterialModule.html":{},"modules/NgxEditorjsPluginsModule.html":{},"interfaces/PluginConfig.html":{},"interfaces/PluginConfig-1.html":{},"interfaces/ToolSettingsMap.html":{},"interfaces/ToolSettingsMap-1.html":{}}}],["requires",{"_index":1880,"title":{},"body":{"additional-documentation/tinynodes-library-docs/ngx-editorjs-plugins-readme.html":{}}}],["reset",{"_index":211,"title":{},"body":{"modules/AppModule.html":{},"modules/ApplicationDataModule.html":{},"modules/EditorJSInstanceModule.html":{},"modules/NgxEditorJSModule.html":{},"modules/NgxEditorjsDemoModule.html":{},"modules/NgxEditorjsNgrxModule.html":{},"modules/NgxEditorjsPluginsModule.html":{},"modules/NgxTinynodesCoreModule.html":{},"components/PageContainerComponent.html":{},"modules/PageStoreModule.html":{},"modules/PluginCodeModule.html":{},"modules/PluginHeaderModule.html":{},"modules/PluginImageModule.html":{},"modules/PluginLinkModule.html":{},"modules/PluginListModule.html":{},"modules/PluginMarkerModule.html":{},"modules/PluginParagraphModule.html":{},"modules/PluginSimpleImageModule.html":{},"overview.html":{}}}],["resolved",{"_index":1455,"title":{},"body":{"changelog.html":{}}}],["respectful",{"_index":1537,"title":{},"body":{"contributing.html":{}}}],["response",{"_index":1584,"title":{},"body":{"contributing.html":{}}}],["responsibilities",{"_index":1575,"title":{},"body":{"contributing.html":{}}}],["responsibility",{"_index":1585,"title":{},"body":{"contributing.html":{}}}],["responsible",{"_index":1576,"title":{},"body":{"contributing.html":{}}}],["restriction",{"_index":1727,"title":{},"body":{"license.html":{}}}],["result",{"_index":189,"title":{},"body":{"components/AppContainerComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"injectables/AppService.html":{},"injectables/AppService-1.html":{},"interfaces/ApplicationData.html":{},"interfaces/ApplicationData-1.html":{},"modules/ApplicationDataModule.html":{},"injectables/ApplicationQuery.html":{},"injectables/ApplicationQuery-1.html":{},"interfaces/ApplicationState.html":{},"interfaces/ApplicationState-1.html":{},"injectables/ApplicationStore.html":{},"injectables/ApplicationStore-1.html":{},"interfaces/BasePlugin.html":{},"interfaces/BasePlugin-1.html":{},"interfaces/Block.html":{},"interfaces/BlocksMap.html":{},"interfaces/ChangeMap.html":{},"classes/Changed.html":{},"interfaces/DemoData.html":{},"interfaces/DemoData-1.html":{},"interfaces/EditorJSConfig.html":{},"modules/EditorJSInstanceModule.html":{},"injectables/EditorJSInstanceService.html":{},"interfaces/EditorMap.html":{},"interfaces/EventMap.html":{},"interfaces/EventType.html":{},"interfaces/Header.html":{},"interfaces/HeaderBlock.html":{},"components/HomePageComponent.html":{},"interfaces/Image.html":{},"interfaces/ImageBlock.html":{},"interfaces/List.html":{},"interfaces/ListBlock.html":{},"modules/MaterialModule.html":{},"interfaces/MenuGroup.html":{},"interfaces/MenuGroup-1.html":{},"interfaces/MenuItem.html":{},"interfaces/MenuItem-1.html":{},"classes/MockEditorJS.html":{},"injectables/MockNgZone.html":{},"classes/MockPlugin.html":{},"components/NavBarComponent.html":{},"components/NgxEditorJSComponent.html":{},"interfaces/NgxEditorJSConfig.html":{},"interfaces/NgxEditorJSDemo.html":{},"interfaces/NgxEditorJSDemo-1.html":{},"interfaces/NgxEditorJSDemoData.html":{},"interfaces/NgxEditorJSDemoData-1.html":{},"directives/NgxEditorJSDirective.html":{},"injectables/NgxEditorJSEffects.html":{},"modules/NgxEditorJSModule.html":{},"injectables/NgxEditorJSPluginService.html":{},"injectables/NgxEditorJSService.html":{},"modules/NgxEditorjsDemoModule.html":{},"modules/NgxEditorjsNgrxModule.html":{},"modules/NgxEditorjsPluginsModule.html":{},"modules/NgxHideableHeaderDemoModule.html":{},"modules/NgxTinynodesCoreModule.html":{},"classes/NotReady.html":{},"interfaces/Page.html":{},"interfaces/PageBlock.html":{},"components/PageContainerComponent.html":{},"modules/PageStoreModule.html":{},"injectables/PagesQuery.html":{},"injectables/PagesService.html":{},"interfaces/PagesState.html":{},"injectables/PagesStore.html":{},"interfaces/Paragraph.html":{},"interfaces/ParagraphBlock.html":{},"injectables/PluginCode.html":{},"modules/PluginCodeModule.html":{},"interfaces/PluginConfig.html":{},"interfaces/PluginConfig-1.html":{},"injectables/PluginHeader.html":{},"modules/PluginHeaderModule.html":{},"injectables/PluginImage.html":{},"modules/PluginImageModule.html":{},"injectables/PluginLink.html":{},"modules/PluginLinkModule.html":{},"injectables/PluginList.html":{},"modules/PluginListModule.html":{},"injectables/PluginMarker.html":{},"modules/PluginMarkerModule.html":{},"injectables/PluginParagraph.html":{},"modules/PluginParagraphModule.html":{},"injectables/PluginSimpleImage.html":{},"modules/PluginSimpleImageModule.html":{},"classes/Ready.html":{},"interfaces/ReadyMap.html":{},"classes/SaveEnd.html":{},"classes/SaveStart.html":{},"components/SidebarComponent.html":{},"interfaces/Tag.html":{},"classes/TestClass.html":{},"interfaces/TinynodeDemos.html":{},"interfaces/TinynodeDemos-1.html":{},"interfaces/ToolSettingsMap.html":{},"interfaces/ToolSettingsMap-1.html":{},"changelog.html":{},"contributing.html":{},"dependencies.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"index.html":{},"license.html":{},"modules.html":{},"overview.html":{},"todo.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{},"additional-documentation/tinynodes-library-docs.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-readme.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-readme/ngx-editorjs-changelog.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-plugins-readme.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-plugins-readme/ngx-editorjs-plugins-changelog.html":{}}}],["results",{"_index":191,"title":{},"body":{"components/AppContainerComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"injectables/AppService.html":{},"injectables/AppService-1.html":{},"interfaces/ApplicationData.html":{},"interfaces/ApplicationData-1.html":{},"modules/ApplicationDataModule.html":{},"injectables/ApplicationQuery.html":{},"injectables/ApplicationQuery-1.html":{},"interfaces/ApplicationState.html":{},"interfaces/ApplicationState-1.html":{},"injectables/ApplicationStore.html":{},"injectables/ApplicationStore-1.html":{},"interfaces/BasePlugin.html":{},"interfaces/BasePlugin-1.html":{},"interfaces/Block.html":{},"interfaces/BlocksMap.html":{},"interfaces/ChangeMap.html":{},"classes/Changed.html":{},"interfaces/DemoData.html":{},"interfaces/DemoData-1.html":{},"interfaces/EditorJSConfig.html":{},"modules/EditorJSInstanceModule.html":{},"injectables/EditorJSInstanceService.html":{},"interfaces/EditorMap.html":{},"interfaces/EventMap.html":{},"interfaces/EventType.html":{},"interfaces/Header.html":{},"interfaces/HeaderBlock.html":{},"components/HomePageComponent.html":{},"interfaces/Image.html":{},"interfaces/ImageBlock.html":{},"interfaces/List.html":{},"interfaces/ListBlock.html":{},"modules/MaterialModule.html":{},"interfaces/MenuGroup.html":{},"interfaces/MenuGroup-1.html":{},"interfaces/MenuItem.html":{},"interfaces/MenuItem-1.html":{},"classes/MockEditorJS.html":{},"injectables/MockNgZone.html":{},"classes/MockPlugin.html":{},"components/NavBarComponent.html":{},"components/NgxEditorJSComponent.html":{},"interfaces/NgxEditorJSConfig.html":{},"interfaces/NgxEditorJSDemo.html":{},"interfaces/NgxEditorJSDemo-1.html":{},"interfaces/NgxEditorJSDemoData.html":{},"interfaces/NgxEditorJSDemoData-1.html":{},"directives/NgxEditorJSDirective.html":{},"injectables/NgxEditorJSEffects.html":{},"modules/NgxEditorJSModule.html":{},"injectables/NgxEditorJSPluginService.html":{},"injectables/NgxEditorJSService.html":{},"modules/NgxEditorjsDemoModule.html":{},"modules/NgxEditorjsNgrxModule.html":{},"modules/NgxEditorjsPluginsModule.html":{},"modules/NgxHideableHeaderDemoModule.html":{},"modules/NgxTinynodesCoreModule.html":{},"classes/NotReady.html":{},"interfaces/Page.html":{},"interfaces/PageBlock.html":{},"components/PageContainerComponent.html":{},"modules/PageStoreModule.html":{},"injectables/PagesQuery.html":{},"injectables/PagesService.html":{},"interfaces/PagesState.html":{},"injectables/PagesStore.html":{},"interfaces/Paragraph.html":{},"interfaces/ParagraphBlock.html":{},"injectables/PluginCode.html":{},"modules/PluginCodeModule.html":{},"interfaces/PluginConfig.html":{},"interfaces/PluginConfig-1.html":{},"injectables/PluginHeader.html":{},"modules/PluginHeaderModule.html":{},"injectables/PluginImage.html":{},"modules/PluginImageModule.html":{},"injectables/PluginLink.html":{},"modules/PluginLinkModule.html":{},"injectables/PluginList.html":{},"modules/PluginListModule.html":{},"injectables/PluginMarker.html":{},"modules/PluginMarkerModule.html":{},"injectables/PluginParagraph.html":{},"modules/PluginParagraphModule.html":{},"injectables/PluginSimpleImage.html":{},"modules/PluginSimpleImageModule.html":{},"classes/Ready.html":{},"interfaces/ReadyMap.html":{},"classes/SaveEnd.html":{},"classes/SaveStart.html":{},"components/SidebarComponent.html":{},"interfaces/Tag.html":{},"classes/TestClass.html":{},"interfaces/TinynodeDemos.html":{},"interfaces/TinynodeDemos-1.html":{},"interfaces/ToolSettingsMap.html":{},"interfaces/ToolSettingsMap-1.html":{},"changelog.html":{},"contributing.html":{},"dependencies.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"index.html":{},"license.html":{},"modules.html":{},"overview.html":{},"todo.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{},"additional-documentation/tinynodes-library-docs.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-readme.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-readme/ngx-editorjs-changelog.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-plugins-readme.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-plugins-readme/ngx-editorjs-plugins-changelog.html":{}}}],["retrieved",{"_index":591,"title":{},"body":{"injectables/EditorJSInstanceService.html":{}}}],["return",{"_index":111,"title":{},"body":{"components/AppContainerComponent.html":{},"injectables/AppService.html":{},"injectables/AppService-1.html":{},"interfaces/BasePlugin.html":{},"interfaces/BasePlugin-1.html":{},"injectables/EditorJSInstanceService.html":{},"components/HomePageComponent.html":{},"classes/MockEditorJS.html":{},"injectables/MockNgZone.html":{},"classes/MockPlugin.html":{},"directives/NgxEditorJSDirective.html":{},"injectables/NgxEditorJSEffects.html":{},"modules/NgxEditorJSModule.html":{},"injectables/NgxEditorJSPluginService.html":{},"injectables/NgxEditorJSService.html":{},"components/PageContainerComponent.html":{},"injectables/PagesService.html":{},"injectables/PluginCode.html":{},"interfaces/PluginConfig.html":{},"interfaces/PluginConfig-1.html":{},"injectables/PluginHeader.html":{},"injectables/PluginImage.html":{},"injectables/PluginLink.html":{},"injectables/PluginList.html":{},"injectables/PluginMarker.html":{},"injectables/PluginParagraph.html":{},"injectables/PluginSimpleImage.html":{},"classes/TestClass.html":{},"interfaces/ToolSettingsMap.html":{},"interfaces/ToolSettingsMap-1.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-readme.html":{}}}],["returned",{"_index":436,"title":{},"body":{"interfaces/BasePlugin.html":{},"interfaces/BasePlugin-1.html":{},"interfaces/PluginConfig.html":{},"interfaces/PluginConfig-1.html":{},"interfaces/ToolSettingsMap.html":{},"interfaces/ToolSettingsMap-1.html":{}}}],["returns",{"_index":63,"title":{},"body":{"components/AppContainerComponent.html":{},"injectables/AppService.html":{},"injectables/AppService-1.html":{},"injectables/EditorJSInstanceService.html":{},"injectables/MockNgZone.html":{},"classes/MockPlugin.html":{},"directives/NgxEditorJSDirective.html":{},"modules/NgxEditorJSModule.html":{},"injectables/NgxEditorJSPluginService.html":{},"injectables/NgxEditorJSService.html":{},"components/PageContainerComponent.html":{},"injectables/PagesService.html":{},"injectables/PluginCode.html":{},"injectables/PluginHeader.html":{},"injectables/PluginImage.html":{},"injectables/PluginLink.html":{},"injectables/PluginList.html":{},"injectables/PluginMarker.html":{},"injectables/PluginParagraph.html":{},"injectables/PluginSimpleImage.html":{},"classes/TestClass.html":{},"miscellaneous/functions.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-readme.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-readme/ngx-editorjs-changelog.html":{}}}],["reviewed",{"_index":1630,"title":{},"body":{"contributing.html":{}}}],["reviewer",{"_index":1500,"title":{},"body":{"contributing.html":{}}}],["right",{"_index":156,"title":{},"body":{"components/AppContainerComponent.html":{},"components/NavBarComponent.html":{},"contributing.html":{}}}],["rights",{"_index":1730,"title":{},"body":{"license.html":{}}}],["robust",{"_index":1852,"title":{},"body":{"additional-documentation/tinynodes-library-docs/ngx-editorjs-readme/ngx-editorjs-changelog.html":{}}}],["root",{"_index":16,"title":{},"body":{"components/AppContainerComponent.html":{},"injectables/EditorJSInstanceService.html":{},"modules/NgxEditorJSModule.html":{},"injectables/NgxEditorJSPluginService.html":{},"injectables/NgxEditorJSService.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-readme/ngx-editorjs-changelog.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-plugins-readme.html":{}}}],["root'},{'name",{"_index":172,"title":{},"body":{"components/AppContainerComponent.html":{},"components/HomePageComponent.html":{},"components/NavBarComponent.html":{},"components/NgxEditorJSComponent.html":{},"components/PageContainerComponent.html":{},"components/SidebarComponent.html":{}}}],["roots",{"_index":267,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["routable",{"_index":1176,"title":{},"body":{"components/PageContainerComponent.html":{}}}],["route",{"_index":268,"title":{},"body":{"modules/AppRoutingModule.html":{},"modules/NgxHideableHeaderDemoModule.html":{},"miscellaneous/variables.html":{}}}],["router",{"_index":235,"title":{},"body":{"modules/AppModule.html":{},"dependencies.html":{}}}],["routerlink",{"_index":368,"title":{},"body":{"interfaces/ApplicationData.html":{},"interfaces/ApplicationData-1.html":{},"interfaces/MenuGroup.html":{},"interfaces/MenuGroup-1.html":{},"interfaces/MenuItem.html":{},"interfaces/MenuItem-1.html":{}}}],["routermodule",{"_index":269,"title":{},"body":{"modules/AppRoutingModule.html":{},"modules/NgxEditorjsDemoModule.html":{},"modules/NgxHideableHeaderDemoModule.html":{}}}],["routermodule.forchild(ngxeditorjsdemoroutes",{"_index":1118,"title":{},"body":{"modules/NgxEditorjsDemoModule.html":{}}}],["routermodule.forroot(approutes",{"_index":278,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["routes",{"_index":271,"title":{},"body":{"modules/AppRoutingModule.html":{},"miscellaneous/variables.html":{}}}],["routing",{"_index":265,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["routing.module",{"_index":244,"title":{},"body":{"modules/AppModule.html":{}}}],["routing.module.ts",{"_index":264,"title":{},"body":{"modules/AppRoutingModule.html":{},"miscellaneous/variables.html":{}}}],["row",{"_index":858,"title":{},"body":{"components/NgxEditorJSComponent.html":{}}}],["run",{"_index":606,"title":{},"body":{"injectables/EditorJSInstanceService.html":{},"injectables/MockNgZone.html":{},"index.html":{}}}],["run(fn",{"_index":790,"title":{},"body":{"injectables/MockNgZone.html":{}}}],["runoutsideangular",{"_index":787,"title":{},"body":{"injectables/MockNgZone.html":{}}}],["runoutsideangular(fn",{"_index":793,"title":{},"body":{"injectables/MockNgZone.html":{}}}],["rxjs",{"_index":95,"title":{},"body":{"components/AppContainerComponent.html":{},"injectables/AppService.html":{},"injectables/AppService-1.html":{},"interfaces/BlocksMap.html":{},"interfaces/ChangeMap.html":{},"injectables/EditorJSInstanceService.html":{},"interfaces/EditorMap.html":{},"interfaces/EventMap.html":{},"interfaces/EventType.html":{},"directives/NgxEditorJSDirective.html":{},"injectables/NgxEditorJSEffects.html":{},"injectables/NgxEditorJSService.html":{},"components/PageContainerComponent.html":{},"injectables/PagesService.html":{},"interfaces/ReadyMap.html":{},"dependencies.html":{}}}],["rxjs/operators",{"_index":98,"title":{},"body":{"components/AppContainerComponent.html":{},"injectables/AppService.html":{},"injectables/AppService-1.html":{},"injectables/EditorJSInstanceService.html":{},"injectables/NgxEditorJSEffects.html":{},"injectables/NgxEditorJSService.html":{},"components/PageContainerComponent.html":{}}}],["sanitizer",{"_index":541,"title":{},"body":{"interfaces/EditorJSConfig.html":{},"components/NgxEditorJSComponent.html":{},"interfaces/NgxEditorJSConfig.html":{},"directives/NgxEditorJSDirective.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-readme.html":{}}}],["sanitizerconfig",{"_index":558,"title":{},"body":{"interfaces/EditorJSConfig.html":{},"components/NgxEditorJSComponent.html":{},"interfaces/NgxEditorJSConfig.html":{},"directives/NgxEditorJSDirective.html":{}}}],["save",{"_index":523,"title":{},"body":{"classes/Changed.html":{},"injectables/EditorJSInstanceService.html":{},"classes/MockEditorJS.html":{},"classes/MockPlugin.html":{},"components/NgxEditorJSComponent.html":{},"directives/NgxEditorJSDirective.html":{},"injectables/NgxEditorJSEffects.html":{},"injectables/NgxEditorJSService.html":{},"classes/NotReady.html":{},"components/PageContainerComponent.html":{},"injectables/PagesService.html":{},"classes/Ready.html":{},"classes/SaveEnd.html":{},"classes/SaveStart.html":{},"classes/TestClass.html":{},"miscellaneous/enumerations.html":{},"todo.html":{}}}],["save(holder",{"_index":635,"title":{},"body":{"injectables/EditorJSInstanceService.html":{},"injectables/NgxEditorJSService.html":{}}}],["saveend",{"_index":524,"title":{"classes/SaveEnd.html":{}},"body":{"classes/Changed.html":{},"injectables/NgxEditorJSEffects.html":{},"classes/NotReady.html":{},"classes/Ready.html":{},"classes/SaveEnd.html":{},"classes/SaveStart.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/typealiases.html":{}}}],["savehandler(holder",{"_index":715,"title":{},"body":{"injectables/EditorJSInstanceService.html":{}}}],["saver",{"_index":762,"title":{},"body":{"classes/MockEditorJS.html":{},"classes/MockPlugin.html":{},"classes/TestClass.html":{}}}],["savestart",{"_index":521,"title":{"classes/SaveStart.html":{}},"body":{"classes/Changed.html":{},"injectables/NgxEditorJSEffects.html":{},"classes/NotReady.html":{},"classes/Ready.html":{},"classes/SaveEnd.html":{},"classes/SaveStart.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/typealiases.html":{}}}],["saving",{"_index":1246,"title":{},"body":{"components/PageContainerComponent.html":{}}}],["scheme",{"_index":1493,"title":{},"body":{"contributing.html":{}}}],["scope",{"_index":1602,"title":{},"body":{"contributing.html":{}}}],["scripts",{"_index":1452,"title":{},"body":{"changelog.html":{}}}],["scroll",{"_index":1253,"title":{},"body":{"components/PageContainerComponent.html":{}}}],["searchable",{"_index":1702,"title":{},"body":{"index.html":{}}}],["second",{"_index":1499,"title":{},"body":{"contributing.html":{}}}],["see",{"_index":1053,"title":{},"body":{"injectables/NgxEditorJSService.html":{},"components/PageContainerComponent.html":{},"modules/PluginCodeModule.html":{},"modules/PluginHeaderModule.html":{},"modules/PluginImageModule.html":{},"modules/PluginLinkModule.html":{},"modules/PluginListModule.html":{},"modules/PluginMarkerModule.html":{},"modules/PluginParagraphModule.html":{},"modules/PluginSimpleImageModule.html":{},"changelog.html":{},"index.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-readme.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-plugins-readme/ngx-editorjs-plugins-changelog.html":{}}}],["selection",{"_index":1786,"title":{},"body":{"todo.html":{}}}],["selector",{"_index":22,"title":{},"body":{"components/AppContainerComponent.html":{},"components/HomePageComponent.html":{},"components/NavBarComponent.html":{},"components/NgxEditorJSComponent.html":{},"directives/NgxEditorJSDirective.html":{},"components/PageContainerComponent.html":{},"components/SidebarComponent.html":{}}}],["sell",{"_index":1736,"title":{},"body":{"license.html":{}}}],["semantic",{"_index":1846,"title":{},"body":{"additional-documentation/tinynodes-library-docs/ngx-editorjs-readme/ngx-editorjs-changelog.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-plugins-readme/ngx-editorjs-plugins-changelog.html":{}}}],["semver",{"_index":1494,"title":{},"body":{"contributing.html":{}}}],["separately",{"_index":1643,"title":{},"body":{"contributing.html":{}}}],["service",{"_index":283,"title":{},"body":{"injectables/AppService.html":{},"injectables/AppService-1.html":{},"injectables/EditorJSInstanceService.html":{},"components/NgxEditorJSComponent.html":{},"directives/NgxEditorJSDirective.html":{},"injectables/NgxEditorJSPluginService.html":{},"injectables/NgxEditorJSService.html":{},"components/PageContainerComponent.html":{},"injectables/PagesService.html":{},"index.html":{},"todo.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-readme.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-readme/ngx-editorjs-changelog.html":{}}}],["services",{"_index":868,"title":{},"body":{"directives/NgxEditorJSDirective.html":{}}}],["services/editorjs.service",{"_index":851,"title":{},"body":{"components/NgxEditorJSComponent.html":{},"directives/NgxEditorJSDirective.html":{},"modules/NgxEditorJSModule.html":{}}}],["services/plugins.service",{"_index":988,"title":{},"body":{"modules/NgxEditorJSModule.html":{}}}],["set",{"_index":320,"title":{},"body":{"injectables/AppService.html":{},"injectables/AppService-1.html":{},"interfaces/ApplicationData.html":{},"interfaces/ApplicationData-1.html":{},"interfaces/ApplicationState.html":{},"interfaces/ApplicationState-1.html":{},"interfaces/DemoData.html":{},"interfaces/DemoData-1.html":{},"interfaces/EditorJSConfig.html":{},"injectables/EditorJSInstanceService.html":{},"interfaces/MenuGroup.html":{},"interfaces/MenuGroup-1.html":{},"interfaces/MenuItem.html":{},"interfaces/MenuItem-1.html":{},"components/NavBarComponent.html":{},"components/NgxEditorJSComponent.html":{},"interfaces/NgxEditorJSConfig.html":{},"interfaces/NgxEditorJSDemo.html":{},"interfaces/NgxEditorJSDemo-1.html":{},"interfaces/NgxEditorJSDemoData.html":{},"interfaces/NgxEditorJSDemoData-1.html":{},"directives/NgxEditorJSDirective.html":{},"injectables/NgxEditorJSService.html":{},"modules/NgxEditorjsNgrxModule.html":{},"interfaces/TinynodeDemos.html":{},"interfaces/TinynodeDemos-1.html":{},"index.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-readme.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-readme/ngx-editorjs-changelog.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-plugins-readme.html":{}}}],["setblocks",{"_index":1273,"title":{},"body":{"injectables/PagesService.html":{}}}],["setblocks(pageid",{"_index":1287,"title":{},"body":{"injectables/PagesService.html":{}}}],["sets",{"_index":297,"title":{},"body":{"injectables/AppService.html":{},"injectables/AppService-1.html":{},"injectables/EditorJSInstanceService.html":{},"components/NgxEditorJSComponent.html":{},"directives/NgxEditorJSDirective.html":{},"modules/NgxEditorJSModule.html":{},"injectables/NgxEditorJSService.html":{},"components/PageContainerComponent.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-readme.html":{}}}],["setting",{"_index":1574,"title":{},"body":{"contributing.html":{},"todo.html":{}}}],["settings",{"_index":435,"title":{},"body":{"interfaces/BasePlugin.html":{},"interfaces/BasePlugin-1.html":{},"injectables/PluginCode.html":{},"interfaces/PluginConfig.html":{},"interfaces/PluginConfig-1.html":{},"injectables/PluginHeader.html":{},"injectables/PluginImage.html":{},"injectables/PluginLink.html":{},"injectables/PluginList.html":{},"injectables/PluginMarker.html":{},"injectables/PluginParagraph.html":{},"injectables/PluginSimpleImage.html":{},"interfaces/ToolSettingsMap.html":{},"interfaces/ToolSettingsMap-1.html":{}}}],["setupevents(holder",{"_index":694,"title":{},"body":{"injectables/EditorJSInstanceService.html":{}}}],["setupsubjects(holder",{"_index":685,"title":{},"body":{"injectables/EditorJSInstanceService.html":{}}}],["several",{"_index":1140,"title":{},"body":{"modules/NgxEditorjsPluginsModule.html":{},"changelog.html":{}}}],["sexual",{"_index":1527,"title":{},"body":{"contributing.html":{}}}],["sexualized",{"_index":1553,"title":{},"body":{"contributing.html":{}}}],["shall",{"_index":1745,"title":{},"body":{"license.html":{}}}],["shared",{"_index":1164,"title":{},"body":{"modules/NgxTinynodesCoreModule.html":{}}}],["shortcut",{"_index":433,"title":{},"body":{"interfaces/BasePlugin.html":{},"interfaces/BasePlugin-1.html":{},"classes/MockEditorJS.html":{},"classes/MockPlugin.html":{},"components/NgxEditorJSComponent.html":{},"injectables/NgxEditorJSPluginService.html":{},"interfaces/PluginConfig.html":{},"interfaces/PluginConfig-1.html":{},"injectables/PluginMarker.html":{},"classes/TestClass.html":{},"interfaces/ToolSettingsMap.html":{},"interfaces/ToolSettingsMap-1.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-readme/ngx-editorjs-changelog.html":{}}}],["showing",{"_index":1547,"title":{},"body":{"contributing.html":{}}}],["shown",{"_index":548,"title":{},"body":{"interfaces/EditorJSConfig.html":{},"components/NgxEditorJSComponent.html":{},"interfaces/NgxEditorJSConfig.html":{},"directives/NgxEditorJSDirective.html":{}}}],["shows",{"_index":1819,"title":{},"body":{"additional-documentation/tinynodes-library-docs/ngx-editorjs-readme.html":{}}}],["side",{"_index":319,"title":{},"body":{"injectables/AppService.html":{},"injectables/AppService-1.html":{},"interfaces/ApplicationState.html":{},"interfaces/ApplicationState-1.html":{},"interfaces/DemoData.html":{},"interfaces/DemoData-1.html":{},"interfaces/NgxEditorJSDemo.html":{},"interfaces/NgxEditorJSDemo-1.html":{},"interfaces/NgxEditorJSDemoData.html":{},"interfaces/NgxEditorJSDemoData-1.html":{},"interfaces/TinynodeDemos.html":{},"interfaces/TinynodeDemos-1.html":{}}}],["sidebar",{"_index":73,"title":{},"body":{"components/AppContainerComponent.html":{},"injectables/AppService.html":{},"injectables/AppService-1.html":{},"interfaces/ApplicationData.html":{},"interfaces/ApplicationData-1.html":{},"components/HomePageComponent.html":{},"interfaces/MenuGroup.html":{},"interfaces/MenuGroup-1.html":{},"interfaces/MenuItem.html":{},"interfaces/MenuItem-1.html":{},"components/NavBarComponent.html":{},"components/NgxEditorJSComponent.html":{},"components/PageContainerComponent.html":{},"components/SidebarComponent.html":{}}}],["sidebar.component.html",{"_index":1401,"title":{},"body":{"components/SidebarComponent.html":{}}}],["sidebar.component.scss",{"_index":1400,"title":{},"body":{"components/SidebarComponent.html":{}}}],["sidebarcomponent",{"_index":184,"title":{"components/SidebarComponent.html":{}},"body":{"components/AppContainerComponent.html":{},"modules/AppModule.html":{},"components/HomePageComponent.html":{},"components/NavBarComponent.html":{},"components/NgxEditorJSComponent.html":{},"components/PageContainerComponent.html":{},"components/SidebarComponent.html":{},"overview.html":{}}}],["sidebarhidden",{"_index":39,"title":{},"body":{"components/AppContainerComponent.html":{}}}],["sidenav",{"_index":30,"title":{},"body":{"components/AppContainerComponent.html":{}}}],["sign",{"_index":1496,"title":{},"body":{"contributing.html":{}}}],["simple",{"_index":1385,"title":{},"body":{"injectables/PluginSimpleImage.html":{},"modules/PluginSimpleImageModule.html":{}}}],["simplechanges",{"_index":892,"title":{},"body":{"directives/NgxEditorJSDirective.html":{}}}],["simpleimage",{"_index":1243,"title":{},"body":{"components/PageContainerComponent.html":{},"injectables/PluginSimpleImage.html":{}}}],["simulatezoneexit",{"_index":788,"title":{},"body":{"injectables/MockNgZone.html":{}}}],["single",{"_index":215,"title":{},"body":{"modules/AppModule.html":{},"injectables/NgxEditorJSPluginService.html":{},"components/PageContainerComponent.html":{}}}],["singleton",{"_index":997,"title":{},"body":{"injectables/NgxEditorJSPluginService.html":{}}}],["site",{"_index":392,"title":{},"body":{"modules/ApplicationDataModule.html":{},"components/HomePageComponent.html":{},"modules/NgxTinynodesCoreModule.html":{},"changelog.html":{},"index.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-readme/ngx-editorjs-changelog.html":{}}}],["sites",{"_index":748,"title":{},"body":{"components/HomePageComponent.html":{}}}],["size",{"_index":1516,"title":{},"body":{"contributing.html":{}}}],["skipself",{"_index":981,"title":{},"body":{"modules/NgxEditorJSModule.html":{}}}],["small",{"_index":1460,"title":{},"body":{"changelog.html":{}}}],["social",{"_index":1611,"title":{},"body":{"contributing.html":{}}}],["software",{"_index":1724,"title":{},"body":{"license.html":{}}}],["solid",{"_index":860,"title":{},"body":{"components/NgxEditorJSComponent.html":{}}}],["source",{"_index":4,"title":{},"body":{"components/AppContainerComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"injectables/AppService.html":{},"injectables/AppService-1.html":{},"interfaces/ApplicationData.html":{},"interfaces/ApplicationData-1.html":{},"modules/ApplicationDataModule.html":{},"injectables/ApplicationQuery.html":{},"injectables/ApplicationQuery-1.html":{},"interfaces/ApplicationState.html":{},"interfaces/ApplicationState-1.html":{},"injectables/ApplicationStore.html":{},"injectables/ApplicationStore-1.html":{},"interfaces/BasePlugin.html":{},"interfaces/BasePlugin-1.html":{},"interfaces/Block.html":{},"interfaces/BlocksMap.html":{},"interfaces/ChangeMap.html":{},"classes/Changed.html":{},"interfaces/DemoData.html":{},"interfaces/DemoData-1.html":{},"interfaces/EditorJSConfig.html":{},"modules/EditorJSInstanceModule.html":{},"injectables/EditorJSInstanceService.html":{},"interfaces/EditorMap.html":{},"interfaces/EventMap.html":{},"interfaces/EventType.html":{},"interfaces/Header.html":{},"interfaces/HeaderBlock.html":{},"components/HomePageComponent.html":{},"interfaces/Image.html":{},"interfaces/ImageBlock.html":{},"interfaces/List.html":{},"interfaces/ListBlock.html":{},"modules/MaterialModule.html":{},"interfaces/MenuGroup.html":{},"interfaces/MenuGroup-1.html":{},"interfaces/MenuItem.html":{},"interfaces/MenuItem-1.html":{},"classes/MockEditorJS.html":{},"injectables/MockNgZone.html":{},"classes/MockPlugin.html":{},"components/NavBarComponent.html":{},"components/NgxEditorJSComponent.html":{},"interfaces/NgxEditorJSConfig.html":{},"interfaces/NgxEditorJSDemo.html":{},"interfaces/NgxEditorJSDemo-1.html":{},"interfaces/NgxEditorJSDemoData.html":{},"interfaces/NgxEditorJSDemoData-1.html":{},"directives/NgxEditorJSDirective.html":{},"injectables/NgxEditorJSEffects.html":{},"modules/NgxEditorJSModule.html":{},"injectables/NgxEditorJSPluginService.html":{},"injectables/NgxEditorJSService.html":{},"modules/NgxEditorjsDemoModule.html":{},"modules/NgxEditorjsNgrxModule.html":{},"modules/NgxEditorjsPluginsModule.html":{},"modules/NgxHideableHeaderDemoModule.html":{},"modules/NgxTinynodesCoreModule.html":{},"classes/NotReady.html":{},"interfaces/Page.html":{},"interfaces/PageBlock.html":{},"components/PageContainerComponent.html":{},"modules/PageStoreModule.html":{},"injectables/PagesQuery.html":{},"injectables/PagesService.html":{},"interfaces/PagesState.html":{},"injectables/PagesStore.html":{},"interfaces/Paragraph.html":{},"interfaces/ParagraphBlock.html":{},"injectables/PluginCode.html":{},"modules/PluginCodeModule.html":{},"interfaces/PluginConfig.html":{},"interfaces/PluginConfig-1.html":{},"injectables/PluginHeader.html":{},"modules/PluginHeaderModule.html":{},"injectables/PluginImage.html":{},"modules/PluginImageModule.html":{},"injectables/PluginLink.html":{},"modules/PluginLinkModule.html":{},"injectables/PluginList.html":{},"modules/PluginListModule.html":{},"injectables/PluginMarker.html":{},"modules/PluginMarkerModule.html":{},"injectables/PluginParagraph.html":{},"modules/PluginParagraphModule.html":{},"injectables/PluginSimpleImage.html":{},"modules/PluginSimpleImageModule.html":{},"classes/Ready.html":{},"interfaces/ReadyMap.html":{},"classes/SaveEnd.html":{},"classes/SaveStart.html":{},"components/SidebarComponent.html":{},"interfaces/Tag.html":{},"classes/TestClass.html":{},"interfaces/TinynodeDemos.html":{},"interfaces/TinynodeDemos-1.html":{},"interfaces/ToolSettingsMap.html":{},"interfaces/ToolSettingsMap-1.html":{}}}],["spaces",{"_index":1605,"title":{},"body":{"contributing.html":{}}}],["specific",{"_index":306,"title":{},"body":{"injectables/AppService.html":{},"injectables/AppService-1.html":{},"contributing.html":{}}}],["standards",{"_index":1529,"title":{},"body":{"contributing.html":{}}}],["start",{"_index":522,"title":{},"body":{"classes/Changed.html":{},"classes/NotReady.html":{},"components/PageContainerComponent.html":{},"classes/Ready.html":{},"classes/SaveEnd.html":{},"classes/SaveStart.html":{},"miscellaneous/enumerations.html":{}}}],["started",{"_index":1412,"title":{"changelog.html":{},"contributing.html":{},"index.html":{},"license.html":{},"todo.html":{}},"body":{}}],["state",{"_index":106,"title":{},"body":{"components/AppContainerComponent.html":{},"injectables/AppService.html":{},"injectables/AppService-1.html":{},"modules/ApplicationDataModule.html":{},"injectables/ApplicationQuery.html":{},"injectables/ApplicationQuery-1.html":{},"interfaces/ApplicationState.html":{},"interfaces/ApplicationState-1.html":{},"injectables/ApplicationStore.html":{},"injectables/ApplicationStore-1.html":{},"interfaces/BlocksMap.html":{},"interfaces/ChangeMap.html":{},"interfaces/DemoData.html":{},"interfaces/DemoData-1.html":{},"interfaces/EditorMap.html":{},"interfaces/EventMap.html":{},"interfaces/EventType.html":{},"interfaces/NgxEditorJSDemo.html":{},"interfaces/NgxEditorJSDemo-1.html":{},"interfaces/NgxEditorJSDemoData.html":{},"interfaces/NgxEditorJSDemoData-1.html":{},"injectables/NgxEditorJSService.html":{},"modules/NgxTinynodesCoreModule.html":{},"components/PageContainerComponent.html":{},"interfaces/ReadyMap.html":{},"interfaces/TinynodeDemos.html":{},"interfaces/TinynodeDemos-1.html":{},"miscellaneous/enumerations.html":{}}}],["states",{"_index":648,"title":{},"body":{"injectables/EditorJSInstanceService.html":{}}}],["static",{"_index":973,"title":{},"body":{"modules/NgxEditorJSModule.html":{}}}],["store",{"_index":236,"title":{},"body":{"modules/AppModule.html":{},"injectables/AppService.html":{},"injectables/AppService-1.html":{},"injectables/ApplicationQuery.html":{},"injectables/ApplicationQuery-1.html":{},"injectables/ApplicationStore.html":{},"injectables/ApplicationStore-1.html":{},"injectables/NgxEditorJSPluginService.html":{},"modules/NgxEditorjsNgrxModule.html":{},"modules/PageStoreModule.html":{},"injectables/PagesQuery.html":{},"injectables/PagesService.html":{},"dependencies.html":{},"todo.html":{}}}],["store/pages/pages.models",{"_index":1211,"title":{},"body":{"components/PageContainerComponent.html":{}}}],["store/pages/pages.module",{"_index":1116,"title":{},"body":{"modules/NgxEditorjsDemoModule.html":{}}}],["store/pages/pages.service",{"_index":1212,"title":{},"body":{"components/PageContainerComponent.html":{}}}],["storeconfig",{"_index":422,"title":{},"body":{"injectables/ApplicationStore.html":{},"injectables/ApplicationStore-1.html":{},"interfaces/PagesState.html":{},"injectables/PagesStore.html":{}}}],["stored",{"_index":590,"title":{},"body":{"injectables/EditorJSInstanceService.html":{},"injectables/NgxEditorJSPluginService.html":{}}}],["stores",{"_index":104,"title":{},"body":{"components/AppContainerComponent.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-readme/ngx-editorjs-changelog.html":{}}}],["stores/app/application.module",{"_index":1167,"title":{},"body":{"modules/NgxTinynodesCoreModule.html":{}}}],["stretch",{"_index":483,"title":{},"body":{"interfaces/Block.html":{},"interfaces/Header.html":{},"interfaces/HeaderBlock.html":{},"interfaces/Image.html":{},"interfaces/ImageBlock.html":{},"interfaces/List.html":{},"interfaces/ListBlock.html":{},"interfaces/Paragraph.html":{},"interfaces/ParagraphBlock.html":{}}}],["stretched",{"_index":484,"title":{},"body":{"interfaces/Block.html":{},"interfaces/Header.html":{},"interfaces/HeaderBlock.html":{},"interfaces/Image.html":{},"interfaces/ImageBlock.html":{},"interfaces/List.html":{},"interfaces/ListBlock.html":{},"interfaces/Paragraph.html":{},"interfaces/ParagraphBlock.html":{}}}],["string",{"_index":303,"title":{},"body":{"injectables/AppService.html":{},"injectables/AppService-1.html":{},"interfaces/ApplicationData.html":{},"interfaces/ApplicationData-1.html":{},"interfaces/ApplicationState.html":{},"interfaces/ApplicationState-1.html":{},"interfaces/BasePlugin.html":{},"interfaces/BasePlugin-1.html":{},"interfaces/Block.html":{},"interfaces/BlocksMap.html":{},"interfaces/ChangeMap.html":{},"classes/Changed.html":{},"interfaces/DemoData.html":{},"interfaces/DemoData-1.html":{},"interfaces/EditorJSConfig.html":{},"injectables/EditorJSInstanceService.html":{},"interfaces/EditorMap.html":{},"interfaces/EventMap.html":{},"interfaces/EventType.html":{},"interfaces/Header.html":{},"interfaces/HeaderBlock.html":{},"interfaces/Image.html":{},"interfaces/ImageBlock.html":{},"interfaces/List.html":{},"interfaces/ListBlock.html":{},"interfaces/MenuGroup.html":{},"interfaces/MenuGroup-1.html":{},"interfaces/MenuItem.html":{},"interfaces/MenuItem-1.html":{},"classes/MockEditorJS.html":{},"classes/MockPlugin.html":{},"components/NgxEditorJSComponent.html":{},"interfaces/NgxEditorJSConfig.html":{},"interfaces/NgxEditorJSDemo.html":{},"interfaces/NgxEditorJSDemo-1.html":{},"interfaces/NgxEditorJSDemoData.html":{},"interfaces/NgxEditorJSDemoData-1.html":{},"directives/NgxEditorJSDirective.html":{},"injectables/NgxEditorJSPluginService.html":{},"injectables/NgxEditorJSService.html":{},"classes/NotReady.html":{},"interfaces/Page.html":{},"interfaces/PageBlock.html":{},"components/PageContainerComponent.html":{},"interfaces/Paragraph.html":{},"interfaces/ParagraphBlock.html":{},"interfaces/PluginConfig.html":{},"interfaces/PluginConfig-1.html":{},"injectables/PluginMarker.html":{},"classes/Ready.html":{},"interfaces/ReadyMap.html":{},"classes/SaveEnd.html":{},"classes/SaveStart.html":{},"interfaces/Tag.html":{},"classes/TestClass.html":{},"interfaces/TinynodeDemos.html":{},"interfaces/TinynodeDemos-1.html":{},"interfaces/ToolSettingsMap.html":{},"interfaces/ToolSettingsMap-1.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-readme/ngx-editorjs-changelog.html":{}}}],["style",{"_index":144,"title":{},"body":{"components/AppContainerComponent.html":{},"interfaces/Block.html":{},"interfaces/Header.html":{},"interfaces/HeaderBlock.html":{},"interfaces/Image.html":{},"interfaces/ImageBlock.html":{},"interfaces/List.html":{},"interfaces/ListBlock.html":{},"components/NavBarComponent.html":{},"interfaces/Paragraph.html":{},"interfaces/ParagraphBlock.html":{}}}],["styles",{"_index":6,"title":{},"body":{"components/AppContainerComponent.html":{},"interfaces/Block.html":{},"interfaces/Header.html":{},"interfaces/HeaderBlock.html":{},"components/HomePageComponent.html":{},"interfaces/Image.html":{},"interfaces/ImageBlock.html":{},"interfaces/List.html":{},"interfaces/ListBlock.html":{},"components/NavBarComponent.html":{},"components/NgxEditorJSComponent.html":{},"components/PageContainerComponent.html":{},"interfaces/Paragraph.html":{},"interfaces/ParagraphBlock.html":{},"components/SidebarComponent.html":{},"miscellaneous/typealiases.html":{}}}],["styleurls",{"_index":24,"title":{},"body":{"components/AppContainerComponent.html":{},"components/HomePageComponent.html":{},"components/NavBarComponent.html":{},"components/NgxEditorJSComponent.html":{},"components/PageContainerComponent.html":{},"components/SidebarComponent.html":{}}}],["subject",{"_index":94,"title":{},"body":{"components/AppContainerComponent.html":{},"interfaces/BlocksMap.html":{},"interfaces/ChangeMap.html":{},"injectables/EditorJSInstanceService.html":{},"interfaces/EditorMap.html":{},"interfaces/EventMap.html":{},"interfaces/EventType.html":{},"injectables/NgxEditorJSService.html":{},"components/PageContainerComponent.html":{},"interfaces/ReadyMap.html":{},"license.html":{}}}],["subjects",{"_index":683,"title":{},"body":{"injectables/EditorJSInstanceService.html":{},"directives/NgxEditorJSDirective.html":{}}}],["sublicense",{"_index":1734,"title":{},"body":{"license.html":{}}}],["subscribe(([event",{"_index":698,"title":{},"body":{"injectables/EditorJSInstanceService.html":{}}}],["subscribe(([ready",{"_index":1085,"title":{},"body":{"injectables/NgxEditorJSService.html":{}}}],["subscribe(editor",{"_index":678,"title":{},"body":{"injectables/EditorJSInstanceService.html":{}}}],["subscribe(hidden",{"_index":117,"title":{},"body":{"components/AppContainerComponent.html":{}}}],["subscribed",{"_index":1059,"title":{},"body":{"injectables/NgxEditorJSService.html":{}}}],["subscriptions",{"_index":621,"title":{},"body":{"injectables/EditorJSInstanceService.html":{}}}],["substantial",{"_index":1746,"title":{},"body":{"license.html":{}}}],["such",{"_index":1565,"title":{},"body":{"contributing.html":{}}}],["sunday",{"_index":1435,"title":{},"body":{"changelog.html":{}}}],["super",{"_index":423,"title":{},"body":{"injectables/ApplicationStore.html":{},"injectables/ApplicationStore-1.html":{},"injectables/MockNgZone.html":{},"interfaces/PagesState.html":{},"injectables/PagesStore.html":{}}}],["super(store",{"_index":403,"title":{},"body":{"injectables/ApplicationQuery.html":{},"injectables/ApplicationQuery-1.html":{},"injectables/PagesQuery.html":{}}}],["support",{"_index":1260,"title":{},"body":{"modules/PageStoreModule.html":{},"modules.html":{},"todo.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-readme.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-readme/ngx-editorjs-changelog.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-plugins-readme.html":{}}}],["supports",{"_index":462,"title":{},"body":{"interfaces/Block.html":{},"interfaces/Header.html":{},"interfaces/HeaderBlock.html":{},"interfaces/Image.html":{},"interfaces/ImageBlock.html":{},"interfaces/List.html":{},"interfaces/ListBlock.html":{},"interfaces/Paragraph.html":{},"interfaces/ParagraphBlock.html":{},"miscellaneous/typealiases.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-readme/ngx-editorjs-changelog.html":{}}}],["svg",{"_index":1771,"title":{},"body":{"modules.html":{}}}],["switchmap",{"_index":959,"title":{},"body":{"injectables/NgxEditorJSEffects.html":{}}}],["t",{"_index":305,"title":{},"body":{"injectables/AppService.html":{},"injectables/AppService-1.html":{},"interfaces/ApplicationState.html":{},"interfaces/ApplicationState-1.html":{},"interfaces/Block.html":{},"interfaces/BlocksMap.html":{},"interfaces/ChangeMap.html":{},"interfaces/DemoData.html":{},"interfaces/DemoData-1.html":{},"interfaces/EditorMap.html":{},"interfaces/EventMap.html":{},"interfaces/EventType.html":{},"interfaces/Header.html":{},"interfaces/HeaderBlock.html":{},"interfaces/Image.html":{},"interfaces/ImageBlock.html":{},"interfaces/List.html":{},"interfaces/ListBlock.html":{},"interfaces/NgxEditorJSDemo.html":{},"interfaces/NgxEditorJSDemo-1.html":{},"interfaces/NgxEditorJSDemoData.html":{},"interfaces/NgxEditorJSDemoData-1.html":{},"interfaces/Paragraph.html":{},"interfaces/ParagraphBlock.html":{},"interfaces/ReadyMap.html":{},"interfaces/TinynodeDemos.html":{},"interfaces/TinynodeDemos-1.html":{}}}],["tag",{"_index":1173,"title":{"interfaces/Tag.html":{}},"body":{"interfaces/Page.html":{},"interfaces/PageBlock.html":{},"components/PageContainerComponent.html":{},"interfaces/Tag.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-readme.html":{}}}],["tags",{"_index":1782,"title":{},"body":{"todo.html":{}}}],["take",{"_index":1580,"title":{},"body":{"contributing.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-readme.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-readme/ngx-editorjs-changelog.html":{}}}],["takes",{"_index":972,"title":{},"body":{"modules/NgxEditorJSModule.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-readme.html":{}}}],["takeuntil",{"_index":97,"title":{},"body":{"components/AppContainerComponent.html":{},"injectables/EditorJSInstanceService.html":{},"components/PageContainerComponent.html":{}}}],["takeuntil(instancedestroyed",{"_index":677,"title":{},"body":{"injectables/EditorJSInstanceService.html":{}}}],["takeuntil(this.ondestroy",{"_index":116,"title":{},"body":{"components/AppContainerComponent.html":{},"injectables/EditorJSInstanceService.html":{},"components/PageContainerComponent.html":{}}}],["takeuntil(updatedone",{"_index":1083,"title":{},"body":{"injectables/NgxEditorJSService.html":{}}}],["tane",{"_index":1709,"title":{},"body":{"index.html":{},"license.html":{}}}],["tap",{"_index":960,"title":{},"body":{"injectables/NgxEditorJSEffects.html":{},"components/PageContainerComponent.html":{}}}],["team",{"_index":1627,"title":{},"body":{"contributing.html":{}}}],["template",{"_index":5,"title":{},"body":{"components/AppContainerComponent.html":{},"components/HomePageComponent.html":{},"components/NavBarComponent.html":{},"components/NgxEditorJSComponent.html":{},"components/PageContainerComponent.html":{},"components/SidebarComponent.html":{}}}],["templateurl",{"_index":26,"title":{},"body":{"components/AppContainerComponent.html":{},"components/HomePageComponent.html":{},"components/NavBarComponent.html":{},"components/NgxEditorJSComponent.html":{},"components/PageContainerComponent.html":{},"components/SidebarComponent.html":{}}}],["temporarily",{"_index":1594,"title":{},"body":{"contributing.html":{}}}],["temporary",{"_index":1647,"title":{},"body":{"contributing.html":{}}}],["test",{"_index":773,"title":{},"body":{"classes/MockEditorJS.html":{},"classes/MockPlugin.html":{},"classes/TestClass.html":{}}}],["testclass",{"_index":770,"title":{"classes/TestClass.html":{}},"body":{"classes/MockEditorJS.html":{},"classes/MockPlugin.html":{},"classes/TestClass.html":{}}}],["text",{"_index":133,"title":{},"body":{"components/AppContainerComponent.html":{},"interfaces/Block.html":{},"interfaces/Header.html":{},"interfaces/HeaderBlock.html":{},"interfaces/Image.html":{},"interfaces/ImageBlock.html":{},"interfaces/List.html":{},"interfaces/ListBlock.html":{},"components/NavBarComponent.html":{},"components/NgxEditorJSComponent.html":{},"interfaces/Paragraph.html":{},"interfaces/ParagraphBlock.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-plugins-readme.html":{}}}],["things",{"_index":1248,"title":{},"body":{"components/PageContainerComponent.html":{}}}],["this.actions$.pipe",{"_index":943,"title":{},"body":{"injectables/NgxEditorJSEffects.html":{}}}],["this.add(key",{"_index":1025,"title":{},"body":{"injectables/NgxEditorJSPluginService.html":{}}}],["this.app.getdemodata('ngx",{"_index":1216,"title":{},"body":{"components/PageContainerComponent.html":{}}}],["this.app.getmenu('main",{"_index":123,"title":{},"body":{"components/AppContainerComponent.html":{},"components/HomePageComponent.html":{}}}],["this.app.getmenu('other",{"_index":126,"title":{},"body":{"components/AppContainerComponent.html":{}}}],["this.app.getmenu('tinynode",{"_index":125,"title":{},"body":{"components/AppContainerComponent.html":{}}}],["this.app.hidden.pipe(takeuntil(this.ondestroy$)).subscribe(hidden",{"_index":109,"title":{},"body":{"components/AppContainerComponent.html":{}}}],["this.app.togglesidebar",{"_index":113,"title":{},"body":{"components/AppContainerComponent.html":{}}}],["this.autofocus",{"_index":929,"title":{},"body":{"directives/NgxEditorJSDirective.html":{}}}],["this.autosave",{"_index":915,"title":{},"body":{"directives/NgxEditorJSDirective.html":{}}}],["this.blocks",{"_index":776,"title":{},"body":{"classes/MockEditorJS.html":{},"classes/MockPlugin.html":{},"directives/NgxEditorJSDirective.html":{},"components/PageContainerComponent.html":{},"classes/TestClass.html":{}}}],["this.blocks.length",{"_index":935,"title":{},"body":{"directives/NgxEditorJSDirective.html":{}}}],["this.blocks.pipe",{"_index":1222,"title":{},"body":{"components/PageContainerComponent.html":{}}}],["this.blocksmap[holder",{"_index":673,"title":{},"body":{"injectables/EditorJSInstanceService.html":{}}}],["this.blocksmap[holder].asobservable",{"_index":674,"title":{},"body":{"injectables/EditorJSInstanceService.html":{}}}],["this.blocksmap[holder].next",{"_index":720,"title":{},"body":{"injectables/EditorJSInstanceService.html":{}}}],["this.blocksmap[holder].next(blocks",{"_index":727,"title":{},"body":{"injectables/EditorJSInstanceService.html":{}}}],["this.blocksmap[holder].next(data.blocks",{"_index":717,"title":{},"body":{"injectables/EditorJSInstanceService.html":{}}}],["this.cd.markforcheck",{"_index":1226,"title":{},"body":{"components/PageContainerComponent.html":{}}}],["this.changemap[holder",{"_index":670,"title":{},"body":{"injectables/EditorJSInstanceService.html":{}}}],["this.changemap[holder].asobservable",{"_index":672,"title":{},"body":{"injectables/EditorJSInstanceService.html":{}}}],["this.changemap[holder].next(date.now",{"_index":653,"title":{},"body":{"injectables/EditorJSInstanceService.html":{}}}],["this.cleanupsubjects(holder",{"_index":680,"title":{},"body":{"injectables/EditorJSInstanceService.html":{}}}],["this.clearhandler(holder",{"_index":700,"title":{},"body":{"injectables/EditorJSInstanceService.html":{}}}],["this.config.editorjs",{"_index":1070,"title":{},"body":{"injectables/NgxEditorJSService.html":{}}}],["this.createeditor(this.createconfig",{"_index":921,"title":{},"body":{"directives/NgxEditorJSDirective.html":{}}}],["this.destroy",{"_index":775,"title":{},"body":{"classes/MockEditorJS.html":{},"classes/MockPlugin.html":{},"classes/TestClass.html":{}}}],["this.destroyinstance(key",{"_index":712,"title":{},"body":{"injectables/EditorJSInstanceService.html":{}}}],["this.editor.clear(this.holder",{"_index":1219,"title":{},"body":{"components/PageContainerComponent.html":{}}}],["this.editor.getblocks(this.holder).pipe",{"_index":1227,"title":{},"body":{"components/PageContainerComponent.html":{}}}],["this.editor.save(this.holder",{"_index":1218,"title":{},"body":{"components/PageContainerComponent.html":{}}}],["this.editor.update(this.holder",{"_index":1221,"title":{},"body":{"components/PageContainerComponent.html":{}}}],["this.editorjs",{"_index":655,"title":{},"body":{"injectables/EditorJSInstanceService.html":{}}}],["this.editormap[holder",{"_index":665,"title":{},"body":{"injectables/EditorJSInstanceService.html":{}}}],["this.editormap[holder].asobservable",{"_index":667,"title":{},"body":{"injectables/EditorJSInstanceService.html":{}}}],["this.editormap[holder].next(editor",{"_index":686,"title":{},"body":{"injectables/EditorJSInstanceService.html":{}}}],["this.editorservice",{"_index":912,"title":{},"body":{"directives/NgxEditorJSDirective.html":{}}}],["this.editorservice.clear(holder",{"_index":1090,"title":{},"body":{"injectables/NgxEditorJSService.html":{}}}],["this.editorservice.createinstance(options",{"_index":1073,"title":{},"body":{"injectables/NgxEditorJSService.html":{}}}],["this.editorservice.destroyinstance(holder",{"_index":1091,"title":{},"body":{"injectables/NgxEditorJSService.html":{}}}],["this.editorservice.getblocks(action.payload.holder",{"_index":948,"title":{},"body":{"injectables/NgxEditorJSEffects.html":{}}}],["this.editorservice.getblocks(holder",{"_index":1076,"title":{},"body":{"injectables/NgxEditorJSService.html":{}}}],["this.editorservice.getchanged(holder",{"_index":1078,"title":{},"body":{"injectables/NgxEditorJSService.html":{}}}],["this.editorservice.getinstance(holder).pipe(filter(editor",{"_index":1075,"title":{},"body":{"injectables/NgxEditorJSService.html":{}}}],["this.editorservice.getready(holder",{"_index":1077,"title":{},"body":{"injectables/NgxEditorJSService.html":{}}}],["this.editorservice.save(action.payload.holder",{"_index":946,"title":{},"body":{"injectables/NgxEditorJSEffects.html":{}}}],["this.editorservice.save(holder",{"_index":1089,"title":{},"body":{"injectables/NgxEditorJSService.html":{}}}],["this.editorservice.update(holder",{"_index":1079,"title":{},"body":{"injectables/NgxEditorJSService.html":{}}}],["this.el.nativeelement.id",{"_index":922,"title":{},"body":{"directives/NgxEditorJSDirective.html":{}}}],["this.eventmap[holder",{"_index":664,"title":{},"body":{"injectables/EditorJSInstanceService.html":{}}}],["this.eventmap[holder].complete",{"_index":710,"title":{},"body":{"injectables/EditorJSInstanceService.html":{}}}],["this.eventmap[holder].next",{"_index":663,"title":{},"body":{"injectables/EditorJSInstanceService.html":{}}}],["this.geteditor(holder",{"_index":1082,"title":{},"body":{"injectables/NgxEditorJSService.html":{}}}],["this.hidetoolbar",{"_index":930,"title":{},"body":{"directives/NgxEditorJSDirective.html":{}}}],["this.holder",{"_index":923,"title":{},"body":{"directives/NgxEditorJSDirective.html":{}}}],["this.http.get('/assets/app",{"_index":331,"title":{},"body":{"injectables/AppService.html":{},"injectables/AppService-1.html":{}}}],["this.id",{"_index":920,"title":{},"body":{"directives/NgxEditorJSDirective.html":{}}}],["this.includetools",{"_index":914,"title":{},"body":{"directives/NgxEditorJSDirective.html":{}}}],["this.initialblock",{"_index":931,"title":{},"body":{"directives/NgxEditorJSDirective.html":{}}}],["this.minheight",{"_index":933,"title":{},"body":{"directives/NgxEditorJSDirective.html":{}}}],["this.ondestroy$.complete",{"_index":122,"title":{},"body":{"components/AppContainerComponent.html":{},"injectables/EditorJSInstanceService.html":{}}}],["this.ondestroy$.next(true",{"_index":121,"title":{},"body":{"components/AppContainerComponent.html":{},"injectables/EditorJSInstanceService.html":{}}}],["this.onstable.emit(null",{"_index":799,"title":{},"body":{"injectables/MockNgZone.html":{}}}],["this.pages",{"_index":1296,"title":{},"body":{"injectables/PagesService.html":{}}}],["this.pagesservice.pages",{"_index":1217,"title":{},"body":{"components/PageContainerComponent.html":{}}}],["this.panelopen$.asobservable",{"_index":1214,"title":{},"body":{"components/PageContainerComponent.html":{}}}],["this.panelopen$.next(value",{"_index":1215,"title":{},"body":{"components/PageContainerComponent.html":{}}}],["this.placeholder",{"_index":932,"title":{},"body":{"directives/NgxEditorJSDirective.html":{}}}],["this.plugins.gettools(includetools",{"_index":1071,"title":{},"body":{"injectables/NgxEditorJSService.html":{}}}],["this.pluginsmap",{"_index":1027,"title":{},"body":{"injectables/NgxEditorJSPluginService.html":{}}}],["this.pluginsmap[key",{"_index":1026,"title":{},"body":{"injectables/NgxEditorJSPluginService.html":{}}}],["this.query.select('menus').pipe",{"_index":346,"title":{},"body":{"injectables/AppService.html":{},"injectables/AppService-1.html":{}}}],["this.query.select(applicationstatekeys.demodata).pipe",{"_index":338,"title":{},"body":{"injectables/AppService.html":{},"injectables/AppService-1.html":{}}}],["this.query.select(applicationstatekeys.hidden",{"_index":334,"title":{},"body":{"injectables/AppService.html":{},"injectables/AppService-1.html":{}}}],["this.query.selectall",{"_index":1297,"title":{},"body":{"injectables/PagesService.html":{}}}],["this.readymap[holder",{"_index":668,"title":{},"body":{"injectables/EditorJSInstanceService.html":{}}}],["this.readymap[holder].asobservable",{"_index":669,"title":{},"body":{"injectables/EditorJSInstanceService.html":{}}}],["this.readymap[holder].next(true",{"_index":661,"title":{},"body":{"injectables/EditorJSInstanceService.html":{}}}],["this.ref.tick",{"_index":662,"title":{},"body":{"injectables/EditorJSInstanceService.html":{}}}],["this.reset",{"_index":1228,"title":{},"body":{"components/PageContainerComponent.html":{}}}],["this.sanitizer",{"_index":934,"title":{},"body":{"directives/NgxEditorJSDirective.html":{}}}],["this.savehandler(holder",{"_index":699,"title":{},"body":{"injectables/EditorJSInstanceService.html":{}}}],["this.saver",{"_index":777,"title":{},"body":{"classes/MockEditorJS.html":{},"classes/MockPlugin.html":{},"classes/TestClass.html":{}}}],["this.service.createeditor(config",{"_index":913,"title":{},"body":{"directives/NgxEditorJSDirective.html":{}}}],["this.service.destroy(this.id",{"_index":927,"title":{},"body":{"directives/NgxEditorJSDirective.html":{}}}],["this.service.geteditor(this.id",{"_index":911,"title":{},"body":{"directives/NgxEditorJSDirective.html":{}}}],["this.service.update(this.id",{"_index":918,"title":{},"body":{"directives/NgxEditorJSDirective.html":{}}}],["this.setupevents(holder",{"_index":660,"title":{},"body":{"injectables/EditorJSInstanceService.html":{}}}],["this.setupsubjects(holder",{"_index":659,"title":{},"body":{"injectables/EditorJSInstanceService.html":{}}}],["this.sidebarhidden",{"_index":114,"title":{},"body":{"components/AppContainerComponent.html":{}}}],["this.sidebarhidden$.asobservable",{"_index":112,"title":{},"body":{"components/AppContainerComponent.html":{}}}],["this.sidebarhidden$.next(hidden",{"_index":110,"title":{},"body":{"components/AppContainerComponent.html":{}}}],["this.sidenav.close",{"_index":119,"title":{},"body":{"components/AppContainerComponent.html":{}}}],["this.sidenav.open",{"_index":120,"title":{},"body":{"components/AppContainerComponent.html":{}}}],["this.store._value()[applicationstatekeys.hidden",{"_index":337,"title":{},"body":{"injectables/AppService.html":{},"injectables/AppService-1.html":{}}}],["this.store.add(newpage",{"_index":1299,"title":{},"body":{"injectables/PagesService.html":{}}}],["this.store.remove(pageid",{"_index":1302,"title":{},"body":{"injectables/PagesService.html":{}}}],["this.store.update",{"_index":335,"title":{},"body":{"injectables/AppService.html":{},"injectables/AppService-1.html":{}}}],["this.store.update(appdata",{"_index":333,"title":{},"body":{"injectables/AppService.html":{},"injectables/AppService-1.html":{}}}],["this.store.update(pageid",{"_index":1303,"title":{},"body":{"injectables/PagesService.html":{}}}],["this.store.upsert(page.id",{"_index":1301,"title":{},"body":{"injectables/PagesService.html":{}}}],["this.updatehandler(holder",{"_index":701,"title":{},"body":{"injectables/EditorJSInstanceService.html":{}}}],["this.version",{"_index":774,"title":{},"body":{"classes/MockEditorJS.html":{},"classes/MockPlugin.html":{},"classes/TestClass.html":{}}}],["this.zone.run",{"_index":658,"title":{},"body":{"injectables/EditorJSInstanceService.html":{}}}],["this.zone.runoutsideangular",{"_index":654,"title":{},"body":{"injectables/EditorJSInstanceService.html":{}}}],["this[mapkay][holder",{"_index":689,"title":{},"body":{"injectables/EditorJSInstanceService.html":{}}}],["this[mapkay][holder].complete",{"_index":707,"title":{},"body":{"injectables/EditorJSInstanceService.html":{}}}],["this[mapkay][holder].next(value",{"_index":691,"title":{},"body":{"injectables/EditorJSInstanceService.html":{}}}],["threatening",{"_index":1599,"title":{},"body":{"contributing.html":{}}}],["throw",{"_index":924,"title":{},"body":{"directives/NgxEditorJSDirective.html":{},"injectables/NgxEditorJSService.html":{}}}],["tick",{"_index":609,"title":{},"body":{"injectables/EditorJSInstanceService.html":{}}}],["time",{"_index":723,"title":{},"body":{"injectables/EditorJSInstanceService.html":{},"classes/MockEditorJS.html":{},"classes/MockPlugin.html":{},"directives/NgxEditorJSDirective.html":{},"injectables/NgxEditorJSEffects.html":{},"injectables/NgxEditorJSService.html":{},"classes/TestClass.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-readme.html":{}}}],["timestamp",{"_index":503,"title":{},"body":{"interfaces/BlocksMap.html":{},"interfaces/ChangeMap.html":{},"interfaces/EditorMap.html":{},"interfaces/EventMap.html":{},"interfaces/EventType.html":{},"injectables/NgxEditorJSService.html":{},"interfaces/ReadyMap.html":{}}}],["tinynode",{"_index":1703,"title":{},"body":{"index.html":{}}}],["tinynodedemos",{"_index":417,"title":{"interfaces/TinynodeDemos.html":{},"interfaces/TinynodeDemos-1.html":{}},"body":{"interfaces/ApplicationState.html":{},"interfaces/ApplicationState-1.html":{},"interfaces/DemoData.html":{},"interfaces/DemoData-1.html":{},"interfaces/NgxEditorJSDemo.html":{},"interfaces/NgxEditorJSDemo-1.html":{},"interfaces/NgxEditorJSDemoData.html":{},"interfaces/NgxEditorJSDemoData-1.html":{},"interfaces/TinynodeDemos.html":{},"interfaces/TinynodeDemos-1.html":{}}}],["tinynodes",{"_index":23,"title":{"additional-documentation/tinynodes-library-docs.html":{}},"body":{"components/AppContainerComponent.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"interfaces/ApplicationData.html":{},"interfaces/ApplicationData-1.html":{},"modules/ApplicationDataModule.html":{},"injectables/ApplicationQuery.html":{},"interfaces/ApplicationState.html":{},"interfaces/ApplicationState-1.html":{},"injectables/ApplicationStore.html":{},"interfaces/DemoData.html":{},"interfaces/DemoData-1.html":{},"components/HomePageComponent.html":{},"interfaces/MenuGroup.html":{},"interfaces/MenuGroup-1.html":{},"interfaces/MenuItem.html":{},"interfaces/MenuItem-1.html":{},"components/NavBarComponent.html":{},"components/NgxEditorJSComponent.html":{},"interfaces/NgxEditorJSDemo.html":{},"interfaces/NgxEditorJSDemo-1.html":{},"interfaces/NgxEditorJSDemoData.html":{},"interfaces/NgxEditorJSDemoData-1.html":{},"modules/NgxEditorjsDemoModule.html":{},"modules/NgxTinynodesCoreModule.html":{},"components/PageContainerComponent.html":{},"components/SidebarComponent.html":{},"interfaces/TinynodeDemos.html":{},"interfaces/TinynodeDemos-1.html":{},"changelog.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"index.html":{},"license.html":{},"todo.html":{},"miscellaneous/variables.html":{},"additional-documentation/tinynodes-library-docs.html":{}}}],["tinynodes/ngx",{"_index":90,"title":{},"body":{"components/AppContainerComponent.html":{},"modules/AppModule.html":{},"interfaces/ApplicationState.html":{},"interfaces/ApplicationState-1.html":{},"interfaces/DemoData.html":{},"interfaces/DemoData-1.html":{},"components/HomePageComponent.html":{},"components/NavBarComponent.html":{},"interfaces/NgxEditorJSDemo.html":{},"interfaces/NgxEditorJSDemo-1.html":{},"interfaces/NgxEditorJSDemoData.html":{},"interfaces/NgxEditorJSDemoData-1.html":{},"injectables/NgxEditorJSEffects.html":{},"modules/NgxEditorJSModule.html":{},"modules/NgxEditorjsDemoModule.html":{},"modules/NgxEditorjsNgrxModule.html":{},"interfaces/Page.html":{},"interfaces/PageBlock.html":{},"components/PageContainerComponent.html":{},"injectables/PagesService.html":{},"components/SidebarComponent.html":{},"interfaces/Tag.html":{},"interfaces/TinynodeDemos.html":{},"interfaces/TinynodeDemos-1.html":{},"changelog.html":{},"index.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-readme.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-readme/ngx-editorjs-changelog.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-plugins-readme.html":{}}}],["tinynodes/src/app/app",{"_index":263,"title":{},"body":{"modules/AppRoutingModule.html":{},"miscellaneous/variables.html":{}}}],["tinynodes/src/app/app.module.ts",{"_index":213,"title":{},"body":{"modules/AppModule.html":{}}}],["tinynodes/src/app/components/nav",{"_index":802,"title":{},"body":{"components/NavBarComponent.html":{}}}],["tinynodes/src/app/components/sidebar",{"_index":1398,"title":{},"body":{"components/SidebarComponent.html":{}}}],["tinynodes/src/app/containers/app/app.component.ts",{"_index":11,"title":{},"body":{"components/AppContainerComponent.html":{}}}],["tinynodes/src/app/containers/app/app.component.ts:20",{"_index":58,"title":{},"body":{"components/AppContainerComponent.html":{}}}],["tinynodes/src/app/containers/app/app.component.ts:25",{"_index":71,"title":{},"body":{"components/AppContainerComponent.html":{}}}],["tinynodes/src/app/containers/app/app.component.ts:35",{"_index":47,"title":{},"body":{"components/AppContainerComponent.html":{}}}],["tinynodes/src/app/containers/app/app.component.ts:43",{"_index":75,"title":{},"body":{"components/AppContainerComponent.html":{}}}],["tinynodes/src/app/containers/app/app.component.ts:47",{"_index":67,"title":{},"body":{"components/AppContainerComponent.html":{}}}],["tinynodes/src/app/containers/app/app.component.ts:54",{"_index":61,"title":{},"body":{"components/AppContainerComponent.html":{}}}],["tinynodes/src/app/containers/app/app.component.ts:66",{"_index":65,"title":{},"body":{"components/AppContainerComponent.html":{}}}],["tinynodes/src/app/containers/app/app.component.ts:74",{"_index":77,"title":{},"body":{"components/AppContainerComponent.html":{}}}],["tinynodes/src/app/containers/app/app.component.ts:81",{"_index":80,"title":{},"body":{"components/AppContainerComponent.html":{}}}],["tinynodes/src/app/containers/app/app.component.ts:88",{"_index":83,"title":{},"body":{"components/AppContainerComponent.html":{}}}],["tinynodes/src/app/core/stores/app/application.model.ts",{"_index":418,"title":{},"body":{"interfaces/ApplicationState-1.html":{},"interfaces/DemoData-1.html":{},"interfaces/NgxEditorJSDemo-1.html":{},"interfaces/NgxEditorJSDemoData-1.html":{},"interfaces/TinynodeDemos-1.html":{},"miscellaneous/enumerations.html":{}}}],["tinynodes/src/app/core/stores/app/application.query.ts",{"_index":404,"title":{},"body":{"injectables/ApplicationQuery-1.html":{}}}],["tinynodes/src/app/core/stores/app/application.query.ts:10",{"_index":405,"title":{},"body":{"injectables/ApplicationQuery-1.html":{}}}],["tinynodes/src/app/core/stores/app/application.service.ts",{"_index":354,"title":{},"body":{"injectables/AppService-1.html":{}}}],["tinynodes/src/app/core/stores/app/application.service.ts:15",{"_index":355,"title":{},"body":{"injectables/AppService-1.html":{}}}],["tinynodes/src/app/core/stores/app/application.service.ts:34",{"_index":359,"title":{},"body":{"injectables/AppService-1.html":{}}}],["tinynodes/src/app/core/stores/app/application.service.ts:41",{"_index":358,"title":{},"body":{"injectables/AppService-1.html":{}}}],["tinynodes/src/app/core/stores/app/application.service.ts:49",{"_index":356,"title":{},"body":{"injectables/AppService-1.html":{}}}],["tinynodes/src/app/core/stores/app/application.service.ts:62",{"_index":357,"title":{},"body":{"injectables/AppService-1.html":{}}}],["tinynodes/src/app/core/stores/app/application.store.ts",{"_index":425,"title":{},"body":{"injectables/ApplicationStore-1.html":{}}}],["tinynodes/src/app/core/stores/app/application.store.ts:10",{"_index":426,"title":{},"body":{"injectables/ApplicationStore-1.html":{}}}],["tinynodes/src/app/core/types/app.ts",{"_index":385,"title":{},"body":{"interfaces/ApplicationData-1.html":{},"interfaces/MenuGroup-1.html":{},"interfaces/MenuItem-1.html":{}}}],["tinynodes/src/app/material.module",{"_index":1117,"title":{},"body":{"modules/NgxEditorjsDemoModule.html":{}}}],["tinynodes/src/app/material.module.ts",{"_index":753,"title":{},"body":{"modules/MaterialModule.html":{}}}],["tinynodes/src/app/pages/home/home",{"_index":730,"title":{},"body":{"components/HomePageComponent.html":{}}}],["tinynodes/src/environments/environment.prod.ts",{"_index":1803,"title":{},"body":{"miscellaneous/variables.html":{}}}],["tinynodes/src/environments/environment.ts",{"_index":1805,"title":{},"body":{"miscellaneous/variables.html":{}}}],["title",{"_index":60,"title":{},"body":{"components/AppContainerComponent.html":{},"interfaces/ApplicationData.html":{},"interfaces/ApplicationData-1.html":{},"interfaces/MenuGroup.html":{},"interfaces/MenuGroup-1.html":{},"interfaces/MenuItem.html":{},"interfaces/MenuItem-1.html":{},"components/NavBarComponent.html":{}}}],["today",{"_index":1420,"title":{},"body":{"changelog.html":{}}}],["todo",{"_index":412,"title":{"todo.html":{}},"body":{"interfaces/ApplicationState.html":{},"interfaces/ApplicationState-1.html":{},"interfaces/DemoData.html":{},"interfaces/DemoData-1.html":{},"interfaces/NgxEditorJSDemo.html":{},"interfaces/NgxEditorJSDemo-1.html":{},"interfaces/NgxEditorJSDemoData.html":{},"interfaces/NgxEditorJSDemoData-1.html":{},"interfaces/TinynodeDemos.html":{},"interfaces/TinynodeDemos-1.html":{},"todo.html":{}}}],["todos",{"_index":1778,"title":{},"body":{"todo.html":{}}}],["toggle",{"_index":807,"title":{},"body":{"components/NavBarComponent.html":{}}}],["togglepanel",{"_index":1181,"title":{},"body":{"components/PageContainerComponent.html":{}}}],["togglepanel(value",{"_index":1196,"title":{},"body":{"components/PageContainerComponent.html":{}}}],["toggles",{"_index":316,"title":{},"body":{"injectables/AppService.html":{},"injectables/AppService-1.html":{},"components/PageContainerComponent.html":{}}}],["togglesidebar",{"_index":35,"title":{},"body":{"components/AppContainerComponent.html":{},"injectables/AppService.html":{},"injectables/AppService-1.html":{},"components/NavBarComponent.html":{}}}],["token",{"_index":449,"title":{},"body":{"interfaces/BasePlugin.html":{},"interfaces/BasePlugin-1.html":{},"interfaces/EditorJSConfig.html":{},"injectables/EditorJSInstanceService.html":{},"interfaces/NgxEditorJSConfig.html":{},"interfaces/PluginConfig.html":{},"interfaces/PluginConfig-1.html":{},"interfaces/ToolSettingsMap.html":{},"interfaces/ToolSettingsMap-1.html":{},"miscellaneous/variables.html":{}}}],["tool",{"_index":447,"title":{},"body":{"interfaces/BasePlugin.html":{},"interfaces/BasePlugin-1.html":{},"injectables/NgxEditorJSPluginService.html":{},"components/PageContainerComponent.html":{},"injectables/PluginCode.html":{},"modules/PluginCodeModule.html":{},"interfaces/PluginConfig.html":{},"interfaces/PluginConfig-1.html":{},"injectables/PluginHeader.html":{},"modules/PluginHeaderModule.html":{},"injectables/PluginImage.html":{},"modules/PluginImageModule.html":{},"injectables/PluginLink.html":{},"modules/PluginLinkModule.html":{},"injectables/PluginList.html":{},"modules/PluginListModule.html":{},"injectables/PluginMarker.html":{},"modules/PluginMarkerModule.html":{},"injectables/PluginParagraph.html":{},"modules/PluginParagraphModule.html":{},"injectables/PluginSimpleImage.html":{},"modules/PluginSimpleImageModule.html":{},"interfaces/ToolSettingsMap.html":{},"interfaces/ToolSettingsMap-1.html":{}}}],["toolbar",{"_index":546,"title":{},"body":{"interfaces/EditorJSConfig.html":{},"components/NgxEditorJSComponent.html":{},"interfaces/NgxEditorJSConfig.html":{},"directives/NgxEditorJSDirective.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-readme.html":{}}}],["toolconstructable",{"_index":439,"title":{},"body":{"interfaces/BasePlugin.html":{},"interfaces/BasePlugin-1.html":{},"interfaces/PluginConfig.html":{},"interfaces/PluginConfig-1.html":{},"interfaces/ToolSettingsMap.html":{},"interfaces/ToolSettingsMap-1.html":{}}}],["tools",{"_index":444,"title":{},"body":{"interfaces/BasePlugin.html":{},"interfaces/BasePlugin-1.html":{},"components/NgxEditorJSComponent.html":{},"directives/NgxEditorJSDirective.html":{},"injectables/NgxEditorJSPluginService.html":{},"injectables/NgxEditorJSService.html":{},"modules/NgxEditorjsPluginsModule.html":{},"interfaces/PluginConfig.html":{},"interfaces/PluginConfig-1.html":{},"modules/PluginSimpleImageModule.html":{},"interfaces/ToolSettingsMap.html":{},"interfaces/ToolSettingsMap-1.html":{},"miscellaneous/functions.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-readme.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-readme/ngx-editorjs-changelog.html":{}}}],["toolsettings",{"_index":438,"title":{},"body":{"interfaces/BasePlugin.html":{},"interfaces/BasePlugin-1.html":{},"classes/MockEditorJS.html":{},"classes/MockPlugin.html":{},"injectables/PluginCode.html":{},"interfaces/PluginConfig.html":{},"interfaces/PluginConfig-1.html":{},"injectables/PluginHeader.html":{},"injectables/PluginImage.html":{},"injectables/PluginLink.html":{},"injectables/PluginList.html":{},"injectables/PluginMarker.html":{},"injectables/PluginParagraph.html":{},"injectables/PluginSimpleImage.html":{},"classes/TestClass.html":{},"interfaces/ToolSettingsMap.html":{},"interfaces/ToolSettingsMap-1.html":{}}}],["toolsettingsmap",{"_index":445,"title":{"interfaces/ToolSettingsMap.html":{},"interfaces/ToolSettingsMap-1.html":{}},"body":{"interfaces/BasePlugin.html":{},"interfaces/BasePlugin-1.html":{},"injectables/NgxEditorJSPluginService.html":{},"interfaces/PluginConfig.html":{},"interfaces/PluginConfig-1.html":{},"interfaces/ToolSettingsMap.html":{},"interfaces/ToolSettingsMap-1.html":{}}}],["topnav",{"_index":381,"title":{},"body":{"interfaces/ApplicationData.html":{},"interfaces/ApplicationData-1.html":{},"interfaces/MenuGroup.html":{},"interfaces/MenuGroup-1.html":{},"interfaces/MenuItem.html":{},"interfaces/MenuItem-1.html":{}}}],["tort",{"_index":1767,"title":{},"body":{"license.html":{}}}],["towards",{"_index":1549,"title":{},"body":{"contributing.html":{}}}],["tree",{"_index":8,"title":{},"body":{"components/AppContainerComponent.html":{},"components/HomePageComponent.html":{},"components/NavBarComponent.html":{},"components/NgxEditorJSComponent.html":{},"components/PageContainerComponent.html":{},"components/SidebarComponent.html":{}}}],["trigger",{"_index":608,"title":{},"body":{"injectables/EditorJSInstanceService.html":{}}}],["trolling",{"_index":1558,"title":{},"body":{"contributing.html":{}}}],["true",{"_index":545,"title":{},"body":{"interfaces/EditorJSConfig.html":{},"interfaces/NgxEditorJSConfig.html":{},"miscellaneous/variables.html":{}}}],["two",{"_index":894,"title":{},"body":{"directives/NgxEditorJSDirective.html":{},"contributing.html":{}}}],["type",{"_index":51,"title":{},"body":{"components/AppContainerComponent.html":{},"injectables/AppService.html":{},"injectables/AppService-1.html":{},"interfaces/ApplicationData.html":{},"interfaces/ApplicationData-1.html":{},"injectables/ApplicationQuery.html":{},"injectables/ApplicationQuery-1.html":{},"interfaces/ApplicationState.html":{},"interfaces/ApplicationState-1.html":{},"interfaces/BasePlugin.html":{},"interfaces/BasePlugin-1.html":{},"interfaces/Block.html":{},"interfaces/BlocksMap.html":{},"interfaces/ChangeMap.html":{},"classes/Changed.html":{},"interfaces/DemoData.html":{},"interfaces/DemoData-1.html":{},"interfaces/EditorJSConfig.html":{},"injectables/EditorJSInstanceService.html":{},"interfaces/EditorMap.html":{},"interfaces/EventMap.html":{},"interfaces/EventType.html":{},"interfaces/Header.html":{},"interfaces/HeaderBlock.html":{},"components/HomePageComponent.html":{},"interfaces/Image.html":{},"interfaces/ImageBlock.html":{},"interfaces/List.html":{},"interfaces/ListBlock.html":{},"interfaces/MenuGroup.html":{},"interfaces/MenuGroup-1.html":{},"interfaces/MenuItem.html":{},"interfaces/MenuItem-1.html":{},"classes/MockEditorJS.html":{},"injectables/MockNgZone.html":{},"components/NavBarComponent.html":{},"components/NgxEditorJSComponent.html":{},"interfaces/NgxEditorJSConfig.html":{},"interfaces/NgxEditorJSDemo.html":{},"interfaces/NgxEditorJSDemo-1.html":{},"directives/NgxEditorJSDirective.html":{},"injectables/NgxEditorJSEffects.html":{},"modules/NgxEditorJSModule.html":{},"injectables/NgxEditorJSPluginService.html":{},"injectables/NgxEditorJSService.html":{},"classes/NotReady.html":{},"interfaces/Page.html":{},"interfaces/PageBlock.html":{},"components/PageContainerComponent.html":{},"injectables/PagesQuery.html":{},"injectables/PagesService.html":{},"interfaces/Paragraph.html":{},"interfaces/ParagraphBlock.html":{},"classes/Ready.html":{},"interfaces/ReadyMap.html":{},"classes/SaveEnd.html":{},"classes/SaveStart.html":{},"components/SidebarComponent.html":{},"interfaces/Tag.html":{},"interfaces/TinynodeDemos.html":{},"interfaces/TinynodeDemos-1.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-readme.html":{}}}],["typealiases",{"_index":1790,"title":{"miscellaneous/typealiases.html":{}},"body":{}}],["typeof",{"_index":340,"title":{},"body":{"injectables/AppService.html":{},"injectables/AppService-1.html":{},"injectables/EditorJSInstanceService.html":{},"injectables/NgxEditorJSService.html":{}}}],["types/app",{"_index":324,"title":{},"body":{"injectables/AppService.html":{},"injectables/AppService-1.html":{},"interfaces/ApplicationState.html":{},"interfaces/ApplicationState-1.html":{},"interfaces/DemoData.html":{},"interfaces/DemoData-1.html":{},"interfaces/NgxEditorJSDemo.html":{},"interfaces/NgxEditorJSDemo-1.html":{},"interfaces/NgxEditorJSDemoData.html":{},"interfaces/NgxEditorJSDemoData-1.html":{},"interfaces/TinynodeDemos.html":{},"interfaces/TinynodeDemos-1.html":{}}}],["types/blocks",{"_index":642,"title":{},"body":{"injectables/EditorJSInstanceService.html":{},"components/NgxEditorJSComponent.html":{},"directives/NgxEditorJSDirective.html":{},"injectables/NgxEditorJSService.html":{}}}],["types/config",{"_index":910,"title":{},"body":{"directives/NgxEditorJSDirective.html":{},"modules/NgxEditorJSModule.html":{},"injectables/NgxEditorJSService.html":{}}}],["types/maps",{"_index":643,"title":{},"body":{"injectables/EditorJSInstanceService.html":{}}}],["types/plugins",{"_index":1018,"title":{},"body":{"injectables/NgxEditorJSPluginService.html":{},"injectables/PluginCode.html":{},"injectables/PluginHeader.html":{},"injectables/PluginImage.html":{},"injectables/PluginLink.html":{},"injectables/PluginList.html":{},"injectables/PluginMarker.html":{},"injectables/PluginParagraph.html":{},"injectables/PluginSimpleImage.html":{}}}],["typescript",{"_index":739,"title":{},"body":{"components/HomePageComponent.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-readme.html":{}}}],["typing",{"_index":1234,"title":{},"body":{"components/PageContainerComponent.html":{}}}],["unacceptable",{"_index":1551,"title":{},"body":{"contributing.html":{}}}],["undefined",{"_index":341,"title":{},"body":{"injectables/AppService.html":{},"injectables/AppService-1.html":{},"injectables/EditorJSInstanceService.html":{},"injectables/NgxEditorJSService.html":{}}}],["under",{"_index":744,"title":{},"body":{"components/HomePageComponent.html":{},"changelog.html":{}}}],["underlying",{"_index":847,"title":{},"body":{"components/NgxEditorJSComponent.html":{},"changelog.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-readme.html":{}}}],["unordered",{"_index":464,"title":{},"body":{"interfaces/Block.html":{},"interfaces/Header.html":{},"interfaces/HeaderBlock.html":{},"interfaces/Image.html":{},"interfaces/ImageBlock.html":{},"interfaces/List.html":{},"interfaces/ListBlock.html":{},"interfaces/Paragraph.html":{},"interfaces/ParagraphBlock.html":{},"miscellaneous/typealiases.html":{}}}],["until",{"_index":1454,"title":{},"body":{"changelog.html":{}}}],["unwelcome",{"_index":1555,"title":{},"body":{"contributing.html":{}}}],["up",{"_index":298,"title":{},"body":{"injectables/AppService.html":{},"injectables/AppService-1.html":{},"injectables/EditorJSInstanceService.html":{},"components/PageContainerComponent.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-readme/ngx-editorjs-changelog.html":{}}}],["update",{"_index":599,"title":{},"body":{"injectables/EditorJSInstanceService.html":{},"injectables/NgxEditorJSService.html":{},"contributing.html":{}}}],["update(holder",{"_index":637,"title":{},"body":{"injectables/EditorJSInstanceService.html":{},"injectables/NgxEditorJSService.html":{}}}],["updated",{"_index":288,"title":{},"body":{"injectables/AppService.html":{},"injectables/AppService-1.html":{},"components/NgxEditorJSComponent.html":{},"directives/NgxEditorJSDirective.html":{},"injectables/PagesService.html":{}}}],["updatedone",{"_index":1080,"title":{},"body":{"injectables/NgxEditorJSService.html":{}}}],["updatedone$.complete",{"_index":1088,"title":{},"body":{"injectables/NgxEditorJSService.html":{}}}],["updatedone$.next(true",{"_index":1087,"title":{},"body":{"injectables/NgxEditorJSService.html":{}}}],["updatehandler(holder",{"_index":721,"title":{},"body":{"injectables/EditorJSInstanceService.html":{}}}],["updates",{"_index":639,"title":{},"body":{"injectables/EditorJSInstanceService.html":{},"injectables/NgxEditorJSService.html":{},"injectables/PagesService.html":{}}}],["upload",{"_index":1882,"title":{},"body":{"additional-documentation/tinynodes-library-docs/ngx-editorjs-plugins-readme.html":{}}}],["upsert",{"_index":1274,"title":{},"body":{"injectables/PagesService.html":{}}}],["upsert(page",{"_index":1289,"title":{},"body":{"injectables/PagesService.html":{}}}],["url",{"_index":374,"title":{},"body":{"interfaces/ApplicationData.html":{},"interfaces/ApplicationData-1.html":{},"interfaces/Block.html":{},"interfaces/Header.html":{},"interfaces/HeaderBlock.html":{},"interfaces/Image.html":{},"interfaces/ImageBlock.html":{},"interfaces/List.html":{},"interfaces/ListBlock.html":{},"interfaces/MenuGroup.html":{},"interfaces/MenuGroup-1.html":{},"interfaces/MenuItem.html":{},"interfaces/MenuItem-1.html":{},"components/PageContainerComponent.html":{},"interfaces/Paragraph.html":{},"interfaces/ParagraphBlock.html":{}}}],["usage",{"_index":1230,"title":{},"body":{"components/PageContainerComponent.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-readme.html":{}}}],["use",{"_index":869,"title":{},"body":{"directives/NgxEditorJSDirective.html":{},"modules/NgxEditorJSModule.html":{},"components/PageContainerComponent.html":{},"contributing.html":{},"index.html":{},"license.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-readme.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-readme/ngx-editorjs-changelog.html":{}}}],["used",{"_index":371,"title":{},"body":{"interfaces/ApplicationData.html":{},"interfaces/ApplicationData-1.html":{},"modules/ApplicationDataModule.html":{},"injectables/EditorJSInstanceService.html":{},"interfaces/MenuGroup.html":{},"interfaces/MenuGroup-1.html":{},"interfaces/MenuItem.html":{},"interfaces/MenuItem-1.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-readme.html":{}}}],["usefactory",{"_index":994,"title":{},"body":{"modules/NgxEditorJSModule.html":{},"modules/NgxEditorjsDemoModule.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-readme.html":{}}}],["useful",{"_index":1462,"title":{},"body":{"changelog.html":{},"contributing.html":{}}}],["user",{"_index":1004,"title":{},"body":{"injectables/NgxEditorJSPluginService.html":{}}}],["userplugin",{"_index":1855,"title":{},"body":{"additional-documentation/tinynodes-library-docs/ngx-editorjs-readme/ngx-editorjs-changelog.html":{}}}],["userplugins",{"_index":455,"title":{},"body":{"interfaces/BasePlugin.html":{},"interfaces/BasePlugin-1.html":{},"injectables/NgxEditorJSPluginService.html":{},"modules/NgxEditorjsDemoModule.html":{},"interfaces/PluginConfig.html":{},"interfaces/PluginConfig-1.html":{},"interfaces/ToolSettingsMap.html":{},"interfaces/ToolSettingsMap-1.html":{},"miscellaneous/variables.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-readme.html":{}}}],["uses",{"_index":1851,"title":{},"body":{"additional-documentation/tinynodes-library-docs/ngx-editorjs-readme/ngx-editorjs-changelog.html":{}}}],["usevalue",{"_index":585,"title":{},"body":{"modules/EditorJSInstanceModule.html":{},"modules/NgxEditorJSModule.html":{}}}],["using",{"_index":821,"title":{},"body":{"components/NgxEditorJSComponent.html":{},"changelog.html":{},"contributing.html":{},"index.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-readme.html":{}}}],["utils/editorjs",{"_index":989,"title":{},"body":{"modules/NgxEditorJSModule.html":{},"injectables/NgxEditorJSService.html":{}}}],["value",{"_index":55,"title":{},"body":{"components/AppContainerComponent.html":{},"classes/Changed.html":{},"injectables/EditorJSInstanceService.html":{},"injectables/MockNgZone.html":{},"components/NavBarComponent.html":{},"components/NgxEditorJSComponent.html":{},"directives/NgxEditorJSDirective.html":{},"injectables/NgxEditorJSEffects.html":{},"injectables/NgxEditorJSPluginService.html":{},"injectables/NgxEditorJSService.html":{},"classes/NotReady.html":{},"components/PageContainerComponent.html":{},"classes/Ready.html":{},"classes/SaveEnd.html":{},"classes/SaveStart.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/variables.html":{}}}],["values",{"_index":500,"title":{},"body":{"interfaces/BlocksMap.html":{},"interfaces/ChangeMap.html":{},"injectables/EditorJSInstanceService.html":{},"interfaces/EditorMap.html":{},"interfaces/EventMap.html":{},"interfaces/EventType.html":{},"injectables/NgxEditorJSService.html":{},"interfaces/ReadyMap.html":{},"miscellaneous/variables.html":{}}}],["var",{"_index":170,"title":{},"body":{"components/AppContainerComponent.html":{},"components/HomePageComponent.html":{},"components/NavBarComponent.html":{},"components/NgxEditorJSComponent.html":{},"components/PageContainerComponent.html":{},"components/SidebarComponent.html":{}}}],["variables",{"_index":1483,"title":{"miscellaneous/variables.html":{}},"body":{"contributing.html":{},"miscellaneous/variables.html":{}}}],["version",{"_index":725,"title":{},"body":{"injectables/EditorJSInstanceService.html":{},"classes/MockEditorJS.html":{},"classes/MockPlugin.html":{},"directives/NgxEditorJSDirective.html":{},"injectables/NgxEditorJSEffects.html":{},"injectables/NgxEditorJSService.html":{},"classes/TestClass.html":{},"changelog.html":{},"contributing.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-readme.html":{}}}],["versioning",{"_index":1492,"title":{},"body":{"contributing.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-readme/ngx-editorjs-changelog.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-plugins-readme/ngx-editorjs-plugins-changelog.html":{}}}],["vertical",{"_index":160,"title":{},"body":{"components/AppContainerComponent.html":{},"components/NavBarComponent.html":{}}}],["via",{"_index":454,"title":{},"body":{"interfaces/BasePlugin.html":{},"interfaces/BasePlugin-1.html":{},"directives/NgxEditorJSDirective.html":{},"injectables/NgxEditorJSService.html":{},"modules/NgxEditorjsNgrxModule.html":{},"modules/NgxTinynodesCoreModule.html":{},"injectables/PagesService.html":{},"interfaces/PluginConfig.html":{},"interfaces/PluginConfig-1.html":{},"interfaces/ToolSettingsMap.html":{},"interfaces/ToolSettingsMap-1.html":{},"contributing.html":{},"todo.html":{},"miscellaneous/variables.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-readme.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-readme/ngx-editorjs-changelog.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-plugins-readme.html":{}}}],["view",{"_index":216,"title":{},"body":{"modules/AppModule.html":{},"components/PageContainerComponent.html":{}}}],["viewchild",{"_index":87,"title":{},"body":{"components/AppContainerComponent.html":{},"components/NgxEditorJSComponent.html":{}}}],["viewchild(matsidenav",{"_index":70,"title":{},"body":{"components/AppContainerComponent.html":{}}}],["viewchild(ngxeditorjsdirective",{"_index":844,"title":{},"body":{"components/NgxEditorJSComponent.html":{}}}],["viewpoints",{"_index":1539,"title":{},"body":{"contributing.html":{}}}],["visit",{"_index":217,"title":{},"body":{"modules/AppModule.html":{},"components/HomePageComponent.html":{},"index.html":{}}}],["void",{"_index":64,"title":{},"body":{"components/AppContainerComponent.html":{},"injectables/AppService.html":{},"injectables/AppService-1.html":{},"injectables/EditorJSInstanceService.html":{},"classes/MockEditorJS.html":{},"injectables/MockNgZone.html":{},"classes/MockPlugin.html":{},"directives/NgxEditorJSDirective.html":{},"injectables/NgxEditorJSPluginService.html":{},"injectables/NgxEditorJSService.html":{},"components/PageContainerComponent.html":{},"injectables/PagesService.html":{},"classes/TestClass.html":{}}}],["wait",{"_index":900,"title":{},"body":{"directives/NgxEditorJSDirective.html":{}}}],["want",{"_index":1043,"title":{},"body":{"injectables/NgxEditorJSService.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-readme.html":{}}}],["warning",{"_index":1125,"title":{},"body":{"modules/NgxEditorjsNgrxModule.html":{},"modules/PageStoreModule.html":{}}}],["warranties",{"_index":1753,"title":{},"body":{"license.html":{}}}],["warranty",{"_index":1748,"title":{},"body":{"license.html":{}}}],["way",{"_index":866,"title":{},"body":{"directives/NgxEditorJSDirective.html":{},"modules/NgxEditorjsPluginsModule.html":{},"injectables/PagesService.html":{}}}],["web",{"_index":741,"title":{},"body":{"components/HomePageComponent.html":{}}}],["wednesday",{"_index":1417,"title":{},"body":{"changelog.html":{}}}],["welcome",{"_index":737,"title":{},"body":{"components/HomePageComponent.html":{}}}],["welcoming",{"_index":1504,"title":{},"body":{"contributing.html":{}}}],["what's",{"_index":1829,"title":{},"body":{"additional-documentation/tinynodes-library-docs/ngx-editorjs-readme.html":{}}}],["whether",{"_index":1765,"title":{},"body":{"license.html":{}}}],["white",{"_index":137,"title":{},"body":{"components/AppContainerComponent.html":{},"components/NavBarComponent.html":{}}}],["width",{"_index":131,"title":{},"body":{"components/AppContainerComponent.html":{},"components/NavBarComponent.html":{},"components/NgxEditorJSComponent.html":{},"components/PageContainerComponent.html":{}}}],["wiki",{"_index":1589,"title":{},"body":{"contributing.html":{}}}],["wish",{"_index":1468,"title":{},"body":{"contributing.html":{}}}],["withbackground",{"_index":482,"title":{},"body":{"interfaces/Block.html":{},"interfaces/Header.html":{},"interfaces/HeaderBlock.html":{},"interfaces/Image.html":{},"interfaces/ImageBlock.html":{},"interfaces/List.html":{},"interfaces/ListBlock.html":{},"interfaces/Paragraph.html":{},"interfaces/ParagraphBlock.html":{}}}],["withborder",{"_index":480,"title":{},"body":{"interfaces/Block.html":{},"interfaces/Header.html":{},"interfaces/HeaderBlock.html":{},"interfaces/Image.html":{},"interfaces/ImageBlock.html":{},"interfaces/List.html":{},"interfaces/ListBlock.html":{},"interfaces/Paragraph.html":{},"interfaces/ParagraphBlock.html":{}}}],["within",{"_index":622,"title":{},"body":{"injectables/EditorJSInstanceService.html":{},"injectables/NgxEditorJSService.html":{},"contributing.html":{},"index.html":{}}}],["withlatestfrom",{"_index":947,"title":{},"body":{"injectables/NgxEditorJSEffects.html":{}}}],["without",{"_index":823,"title":{},"body":{"components/NgxEditorJSComponent.html":{},"changelog.html":{},"contributing.html":{},"license.html":{}}}],["won't",{"_index":547,"title":{},"body":{"interfaces/EditorJSConfig.html":{},"interfaces/NgxEditorJSConfig.html":{}}}],["work",{"_index":1459,"title":{},"body":{"changelog.html":{}}}],["yes",{"_index":889,"title":{},"body":{"directives/NgxEditorJSDirective.html":{},"modules/NgxEditorJSModule.html":{},"injectables/NgxEditorJSService.html":{},"injectables/PagesService.html":{},"miscellaneous/functions.html":{}}}],["zone",{"_index":601,"title":{},"body":{"injectables/EditorJSInstanceService.html":{},"injectables/MockNgZone.html":{},"injectables/NgxEditorJSService.html":{}}}],["zone.js",{"_index":1683,"title":{},"body":{"dependencies.html":{}}}],["zoom",{"_index":210,"title":{},"body":{"modules/AppModule.html":{},"modules/ApplicationDataModule.html":{},"modules/EditorJSInstanceModule.html":{},"modules/NgxEditorJSModule.html":{},"modules/NgxEditorjsDemoModule.html":{},"modules/NgxEditorjsNgrxModule.html":{},"modules/NgxEditorjsPluginsModule.html":{},"modules/NgxTinynodesCoreModule.html":{},"modules/PageStoreModule.html":{},"modules/PluginCodeModule.html":{},"modules/PluginHeaderModule.html":{},"modules/PluginImageModule.html":{},"modules/PluginLinkModule.html":{},"modules/PluginListModule.html":{},"modules/PluginMarkerModule.html":{},"modules/PluginParagraphModule.html":{},"modules/PluginSimpleImageModule.html":{},"overview.html":{}}}]],"pipeline":["stemmer"]},
    "store": {"components/AppContainerComponent.html":{"url":"components/AppContainerComponent.html","title":"component - AppContainerComponent","body":"\n                   \n\n\n\n\n\n  Components\n  AppContainerComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    apps/ngx-tinynodes/src/app/containers/app/app.component.ts\n\n\n    \n        Description\n    \n    \n        The main application component that provides the root container\n\n    \n\n\n    \n        Implements\n    \n    \n                    AfterContentInit\n                    OnDestroy\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                tinynodes-root\n            \n\n            \n                styleUrls\n                app.component.scss\n            \n\n\n\n            \n                templateUrl\n                app.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                sidenav\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngAfterContentInit\n                            \n                            \n                                ngOnDestroy\n                            \n                            \n                                    Public\n                                toggleSidebar\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                pageTitle\n                            \n                        \n                    \n                \n\n\n\n\n                    \n                        \n                            Accessors\n                        \n                    \n                    \n                        \n                            \n                                \n                                    sidebarHidden\n                                \n                                \n                                    mainMenu\n                                \n                                \n                                    projectsMenu\n                                \n                                \n                                    openSourceMenu\n                                \n                            \n                        \n                    \n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(app: AppService)\n                    \n                \n                        \n                            \n                                Defined in apps/ngx-tinynodes/src/app/containers/app/app.component.ts:35\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        app\n                                                  \n                                                        \n                                                                        AppService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        pageTitle\n                    \n                \n                \n                    \n                        Default value : 'Tinynodes Angular Demos'\n                    \n                \n                        \n                            \n                                    Defined in apps/ngx-tinynodes/src/app/containers/app/app.component.ts:20\n                            \n                        \n                \n                    \n                        The page title\n\n                    \n                \n            \n        \n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngAfterContentInit\n                        \n                        \n                    \n                \n            \n            \n                \nngAfterContentInit()\n                \n            \n\n\n            \n                \n                    Defined in apps/ngx-tinynodes/src/app/containers/app/app.component.ts:54\n                \n            \n\n\n            \n                \n                    Component initialized\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngOnDestroy\n                        \n                        \n                    \n                \n            \n            \n                \nngOnDestroy()\n                \n            \n\n\n            \n                \n                    Defined in apps/ngx-tinynodes/src/app/containers/app/app.component.ts:66\n                \n            \n\n\n            \n                \n                    Component destroyed\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            toggleSidebar\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    toggleSidebar()\n                \n            \n\n\n            \n                \n                    Defined in apps/ngx-tinynodes/src/app/containers/app/app.component.ts:47\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            sidenav\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     MatSidenav\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @ViewChild(MatSidenav)\n                            \n                        \n                    \n                        \n                            \n                                    Defined in apps/ngx-tinynodes/src/app/containers/app/app.component.ts:25\n                            \n                        \n\n                \n                    \n                        The Material sidebar\n\n                    \n                \n\n            \n        \n\n\n    \n    \n        Accessors\n    \n        \n            \n                \n                    \n                        \n                        sidebarHidden\n                    \n                \n\n                \n                    \n                        getsidebarHidden()\n                    \n                \n                            \n                                \n                                    Defined in apps/ngx-tinynodes/src/app/containers/app/app.component.ts:43\n                                \n                            \n\n            \n        \n        \n            \n                \n                    \n                        \n                        mainMenu\n                    \n                \n\n                \n                    \n                        getmainMenu()\n                    \n                \n                            \n                                \n                                    Defined in apps/ngx-tinynodes/src/app/containers/app/app.component.ts:74\n                                \n                            \n                    \n                        \n                                Get the application main menu\n\n\n                        \n                    \n\n            \n        \n        \n            \n                \n                    \n                        \n                        projectsMenu\n                    \n                \n\n                \n                    \n                        getprojectsMenu()\n                    \n                \n                            \n                                \n                                    Defined in apps/ngx-tinynodes/src/app/containers/app/app.component.ts:81\n                                \n                            \n                    \n                        \n                                Get the projects menu\n\n\n                        \n                    \n\n            \n        \n        \n            \n                \n                    \n                        \n                        openSourceMenu\n                    \n                \n\n                \n                    \n                        getopenSourceMenu()\n                    \n                \n                            \n                                \n                                    Defined in apps/ngx-tinynodes/src/app/containers/app/app.component.ts:88\n                                \n                            \n                    \n                        \n                                Get the open source menu\n\n\n                        \n                    \n\n            \n        \n\n\n\n\n    \n        import { AfterContentInit, Component, Input, OnDestroy, ViewChild } from '@angular/core';\nimport { MatSidenav } from '@angular/material';\nimport { AppService } from '@tinynodes/ngx-tinynodes-core';\nimport { BehaviorSubject, Observable, Subject } from 'rxjs';\nimport { distinctUntilChanged, takeUntil } from 'rxjs/operators';\n\n/**\n * The main application component that provides the root container\n */\n@Component({\n  selector: 'tinynodes-root',\n  templateUrl: 'app.component.html',\n  styleUrls: ['app.component.scss']\n})\nexport class AppContainerComponent implements AfterContentInit, OnDestroy {\n  /**\n   * The page title\n   */\n  @Input()\n  public pageTitle = 'Tinynodes Angular Demos';\n\n  /**\n   * The Material sidebar\n   */\n  @ViewChild(MatSidenav) sidenav: MatSidenav;\n\n  /**\n   * When the component is destroyed\n   */\n  private readonly onDestroy$ = new Subject();\n\n  /**\n   * Stores the current sidebar state\n   */\n  private readonly sidebarHidden$ = new BehaviorSubject(false);\n\n  constructor(private readonly app: AppService) {\n    this.app.hidden.pipe(takeUntil(this.onDestroy$)).subscribe(hidden => {\n      this.sidebarHidden$.next(hidden);\n    });\n  }\n\n  public get sidebarHidden(): Observable {\n    return this.sidebarHidden$.asObservable();\n  }\n\n  public toggleSidebar() {\n    this.app.toggleSidebar();\n  }\n\n  /**\n   * Component initialized\n   */\n  ngAfterContentInit() {\n    this.sidebarHidden$\n      .pipe(\n        distinctUntilChanged(),\n        takeUntil(this.onDestroy$)\n      )\n      .subscribe(hidden => (hidden ? this.sidenav.close() : this.sidenav.open()));\n  }\n\n  /**\n   * Component destroyed\n   */\n  ngOnDestroy() {\n    this.onDestroy$.next(true);\n    this.onDestroy$.complete();\n  }\n\n  /**\n   * Get the application main menu\n   */\n  public get mainMenu() {\n    return this.app.getMenu('main-links');\n  }\n\n  /**\n   * Get the projects menu\n   */\n  public get projectsMenu() {\n    return this.app.getMenu('tinynode-projects');\n  }\n\n  /**\n   * Get the open source menu\n   */\n  public get openSourceMenu() {\n    return this.app.getMenu('other-projects');\n  }\n}\n\n    \n\n    \n        \n\n  \n    \n  \n  \n    \n      \n    \n  \n\n\n    \n\n    \n                \n                    app.component.scss\n                \n                mat-sidenav-container,\nmat-sidenav-content,\nmat-sidenav {\n  height: 100vh;\n}\n\nmat-sidenav {\n  width: 250px;\n}\n\na {\n  text-decoration: none;\n  color: white;\n}\n\na:hover,\na:active {\n  color: lightgray;\n}\n\n.navigation-items {\n  list-style: none;\n  padding: 0;\n  margin: 0;\n  cursor: pointer;\n}\n\n.icon {\n  display: inline-block;\n  height: 30px;\n  margin: 0 auto;\n  padding-right: 5px;\n  text-align: center;\n  vertical-align: middle;\n  width: 15%;\n}\n\n.label {\n  display: inline-block;\n  line-height: 30px;\n  margin: 0;\n  width: 85%;\n}\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                          '\n    var COMPONENTS = [{'name': 'AppContainerComponent', 'selector': 'tinynodes-root'},{'name': 'HomePageComponent', 'selector': 'tinynodes-home-page'},{'name': 'NavBarComponent', 'selector': 'tinynodes-nav-bar'},{'name': 'NgxEditorJSComponent', 'selector': 'ngx-editorjs'},{'name': 'PageContainerComponent', 'selector': 'ngx-page-container'},{'name': 'SidebarComponent', 'selector': 'tinynodes-sidebar'}];\n    var DIRECTIVES = [{'name': 'NgxEditorJSDirective', 'selector': '[ngxEditorJS]'}];\n    var ACTUAL_COMPONENT = {'name': 'AppContainerComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/AppModule.html":{"url":"modules/AppModule.html","title":"module - AppModule","body":"\n                   \n\n\n\n\n    Modules\n    AppModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_AppModule\n\n\n\ncluster_AppModule_declarations\n\n\n\ncluster_AppModule_imports\n\n\n\ncluster_AppModule_bootstrap\n\n\n\n\nAppContainerComponent\n\nAppContainerComponent\n\n\n\nAppModule\n\nAppModule\n\nAppModule -->\n\nAppContainerComponent->AppModule\n\n\n\n\n\nHomePageComponent\n\nHomePageComponent\n\nAppModule -->\n\nHomePageComponent->AppModule\n\n\n\n\n\nNavBarComponent\n\nNavBarComponent\n\nAppModule -->\n\nNavBarComponent->AppModule\n\n\n\n\n\nSidebarComponent\n\nSidebarComponent\n\nAppModule -->\n\nSidebarComponent->AppModule\n\n\n\n\n\nAppContainerComponent \n\nAppContainerComponent \n\nAppContainerComponent  -->\n\nAppModule->AppContainerComponent \n\n\n\n\n\nAppRoutingModule\n\nAppRoutingModule\n\nAppModule -->\n\nAppRoutingModule->AppModule\n\n\n\n\n\nApplicationDataModule\n\nApplicationDataModule\n\nAppModule -->\n\nApplicationDataModule->AppModule\n\n\n\n\n\nMaterialModule\n\nMaterialModule\n\nAppModule -->\n\nMaterialModule->AppModule\n\n\n\n\n\nNgxEditorJSModule\n\nNgxEditorJSModule\n\nAppModule -->\n\nNgxEditorJSModule->AppModule\n\n\n\n\n\nNgxEditorjsDemoModule\n\nNgxEditorjsDemoModule\n\nAppModule -->\n\nNgxEditorjsDemoModule->AppModule\n\n\n\n\n\nNgxTinynodesCoreModule\n\nNgxTinynodesCoreModule\n\nAppModule -->\n\nNgxTinynodesCoreModule->AppModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            apps/ngx-tinynodes/src/app/app.module.ts\n        \n\n\n        \n            Description\n        \n        \n            The main ngx-tinynodes module that builds the core single page application.\nTo view the application visit the demo\n\n        \n\n\n        \n            \n                \n                    Declarations\n                    \n                        \n                            AppContainerComponent\n                        \n                        \n                            HomePageComponent\n                        \n                        \n                            NavBarComponent\n                        \n                        \n                            SidebarComponent\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            AppRoutingModule\n                        \n                        \n                            ApplicationDataModule\n                        \n                        \n                            MaterialModule\n                        \n                        \n                            NgxEditorJSModule\n                        \n                        \n                            NgxEditorjsDemoModule\n                        \n                        \n                            NgxTinynodesCoreModule\n                        \n                    \n                \n                \n                    Bootstrap\n                    \n                        \n                            AppContainerComponent\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { HttpClient, HttpClientModule } from '@angular/common/http';\nimport { NgModule } from '@angular/core';\nimport { FlexLayoutModule } from '@angular/flex-layout';\nimport { BrowserModule } from '@angular/platform-browser';\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\nimport { AkitaNgRouterStoreModule } from '@datorama/akita-ng-router-store';\nimport { AkitaNgDevtools } from '@datorama/akita-ngdevtools';\nimport { NgxEditorJSModule } from '@tinynodes/ngx-editorjs';\nimport { NgxEditorjsDemoModule } from '@tinynodes/ngx-editorjs-demo';\nimport { MarkdownModule } from 'ngx-markdown';\nimport { environment } from '../environments/environment';\nimport { AppRoutingModule } from './app-routing.module';\nimport { AppContainerComponent } from './containers/app/app.component';\nimport { NavBarComponent } from './components/nav-bar/nav-bar.component';\nimport { SidebarComponent } from './components/sidebar-component/sidebar.component';\nimport { MaterialModule } from './material.module';\nimport { HomePageComponent } from './pages/home/home-page.component';\nimport { MatButtonModule } from '@angular/material';\nimport { ApplicationDataModule, NgxTinynodesCoreModule } from '@tinynodes/ngx-tinynodes-core';\n\n/**\n * The main `ngx-tinynodes` module that builds the core single page application.\n * To view the application visit [the demo](https://tinynodes-ngx.firebaseapp.com/)\n */\n@NgModule({\n  declarations: [AppContainerComponent, NavBarComponent, SidebarComponent, HomePageComponent],\n  imports: [\n    BrowserModule,\n    HttpClientModule,\n    BrowserAnimationsModule,\n    MaterialModule,\n    FlexLayoutModule,\n    ApplicationDataModule,\n    AppRoutingModule,\n    NgxTinynodesCoreModule,\n    NgxEditorJSModule.forRoot(),\n    NgxEditorjsDemoModule,\n    MarkdownModule.forRoot({ loader: HttpClient }),\n    environment.production ? [] : [AkitaNgDevtools.forRoot(), AkitaNgRouterStoreModule.forRoot()]\n  ],\n  bootstrap: [AppContainerComponent]\n})\nexport class AppModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/AppRoutingModule.html":{"url":"modules/AppRoutingModule.html","title":"module - AppRoutingModule","body":"\n                   \n\n\n\n\n    Modules\n    AppRoutingModule\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            apps/ngx-tinynodes/src/app/app-routing.module.ts\n        \n\n\n        \n            Description\n        \n        \n            The App routing module provides the base roots of the application\n\n        \n\n\n        \n            \n            \n        \n\n\n    \n\n\n    \n        import { Route, RouterModule } from '@angular/router';\nimport { NgModule } from '@angular/core';\nimport { HomePageComponent } from './pages/home/home-page.component';\n\n/**\n * The main application routes\n */\nexport const appRoutes: Route[] = [\n  {\n    path: '',\n    redirectTo: 'home',\n    pathMatch: 'full'\n  },\n  {\n    path: 'home',\n    component: HomePageComponent\n  }\n];\n\n/**\n * The App routing module provides the base roots of the application\n */\n@NgModule({\n  imports: [RouterModule.forRoot(appRoutes)],\n  exports: [RouterModule]\n})\nexport class AppRoutingModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/AppService.html":{"url":"injectables/AppService.html","title":"injectable - AppService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  AppService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            libs/ngx-tinynodes-core/src/lib/stores/app/application.service.ts\n        \n\n            \n                Description\n            \n            \n                The main application service, this loads the initial data and then provides\nit to the store, from here the main state can be updated and queried.\n\n            \n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                getDemoData\n                            \n                            \n                                    Public\n                                getMenu\n                            \n                            \n                                    Public\n                                toggleSidebar\n                            \n                        \n                    \n                \n\n\n\n\n\n                    \n                        \n                            Accessors\n                        \n                    \n                    \n                        \n                            \n                                \n                                    hidden\n                                \n                            \n                        \n                    \n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(query: ApplicationQuery, store: ApplicationStore, http: HttpClient)\n                    \n                \n                        \n                            \n                                Defined in libs/ngx-tinynodes-core/src/lib/stores/app/application.service.ts:15\n                            \n                        \n\n                \n                    \n                            Sets up the providers for service methods\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        query\n                                                  \n                                                        \n                                                                        ApplicationQuery\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                The application query provider\n\n                                                        \n                                                \n                                                \n                                                        store\n                                                  \n                                                        \n                                                                        ApplicationStore\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                The application store provider\n\n                                                        \n                                                \n                                                \n                                                        http\n                                                  \n                                                        \n                                                                        HttpClient\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                The HTTP client provider\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            getDemoData\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    getDemoData(demoName: string)\n                \n            \n\n\n            \n                \n                    Defined in libs/ngx-tinynodes-core/src/lib/stores/app/application.service.ts:49\n                \n            \n\n            \n                \n                    Type parameters :\n                    \n                        T\n                    \n                \n            \n\n            \n                \n                    Returns the demo data for a specific demo \n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    demoName\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        The name of the demo data to load\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Observable\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            getMenu\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    getMenu(key: string)\n                \n            \n\n\n            \n                \n                    Defined in libs/ngx-tinynodes-core/src/lib/stores/app/application.service.ts:62\n                \n            \n\n            \n                \n                    Type parameters :\n                    \n                        T\n                    \n                \n            \n\n            \n                \n                    Gets a {MenuGroup} from the men data\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    key\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        The key of the menu to load\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Observable>\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            toggleSidebar\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    toggleSidebar()\n                \n            \n\n\n            \n                \n                    Defined in libs/ngx-tinynodes-core/src/lib/stores/app/application.service.ts:41\n                \n            \n\n\n            \n                \n                    Toggles the sidebar state\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n\n            \n    \n        Accessors\n    \n        \n            \n                \n                    \n                        \n                        hidden\n                    \n                \n\n                \n                    \n                        gethidden()\n                    \n                \n                            \n                                \n                                    Defined in libs/ngx-tinynodes-core/src/lib/stores/app/application.service.ts:34\n                                \n                            \n                    \n                        \n                                Returns if the side menu hidden state is set\n\n\n                                \n                                    Returns :     Observable\n\n                                \n                        \n                    \n\n            \n        \n\n    \n\n\n    \n        import { HttpClient } from '@angular/common/http';\nimport { Injectable } from '@angular/core';\nimport { Observable } from 'rxjs';\nimport { distinctUntilChanged, filter, map } from 'rxjs/operators';\nimport { ApplicationData, MenuGroup } from '../../types/app';\nimport { ApplicationStateKeys, DemoData } from './application.model';\nimport { ApplicationQuery } from './application.query';\nimport { ApplicationStore } from './application.store';\n\n/**\n * The main application service, this loads the initial data and then provides\n * it to the store, from here the main state can be updated and queried.\n */\n@Injectable()\nexport class AppService {\n  /**\n   * Sets up the providers for service methods\n   * @param query The application query provider\n   * @param store The application store provider\n   * @param http  The HTTP client provider\n   */\n  constructor(\n    private readonly query: ApplicationQuery,\n    private readonly store: ApplicationStore,\n    private readonly http: HttpClient\n  ) {\n    // Load the application data\n    this.http.get('/assets/app-data.json').subscribe((appData: ApplicationData) => this.store.update(appData));\n  }\n\n  /**\n   * Returns if the side menu hidden state is set\n   */\n  get hidden(): Observable {\n    return this.query.select(ApplicationStateKeys.Hidden);\n  }\n\n  /**\n   * Toggles the sidebar state\n   */\n  public toggleSidebar() {\n    this.store.update({ [ApplicationStateKeys.Hidden]: !this.store._value()[ApplicationStateKeys.Hidden] });\n  }\n\n  /**\n   * Returns the demo data for a specific demo \n   * @param demoName The name of the demo data to load\n   */\n  public getDemoData(demoName: string): Observable {\n    return this.query.select(ApplicationStateKeys.DemoData).pipe(\n      filter(data => typeof data !== 'undefined'),\n      map((demoData: DemoData[]) => {\n        return demoData.find(demo => demo.name === demoName).data;\n      })\n    ) as Observable;\n  }\n\n  /**\n   * Gets a {MenuGroup} from the men data\n   * @param key The key of the menu to load\n   */\n  public getMenu(key: string): Observable> {\n    return this.query.select('menus').pipe(\n      distinctUntilChanged(),\n      filter(menus => menus !== undefined && menus.length > 0),\n      map(menus => {\n        return menus.find(menu => menu.key == key);\n      })\n    ) as Observable>;\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/AppService-1.html":{"url":"injectables/AppService-1.html","title":"injectable - AppService-1","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  AppService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/ngx-tinynodes/src/app/core/stores/app/application.service.ts\n        \n\n            \n                Description\n            \n            \n                The main application service, this loads the initial data and then provides\nit to the store, from here the main state can be updated and queried.\n\n            \n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                getDemoData\n                            \n                            \n                                    Public\n                                getMenu\n                            \n                            \n                                    Public\n                                toggleSidebar\n                            \n                        \n                    \n                \n\n\n\n\n\n                    \n                        \n                            Accessors\n                        \n                    \n                    \n                        \n                            \n                                \n                                    hidden\n                                \n                            \n                        \n                    \n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(query: ApplicationQuery, store: ApplicationStore, http: HttpClient)\n                    \n                \n                        \n                            \n                                Defined in apps/ngx-tinynodes/src/app/core/stores/app/application.service.ts:15\n                            \n                        \n\n                \n                    \n                            Sets up the providers for service methods\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        query\n                                                  \n                                                        \n                                                                        ApplicationQuery\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                The application query provider\n\n                                                        \n                                                \n                                                \n                                                        store\n                                                  \n                                                        \n                                                                        ApplicationStore\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                The application store provider\n\n                                                        \n                                                \n                                                \n                                                        http\n                                                  \n                                                        \n                                                                        HttpClient\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                The HTTP client provider\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            getDemoData\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    getDemoData(demoName: string)\n                \n            \n\n\n            \n                \n                    Defined in apps/ngx-tinynodes/src/app/core/stores/app/application.service.ts:49\n                \n            \n\n            \n                \n                    Type parameters :\n                    \n                        T\n                    \n                \n            \n\n            \n                \n                    Returns the demo data for a specific demo \n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    demoName\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        The name of the demo data to load\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Observable\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            getMenu\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    getMenu(key: string)\n                \n            \n\n\n            \n                \n                    Defined in apps/ngx-tinynodes/src/app/core/stores/app/application.service.ts:62\n                \n            \n\n            \n                \n                    Type parameters :\n                    \n                        T\n                    \n                \n            \n\n            \n                \n                    Gets a {MenuGroup} from the men data\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    key\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        The key of the menu to load\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Observable>\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            toggleSidebar\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    toggleSidebar()\n                \n            \n\n\n            \n                \n                    Defined in apps/ngx-tinynodes/src/app/core/stores/app/application.service.ts:41\n                \n            \n\n\n            \n                \n                    Toggles the sidebar state\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n\n            \n    \n        Accessors\n    \n        \n            \n                \n                    \n                        \n                        hidden\n                    \n                \n\n                \n                    \n                        gethidden()\n                    \n                \n                            \n                                \n                                    Defined in apps/ngx-tinynodes/src/app/core/stores/app/application.service.ts:34\n                                \n                            \n                    \n                        \n                                Returns if the side menu hidden state is set\n\n\n                                \n                                    Returns :     Observable\n\n                                \n                        \n                    \n\n            \n        \n\n    \n\n\n    \n        import { HttpClient } from '@angular/common/http';\nimport { Injectable } from '@angular/core';\nimport { Observable } from 'rxjs';\nimport { distinctUntilChanged, filter, map } from 'rxjs/operators';\nimport { ApplicationData, MenuGroup } from '../../types/app';\nimport { ApplicationStateKeys, DemoData } from './application.model';\nimport { ApplicationQuery } from './application.query';\nimport { ApplicationStore } from './application.store';\n\n/**\n * The main application service, this loads the initial data and then provides\n * it to the store, from here the main state can be updated and queried.\n */\n@Injectable()\nexport class AppService {\n  /**\n   * Sets up the providers for service methods\n   * @param query The application query provider\n   * @param store The application store provider\n   * @param http  The HTTP client provider\n   */\n  constructor(\n    private readonly query: ApplicationQuery,\n    private readonly store: ApplicationStore,\n    private readonly http: HttpClient\n  ) {\n    // Load the application data\n    this.http.get('/assets/app-data.json').subscribe((appData: ApplicationData) => this.store.update(appData));\n  }\n\n  /**\n   * Returns if the side menu hidden state is set\n   */\n  get hidden(): Observable {\n    return this.query.select(ApplicationStateKeys.Hidden);\n  }\n\n  /**\n   * Toggles the sidebar state\n   */\n  public toggleSidebar() {\n    this.store.update({ [ApplicationStateKeys.Hidden]: !this.store._value()[ApplicationStateKeys.Hidden] });\n  }\n\n  /**\n   * Returns the demo data for a specific demo \n   * @param demoName The name of the demo data to load\n   */\n  public getDemoData(demoName: string): Observable {\n    return this.query.select(ApplicationStateKeys.DemoData).pipe(\n      filter(data => typeof data !== 'undefined'),\n      map((demoData: DemoData[]) => {\n        return demoData.find(demo => demo.name === demoName).data;\n      })\n    ) as Observable;\n  }\n\n  /**\n   * Gets a {MenuGroup} from the men data\n   * @param key The key of the menu to load\n   */\n  public getMenu(key: string): Observable> {\n    return this.query.select('menus').pipe(\n      distinctUntilChanged(),\n      filter(menus => menus !== undefined && menus.length > 0),\n      map(menus => {\n        return menus.find(menu => menu.key == key);\n      })\n    ) as Observable>;\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/ApplicationData.html":{"url":"interfaces/ApplicationData.html","title":"interface - ApplicationData","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  ApplicationData\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            libs/ngx-tinynodes-core/src/lib/types/app.ts\n        \n\n            \n                Description\n            \n            \n                The aggregate application interface\n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        hidden\n                                \n                                \n                                        menus\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        hidden\n                                    \n                                \n                                \n                                    \n                                        hidden:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    If the sidebar menu is hidden\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        menus\n                                    \n                                \n                                \n                                    \n                                        menus:     MenuGroup[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     MenuGroup[]\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    An list of menu groups available in the apps\n\n                                \n                            \n                        \n                    \n            \n    \n\n\n    \n        import { RouterLink } from '@angular/router';\n\n/**\n * A menu item in the Tinynodes app\n */\nexport interface MenuItem {\n  /**\n   * The display label for the app\n   */\n  label: string;\n  /**\n   * Optional icon for the menu item\n   */\n  icon?: string;\n  /**\n   * Description of the item, used for title, aria, etc\n   */\n  description?: string;\n  /**\n   * The {RouterLink} for the menu item or a string url\n   */\n  link?: RouterLink | string;\n\n  /**\n   * Any children to render in the menu\n   */\n  children?: MenuItem[];\n}\n\n/**\n * A menu group describes a set of menu items with a key and optional title\n */\nexport interface MenuGroup {\n  /**\n   * The key of the menu (e.g. `sidebar`, `topnav`, etc)\n   */\n  key: string;\n  /**\n   * Optional title to render in the menu\n   */\n  title?: string;\n\n  /**\n   * The menu items, can contain one or more items with children\n   */\n  items: MenuItem[];\n}\n\n/**\n * The aggregate application interface\n */\nexport interface ApplicationData {\n  /**\n   * If the sidebar menu is hidden\n   */\n  hidden: boolean;\n\n  /**\n   * An list of menu groups available in the apps\n   */\n  menus: MenuGroup[];\n}\n\n    \n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/ApplicationData-1.html":{"url":"interfaces/ApplicationData-1.html","title":"interface - ApplicationData-1","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  ApplicationData\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/ngx-tinynodes/src/app/core/types/app.ts\n        \n\n            \n                Description\n            \n            \n                The aggregate application interface\n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        hidden\n                                \n                                \n                                        menus\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        hidden\n                                    \n                                \n                                \n                                    \n                                        hidden:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    If the sidebar menu is hidden\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        menus\n                                    \n                                \n                                \n                                    \n                                        menus:     MenuGroup[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     MenuGroup[]\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    An list of menu groups available in the apps\n\n                                \n                            \n                        \n                    \n            \n    \n\n\n    \n        import { RouterLink } from '@angular/router';\n\n/**\n * A menu item in the Tinynodes app\n */\nexport interface MenuItem {\n  /**\n   * The display label for the app\n   */\n  label: string;\n  /**\n   * Optional icon for the menu item\n   */\n  icon?: string;\n  /**\n   * Description of the item, used for title, aria, etc\n   */\n  description?: string;\n  /**\n   * The {RouterLink} for the menu item or a string url\n   */\n  link?: RouterLink | string;\n\n  /**\n   * Any children to render in the menu\n   */\n  children?: MenuItem[];\n}\n\n/**\n * A menu group describes a set of menu items with a key and optional title\n */\nexport interface MenuGroup {\n  /**\n   * The key of the menu (e.g. `sidebar`, `topnav`, etc)\n   */\n  key: string;\n  /**\n   * Optional title to render in the menu\n   */\n  title?: string;\n\n  /**\n   * The menu items, can contain one or more items with children\n   */\n  items: MenuItem[];\n}\n\n/**\n * The aggregate application interface\n */\nexport interface ApplicationData {\n  /**\n   * If the sidebar menu is hidden\n   */\n  hidden: boolean;\n\n  /**\n   * An list of menu groups available in the apps\n   */\n  menus: MenuGroup[];\n}\n\n    \n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/ApplicationDataModule.html":{"url":"modules/ApplicationDataModule.html","title":"module - ApplicationDataModule","body":"\n                   \n\n\n\n\n    Modules\n    ApplicationDataModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_ApplicationDataModule\n\n\n\ncluster_ApplicationDataModule_providers\n\n\n\n\nAppService\n\nAppService\n\n\n\nApplicationDataModule\n\nApplicationDataModule\n\nApplicationDataModule -->\n\nAppService->ApplicationDataModule\n\n\n\n\n\nApplicationQuery\n\nApplicationQuery\n\nApplicationDataModule -->\n\nApplicationQuery->ApplicationDataModule\n\n\n\n\n\nApplicationStore\n\nApplicationStore\n\nApplicationDataModule -->\n\nApplicationStore->ApplicationDataModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            libs/ngx-tinynodes-core/src/lib/stores/app/application.module.ts\n        \n\n\n        \n            Description\n        \n        \n            This module provide the Application state and helper functions that\nare used across the Tinynodes site\n\n        \n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            AppService\n                        \n                        \n                            ApplicationQuery\n                        \n                        \n                            ApplicationStore\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { NgModule } from '@angular/core';\nimport { ApplicationQuery } from './application.query';\nimport { AppService } from './application.service';\nimport { ApplicationStore } from './application.store';\n\n/**\n * This module provide the Application state and helper functions that\n * are used across the Tinynodes site\n */\n@NgModule({\n  providers: [AppService, ApplicationQuery, ApplicationStore]\n})\nexport class ApplicationDataModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/ApplicationQuery.html":{"url":"injectables/ApplicationQuery.html","title":"injectable - ApplicationQuery","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  ApplicationQuery\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            libs/ngx-tinynodes-core/src/lib/stores/app/application.query.ts\n        \n\n            \n                Description\n            \n            \n                The {Query} handler for the Application state data\n\n            \n\n            \n                Extends\n            \n            \n                        Query\n            \n\n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(store: ApplicationStore)\n                    \n                \n                        \n                            \n                                Defined in libs/ngx-tinynodes-core/src/lib/stores/app/application.query.ts:10\n                            \n                        \n\n                \n                    \n                            Provide the store for the class instance\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        store\n                                                  \n                                                        \n                                                                        ApplicationStore\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                Store to be provided\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { Query } from '@datorama/akita';\nimport { ApplicationState } from './application.model';\nimport { ApplicationStore } from './application.store';\n\n/**\n * The {Query} handler for the Application state data\n */\n@Injectable()\nexport class ApplicationQuery extends Query {\n  /**\n   * Provide the store for the class instance\n   * @param store Store to be provided\n   */\n  constructor(protected store: ApplicationStore) {\n    super(store);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/ApplicationQuery-1.html":{"url":"injectables/ApplicationQuery-1.html","title":"injectable - ApplicationQuery-1","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  ApplicationQuery\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/ngx-tinynodes/src/app/core/stores/app/application.query.ts\n        \n\n            \n                Description\n            \n            \n                The {Query} handler for the Application state data\n\n            \n\n            \n                Extends\n            \n            \n                        Query\n            \n\n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(store: ApplicationStore)\n                    \n                \n                        \n                            \n                                Defined in apps/ngx-tinynodes/src/app/core/stores/app/application.query.ts:10\n                            \n                        \n\n                \n                    \n                            Provide the store for the class instance\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        store\n                                                  \n                                                        \n                                                                        ApplicationStore\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                Store to be provided\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { Query } from '@datorama/akita';\nimport { ApplicationState } from './application.model';\nimport { ApplicationStore } from './application.store';\n\n/**\n * The {Query} handler for the Application state data\n */\n@Injectable()\nexport class ApplicationQuery extends Query {\n  /**\n   * Provide the store for the class instance\n   * @param store Store to be provided\n   */\n  constructor(protected store: ApplicationStore) {\n    super(store);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/ApplicationState.html":{"url":"interfaces/ApplicationState.html","title":"interface - ApplicationState","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  ApplicationState\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            libs/ngx-tinynodes-core/src/lib/stores/app/application.model.ts\n        \n\n            \n                Description\n            \n            \n                A representation of the application state\n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        demoData\n                                \n                                \n                                        hidden\n                                \n                                \n                                        menus\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        demoData\n                                    \n                                \n                                \n                                    \n                                        demoData:     DemoData[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     DemoData[]\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Data for demos\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        hidden\n                                    \n                                \n                                \n                                    \n                                        hidden:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    If the side menu is hidden\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        menus\n                                    \n                                \n                                \n                                    \n                                        menus:     MenuGroup[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     MenuGroup[]\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    A set of menus loaded from application data\n\n                                \n                            \n                        \n                    \n            \n    \n\n\n    \n        import { Block } from '@tinynodes/ngx-editorjs';\nimport { MenuGroup } from '../../types/app';\n\n/**\n * An Enum of the keys in the application state\n */\nexport enum ApplicationStateKeys {\n  /**\n   * The hidden state key\n   */\n  Hidden = 'hidden',\n\n  /**\n   * The menus key\n   */\n  Menus = 'menus',\n\n  /**\n   * The demo data key\n   */\n  DemoData = 'demoData'\n}\n\n/**\n * Interface for a demo data object\n */\nexport interface DemoData {\n  /**\n   * The name of the demo (e.g. `ngx-editorjs-demo`)\n   */\n  name: string;\n  /**\n   * The data for the demo as ``\n   */\n  data: T;\n}\n\n/**\n * Interface for `ngx-editorjs-demo` data\n * TODO: This should be moved\n */\nexport interface NgxEditorJSDemo {\n  /**\n   * The initial blocks for the demo\n   */\n  blocks: Block[];\n}\n\n/**\n * The demo data for `ngx-editorjs-demo`\n */\nexport interface NgxEditorJSDemoData extends DemoData {}\n\n/**\n * The demos on tinynodes\n */\nexport interface TinynodeDemos {\n  /**\n   * The `ngx-editorjs-demo` data\n   */\n  'ngx-editorjs-demo': NgxEditorJSDemoData;\n}\n\n/**\n * A representation of the application state\n */\nexport interface ApplicationState {\n  /**\n   * If the side menu is hidden\n   */\n  hidden: boolean;\n\n  /**\n   * A set of menus loaded from application data\n   */\n  menus: MenuGroup[];\n\n  /**\n   * Data for demos\n   */\n  demoData: DemoData[];\n}\n\n    \n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/ApplicationState-1.html":{"url":"interfaces/ApplicationState-1.html","title":"interface - ApplicationState-1","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  ApplicationState\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/ngx-tinynodes/src/app/core/stores/app/application.model.ts\n        \n\n            \n                Description\n            \n            \n                A representation of the application state\n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        demoData\n                                \n                                \n                                        hidden\n                                \n                                \n                                        menus\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        demoData\n                                    \n                                \n                                \n                                    \n                                        demoData:     DemoData[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     DemoData[]\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Data for demos\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        hidden\n                                    \n                                \n                                \n                                    \n                                        hidden:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    If the side menu is hidden\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        menus\n                                    \n                                \n                                \n                                    \n                                        menus:     MenuGroup[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     MenuGroup[]\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    A set of menus loaded from application data\n\n                                \n                            \n                        \n                    \n            \n    \n\n\n    \n        import { Block } from '@tinynodes/ngx-editorjs';\nimport { MenuGroup } from '../../types/app';\n\n/**\n * An Enum of the keys in the application state\n */\nexport enum ApplicationStateKeys {\n  /**\n   * The hidden state key\n   */\n  Hidden = 'hidden',\n\n  /**\n   * The menus key\n   */\n  Menus = 'menus',\n\n  /**\n   * The demo data key\n   */\n  DemoData = 'demoData'\n}\n\n/**\n * Interface for a demo data object\n */\nexport interface DemoData {\n  /**\n   * The name of the demo (e.g. `ngx-editorjs-demo`)\n   */\n  name: string;\n  /**\n   * The data for the demo as ``\n   */\n  data: T;\n}\n\n/**\n * Interface for `ngx-editorjs-demo` data\n * TODO: This should be moved\n */\nexport interface NgxEditorJSDemo {\n  /**\n   * The initial blocks for the demo\n   */\n  blocks: Block[];\n}\n\n/**\n * The demo data for `ngx-editorjs-demo`\n */\nexport interface NgxEditorJSDemoData extends DemoData {}\n\n/**\n * The demos on tinynodes\n */\nexport interface TinynodeDemos {\n  /**\n   * The `ngx-editorjs-demo` data\n   */\n  'ngx-editorjs-demo': NgxEditorJSDemoData;\n}\n\n/**\n * A representation of the application state\n */\nexport interface ApplicationState {\n  /**\n   * If the side menu is hidden\n   */\n  hidden: boolean;\n\n  /**\n   * A set of menus loaded from application data\n   */\n  menus: MenuGroup[];\n\n  /**\n   * Data for demos\n   */\n  demoData: DemoData[];\n}\n\n    \n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/ApplicationStore.html":{"url":"injectables/ApplicationStore.html","title":"injectable - ApplicationStore","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  ApplicationStore\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            libs/ngx-tinynodes-core/src/lib/stores/app/application.store.ts\n        \n\n            \n                Description\n            \n            \n                Store for the Application state data\n\n            \n\n            \n                Extends\n            \n            \n                    Store\n            \n\n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in libs/ngx-tinynodes-core/src/lib/stores/app/application.store.ts:10\n                            \n                        \n\n                \n                    \n                            Provide an empty state for the application\n\n                    \n                \n            \n        \n\n\n\n\n    \n\n\n    \n        import { Store, StoreConfig } from '@datorama/akita';\nimport { Injectable } from '@angular/core';\nimport { ApplicationState } from './application.model';\n\n/**\n * Store for the Application state data\n */\n@Injectable()\n@StoreConfig({ name: 'application' })\nexport class ApplicationStore extends Store {\n  /**\n   * Provide an empty state for the application\n   */\n  constructor() {\n    super({\n      hidden: false,\n      menus: [],\n      demoData: []\n    });\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/ApplicationStore-1.html":{"url":"injectables/ApplicationStore-1.html","title":"injectable - ApplicationStore-1","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  ApplicationStore\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/ngx-tinynodes/src/app/core/stores/app/application.store.ts\n        \n\n            \n                Description\n            \n            \n                Store for the Application state data\n\n            \n\n            \n                Extends\n            \n            \n                    Store\n            \n\n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in apps/ngx-tinynodes/src/app/core/stores/app/application.store.ts:10\n                            \n                        \n\n                \n                    \n                            Provide an empty state for the application\n\n                    \n                \n            \n        \n\n\n\n\n    \n\n\n    \n        import { Store, StoreConfig } from '@datorama/akita';\nimport { Injectable } from '@angular/core';\nimport { ApplicationState } from './application.model';\n\n/**\n * Store for the Application state data\n */\n@Injectable()\n@StoreConfig({ name: 'application' })\nexport class ApplicationStore extends Store {\n  /**\n   * Provide an empty state for the application\n   */\n  constructor() {\n    super({\n      hidden: false,\n      menus: [],\n      demoData: []\n    });\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/BasePlugin.html":{"url":"interfaces/BasePlugin.html","title":"interface - BasePlugin","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  BasePlugin\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            libs/ngx-editorjs/src/lib/types/plugins.ts\n        \n\n            \n                Description\n            \n            \n                Defines the interface for required and optional plugin methods.\nThese methods allow a plugin to return a EditorJS plugin and an optional shortcut\n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        plugin\n                                \n                                \n                                            Optional\n                                        shortcut\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        plugin\n                                    \n                                \n                                \n                                    \n                                        plugin:         function\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         function\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    The plugin settings to be returned\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        shortcut\n                                    \n                                \n                                \n                                    \n                                        shortcut:         function\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         function\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    Optional shortcut for the plugin\n\n                                \n                            \n                        \n                    \n            \n    \n\n\n    \n        import { InjectionToken } from '@angular/core';\nimport { ToolSettings, ToolConstructable } from '@editorjs/editorjs';\n\n/**\n * A Module plugin configuration\n */\nexport interface PluginConfig {\n  /**\n   * The key of the plugin and the plugin class extending `BasePlugin`\n   */\n  [key: string]: BasePlugin;\n}\n\n/**\n * A map of all the tools settings\n */\nexport interface ToolSettingsMap {\n  /**\n   * The key of the plugin and the plugin exported tool settings\n   */\n  [key: string]: ToolConstructable | ToolSettings;\n}\n\n/**\n * Defines the interface for required and optional plugin methods.\n * These methods allow a plugin to return a EditorJS plugin and an optional shortcut\n */\nexport interface BasePlugin {\n  /**\n   * The plugin settings to be returned\n   */\n  plugin: () => ToolConstructable | ToolSettings;\n\n  /**\n   * Optional shortcut for the plugin\n   */\n  shortcut?: () => string;\n}\n\n/**\n * The Injection token for initial plugins as defined in the ngx-editorjs module\n */\nexport const InitialPlugins = new InjectionToken('InitialPlugins');\n\n/**\n * The injection token for adding plugins via your own application\n */\nexport const UserPlugins = new InjectionToken('UserPlugins');\n\n    \n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/BasePlugin-1.html":{"url":"interfaces/BasePlugin-1.html","title":"interface - BasePlugin-1","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  BasePlugin\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            libs/ngx-editorjs-plugins/src/lib/types/plugins.ts\n        \n\n            \n                Description\n            \n            \n                Defines the interface for required and optional plugin methods.\nThese methods allow a plugin to return a EditorJS plugin and an optional shortcut\n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        plugin\n                                \n                                \n                                            Optional\n                                        shortcut\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        plugin\n                                    \n                                \n                                \n                                    \n                                        plugin:         function\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         function\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    The plugin settings to be returned\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        shortcut\n                                    \n                                \n                                \n                                    \n                                        shortcut:         function\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         function\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    Optional shortcut for the plugin\n\n                                \n                            \n                        \n                    \n            \n    \n\n\n    \n        import { InjectionToken } from '@angular/core';\nimport { ToolSettings, ToolConstructable } from '@editorjs/editorjs';\n\n/**\n * A Module plugin configuration\n */\nexport interface PluginConfig {\n  /**\n   * The key of the plugin and the plugin class extending `BasePlugin`\n   */\n  [key: string]: BasePlugin;\n}\n\n/**\n * A map of all the tools settings\n */\nexport interface ToolSettingsMap {\n  /**\n   * The key of the plugin and the plugin exported tool settings\n   */\n  [key: string]: ToolConstructable | ToolSettings;\n}\n\n/**\n * Defines the interface for required and optional plugin methods.\n * These methods allow a plugin to return a EditorJS plugin and an optional shortcut\n */\nexport interface BasePlugin {\n  /**\n   * The plugin settings to be returned\n   */\n  plugin: () => ToolConstructable | ToolSettings;\n\n  /**\n   * Optional shortcut for the plugin\n   */\n  shortcut?: () => string;\n}\n\n/**\n * The Injection token for initial plugins as defined in the ngx-editorjs module\n */\nexport const InitialPlugins = new InjectionToken('InitialPlugins');\n\n/**\n * The injection token for adding plugins via your own application\n */\nexport const UserPlugins = new InjectionToken('UserPlugins');\n\n    \n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/Block.html":{"url":"interfaces/Block.html","title":"interface - Block","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  Block\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            libs/ngx-editorjs/src/lib/types/blocks.ts\n        \n\n            \n                Description\n            \n            \n                Base block type for EditorJS\n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        data\n                                \n                                \n                                        type\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n            \n    Indexable\n        \n            \n                \n                    \n                        [key: string]:        any\n\n                    \n                \n                        \n                            \n                                Defined in libs/ngx-editorjs/src/lib/types/blocks.ts:13\n                            \n                        \n                \n                    \n                        Additional properties on the type\n\n                    \n                \n            \n        \n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        data\n                                    \n                                \n                                \n                                    \n                                        data:     T\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     T\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    The data interface for the block type\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        type\n                                    \n                                \n                                \n                                    \n                                        type:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    The EditorJS block type\n\n                                \n                            \n                        \n                    \n            \n    \n\n\n    \n        export interface Block {\n  /**\n   * The EditorJS block type\n   */\n  type: string;\n\n  /**\n   * The data interface for the block type\n   */\n  data: T;\n\n  /**\n   * Additional properties on the type\n   */\n  [key: string]: any;\n}\n\n/**\n * Available list styles, supports `ordered` and `unordered`.\n * A custom string can also be added\n */\nexport type ListStyle = 'ordered' | 'unordered' | string;\n\n/**\n * Default data type for a list block\n */\nexport interface List {\n  /**\n   * The list style\n   */\n  style: ListStyle;\n  /**\n   * List items of type T\n   */\n  items: T[];\n}\n\n/**\n * The default list block is provided by the EditorJS list plugin\n */\nexport interface ListBlock extends Block> {\n  /**\n   * The EditorJS block type\n   */\n  type: 'list';\n}\n\n/**\n * Default data type for a paragraph block\n */\ninterface Paragraph {\n  /**\n   * The paragraph text\n   */\n  text: string;\n}\n\n/**\n * Interface for a paragraph block\n */\nexport interface ParagraphBlock extends Block {\n  /**\n   * The EditorJS block type\n   */\n  type: 'paragraph';\n}\n\n/**\n * Default data type for a header block\n */\ninterface Header {\n  /**\n   * The header text\n   */\n  text: string;\n  /**\n   * The header level from 1-6\n   */\n  level: number;\n}\n\n/**\n * Interface for a header block\n */\nexport interface HeaderBlock extends Block {\n  /**\n   * The EditorJS block type\n   */\n  type: 'header';\n}\n\n/**\n * Default data type for a header block\n */\nexport interface Image {\n  /**\n   * The image URL\n   */\n  url: string;\n  /**\n   * Optional image caption\n   */\n  caption?: string;\n  /**\n   * Optional border property\n   */\n  withBorder?: boolean;\n\n  /**\n   * Optional background property\n   */\n  withBackground?: boolean;\n\n  /**\n   * Optional stretch property\n   */\n  stretched?: boolean;\n}\n\n/**\n * Interface for a image block\n */\nexport interface ImageBlock extends Block {\n  /**\n   * The EditorJS block type\n   */\n  type: 'image';\n}\n\n/**\n * Type of all the basic block type\n */\nexport type BlockTypes = ParagraphBlock | HeaderBlock | ImageBlock | ListBlock | Block;\n\n    \n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/BlocksMap.html":{"url":"interfaces/BlocksMap.html","title":"interface - BlocksMap","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  BlocksMap\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            libs/ngx-editorjs/src/lib/types/maps.ts\n        \n\n            \n                Description\n            \n            \n                A map containing BehaviorSubject of Block elements from EditorJS\n\n            \n\n\n\n\n            \n    Indexable\n        \n            \n                \n                    \n                        [key: string]:        BehaviorSubject\n\n                    \n                \n                        \n                            \n                                Defined in libs/ngx-editorjs/src/lib/types/maps.ts:36\n                            \n                        \n                \n                    \n                        A map key containing a {BehaviorSubject} of {Block[]}\n\n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import EditorJS from '@editorjs/editorjs';\nimport { BehaviorSubject } from 'rxjs';\nimport { Block } from './blocks';\n\n/**\n * An event type for calling `EditorJS`\n */\nexport interface EventType {\n  type: string;\n  payload?: T;\n}\n\n/**\n * A map containing an event subject for an `EditorJS` instance\n */\nexport interface EventMap {\n  /**\n   * A map key containing a {BehaviorSubject} of {EventType}\n   */\n  [key: string]: BehaviorSubject;\n}\n\n/**\n * A map containing instances of `EditorJS`\n */\nexport interface EditorMap {\n  /**\n   * A map key containing a {BehaviorSubject} of {EditorJS}\n   */\n  [key: string]: BehaviorSubject;\n}\n\n/**\n * A map containing `BehaviorSubject` of `Block` elements from `EditorJS`\n */\nexport interface BlocksMap {\n  /**\n   * A map key containing a {BehaviorSubject} of {Block[]}\n   */\n  [key: string]: BehaviorSubject;\n}\n\n/**\n * A map containing `BehaviorSubject` of `boolean` values of the ready state of `EditorJS`\n */\nexport interface ReadyMap {\n  /**\n   * A map key containing a {BehaviorSubject} of {boolean}\n   */\n  [key: string]: BehaviorSubject;\n}\n\n/**\n * A map containing `BehaviorSubject` of `number` which is the timestamp of the last `EditorJS` change\n */\nexport interface ChangeMap {\n  /**\n   * A map key containing a {BehaviorSubject} of {number}\n   */\n  [key: string]: BehaviorSubject;\n}\n\n    \n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/ChangeMap.html":{"url":"interfaces/ChangeMap.html","title":"interface - ChangeMap","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  ChangeMap\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            libs/ngx-editorjs/src/lib/types/maps.ts\n        \n\n            \n                Description\n            \n            \n                A map containing BehaviorSubject of number which is the timestamp of the last EditorJS change\n\n            \n\n\n\n\n            \n    Indexable\n        \n            \n                \n                    \n                        [key: string]:    BehaviorSubject\n\n                    \n                \n                        \n                            \n                                Defined in libs/ngx-editorjs/src/lib/types/maps.ts:56\n                            \n                        \n                \n                    \n                        A map key containing a {BehaviorSubject} of {number}\n\n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import EditorJS from '@editorjs/editorjs';\nimport { BehaviorSubject } from 'rxjs';\nimport { Block } from './blocks';\n\n/**\n * An event type for calling `EditorJS`\n */\nexport interface EventType {\n  type: string;\n  payload?: T;\n}\n\n/**\n * A map containing an event subject for an `EditorJS` instance\n */\nexport interface EventMap {\n  /**\n   * A map key containing a {BehaviorSubject} of {EventType}\n   */\n  [key: string]: BehaviorSubject;\n}\n\n/**\n * A map containing instances of `EditorJS`\n */\nexport interface EditorMap {\n  /**\n   * A map key containing a {BehaviorSubject} of {EditorJS}\n   */\n  [key: string]: BehaviorSubject;\n}\n\n/**\n * A map containing `BehaviorSubject` of `Block` elements from `EditorJS`\n */\nexport interface BlocksMap {\n  /**\n   * A map key containing a {BehaviorSubject} of {Block[]}\n   */\n  [key: string]: BehaviorSubject;\n}\n\n/**\n * A map containing `BehaviorSubject` of `boolean` values of the ready state of `EditorJS`\n */\nexport interface ReadyMap {\n  /**\n   * A map key containing a {BehaviorSubject} of {boolean}\n   */\n  [key: string]: BehaviorSubject;\n}\n\n/**\n * A map containing `BehaviorSubject` of `number` which is the timestamp of the last `EditorJS` change\n */\nexport interface ChangeMap {\n  /**\n   * A map key containing a {BehaviorSubject} of {number}\n   */\n  [key: string]: BehaviorSubject;\n}\n\n    \n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/Changed.html":{"url":"classes/Changed.html","title":"class - Changed","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  Changed\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            libs/ngx-editorjs-ngrx/src/lib/actions/ngx-editorjs.actions.ts\n        \n\n\n\n            \n                Implements\n            \n            \n                        Action\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                payload\n                            \n                            \n                                    Readonly\n                                type\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(payload: literal type)\n                    \n                \n                        \n                            \n                                Defined in libs/ngx-editorjs-ngrx/src/lib/actions/ngx-editorjs.actions.ts:33\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        payload\n                                                  \n                                                        \n                                                                    literal type\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            payload\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     literal type\n\n                        \n                    \n                        \n                            \n                                    Defined in libs/ngx-editorjs-ngrx/src/lib/actions/ngx-editorjs.actions.ts:34\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                            type\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : EditorJSActionTypes.Changed\n                        \n                    \n                        \n                            \n                                    Defined in libs/ngx-editorjs-ngrx/src/lib/actions/ngx-editorjs.actions.ts:33\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { Action } from '@ngrx/store';\nimport { OutputData } from '@editorjs/editorjs';\n\nexport enum EditorJSActionTypes {\n  SaveStart = '[ngx-editorjs] Start Save',\n  SaveEnd = '[ngx-editorjs] Start End',\n  NotReady = '[ngx-editorjs] Not Ready',\n  Ready = '[ngx-editorjs] Ready',\n  Changed = '[ngx-editorjs] Changed'\n}\n\nexport class SaveStart implements Action {\n  readonly type = EditorJSActionTypes.SaveStart;\n  constructor(public payload: { holder: string }) {}\n}\n\nexport class SaveEnd implements Action {\n  readonly type = EditorJSActionTypes.SaveEnd;\n  constructor(public payload: { holder: string; data: OutputData }) {}\n}\n\nexport class NotReady implements Action {\n  readonly type = EditorJSActionTypes.NotReady;\n  constructor(public payload: { holder: string }) {}\n}\n\nexport class Ready implements Action {\n  readonly type = EditorJSActionTypes.Ready;\n  constructor(public payload: { holder: string }) {}\n}\n\nexport class Changed implements Action {\n  readonly type = EditorJSActionTypes.Changed;\n  constructor(public payload: { holder: string; data: OutputData }) {}\n}\n\nexport type NgxEditorJSActions = SaveStart | SaveEnd | NotReady | Ready | Changed;\n\n    \n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/DemoData.html":{"url":"interfaces/DemoData.html","title":"interface - DemoData","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  DemoData\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            libs/ngx-tinynodes-core/src/lib/stores/app/application.model.ts\n        \n\n            \n                Description\n            \n            \n                Interface for a demo data object\n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        data\n                                \n                                \n                                        name\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        data\n                                    \n                                \n                                \n                                    \n                                        data:     T\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     T\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    The data for the demo as \n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        name\n                                    \n                                \n                                \n                                    \n                                        name:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    The name of the demo (e.g. ngx-editorjs-demo)\n\n                                \n                            \n                        \n                    \n            \n    \n\n\n    \n        import { Block } from '@tinynodes/ngx-editorjs';\nimport { MenuGroup } from '../../types/app';\n\n/**\n * An Enum of the keys in the application state\n */\nexport enum ApplicationStateKeys {\n  /**\n   * The hidden state key\n   */\n  Hidden = 'hidden',\n\n  /**\n   * The menus key\n   */\n  Menus = 'menus',\n\n  /**\n   * The demo data key\n   */\n  DemoData = 'demoData'\n}\n\n/**\n * Interface for a demo data object\n */\nexport interface DemoData {\n  /**\n   * The name of the demo (e.g. `ngx-editorjs-demo`)\n   */\n  name: string;\n  /**\n   * The data for the demo as ``\n   */\n  data: T;\n}\n\n/**\n * Interface for `ngx-editorjs-demo` data\n * TODO: This should be moved\n */\nexport interface NgxEditorJSDemo {\n  /**\n   * The initial blocks for the demo\n   */\n  blocks: Block[];\n}\n\n/**\n * The demo data for `ngx-editorjs-demo`\n */\nexport interface NgxEditorJSDemoData extends DemoData {}\n\n/**\n * The demos on tinynodes\n */\nexport interface TinynodeDemos {\n  /**\n   * The `ngx-editorjs-demo` data\n   */\n  'ngx-editorjs-demo': NgxEditorJSDemoData;\n}\n\n/**\n * A representation of the application state\n */\nexport interface ApplicationState {\n  /**\n   * If the side menu is hidden\n   */\n  hidden: boolean;\n\n  /**\n   * A set of menus loaded from application data\n   */\n  menus: MenuGroup[];\n\n  /**\n   * Data for demos\n   */\n  demoData: DemoData[];\n}\n\n    \n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/DemoData-1.html":{"url":"interfaces/DemoData-1.html","title":"interface - DemoData-1","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  DemoData\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/ngx-tinynodes/src/app/core/stores/app/application.model.ts\n        \n\n            \n                Description\n            \n            \n                Interface for a demo data object\n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        data\n                                \n                                \n                                        name\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        data\n                                    \n                                \n                                \n                                    \n                                        data:     T\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     T\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    The data for the demo as \n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        name\n                                    \n                                \n                                \n                                    \n                                        name:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    The name of the demo (e.g. ngx-editorjs-demo)\n\n                                \n                            \n                        \n                    \n            \n    \n\n\n    \n        import { Block } from '@tinynodes/ngx-editorjs';\nimport { MenuGroup } from '../../types/app';\n\n/**\n * An Enum of the keys in the application state\n */\nexport enum ApplicationStateKeys {\n  /**\n   * The hidden state key\n   */\n  Hidden = 'hidden',\n\n  /**\n   * The menus key\n   */\n  Menus = 'menus',\n\n  /**\n   * The demo data key\n   */\n  DemoData = 'demoData'\n}\n\n/**\n * Interface for a demo data object\n */\nexport interface DemoData {\n  /**\n   * The name of the demo (e.g. `ngx-editorjs-demo`)\n   */\n  name: string;\n  /**\n   * The data for the demo as ``\n   */\n  data: T;\n}\n\n/**\n * Interface for `ngx-editorjs-demo` data\n * TODO: This should be moved\n */\nexport interface NgxEditorJSDemo {\n  /**\n   * The initial blocks for the demo\n   */\n  blocks: Block[];\n}\n\n/**\n * The demo data for `ngx-editorjs-demo`\n */\nexport interface NgxEditorJSDemoData extends DemoData {}\n\n/**\n * The demos on tinynodes\n */\nexport interface TinynodeDemos {\n  /**\n   * The `ngx-editorjs-demo` data\n   */\n  'ngx-editorjs-demo': NgxEditorJSDemoData;\n}\n\n/**\n * A representation of the application state\n */\nexport interface ApplicationState {\n  /**\n   * If the side menu is hidden\n   */\n  hidden: boolean;\n\n  /**\n   * A set of menus loaded from application data\n   */\n  menus: MenuGroup[];\n\n  /**\n   * Data for demos\n   */\n  demoData: DemoData[];\n}\n\n    \n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/EditorJSConfig.html":{"url":"interfaces/EditorJSConfig.html","title":"interface - EditorJSConfig","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  EditorJSConfig\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            libs/ngx-editorjs/src/lib/types/config.ts\n        \n\n            \n                Description\n            \n            \n                Configuration for the EditorJS instance\n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                            Optional\n                                        autofocus\n                                \n                                \n                                            Optional\n                                        data\n                                \n                                \n                                            Optional\n                                        hideToolbar\n                                \n                                \n                                            Optional\n                                        holder\n                                \n                                \n                                            Optional\n                                        initialBlock\n                                \n                                \n                                            Optional\n                                        minHeight\n                                \n                                \n                                            Optional\n                                        placeholder\n                                \n                                \n                                            Optional\n                                        sanitizer\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        autofocus\n                                    \n                                \n                                \n                                    \n                                        autofocus:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    If the EditorJS is autofocused on creation (default: false)\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        data\n                                    \n                                \n                                \n                                    \n                                        data:     OutputData\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     OutputData\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    Any initial output data to render\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        hideToolbar\n                                    \n                                \n                                \n                                    \n                                        hideToolbar:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    If true, toolbar won't be shown\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        holder\n                                    \n                                \n                                \n                                    \n                                        holder:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    ID of the element to hold the config\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        initialBlock\n                                    \n                                \n                                \n                                    \n                                        initialBlock:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    The name of the initial block (default \"paragraph\")\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        minHeight\n                                    \n                                \n                                \n                                    \n                                        minHeight:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    Height of Editor's bottom area that allows to set focus on the last Block\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        placeholder\n                                    \n                                \n                                \n                                    \n                                        placeholder:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    First Block placeholder\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        sanitizer\n                                    \n                                \n                                \n                                    \n                                        sanitizer:     SanitizerConfig\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     SanitizerConfig\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    Define default sanitizer configuration\n\n                                \n                            \n                        \n                    \n            \n    \n\n\n    \n        import { InjectionToken } from '@angular/core';\nimport EditorJS, { OutputData, SanitizerConfig } from '@editorjs/editorjs';\n\n/**\n * Configuration for the EditorJS instance\n */\nexport interface EditorJSConfig {\n  /**\n   * If the EditorJS is autofocused on creation (default: false)\n   */\n  autofocus?: boolean;\n\n  /**\n   * Any initial output data to render\n   */\n  data?: OutputData;\n\n  /**\n   * If true, toolbar won't be shown\n   */\n  hideToolbar?: boolean;\n\n  /**\n   * ID of the element to hold the config\n   */\n  holder?: string;\n\n  /**\n   * The name of the initial block (default \"paragraph\")\n   */\n  initialBlock?: string;\n\n  /**\n   * Height of Editor's bottom area that allows to set focus on the last Block\n   */\n  minHeight?: number;\n\n  /**\n   * First Block placeholder\n   */\n  placeholder?: string;\n\n  /**\n   * Define default sanitizer configuration\n   */\n  sanitizer?: SanitizerConfig;\n}\n\n/**\n * The configuration option that can be passed to the `NgxEditorJSModule.forRoot` method\n */\nexport interface NgxEditorJSConfig {\n  /**\n   * Configuration options for `EditorJS`\n   */\n  editorjs?: EditorJSConfig;\n}\n\n/**\n * Injection token provied for `NgxEditorJSConfig`\n */\nexport const NGX_EDITORJS_CONFIG = new InjectionToken('NGX_EDITORJS_CONFIG');\n\n/**\n * Internal token for injecting the `NgxEditorJSConfig` into the config factory\n */\nexport const FOR_ROOT_OPTIONS_TOKEN = new InjectionToken('FOR_ROOT_OPTIONS_TOKEN');\n\n/**\n * Get the EditorJS instance injected into the app\n */\nexport const EDITIOR_JS_INSTANCE = new InjectionToken('EDITIOR_JS_INSTANCE');\n\n    \n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/EditorJSInstanceModule.html":{"url":"modules/EditorJSInstanceModule.html","title":"module - EditorJSInstanceModule","body":"\n                   \n\n\n\n\n    Modules\n    EditorJSInstanceModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_EditorJSInstanceModule\n\n\n\ncluster_EditorJSInstanceModule_providers\n\n\n\n\nEditorJSInstanceService\n\nEditorJSInstanceService\n\n\n\nEditorJSInstanceModule\n\nEditorJSInstanceModule\n\nEditorJSInstanceModule -->\n\nEditorJSInstanceService->EditorJSInstanceModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            libs/ngx-editorjs/src/lib/utils/editorjs-injector.module.ts\n        \n\n\n        \n            Description\n        \n        \n            This module provides EditorJS as an injectable item and a factory to create EditorJS instances\n\n        \n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            EditorJSInstanceService\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { NgModule } from '@angular/core';\nimport EditorJS from '@editorjs/editorjs';\nimport { EditorJSInstanceService, EDITORJS_MODULE_IMPORT } from './editorjs-injector';\n\n/**\n * This module provides EditorJS as an injectable item and a factory to create EditorJS instances\n */\n@NgModule({\n  providers: [\n    EditorJSInstanceService,\n    {\n      provide: EDITORJS_MODULE_IMPORT,\n      useValue: EditorJS\n    }\n  ]\n})\nexport class EditorJSInstanceModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/EditorJSInstanceService.html":{"url":"injectables/EditorJSInstanceService.html","title":"injectable - EditorJSInstanceService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  EditorJSInstanceService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            libs/ngx-editorjs/src/lib/utils/editorjs-injector.ts\n        \n\n            \n                Description\n            \n            \n                EditorJS factory service, call createInstance with an EditorConfig to\nreturn an instance after the DOM element is ready, this is stored in a subject to\nbe retrieved when ready.\n\n            \n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                clear\n                            \n                            \n                                    Public\n                                createInstance\n                            \n                            \n                                    Public\n                                destroy\n                            \n                            \n                                    Public\n                                destroyInstance\n                            \n                            \n                                    Public\n                                getBlocks\n                            \n                            \n                                    Public\n                                getChanged\n                            \n                            \n                                    Public\n                                getInstance\n                            \n                            \n                                    Public\n                                getReady\n                            \n                            \n                                    Public\n                                save\n                            \n                            \n                                    Public\n                                update\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(EditorJS: any, zone: NgZone, ref: ApplicationRef)\n                    \n                \n                        \n                            \n                                Defined in libs/ngx-editorjs/src/lib/utils/editorjs-injector.ts:55\n                            \n                        \n\n                \n                    \n                            Import the EditorJS class\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        EditorJS\n                                                  \n                                                        \n                                                                        any\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                The EditorJS class\n\n                                                        \n                                                \n                                                \n                                                        zone\n                                                  \n                                                        \n                                                                        NgZone\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                Angular zone to run\n\n                                                        \n                                                \n                                                \n                                                        ref\n                                                  \n                                                        \n                                                                        ApplicationRef\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                The application reference to trigger a tick\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            clear\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    clear(holder: string)\n                \n            \n\n\n            \n                \n                    Defined in libs/ngx-editorjs/src/lib/utils/editorjs-injector.ts:108\n                \n            \n\n\n            \n                \n                    Calls a clear method on an editor\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    holder\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        The holder ID of the EditorJS instance\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            createInstance\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    createInstance(config: EditorConfig, autosave)\n                \n            \n\n\n            \n                \n                    Defined in libs/ngx-editorjs/src/lib/utils/editorjs-injector.ts:74\n                \n            \n\n\n            \n                \n                    Creates a new EditorJS instance outside of the Angular zone and\nthen adds it to the editor instances\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Default value\n                                    Description\n                                \n                            \n                            \n                                \n                                    config\n                                    \n                                            EditorConfig\n                                    \n\n                                    \n                                        No\n                                    \n\n                                    \n                                    \n\n                                    \n                                        The {EditorConfig} configuration to create\n\n                                    \n                                \n                                \n                                    autosave\n                                    \n                                    \n\n                                    \n                                        No\n                                    \n\n                                    \n                                        false\n                                    \n\n                                    \n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            destroy\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    destroy()\n                \n            \n\n\n            \n                \n                    Defined in libs/ngx-editorjs/src/lib/utils/editorjs-injector.ts:265\n                \n            \n\n\n            \n                \n                    Call this to destroy all subscriptions within the service\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            destroyInstance\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    destroyInstance(holder: string)\n                \n            \n\n\n            \n                \n                    Defined in libs/ngx-editorjs/src/lib/utils/editorjs-injector.ts:172\n                \n            \n\n\n            \n                \n                    Destroys an instance of an editor and cleans up all Observable values\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    holder\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        The holder ID of the EditorJS instance\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            getBlocks\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    getBlocks(holder: string)\n                \n            \n\n\n            \n                \n                    Defined in libs/ngx-editorjs/src/lib/utils/editorjs-injector.ts:161\n                \n            \n\n\n            \n                \n                    Returns an Observable value of an EditorJS instance\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    holder\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        The holder ID of the EditorJS instance\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Observable\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            getChanged\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    getChanged(holder: string)\n                \n            \n\n\n            \n                \n                    Defined in libs/ngx-editorjs/src/lib/utils/editorjs-injector.ts:150\n                \n            \n\n\n            \n                \n                    Returns an Observable value of an EditorJS instance\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    holder\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        The holder ID of the EditorJS instance\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Observable\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            getInstance\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    getInstance(holder: string)\n                \n            \n\n\n            \n                \n                    Defined in libs/ngx-editorjs/src/lib/utils/editorjs-injector.ts:128\n                \n            \n\n\n            \n                \n                    Returns an Observable value of an EditorJS instance\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    holder\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        The holder ID of the EditorJS instance\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Observable\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            getReady\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    getReady(holder: string)\n                \n            \n\n\n            \n                \n                    Defined in libs/ngx-editorjs/src/lib/utils/editorjs-injector.ts:139\n                \n            \n\n\n            \n                \n                    Returns an Observable value of an EditorJS instance\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    holder\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        The holder ID of the EditorJS instance\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Observable\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            save\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    save(holder: string)\n                \n            \n\n\n            \n                \n                    Defined in libs/ngx-editorjs/src/lib/utils/editorjs-injector.ts:100\n                \n            \n\n\n            \n                \n                    Calls the save method on an editor\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    holder\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        The holder ID of the EditorJS instance\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            update\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    update(holder: string, blocks: Block[])\n                \n            \n\n\n            \n                \n                    Defined in libs/ngx-editorjs/src/lib/utils/editorjs-injector.ts:117\n                \n            \n\n\n            \n                \n                    Updates the editor with new blocks\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    holder\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        The holder ID of the EditorJS instance\n\n                                    \n                                \n                                \n                                    blocks\n                                    \n                                                Block[]\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        The blocks to update the editor with\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { ApplicationRef, Inject, Injectable, InjectionToken, NgZone } from '@angular/core';\nimport EditorJS, { EditorConfig } from '@editorjs/editorjs';\nimport { BehaviorSubject, combineLatest, Observable, Subject } from 'rxjs';\nimport { filter, takeUntil } from 'rxjs/operators';\nimport { Block } from '../types/blocks';\nimport { BlocksMap, ChangeMap, EditorMap, EventMap, EventType, ReadyMap } from '../types/maps';\n\n/**\n * Default values for each internal map\n */\nconst MAP_DEFAULTS = [['blocksMap', []], ['changeMap', 0], ['readyMap', false]];\n\n/**\n * Injection token for the EditorJS class\n */\nexport const EDITORJS_MODULE_IMPORT = new InjectionToken('EDITORJS_MODULE_IMPORT');\n\n/**\n * EditorJS factory service, call `createInstance` with an `EditorConfig` to\n * return an instance after the DOM element is ready, this is stored in a subject to\n * be retrieved when ready.\n */\n@Injectable({\n  providedIn: 'root'\n})\nexport class EditorJSInstanceService {\n  /**\n   * Internal destroy method for the service\n   */\n  private onDestroy$ = new Subject();\n\n  /**\n   * Internal map of all EditorJS instances\n   */\n  private editorMap: EditorMap = {};\n\n  /**\n   * Internal map of all Block `BehaviorSubject` instances\n   */\n  private blocksMap: BlocksMap = {};\n\n  /**\n   * Internal map of all EditorJS ready states\n   */\n  private readyMap: ReadyMap = {};\n\n  /**\n   * Internal map of all EditorJS change states\n   */\n  private changeMap: ChangeMap = {};\n\n  /**\n   * The Event map is used to trigger events\n   */\n  private eventMap: EventMap = {};\n\n  /**\n   * Import the `EditorJS` class\n   * @param EditorJS The `EditorJS` class\n   * @param zone Angular zone to run\n   * @param ref The application reference to trigger a tick\n   */\n  constructor(\n    @Inject(EDITORJS_MODULE_IMPORT) private EditorJS: any,\n    private readonly zone: NgZone,\n    private readonly ref: ApplicationRef\n  ) {}\n\n  /**\n   * Creates a new `EditorJS` instance outside of the Angular zone and\n   * then adds it to the editor instances\n   * @param config The {EditorConfig} configuration to create\n   */\n  public createInstance(config: EditorConfig, autosave = false): void {\n    const holder = config.holder as string;\n    const editorConfig = {\n      ...config,\n      onChange: () => {\n        this.changeMap[holder].next(Date.now());\n      }\n    };\n    this.zone.runOutsideAngular(() => {\n      const editor = new (this.EditorJS as any)(editorConfig);\n      const holder = config.holder as string;\n      editor.isReady.then(() => {\n        this.zone.run(() => {\n          this.setupSubjects(holder, editor);\n          this.setupEvents(holder);\n          this.readyMap[holder].next(true);\n          this.ref.tick();\n        });\n      });\n    });\n  }\n\n  /**\n   * Calls the save method on an editor\n   * @param holder The holder ID of the `EditorJS` instance\n   */\n  public save(holder: string) {\n    this.eventMap[holder].next({ type: 'save' });\n  }\n\n  /**\n   * Calls a clear method on an editor\n   * @param holder The holder ID of the `EditorJS` instance\n   */\n  public clear(holder: string) {\n    this.eventMap[holder].next({ type: 'clear' });\n  }\n\n  /**\n   * Updates the editor with new blocks\n   * @param holder The holder ID of the `EditorJS` instance\n   * @param blocks The blocks to update the editor with\n   */\n  public update(holder: string, blocks: Block[]) {\n    if (!this.eventMap[holder]) {\n      this.eventMap[holder] = new BehaviorSubject({ type: '' });\n    }\n    this.eventMap[holder].next({ type: 'update', payload: blocks });\n  }\n\n  /**\n   * Returns an Observable value of an `EditorJS` instance\n   * @param holder The holder ID of the `EditorJS` instance\n   */\n  public getInstance(holder: string): Observable {\n    if (!this.editorMap[holder]) {\n      this.editorMap[holder] = new BehaviorSubject(undefined);\n    }\n    return this.editorMap[holder].asObservable();\n  }\n\n  /**\n   * Returns an Observable value of an `EditorJS` instance\n   * @param holder The holder ID of the `EditorJS` instance\n   */\n  public getReady(holder: string): Observable {\n    if (!this.readyMap[holder]) {\n      this.readyMap[holder] = new BehaviorSubject(false);\n    }\n    return this.readyMap[holder].asObservable();\n  }\n\n  /**\n   * Returns an Observable value of an `EditorJS` instance\n   * @param holder The holder ID of the `EditorJS` instance\n   */\n  public getChanged(holder: string): Observable {\n    if (!this.changeMap[holder]) {\n      this.changeMap[holder] = new BehaviorSubject(0);\n    }\n    return this.changeMap[holder].asObservable();\n  }\n\n  /**\n   * Returns an Observable value of an `EditorJS` instance\n   * @param holder The holder ID of the `EditorJS` instance\n   */\n  public getBlocks(holder: string): Observable {\n    if (!this.blocksMap[holder]) {\n      this.blocksMap[holder] = new BehaviorSubject([]);\n    }\n    return this.blocksMap[holder].asObservable();\n  }\n\n  /**\n   * Destroys an instance of an editor and cleans up all Observable values\n   * @param holder The holder ID of the `EditorJS` instance\n   */\n  public destroyInstance(holder: string): void {\n    const instanceDestroyed = new Subject();\n    this.editorMap[holder]\n      .pipe(\n        filter(editor => typeof editor !== 'undefined'),\n        takeUntil(instanceDestroyed)\n      )\n      .subscribe(editor => {\n        this.zone.runOutsideAngular(() => {\n          editor.destroy();\n          this.zone.run(() => {\n            this.cleanupSubjects(holder);\n            instanceDestroyed.next(true);\n            instanceDestroyed.complete();\n            this.ref.tick();\n          });\n        });\n      });\n  }\n\n  /**\n   * Sets up the Subjects provided by this service\n   * @param holder The holder to set up the subjects for\n   * @param editor The Editor instance created outside of Angular\n   */\n  private setupSubjects(holder: string, editor: EditorJS): void {\n    if (this.editorMap[holder]) {\n      this.editorMap[holder].next(editor);\n    } else {\n      this.editorMap[holder] = new BehaviorSubject(editor);\n    }\n    MAP_DEFAULTS.forEach(([mapKay, value]: [string, typeof value]) => {\n      if (!this[mapKay][holder]) {\n        this[mapKay][holder] = new BehaviorSubject(value);\n      }\n      this[mapKay][holder].next(value);\n    });\n    if (!this.eventMap[holder]) {\n      this.eventMap[holder] = new BehaviorSubject({ type: '' });\n    }\n  }\n\n  /**\n   * Sets up a listener for the event map and provides the editor and blocks to handle\n   * updates\n   * @param holder The holder ID of the `EditorJS` instance\n   */\n  private setupEvents(holder: string) {\n    combineLatest([this.eventMap[holder], this.editorMap[holder]])\n      .pipe(\n        filter(([event, editor]) => event.type && typeof editor !== 'undefined'),\n        takeUntil(this.onDestroy$)\n      )\n      .subscribe(([event, editor]) => {\n        if (event.type === 'save') {\n          this.saveHandler(holder, editor);\n        }\n        if (event.type === 'clear') {\n          this.clearHandler(holder, editor);\n        }\n        if (event.type === 'update') {\n          this.updateHandler(holder, editor, event.payload.blocks);\n        }\n        this.eventMap[holder].next({ type: '' });\n      });\n    this.ref.tick();\n  }\n\n  /**\n   * Handles cleaning up all the subjects once an `EditorJS` instance has been\n   * destroyed\n   * @param holder The holder ID for the `EditorJS` instance\n   */\n  private cleanupSubjects(holder: string) {\n    MAP_DEFAULTS.forEach(([mapKay, value]: [string, any]) => {\n      if (this[mapKay][holder]) {\n        this[mapKay][holder].next(value);\n        this[mapKay][holder].complete();\n        this[mapKay][holder] = null;\n        delete this[mapKay][holder];\n      }\n    });\n    this.eventMap[holder].next({ type: '' });\n    this.eventMap[holder].complete();\n    this.eventMap[holder] = null;\n    delete this.eventMap[holder];\n    this.editorMap[holder] = null;\n    delete this.editorMap[holder];\n  }\n\n  /**\n   * Call this to destroy all subscriptions within the service\n   */\n  public destroy() {\n    Object.keys(this.editorMap).forEach(key => {\n      this.destroyInstance(key);\n    });\n    this.onDestroy$.next(true);\n    this.onDestroy$.complete();\n  }\n\n  /**\n   * This internal handler calls the `EditorJS` instance save outside of the\n   * Angular zone, this means it will not trigger change detection\n   * @param holder The holder ID for the `EditorJS` instance\n   * @param editor The `EditorJS` instance\n   * @param blocks The {Block} items to render\n   */\n  private saveHandler(holder: string, editor: EditorJS) {\n    this.zone.runOutsideAngular(() => {\n      editor.saver.save().then(data => {\n        this.zone.run(() => {\n          this.blocksMap[holder].next(data.blocks);\n        });\n      });\n    });\n  }\n\n  /**\n   * This internal handler calls the `EditorJS` instance clear outside of the\n   * Angular zone, this means it will not trigger change detection\n   * @param holder The holder ID for the `EditorJS` instance\n   * @param editor The `EditorJS` instance\n   * @param blocks The {Block} items to render\n   */\n  private clearHandler(holder: string, editor: EditorJS) {\n    this.zone.runOutsideAngular(() => {\n      editor.blocks.clear();\n      this.zone.run(() => {\n        this.blocksMap[holder].next([]);\n        this.changeMap[holder].next(Date.now());\n      });\n    });\n  }\n\n  /**\n   * This internal handler calls the `EditorJS` instance render outside of the\n   * Angular zone, this means it will not trigger change detection\n   * @param holder The holder ID for the `EditorJS` instance\n   * @param editor The `EditorJS` instance\n   * @param blocks The {Block} items to render\n   */\n  private updateHandler(holder: string, editor: EditorJS, blocks: Block[]) {\n    if (!blocks) {\n      return;\n    }\n    this.zone.runOutsideAngular(() => {\n      editor.blocks.render({\n        time: Date.now(),\n        version: EditorJS.version,\n        blocks\n      });\n      this.zone.run(() => {\n        this.blocksMap[holder].next(blocks);\n        this.changeMap[holder].next(Date.now());\n      });\n    });\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/EditorMap.html":{"url":"interfaces/EditorMap.html","title":"interface - EditorMap","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  EditorMap\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            libs/ngx-editorjs/src/lib/types/maps.ts\n        \n\n            \n                Description\n            \n            \n                A map containing instances of EditorJS\n\n            \n\n\n\n\n            \n    Indexable\n        \n            \n                \n                    \n                        [key: string]:    BehaviorSubject\n\n                    \n                \n                        \n                            \n                                Defined in libs/ngx-editorjs/src/lib/types/maps.ts:26\n                            \n                        \n                \n                    \n                        A map key containing a {BehaviorSubject} of {EditorJS}\n\n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import EditorJS from '@editorjs/editorjs';\nimport { BehaviorSubject } from 'rxjs';\nimport { Block } from './blocks';\n\n/**\n * An event type for calling `EditorJS`\n */\nexport interface EventType {\n  type: string;\n  payload?: T;\n}\n\n/**\n * A map containing an event subject for an `EditorJS` instance\n */\nexport interface EventMap {\n  /**\n   * A map key containing a {BehaviorSubject} of {EventType}\n   */\n  [key: string]: BehaviorSubject;\n}\n\n/**\n * A map containing instances of `EditorJS`\n */\nexport interface EditorMap {\n  /**\n   * A map key containing a {BehaviorSubject} of {EditorJS}\n   */\n  [key: string]: BehaviorSubject;\n}\n\n/**\n * A map containing `BehaviorSubject` of `Block` elements from `EditorJS`\n */\nexport interface BlocksMap {\n  /**\n   * A map key containing a {BehaviorSubject} of {Block[]}\n   */\n  [key: string]: BehaviorSubject;\n}\n\n/**\n * A map containing `BehaviorSubject` of `boolean` values of the ready state of `EditorJS`\n */\nexport interface ReadyMap {\n  /**\n   * A map key containing a {BehaviorSubject} of {boolean}\n   */\n  [key: string]: BehaviorSubject;\n}\n\n/**\n * A map containing `BehaviorSubject` of `number` which is the timestamp of the last `EditorJS` change\n */\nexport interface ChangeMap {\n  /**\n   * A map key containing a {BehaviorSubject} of {number}\n   */\n  [key: string]: BehaviorSubject;\n}\n\n    \n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/EventMap.html":{"url":"interfaces/EventMap.html","title":"interface - EventMap","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  EventMap\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            libs/ngx-editorjs/src/lib/types/maps.ts\n        \n\n            \n                Description\n            \n            \n                A map containing an event subject for an EditorJS instance\n\n            \n\n\n\n\n            \n    Indexable\n        \n            \n                \n                    \n                        [key: string]:        BehaviorSubject\n\n                    \n                \n                        \n                            \n                                Defined in libs/ngx-editorjs/src/lib/types/maps.ts:16\n                            \n                        \n                \n                    \n                        A map key containing a {BehaviorSubject} of {EventType}\n\n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import EditorJS from '@editorjs/editorjs';\nimport { BehaviorSubject } from 'rxjs';\nimport { Block } from './blocks';\n\n/**\n * An event type for calling `EditorJS`\n */\nexport interface EventType {\n  type: string;\n  payload?: T;\n}\n\n/**\n * A map containing an event subject for an `EditorJS` instance\n */\nexport interface EventMap {\n  /**\n   * A map key containing a {BehaviorSubject} of {EventType}\n   */\n  [key: string]: BehaviorSubject;\n}\n\n/**\n * A map containing instances of `EditorJS`\n */\nexport interface EditorMap {\n  /**\n   * A map key containing a {BehaviorSubject} of {EditorJS}\n   */\n  [key: string]: BehaviorSubject;\n}\n\n/**\n * A map containing `BehaviorSubject` of `Block` elements from `EditorJS`\n */\nexport interface BlocksMap {\n  /**\n   * A map key containing a {BehaviorSubject} of {Block[]}\n   */\n  [key: string]: BehaviorSubject;\n}\n\n/**\n * A map containing `BehaviorSubject` of `boolean` values of the ready state of `EditorJS`\n */\nexport interface ReadyMap {\n  /**\n   * A map key containing a {BehaviorSubject} of {boolean}\n   */\n  [key: string]: BehaviorSubject;\n}\n\n/**\n * A map containing `BehaviorSubject` of `number` which is the timestamp of the last `EditorJS` change\n */\nexport interface ChangeMap {\n  /**\n   * A map key containing a {BehaviorSubject} of {number}\n   */\n  [key: string]: BehaviorSubject;\n}\n\n    \n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/EventType.html":{"url":"interfaces/EventType.html","title":"interface - EventType","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  EventType\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            libs/ngx-editorjs/src/lib/types/maps.ts\n        \n\n            \n                Description\n            \n            \n                An event type for calling EditorJS\n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                            Optional\n                                        payload\n                                \n                                \n                                        type\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        payload\n                                    \n                                \n                                \n                                    \n                                        payload:     T\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     T\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        type\n                                    \n                                \n                                \n                                    \n                                        type:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import EditorJS from '@editorjs/editorjs';\nimport { BehaviorSubject } from 'rxjs';\nimport { Block } from './blocks';\n\n/**\n * An event type for calling `EditorJS`\n */\nexport interface EventType {\n  type: string;\n  payload?: T;\n}\n\n/**\n * A map containing an event subject for an `EditorJS` instance\n */\nexport interface EventMap {\n  /**\n   * A map key containing a {BehaviorSubject} of {EventType}\n   */\n  [key: string]: BehaviorSubject;\n}\n\n/**\n * A map containing instances of `EditorJS`\n */\nexport interface EditorMap {\n  /**\n   * A map key containing a {BehaviorSubject} of {EditorJS}\n   */\n  [key: string]: BehaviorSubject;\n}\n\n/**\n * A map containing `BehaviorSubject` of `Block` elements from `EditorJS`\n */\nexport interface BlocksMap {\n  /**\n   * A map key containing a {BehaviorSubject} of {Block[]}\n   */\n  [key: string]: BehaviorSubject;\n}\n\n/**\n * A map containing `BehaviorSubject` of `boolean` values of the ready state of `EditorJS`\n */\nexport interface ReadyMap {\n  /**\n   * A map key containing a {BehaviorSubject} of {boolean}\n   */\n  [key: string]: BehaviorSubject;\n}\n\n/**\n * A map containing `BehaviorSubject` of `number` which is the timestamp of the last `EditorJS` change\n */\nexport interface ChangeMap {\n  /**\n   * A map key containing a {BehaviorSubject} of {number}\n   */\n  [key: string]: BehaviorSubject;\n}\n\n    \n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/Header.html":{"url":"interfaces/Header.html","title":"interface - Header","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  Header\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            libs/ngx-editorjs/src/lib/types/blocks.ts\n        \n\n            \n                Description\n            \n            \n                Default data type for a header block\n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        level\n                                \n                                \n                                        text\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        level\n                                    \n                                \n                                \n                                    \n                                        level:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    The header level from 1-6\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        text\n                                    \n                                \n                                \n                                    \n                                        text:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    The header text\n\n                                \n                            \n                        \n                    \n            \n    \n\n\n    \n        export interface Block {\n  /**\n   * The EditorJS block type\n   */\n  type: string;\n\n  /**\n   * The data interface for the block type\n   */\n  data: T;\n\n  /**\n   * Additional properties on the type\n   */\n  [key: string]: any;\n}\n\n/**\n * Available list styles, supports `ordered` and `unordered`.\n * A custom string can also be added\n */\nexport type ListStyle = 'ordered' | 'unordered' | string;\n\n/**\n * Default data type for a list block\n */\nexport interface List {\n  /**\n   * The list style\n   */\n  style: ListStyle;\n  /**\n   * List items of type T\n   */\n  items: T[];\n}\n\n/**\n * The default list block is provided by the EditorJS list plugin\n */\nexport interface ListBlock extends Block> {\n  /**\n   * The EditorJS block type\n   */\n  type: 'list';\n}\n\n/**\n * Default data type for a paragraph block\n */\ninterface Paragraph {\n  /**\n   * The paragraph text\n   */\n  text: string;\n}\n\n/**\n * Interface for a paragraph block\n */\nexport interface ParagraphBlock extends Block {\n  /**\n   * The EditorJS block type\n   */\n  type: 'paragraph';\n}\n\n/**\n * Default data type for a header block\n */\ninterface Header {\n  /**\n   * The header text\n   */\n  text: string;\n  /**\n   * The header level from 1-6\n   */\n  level: number;\n}\n\n/**\n * Interface for a header block\n */\nexport interface HeaderBlock extends Block {\n  /**\n   * The EditorJS block type\n   */\n  type: 'header';\n}\n\n/**\n * Default data type for a header block\n */\nexport interface Image {\n  /**\n   * The image URL\n   */\n  url: string;\n  /**\n   * Optional image caption\n   */\n  caption?: string;\n  /**\n   * Optional border property\n   */\n  withBorder?: boolean;\n\n  /**\n   * Optional background property\n   */\n  withBackground?: boolean;\n\n  /**\n   * Optional stretch property\n   */\n  stretched?: boolean;\n}\n\n/**\n * Interface for a image block\n */\nexport interface ImageBlock extends Block {\n  /**\n   * The EditorJS block type\n   */\n  type: 'image';\n}\n\n/**\n * Type of all the basic block type\n */\nexport type BlockTypes = ParagraphBlock | HeaderBlock | ImageBlock | ListBlock | Block;\n\n    \n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/HeaderBlock.html":{"url":"interfaces/HeaderBlock.html","title":"interface - HeaderBlock","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  HeaderBlock\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            libs/ngx-editorjs/src/lib/types/blocks.ts\n        \n\n            \n                Description\n            \n            \n                Interface for a header block\n\n            \n\n            \n                Extends\n            \n            \n                        Block\n            \n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        type\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        type\n                                    \n                                \n                                \n                                    \n                                        type:     \n\n                                    \n                                \n\n\n\n\n\n\n\n                            \n                                \n                                    The EditorJS block type\n\n                                \n                            \n                        \n                    \n            \n    \n\n\n    \n        export interface Block {\n  /**\n   * The EditorJS block type\n   */\n  type: string;\n\n  /**\n   * The data interface for the block type\n   */\n  data: T;\n\n  /**\n   * Additional properties on the type\n   */\n  [key: string]: any;\n}\n\n/**\n * Available list styles, supports `ordered` and `unordered`.\n * A custom string can also be added\n */\nexport type ListStyle = 'ordered' | 'unordered' | string;\n\n/**\n * Default data type for a list block\n */\nexport interface List {\n  /**\n   * The list style\n   */\n  style: ListStyle;\n  /**\n   * List items of type T\n   */\n  items: T[];\n}\n\n/**\n * The default list block is provided by the EditorJS list plugin\n */\nexport interface ListBlock extends Block> {\n  /**\n   * The EditorJS block type\n   */\n  type: 'list';\n}\n\n/**\n * Default data type for a paragraph block\n */\ninterface Paragraph {\n  /**\n   * The paragraph text\n   */\n  text: string;\n}\n\n/**\n * Interface for a paragraph block\n */\nexport interface ParagraphBlock extends Block {\n  /**\n   * The EditorJS block type\n   */\n  type: 'paragraph';\n}\n\n/**\n * Default data type for a header block\n */\ninterface Header {\n  /**\n   * The header text\n   */\n  text: string;\n  /**\n   * The header level from 1-6\n   */\n  level: number;\n}\n\n/**\n * Interface for a header block\n */\nexport interface HeaderBlock extends Block {\n  /**\n   * The EditorJS block type\n   */\n  type: 'header';\n}\n\n/**\n * Default data type for a header block\n */\nexport interface Image {\n  /**\n   * The image URL\n   */\n  url: string;\n  /**\n   * Optional image caption\n   */\n  caption?: string;\n  /**\n   * Optional border property\n   */\n  withBorder?: boolean;\n\n  /**\n   * Optional background property\n   */\n  withBackground?: boolean;\n\n  /**\n   * Optional stretch property\n   */\n  stretched?: boolean;\n}\n\n/**\n * Interface for a image block\n */\nexport interface ImageBlock extends Block {\n  /**\n   * The EditorJS block type\n   */\n  type: 'image';\n}\n\n/**\n * Type of all the basic block type\n */\nexport type BlockTypes = ParagraphBlock | HeaderBlock | ImageBlock | ListBlock | Block;\n\n    \n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/HomePageComponent.html":{"url":"components/HomePageComponent.html","title":"component - HomePageComponent","body":"\n                   \n\n\n\n\n\n  Components\n  HomePageComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    apps/ngx-tinynodes/src/app/pages/home/home-page.component.ts\n\n\n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                tinynodes-home-page\n            \n\n            \n                styleUrls\n                home-page.component.scss\n            \n\n\n\n            \n                templateUrl\n                home-page.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n\n\n\n\n\n\n                    \n                        \n                            Accessors\n                        \n                    \n                    \n                        \n                            \n                                \n                                    menu\n                                \n                            \n                        \n                    \n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(app: AppService)\n                    \n                \n                        \n                            \n                                Defined in apps/ngx-tinynodes/src/app/pages/home/home-page.component.ts:9\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        app\n                                                  \n                                                        \n                                                                        AppService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n\n\n    \n    \n        Accessors\n    \n        \n            \n                \n                    \n                        \n                        menu\n                    \n                \n\n                \n                    \n                        getmenu()\n                    \n                \n                            \n                                \n                                    Defined in apps/ngx-tinynodes/src/app/pages/home/home-page.component.ts:12\n                                \n                            \n\n            \n        \n\n\n\n\n    \n        import { Component } from '@angular/core';\nimport { AppService } from '@tinynodes/ngx-tinynodes-core/src';\n\n@Component({\n  selector: 'tinynodes-home-page',\n  templateUrl: 'home-page.component.html',\n  styleUrls: ['home-page.component.scss']\n})\nexport class HomePageComponent {\n  constructor(private readonly app: AppService) {}\n\n  public get menu() {\n    return this.app.getMenu('main-links');\n  }\n}\n\n    \n\n    \n        \n  \n    \n      Welcome to the Tinynodes Demo Site\n      A collection of Angular and TypeScript libraries for the web\n    \n    \n      This site contains demos of components released under @tinynodes on npm, you can find a list of them on the menu to the left.\n      You can also visit the sites below for additional documentation and code:\n      \n        \n          \n            {{ menu.label }}\n          \n        \n      \n    \n  \n\n\n    \n\n    \n                \n                    home-page.component.scss\n                \n                \n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '            Welcome to the Tinynodes Demo Site      A collection of Angular and TypeScript libraries for the web              This site contains demos of components released under @tinynodes on npm, you can find a list of them on the menu to the left.      You can also visit the sites below for additional documentation and code:                                    {{ menu.label }}                              '\n    var COMPONENTS = [{'name': 'AppContainerComponent', 'selector': 'tinynodes-root'},{'name': 'HomePageComponent', 'selector': 'tinynodes-home-page'},{'name': 'NavBarComponent', 'selector': 'tinynodes-nav-bar'},{'name': 'NgxEditorJSComponent', 'selector': 'ngx-editorjs'},{'name': 'PageContainerComponent', 'selector': 'ngx-page-container'},{'name': 'SidebarComponent', 'selector': 'tinynodes-sidebar'}];\n    var DIRECTIVES = [{'name': 'NgxEditorJSDirective', 'selector': '[ngxEditorJS]'}];\n    var ACTUAL_COMPONENT = {'name': 'HomePageComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/Image.html":{"url":"interfaces/Image.html","title":"interface - Image","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  Image\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            libs/ngx-editorjs/src/lib/types/blocks.ts\n        \n\n            \n                Description\n            \n            \n                Default data type for a header block\n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                            Optional\n                                        caption\n                                \n                                \n                                            Optional\n                                        stretched\n                                \n                                \n                                        url\n                                \n                                \n                                            Optional\n                                        withBackground\n                                \n                                \n                                            Optional\n                                        withBorder\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        caption\n                                    \n                                \n                                \n                                    \n                                        caption:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    Optional image caption\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        stretched\n                                    \n                                \n                                \n                                    \n                                        stretched:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    Optional stretch property\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        url\n                                    \n                                \n                                \n                                    \n                                        url:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    The image URL\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        withBackground\n                                    \n                                \n                                \n                                    \n                                        withBackground:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    Optional background property\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        withBorder\n                                    \n                                \n                                \n                                    \n                                        withBorder:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    Optional border property\n\n                                \n                            \n                        \n                    \n            \n    \n\n\n    \n        export interface Block {\n  /**\n   * The EditorJS block type\n   */\n  type: string;\n\n  /**\n   * The data interface for the block type\n   */\n  data: T;\n\n  /**\n   * Additional properties on the type\n   */\n  [key: string]: any;\n}\n\n/**\n * Available list styles, supports `ordered` and `unordered`.\n * A custom string can also be added\n */\nexport type ListStyle = 'ordered' | 'unordered' | string;\n\n/**\n * Default data type for a list block\n */\nexport interface List {\n  /**\n   * The list style\n   */\n  style: ListStyle;\n  /**\n   * List items of type T\n   */\n  items: T[];\n}\n\n/**\n * The default list block is provided by the EditorJS list plugin\n */\nexport interface ListBlock extends Block> {\n  /**\n   * The EditorJS block type\n   */\n  type: 'list';\n}\n\n/**\n * Default data type for a paragraph block\n */\ninterface Paragraph {\n  /**\n   * The paragraph text\n   */\n  text: string;\n}\n\n/**\n * Interface for a paragraph block\n */\nexport interface ParagraphBlock extends Block {\n  /**\n   * The EditorJS block type\n   */\n  type: 'paragraph';\n}\n\n/**\n * Default data type for a header block\n */\ninterface Header {\n  /**\n   * The header text\n   */\n  text: string;\n  /**\n   * The header level from 1-6\n   */\n  level: number;\n}\n\n/**\n * Interface for a header block\n */\nexport interface HeaderBlock extends Block {\n  /**\n   * The EditorJS block type\n   */\n  type: 'header';\n}\n\n/**\n * Default data type for a header block\n */\nexport interface Image {\n  /**\n   * The image URL\n   */\n  url: string;\n  /**\n   * Optional image caption\n   */\n  caption?: string;\n  /**\n   * Optional border property\n   */\n  withBorder?: boolean;\n\n  /**\n   * Optional background property\n   */\n  withBackground?: boolean;\n\n  /**\n   * Optional stretch property\n   */\n  stretched?: boolean;\n}\n\n/**\n * Interface for a image block\n */\nexport interface ImageBlock extends Block {\n  /**\n   * The EditorJS block type\n   */\n  type: 'image';\n}\n\n/**\n * Type of all the basic block type\n */\nexport type BlockTypes = ParagraphBlock | HeaderBlock | ImageBlock | ListBlock | Block;\n\n    \n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/ImageBlock.html":{"url":"interfaces/ImageBlock.html","title":"interface - ImageBlock","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  ImageBlock\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            libs/ngx-editorjs/src/lib/types/blocks.ts\n        \n\n            \n                Description\n            \n            \n                Interface for a image block\n\n            \n\n            \n                Extends\n            \n            \n                        Block\n            \n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        type\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        type\n                                    \n                                \n                                \n                                    \n                                        type:     \n\n                                    \n                                \n\n\n\n\n\n\n\n                            \n                                \n                                    The EditorJS block type\n\n                                \n                            \n                        \n                    \n            \n    \n\n\n    \n        export interface Block {\n  /**\n   * The EditorJS block type\n   */\n  type: string;\n\n  /**\n   * The data interface for the block type\n   */\n  data: T;\n\n  /**\n   * Additional properties on the type\n   */\n  [key: string]: any;\n}\n\n/**\n * Available list styles, supports `ordered` and `unordered`.\n * A custom string can also be added\n */\nexport type ListStyle = 'ordered' | 'unordered' | string;\n\n/**\n * Default data type for a list block\n */\nexport interface List {\n  /**\n   * The list style\n   */\n  style: ListStyle;\n  /**\n   * List items of type T\n   */\n  items: T[];\n}\n\n/**\n * The default list block is provided by the EditorJS list plugin\n */\nexport interface ListBlock extends Block> {\n  /**\n   * The EditorJS block type\n   */\n  type: 'list';\n}\n\n/**\n * Default data type for a paragraph block\n */\ninterface Paragraph {\n  /**\n   * The paragraph text\n   */\n  text: string;\n}\n\n/**\n * Interface for a paragraph block\n */\nexport interface ParagraphBlock extends Block {\n  /**\n   * The EditorJS block type\n   */\n  type: 'paragraph';\n}\n\n/**\n * Default data type for a header block\n */\ninterface Header {\n  /**\n   * The header text\n   */\n  text: string;\n  /**\n   * The header level from 1-6\n   */\n  level: number;\n}\n\n/**\n * Interface for a header block\n */\nexport interface HeaderBlock extends Block {\n  /**\n   * The EditorJS block type\n   */\n  type: 'header';\n}\n\n/**\n * Default data type for a header block\n */\nexport interface Image {\n  /**\n   * The image URL\n   */\n  url: string;\n  /**\n   * Optional image caption\n   */\n  caption?: string;\n  /**\n   * Optional border property\n   */\n  withBorder?: boolean;\n\n  /**\n   * Optional background property\n   */\n  withBackground?: boolean;\n\n  /**\n   * Optional stretch property\n   */\n  stretched?: boolean;\n}\n\n/**\n * Interface for a image block\n */\nexport interface ImageBlock extends Block {\n  /**\n   * The EditorJS block type\n   */\n  type: 'image';\n}\n\n/**\n * Type of all the basic block type\n */\nexport type BlockTypes = ParagraphBlock | HeaderBlock | ImageBlock | ListBlock | Block;\n\n    \n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/List.html":{"url":"interfaces/List.html","title":"interface - List","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  List\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            libs/ngx-editorjs/src/lib/types/blocks.ts\n        \n\n            \n                Description\n            \n            \n                Default data type for a list block\n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        items\n                                \n                                \n                                        style\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        items\n                                    \n                                \n                                \n                                    \n                                        items:     T[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     T[]\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    List items of type T\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        style\n                                    \n                                \n                                \n                                    \n                                        style:         ListStyle\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         ListStyle\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    The list style\n\n                                \n                            \n                        \n                    \n            \n    \n\n\n    \n        export interface Block {\n  /**\n   * The EditorJS block type\n   */\n  type: string;\n\n  /**\n   * The data interface for the block type\n   */\n  data: T;\n\n  /**\n   * Additional properties on the type\n   */\n  [key: string]: any;\n}\n\n/**\n * Available list styles, supports `ordered` and `unordered`.\n * A custom string can also be added\n */\nexport type ListStyle = 'ordered' | 'unordered' | string;\n\n/**\n * Default data type for a list block\n */\nexport interface List {\n  /**\n   * The list style\n   */\n  style: ListStyle;\n  /**\n   * List items of type T\n   */\n  items: T[];\n}\n\n/**\n * The default list block is provided by the EditorJS list plugin\n */\nexport interface ListBlock extends Block> {\n  /**\n   * The EditorJS block type\n   */\n  type: 'list';\n}\n\n/**\n * Default data type for a paragraph block\n */\ninterface Paragraph {\n  /**\n   * The paragraph text\n   */\n  text: string;\n}\n\n/**\n * Interface for a paragraph block\n */\nexport interface ParagraphBlock extends Block {\n  /**\n   * The EditorJS block type\n   */\n  type: 'paragraph';\n}\n\n/**\n * Default data type for a header block\n */\ninterface Header {\n  /**\n   * The header text\n   */\n  text: string;\n  /**\n   * The header level from 1-6\n   */\n  level: number;\n}\n\n/**\n * Interface for a header block\n */\nexport interface HeaderBlock extends Block {\n  /**\n   * The EditorJS block type\n   */\n  type: 'header';\n}\n\n/**\n * Default data type for a header block\n */\nexport interface Image {\n  /**\n   * The image URL\n   */\n  url: string;\n  /**\n   * Optional image caption\n   */\n  caption?: string;\n  /**\n   * Optional border property\n   */\n  withBorder?: boolean;\n\n  /**\n   * Optional background property\n   */\n  withBackground?: boolean;\n\n  /**\n   * Optional stretch property\n   */\n  stretched?: boolean;\n}\n\n/**\n * Interface for a image block\n */\nexport interface ImageBlock extends Block {\n  /**\n   * The EditorJS block type\n   */\n  type: 'image';\n}\n\n/**\n * Type of all the basic block type\n */\nexport type BlockTypes = ParagraphBlock | HeaderBlock | ImageBlock | ListBlock | Block;\n\n    \n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/ListBlock.html":{"url":"interfaces/ListBlock.html","title":"interface - ListBlock","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  ListBlock\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            libs/ngx-editorjs/src/lib/types/blocks.ts\n        \n\n            \n                Description\n            \n            \n                The default list block is provided by the EditorJS list plugin\n\n            \n\n            \n                Extends\n            \n            \n                        Block\n            \n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        type\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        type\n                                    \n                                \n                                \n                                    \n                                        type:     \n\n                                    \n                                \n\n\n\n\n\n\n\n                            \n                                \n                                    The EditorJS block type\n\n                                \n                            \n                        \n                    \n            \n    \n\n\n    \n        export interface Block {\n  /**\n   * The EditorJS block type\n   */\n  type: string;\n\n  /**\n   * The data interface for the block type\n   */\n  data: T;\n\n  /**\n   * Additional properties on the type\n   */\n  [key: string]: any;\n}\n\n/**\n * Available list styles, supports `ordered` and `unordered`.\n * A custom string can also be added\n */\nexport type ListStyle = 'ordered' | 'unordered' | string;\n\n/**\n * Default data type for a list block\n */\nexport interface List {\n  /**\n   * The list style\n   */\n  style: ListStyle;\n  /**\n   * List items of type T\n   */\n  items: T[];\n}\n\n/**\n * The default list block is provided by the EditorJS list plugin\n */\nexport interface ListBlock extends Block> {\n  /**\n   * The EditorJS block type\n   */\n  type: 'list';\n}\n\n/**\n * Default data type for a paragraph block\n */\ninterface Paragraph {\n  /**\n   * The paragraph text\n   */\n  text: string;\n}\n\n/**\n * Interface for a paragraph block\n */\nexport interface ParagraphBlock extends Block {\n  /**\n   * The EditorJS block type\n   */\n  type: 'paragraph';\n}\n\n/**\n * Default data type for a header block\n */\ninterface Header {\n  /**\n   * The header text\n   */\n  text: string;\n  /**\n   * The header level from 1-6\n   */\n  level: number;\n}\n\n/**\n * Interface for a header block\n */\nexport interface HeaderBlock extends Block {\n  /**\n   * The EditorJS block type\n   */\n  type: 'header';\n}\n\n/**\n * Default data type for a header block\n */\nexport interface Image {\n  /**\n   * The image URL\n   */\n  url: string;\n  /**\n   * Optional image caption\n   */\n  caption?: string;\n  /**\n   * Optional border property\n   */\n  withBorder?: boolean;\n\n  /**\n   * Optional background property\n   */\n  withBackground?: boolean;\n\n  /**\n   * Optional stretch property\n   */\n  stretched?: boolean;\n}\n\n/**\n * Interface for a image block\n */\nexport interface ImageBlock extends Block {\n  /**\n   * The EditorJS block type\n   */\n  type: 'image';\n}\n\n/**\n * Type of all the basic block type\n */\nexport type BlockTypes = ParagraphBlock | HeaderBlock | ImageBlock | ListBlock | Block;\n\n    \n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/MaterialModule.html":{"url":"modules/MaterialModule.html","title":"module - MaterialModule","body":"\n                   \n\n\n\n\n    Modules\n    MaterialModule\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            apps/ngx-tinynodes/src/app/material.module.ts\n        \n\n\n        \n            Description\n        \n        \n            This internal module loads the required features for Angular Material\n\n        \n\n\n        \n            \n            \n        \n\n\n    \n\n\n    \n        import { NgModule } from '@angular/core';\n\nimport {\n  MatSidenavModule,\n  MatToolbarModule,\n  MatIconModule,\n  MatListModule,\n  MatCardModule,\n  MatButtonModule\n} from '@angular/material';\n\n/**\n * This internal module loads the required features for Angular Material\n */\n@NgModule({\n  imports: [MatSidenavModule, MatToolbarModule, MatIconModule, MatListModule, MatCardModule, MatButtonModule],\n  exports: [MatSidenavModule, MatToolbarModule, MatIconModule, MatListModule, MatCardModule, MatButtonModule]\n})\nexport class MaterialModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/MenuGroup.html":{"url":"interfaces/MenuGroup.html","title":"interface - MenuGroup","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  MenuGroup\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            libs/ngx-tinynodes-core/src/lib/types/app.ts\n        \n\n            \n                Description\n            \n            \n                A menu group describes a set of menu items with a key and optional title\n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        items\n                                \n                                \n                                        key\n                                \n                                \n                                            Optional\n                                        title\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        items\n                                    \n                                \n                                \n                                    \n                                        items:     MenuItem[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     MenuItem[]\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    The menu items, can contain one or more items with children\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        key\n                                    \n                                \n                                \n                                    \n                                        key:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    The key of the menu (e.g. sidebar, topnav, etc)\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        title\n                                    \n                                \n                                \n                                    \n                                        title:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    Optional title to render in the menu\n\n                                \n                            \n                        \n                    \n            \n    \n\n\n    \n        import { RouterLink } from '@angular/router';\n\n/**\n * A menu item in the Tinynodes app\n */\nexport interface MenuItem {\n  /**\n   * The display label for the app\n   */\n  label: string;\n  /**\n   * Optional icon for the menu item\n   */\n  icon?: string;\n  /**\n   * Description of the item, used for title, aria, etc\n   */\n  description?: string;\n  /**\n   * The {RouterLink} for the menu item or a string url\n   */\n  link?: RouterLink | string;\n\n  /**\n   * Any children to render in the menu\n   */\n  children?: MenuItem[];\n}\n\n/**\n * A menu group describes a set of menu items with a key and optional title\n */\nexport interface MenuGroup {\n  /**\n   * The key of the menu (e.g. `sidebar`, `topnav`, etc)\n   */\n  key: string;\n  /**\n   * Optional title to render in the menu\n   */\n  title?: string;\n\n  /**\n   * The menu items, can contain one or more items with children\n   */\n  items: MenuItem[];\n}\n\n/**\n * The aggregate application interface\n */\nexport interface ApplicationData {\n  /**\n   * If the sidebar menu is hidden\n   */\n  hidden: boolean;\n\n  /**\n   * An list of menu groups available in the apps\n   */\n  menus: MenuGroup[];\n}\n\n    \n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/MenuGroup-1.html":{"url":"interfaces/MenuGroup-1.html","title":"interface - MenuGroup-1","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  MenuGroup\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/ngx-tinynodes/src/app/core/types/app.ts\n        \n\n            \n                Description\n            \n            \n                A menu group describes a set of menu items with a key and optional title\n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        items\n                                \n                                \n                                        key\n                                \n                                \n                                            Optional\n                                        title\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        items\n                                    \n                                \n                                \n                                    \n                                        items:     MenuItem[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     MenuItem[]\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    The menu items, can contain one or more items with children\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        key\n                                    \n                                \n                                \n                                    \n                                        key:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    The key of the menu (e.g. sidebar, topnav, etc)\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        title\n                                    \n                                \n                                \n                                    \n                                        title:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    Optional title to render in the menu\n\n                                \n                            \n                        \n                    \n            \n    \n\n\n    \n        import { RouterLink } from '@angular/router';\n\n/**\n * A menu item in the Tinynodes app\n */\nexport interface MenuItem {\n  /**\n   * The display label for the app\n   */\n  label: string;\n  /**\n   * Optional icon for the menu item\n   */\n  icon?: string;\n  /**\n   * Description of the item, used for title, aria, etc\n   */\n  description?: string;\n  /**\n   * The {RouterLink} for the menu item or a string url\n   */\n  link?: RouterLink | string;\n\n  /**\n   * Any children to render in the menu\n   */\n  children?: MenuItem[];\n}\n\n/**\n * A menu group describes a set of menu items with a key and optional title\n */\nexport interface MenuGroup {\n  /**\n   * The key of the menu (e.g. `sidebar`, `topnav`, etc)\n   */\n  key: string;\n  /**\n   * Optional title to render in the menu\n   */\n  title?: string;\n\n  /**\n   * The menu items, can contain one or more items with children\n   */\n  items: MenuItem[];\n}\n\n/**\n * The aggregate application interface\n */\nexport interface ApplicationData {\n  /**\n   * If the sidebar menu is hidden\n   */\n  hidden: boolean;\n\n  /**\n   * An list of menu groups available in the apps\n   */\n  menus: MenuGroup[];\n}\n\n    \n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/MenuItem.html":{"url":"interfaces/MenuItem.html","title":"interface - MenuItem","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  MenuItem\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            libs/ngx-tinynodes-core/src/lib/types/app.ts\n        \n\n            \n                Description\n            \n            \n                A menu item in the Tinynodes app\n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                            Optional\n                                        children\n                                \n                                \n                                            Optional\n                                        description\n                                \n                                \n                                            Optional\n                                        icon\n                                \n                                \n                                        label\n                                \n                                \n                                            Optional\n                                        link\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        children\n                                    \n                                \n                                \n                                    \n                                        children:     MenuItem[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     MenuItem[]\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    Any children to render in the menu\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        description\n                                    \n                                \n                                \n                                    \n                                        description:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    Description of the item, used for title, aria, etc\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        icon\n                                    \n                                \n                                \n                                    \n                                        icon:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    Optional icon for the menu item\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        label\n                                    \n                                \n                                \n                                    \n                                        label:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    The display label for the app\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        link\n                                    \n                                \n                                \n                                    \n                                        link:     RouterLink | string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     RouterLink | string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    The {RouterLink} for the menu item or a string url\n\n                                \n                            \n                        \n                    \n            \n    \n\n\n    \n        import { RouterLink } from '@angular/router';\n\n/**\n * A menu item in the Tinynodes app\n */\nexport interface MenuItem {\n  /**\n   * The display label for the app\n   */\n  label: string;\n  /**\n   * Optional icon for the menu item\n   */\n  icon?: string;\n  /**\n   * Description of the item, used for title, aria, etc\n   */\n  description?: string;\n  /**\n   * The {RouterLink} for the menu item or a string url\n   */\n  link?: RouterLink | string;\n\n  /**\n   * Any children to render in the menu\n   */\n  children?: MenuItem[];\n}\n\n/**\n * A menu group describes a set of menu items with a key and optional title\n */\nexport interface MenuGroup {\n  /**\n   * The key of the menu (e.g. `sidebar`, `topnav`, etc)\n   */\n  key: string;\n  /**\n   * Optional title to render in the menu\n   */\n  title?: string;\n\n  /**\n   * The menu items, can contain one or more items with children\n   */\n  items: MenuItem[];\n}\n\n/**\n * The aggregate application interface\n */\nexport interface ApplicationData {\n  /**\n   * If the sidebar menu is hidden\n   */\n  hidden: boolean;\n\n  /**\n   * An list of menu groups available in the apps\n   */\n  menus: MenuGroup[];\n}\n\n    \n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/MenuItem-1.html":{"url":"interfaces/MenuItem-1.html","title":"interface - MenuItem-1","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  MenuItem\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/ngx-tinynodes/src/app/core/types/app.ts\n        \n\n            \n                Description\n            \n            \n                A menu item in the Tinynodes app\n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                            Optional\n                                        children\n                                \n                                \n                                            Optional\n                                        description\n                                \n                                \n                                            Optional\n                                        icon\n                                \n                                \n                                        label\n                                \n                                \n                                            Optional\n                                        link\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        children\n                                    \n                                \n                                \n                                    \n                                        children:     MenuItem[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     MenuItem[]\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    Any children to render in the menu\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        description\n                                    \n                                \n                                \n                                    \n                                        description:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    Description of the item, used for title, aria, etc\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        icon\n                                    \n                                \n                                \n                                    \n                                        icon:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    Optional icon for the menu item\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        label\n                                    \n                                \n                                \n                                    \n                                        label:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    The display label for the app\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        link\n                                    \n                                \n                                \n                                    \n                                        link:     RouterLink | string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     RouterLink | string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    The {RouterLink} for the menu item or a string url\n\n                                \n                            \n                        \n                    \n            \n    \n\n\n    \n        import { RouterLink } from '@angular/router';\n\n/**\n * A menu item in the Tinynodes app\n */\nexport interface MenuItem {\n  /**\n   * The display label for the app\n   */\n  label: string;\n  /**\n   * Optional icon for the menu item\n   */\n  icon?: string;\n  /**\n   * Description of the item, used for title, aria, etc\n   */\n  description?: string;\n  /**\n   * The {RouterLink} for the menu item or a string url\n   */\n  link?: RouterLink | string;\n\n  /**\n   * Any children to render in the menu\n   */\n  children?: MenuItem[];\n}\n\n/**\n * A menu group describes a set of menu items with a key and optional title\n */\nexport interface MenuGroup {\n  /**\n   * The key of the menu (e.g. `sidebar`, `topnav`, etc)\n   */\n  key: string;\n  /**\n   * Optional title to render in the menu\n   */\n  title?: string;\n\n  /**\n   * The menu items, can contain one or more items with children\n   */\n  items: MenuItem[];\n}\n\n/**\n * The aggregate application interface\n */\nexport interface ApplicationData {\n  /**\n   * If the sidebar menu is hidden\n   */\n  hidden: boolean;\n\n  /**\n   * An list of menu groups available in the apps\n   */\n  menus: MenuGroup[];\n}\n\n    \n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/MockEditorJS.html":{"url":"classes/MockEditorJS.html","title":"class - MockEditorJS","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  MockEditorJS\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            libs/ngx-editorjs/src/testing/shared.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                blocks\n                            \n                            \n                                destroy\n                            \n                            \n                                saver\n                            \n                            \n                                version\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(config: EditorJSConfig)\n                    \n                \n                        \n                            \n                                Defined in libs/ngx-editorjs/src/testing/shared.ts:25\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        config\n                                                  \n                                                        \n                                                                        EditorJSConfig\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            blocks\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         any\n\n                        \n                    \n                        \n                            \n                                    Defined in libs/ngx-editorjs/src/testing/shared.ts:22\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            destroy\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         function\n\n                        \n                    \n                        \n                            \n                                    Defined in libs/ngx-editorjs/src/testing/shared.ts:25\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            saver\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         any\n\n                        \n                    \n                        \n                            \n                                    Defined in libs/ngx-editorjs/src/testing/shared.ts:23\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            version\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in libs/ngx-editorjs/src/testing/shared.ts:24\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { ToolSettings } from '@editorjs/editorjs';\nimport { BasePlugin } from '../lib/types/plugins';\nimport { EditorJSConfig } from '../lib/types/config';\n\nexport class TestClass {\n  constructor() {}\n  render() {\n    return document.createElement('div');\n  }\n}\n\nexport class MockPlugin implements BasePlugin {\n  public plugin(): ToolSettings {\n    return { class: TestClass };\n  }\n  shortcut() {\n    return 'test-shortcut';\n  }\n}\n\nexport class MockEditorJS {\n  blocks: any;\n  saver: any;\n  version: string;\n  destroy: () => void;\n\n  constructor(private config: EditorJSConfig) {\n    this.version = 'test';\n\n    this.destroy = () => {};\n\n    this.blocks = {\n      clear: () => {},\n      render: () => {}\n    };\n\n    this.saver = {\n      save: (): Promise => {\n        return Promise.resolve({\n          time: Date.now(),\n          version: 'test',\n          blocks: []\n        });\n      }\n    };\n    (config as any).onReady();\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/MockNgZone.html":{"url":"injectables/MockNgZone.html","title":"injectable - MockNgZone","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  MockNgZone\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            libs/ngx-editorjs/src/testing/ng-zone-mock.ts\n        \n\n            \n                Description\n            \n            \n                A mock implementation of NgZone.\n\n            \n\n            \n                Extends\n            \n            \n                        NgZone\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                onStable\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                run\n                            \n                            \n                                runOutsideAngular\n                            \n                            \n                                simulateZoneExit\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in libs/ngx-editorjs/src/testing/ng-zone-mock.ts:16\n                            \n                        \n\n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            run\n                        \n                        \n                    \n                \n            \n            \n                \nrun(fn: Function)\n                \n            \n\n\n            \n                \n                    Defined in libs/ngx-editorjs/src/testing/ng-zone-mock.ts:22\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    fn\n                                    \n                                                Function\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            runOutsideAngular\n                        \n                        \n                    \n                \n            \n            \n                \nrunOutsideAngular(fn: Function)\n                \n            \n\n\n            \n                \n                    Defined in libs/ngx-editorjs/src/testing/ng-zone-mock.ts:26\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    fn\n                                    \n                                                Function\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            simulateZoneExit\n                        \n                        \n                    \n                \n            \n            \n                \nsimulateZoneExit()\n                \n            \n\n\n            \n                \n                    Defined in libs/ngx-editorjs/src/testing/ng-zone-mock.ts:30\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            onStable\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     EventEmitter\n\n                        \n                    \n                    \n                        \n                            Default value : new EventEmitter(false)\n                        \n                    \n                        \n                            \n                                    Defined in libs/ngx-editorjs/src/testing/ng-zone-mock.ts:16\n                            \n                        \n\n\n            \n        \n\n\n    \n\n\n    \n        import { EventEmitter, Injectable, NgZone } from '@angular/core';\n\n/**\n * A mock implementation of {@link NgZone}.\n */\n@Injectable()\nexport class MockNgZone extends NgZone {\n  onStable: EventEmitter = new EventEmitter(false);\n\n  constructor() {\n    super({ enableLongStackTrace: false });\n  }\n\n  run(fn: Function): any {\n    return fn();\n  }\n\n  runOutsideAngular(fn: Function): any {\n    return fn();\n  }\n\n  simulateZoneExit(): void {\n    this.onStable.emit(null);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/MockPlugin.html":{"url":"classes/MockPlugin.html","title":"class - MockPlugin","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  MockPlugin\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            libs/ngx-editorjs/src/testing/shared.ts\n        \n\n\n\n            \n                Implements\n            \n            \n                            BasePlugin\n            \n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                plugin\n                            \n                            \n                                shortcut\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            plugin\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    plugin()\n                \n            \n\n\n            \n                \n                    Defined in libs/ngx-editorjs/src/testing/shared.ts:13\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :     ToolSettings\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            shortcut\n                        \n                        \n                    \n                \n            \n            \n                \nshortcut()\n                \n            \n\n\n            \n                \n                    Defined in libs/ngx-editorjs/src/testing/shared.ts:16\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         string\n\n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { ToolSettings } from '@editorjs/editorjs';\nimport { BasePlugin } from '../lib/types/plugins';\nimport { EditorJSConfig } from '../lib/types/config';\n\nexport class TestClass {\n  constructor() {}\n  render() {\n    return document.createElement('div');\n  }\n}\n\nexport class MockPlugin implements BasePlugin {\n  public plugin(): ToolSettings {\n    return { class: TestClass };\n  }\n  shortcut() {\n    return 'test-shortcut';\n  }\n}\n\nexport class MockEditorJS {\n  blocks: any;\n  saver: any;\n  version: string;\n  destroy: () => void;\n\n  constructor(private config: EditorJSConfig) {\n    this.version = 'test';\n\n    this.destroy = () => {};\n\n    this.blocks = {\n      clear: () => {},\n      render: () => {}\n    };\n\n    this.saver = {\n      save: (): Promise => {\n        return Promise.resolve({\n          time: Date.now(),\n          version: 'test',\n          blocks: []\n        });\n      }\n    };\n    (config as any).onReady();\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/NavBarComponent.html":{"url":"components/NavBarComponent.html","title":"component - NavBarComponent","body":"\n                   \n\n\n\n\n\n  Components\n  NavBarComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    apps/ngx-tinynodes/src/app/components/nav-bar/nav-bar.component.ts\n\n\n    \n        Description\n    \n    \n        Internal NavBar component for the Tinynodes application, provides\ncontrol over the sidebar toggle and displays the main menu\n\n    \n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                tinynodes-nav-bar\n            \n\n            \n                styleUrls\n                nav-bar.component.scss\n            \n\n\n\n            \n                templateUrl\n                nav-bar.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n\n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                menu\n                            \n                            \n                                title\n                            \n                        \n                    \n                \n\n                \n                    \n                        Outputs\n                    \n                \n                \n                    \n                        \n                            \n                                toggleSidebar\n                            \n                        \n                    \n                \n\n\n\n        \n    \n\n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        menu\n                    \n                \n                \n                    \n                        Type :         MenuGroup\n\n                    \n                \n                        \n                            \n                                    Defined in apps/ngx-tinynodes/src/app/components/nav-bar/nav-bar.component.ts:21\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        title\n                    \n                \n                \n                    \n                        Default value : 'Navbar Component'\n                    \n                \n                        \n                            \n                                    Defined in apps/ngx-tinynodes/src/app/components/nav-bar/nav-bar.component.ts:18\n                            \n                        \n                \n                    \n                        Set the title of the component\n\n                    \n                \n            \n        \n\n    \n    Outputs\n        \n            \n                \n                    \n                        \n                        toggleSidebar\n                    \n                \n                \n                    \n                        Type :         EventEmitter\n\n                    \n                \n                        \n                            \n                                    Defined in apps/ngx-tinynodes/src/app/components/nav-bar/nav-bar.component.ts:27\n                            \n                        \n                \n                    \n                        Get an event when the sidebar toggle has been pressed\n\n                    \n                \n            \n        \n\n\n\n\n\n\n\n\n    \n        import { Component, EventEmitter, Input, Output } from '@angular/core';\nimport { MenuGroup } from '@tinynodes/ngx-tinynodes-core/src';\n\n/**\n * Internal NavBar component for the Tinynodes application, provides\n * control over the sidebar toggle and displays the main menu\n */\n@Component({\n  selector: 'tinynodes-nav-bar',\n  templateUrl: 'nav-bar.component.html',\n  styleUrls: ['nav-bar.component.scss']\n})\nexport class NavBarComponent {\n  /**\n   * Set the title of the component\n   */\n  @Input()\n  title = 'Navbar Component';\n\n  @Input()\n  menu: MenuGroup;\n\n  /**\n   * Get an event when the sidebar toggle has been pressed\n   */\n  @Output()\n  toggleSidebar = new EventEmitter();\n}\n\n    \n\n    \n        \n  \n    menu\n  \n  &nbsp;\n  \n    {{ title }}\n  \n  \n    \n      \n        \n          {{ menuItem.label }}\n        \n      \n    \n  \n\n\n    \n\n    \n                \n                    nav-bar.component.scss\n                \n                a {\n  text-decoration: none;\n  color: white;\n}\n\na:hover,\na:active {\n  color: lightgray;\n}\n\n.navigation-items {\n  list-style: none;\n  padding: 0;\n  margin: 0;\n  cursor: pointer;\n}\n\n.icon {\n  display: inline-block;\n  height: 30px;\n  margin: 0 auto;\n  padding-right: 5px;\n  text-align: center;\n  vertical-align: middle;\n  width: 15%;\n}\n\n.label {\n  display: inline-block;\n  line-height: 30px;\n  margin: 0;\n  width: 85%;\n}\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '      menu           {{ title }}                                {{ menuItem.label }}                    '\n    var COMPONENTS = [{'name': 'AppContainerComponent', 'selector': 'tinynodes-root'},{'name': 'HomePageComponent', 'selector': 'tinynodes-home-page'},{'name': 'NavBarComponent', 'selector': 'tinynodes-nav-bar'},{'name': 'NgxEditorJSComponent', 'selector': 'ngx-editorjs'},{'name': 'PageContainerComponent', 'selector': 'ngx-page-container'},{'name': 'SidebarComponent', 'selector': 'tinynodes-sidebar'}];\n    var DIRECTIVES = [{'name': 'NgxEditorJSDirective', 'selector': '[ngxEditorJS]'}];\n    var ACTUAL_COMPONENT = {'name': 'NavBarComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/NgxEditorJSComponent.html":{"url":"components/NgxEditorJSComponent.html","title":"component - NgxEditorJSComponent","body":"\n                   \n\n\n\n\n\n  Components\n  NgxEditorJSComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    libs/ngx-editorjs/src/lib/containers/editorjs-component/editorjs.component.ts\n\n\n    \n        Description\n    \n    \n        This component is provided as a shortcut to using EditorJS in your\napplication. The attributes are optional and without a default component\nwill be created\n\n    \n\n\n\n    \n        Example\n    \n    \n                \n                    \n                \n    \n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                ngx-editorjs\n            \n\n            \n                styleUrls\n                editorjs.component.scss\n            \n\n\n\n            \n                templateUrl\n                editorjs.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                editor\n                            \n                            \n                                    Public\n                                    Readonly\n                                service\n                            \n                        \n                    \n                \n\n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                autofocus\n                            \n                            \n                                autosave\n                            \n                            \n                                blocks\n                            \n                            \n                                hideToolbar\n                            \n                            \n                                holder\n                            \n                            \n                                includeTools\n                            \n                            \n                                initialBlock\n                            \n                            \n                                minHeight\n                            \n                            \n                                placeholder\n                            \n                            \n                                sanitizer\n                            \n                        \n                    \n                \n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(service: NgxEditorJSService)\n                    \n                \n                        \n                            \n                                Defined in libs/ngx-editorjs/src/lib/containers/editorjs-component/editorjs.component.ts:86\n                            \n                        \n\n                \n                    \n                            When created an instance of the service is available as\na public interface\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        service\n                                                  \n                                                        \n                                                                        NgxEditorJSService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                The editor service\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        autofocus\n                    \n                \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                        \n                            \n                                    Defined in libs/ngx-editorjs/src/lib/containers/editorjs-component/editorjs.component.ts:30\n                            \n                        \n                \n                    \n                        Sets if the EditorJS component will request autofocus in the browser\n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        autosave\n                    \n                \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                        \n                            \n                                    Defined in libs/ngx-editorjs/src/lib/containers/editorjs-component/editorjs.component.ts:80\n                            \n                        \n                \n                    \n                        If set, when the EditorJS save is called the Observable of blocks will be updated,\nif set to false on the change Observable will be updated\n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        blocks\n                    \n                \n                \n                    \n                        Type :         Block[]\n\n                    \n                \n                \n                    \n                        Default value : []\n                    \n                \n                        \n                            \n                                    Defined in libs/ngx-editorjs/src/lib/containers/editorjs-component/editorjs.component.ts:86\n                            \n                        \n                \n                    \n                        An initial set of blocks to render in the component\n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        hideToolbar\n                    \n                \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                        \n                            \n                                    Defined in libs/ngx-editorjs/src/lib/containers/editorjs-component/editorjs.component.ts:36\n                            \n                        \n                \n                    \n                        Sets if the toolbar will be shown in EditorJS\n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        holder\n                    \n                \n                \n                    \n                        Type :         string\n\n                    \n                \n                        \n                            \n                                    Defined in libs/ngx-editorjs/src/lib/containers/editorjs-component/editorjs.component.ts:42\n                            \n                        \n                \n                    \n                        The ID of the dom element that will hold the editor\n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        includeTools\n                    \n                \n                \n                    \n                        Type :     string[]\n\n                    \n                \n                \n                    \n                        Default value : []\n                    \n                \n                        \n                            \n                                    Defined in libs/ngx-editorjs/src/lib/containers/editorjs-component/editorjs.component.ts:73\n                            \n                        \n                \n                    \n                        A string array of tools that will be included in this instance, if empty\nall tools will be included\n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        initialBlock\n                    \n                \n                \n                    \n                        Type :         string\n\n                    \n                \n                        \n                            \n                                    Defined in libs/ngx-editorjs/src/lib/containers/editorjs-component/editorjs.component.ts:48\n                            \n                        \n                \n                    \n                        The name of the initial block (default \"paragraph\")\n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        minHeight\n                    \n                \n                \n                    \n                        Type :         number\n\n                    \n                \n                        \n                            \n                                    Defined in libs/ngx-editorjs/src/lib/containers/editorjs-component/editorjs.component.ts:54\n                            \n                        \n                \n                    \n                        Height of Editor's bottom area that allows to set focus on the last Block\n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        placeholder\n                    \n                \n                \n                    \n                        Type :         string\n\n                    \n                \n                        \n                            \n                                    Defined in libs/ngx-editorjs/src/lib/containers/editorjs-component/editorjs.component.ts:60\n                            \n                        \n                \n                    \n                        First Block placeholder\n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        sanitizer\n                    \n                \n                \n                    \n                        Type :     SanitizerConfig\n\n                    \n                \n                        \n                            \n                                    Defined in libs/ngx-editorjs/src/lib/containers/editorjs-component/editorjs.component.ts:66\n                            \n                        \n                \n                    \n                        Define default sanitizer configuration\n\n                    \n                \n            \n        \n\n\n\n\n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            editor\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     NgxEditorJSDirective\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @ViewChild(NgxEditorJSDirective)\n                            \n                        \n                    \n                        \n                            \n                                    Defined in libs/ngx-editorjs/src/lib/containers/editorjs-component/editorjs.component.ts:24\n                            \n                        \n\n                \n                    \n                        Access to the underlying editor directive\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                                Readonly\n                            service\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         NgxEditorJSService\n\n                        \n                    \n                        \n                            \n                                    Defined in libs/ngx-editorjs/src/lib/containers/editorjs-component/editorjs.component.ts:93\n                            \n                        \n\n                \n                    \n                        The editor service\n                    \n                \n\n            \n        \n\n\n\n\n\n    \n        import { Component, Input, ViewChild } from '@angular/core';\nimport { SanitizerConfig } from '@editorjs/editorjs';\nimport { NgxEditorJSDirective } from '../../directives/ngx-editorjs.directive';\nimport { NgxEditorJSService } from '../../services/editorjs.service';\nimport { Block } from '../../types/blocks';\n\n/**\n * This component is provided as a shortcut to using EditorJS in your\n * application. The attributes are optional and without a default component\n * will be created\n *\n * @example\n * \n */\n@Component({\n  selector: 'ngx-editorjs',\n  templateUrl: 'editorjs.component.html',\n  styleUrls: ['editorjs.component.scss']\n})\nexport class NgxEditorJSComponent {\n  /**\n   * Access to the underlying editor directive\n   */\n  @ViewChild(NgxEditorJSDirective) public editor: NgxEditorJSDirective;\n\n  /**\n   * Sets if the `EditorJS` component will request autofocus in the browser\n   */\n  @Input()\n  public autofocus: boolean;\n\n  /**\n   * Sets if the toolbar will be shown in `EditorJS`\n   */\n  @Input()\n  public hideToolbar: boolean;\n\n  /**\n   * The ID of the dom element that will hold the editor\n   */\n  @Input()\n  public holder: string;\n\n  /**\n   * The name of the initial block (default \"paragraph\")\n   */\n  @Input()\n  public initialBlock?: string;\n\n  /**\n   * Height of Editor's bottom area that allows to set focus on the last Block\n   */\n  @Input()\n  public minHeight?: number;\n\n  /**\n   * First Block placeholder\n   */\n  @Input()\n  public placeholder?: string;\n\n  /**\n   * Define default sanitizer configuration\n   */\n  @Input()\n  public sanitizer?: SanitizerConfig;\n\n  /**\n   * A string array of tools that will be included in this instance, if empty\n   * all tools will be included\n   */\n  @Input()\n  public includeTools: string[] = [];\n\n  /**\n   * If set, when the `EditorJS` save is called the `Observable` of blocks will be updated,\n   * if set to `false` on the change `Observable` will be updated\n   */\n  @Input()\n  public autosave: boolean;\n\n  /**\n   * An initial set of blocks to render in the component\n   */\n  @Input()\n  public blocks: Block[] = [];\n\n  /**\n   * When created an instance of the service is available as\n   * a public interface\n   * @param service The editor service\n   */\n  constructor(public readonly service: NgxEditorJSService) {}\n}\n\n    \n\n    \n        \n\n    \n\n    \n                \n                    editorjs.component.scss\n                \n                :host {\n  position: relative;\n  width: 100%;\n  height: 100%;\n  display: flex;\n  flex-direction: row;\n}\n\n.editor {\n  flex: 1;\n  position: relative;\n  width: 100%;\n  height: 100%;\n  border: 2px solid darkgray;\n  border-radius: 1em;\n  text-align: left;\n}\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = ''\n    var COMPONENTS = [{'name': 'AppContainerComponent', 'selector': 'tinynodes-root'},{'name': 'HomePageComponent', 'selector': 'tinynodes-home-page'},{'name': 'NavBarComponent', 'selector': 'tinynodes-nav-bar'},{'name': 'NgxEditorJSComponent', 'selector': 'ngx-editorjs'},{'name': 'PageContainerComponent', 'selector': 'ngx-page-container'},{'name': 'SidebarComponent', 'selector': 'tinynodes-sidebar'}];\n    var DIRECTIVES = [{'name': 'NgxEditorJSDirective', 'selector': '[ngxEditorJS]'}];\n    var ACTUAL_COMPONENT = {'name': 'NgxEditorJSComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/NgxEditorJSConfig.html":{"url":"interfaces/NgxEditorJSConfig.html","title":"interface - NgxEditorJSConfig","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  NgxEditorJSConfig\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            libs/ngx-editorjs/src/lib/types/config.ts\n        \n\n            \n                Description\n            \n            \n                The configuration option that can be passed to the NgxEditorJSModule.forRoot method\n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                            Optional\n                                        editorjs\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        editorjs\n                                    \n                                \n                                \n                                    \n                                        editorjs:         EditorJSConfig\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         EditorJSConfig\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    Configuration options for EditorJS\n\n                                \n                            \n                        \n                    \n            \n    \n\n\n    \n        import { InjectionToken } from '@angular/core';\nimport EditorJS, { OutputData, SanitizerConfig } from '@editorjs/editorjs';\n\n/**\n * Configuration for the EditorJS instance\n */\nexport interface EditorJSConfig {\n  /**\n   * If the EditorJS is autofocused on creation (default: false)\n   */\n  autofocus?: boolean;\n\n  /**\n   * Any initial output data to render\n   */\n  data?: OutputData;\n\n  /**\n   * If true, toolbar won't be shown\n   */\n  hideToolbar?: boolean;\n\n  /**\n   * ID of the element to hold the config\n   */\n  holder?: string;\n\n  /**\n   * The name of the initial block (default \"paragraph\")\n   */\n  initialBlock?: string;\n\n  /**\n   * Height of Editor's bottom area that allows to set focus on the last Block\n   */\n  minHeight?: number;\n\n  /**\n   * First Block placeholder\n   */\n  placeholder?: string;\n\n  /**\n   * Define default sanitizer configuration\n   */\n  sanitizer?: SanitizerConfig;\n}\n\n/**\n * The configuration option that can be passed to the `NgxEditorJSModule.forRoot` method\n */\nexport interface NgxEditorJSConfig {\n  /**\n   * Configuration options for `EditorJS`\n   */\n  editorjs?: EditorJSConfig;\n}\n\n/**\n * Injection token provied for `NgxEditorJSConfig`\n */\nexport const NGX_EDITORJS_CONFIG = new InjectionToken('NGX_EDITORJS_CONFIG');\n\n/**\n * Internal token for injecting the `NgxEditorJSConfig` into the config factory\n */\nexport const FOR_ROOT_OPTIONS_TOKEN = new InjectionToken('FOR_ROOT_OPTIONS_TOKEN');\n\n/**\n * Get the EditorJS instance injected into the app\n */\nexport const EDITIOR_JS_INSTANCE = new InjectionToken('EDITIOR_JS_INSTANCE');\n\n    \n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/NgxEditorJSDemo.html":{"url":"interfaces/NgxEditorJSDemo.html","title":"interface - NgxEditorJSDemo","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  NgxEditorJSDemo\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            libs/ngx-tinynodes-core/src/lib/stores/app/application.model.ts\n        \n\n            \n                Description\n            \n            \n                Interface for ngx-editorjs-demo data\nTODO: This should be moved\n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        blocks\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        blocks\n                                    \n                                \n                                \n                                    \n                                        blocks:         Block[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         Block[]\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    The initial blocks for the demo\n\n                                \n                            \n                        \n                    \n            \n    \n\n\n    \n        import { Block } from '@tinynodes/ngx-editorjs';\nimport { MenuGroup } from '../../types/app';\n\n/**\n * An Enum of the keys in the application state\n */\nexport enum ApplicationStateKeys {\n  /**\n   * The hidden state key\n   */\n  Hidden = 'hidden',\n\n  /**\n   * The menus key\n   */\n  Menus = 'menus',\n\n  /**\n   * The demo data key\n   */\n  DemoData = 'demoData'\n}\n\n/**\n * Interface for a demo data object\n */\nexport interface DemoData {\n  /**\n   * The name of the demo (e.g. `ngx-editorjs-demo`)\n   */\n  name: string;\n  /**\n   * The data for the demo as ``\n   */\n  data: T;\n}\n\n/**\n * Interface for `ngx-editorjs-demo` data\n * TODO: This should be moved\n */\nexport interface NgxEditorJSDemo {\n  /**\n   * The initial blocks for the demo\n   */\n  blocks: Block[];\n}\n\n/**\n * The demo data for `ngx-editorjs-demo`\n */\nexport interface NgxEditorJSDemoData extends DemoData {}\n\n/**\n * The demos on tinynodes\n */\nexport interface TinynodeDemos {\n  /**\n   * The `ngx-editorjs-demo` data\n   */\n  'ngx-editorjs-demo': NgxEditorJSDemoData;\n}\n\n/**\n * A representation of the application state\n */\nexport interface ApplicationState {\n  /**\n   * If the side menu is hidden\n   */\n  hidden: boolean;\n\n  /**\n   * A set of menus loaded from application data\n   */\n  menus: MenuGroup[];\n\n  /**\n   * Data for demos\n   */\n  demoData: DemoData[];\n}\n\n    \n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/NgxEditorJSDemo-1.html":{"url":"interfaces/NgxEditorJSDemo-1.html","title":"interface - NgxEditorJSDemo-1","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  NgxEditorJSDemo\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/ngx-tinynodes/src/app/core/stores/app/application.model.ts\n        \n\n            \n                Description\n            \n            \n                Interface for ngx-editorjs-demo data\nTODO: This should be moved\n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        blocks\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        blocks\n                                    \n                                \n                                \n                                    \n                                        blocks:         Block[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         Block[]\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    The initial blocks for the demo\n\n                                \n                            \n                        \n                    \n            \n    \n\n\n    \n        import { Block } from '@tinynodes/ngx-editorjs';\nimport { MenuGroup } from '../../types/app';\n\n/**\n * An Enum of the keys in the application state\n */\nexport enum ApplicationStateKeys {\n  /**\n   * The hidden state key\n   */\n  Hidden = 'hidden',\n\n  /**\n   * The menus key\n   */\n  Menus = 'menus',\n\n  /**\n   * The demo data key\n   */\n  DemoData = 'demoData'\n}\n\n/**\n * Interface for a demo data object\n */\nexport interface DemoData {\n  /**\n   * The name of the demo (e.g. `ngx-editorjs-demo`)\n   */\n  name: string;\n  /**\n   * The data for the demo as ``\n   */\n  data: T;\n}\n\n/**\n * Interface for `ngx-editorjs-demo` data\n * TODO: This should be moved\n */\nexport interface NgxEditorJSDemo {\n  /**\n   * The initial blocks for the demo\n   */\n  blocks: Block[];\n}\n\n/**\n * The demo data for `ngx-editorjs-demo`\n */\nexport interface NgxEditorJSDemoData extends DemoData {}\n\n/**\n * The demos on tinynodes\n */\nexport interface TinynodeDemos {\n  /**\n   * The `ngx-editorjs-demo` data\n   */\n  'ngx-editorjs-demo': NgxEditorJSDemoData;\n}\n\n/**\n * A representation of the application state\n */\nexport interface ApplicationState {\n  /**\n   * If the side menu is hidden\n   */\n  hidden: boolean;\n\n  /**\n   * A set of menus loaded from application data\n   */\n  menus: MenuGroup[];\n\n  /**\n   * Data for demos\n   */\n  demoData: DemoData[];\n}\n\n    \n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/NgxEditorJSDemoData.html":{"url":"interfaces/NgxEditorJSDemoData.html","title":"interface - NgxEditorJSDemoData","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  NgxEditorJSDemoData\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            libs/ngx-tinynodes-core/src/lib/stores/app/application.model.ts\n        \n\n            \n                Description\n            \n            \n                The demo data for ngx-editorjs-demo\n\n            \n\n            \n                Extends\n            \n            \n                        DemoData\n            \n\n\n\n\n    \n\n\n    \n        import { Block } from '@tinynodes/ngx-editorjs';\nimport { MenuGroup } from '../../types/app';\n\n/**\n * An Enum of the keys in the application state\n */\nexport enum ApplicationStateKeys {\n  /**\n   * The hidden state key\n   */\n  Hidden = 'hidden',\n\n  /**\n   * The menus key\n   */\n  Menus = 'menus',\n\n  /**\n   * The demo data key\n   */\n  DemoData = 'demoData'\n}\n\n/**\n * Interface for a demo data object\n */\nexport interface DemoData {\n  /**\n   * The name of the demo (e.g. `ngx-editorjs-demo`)\n   */\n  name: string;\n  /**\n   * The data for the demo as ``\n   */\n  data: T;\n}\n\n/**\n * Interface for `ngx-editorjs-demo` data\n * TODO: This should be moved\n */\nexport interface NgxEditorJSDemo {\n  /**\n   * The initial blocks for the demo\n   */\n  blocks: Block[];\n}\n\n/**\n * The demo data for `ngx-editorjs-demo`\n */\nexport interface NgxEditorJSDemoData extends DemoData {}\n\n/**\n * The demos on tinynodes\n */\nexport interface TinynodeDemos {\n  /**\n   * The `ngx-editorjs-demo` data\n   */\n  'ngx-editorjs-demo': NgxEditorJSDemoData;\n}\n\n/**\n * A representation of the application state\n */\nexport interface ApplicationState {\n  /**\n   * If the side menu is hidden\n   */\n  hidden: boolean;\n\n  /**\n   * A set of menus loaded from application data\n   */\n  menus: MenuGroup[];\n\n  /**\n   * Data for demos\n   */\n  demoData: DemoData[];\n}\n\n    \n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/NgxEditorJSDemoData-1.html":{"url":"interfaces/NgxEditorJSDemoData-1.html","title":"interface - NgxEditorJSDemoData-1","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  NgxEditorJSDemoData\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/ngx-tinynodes/src/app/core/stores/app/application.model.ts\n        \n\n            \n                Description\n            \n            \n                The demo data for ngx-editorjs-demo\n\n            \n\n            \n                Extends\n            \n            \n                        DemoData\n            \n\n\n\n\n    \n\n\n    \n        import { Block } from '@tinynodes/ngx-editorjs';\nimport { MenuGroup } from '../../types/app';\n\n/**\n * An Enum of the keys in the application state\n */\nexport enum ApplicationStateKeys {\n  /**\n   * The hidden state key\n   */\n  Hidden = 'hidden',\n\n  /**\n   * The menus key\n   */\n  Menus = 'menus',\n\n  /**\n   * The demo data key\n   */\n  DemoData = 'demoData'\n}\n\n/**\n * Interface for a demo data object\n */\nexport interface DemoData {\n  /**\n   * The name of the demo (e.g. `ngx-editorjs-demo`)\n   */\n  name: string;\n  /**\n   * The data for the demo as ``\n   */\n  data: T;\n}\n\n/**\n * Interface for `ngx-editorjs-demo` data\n * TODO: This should be moved\n */\nexport interface NgxEditorJSDemo {\n  /**\n   * The initial blocks for the demo\n   */\n  blocks: Block[];\n}\n\n/**\n * The demo data for `ngx-editorjs-demo`\n */\nexport interface NgxEditorJSDemoData extends DemoData {}\n\n/**\n * The demos on tinynodes\n */\nexport interface TinynodeDemos {\n  /**\n   * The `ngx-editorjs-demo` data\n   */\n  'ngx-editorjs-demo': NgxEditorJSDemoData;\n}\n\n/**\n * A representation of the application state\n */\nexport interface ApplicationState {\n  /**\n   * If the side menu is hidden\n   */\n  hidden: boolean;\n\n  /**\n   * A set of menus loaded from application data\n   */\n  menus: MenuGroup[];\n\n  /**\n   * Data for demos\n   */\n  demoData: DemoData[];\n}\n\n    \n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"directives/NgxEditorJSDirective.html":{"url":"directives/NgxEditorJSDirective.html","title":"directive - NgxEditorJSDirective","body":"\n                   \n\n\n\n\n\n\n\n  Directives\n  NgxEditorJSDirective\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            libs/ngx-editorjs/src/lib/directives/ngx-editorjs.directive.ts\n        \n\n            \n                Description\n            \n            \n                The main directive of ngx-editorjs provides a way to attach\nan EditorJS instance to any element and control it via\nAngular services and components\nTo use attach to any element with an id property\n\n            \n\n            \n                Implements\n            \n            \n                            OnDestroy\n                            OnChanges\n                            AfterContentInit\n            \n\n            \n                Example\n            \n            \n                        \n                            \n                        \n            \n\n        \n            Metadata\n            \n                \n\n                    \n                        Selector\n                        [ngxEditorJS]\n                    \n\n                \n            \n        \n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                createEditor\n                            \n                            \n                                ngAfterContentInit\n                            \n                            \n                                ngOnChanges\n                            \n                            \n                                ngOnDestroy\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                autofocus\n                            \n                            \n                                autosave\n                            \n                            \n                                blocks\n                            \n                            \n                                hideToolbar\n                            \n                            \n                                holder\n                            \n                            \n                                includeTools\n                            \n                            \n                                initialBlock\n                            \n                            \n                                minHeight\n                            \n                            \n                                placeholder\n                            \n                            \n                                sanitizer\n                            \n                        \n                    \n                \n\n\n\n\n                    \n                        \n                            Accessors\n                        \n                    \n                    \n                        \n                            \n                                \n                                    editor\n                                \n                                \n                                    service\n                                \n                            \n                        \n                    \n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(el: ElementRef, editorService: NgxEditorJSService)\n                    \n                \n                        \n                            \n                                Defined in libs/ngx-editorjs/src/lib/directives/ngx-editorjs.directive.ts:85\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        el\n                                                  \n                                                        \n                                                                        ElementRef\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        editorService\n                                                  \n                                                        \n                                                                        NgxEditorJSService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    Inputs\n        \n            \n                \n                    \n                        \n                        autofocus\n                    \n                \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                        \n                            \n                                    Defined in libs/ngx-editorjs/src/lib/directives/ngx-editorjs.directive.ts:35\n                            \n                        \n                \n                    \n                        Sets if the EditorJS component will request autofocus in the browser\n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        autosave\n                    \n                \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                        \n                            \n                                    Defined in libs/ngx-editorjs/src/lib/directives/ngx-editorjs.directive.ts:79\n                            \n                        \n                \n                    \n                        If set, when the EditorJS save is called the Observable of blocks will be updated,\nif set to false on the change Observable will be updated\n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        blocks\n                    \n                \n                \n                    \n                        Type :         Block[]\n\n                    \n                \n                \n                    \n                        Default value : []\n                    \n                \n                        \n                            \n                                    Defined in libs/ngx-editorjs/src/lib/directives/ngx-editorjs.directive.ts:85\n                            \n                        \n                \n                    \n                        An initial set of blocks to render in the component\n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        hideToolbar\n                    \n                \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                        \n                            \n                                    Defined in libs/ngx-editorjs/src/lib/directives/ngx-editorjs.directive.ts:41\n                            \n                        \n                \n                    \n                        Sets if the toolbar will be shown in EditorJS\n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        holder\n                    \n                \n                \n                    \n                        Type :         string\n\n                    \n                \n                        \n                            \n                                    Defined in libs/ngx-editorjs/src/lib/directives/ngx-editorjs.directive.ts:29\n                            \n                        \n                \n                    \n                        The ID of the dom element that will hold the editor\n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        includeTools\n                    \n                \n                \n                    \n                        Type :     string[]\n\n                    \n                \n                \n                    \n                        Default value : []\n                    \n                \n                        \n                            \n                                    Defined in libs/ngx-editorjs/src/lib/directives/ngx-editorjs.directive.ts:72\n                            \n                        \n                \n                    \n                        A string array of tools that will be included in this instance, if empty\nall tools will be included\n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        initialBlock\n                    \n                \n                \n                    \n                        Type :         string\n\n                    \n                \n                        \n                            \n                                    Defined in libs/ngx-editorjs/src/lib/directives/ngx-editorjs.directive.ts:47\n                            \n                        \n                \n                    \n                        The name of the initial block (default \"paragraph\")\n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        minHeight\n                    \n                \n                \n                    \n                        Type :         number\n\n                    \n                \n                        \n                            \n                                    Defined in libs/ngx-editorjs/src/lib/directives/ngx-editorjs.directive.ts:53\n                            \n                        \n                \n                    \n                        Height of Editor's bottom area that allows to set focus on the last Block\n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        placeholder\n                    \n                \n                \n                    \n                        Type :         string\n\n                    \n                \n                        \n                            \n                                    Defined in libs/ngx-editorjs/src/lib/directives/ngx-editorjs.directive.ts:59\n                            \n                        \n                \n                    \n                        First Block placeholder\n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        sanitizer\n                    \n                \n                \n                    \n                        Type :     SanitizerConfig\n\n                    \n                \n                        \n                            \n                                    Defined in libs/ngx-editorjs/src/lib/directives/ngx-editorjs.directive.ts:65\n                            \n                        \n                \n                    \n                        Define default sanitizer configuration\n\n                    \n                \n            \n        \n\n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            createEditor\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    createEditor(config?: EditorJSConfig)\n                \n            \n\n\n            \n                \n                    Defined in libs/ngx-editorjs/src/lib/directives/ngx-editorjs.directive.ts:107\n                \n            \n\n\n            \n                \n                    Creates an EditorJS instance for this directive\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    config\n                                    \n                                                EditorJSConfig\n                                    \n\n                                    \n                                        Yes\n                                    \n\n\n                                    \n                                        Configuration for this instance\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngAfterContentInit\n                        \n                        \n                    \n                \n            \n            \n                \nngAfterContentInit()\n                \n            \n\n\n            \n                \n                    Defined in libs/ngx-editorjs/src/lib/directives/ngx-editorjs.directive.ts:131\n                \n            \n\n\n            \n                \n                    After content is created, we create the editor instance\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngOnChanges\n                        \n                        \n                    \n                \n            \n            \n                \nngOnChanges(changes: SimpleChanges)\n                \n            \n\n\n            \n                \n                    Defined in libs/ngx-editorjs/src/lib/directives/ngx-editorjs.directive.ts:119\n                \n            \n\n\n            \n                \n                    When ngOnChanges are called, there are two paths\nIf it's just blocks, then the service is updated with the blocks\nIf it's any other property it means we create a new editor, as this\nis a destructive process we also need to wait for an existing editor\nto be ready\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    changes\n                                    \n                                                SimpleChanges\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngOnDestroy\n                        \n                        \n                    \n                \n            \n            \n                \nngOnDestroy()\n                \n            \n\n\n            \n                \n                    Defined in libs/ngx-editorjs/src/lib/directives/ngx-editorjs.directive.ts:143\n                \n            \n\n\n            \n                \n                    Destroy the editor and subjects for this service\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n\n            \n    \n        Accessors\n    \n        \n            \n                \n                    \n                        \n                        editor\n                    \n                \n\n                \n                    \n                        geteditor()\n                    \n                \n                            \n                                \n                                    Defined in libs/ngx-editorjs/src/lib/directives/ngx-editorjs.directive.ts:92\n                                \n                            \n                    \n                        \n                                Get the EditorJS instance for this directive\n\n\n                                \n                                    Returns :     Observable\n\n                                \n                        \n                    \n\n            \n        \n        \n            \n                \n                    \n                        \n                        service\n                    \n                \n\n                \n                    \n                        getservice()\n                    \n                \n                            \n                                \n                                    Defined in libs/ngx-editorjs/src/lib/directives/ngx-editorjs.directive.ts:99\n                                \n                            \n                    \n                        \n                                Get the NgxEditorJSService for this directive\n\n\n                                \n                                    Returns :         NgxEditorJSService\n\n                                \n                        \n                    \n\n            \n        \n\n\n    \n\n\n    \n        import { AfterContentInit, Directive, ElementRef, Input, OnChanges, OnDestroy, SimpleChanges } from '@angular/core';\nimport EditorJS, { SanitizerConfig } from '@editorjs/editorjs';\nimport { Observable } from 'rxjs';\nimport { createEditorJSConfig } from '../config/editor-config';\nimport { NgxEditorJSService } from '../services/editorjs.service';\nimport { Block } from '../types/blocks';\nimport { EditorJSConfig } from '../types/config';\n\n/**\n * The main directive of `ngx-editorjs` provides a way to attach\n * an EditorJS instance to any element and control it via\n * Angular services and components\n *\n * To use attach to any element with an `id` property\n *\n * @example\n * \n */\n@Directive({\n  selector: '[ngxEditorJS]'\n})\nexport class NgxEditorJSDirective implements OnDestroy, OnChanges, AfterContentInit {\n  private id: string;\n\n  /**\n   * The ID of the dom element that will hold the editor\n   */\n  @Input()\n  public holder: string;\n\n  /**\n   * Sets if the `EditorJS` component will request autofocus in the browser\n   */\n  @Input()\n  public autofocus: boolean;\n\n  /**\n   * Sets if the toolbar will be shown in `EditorJS`\n   */\n  @Input()\n  public hideToolbar: boolean;\n\n  /**\n   * The name of the initial block (default \"paragraph\")\n   */\n  @Input()\n  public initialBlock: string;\n\n  /**\n   * Height of Editor's bottom area that allows to set focus on the last Block\n   */\n  @Input()\n  public minHeight: number;\n\n  /**\n   * First Block placeholder\n   */\n  @Input()\n  public placeholder: string;\n\n  /**\n   * Define default sanitizer configuration\n   */\n  @Input()\n  public sanitizer: SanitizerConfig;\n\n  /**\n   * A string array of tools that will be included in this instance, if empty\n   * all tools will be included\n   */\n  @Input()\n  public includeTools: string[] = [];\n\n  /**\n   * If set, when the `EditorJS` save is called the `Observable` of blocks will be updated,\n   * if set to `false` on the change `Observable` will be updated\n   */\n  @Input()\n  public autosave: boolean;\n\n  /**\n   * An initial set of blocks to render in the component\n   */\n  @Input()\n  public blocks: Block[] = [];\n\n  constructor(private readonly el: ElementRef, private readonly editorService: NgxEditorJSService) {}\n\n  /**\n   * Get the `EditorJS` instance for this directive\n   */\n  public get editor(): Observable {\n    return this.service.getEditor(this.id);\n  }\n\n  /**\n   * Get the `NgxEditorJSService` for this directive\n   */\n  public get service(): NgxEditorJSService {\n    return this.editorService;\n  }\n\n  /**\n   * Creates an `EditorJS` instance for this directive\n   * @param config Configuration for this instance\n   */\n  public createEditor(config?: EditorJSConfig): void {\n    this.service.createEditor(config, this.includeTools, this.autosave);\n  }\n\n  /**\n   * When ngOnChanges are called, there are two paths\n   * If it's just blocks, then the service is updated with the blocks\n   * If it's any other property it means we create a new editor, as this\n   * is a destructive process we also need to wait for an existing editor\n   * to be ready\n   * @param changes\n   */\n  ngOnChanges(changes: SimpleChanges): void {\n    if (changes.blocks && !changes.blocks.firstChange) {\n      return this.service.update(this.id, changes.blocks.currentValue);\n    }\n    if (this.id) {\n      this.createEditor(this.createConfig());\n    }\n  }\n\n  /**\n   * After content is created, we create the editor instance\n   */\n  ngAfterContentInit() {\n    this.id = this.el.nativeElement.id || this.holder;\n\n    if (!this.id) {\n      throw new Error('Error in NgxEditorJSDirective::ngAfterContentInit - Directive element has no ID');\n    }\n    this.createEditor(this.createConfig());\n  }\n\n  /**\n   * Destroy the editor and subjects for this service\n   */\n  ngOnDestroy() {\n    this.service.destroy(this.id);\n  }\n\n  private createConfig(): EditorJSConfig {\n    const config: EditorJSConfig = createEditorJSConfig({\n      holder: this.id,\n      autofocus: this.autofocus,\n      hideToolbar: this.hideToolbar,\n      initialBlock: this.initialBlock,\n      placeholder: this.placeholder,\n      minHeight: this.minHeight,\n      sanitizer: this.sanitizer\n    });\n    if (this.blocks && this.blocks.length > 0) {\n      config.data = {\n        time: Date.now(),\n        version: EditorJS.version,\n        blocks: this.blocks\n      };\n    }\n    return config;\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/NgxEditorJSEffects.html":{"url":"injectables/NgxEditorJSEffects.html","title":"injectable - NgxEditorJSEffects","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  NgxEditorJSEffects\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            libs/ngx-editorjs-ngrx/src/lib/effects/ngx-editorjs.effects.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                $save\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(actions$: Actions, editorService: NgxEditorJSService)\n                    \n                \n                        \n                            \n                                Defined in libs/ngx-editorjs-ngrx/src/lib/effects/ngx-editorjs.effects.ts:10\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        actions$\n                                                  \n                                                        \n                                                                    Actions\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        editorService\n                                                  \n                                                        \n                                                                        NgxEditorJSService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            $save\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : this.actions$.pipe(\n    ofType(EditorJSActionTypes.SaveStart),\n    map((action: SaveStart) => {\n      this.editorService.save(action.payload.holder);\n      return action;\n    }),\n    withLatestFrom([\n      map((action: SaveStart) => action),\n      (action: SaveStart): Observable => this.editorService.getBlocks(action.payload.holder)\n    ]),\n    mergeMap(([action, blocks]) => {\n      blocks.subscribe();\n      return new SaveEnd({\n        holder: action.payload.holder,\n        data: {\n          time: Date.now(),\n          version: EditorJS.version,\n          blocks: blocks\n        }\n      });\n    })\n  )\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Effect({dispatch: false})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in libs/ngx-editorjs-ngrx/src/lib/effects/ngx-editorjs.effects.ts:14\n                            \n                        \n\n\n            \n        \n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { Effect, Actions, ofType } from '@ngrx/effects';\nimport { NgxEditorJSService, Block } from '@tinynodes/ngx-editorjs';\nimport { EditorJSActionTypes, SaveStart, SaveEnd } from '../actions/ngx-editorjs.actions';\nimport { switchMap, map, withLatestFrom, tap, mergeMap } from 'rxjs/operators';\nimport { Observable } from 'rxjs';\nimport EditorJS from '@editorjs/editorjs';\n\n@Injectable()\nexport class NgxEditorJSEffects {\n  constructor(private readonly actions$: Actions, private readonly editorService: NgxEditorJSService) {}\n\n  @Effect({ dispatch: false })\n  $save = this.actions$.pipe(\n    ofType(EditorJSActionTypes.SaveStart),\n    map((action: SaveStart) => {\n      this.editorService.save(action.payload.holder);\n      return action;\n    }),\n    withLatestFrom([\n      map((action: SaveStart) => action),\n      (action: SaveStart): Observable => this.editorService.getBlocks(action.payload.holder)\n    ]),\n    mergeMap(([action, blocks]) => {\n      blocks.subscribe();\n      return new SaveEnd({\n        holder: action.payload.holder,\n        data: {\n          time: Date.now(),\n          version: EditorJS.version,\n          blocks: blocks\n        }\n      });\n    })\n  );\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/NgxEditorJSModule.html":{"url":"modules/NgxEditorJSModule.html","title":"module - NgxEditorJSModule","body":"\n                   \n\n\n\n\n    Modules\n    NgxEditorJSModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_NgxEditorJSModule\n\n\n\ncluster_NgxEditorJSModule_declarations\n\n\n\ncluster_NgxEditorJSModule_imports\n\n\n\ncluster_NgxEditorJSModule_exports\n\n\n\ncluster_NgxEditorJSModule_providers\n\n\n\n\nNgxEditorJSComponent\n\nNgxEditorJSComponent\n\n\n\nNgxEditorJSModule\n\nNgxEditorJSModule\n\nNgxEditorJSModule -->\n\nNgxEditorJSComponent->NgxEditorJSModule\n\n\n\n\n\nNgxEditorJSDirective\n\nNgxEditorJSDirective\n\nNgxEditorJSModule -->\n\nNgxEditorJSDirective->NgxEditorJSModule\n\n\n\n\n\nEditorJSInstanceModule \n\nEditorJSInstanceModule \n\nEditorJSInstanceModule  -->\n\nNgxEditorJSModule->EditorJSInstanceModule \n\n\n\n\n\nNgxEditorJSComponent \n\nNgxEditorJSComponent \n\nNgxEditorJSComponent  -->\n\nNgxEditorJSModule->NgxEditorJSComponent \n\n\n\n\n\nNgxEditorJSDirective \n\nNgxEditorJSDirective \n\nNgxEditorJSDirective  -->\n\nNgxEditorJSModule->NgxEditorJSDirective \n\n\n\n\n\nEditorJSInstanceModule\n\nEditorJSInstanceModule\n\nNgxEditorJSModule -->\n\nEditorJSInstanceModule->NgxEditorJSModule\n\n\n\n\n\nNgxEditorJSPluginService\n\nNgxEditorJSPluginService\n\nNgxEditorJSModule -->\n\nNgxEditorJSPluginService->NgxEditorJSModule\n\n\n\n\n\nNgxEditorJSService\n\nNgxEditorJSService\n\nNgxEditorJSModule -->\n\nNgxEditorJSService->NgxEditorJSModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            libs/ngx-editorjs/src/lib/ngx-editorjs.module.ts\n        \n\n\n        \n            Description\n        \n        \n            The @tinynodes/ngx-editorjs module provides a collection of features to allow\nany Angular app to use and control an EditorJS instance\nTo use import the module NgxEditorJSModule.forRoot() into the root of your application.\nThe forRoot method takes an optional NgxEditorJSConfig config, this will provide a\ndefault instance.\n\n        \n\n\n        \n            \n                \n                    Declarations\n                    \n                        \n                            NgxEditorJSComponent\n                        \n                        \n                            NgxEditorJSDirective\n                        \n                    \n                \n                \n                    Providers\n                    \n                        \n                            NgxEditorJSPluginService\n                        \n                        \n                            NgxEditorJSService\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            EditorJSInstanceModule\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            EditorJSInstanceModule\n                        \n                        \n                            NgxEditorJSComponent\n                        \n                        \n                            NgxEditorJSDirective\n                        \n                    \n                \n            \n        \n\n        \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Static\n                            forRoot\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    forRoot(config?: NgxEditorJSConfig)\n                \n            \n\n\n            \n                \n                    Defined in libs/ngx-editorjs/src/lib/ngx-editorjs.module.ts:38\n                \n            \n\n\n            \n                \n                    Use this method in the root of the application.  You can pass an optional configuration\nwhich sets some defaults, or use the provided defaults.\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    config\n                                    \n                                                NgxEditorJSConfig\n                                    \n\n                                    \n                                        Yes\n                                    \n\n\n                                    \n                                        The optional configuration to pass\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         ModuleWithProviders\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n    \n\n\n    \n        import { CommonModule } from '@angular/common';\nimport { ModuleWithProviders, NgModule, Optional, SkipSelf } from '@angular/core';\nimport { FormsModule } from '@angular/forms';\nimport { createModuleConfig } from './config/module-config';\nimport { NgxEditorJSComponent } from './containers/editorjs-component/editorjs.component';\nimport { NgxEditorJSDirective } from './directives/ngx-editorjs.directive';\nimport { NgxEditorJSService } from './services/editorjs.service';\nimport { NgxEditorJSPluginService } from './services/plugins.service';\nimport { FOR_ROOT_OPTIONS_TOKEN, NgxEditorJSConfig, NGX_EDITORJS_CONFIG } from './types/config';\nimport { EditorJSInstanceModule } from './utils/editorjs-injector.module';\n\n/**\n * The `@tinynodes/ngx-editorjs` module provides a collection of features to allow\n * any Angular app to use and control an [EditorJS](http://editorjs.io) instance\n *\n * To use import the module `NgxEditorJSModule.forRoot()` into the root of your application.\n * The `forRoot` method takes an optional `NgxEditorJSConfig` config, this will provide a\n * default instance.\n */\n@NgModule({\n  imports: [CommonModule, FormsModule, EditorJSInstanceModule],\n  declarations: [NgxEditorJSComponent, NgxEditorJSDirective],\n  exports: [NgxEditorJSComponent, NgxEditorJSDirective, EditorJSInstanceModule],\n  providers: [NgxEditorJSService, NgxEditorJSPluginService]\n})\nexport class NgxEditorJSModule {\n  constructor(\n    @Optional()\n    @SkipSelf()\n    parentModule: NgxEditorJSModule\n  ) {}\n\n  /**\n   * Use this method in the root of the application.  You can pass an optional configuration\n   * which sets some defaults, or use the provided defaults.\n   * @param config The optional configuration to pass\n   */\n  static forRoot(@Optional() config?: NgxEditorJSConfig): ModuleWithProviders {\n    return {\n      ngModule: NgxEditorJSModule,\n      providers: [\n        {\n          provide: FOR_ROOT_OPTIONS_TOKEN,\n          useValue: config\n        },\n        {\n          provide: NGX_EDITORJS_CONFIG,\n          useFactory: createModuleConfig,\n          deps: [FOR_ROOT_OPTIONS_TOKEN]\n        }\n      ]\n    };\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/NgxEditorJSPluginService.html":{"url":"injectables/NgxEditorJSPluginService.html","title":"injectable - NgxEditorJSPluginService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  NgxEditorJSPluginService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            libs/ngx-editorjs/src/lib/services/plugins.service.ts\n        \n\n            \n                Description\n            \n            \n                The plugin service provides a singleton to store all plugins injected into the application\nand makes them available for all instances of EditorJS\n\n            \n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                add\n                            \n                            \n                                    Public\n                                get\n                            \n                            \n                                    Public\n                                getTools\n                            \n                            \n                                    Public\n                                remove\n                            \n                        \n                    \n                \n\n\n\n\n\n                    \n                        \n                            Accessors\n                        \n                    \n                    \n                        \n                            \n                                \n                                    plugins\n                                \n                            \n                        \n                    \n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(userPlugins: PluginConfig)\n                    \n                \n                        \n                            \n                                Defined in libs/ngx-editorjs/src/lib/services/plugins.service.ts:15\n                            \n                        \n\n                \n                    \n                            When the class is initialized the initial plugins and any user plugins\nwill be passed in and merged and stored in the config map\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        userPlugins\n                                                  \n                                                        \n                                                                        PluginConfig\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                User plugins injected into the application\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            add\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    add(key: string, plugin: BasePlugin)\n                \n            \n\n\n            \n                \n                    Defined in libs/ngx-editorjs/src/lib/services/plugins.service.ts:32\n                \n            \n\n\n            \n                \n                    Add a plugin to the store\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    key\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        The key for the map to store the plugin\n\n                                    \n                                \n                                \n                                    plugin\n                                    \n                                                BasePlugin\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        The plugin instance to add to the service\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            get\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    get(key: string)\n                \n            \n\n\n            \n                \n                    Defined in libs/ngx-editorjs/src/lib/services/plugins.service.ts:49\n                \n            \n\n\n            \n                \n                    Get a single plugin from the map\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    key\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         BasePlugin\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            getTools\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    getTools(exclude: string[])\n                \n            \n\n\n            \n                \n                    Defined in libs/ngx-editorjs/src/lib/services/plugins.service.ts:64\n                \n            \n\n\n            \n                \n                    Returns a map of tools to be initialized by the editor\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Default value\n                                    Description\n                                \n                            \n                            \n                                \n                                    exclude\n                                    \n                                            string[]\n                                    \n\n                                    \n                                        No\n                                    \n\n                                    \n                                        []\n                                    \n\n                                    \n                                        Optional array of keys to exclude from the map\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         ToolSettingsMap\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            remove\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    remove(key: string)\n                \n            \n\n\n            \n                \n                    Defined in libs/ngx-editorjs/src/lib/services/plugins.service.ts:40\n                \n            \n\n\n            \n                \n                    Remove a plugin from the store\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    key\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n            \n    \n        Accessors\n    \n        \n            \n                \n                    \n                        \n                        plugins\n                    \n                \n\n                \n                    \n                        getplugins()\n                    \n                \n                            \n                                \n                                    Defined in libs/ngx-editorjs/src/lib/services/plugins.service.ts:56\n                                \n                            \n                    \n                        \n                                Returns a map of all the plugins registered with this service\n\n\n                                \n                                    Returns :         PluginConfig\n\n                                \n                        \n                    \n\n            \n        \n\n    \n\n\n    \n        import { Inject, Injectable } from '@angular/core';\nimport { BasePlugin, PluginConfig, ToolSettingsMap, UserPlugins } from '../types/plugins';\n\n/**\n * The plugin service provides a singleton to store all plugins injected into the application\n * and makes them available for all instances of `EditorJS`\n */\n@Injectable({\n  providedIn: 'root'\n})\nexport class NgxEditorJSPluginService {\n  /**\n   * Object map of the plugin configurations\n   */\n  private pluginsMap: PluginConfig = {};\n\n  /**\n   * When the class is initialized the initial plugins and any user plugins\n   * will be passed in and merged and stored in the config map\n   * @param initialPlugins Default plugins produced by the module\n   * @param userPlugins User plugins injected into the application\n   */\n  constructor(@Inject(UserPlugins) userPlugins: PluginConfig) {\n    Object.entries({ ...userPlugins }).forEach(([key, tool]) => this.add(key, tool));\n  }\n\n  /**\n   * Add a plugin to the store\n   * @param key The key for the map to store the plugin\n   * @param plugin The plugin instance to add to the service\n   */\n  public add(key: string, plugin: BasePlugin) {\n    this.pluginsMap[key] = plugin;\n  }\n\n  /**\n   * Remove a plugin from the store\n   * @param key\n   */\n  public remove(key: string) {\n    this.pluginsMap[key] = null;\n    delete this.pluginsMap[key];\n  }\n\n  /**\n   * Get a single plugin from the map\n   * @param name\n   */\n  public get(key: string): BasePlugin {\n    return this.pluginsMap[key];\n  }\n\n  /**\n   * Returns a map of all the plugins registered with this service\n   */\n  public get plugins(): PluginConfig {\n    return this.pluginsMap;\n  }\n\n  /**\n   * Returns a map of tools to be initialized by the editor\n   * @param exclude Optional array of keys to exclude from the map\n   */\n  public getTools(exclude: string[] = []): ToolSettingsMap {\n    return Object.entries(this.pluginsMap)\n      .filter(([key]) => {\n        return !exclude.includes(key);\n      })\n      .reduce((finalTools, [key, plugin]) => {\n        if (plugin.shortcut) {\n          return {\n            [key]: {\n              class: plugin.plugin(),\n              shortcut: plugin.shortcut()\n            },\n            ...finalTools\n          };\n        } else {\n          return { [key]: plugin.plugin(), ...finalTools };\n        }\n      }, {});\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/NgxEditorJSService.html":{"url":"injectables/NgxEditorJSService.html","title":"injectable - NgxEditorJSService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  NgxEditorJSService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            libs/ngx-editorjs/src/lib/services/editorjs.service.ts\n        \n\n            \n                Description\n            \n            \n                The NgxEditorJSService provides control EditorJS instances via Angular.\n\n            \n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                clear\n                            \n                            \n                                    Public\n                                    Async\n                                createEditor\n                            \n                            \n                                    Public\n                                destroy\n                            \n                            \n                                    Public\n                                getBlocks\n                            \n                            \n                                    Public\n                                getEditor\n                            \n                            \n                                    Public\n                                hasChanged\n                            \n                            \n                                    Public\n                                isReady\n                            \n                            \n                                    Public\n                                save\n                            \n                            \n                                    Public\n                                update\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(config: NgxEditorJSConfig, editorService: EditorJSInstanceService, plugins: NgxEditorJSPluginService, zone: NgZone)\n                    \n                \n                        \n                            \n                                Defined in libs/ngx-editorjs/src/lib/services/editorjs.service.ts:16\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        config\n                                                  \n                                                        \n                                                                        NgxEditorJSConfig\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        editorService\n                                                  \n                                                        \n                                                                        EditorJSInstanceService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        plugins\n                                                  \n                                                        \n                                                                        NgxEditorJSPluginService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        zone\n                                                  \n                                                        \n                                                                        NgZone\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            clear\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    clear(holder: string)\n                \n            \n\n\n            \n                \n                    Defined in libs/ngx-editorjs/src/lib/services/editorjs.service.ts:121\n                \n            \n\n\n            \n                \n                    Clears all blocks from an EditorJS instance\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    holder\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        The ID of the holder of the instance\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            Async\n                            createEditor\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    createEditor(config: EditorJSConfig, includeTools?: string[], autoSave)\n                \n            \n\n\n            \n                \n                    Defined in libs/ngx-editorjs/src/lib/services/editorjs.service.ts:31\n                \n            \n\n\n            \n                \n                    This method creates a new EditorJS instance\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Default value\n                                    Description\n                                \n                            \n                            \n                                \n                                    config\n                                    \n                                                EditorJSConfig\n                                    \n\n                                    \n                                        No\n                                    \n\n                                    \n                                    \n\n                                    \n                                    \n                                \n                                \n                                    includeTools\n                                    \n                                            string[]\n                                    \n\n                                    \n                                        Yes\n                                    \n\n                                    \n                                    \n\n                                    \n                                    \n                                \n                                \n                                    autoSave\n                                    \n                                    \n\n                                    \n                                        No\n                                    \n\n                                    \n                                        false\n                                    \n\n                                    \n                                        When an instance changes we update the block map, set to false if you want to disable\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            destroy\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    destroy(holder: string)\n                \n            \n\n\n            \n                \n                    Defined in libs/ngx-editorjs/src/lib/services/editorjs.service.ts:131\n                \n            \n\n\n            \n                \n                    Destroy the EditorJS instance\nIt also calls the maps and sets their values back to their defaults and then\ncompletes and destroys them\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    holder\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        The ID of the holder of the instance\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            getBlocks\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    getBlocks(holder: string)\n                \n            \n\n\n            \n                \n                    Defined in libs/ngx-editorjs/src/lib/services/editorjs.service.ts:54\n                \n            \n\n\n            \n                \n                    Get an observable of the blocks for an EditorJS instance\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    holder\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        The ID of the holder of the instance\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Observable\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            getEditor\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    getEditor(holder: string)\n                \n            \n\n\n            \n                \n                    Defined in libs/ngx-editorjs/src/lib/services/editorjs.service.ts:46\n                \n            \n\n\n            \n                \n                    Get an EditorJS instance\nSee the EditorJS API docs for more details\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    holder\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        The ID of the holder of the instance\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Observable\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            hasChanged\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    hasChanged(holder: string)\n                \n            \n\n\n            \n                \n                    Defined in libs/ngx-editorjs/src/lib/services/editorjs.service.ts:72\n                \n            \n\n\n            \n                \n                    Returns an Observable of the current timestamp of the last change\nthis can be subscribed to before calling the createEditor method\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    holder\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Observable\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            isReady\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    isReady(holder: string)\n                \n            \n\n\n            \n                \n                    Defined in libs/ngx-editorjs/src/lib/services/editorjs.service.ts:63\n                \n            \n\n\n            \n                \n                    Returns an Observable of the current ready state, this can be subscribed to before calling\nthe createEditor method\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    holder\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Observable\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            save\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    save(holder: string)\n                \n            \n\n\n            \n                \n                    Defined in libs/ngx-editorjs/src/lib/services/editorjs.service.ts:113\n                \n            \n\n\n            \n                \n                    Calls the EditorJS save method which returns an OutputData object.\nFrom this the service updates the blocks map and change map values\nIf there is no instance of that name it will throw an error.\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    holder\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        The ID of the holder of the instance\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            update\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    update(holder: string, blocks: Block[])\n                \n            \n\n\n            \n                \n                    Defined in libs/ngx-editorjs/src/lib/services/editorjs.service.ts:82\n                \n            \n\n\n            \n                \n                    This method updates the blocks within the EditorJS instance.\nIf there is no instance of that name it will throw an error.\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    holder\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        The ID of the holder of the instance\n\n                                    \n                                \n                                \n                                    blocks\n                                    \n                                                Block[]\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        The array of Block elements to render\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Inject, Injectable, NgZone } from '@angular/core';\nimport EditorJS, { EditorConfig } from '@editorjs/editorjs';\nimport { Observable } from 'rxjs';\nimport { filter } from 'rxjs/operators';\nimport { Block } from '../types/blocks';\nimport { EditorJSConfig, NgxEditorJSConfig, NGX_EDITORJS_CONFIG } from '../types/config';\nimport { EditorJSInstanceService } from '../utils/editorjs-injector';\nimport { NgxEditorJSPluginService } from './plugins.service';\n\n/**\n * The NgxEditorJSService provides control EditorJS instances via Angular.\n */\n@Injectable({\n  providedIn: 'root'\n})\nexport class NgxEditorJSService {\n  constructor(\n    @Inject(NGX_EDITORJS_CONFIG) private config: NgxEditorJSConfig,\n    private readonly editorService: EditorJSInstanceService,\n    private readonly plugins: NgxEditorJSPluginService,\n    private zone: NgZone\n  ) {}\n\n  /**\n   * This method creates a new EditorJS instance\n   * @param holder The ID of the holder of the instance\n   * @param blocks Optional initial set of blocks to render in the editor\n   * @param excludeTools String array of keys to not include with this editor\n   * @param autoSave When an instance changes we update the block map, set to false if you want to disable\n   */\n  public async createEditor(config: EditorJSConfig, includeTools?: string[], autoSave = false): Promise {\n    const options: EditorConfig = {\n      ...this.config.editorjs,\n      ...config,\n      tools: this.plugins.getTools(includeTools)\n    };\n\n    await this.editorService.createInstance(options);\n  }\n\n  /**\n   * Get an `EditorJS` instance\n   * See the [EditorJS API](https://editorjs.io/api) docs for more details\n   * @param holder The ID of the holder of the instance\n   */\n  public getEditor(holder: string): Observable {\n    return this.editorService.getInstance(holder).pipe(filter(editor => typeof editor !== 'undefined'));\n  }\n\n  /**\n   * Get an observable of the blocks for an `EditorJS` instance\n   * @param holder The ID of the holder of the instance\n   */\n  public getBlocks(holder: string): Observable {\n    return this.editorService.getBlocks(holder);\n  }\n\n  /**\n   * Returns an `Observable` of the current ready state, this can be subscribed to before calling\n   * the `createEditor` method\n   * @param holder\n   */\n  public isReady(holder: string): Observable {\n    return this.editorService.getReady(holder);\n  }\n\n  /**\n   * Returns an `Observable` of the current timestamp of the last change\n   * this can be subscribed to before calling the `createEditor` method\n   * @param holder\n   */\n  public hasChanged(holder: string): Observable {\n    return this.editorService.getChanged(holder);\n  }\n\n  /**\n   * This method updates the blocks within the `EditorJS` instance.\n   * If there is no instance of that name it will throw an error.\n   * @param holder The ID of the holder of the instance\n   * @param blocks The array of `Block` elements to render\n   */\n  public update(holder: string, blocks: Block[]) {\n    this.editorService.update(holder, blocks);\n    // const updateDone$ = new Subject();\n    // combineLatest([this.isReady(holder), this.getEditor(holder)])\n    //   .pipe(\n    //     takeUntil(updateDone$),\n    //     filter(([ready, editor]) => ready && typeof editor !== 'undefined')\n    //   )\n    //   .subscribe(([ready, editor]) => {\n    //     if (!ready || !editor) {\n    //       return;\n    //     }\n    //     if (ready && editor) {\n    //       (editor as any).render({\n    //         blocks,\n    //         time: Date.now(),\n    //         version: EditorJS.version\n    //       });\n\n    //       updateDone$.next(true);\n    //       updateDone$.complete();\n    //     }\n    //   });\n  }\n\n  /**\n   * Calls the `EditorJS` save method which returns an `OutputData` object.\n   * From this the service updates the blocks map and change map values\n   * If there is no instance of that name it will throw an error.\n   * @param holder The ID of the holder of the instance\n   */\n  public save(holder: string): void {\n    this.editorService.save(holder);\n  }\n\n  /**\n   * Clears all blocks from an `EditorJS instance`\n   * @param holder The ID of the holder of the instance\n   */\n  public clear(holder: string): void {\n    this.editorService.clear(holder);\n  }\n\n  /**\n   * Destroy the `EditorJS` instance\n   * It also calls the maps and sets their values back to their defaults and then\n   * completes and destroys them\n   * @param holder The ID of the holder of the instance\n   */\n  public destroy(holder: string): void {\n    this.editorService.destroyInstance(holder);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/NgxEditorjsDemoModule.html":{"url":"modules/NgxEditorjsDemoModule.html","title":"module - NgxEditorjsDemoModule","body":"\n                   \n\n\n\n\n    Modules\n    NgxEditorjsDemoModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_NgxEditorjsDemoModule\n\n\n\ncluster_NgxEditorjsDemoModule_declarations\n\n\n\ncluster_NgxEditorjsDemoModule_imports\n\n\n\ncluster_NgxEditorjsDemoModule_exports\n\n\n\n\nPageContainerComponent\n\nPageContainerComponent\n\n\n\nNgxEditorjsDemoModule\n\nNgxEditorjsDemoModule\n\nNgxEditorjsDemoModule -->\n\nPageContainerComponent->NgxEditorjsDemoModule\n\n\n\n\n\nPageContainerComponent \n\nPageContainerComponent \n\nPageContainerComponent  -->\n\nNgxEditorjsDemoModule->PageContainerComponent \n\n\n\n\n\nPageStoreModule \n\nPageStoreModule \n\nPageStoreModule  -->\n\nNgxEditorjsDemoModule->PageStoreModule \n\n\n\n\n\nMaterialModule\n\nMaterialModule\n\nNgxEditorjsDemoModule -->\n\nMaterialModule->NgxEditorjsDemoModule\n\n\n\n\n\nNgxEditorJSModule\n\nNgxEditorJSModule\n\nNgxEditorjsDemoModule -->\n\nNgxEditorJSModule->NgxEditorjsDemoModule\n\n\n\n\n\nNgxTinynodesCoreModule\n\nNgxTinynodesCoreModule\n\nNgxEditorjsDemoModule -->\n\nNgxTinynodesCoreModule->NgxEditorjsDemoModule\n\n\n\n\n\nPageStoreModule\n\nPageStoreModule\n\nNgxEditorjsDemoModule -->\n\nPageStoreModule->NgxEditorjsDemoModule\n\n\n\n\n\nPluginCodeModule\n\nPluginCodeModule\n\nNgxEditorjsDemoModule -->\n\nPluginCodeModule->NgxEditorjsDemoModule\n\n\n\n\n\nPluginHeaderModule\n\nPluginHeaderModule\n\nNgxEditorjsDemoModule -->\n\nPluginHeaderModule->NgxEditorjsDemoModule\n\n\n\n\n\nPluginLinkModule\n\nPluginLinkModule\n\nNgxEditorjsDemoModule -->\n\nPluginLinkModule->NgxEditorjsDemoModule\n\n\n\n\n\nPluginListModule\n\nPluginListModule\n\nNgxEditorjsDemoModule -->\n\nPluginListModule->NgxEditorjsDemoModule\n\n\n\n\n\nPluginMarkerModule\n\nPluginMarkerModule\n\nNgxEditorjsDemoModule -->\n\nPluginMarkerModule->NgxEditorjsDemoModule\n\n\n\n\n\nPluginParagraphModule\n\nPluginParagraphModule\n\nNgxEditorjsDemoModule -->\n\nPluginParagraphModule->NgxEditorjsDemoModule\n\n\n\n\n\nPluginSimpleImageModule\n\nPluginSimpleImageModule\n\nNgxEditorjsDemoModule -->\n\nPluginSimpleImageModule->NgxEditorjsDemoModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            libs/ngx-editorjs-demo/src/lib/ngx-editorjs-demo.module.ts\n        \n\n\n\n\n        \n            \n                \n                    Declarations\n                    \n                        \n                            PageContainerComponent\n                        \n                    \n                \n                \n                    EntryComponents\n                    \n                        \n                            PageContainerComponent\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            MaterialModule\n                        \n                        \n                            NgxEditorJSModule\n                        \n                        \n                            NgxTinynodesCoreModule\n                        \n                        \n                            PageStoreModule\n                        \n                        \n                            PluginCodeModule\n                        \n                        \n                            PluginHeaderModule\n                        \n                        \n                            PluginLinkModule\n                        \n                        \n                            PluginListModule\n                        \n                        \n                            PluginMarkerModule\n                        \n                        \n                            PluginParagraphModule\n                        \n                        \n                            PluginSimpleImageModule\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            PageContainerComponent\n                        \n                        \n                            PageStoreModule\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\nimport { ReactiveFormsModule } from '@angular/forms';\nimport { MatButtonModule, MatCardModule, MatGridListModule, MatExpansionModule } from '@angular/material';\nimport { RouterModule } from '@angular/router';\nimport { NgxEditorJSModule, UserPlugins } from '@tinynodes/ngx-editorjs';\nimport {\n  PluginCodeModule,\n  PluginHeaderModule,\n  PluginLinkModule,\n  PluginListModule,\n  PluginMarkerModule,\n  PluginParagraphModule,\n  PluginSimpleImageModule\n} from '@tinynodes/ngx-editorjs-plugins';\nimport { MarkdownModule } from 'ngx-markdown';\nimport { createNgxEditorJSDemoTools } from './config';\nimport { PageContainerComponent } from './containers/page-container/page-container.component';\nimport { ngxEditorjsDemoRoutes } from './ngx-editorjs-demo.routes';\nimport { PageStoreModule } from './store/pages/pages.module';\nimport { MaterialModule } from 'apps/ngx-tinynodes/src/app/material.module';\nimport { NgxTinynodesCoreModule } from '@tinynodes/ngx-tinynodes-core/src';\n\n@NgModule({\n  imports: [\n    CommonModule,\n    RouterModule.forChild(ngxEditorjsDemoRoutes),\n    MarkdownModule.forChild(),\n    ReactiveFormsModule,\n    PageStoreModule,\n    NgxEditorJSModule,\n    PluginHeaderModule,\n    PluginParagraphModule,\n    PluginListModule,\n    PluginCodeModule,\n    PluginSimpleImageModule,\n    PluginLinkModule,\n    PluginMarkerModule,\n    MaterialModule,\n    MatCardModule,\n    MatButtonModule,\n    NgxTinynodesCoreModule,\n    MatGridListModule,\n    MatExpansionModule\n  ],\n  providers: [\n    {\n      provide: UserPlugins,\n      useFactory: createNgxEditorJSDemoTools\n    }\n  ],\n  declarations: [PageContainerComponent],\n  exports: [PageStoreModule, PageContainerComponent],\n  entryComponents: [PageContainerComponent]\n})\nexport class NgxEditorjsDemoModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/NgxEditorjsNgrxModule.html":{"url":"modules/NgxEditorjsNgrxModule.html","title":"module - NgxEditorjsNgrxModule","body":"\n                   \n\n\n\n\n    Modules\n    NgxEditorjsNgrxModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_NgxEditorjsNgrxModule\n\n\n\ncluster_NgxEditorjsNgrxModule_imports\n\n\n\n\nNgxEditorJSModule\n\nNgxEditorJSModule\n\n\n\nNgxEditorjsNgrxModule\n\nNgxEditorjsNgrxModule\n\nNgxEditorjsNgrxModule -->\n\nNgxEditorJSModule->NgxEditorjsNgrxModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            libs/ngx-editorjs-ngrx/src/lib/ngx-editorjs-ngrx.module.ts\n        \n\n\n        \n            Description\n        \n        \n            Warning: This module is current in development and not yet published\nThis module provides a set of NGRX Effects that allow you to control\nan EditorJS instance via store actions.\n\n        \n\n\n        \n            \n                \n                    Imports\n                    \n                        \n                            NgxEditorJSModule\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { EffectsModule } from '@ngrx/effects';\nimport { NgxEditorJSModule } from '@tinynodes/ngx-editorjs';\n\n/**\n * **Warning**: This module is current in development and not yet published\n *\n * This module provides a set of [NGRX Effects](https://ngrx.io/guide/effects) that allow you to control\n * an `EditorJS` instance via store actions.\n */\n@NgModule({\n  imports: [CommonModule, NgxEditorJSModule, EffectsModule.forFeature([])]\n})\nexport class NgxEditorjsNgrxModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/NgxEditorjsPluginsModule.html":{"url":"modules/NgxEditorjsPluginsModule.html","title":"module - NgxEditorjsPluginsModule","body":"\n                   \n\n\n\n\n    Modules\n    NgxEditorjsPluginsModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_NgxEditorjsPluginsModule\n\n\n\ncluster_NgxEditorjsPluginsModule_imports\n\n\n\ncluster_NgxEditorjsPluginsModule_exports\n\n\n\n\nPluginCodeModule\n\nPluginCodeModule\n\n\n\nNgxEditorjsPluginsModule\n\nNgxEditorjsPluginsModule\n\nNgxEditorjsPluginsModule -->\n\nPluginCodeModule->NgxEditorjsPluginsModule\n\n\n\n\n\nPluginHeaderModule\n\nPluginHeaderModule\n\nNgxEditorjsPluginsModule -->\n\nPluginHeaderModule->NgxEditorjsPluginsModule\n\n\n\n\n\nPluginImageModule\n\nPluginImageModule\n\nNgxEditorjsPluginsModule -->\n\nPluginImageModule->NgxEditorjsPluginsModule\n\n\n\n\n\nPluginLinkModule\n\nPluginLinkModule\n\nNgxEditorjsPluginsModule -->\n\nPluginLinkModule->NgxEditorjsPluginsModule\n\n\n\n\n\nPluginListModule\n\nPluginListModule\n\nNgxEditorjsPluginsModule -->\n\nPluginListModule->NgxEditorjsPluginsModule\n\n\n\n\n\nPluginMarkerModule\n\nPluginMarkerModule\n\nNgxEditorjsPluginsModule -->\n\nPluginMarkerModule->NgxEditorjsPluginsModule\n\n\n\n\n\nPluginParagraphModule\n\nPluginParagraphModule\n\nNgxEditorjsPluginsModule -->\n\nPluginParagraphModule->NgxEditorjsPluginsModule\n\n\n\n\n\nPluginSimpleImageModule\n\nPluginSimpleImageModule\n\nNgxEditorjsPluginsModule -->\n\nPluginSimpleImageModule->NgxEditorjsPluginsModule\n\n\n\n\n\nPluginCodeModule \n\nPluginCodeModule \n\nPluginCodeModule  -->\n\nNgxEditorjsPluginsModule->PluginCodeModule \n\n\n\n\n\nPluginHeaderModule \n\nPluginHeaderModule \n\nPluginHeaderModule  -->\n\nNgxEditorjsPluginsModule->PluginHeaderModule \n\n\n\n\n\nPluginImageModule \n\nPluginImageModule \n\nPluginImageModule  -->\n\nNgxEditorjsPluginsModule->PluginImageModule \n\n\n\n\n\nPluginLinkModule \n\nPluginLinkModule \n\nPluginLinkModule  -->\n\nNgxEditorjsPluginsModule->PluginLinkModule \n\n\n\n\n\nPluginListModule \n\nPluginListModule \n\nPluginListModule  -->\n\nNgxEditorjsPluginsModule->PluginListModule \n\n\n\n\n\nPluginMarkerModule \n\nPluginMarkerModule \n\nPluginMarkerModule  -->\n\nNgxEditorjsPluginsModule->PluginMarkerModule \n\n\n\n\n\nPluginParagraphModule \n\nPluginParagraphModule \n\nPluginParagraphModule  -->\n\nNgxEditorjsPluginsModule->PluginParagraphModule \n\n\n\n\n\nPluginSimpleImageModule \n\nPluginSimpleImageModule \n\nPluginSimpleImageModule  -->\n\nNgxEditorjsPluginsModule->PluginSimpleImageModule \n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            libs/ngx-editorjs-plugins/src/lib/ngx-editorjs-plugins.module.ts\n        \n\n\n        \n            Description\n        \n        \n            The NgxEditorjsPluginsModule provides several additional modules\nthat provide a way to easily plug in block and inline tools for EditorJS.\nImporting NgxEditorjsPluginsModule will include all modules, while it\nis also possible to import each individual module as required.\n\n        \n\n\n        \n            \n                \n                    Imports\n                    \n                        \n                            PluginCodeModule\n                        \n                        \n                            PluginHeaderModule\n                        \n                        \n                            PluginImageModule\n                        \n                        \n                            PluginLinkModule\n                        \n                        \n                            PluginListModule\n                        \n                        \n                            PluginMarkerModule\n                        \n                        \n                            PluginParagraphModule\n                        \n                        \n                            PluginSimpleImageModule\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            PluginCodeModule\n                        \n                        \n                            PluginHeaderModule\n                        \n                        \n                            PluginImageModule\n                        \n                        \n                            PluginLinkModule\n                        \n                        \n                            PluginListModule\n                        \n                        \n                            PluginMarkerModule\n                        \n                        \n                            PluginParagraphModule\n                        \n                        \n                            PluginSimpleImageModule\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\nimport { PluginCodeModule } from './plugins/code/code.module';\nimport { PluginHeaderModule } from './plugins/header/header.module';\nimport { PluginImageModule } from './plugins/image/image.module';\nimport { PluginLinkModule } from './plugins/link/link.module';\nimport { PluginListModule } from './plugins/list/list.module';\nimport { PluginMarkerModule } from './plugins/marker/marker.module';\nimport { PluginParagraphModule } from './plugins/paragraph/paragraph.module';\nimport { PluginSimpleImageModule } from './plugins/simple-image/simple-image.module';\n\n/**\n * The `NgxEditorjsPluginsModule` provides several additional modules\n * that provide a way to easily plug in block and inline tools for `EditorJS`.\n *\n * Importing `NgxEditorjsPluginsModule` will include all modules, while it\n * is also possible to import each individual module as required.\n */\n@NgModule({\n  imports: [\n    CommonModule,\n    PluginCodeModule,\n    PluginHeaderModule,\n    PluginImageModule,\n    PluginLinkModule,\n    PluginListModule,\n    PluginMarkerModule,\n    PluginParagraphModule,\n    PluginSimpleImageModule\n  ],\n  exports: [\n    PluginCodeModule,\n    PluginHeaderModule,\n    PluginImageModule,\n    PluginLinkModule,\n    PluginListModule,\n    PluginMarkerModule,\n    PluginParagraphModule,\n    PluginSimpleImageModule\n  ]\n})\nexport class NgxEditorjsPluginsModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/NgxHideableHeaderDemoModule.html":{"url":"modules/NgxHideableHeaderDemoModule.html","title":"module - NgxHideableHeaderDemoModule","body":"\n                   \n\n\n\n\n    Modules\n    NgxHideableHeaderDemoModule\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            libs/ngx-hideable-header-demo/src/lib/ngx-hideable-header-demo.module.ts\n        \n\n\n\n\n        \n            \n            \n        \n\n\n    \n\n\n    \n        import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { RouterModule, Route } from '@angular/router';\n\nexport const ngxHideableHeaderDemoRoutes: Route[] = [];\n\n@NgModule({\n  imports: [CommonModule, RouterModule]\n})\nexport class NgxHideableHeaderDemoModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/NgxTinynodesCoreModule.html":{"url":"modules/NgxTinynodesCoreModule.html","title":"module - NgxTinynodesCoreModule","body":"\n                   \n\n\n\n\n    Modules\n    NgxTinynodesCoreModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_NgxTinynodesCoreModule\n\n\n\ncluster_NgxTinynodesCoreModule_imports\n\n\n\ncluster_NgxTinynodesCoreModule_exports\n\n\n\n\nApplicationDataModule\n\nApplicationDataModule\n\n\n\nNgxTinynodesCoreModule\n\nNgxTinynodesCoreModule\n\nNgxTinynodesCoreModule -->\n\nApplicationDataModule->NgxTinynodesCoreModule\n\n\n\n\n\nApplicationDataModule \n\nApplicationDataModule \n\nApplicationDataModule  -->\n\nNgxTinynodesCoreModule->ApplicationDataModule \n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            libs/ngx-tinynodes-core/src/lib/ngx-tinynodes-core.module.ts\n        \n\n\n        \n            Description\n        \n        \n            This module provides all the core features across the Tinynodes site\nthat need shared.\nThis includes the ApplicationDataModule which provides state and data loading via\nthe AppService\n\n        \n\n\n        \n            \n                \n                    Imports\n                    \n                        \n                            ApplicationDataModule\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            ApplicationDataModule\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { NgModule } from '@angular/core';\nimport { ApplicationDataModule } from './stores/app/application.module';\n\n/**\n * This module provides all the core features across the Tinynodes site\n * that need shared.\n *\n * This includes the `ApplicationDataModule` which provides state and data loading via\n * the `AppService`\n */\n@NgModule({\n  imports: [ApplicationDataModule],\n  exports: [ApplicationDataModule]\n})\nexport class NgxTinynodesCoreModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/NotReady.html":{"url":"classes/NotReady.html","title":"class - NotReady","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  NotReady\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            libs/ngx-editorjs-ngrx/src/lib/actions/ngx-editorjs.actions.ts\n        \n\n\n\n            \n                Implements\n            \n            \n                        Action\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                payload\n                            \n                            \n                                    Readonly\n                                type\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(payload: literal type)\n                    \n                \n                        \n                            \n                                Defined in libs/ngx-editorjs-ngrx/src/lib/actions/ngx-editorjs.actions.ts:23\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        payload\n                                                  \n                                                        \n                                                                    literal type\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            payload\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     literal type\n\n                        \n                    \n                        \n                            \n                                    Defined in libs/ngx-editorjs-ngrx/src/lib/actions/ngx-editorjs.actions.ts:24\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                            type\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : EditorJSActionTypes.NotReady\n                        \n                    \n                        \n                            \n                                    Defined in libs/ngx-editorjs-ngrx/src/lib/actions/ngx-editorjs.actions.ts:23\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { Action } from '@ngrx/store';\nimport { OutputData } from '@editorjs/editorjs';\n\nexport enum EditorJSActionTypes {\n  SaveStart = '[ngx-editorjs] Start Save',\n  SaveEnd = '[ngx-editorjs] Start End',\n  NotReady = '[ngx-editorjs] Not Ready',\n  Ready = '[ngx-editorjs] Ready',\n  Changed = '[ngx-editorjs] Changed'\n}\n\nexport class SaveStart implements Action {\n  readonly type = EditorJSActionTypes.SaveStart;\n  constructor(public payload: { holder: string }) {}\n}\n\nexport class SaveEnd implements Action {\n  readonly type = EditorJSActionTypes.SaveEnd;\n  constructor(public payload: { holder: string; data: OutputData }) {}\n}\n\nexport class NotReady implements Action {\n  readonly type = EditorJSActionTypes.NotReady;\n  constructor(public payload: { holder: string }) {}\n}\n\nexport class Ready implements Action {\n  readonly type = EditorJSActionTypes.Ready;\n  constructor(public payload: { holder: string }) {}\n}\n\nexport class Changed implements Action {\n  readonly type = EditorJSActionTypes.Changed;\n  constructor(public payload: { holder: string; data: OutputData }) {}\n}\n\nexport type NgxEditorJSActions = SaveStart | SaveEnd | NotReady | Ready | Changed;\n\n    \n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/Page.html":{"url":"interfaces/Page.html","title":"interface - Page","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  Page\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            libs/ngx-editorjs-demo/src/lib/store/pages/pages.models.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        blocks\n                                \n                                \n                                        id\n                                \n                                \n                                        pageTags\n                                \n                                \n                                        pageTitle\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        blocks\n                                    \n                                \n                                \n                                    \n                                        blocks:     PageBlock[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     PageBlock[]\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        id\n                                    \n                                \n                                \n                                    \n                                        id:     ID\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     ID\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        pageTags\n                                    \n                                \n                                \n                                    \n                                        pageTags:         Tag[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         Tag[]\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        pageTitle\n                                    \n                                \n                                \n                                    \n                                        pageTitle:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { ID } from '@datorama/akita';\nimport { Block } from '@tinynodes/ngx-editorjs';\n\nexport interface Tag {\n  key: string;\n}\n\nexport interface PageBlock extends Block {\n  id: ID;\n}\n\nexport interface Page {\n  id: ID;\n  pageTitle: string;\n  pageTags: Tag[];\n  blocks: PageBlock[];\n}\n\n    \n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/PageBlock.html":{"url":"interfaces/PageBlock.html","title":"interface - PageBlock","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  PageBlock\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            libs/ngx-editorjs-demo/src/lib/store/pages/pages.models.ts\n        \n\n\n            \n                Extends\n            \n            \n                        Block\n            \n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        id\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        id\n                                    \n                                \n                                \n                                    \n                                        id:     ID\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     ID\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { ID } from '@datorama/akita';\nimport { Block } from '@tinynodes/ngx-editorjs';\n\nexport interface Tag {\n  key: string;\n}\n\nexport interface PageBlock extends Block {\n  id: ID;\n}\n\nexport interface Page {\n  id: ID;\n  pageTitle: string;\n  pageTags: Tag[];\n  blocks: PageBlock[];\n}\n\n    \n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/PageContainerComponent.html":{"url":"components/PageContainerComponent.html","title":"component - PageContainerComponent","body":"\n                   \n\n\n\n\n\n  Components\n  PageContainerComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    libs/ngx-editorjs-demo/src/lib/containers/page-container/page-container.component.ts\n\n\n    \n        Description\n    \n    \n        The Page Container component provides the main routable page for loading\nthe ngx-editorjs-demo\n\n    \n\n\n    \n        Implements\n    \n    \n                    AfterContentInit\n    \n\n\n\n    Metadata\n    \n        \n\n            \n                changeDetection\n                ChangeDetectionStrategy.OnPush\n            \n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                ngx-page-container\n            \n\n            \n                styleUrls\n                page-container.component.scss\n            \n\n\n\n            \n                templateUrl\n                page-container.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                holder\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                clear\n                            \n                            \n                                ngAfterContentInit\n                            \n                            \n                                    Public\n                                reset\n                            \n                            \n                                    Public\n                                save\n                            \n                            \n                                    Public\n                                togglePanel\n                            \n                        \n                    \n                \n\n\n\n\n\n                    \n                        \n                            Accessors\n                        \n                    \n                    \n                        \n                            \n                                \n                                    panelOpen\n                                \n                                \n                                    blocks\n                                \n                                \n                                    pages\n                                \n                                \n                                    asJSON\n                                \n                            \n                        \n                    \n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(pagesService: PagesService, app: AppService, editor: NgxEditorJSService, cd: ChangeDetectorRef)\n                    \n                \n                        \n                            \n                                Defined in libs/ngx-editorjs-demo/src/lib/containers/page-container/page-container.component.ts:52\n                            \n                        \n\n                \n                    \n                            The constructor sets up the blocks to the initial demo data\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        pagesService\n                                                  \n                                                        \n                                                                        PagesService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                The pages service\n\n                                                        \n                                                \n                                                \n                                                        app\n                                                  \n                                                        \n                                                                        AppService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                The application service\n\n                                                        \n                                                \n                                                \n                                                        editor\n                                                  \n                                                        \n                                                                        NgxEditorJSService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                The Editor service\n\n                                                        \n                                                \n                                                \n                                                        cd\n                                                  \n                                                        \n                                                                        ChangeDetectorRef\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                The change detection ref\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            clear\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    clear()\n                \n            \n\n\n            \n                \n                    Defined in libs/ngx-editorjs-demo/src/lib/containers/page-container/page-container.component.ts:94\n                \n            \n\n\n            \n                \n                    Clear the editor\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngAfterContentInit\n                        \n                        \n                    \n                \n            \n            \n                \nngAfterContentInit()\n                \n            \n\n\n            \n                \n                    Defined in libs/ngx-editorjs-demo/src/lib/containers/page-container/page-container.component.ts:122\n                \n            \n\n\n            \n                \n                    After the content has init overide the blocks with blocks from the service\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            reset\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    reset()\n                \n            \n\n\n            \n                \n                    Defined in libs/ngx-editorjs-demo/src/lib/containers/page-container/page-container.component.ts:101\n                \n            \n\n\n            \n                \n                    Reset the editor with demo data\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            save\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    save()\n                \n            \n\n\n            \n                \n                    Defined in libs/ngx-editorjs-demo/src/lib/containers/page-container/page-container.component.ts:87\n                \n            \n\n\n            \n                \n                    Call the editor save method\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            togglePanel\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    togglePanel(value: boolean)\n                \n            \n\n\n            \n                \n                    Defined in libs/ngx-editorjs-demo/src/lib/containers/page-container/page-container.component.ts:50\n                \n            \n\n\n            \n                \n                    Toggles the panel state\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    value\n                                    \n                                                boolean\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            holder\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Default value : 'ngx-editorjs-demo'\n                        \n                    \n                        \n                            \n                                    Defined in libs/ngx-editorjs-demo/src/lib/containers/page-container/page-container.component.ts:28\n                            \n                        \n\n                \n                    \n                        The holder ID for this demo\n\n                    \n                \n\n            \n        \n\n\n    \n    \n        Accessors\n    \n        \n            \n                \n                    \n                        \n                        panelOpen\n                    \n                \n\n                \n                    \n                        getpanelOpen()\n                    \n                \n                            \n                                \n                                    Defined in libs/ngx-editorjs-demo/src/lib/containers/page-container/page-container.component.ts:43\n                                \n                            \n                    \n                        \n                                Gets if the panel is open or not\n\n\n                        \n                    \n\n            \n        \n        \n            \n                \n                    \n                        \n                        blocks\n                    \n                \n\n                \n                    \n                        getblocks()\n                    \n                \n                            \n                                \n                                    Defined in libs/ngx-editorjs-demo/src/lib/containers/page-container/page-container.component.ts:73\n                                \n                            \n                    \n                        \n                                Get the blocks for the page\n\n\n                        \n                    \n\n            \n        \n        \n            \n                \n                    \n                        \n                        pages\n                    \n                \n\n                \n                    \n                        getpages()\n                    \n                \n                            \n                                \n                                    Defined in libs/ngx-editorjs-demo/src/lib/containers/page-container/page-container.component.ts:80\n                                \n                            \n                    \n                        \n                                Get a list of pages\n\n\n                                \n                                    Returns :         Observable\n\n                                \n                        \n                    \n\n            \n        \n        \n            \n                \n                    \n                        \n                        asJSON\n                    \n                \n\n                \n                    \n                        getasJSON()\n                    \n                \n                            \n                                \n                                    Defined in libs/ngx-editorjs-demo/src/lib/containers/page-container/page-container.component.ts:110\n                                \n                            \n                    \n                        \n                                Get the blocks data as formatted JSON\n\n\n                        \n                    \n\n            \n        \n\n\n\n\n    \n        import { AfterContentInit, ChangeDetectionStrategy, ChangeDetectorRef, Component } from '@angular/core';\nimport { Block, NgxEditorJSService } from '@tinynodes/ngx-editorjs/src';\nimport { AppService } from '@tinynodes/ngx-tinynodes-core/src';\nimport { BehaviorSubject, Observable, Subject } from 'rxjs';\nimport { distinctUntilChanged, map, takeUntil, tap } from 'rxjs/operators';\nimport { Page } from '../../store/pages/pages.models';\nimport { PagesService } from '../../store/pages/pages.service';\n\n/**\n * The Page Container component provides the main routable page for loading\n * the `ngx-editorjs-demo`\n */\n@Component({\n  selector: 'ngx-page-container',\n  templateUrl: 'page-container.component.html',\n  styleUrls: ['page-container.component.scss'],\n  changeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class PageContainerComponent implements AfterContentInit {\n  /**\n   * Internal onDestroy$ subject\n   */\n  private onDestroy$ = new Subject();\n\n  /**\n   * The holder ID for this demo\n   */\n  public holder = 'ngx-editorjs-demo';\n\n  /**\n   * The blocks on the page\n   */\n  private blocks$: Observable;\n\n  /**\n   * If the panel is open or not\n   */\n  private panelOpen$ = new BehaviorSubject(true);\n\n  /**\n   * Gets if the panel is open or not\n   */\n  public get panelOpen() {\n    return this.panelOpen$.asObservable();\n  }\n\n  /**\n   * Toggles the panel state\n   */\n  public togglePanel(value: boolean) {\n    this.panelOpen$.next(value);\n  }\n\n  /**\n   * The constructor sets up the blocks to the initial demo data\n   * @param pagesService The pages service\n   * @param app The application service\n   * @param editor The Editor service\n   * @param cd The change detection ref\n   */\n  constructor(\n    private readonly pagesService: PagesService,\n    private app: AppService,\n    private readonly editor: NgxEditorJSService,\n    private readonly cd: ChangeDetectorRef\n  ) {\n    // this.blocks$ = this.app.getDemoData('ngx-editorjs-demo');\n  }\n\n  /**\n   * Get the blocks for the page\n   */\n  public get blocks() {\n    return this.blocks$;\n  }\n\n  /**\n   * Get a list of pages\n   */\n  get pages(): Observable {\n    return this.pagesService.pages;\n  }\n\n  /**\n   * Call the editor save method\n   */\n  public save() {\n    this.editor.save(this.holder);\n  }\n\n  /**\n   * Clear the editor\n   */\n  public clear() {\n    this.editor.clear(this.holder);\n  }\n\n  /**\n   * Reset the editor with demo data\n   */\n  public reset() {\n    this.app.getDemoData('ngx-editorjs-demo').subscribe((blocks: Block[]) => {\n      this.editor.update(this.holder, blocks);\n    });\n  }\n\n  /**\n   * Get the blocks data as formatted JSON\n   */\n  public get asJSON() {\n    return this.blocks.pipe(\n      map(blocks => {\n        return JSON.stringify(blocks, null, 4);\n      }),\n      tap(() => this.cd.markForCheck())\n    );\n  }\n\n  /**\n   * After the content has init overide the blocks with blocks from the service\n   */\n  ngAfterContentInit() {\n    this.blocks$ = this.editor.getBlocks(this.holder).pipe(\n      distinctUntilChanged(),\n      takeUntil(this.onDestroy$)\n    );\n    this.reset();\n  }\n}\n\n    \n\n    \n        \n  \n    \n      @tinynodes/ngx-editor Demo\n      A single page demo of the EditorJS component\n    \n    \n      \n        \n          ngx-editorjs Information \n          Details on usage and links - {{ (panelOpen | async) ? 'Click To Close' : 'Click To View +' }}\n        \n        \n          How To Use...\n          \n            \n              \n                Below is an instance of an EditorJS block editor. Click on the area and the block tool will appear, or you can\n                just start typing.\n              \n              \n                The default block is a &lt;p> paragraph, you can also add header &lt;h1> - &lt;h6> blocks, list\n                with &lt;ol> / &lt;li> and &lt;code> blocks.\n              \n\n              \n                You can also paste in an &lt;img> url into the editor and it will start the SimpleImage plugin\n                which provides an &lt;img> tag pointing to the image, and with some additional controls.\n              \n              \n                When saving check the output panel below to see the data results.\n              \n            \n          \n          \n            \n              \n                Links\n                Links for all things related to @tinynodes/ngx-editorjs\n              \n              \n                Docs\n                GitHub\n              \n            \n          \n        \n      \n    \n\n    \n      Demo\n      Save\n      Clear\n      Reset\n    \n    \n      \n    \n    \n      \n        \n          Output\n          Data from the EditorJS instance\n        \n        \n          {{ asJSON | async }}\n        \n      \n    \n     \n  \n\n\n    \n\n    \n                \n                    page-container.component.scss\n                \n                :host {\n  width: 100%;\n  height: 100vh;\n}\n\n.output-card {\n  height: 100vh;\n  flex: 1;\n  width: 100%;\n  overflow: scroll;\n}\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '            @tinynodes/ngx-editor Demo      A single page demo of the EditorJS component                                ngx-editorjs Information           Details on usage and links - {{ (panelOpen | async) ? \\'Click To Close\\' : \\'Click To View +\\' }}                          How To Use...                                                    Below is an instance of an EditorJS block editor. Click on the area and the block tool will appear, or you can                just start typing.                                            The default block is a  paragraph, you can also add header  -  blocks, list                with  /  and  blocks.                                            You can also paste in an  url into the editor and it will start the SimpleImage plugin                which provides an  tag pointing to the image, and with some additional controls.                                            When saving check the output panel below to see the data results.                                                                                        Links                Links for all things related to @tinynodes/ngx-editorjs                                            Docs                GitHub                                                                Demo      Save      Clear      Reset                                              Output          Data from the EditorJS instance                          {{ asJSON | async }}                         '\n    var COMPONENTS = [{'name': 'AppContainerComponent', 'selector': 'tinynodes-root'},{'name': 'HomePageComponent', 'selector': 'tinynodes-home-page'},{'name': 'NavBarComponent', 'selector': 'tinynodes-nav-bar'},{'name': 'NgxEditorJSComponent', 'selector': 'ngx-editorjs'},{'name': 'PageContainerComponent', 'selector': 'ngx-page-container'},{'name': 'SidebarComponent', 'selector': 'tinynodes-sidebar'}];\n    var DIRECTIVES = [{'name': 'NgxEditorJSDirective', 'selector': '[ngxEditorJS]'}];\n    var ACTUAL_COMPONENT = {'name': 'PageContainerComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/PageStoreModule.html":{"url":"modules/PageStoreModule.html","title":"module - PageStoreModule","body":"\n                   \n\n\n\n\n    Modules\n    PageStoreModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_PageStoreModule\n\n\n\ncluster_PageStoreModule_providers\n\n\n\n\nPagesQuery\n\nPagesQuery\n\n\n\nPageStoreModule\n\nPageStoreModule\n\nPageStoreModule -->\n\nPagesQuery->PageStoreModule\n\n\n\n\n\nPagesService\n\nPagesService\n\nPageStoreModule -->\n\nPagesService->PageStoreModule\n\n\n\n\n\nPagesStore\n\nPagesStore\n\nPageStoreModule -->\n\nPagesStore->PageStoreModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            libs/ngx-editorjs-demo/src/lib/store/pages/pages.module.ts\n        \n\n\n        \n            Description\n        \n        \n            WARNING: This module is currently in development\nInternal page store module, this will allow the ngx-editorjs-demo to support the creation of multiple pages\n\n        \n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            PagesQuery\n                        \n                        \n                            PagesService\n                        \n                        \n                            PagesStore\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { NgModule } from '@angular/core';\nimport { PagesQuery } from './pages.query';\nimport { PagesService } from './pages.service';\nimport { PagesStore } from './pages.store';\n\n/**\n *\n * **WARNING**: This module is currently in development\n *\n * Internal page store module, this will allow the `ngx-editorjs-demo` to support the creation of multiple pages\n */\n@NgModule({\n  providers: [PagesStore, PagesQuery, PagesService]\n})\nexport class PageStoreModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/PagesQuery.html":{"url":"injectables/PagesQuery.html","title":"injectable - PagesQuery","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  PagesQuery\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            libs/ngx-editorjs-demo/src/lib/store/pages/pages.query.ts\n        \n\n\n            \n                Extends\n            \n            \n                    QueryEntity\n            \n\n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(store: PagesStore)\n                    \n                \n                        \n                            \n                                Defined in libs/ngx-editorjs-demo/src/lib/store/pages/pages.query.ts:7\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        store\n                                                  \n                                                        \n                                                                        PagesStore\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { QueryEntity } from '@datorama/akita';\nimport { Page } from './pages.models';\nimport { PagesState, PagesStore } from './pages.store';\n\n@Injectable()\nexport class PagesQuery extends QueryEntity {\n  constructor(protected store: PagesStore) {\n    super(store);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/PagesService.html":{"url":"injectables/PagesService.html","title":"injectable - PagesService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  PagesService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            libs/ngx-editorjs-demo/src/lib/store/pages/pages.service.ts\n        \n\n            \n                Description\n            \n            \n                This page service provides a way to save and render pages\nvia the store\n\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                    Readonly\n                                query\n                            \n                            \n                                    Public\n                                    Readonly\n                                store\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                add\n                            \n                            \n                                addBlock\n                            \n                            \n                                delete\n                            \n                            \n                                removeBlock\n                            \n                            \n                                setBlocks\n                            \n                            \n                                upsert\n                            \n                        \n                    \n                \n\n\n\n\n\n                    \n                        \n                            Accessors\n                        \n                    \n                    \n                        \n                            \n                                \n                                    pages\n                                \n                            \n                        \n                    \n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(query: PagesQuery, store: PagesStore)\n                    \n                \n                        \n                            \n                                Defined in libs/ngx-editorjs-demo/src/lib/store/pages/pages.service.ts:15\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        query\n                                                  \n                                                        \n                                                                        PagesQuery\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        store\n                                                  \n                                                        \n                                                                        PagesStore\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            add\n                        \n                        \n                    \n                \n            \n            \n                \nadd(page?: Page)\n                \n            \n\n\n            \n                \n                    Defined in libs/ngx-editorjs-demo/src/lib/store/pages/pages.service.ts:32\n                \n            \n\n\n            \n                \n                    Add a page to the store\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    page\n                                    \n                                                Page\n                                    \n\n                                    \n                                        Yes\n                                    \n\n\n                                    \n                                        An optional page to be added\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            addBlock\n                        \n                        \n                    \n                \n            \n            \n                \naddBlock(pageId: ID, block: Block)\n                \n            \n\n\n            \n                \n                    Defined in libs/ngx-editorjs-demo/src/lib/store/pages/pages.service.ts:64\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    pageId\n                                    \n                                            ID\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    block\n                                    \n                                                Block\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            delete\n                        \n                        \n                    \n                \n            \n            \n                \ndelete(pageId: ID)\n                \n            \n\n\n            \n                \n                    Defined in libs/ngx-editorjs-demo/src/lib/store/pages/pages.service.ts:56\n                \n            \n\n\n            \n                \n                    Removes a page\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    pageId\n                                    \n                                            ID\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        The ID of the page to be removed\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            removeBlock\n                        \n                        \n                    \n                \n            \n            \n                \nremoveBlock(pageId: ID, block: PageBlock)\n                \n            \n\n\n            \n                \n                    Defined in libs/ngx-editorjs-demo/src/lib/store/pages/pages.service.ts:70\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    pageId\n                                    \n                                            ID\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    block\n                                    \n                                                PageBlock\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            setBlocks\n                        \n                        \n                    \n                \n            \n            \n                \nsetBlocks(pageId: ID | any, blocks: PageBlock[])\n                \n            \n\n\n            \n                \n                    Defined in libs/ngx-editorjs-demo/src/lib/store/pages/pages.service.ts:60\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    pageId\n                                    \n                                            ID | any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    blocks\n                                    \n                                            PageBlock[]\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            upsert\n                        \n                        \n                    \n                \n            \n            \n                \nupsert(page: Page)\n                \n            \n\n\n            \n                \n                    Defined in libs/ngx-editorjs-demo/src/lib/store/pages/pages.service.ts:47\n                \n            \n\n\n            \n                \n                    Updates or creates a page\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    page\n                                    \n                                                Page\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        The page to be updated, if not available it will be created\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                                Readonly\n                            query\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         PagesQuery\n\n                        \n                    \n                        \n                            \n                                    Defined in libs/ngx-editorjs-demo/src/lib/store/pages/pages.service.ts:17\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                                Readonly\n                            store\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         PagesStore\n\n                        \n                    \n                        \n                            \n                                    Defined in libs/ngx-editorjs-demo/src/lib/store/pages/pages.service.ts:17\n                            \n                        \n\n\n            \n        \n\n\n            \n    \n        Accessors\n    \n        \n            \n                \n                    \n                        \n                        pages\n                    \n                \n\n                \n                    \n                        getpages()\n                    \n                \n                            \n                                \n                                    Defined in libs/ngx-editorjs-demo/src/lib/store/pages/pages.service.ts:24\n                                \n                            \n                    \n                        \n                                Get an observable of all the pages in the store\n\n\n                                \n                                    Returns :         Observable\n\n                                \n                        \n                    \n\n            \n        \n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { arrayAdd, arrayRemove, guid, ID } from '@datorama/akita';\nimport { Block } from '@tinynodes/ngx-editorjs';\nimport { Observable } from 'rxjs';\nimport { Page, PageBlock } from './pages.models';\nimport { PagesQuery } from './pages.query';\nimport { PagesStore } from './pages.store';\n\n/**\n * This page service provides a way to save and render pages\n * via the store\n */\n@Injectable()\nexport class PagesService {\n  private pages$: Observable;\n\n  constructor(public readonly query: PagesQuery, public readonly store: PagesStore) {\n    this.pages$ = this.query.selectAll();\n  }\n\n  /**\n   * Get an observable of all the pages in the store\n   */\n  get pages(): Observable {\n    return this.pages$;\n  }\n\n  /**\n   * Add a page to the store\n   * @param page An optional page to be added\n   */\n  add(page?: Page) {\n    const newPage: Page = {\n      id: guid(),\n      pageTitle: 'New Page',\n      pageTags: [],\n      blocks: [],\n      ...page\n    };\n    this.store.add(newPage);\n  }\n\n  /**\n   * Updates or creates a page\n   * @param page The page to be updated, if not available it will be created\n   */\n  upsert(page: Page) {\n    if (!page.id) page.id = guid();\n    this.store.upsert(page.id, page);\n  }\n\n  /**\n   * Removes a page\n   * @param pageId The ID of the page to be removed\n   */\n  delete(pageId: ID) {\n    this.store.remove(pageId);\n  }\n\n  setBlocks(pageId: ID | any, blocks: PageBlock[]) {\n    this.store.update(pageId, { blocks });\n  }\n\n  addBlock(pageId: ID, block: Block) {\n    this.store.update(pageId, (entity: Page) => ({\n      blocks: arrayAdd(entity.blocks, { id: guid(), ...block })\n    }));\n  }\n\n  removeBlock(pageId: ID, block: PageBlock) {\n    this.store.update(pageId, (entity: Page) => ({\n      blocks: arrayRemove(entity.blocks, block.id)\n    }));\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/PagesState.html":{"url":"interfaces/PagesState.html","title":"interface - PagesState","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  PagesState\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            libs/ngx-editorjs-demo/src/lib/store/pages/pages.store.ts\n        \n\n\n            \n                Extends\n            \n            \n                    EntityState\n            \n\n\n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { EntityState, EntityStore, StoreConfig } from '@datorama/akita';\nimport { Page } from './pages.models';\n\nexport interface PagesState extends EntityState {}\n\n@Injectable()\n@StoreConfig({ name: 'pages' })\nexport class PagesStore extends EntityStore {\n  constructor() {\n    super();\n  }\n}\n\n    \n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/PagesStore.html":{"url":"injectables/PagesStore.html","title":"injectable - PagesStore","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  PagesStore\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            libs/ngx-editorjs-demo/src/lib/store/pages/pages.store.ts\n        \n\n\n            \n                Extends\n            \n            \n                    EntityStore\n            \n\n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in libs/ngx-editorjs-demo/src/lib/store/pages/pages.store.ts:9\n                            \n                        \n\n            \n        \n\n\n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { EntityState, EntityStore, StoreConfig } from '@datorama/akita';\nimport { Page } from './pages.models';\n\nexport interface PagesState extends EntityState {}\n\n@Injectable()\n@StoreConfig({ name: 'pages' })\nexport class PagesStore extends EntityStore {\n  constructor() {\n    super();\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/Paragraph.html":{"url":"interfaces/Paragraph.html","title":"interface - Paragraph","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  Paragraph\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            libs/ngx-editorjs/src/lib/types/blocks.ts\n        \n\n            \n                Description\n            \n            \n                Default data type for a paragraph block\n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        text\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        text\n                                    \n                                \n                                \n                                    \n                                        text:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    The paragraph text\n\n                                \n                            \n                        \n                    \n            \n    \n\n\n    \n        export interface Block {\n  /**\n   * The EditorJS block type\n   */\n  type: string;\n\n  /**\n   * The data interface for the block type\n   */\n  data: T;\n\n  /**\n   * Additional properties on the type\n   */\n  [key: string]: any;\n}\n\n/**\n * Available list styles, supports `ordered` and `unordered`.\n * A custom string can also be added\n */\nexport type ListStyle = 'ordered' | 'unordered' | string;\n\n/**\n * Default data type for a list block\n */\nexport interface List {\n  /**\n   * The list style\n   */\n  style: ListStyle;\n  /**\n   * List items of type T\n   */\n  items: T[];\n}\n\n/**\n * The default list block is provided by the EditorJS list plugin\n */\nexport interface ListBlock extends Block> {\n  /**\n   * The EditorJS block type\n   */\n  type: 'list';\n}\n\n/**\n * Default data type for a paragraph block\n */\ninterface Paragraph {\n  /**\n   * The paragraph text\n   */\n  text: string;\n}\n\n/**\n * Interface for a paragraph block\n */\nexport interface ParagraphBlock extends Block {\n  /**\n   * The EditorJS block type\n   */\n  type: 'paragraph';\n}\n\n/**\n * Default data type for a header block\n */\ninterface Header {\n  /**\n   * The header text\n   */\n  text: string;\n  /**\n   * The header level from 1-6\n   */\n  level: number;\n}\n\n/**\n * Interface for a header block\n */\nexport interface HeaderBlock extends Block {\n  /**\n   * The EditorJS block type\n   */\n  type: 'header';\n}\n\n/**\n * Default data type for a header block\n */\nexport interface Image {\n  /**\n   * The image URL\n   */\n  url: string;\n  /**\n   * Optional image caption\n   */\n  caption?: string;\n  /**\n   * Optional border property\n   */\n  withBorder?: boolean;\n\n  /**\n   * Optional background property\n   */\n  withBackground?: boolean;\n\n  /**\n   * Optional stretch property\n   */\n  stretched?: boolean;\n}\n\n/**\n * Interface for a image block\n */\nexport interface ImageBlock extends Block {\n  /**\n   * The EditorJS block type\n   */\n  type: 'image';\n}\n\n/**\n * Type of all the basic block type\n */\nexport type BlockTypes = ParagraphBlock | HeaderBlock | ImageBlock | ListBlock | Block;\n\n    \n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/ParagraphBlock.html":{"url":"interfaces/ParagraphBlock.html","title":"interface - ParagraphBlock","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  ParagraphBlock\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            libs/ngx-editorjs/src/lib/types/blocks.ts\n        \n\n            \n                Description\n            \n            \n                Interface for a paragraph block\n\n            \n\n            \n                Extends\n            \n            \n                        Block\n            \n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        type\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        type\n                                    \n                                \n                                \n                                    \n                                        type:     \n\n                                    \n                                \n\n\n\n\n\n\n\n                            \n                                \n                                    The EditorJS block type\n\n                                \n                            \n                        \n                    \n            \n    \n\n\n    \n        export interface Block {\n  /**\n   * The EditorJS block type\n   */\n  type: string;\n\n  /**\n   * The data interface for the block type\n   */\n  data: T;\n\n  /**\n   * Additional properties on the type\n   */\n  [key: string]: any;\n}\n\n/**\n * Available list styles, supports `ordered` and `unordered`.\n * A custom string can also be added\n */\nexport type ListStyle = 'ordered' | 'unordered' | string;\n\n/**\n * Default data type for a list block\n */\nexport interface List {\n  /**\n   * The list style\n   */\n  style: ListStyle;\n  /**\n   * List items of type T\n   */\n  items: T[];\n}\n\n/**\n * The default list block is provided by the EditorJS list plugin\n */\nexport interface ListBlock extends Block> {\n  /**\n   * The EditorJS block type\n   */\n  type: 'list';\n}\n\n/**\n * Default data type for a paragraph block\n */\ninterface Paragraph {\n  /**\n   * The paragraph text\n   */\n  text: string;\n}\n\n/**\n * Interface for a paragraph block\n */\nexport interface ParagraphBlock extends Block {\n  /**\n   * The EditorJS block type\n   */\n  type: 'paragraph';\n}\n\n/**\n * Default data type for a header block\n */\ninterface Header {\n  /**\n   * The header text\n   */\n  text: string;\n  /**\n   * The header level from 1-6\n   */\n  level: number;\n}\n\n/**\n * Interface for a header block\n */\nexport interface HeaderBlock extends Block {\n  /**\n   * The EditorJS block type\n   */\n  type: 'header';\n}\n\n/**\n * Default data type for a header block\n */\nexport interface Image {\n  /**\n   * The image URL\n   */\n  url: string;\n  /**\n   * Optional image caption\n   */\n  caption?: string;\n  /**\n   * Optional border property\n   */\n  withBorder?: boolean;\n\n  /**\n   * Optional background property\n   */\n  withBackground?: boolean;\n\n  /**\n   * Optional stretch property\n   */\n  stretched?: boolean;\n}\n\n/**\n * Interface for a image block\n */\nexport interface ImageBlock extends Block {\n  /**\n   * The EditorJS block type\n   */\n  type: 'image';\n}\n\n/**\n * Type of all the basic block type\n */\nexport type BlockTypes = ParagraphBlock | HeaderBlock | ImageBlock | ListBlock | Block;\n\n    \n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/PluginCode.html":{"url":"injectables/PluginCode.html","title":"injectable - PluginCode","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  PluginCode\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            libs/ngx-editorjs-plugins/src/lib/plugins/code/code.plugin.ts\n        \n\n            \n                Description\n            \n            \n                This plugin returns the tool settings for a  block tool for EditorJS\n\n            \n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                plugin\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            plugin\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    plugin()\n                \n            \n\n\n            \n                \n                    Defined in libs/ngx-editorjs-plugins/src/lib/plugins/code/code.plugin.ts:14\n                \n            \n\n\n            \n                \n                    Returns the ToolSettings for this plugin\n\n\n                    \n                        Returns :     ToolSettings\n\n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport Code from '@editorjs/code';\nimport { ToolSettings } from '@editorjs/editorjs';\nimport { BasePlugin } from '../../types/plugins';\n\n/**\n * This plugin returns the tool settings for a `` block tool for `EditorJS`\n */\n@Injectable()\nexport class PluginCode implements BasePlugin {\n  /**\n   * Returns the `ToolSettings` for this plugin\n   */\n  public plugin(): ToolSettings {\n    return Code;\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/PluginCodeModule.html":{"url":"modules/PluginCodeModule.html","title":"module - PluginCodeModule","body":"\n                   \n\n\n\n\n    Modules\n    PluginCodeModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_PluginCodeModule\n\n\n\ncluster_PluginCodeModule_providers\n\n\n\n\nPluginCode\n\nPluginCode\n\n\n\nPluginCodeModule\n\nPluginCodeModule\n\nPluginCodeModule -->\n\nPluginCode->PluginCodeModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            libs/ngx-editorjs-plugins/src/lib/plugins/code/code.module.ts\n        \n\n\n        \n            Description\n        \n        \n            A module that provides the default EditorJS  block tool.\nSee the GitHub repo for API details\n\n        \n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            PluginCode\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { NgModule } from '@angular/core';\nimport { PluginCode } from './code.plugin';\n\n/**\n * A module that provides the default `EditorJS` `` block tool.\n * See [the GitHub repo](https://github.com/editor-js/code) for API details\n */\n@NgModule({\n  providers: [PluginCode]\n})\nexport class PluginCodeModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/PluginConfig.html":{"url":"interfaces/PluginConfig.html","title":"interface - PluginConfig","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  PluginConfig\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            libs/ngx-editorjs/src/lib/types/plugins.ts\n        \n\n            \n                Description\n            \n            \n                A Module plugin configuration\n\n            \n\n\n\n\n            \n    Indexable\n        \n            \n                \n                    \n                        [key: string]:        BasePlugin\n\n                    \n                \n                        \n                            \n                                Defined in libs/ngx-editorjs/src/lib/types/plugins.ts:7\n                            \n                        \n                \n                    \n                        The key of the plugin and the plugin class extending BasePlugin\n\n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { InjectionToken } from '@angular/core';\nimport { ToolSettings, ToolConstructable } from '@editorjs/editorjs';\n\n/**\n * A Module plugin configuration\n */\nexport interface PluginConfig {\n  /**\n   * The key of the plugin and the plugin class extending `BasePlugin`\n   */\n  [key: string]: BasePlugin;\n}\n\n/**\n * A map of all the tools settings\n */\nexport interface ToolSettingsMap {\n  /**\n   * The key of the plugin and the plugin exported tool settings\n   */\n  [key: string]: ToolConstructable | ToolSettings;\n}\n\n/**\n * Defines the interface for required and optional plugin methods.\n * These methods allow a plugin to return a EditorJS plugin and an optional shortcut\n */\nexport interface BasePlugin {\n  /**\n   * The plugin settings to be returned\n   */\n  plugin: () => ToolConstructable | ToolSettings;\n\n  /**\n   * Optional shortcut for the plugin\n   */\n  shortcut?: () => string;\n}\n\n/**\n * The Injection token for initial plugins as defined in the ngx-editorjs module\n */\nexport const InitialPlugins = new InjectionToken('InitialPlugins');\n\n/**\n * The injection token for adding plugins via your own application\n */\nexport const UserPlugins = new InjectionToken('UserPlugins');\n\n    \n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/PluginConfig-1.html":{"url":"interfaces/PluginConfig-1.html","title":"interface - PluginConfig-1","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  PluginConfig\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            libs/ngx-editorjs-plugins/src/lib/types/plugins.ts\n        \n\n            \n                Description\n            \n            \n                A Module plugin configuration\n\n            \n\n\n\n\n            \n    Indexable\n        \n            \n                \n                    \n                        [key: string]:        BasePlugin\n\n                    \n                \n                        \n                            \n                                Defined in libs/ngx-editorjs-plugins/src/lib/types/plugins.ts:7\n                            \n                        \n                \n                    \n                        The key of the plugin and the plugin class extending BasePlugin\n\n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { InjectionToken } from '@angular/core';\nimport { ToolSettings, ToolConstructable } from '@editorjs/editorjs';\n\n/**\n * A Module plugin configuration\n */\nexport interface PluginConfig {\n  /**\n   * The key of the plugin and the plugin class extending `BasePlugin`\n   */\n  [key: string]: BasePlugin;\n}\n\n/**\n * A map of all the tools settings\n */\nexport interface ToolSettingsMap {\n  /**\n   * The key of the plugin and the plugin exported tool settings\n   */\n  [key: string]: ToolConstructable | ToolSettings;\n}\n\n/**\n * Defines the interface for required and optional plugin methods.\n * These methods allow a plugin to return a EditorJS plugin and an optional shortcut\n */\nexport interface BasePlugin {\n  /**\n   * The plugin settings to be returned\n   */\n  plugin: () => ToolConstructable | ToolSettings;\n\n  /**\n   * Optional shortcut for the plugin\n   */\n  shortcut?: () => string;\n}\n\n/**\n * The Injection token for initial plugins as defined in the ngx-editorjs module\n */\nexport const InitialPlugins = new InjectionToken('InitialPlugins');\n\n/**\n * The injection token for adding plugins via your own application\n */\nexport const UserPlugins = new InjectionToken('UserPlugins');\n\n    \n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/PluginHeader.html":{"url":"injectables/PluginHeader.html","title":"injectable - PluginHeader","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  PluginHeader\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            libs/ngx-editorjs-plugins/src/lib/plugins/header/header.plugin.ts\n        \n\n            \n                Description\n            \n            \n                This plugin returns the tool settings for a  -  block tool for EditorJS\n\n            \n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                plugin\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            plugin\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    plugin()\n                \n            \n\n\n            \n                \n                    Defined in libs/ngx-editorjs-plugins/src/lib/plugins/header/header.plugin.ts:14\n                \n            \n\n\n            \n                \n                    Returns the plugin settings\n\n\n                    \n                        Returns :     ToolSettings\n\n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { ToolSettings } from '@editorjs/editorjs';\nimport Header from '@editorjs/header';\nimport { BasePlugin } from '../../types/plugins';\n\n/**\n * This plugin returns the tool settings for a ` - ` block tool for `EditorJS`\n */\n@Injectable()\nexport class PluginHeader implements BasePlugin {\n  /**\n   * Returns the plugin settings\n   */\n  public plugin(): ToolSettings {\n    return Header;\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/PluginHeaderModule.html":{"url":"modules/PluginHeaderModule.html","title":"module - PluginHeaderModule","body":"\n                   \n\n\n\n\n    Modules\n    PluginHeaderModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_PluginHeaderModule\n\n\n\ncluster_PluginHeaderModule_providers\n\n\n\n\nPluginHeader\n\nPluginHeader\n\n\n\nPluginHeaderModule\n\nPluginHeaderModule\n\nPluginHeaderModule -->\n\nPluginHeader->PluginHeaderModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            libs/ngx-editorjs-plugins/src/lib/plugins/header/header.module.ts\n        \n\n\n        \n            Description\n        \n        \n            A module that provides the default EditorJS header block tool.\nSee the GitHub repo for API details\n\n        \n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            PluginHeader\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { NgModule } from '@angular/core';\nimport { PluginHeader } from './header.plugin';\n\n/**\n * A module that provides the default `EditorJS` header block tool.\n * See [the GitHub repo](https://github.com/editor-js/header) for API details\n */\n@NgModule({\n  providers: [PluginHeader]\n})\nexport class PluginHeaderModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/PluginImage.html":{"url":"injectables/PluginImage.html","title":"injectable - PluginImage","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  PluginImage\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            libs/ngx-editorjs-plugins/src/lib/plugins/image/image.plugin.ts\n        \n\n            \n                Description\n            \n            \n                This plugin returns the tool settings for a  -  block tool for EditorJS\n\n            \n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                plugin\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            plugin\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    plugin()\n                \n            \n\n\n            \n                \n                    Defined in libs/ngx-editorjs-plugins/src/lib/plugins/image/image.plugin.ts:14\n                \n            \n\n\n            \n                \n                    Returns the plugin settings\n\n\n                    \n                        Returns :     ToolSettings\n\n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { ToolSettings } from '@editorjs/editorjs';\nimport Image from '@editorjs/image';\nimport { BasePlugin } from '../../types/plugins';\n\n/**\n * This plugin returns the tool settings for a ` - ` block tool for `EditorJS`\n */\n@Injectable()\nexport class PluginImage implements BasePlugin {\n  /**\n   * Returns the plugin settings\n   */\n  public plugin(): ToolSettings {\n    return Image;\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/PluginImageModule.html":{"url":"modules/PluginImageModule.html","title":"module - PluginImageModule","body":"\n                   \n\n\n\n\n    Modules\n    PluginImageModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_PluginImageModule\n\n\n\ncluster_PluginImageModule_providers\n\n\n\n\nPluginImage\n\nPluginImage\n\n\n\nPluginImageModule\n\nPluginImageModule\n\nPluginImageModule -->\n\nPluginImage->PluginImageModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            libs/ngx-editorjs-plugins/src/lib/plugins/image/image.module.ts\n        \n\n\n        \n            Description\n        \n        \n            A module that provides the default EditorJS  block tool.\nSee the GitHub repo for API details\n\n        \n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            PluginImage\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { NgModule } from '@angular/core';\nimport { PluginImage } from './image.plugin';\n\n/**\n * A module that provides the default `EditorJS` `` block tool.\n * See [the GitHub repo](https://github.com/editor-js/image) for API details\n */\n@NgModule({\n  providers: [PluginImage]\n})\nexport class PluginImageModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/PluginLink.html":{"url":"injectables/PluginLink.html","title":"injectable - PluginLink","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  PluginLink\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            libs/ngx-editorjs-plugins/src/lib/plugins/link/link.plugin.ts\n        \n\n            \n                Description\n            \n            \n                This plugin returns the tool settings for a  block tool for EditorJS\n\n            \n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                plugin\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            plugin\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    plugin()\n                \n            \n\n\n            \n                \n                    Defined in libs/ngx-editorjs-plugins/src/lib/plugins/link/link.plugin.ts:14\n                \n            \n\n\n            \n                \n                    Returns the plugin settings\n\n\n                    \n                        Returns :     ToolSettings\n\n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { ToolSettings } from '@editorjs/editorjs';\nimport Link from '@editorjs/link';\nimport { BasePlugin } from '../../types/plugins';\n\n/**\n * This plugin returns the tool settings for a `` block tool for `EditorJS`\n */\n@Injectable()\nexport class PluginLink implements BasePlugin {\n  /**\n   * Returns the plugin settings\n   */\n  public plugin(): ToolSettings {\n    return Link;\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/PluginLinkModule.html":{"url":"modules/PluginLinkModule.html","title":"module - PluginLinkModule","body":"\n                   \n\n\n\n\n    Modules\n    PluginLinkModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_PluginLinkModule\n\n\n\ncluster_PluginLinkModule_providers\n\n\n\n\nPluginLink\n\nPluginLink\n\n\n\nPluginLinkModule\n\nPluginLinkModule\n\nPluginLinkModule -->\n\nPluginLink->PluginLinkModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            libs/ngx-editorjs-plugins/src/lib/plugins/link/link.module.ts\n        \n\n\n        \n            Description\n        \n        \n            A module that provides the default EditorJS  block tool.\nSee the GitHub repo for API details\n\n        \n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            PluginLink\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { NgModule } from '@angular/core';\nimport { PluginLink } from './link.plugin';\n\n/**\n * A module that provides the default `EditorJS` `` block tool.\n * See [the GitHub repo](https://github.com/editor-js/link) for API details\n */\n@NgModule({\n  providers: [PluginLink]\n})\nexport class PluginLinkModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/PluginList.html":{"url":"injectables/PluginList.html","title":"injectable - PluginList","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  PluginList\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            libs/ngx-editorjs-plugins/src/lib/plugins/list/list.plugin.ts\n        \n\n            \n                Description\n            \n            \n                This plugin returns the tool settings for a  and  block tool for EditorJS\n\n            \n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                plugin\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            plugin\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    plugin()\n                \n            \n\n\n            \n                \n                    Defined in libs/ngx-editorjs-plugins/src/lib/plugins/list/list.plugin.ts:14\n                \n            \n\n\n            \n                \n                    Returns the plugin settings\n\n\n                    \n                        Returns :     ToolSettings\n\n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { ToolSettings } from '@editorjs/editorjs';\nimport List from '@editorjs/list';\nimport { BasePlugin } from '../../types/plugins';\n\n/**\n * This plugin returns the tool settings for a `` and `` block tool for `EditorJS`\n */\n@Injectable()\nexport class PluginList implements BasePlugin {\n  /**\n   * Returns the plugin settings\n   */\n  public plugin(): ToolSettings {\n    return List;\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/PluginListModule.html":{"url":"modules/PluginListModule.html","title":"module - PluginListModule","body":"\n                   \n\n\n\n\n    Modules\n    PluginListModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_PluginListModule\n\n\n\ncluster_PluginListModule_providers\n\n\n\n\nPluginList\n\nPluginList\n\n\n\nPluginListModule\n\nPluginListModule\n\nPluginListModule -->\n\nPluginList->PluginListModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            libs/ngx-editorjs-plugins/src/lib/plugins/list/list.module.ts\n        \n\n\n        \n            Description\n        \n        \n            A module that provides the default EditorJS  and  block tool.\nSee the GitHub repo for API details\n\n        \n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            PluginList\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { NgModule } from '@angular/core';\nimport { PluginList } from './list.plugin';\n\n/**\n * A module that provides the default `EditorJS` `` and `` block tool.\n * See [the GitHub repo](https://github.com/editor-js/list) for API details\n */\n@NgModule({\n  providers: [PluginList]\n})\nexport class PluginListModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/PluginMarker.html":{"url":"injectables/PluginMarker.html","title":"injectable - PluginMarker","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  PluginMarker\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            libs/ngx-editorjs-plugins/src/lib/plugins/marker/marker.plugin.ts\n        \n\n            \n                Description\n            \n            \n                This plugin returns the tool settings for a inline marker tool for EditorJS\n\n            \n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                plugin\n                            \n                            \n                                    Public\n                                shortcut\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            plugin\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    plugin()\n                \n            \n\n\n            \n                \n                    Defined in libs/ngx-editorjs-plugins/src/lib/plugins/marker/marker.plugin.ts:14\n                \n            \n\n\n            \n                \n                    Returns the plugin settings\n\n\n                    \n                        Returns :     ToolSettings\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            shortcut\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    shortcut()\n                \n            \n\n\n            \n                \n                    Defined in libs/ngx-editorjs-plugins/src/lib/plugins/marker/marker.plugin.ts:20\n                \n            \n\n\n            \n                \n                    Returns the plugin shortcut\n\n\n                    \n                        Returns :         string\n\n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { ToolSettings } from '@editorjs/editorjs';\nimport Marker from '@editorjs/marker';\nimport { BasePlugin } from '../../types/plugins';\n\n/**\n * This plugin returns the tool settings for a inline marker tool for `EditorJS`\n */\n@Injectable()\nexport class PluginMarker implements BasePlugin {\n  /**\n   * Returns the plugin settings\n   */\n  public plugin(): ToolSettings {\n    return Marker;\n  }\n  /**\n   * Returns the plugin shortcut\n   */\n  public shortcut() {\n    return 'CMD+SHIFT+M';\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/PluginMarkerModule.html":{"url":"modules/PluginMarkerModule.html","title":"module - PluginMarkerModule","body":"\n                   \n\n\n\n\n    Modules\n    PluginMarkerModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_PluginMarkerModule\n\n\n\ncluster_PluginMarkerModule_providers\n\n\n\n\nPluginMarker\n\nPluginMarker\n\n\n\nPluginMarkerModule\n\nPluginMarkerModule\n\nPluginMarkerModule -->\n\nPluginMarker->PluginMarkerModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            libs/ngx-editorjs-plugins/src/lib/plugins/marker/marker.module.ts\n        \n\n\n        \n            Description\n        \n        \n            A module that provides the default EditorJS inline marker tool.\nSee the GitHub repo for API details\n\n        \n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            PluginMarker\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { NgModule } from '@angular/core';\nimport { PluginMarker } from './marker.plugin';\n\n/**\n * A module that provides the default `EditorJS` inline marker tool.\n * See [the GitHub repo](https://github.com/editor-js/marker) for API details\n */\n@NgModule({\n  providers: [PluginMarker]\n})\nexport class PluginMarkerModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/PluginParagraph.html":{"url":"injectables/PluginParagraph.html","title":"injectable - PluginParagraph","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  PluginParagraph\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            libs/ngx-editorjs-plugins/src/lib/plugins/paragraph/paragraph.plugin.ts\n        \n\n            \n                Description\n            \n            \n                This plugin returns the tool settings for a  block tool for EditorJS\n\n            \n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                plugin\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            plugin\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    plugin()\n                \n            \n\n\n            \n                \n                    Defined in libs/ngx-editorjs-plugins/src/lib/plugins/paragraph/paragraph.plugin.ts:14\n                \n            \n\n\n            \n                \n                    Returns the plugin settings\n\n\n                    \n                        Returns :     ToolSettings\n\n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport Paragraph from '@editorjs/paragraph';\nimport { ToolSettings } from '@editorjs/editorjs';\nimport { BasePlugin } from '../../types/plugins';\n\n/**\n * This plugin returns the tool settings for a `` block tool for `EditorJS`\n */\n@Injectable()\nexport class PluginParagraph implements BasePlugin {\n  /**\n   * Returns the plugin settings\n   */\n  public plugin(): ToolSettings {\n    return Paragraph;\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/PluginParagraphModule.html":{"url":"modules/PluginParagraphModule.html","title":"module - PluginParagraphModule","body":"\n                   \n\n\n\n\n    Modules\n    PluginParagraphModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_PluginParagraphModule\n\n\n\ncluster_PluginParagraphModule_providers\n\n\n\n\nPluginParagraph\n\nPluginParagraph\n\n\n\nPluginParagraphModule\n\nPluginParagraphModule\n\nPluginParagraphModule -->\n\nPluginParagraph->PluginParagraphModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            libs/ngx-editorjs-plugins/src/lib/plugins/paragraph/paragraph.module.ts\n        \n\n\n        \n            Description\n        \n        \n            A module that provides the default EditorJS  block tool.\nSee the GitHub repo for API details\n\n        \n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            PluginParagraph\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { NgModule } from '@angular/core';\nimport { PluginParagraph } from './paragraph.plugin';\n\n/**\n * A module that provides the default `EditorJS` `` block tool.\n * See [the GitHub repo](https://github.com/editor-js/paragraph) for API details\n */\n@NgModule({\n  providers: [PluginParagraph]\n})\nexport class PluginParagraphModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/PluginSimpleImage.html":{"url":"injectables/PluginSimpleImage.html","title":"injectable - PluginSimpleImage","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  PluginSimpleImage\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            libs/ngx-editorjs-plugins/src/lib/plugins/simple-image/simple-image.plugin.ts\n        \n\n            \n                Description\n            \n            \n                This plugin returns the simple image tool for  block editor EditorJS\n\n            \n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                plugin\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            plugin\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    plugin()\n                \n            \n\n\n            \n                \n                    Defined in libs/ngx-editorjs-plugins/src/lib/plugins/simple-image/simple-image.plugin.ts:14\n                \n            \n\n\n            \n                \n                    Returns the plugin settings\n\n\n                    \n                        Returns :     ToolSettings\n\n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { ToolSettings } from '@editorjs/editorjs';\nimport SimpleImage from '@editorjs/simple-image';\nimport { BasePlugin } from '../../types/plugins';\n\n/**\n * This plugin returns the simple image tool for `` block editor `EditorJS`\n */\n@Injectable()\nexport class PluginSimpleImage implements BasePlugin {\n  /**\n   * Returns the plugin settings\n   */\n  public plugin(): ToolSettings {\n    return SimpleImage;\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/PluginSimpleImageModule.html":{"url":"modules/PluginSimpleImageModule.html","title":"module - PluginSimpleImageModule","body":"\n                   \n\n\n\n\n    Modules\n    PluginSimpleImageModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_PluginSimpleImageModule\n\n\n\ncluster_PluginSimpleImageModule_providers\n\n\n\n\nPluginSimpleImage\n\nPluginSimpleImage\n\n\n\nPluginSimpleImageModule\n\nPluginSimpleImageModule\n\nPluginSimpleImageModule -->\n\nPluginSimpleImage->PluginSimpleImageModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            libs/ngx-editorjs-plugins/src/lib/plugins/simple-image/simple-image.module.ts\n        \n\n\n        \n            Description\n        \n        \n            A module that provides the simple image tools for EditorJS  block tool.\nSee the GitHub repo for API details\n\n        \n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            PluginSimpleImage\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { NgModule } from '@angular/core';\nimport { PluginSimpleImage } from './simple-image.plugin';\n\n/**\n * A module that provides the simple image tools for `EditorJS` `` block tool.\n * See [the GitHub repo](https://github.com/editor-js/image) for API details\n */\n@NgModule({\n  providers: [PluginSimpleImage]\n})\nexport class PluginSimpleImageModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/Ready.html":{"url":"classes/Ready.html","title":"class - Ready","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  Ready\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            libs/ngx-editorjs-ngrx/src/lib/actions/ngx-editorjs.actions.ts\n        \n\n\n\n            \n                Implements\n            \n            \n                        Action\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                payload\n                            \n                            \n                                    Readonly\n                                type\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(payload: literal type)\n                    \n                \n                        \n                            \n                                Defined in libs/ngx-editorjs-ngrx/src/lib/actions/ngx-editorjs.actions.ts:28\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        payload\n                                                  \n                                                        \n                                                                    literal type\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            payload\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     literal type\n\n                        \n                    \n                        \n                            \n                                    Defined in libs/ngx-editorjs-ngrx/src/lib/actions/ngx-editorjs.actions.ts:29\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                            type\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : EditorJSActionTypes.Ready\n                        \n                    \n                        \n                            \n                                    Defined in libs/ngx-editorjs-ngrx/src/lib/actions/ngx-editorjs.actions.ts:28\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { Action } from '@ngrx/store';\nimport { OutputData } from '@editorjs/editorjs';\n\nexport enum EditorJSActionTypes {\n  SaveStart = '[ngx-editorjs] Start Save',\n  SaveEnd = '[ngx-editorjs] Start End',\n  NotReady = '[ngx-editorjs] Not Ready',\n  Ready = '[ngx-editorjs] Ready',\n  Changed = '[ngx-editorjs] Changed'\n}\n\nexport class SaveStart implements Action {\n  readonly type = EditorJSActionTypes.SaveStart;\n  constructor(public payload: { holder: string }) {}\n}\n\nexport class SaveEnd implements Action {\n  readonly type = EditorJSActionTypes.SaveEnd;\n  constructor(public payload: { holder: string; data: OutputData }) {}\n}\n\nexport class NotReady implements Action {\n  readonly type = EditorJSActionTypes.NotReady;\n  constructor(public payload: { holder: string }) {}\n}\n\nexport class Ready implements Action {\n  readonly type = EditorJSActionTypes.Ready;\n  constructor(public payload: { holder: string }) {}\n}\n\nexport class Changed implements Action {\n  readonly type = EditorJSActionTypes.Changed;\n  constructor(public payload: { holder: string; data: OutputData }) {}\n}\n\nexport type NgxEditorJSActions = SaveStart | SaveEnd | NotReady | Ready | Changed;\n\n    \n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/ReadyMap.html":{"url":"interfaces/ReadyMap.html","title":"interface - ReadyMap","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  ReadyMap\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            libs/ngx-editorjs/src/lib/types/maps.ts\n        \n\n            \n                Description\n            \n            \n                A map containing BehaviorSubject of boolean values of the ready state of EditorJS\n\n            \n\n\n\n\n            \n    Indexable\n        \n            \n                \n                    \n                        [key: string]:    BehaviorSubject\n\n                    \n                \n                        \n                            \n                                Defined in libs/ngx-editorjs/src/lib/types/maps.ts:46\n                            \n                        \n                \n                    \n                        A map key containing a {BehaviorSubject} of {boolean}\n\n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import EditorJS from '@editorjs/editorjs';\nimport { BehaviorSubject } from 'rxjs';\nimport { Block } from './blocks';\n\n/**\n * An event type for calling `EditorJS`\n */\nexport interface EventType {\n  type: string;\n  payload?: T;\n}\n\n/**\n * A map containing an event subject for an `EditorJS` instance\n */\nexport interface EventMap {\n  /**\n   * A map key containing a {BehaviorSubject} of {EventType}\n   */\n  [key: string]: BehaviorSubject;\n}\n\n/**\n * A map containing instances of `EditorJS`\n */\nexport interface EditorMap {\n  /**\n   * A map key containing a {BehaviorSubject} of {EditorJS}\n   */\n  [key: string]: BehaviorSubject;\n}\n\n/**\n * A map containing `BehaviorSubject` of `Block` elements from `EditorJS`\n */\nexport interface BlocksMap {\n  /**\n   * A map key containing a {BehaviorSubject} of {Block[]}\n   */\n  [key: string]: BehaviorSubject;\n}\n\n/**\n * A map containing `BehaviorSubject` of `boolean` values of the ready state of `EditorJS`\n */\nexport interface ReadyMap {\n  /**\n   * A map key containing a {BehaviorSubject} of {boolean}\n   */\n  [key: string]: BehaviorSubject;\n}\n\n/**\n * A map containing `BehaviorSubject` of `number` which is the timestamp of the last `EditorJS` change\n */\nexport interface ChangeMap {\n  /**\n   * A map key containing a {BehaviorSubject} of {number}\n   */\n  [key: string]: BehaviorSubject;\n}\n\n    \n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/SaveEnd.html":{"url":"classes/SaveEnd.html","title":"class - SaveEnd","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  SaveEnd\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            libs/ngx-editorjs-ngrx/src/lib/actions/ngx-editorjs.actions.ts\n        \n\n\n\n            \n                Implements\n            \n            \n                        Action\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                payload\n                            \n                            \n                                    Readonly\n                                type\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(payload: literal type)\n                    \n                \n                        \n                            \n                                Defined in libs/ngx-editorjs-ngrx/src/lib/actions/ngx-editorjs.actions.ts:18\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        payload\n                                                  \n                                                        \n                                                                    literal type\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            payload\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     literal type\n\n                        \n                    \n                        \n                            \n                                    Defined in libs/ngx-editorjs-ngrx/src/lib/actions/ngx-editorjs.actions.ts:19\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                            type\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : EditorJSActionTypes.SaveEnd\n                        \n                    \n                        \n                            \n                                    Defined in libs/ngx-editorjs-ngrx/src/lib/actions/ngx-editorjs.actions.ts:18\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { Action } from '@ngrx/store';\nimport { OutputData } from '@editorjs/editorjs';\n\nexport enum EditorJSActionTypes {\n  SaveStart = '[ngx-editorjs] Start Save',\n  SaveEnd = '[ngx-editorjs] Start End',\n  NotReady = '[ngx-editorjs] Not Ready',\n  Ready = '[ngx-editorjs] Ready',\n  Changed = '[ngx-editorjs] Changed'\n}\n\nexport class SaveStart implements Action {\n  readonly type = EditorJSActionTypes.SaveStart;\n  constructor(public payload: { holder: string }) {}\n}\n\nexport class SaveEnd implements Action {\n  readonly type = EditorJSActionTypes.SaveEnd;\n  constructor(public payload: { holder: string; data: OutputData }) {}\n}\n\nexport class NotReady implements Action {\n  readonly type = EditorJSActionTypes.NotReady;\n  constructor(public payload: { holder: string }) {}\n}\n\nexport class Ready implements Action {\n  readonly type = EditorJSActionTypes.Ready;\n  constructor(public payload: { holder: string }) {}\n}\n\nexport class Changed implements Action {\n  readonly type = EditorJSActionTypes.Changed;\n  constructor(public payload: { holder: string; data: OutputData }) {}\n}\n\nexport type NgxEditorJSActions = SaveStart | SaveEnd | NotReady | Ready | Changed;\n\n    \n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/SaveStart.html":{"url":"classes/SaveStart.html","title":"class - SaveStart","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  SaveStart\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            libs/ngx-editorjs-ngrx/src/lib/actions/ngx-editorjs.actions.ts\n        \n\n\n\n            \n                Implements\n            \n            \n                        Action\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                payload\n                            \n                            \n                                    Readonly\n                                type\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(payload: literal type)\n                    \n                \n                        \n                            \n                                Defined in libs/ngx-editorjs-ngrx/src/lib/actions/ngx-editorjs.actions.ts:13\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        payload\n                                                  \n                                                        \n                                                                    literal type\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            payload\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     literal type\n\n                        \n                    \n                        \n                            \n                                    Defined in libs/ngx-editorjs-ngrx/src/lib/actions/ngx-editorjs.actions.ts:14\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                            type\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : EditorJSActionTypes.SaveStart\n                        \n                    \n                        \n                            \n                                    Defined in libs/ngx-editorjs-ngrx/src/lib/actions/ngx-editorjs.actions.ts:13\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { Action } from '@ngrx/store';\nimport { OutputData } from '@editorjs/editorjs';\n\nexport enum EditorJSActionTypes {\n  SaveStart = '[ngx-editorjs] Start Save',\n  SaveEnd = '[ngx-editorjs] Start End',\n  NotReady = '[ngx-editorjs] Not Ready',\n  Ready = '[ngx-editorjs] Ready',\n  Changed = '[ngx-editorjs] Changed'\n}\n\nexport class SaveStart implements Action {\n  readonly type = EditorJSActionTypes.SaveStart;\n  constructor(public payload: { holder: string }) {}\n}\n\nexport class SaveEnd implements Action {\n  readonly type = EditorJSActionTypes.SaveEnd;\n  constructor(public payload: { holder: string; data: OutputData }) {}\n}\n\nexport class NotReady implements Action {\n  readonly type = EditorJSActionTypes.NotReady;\n  constructor(public payload: { holder: string }) {}\n}\n\nexport class Ready implements Action {\n  readonly type = EditorJSActionTypes.Ready;\n  constructor(public payload: { holder: string }) {}\n}\n\nexport class Changed implements Action {\n  readonly type = EditorJSActionTypes.Changed;\n  constructor(public payload: { holder: string; data: OutputData }) {}\n}\n\nexport type NgxEditorJSActions = SaveStart | SaveEnd | NotReady | Ready | Changed;\n\n    \n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/SidebarComponent.html":{"url":"components/SidebarComponent.html","title":"component - SidebarComponent","body":"\n                   \n\n\n\n\n\n  Components\n  SidebarComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    apps/ngx-tinynodes/src/app/components/sidebar-component/sidebar.component.ts\n\n\n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                tinynodes-sidebar\n            \n\n            \n                styleUrls\n                sidebar.component.scss\n            \n\n\n\n            \n                templateUrl\n                sidebar.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n\n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                openSourceMenu\n                            \n                            \n                                projectsMenu\n                            \n                        \n                    \n                \n\n\n\n\n        \n    \n\n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        openSourceMenu\n                    \n                \n                \n                    \n                        Type :         MenuGroup\n\n                    \n                \n                        \n                            \n                                    Defined in apps/ngx-tinynodes/src/app/components/sidebar-component/sidebar.component.ts:14\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        projectsMenu\n                    \n                \n                \n                    \n                        Type :         MenuGroup\n\n                    \n                \n                        \n                            \n                                    Defined in apps/ngx-tinynodes/src/app/components/sidebar-component/sidebar.component.ts:11\n                            \n                        \n            \n        \n\n\n\n\n\n\n\n\n\n    \n        import { Component, Input } from '@angular/core';\nimport { MenuGroup } from '@tinynodes/ngx-tinynodes-core';\n\n@Component({\n  selector: 'tinynodes-sidebar',\n  templateUrl: 'sidebar.component.html',\n  styleUrls: ['sidebar.component.scss']\n})\nexport class SidebarComponent {\n  @Input()\n  projectsMenu: MenuGroup;\n\n  @Input()\n  openSourceMenu: MenuGroup;\n}\n\n    \n\n    \n        \n  {{ projectsMenu.title }}\n\n  {{ child.label }}\n\n\n\n  {{ openSourceMenu.title }}\n\n  {{ child.label }}\n -->\n\n    \n\n    \n                \n                    sidebar.component.scss\n                \n                \n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '  {{ projectsMenu.title }}  {{ child.label }}  {{ openSourceMenu.title }}  {{ child.label }} -->'\n    var COMPONENTS = [{'name': 'AppContainerComponent', 'selector': 'tinynodes-root'},{'name': 'HomePageComponent', 'selector': 'tinynodes-home-page'},{'name': 'NavBarComponent', 'selector': 'tinynodes-nav-bar'},{'name': 'NgxEditorJSComponent', 'selector': 'ngx-editorjs'},{'name': 'PageContainerComponent', 'selector': 'ngx-page-container'},{'name': 'SidebarComponent', 'selector': 'tinynodes-sidebar'}];\n    var DIRECTIVES = [{'name': 'NgxEditorJSDirective', 'selector': '[ngxEditorJS]'}];\n    var ACTUAL_COMPONENT = {'name': 'SidebarComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/Tag.html":{"url":"interfaces/Tag.html","title":"interface - Tag","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  Tag\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            libs/ngx-editorjs-demo/src/lib/store/pages/pages.models.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        key\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        key\n                                    \n                                \n                                \n                                    \n                                        key:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { ID } from '@datorama/akita';\nimport { Block } from '@tinynodes/ngx-editorjs';\n\nexport interface Tag {\n  key: string;\n}\n\nexport interface PageBlock extends Block {\n  id: ID;\n}\n\nexport interface Page {\n  id: ID;\n  pageTitle: string;\n  pageTags: Tag[];\n  blocks: PageBlock[];\n}\n\n    \n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/TestClass.html":{"url":"classes/TestClass.html","title":"class - TestClass","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  TestClass\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            libs/ngx-editorjs/src/testing/shared.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                render\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in libs/ngx-editorjs/src/testing/shared.ts:5\n                            \n                        \n\n            \n        \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            render\n                        \n                        \n                    \n                \n            \n            \n                \nrender()\n                \n            \n\n\n            \n                \n                    Defined in libs/ngx-editorjs/src/testing/shared.ts:7\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         any\n\n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { ToolSettings } from '@editorjs/editorjs';\nimport { BasePlugin } from '../lib/types/plugins';\nimport { EditorJSConfig } from '../lib/types/config';\n\nexport class TestClass {\n  constructor() {}\n  render() {\n    return document.createElement('div');\n  }\n}\n\nexport class MockPlugin implements BasePlugin {\n  public plugin(): ToolSettings {\n    return { class: TestClass };\n  }\n  shortcut() {\n    return 'test-shortcut';\n  }\n}\n\nexport class MockEditorJS {\n  blocks: any;\n  saver: any;\n  version: string;\n  destroy: () => void;\n\n  constructor(private config: EditorJSConfig) {\n    this.version = 'test';\n\n    this.destroy = () => {};\n\n    this.blocks = {\n      clear: () => {},\n      render: () => {}\n    };\n\n    this.saver = {\n      save: (): Promise => {\n        return Promise.resolve({\n          time: Date.now(),\n          version: 'test',\n          blocks: []\n        });\n      }\n    };\n    (config as any).onReady();\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/TinynodeDemos.html":{"url":"interfaces/TinynodeDemos.html","title":"interface - TinynodeDemos","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  TinynodeDemos\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            libs/ngx-tinynodes-core/src/lib/stores/app/application.model.ts\n        \n\n            \n                Description\n            \n            \n                The demos on tinynodes\n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        ngx-editorjs-demo\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        ngx-editorjs-demo\n                                    \n                                \n                                \n                                    \n                                        ngx-editorjs-demo:         NgxEditorJSDemoData\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         NgxEditorJSDemoData\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    The ngx-editorjs-demo data\n\n                                \n                            \n                        \n                    \n            \n    \n\n\n    \n        import { Block } from '@tinynodes/ngx-editorjs';\nimport { MenuGroup } from '../../types/app';\n\n/**\n * An Enum of the keys in the application state\n */\nexport enum ApplicationStateKeys {\n  /**\n   * The hidden state key\n   */\n  Hidden = 'hidden',\n\n  /**\n   * The menus key\n   */\n  Menus = 'menus',\n\n  /**\n   * The demo data key\n   */\n  DemoData = 'demoData'\n}\n\n/**\n * Interface for a demo data object\n */\nexport interface DemoData {\n  /**\n   * The name of the demo (e.g. `ngx-editorjs-demo`)\n   */\n  name: string;\n  /**\n   * The data for the demo as ``\n   */\n  data: T;\n}\n\n/**\n * Interface for `ngx-editorjs-demo` data\n * TODO: This should be moved\n */\nexport interface NgxEditorJSDemo {\n  /**\n   * The initial blocks for the demo\n   */\n  blocks: Block[];\n}\n\n/**\n * The demo data for `ngx-editorjs-demo`\n */\nexport interface NgxEditorJSDemoData extends DemoData {}\n\n/**\n * The demos on tinynodes\n */\nexport interface TinynodeDemos {\n  /**\n   * The `ngx-editorjs-demo` data\n   */\n  'ngx-editorjs-demo': NgxEditorJSDemoData;\n}\n\n/**\n * A representation of the application state\n */\nexport interface ApplicationState {\n  /**\n   * If the side menu is hidden\n   */\n  hidden: boolean;\n\n  /**\n   * A set of menus loaded from application data\n   */\n  menus: MenuGroup[];\n\n  /**\n   * Data for demos\n   */\n  demoData: DemoData[];\n}\n\n    \n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/TinynodeDemos-1.html":{"url":"interfaces/TinynodeDemos-1.html","title":"interface - TinynodeDemos-1","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  TinynodeDemos\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/ngx-tinynodes/src/app/core/stores/app/application.model.ts\n        \n\n            \n                Description\n            \n            \n                The demos on tinynodes\n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        ngx-editorjs-demo\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        ngx-editorjs-demo\n                                    \n                                \n                                \n                                    \n                                        ngx-editorjs-demo:         NgxEditorJSDemoData\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         NgxEditorJSDemoData\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    The ngx-editorjs-demo data\n\n                                \n                            \n                        \n                    \n            \n    \n\n\n    \n        import { Block } from '@tinynodes/ngx-editorjs';\nimport { MenuGroup } from '../../types/app';\n\n/**\n * An Enum of the keys in the application state\n */\nexport enum ApplicationStateKeys {\n  /**\n   * The hidden state key\n   */\n  Hidden = 'hidden',\n\n  /**\n   * The menus key\n   */\n  Menus = 'menus',\n\n  /**\n   * The demo data key\n   */\n  DemoData = 'demoData'\n}\n\n/**\n * Interface for a demo data object\n */\nexport interface DemoData {\n  /**\n   * The name of the demo (e.g. `ngx-editorjs-demo`)\n   */\n  name: string;\n  /**\n   * The data for the demo as ``\n   */\n  data: T;\n}\n\n/**\n * Interface for `ngx-editorjs-demo` data\n * TODO: This should be moved\n */\nexport interface NgxEditorJSDemo {\n  /**\n   * The initial blocks for the demo\n   */\n  blocks: Block[];\n}\n\n/**\n * The demo data for `ngx-editorjs-demo`\n */\nexport interface NgxEditorJSDemoData extends DemoData {}\n\n/**\n * The demos on tinynodes\n */\nexport interface TinynodeDemos {\n  /**\n   * The `ngx-editorjs-demo` data\n   */\n  'ngx-editorjs-demo': NgxEditorJSDemoData;\n}\n\n/**\n * A representation of the application state\n */\nexport interface ApplicationState {\n  /**\n   * If the side menu is hidden\n   */\n  hidden: boolean;\n\n  /**\n   * A set of menus loaded from application data\n   */\n  menus: MenuGroup[];\n\n  /**\n   * Data for demos\n   */\n  demoData: DemoData[];\n}\n\n    \n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/ToolSettingsMap.html":{"url":"interfaces/ToolSettingsMap.html","title":"interface - ToolSettingsMap","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  ToolSettingsMap\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            libs/ngx-editorjs/src/lib/types/plugins.ts\n        \n\n            \n                Description\n            \n            \n                A map of all the tools settings\n\n            \n\n\n\n\n            \n    Indexable\n        \n            \n                \n                    \n                        [key: string]:    ToolConstructable | ToolSettings\n\n                    \n                \n                        \n                            \n                                Defined in libs/ngx-editorjs/src/lib/types/plugins.ts:17\n                            \n                        \n                \n                    \n                        The key of the plugin and the plugin exported tool settings\n\n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { InjectionToken } from '@angular/core';\nimport { ToolSettings, ToolConstructable } from '@editorjs/editorjs';\n\n/**\n * A Module plugin configuration\n */\nexport interface PluginConfig {\n  /**\n   * The key of the plugin and the plugin class extending `BasePlugin`\n   */\n  [key: string]: BasePlugin;\n}\n\n/**\n * A map of all the tools settings\n */\nexport interface ToolSettingsMap {\n  /**\n   * The key of the plugin and the plugin exported tool settings\n   */\n  [key: string]: ToolConstructable | ToolSettings;\n}\n\n/**\n * Defines the interface for required and optional plugin methods.\n * These methods allow a plugin to return a EditorJS plugin and an optional shortcut\n */\nexport interface BasePlugin {\n  /**\n   * The plugin settings to be returned\n   */\n  plugin: () => ToolConstructable | ToolSettings;\n\n  /**\n   * Optional shortcut for the plugin\n   */\n  shortcut?: () => string;\n}\n\n/**\n * The Injection token for initial plugins as defined in the ngx-editorjs module\n */\nexport const InitialPlugins = new InjectionToken('InitialPlugins');\n\n/**\n * The injection token for adding plugins via your own application\n */\nexport const UserPlugins = new InjectionToken('UserPlugins');\n\n    \n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/ToolSettingsMap-1.html":{"url":"interfaces/ToolSettingsMap-1.html","title":"interface - ToolSettingsMap-1","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  ToolSettingsMap\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            libs/ngx-editorjs-plugins/src/lib/types/plugins.ts\n        \n\n            \n                Description\n            \n            \n                A map of all the tools settings\n\n            \n\n\n\n\n            \n    Indexable\n        \n            \n                \n                    \n                        [key: string]:    ToolConstructable | ToolSettings\n\n                    \n                \n                        \n                            \n                                Defined in libs/ngx-editorjs-plugins/src/lib/types/plugins.ts:17\n                            \n                        \n                \n                    \n                        The key of the plugin and the plugin exported tool settings\n\n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { InjectionToken } from '@angular/core';\nimport { ToolSettings, ToolConstructable } from '@editorjs/editorjs';\n\n/**\n * A Module plugin configuration\n */\nexport interface PluginConfig {\n  /**\n   * The key of the plugin and the plugin class extending `BasePlugin`\n   */\n  [key: string]: BasePlugin;\n}\n\n/**\n * A map of all the tools settings\n */\nexport interface ToolSettingsMap {\n  /**\n   * The key of the plugin and the plugin exported tool settings\n   */\n  [key: string]: ToolConstructable | ToolSettings;\n}\n\n/**\n * Defines the interface for required and optional plugin methods.\n * These methods allow a plugin to return a EditorJS plugin and an optional shortcut\n */\nexport interface BasePlugin {\n  /**\n   * The plugin settings to be returned\n   */\n  plugin: () => ToolConstructable | ToolSettings;\n\n  /**\n   * Optional shortcut for the plugin\n   */\n  shortcut?: () => string;\n}\n\n/**\n * The Injection token for initial plugins as defined in the ngx-editorjs module\n */\nexport const InitialPlugins = new InjectionToken('InitialPlugins');\n\n/**\n * The injection token for adding plugins via your own application\n */\nexport const UserPlugins = new InjectionToken('UserPlugins');\n\n    \n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"changelog.html":{"url":"changelog.html","title":"getting-started - changelog","body":"\n                   \n\nTinynodes Changelog\n\nThis changelog is related to the overall site. You can also find changelogs for libraries under the library docs\n\n\nWednesday, 15th May 2019\nToday I have released @tinynodes/ngx-editorjs@1.3.0. This will be without a Forms component. In this release the main change is internally I'm using a new EditorJS Injector module I've created to handle managing the underlying instance. There are also a lot of documentation improvments\nMonday, 13th May 2019\nToday I have released @tinynodes/ngx-editorjs@1.2.0. For now I've removed any default plugins from core package, now all plugins must be added at the application level - this can be see in the demo app.\nSunday, 12th May 2019\nThe first devlog is to report that currently version 1.2 has been delayed due to current build issues.\nA bug report has been filed on @nrwl/nx project.\nIn 1.2 there is a new @tinynodes/ngx-editorjs-plugins module that provides exports for several common EditorJS plugins and will be expanded to cover all the officially released plugins.\nWith this change the current build scripts break, and until it is resolved this will block the release.\nIn the meantime I'll continue to work on this small demo site, making it more useful as a good example of an Angular app.\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"contributing.html":{"url":"contributing.html","title":"getting-started - contributing","body":"\n                   \n\nContributing\nWhen contributing to this repository, please first discuss the change you wish to make via issue,\nemail, or any other method with the owners of this repository before making a change.\nPlease note we have a code of conduct, please follow it in all your interactions with the project.\nPull Request Process\n\nEnsure any install or build dependencies are removed before the end of the layer when doing a\nbuild.\nUpdate the README.md with details of changes to the interface, this includes new environment\nvariables, exposed ports, useful file locations and container parameters.\nIncrease the version numbers in any examples files and the README.md to the new version that this\nPull Request would represent. The versioning scheme we use is SemVer.\nYou may merge the Pull Request in once you have the sign-off of two other developers, or if you\ndo not have permission to do that, you may request the second reviewer to merge it for you.\n\nCode of Conduct\nOur Pledge\nIn the interest of fostering an open and welcoming environment, we as\ncontributors and maintainers pledge to making participation in our project and\nour community a harassment-free experience for everyone, regardless of age, body\nsize, disability, ethnicity, gender identity and expression, level of experience,\nnationality, personal appearance, race, religion, or sexual identity and\norientation.\nOur Standards\nExamples of behavior that contributes to creating a positive environment\ninclude:\n\nUsing welcoming and inclusive language\nBeing respectful of differing viewpoints and experiences\nGracefully accepting constructive criticism\nFocusing on what is best for the community\nShowing empathy towards other community members\n\nExamples of unacceptable behavior by participants include:\n\nThe use of sexualized language or imagery and unwelcome sexual attention or\nadvances\nTrolling, insulting/derogatory comments, and personal or political attacks\nPublic or private harassment\nPublishing others' private information, such as a physical or electronic\naddress, without explicit permission\nOther conduct which could reasonably be considered inappropriate in a\nprofessional setting\n\nOur Responsibilities\nProject maintainers are responsible for clarifying the standards of acceptable\nbehavior and are expected to take appropriate and fair corrective action in\nresponse to any instances of unacceptable behavior.\nProject maintainers have the right and responsibility to remove, edit, or\nreject comments, commits, code, wiki edits, issues, and other contributions\nthat are not aligned to this Code of Conduct, or to ban temporarily or\npermanently any contributor for other behaviors that they deem inappropriate,\nthreatening, offensive, or harmful.\nScope\nThis Code of Conduct applies both within project spaces and in public spaces\nwhen an individual is representing the project or its community. Examples of\nrepresenting a project or community include using an official project e-mail\naddress, posting via an official social media account, or acting as an appointed\nrepresentative at an online or offline event. Representation of a project may be\nfurther defined and clarified by project maintainers.\nEnforcement\nInstances of abusive, harassing, or otherwise unacceptable behavior may be\nreported by contacting the project team at me@tane.dev. All\ncomplaints will be reviewed and investigated and will result in a response that\nis deemed necessary and appropriate to the circumstances. The project team is\nobligated to maintain confidentiality with regard to the reporter of an incident.\nFurther details of specific enforcement policies may be posted separately.\nProject maintainers who do not follow or enforce the Code of Conduct in good\nfaith may face temporary or permanent repercussions as determined by other\nmembers of the project's leadership.\nAttribution\nThis Code of Conduct is adapted from the Contributor Covenant, version 1.4,\navailable at http://contributor-covenant.org/version/1/4\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"dependencies.html":{"url":"dependencies.html","title":"package-dependencies - dependencies","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        Dependencies\n    \n    \n        \n            @angular/animations : ~7.2.15\n        \n            @angular/cdk : ^7.3.7\n        \n            @angular/common : ~7.2.15\n        \n            @angular/compiler : ~7.2.15\n        \n            @angular/core : ~7.2.15\n        \n            @angular/flex-layout : ^7.0.0-beta.24\n        \n            @angular/forms : ~7.2.15\n        \n            @angular/material : ^7.3.7\n        \n            @angular/platform-browser : ~7.2.15\n        \n            @angular/platform-browser-dynamic : ~7.2.15\n        \n            @angular/router : ~7.2.15\n        \n            @datorama/akita-ng-router-store : ^3.0.2\n        \n            @datorama/akita-ngdevtools : ^1.0.4\n        \n            @editorjs/editorjs : ^2.13.0\n        \n            @editorjs/header : ^2.2.3\n        \n            @editorjs/list : ^1.3.4\n        \n            @editorjs/paragraph : ^2.5.0\n        \n            @ngrx/effects : ^7.4.0\n        \n            @ngrx/store : ^7.4.0\n        \n            core-js : ^2.5.4\n        \n            hammerjs : ^2.0.8\n        \n            install : ^0.12.2\n        \n            ngx-hideable-header : 0.0.5\n        \n            ngx-markdown : ^7.1.5\n        \n            npm : ^6.9.0\n        \n            rxjs : 6.3.3\n        \n            zone.js : ^0.8.26\n    \n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/enumerations.html":{"url":"miscellaneous/enumerations.html","title":"miscellaneous-enumerations - enumerations","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous\n  Enumerations\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            ApplicationStateKeys   (libs/.../application.model.ts)\n                        \n                        \n                            ApplicationStateKeys   (apps/.../application.model.ts)\n                        \n                        \n                            EditorJSActionTypes   (libs/.../ngx-editorjs.actions.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    libs/ngx-tinynodes-core/src/lib/stores/app/application.model.ts\n    \n        \n            \n                \n                    \n                        \n                        ApplicationStateKeys\n                    \n                \n                    \n                        \n                            An Enum of the keys in the application state\n\n                        \n                    \n                        \n                            \n                                 Hidden\n                            \n                        \n                        \n                            \n                                Value : hidden\n                            \n                        \n                        \n                            \n                                 Menus\n                            \n                        \n                        \n                            \n                                Value : menus\n                            \n                        \n                        \n                            \n                                 DemoData\n                            \n                        \n                        \n                            \n                                Value : demoData\n                            \n                        \n            \n        \n\n    apps/ngx-tinynodes/src/app/core/stores/app/application.model.ts\n    \n        \n            \n                \n                    \n                        \n                        ApplicationStateKeys\n                    \n                \n                    \n                        \n                            An Enum of the keys in the application state\n\n                        \n                    \n                        \n                            \n                                 Hidden\n                            \n                        \n                        \n                            \n                                Value : hidden\n                            \n                        \n                        \n                            \n                                 Menus\n                            \n                        \n                        \n                            \n                                Value : menus\n                            \n                        \n                        \n                            \n                                 DemoData\n                            \n                        \n                        \n                            \n                                Value : demoData\n                            \n                        \n            \n        \n\n    libs/ngx-editorjs-ngrx/src/lib/actions/ngx-editorjs.actions.ts\n    \n        \n            \n                \n                    \n                        \n                        EditorJSActionTypes\n                    \n                \n                        \n                            \n                                 SaveStart\n                            \n                        \n                        \n                            \n                                Value : [ngx-editorjs] Start Save\n                            \n                        \n                        \n                            \n                                 SaveEnd\n                            \n                        \n                        \n                            \n                                Value : [ngx-editorjs] Start End\n                            \n                        \n                        \n                            \n                                 NotReady\n                            \n                        \n                        \n                            \n                                Value : [ngx-editorjs] Not Ready\n                            \n                        \n                        \n                            \n                                 Ready\n                            \n                        \n                        \n                            \n                                Value : [ngx-editorjs] Ready\n                            \n                        \n                        \n                            \n                                 Changed\n                            \n                        \n                        \n                            \n                                Value : [ngx-editorjs] Changed\n                            \n                        \n            \n        \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/functions.html":{"url":"miscellaneous/functions.html","title":"miscellaneous-functions - functions","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous\n  Functions\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            createEditorJSConfig   (libs/.../editor-config.ts)\n                        \n                        \n                            createModuleConfig   (libs/.../module-config.ts)\n                        \n                        \n                            createNgxEditorJSDemoTools   (libs/.../index.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    libs/ngx-editorjs/src/lib/config/editor-config.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        \n                            createEditorJSConfig\n                        \n                        \n                    \n                \n            \n            \n                \ncreateEditorJSConfig(inputConfig?)\n                \n            \n\n\n\n\n            \n                \n                    Creates an EditorJS config\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    inputConfig\n\n                                    \n                                        Yes\n                                    \n\n\n                                    \n                                        The config to merge\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         EditorJSConfig\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    libs/ngx-editorjs/src/lib/config/module-config.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        \n                            createModuleConfig\n                        \n                        \n                    \n                \n            \n            \n                \ncreateModuleConfig(config?)\n                \n            \n\n\n\n\n            \n                \n                    Creates the configuration from the module config\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    config\n\n                                    \n                                        Yes\n                                    \n\n\n                                    \n                                        Optional module configurations\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         NgxEditorJSConfig\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    libs/ngx-editorjs-demo/src/lib/config/index.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        \n                            createNgxEditorJSDemoTools\n                        \n                        \n                    \n                \n            \n            \n                \ncreateNgxEditorJSDemoTools()\n                \n            \n\n\n\n\n            \n                \n                    Creates the tools for the ngx-tinynodes demo application\n\n\n                    \n                        Returns :         PluginConfig\n\n                    \n                \n            \n        \n    \n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"index.html":{"url":"index.html","title":"getting-started - index","body":"\n                   \n\nNgx-Tinynodes\nThis repository is a collection of Angular components and demos with full documentation.\nSee the Changelog for the development diary of this site, or visit the documentation of libraries.\nYou can also find a fully searchable API documentation for all @tinynode components.\nLinks\n\nRepository\nDocumentation\nDemo Application Site\nNPM Collection\n\nLibraries\nngx-editorjs\nThe ngx-editorjs module provides an EditorJS instance within an Angular application and provides a Directive to attach to and block element, a out-of-the-box component to use and a service to interact with EditorJS instances.\nBelow are the dependencies to use the features.\n@tinynodes/ngx-editorjs\nThis project provides a set of features for using EditorJS within Angular 7+\n\nReadme\nChangelog\nDemo\nProject Folder\n\n@tinynodes/ngx-editorjs-plugins\nThis project provides a module that exports a set of default plugins for @tinynodes/ngx-editorjs.\n\nReadme\nChangelog\nProject Folder\n\nDevelopment Information\nThis repository is run by Tane Piper and was generated using Nx.\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"license.html":{"url":"license.html","title":"getting-started - license","body":"\n                   \n\nTinynodes General MIT Licence\nCopyright 2019 Tane Piper me@tane.dev\nPermission is hereby granted, free of charge, to any person obtaining a copy of this software and associated documentation files (the \"Software\"), to deal in the Software without restriction, including without limitation the rights to use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of the Software, and to permit persons to whom the Software is furnished to do so, subject to the following conditions:\nThe above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software.\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules.html":{"url":"modules.html","title":"modules - modules","body":"\n                   \n\n\n\n\n    Modules\n\n\n    \n            \n                \n                    \n                        ApplicationDataModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        ApplicationDataModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        AppModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        AppRoutingModule\n                    \n                    \n                                \n                                    No graph available.\n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        EditorJSInstanceModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        MaterialModule\n                    \n                    \n                                \n                                    No graph available.\n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        NgxEditorjsDemoModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        NgxEditorJSModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        NgxEditorjsNgrxModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        NgxEditorjsPluginsModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        NgxHideableHeaderDemoModule\n                    \n                    \n                                \n                                    No graph available.\n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        NgxTinynodesCoreModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        NgxTinynodesCoreModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        PageStoreModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        PluginCodeModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        PluginHeaderModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        PluginImageModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        PluginLinkModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        PluginListModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        PluginMarkerModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        PluginParagraphModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        PluginSimpleImageModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"overview.html":{"url":"overview.html","title":"overview - overview","body":"\n                   \n\n\n\n    Overview\n\n  \n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_ApplicationDataModule\n\n\n\ncluster_ApplicationDataModule_providers\n\n\n\ncluster_AppModule\n\n\n\ncluster_AppModule_declarations\n\n\n\ncluster_AppModule_imports\n\n\n\ncluster_AppModule_bootstrap\n\n\n\ncluster_EditorJSInstanceModule\n\n\n\ncluster_EditorJSInstanceModule_providers\n\n\n\ncluster_NgxEditorjsDemoModule\n\n\n\ncluster_NgxEditorjsDemoModule_declarations\n\n\n\ncluster_NgxEditorjsDemoModule_imports\n\n\n\ncluster_NgxEditorjsDemoModule_exports\n\n\n\ncluster_NgxEditorJSModule\n\n\n\ncluster_NgxEditorJSModule_declarations\n\n\n\ncluster_NgxEditorJSModule_exports\n\n\n\ncluster_NgxEditorJSModule_providers\n\n\n\ncluster_NgxEditorjsNgrxModule\n\n\n\ncluster_NgxEditorjsPluginsModule\n\n\n\ncluster_NgxEditorjsPluginsModule_imports\n\n\n\ncluster_NgxEditorjsPluginsModule_exports\n\n\n\ncluster_NgxTinynodesCoreModule\n\n\n\ncluster_NgxTinynodesCoreModule_exports\n\n\n\ncluster_PageStoreModule\n\n\n\ncluster_PageStoreModule_providers\n\n\n\ncluster_PluginCodeModule\n\n\n\ncluster_PluginCodeModule_providers\n\n\n\ncluster_PluginHeaderModule\n\n\n\ncluster_PluginHeaderModule_providers\n\n\n\ncluster_PluginImageModule\n\n\n\ncluster_PluginImageModule_providers\n\n\n\ncluster_PluginLinkModule\n\n\n\ncluster_PluginLinkModule_providers\n\n\n\ncluster_PluginListModule\n\n\n\ncluster_PluginListModule_providers\n\n\n\ncluster_PluginMarkerModule\n\n\n\ncluster_PluginMarkerModule_providers\n\n\n\ncluster_PluginParagraphModule\n\n\n\ncluster_PluginParagraphModule_providers\n\n\n\ncluster_PluginSimpleImageModule\n\n\n\ncluster_PluginSimpleImageModule_providers\n\n\n\n\nAppService\n\nAppService\n\n\n\nApplicationDataModule\n\nApplicationDataModule\n\nApplicationDataModule -->\n\nAppService->ApplicationDataModule\n\n\n\nApplicationDataModule -->\n\nAppService->ApplicationDataModule\n\n\n\n\n\nApplicationQuery\n\nApplicationQuery\n\nApplicationDataModule -->\n\nApplicationQuery->ApplicationDataModule\n\n\n\nApplicationDataModule -->\n\nApplicationQuery->ApplicationDataModule\n\n\n\n\n\nApplicationStore\n\nApplicationStore\n\nApplicationDataModule -->\n\nApplicationStore->ApplicationDataModule\n\n\n\nApplicationDataModule -->\n\nApplicationStore->ApplicationDataModule\n\n\n\n\n\nAppModule\n\nAppModule\n\nAppModule -->\n\nApplicationDataModule->AppModule\n\n\n\n\n\nNgxTinynodesCoreModule\n\nNgxTinynodesCoreModule\n\nNgxTinynodesCoreModule -->\n\nApplicationDataModule->NgxTinynodesCoreModule\n\n\n\nNgxTinynodesCoreModule -->\n\nApplicationDataModule->NgxTinynodesCoreModule\n\n\n\n\n\nAppContainerComponent\n\nAppContainerComponent\n\nAppModule -->\n\nAppContainerComponent->AppModule\n\n\n\n\n\nHomePageComponent\n\nHomePageComponent\n\nAppModule -->\n\nHomePageComponent->AppModule\n\n\n\n\n\nNavBarComponent\n\nNavBarComponent\n\nAppModule -->\n\nNavBarComponent->AppModule\n\n\n\n\n\nSidebarComponent\n\nSidebarComponent\n\nAppModule -->\n\nSidebarComponent->AppModule\n\n\n\n\n\nAppContainerComponent \n\nAppContainerComponent \n\nAppContainerComponent  -->\n\nAppModule->AppContainerComponent \n\n\n\n\n\nAppRoutingModule\n\nAppRoutingModule\n\nAppModule -->\n\nAppRoutingModule->AppModule\n\n\n\n\n\nMaterialModule\n\nMaterialModule\n\nAppModule -->\n\nMaterialModule->AppModule\n\n\n\n\n\nNgxEditorjsDemoModule\n\nNgxEditorjsDemoModule\n\nNgxEditorjsDemoModule -->\n\nMaterialModule->NgxEditorjsDemoModule\n\n\n\n\n\nNgxEditorJSModule\n\nNgxEditorJSModule\n\nAppModule -->\n\nNgxEditorJSModule->AppModule\n\n\n\nNgxEditorjsDemoModule -->\n\nNgxEditorJSModule->NgxEditorjsDemoModule\n\n\n\n\n\nEditorJSInstanceModule \n\nEditorJSInstanceModule \n\nEditorJSInstanceModule  -->\n\nNgxEditorJSModule->EditorJSInstanceModule \n\n\n\n\n\nNgxEditorJSComponent \n\nNgxEditorJSComponent \n\nNgxEditorJSComponent  -->\n\nNgxEditorJSModule->NgxEditorJSComponent \n\n\n\n\n\nNgxEditorJSDirective \n\nNgxEditorJSDirective \n\nNgxEditorJSDirective  -->\n\nNgxEditorJSModule->NgxEditorJSDirective \n\n\n\n\n\nNgxEditorjsNgrxModule\n\nNgxEditorjsNgrxModule\n\nNgxEditorjsNgrxModule -->\n\nNgxEditorJSModule->NgxEditorjsNgrxModule\n\n\n\nAppModule -->\n\nNgxEditorjsDemoModule->AppModule\n\n\n\n\n\nPageContainerComponent \n\nPageContainerComponent \n\nPageContainerComponent  -->\n\nNgxEditorjsDemoModule->PageContainerComponent \n\n\n\n\n\nPageStoreModule \n\nPageStoreModule \n\nPageStoreModule  -->\n\nNgxEditorjsDemoModule->PageStoreModule \n\n\n\nAppModule -->\n\nNgxTinynodesCoreModule->AppModule\n\n\n\nNgxEditorjsDemoModule -->\n\nNgxTinynodesCoreModule->NgxEditorjsDemoModule\n\n\n\n\n\nApplicationDataModule \n\nApplicationDataModule \n\nApplicationDataModule  -->\n\nNgxTinynodesCoreModule->ApplicationDataModule \n\n\n\nApplicationDataModule  -->\n\nNgxTinynodesCoreModule->ApplicationDataModule \n\n\n\n\n\nEditorJSInstanceService\n\nEditorJSInstanceService\n\n\n\nEditorJSInstanceModule\n\nEditorJSInstanceModule\n\nEditorJSInstanceModule -->\n\nEditorJSInstanceService->EditorJSInstanceModule\n\n\n\nNgxEditorJSModule -->\n\nEditorJSInstanceModule->NgxEditorJSModule\n\n\n\n\n\nPageContainerComponent\n\nPageContainerComponent\n\nNgxEditorjsDemoModule -->\n\nPageContainerComponent->NgxEditorjsDemoModule\n\n\n\n\n\nPageStoreModule\n\nPageStoreModule\n\nNgxEditorjsDemoModule -->\n\nPageStoreModule->NgxEditorjsDemoModule\n\n\n\n\n\nPluginCodeModule\n\nPluginCodeModule\n\nNgxEditorjsDemoModule -->\n\nPluginCodeModule->NgxEditorjsDemoModule\n\n\n\n\n\nNgxEditorjsPluginsModule\n\nNgxEditorjsPluginsModule\n\nNgxEditorjsPluginsModule -->\n\nPluginCodeModule->NgxEditorjsPluginsModule\n\n\n\n\n\nPluginHeaderModule\n\nPluginHeaderModule\n\nNgxEditorjsDemoModule -->\n\nPluginHeaderModule->NgxEditorjsDemoModule\n\n\n\nNgxEditorjsPluginsModule -->\n\nPluginHeaderModule->NgxEditorjsPluginsModule\n\n\n\n\n\nPluginLinkModule\n\nPluginLinkModule\n\nNgxEditorjsDemoModule -->\n\nPluginLinkModule->NgxEditorjsDemoModule\n\n\n\nNgxEditorjsPluginsModule -->\n\nPluginLinkModule->NgxEditorjsPluginsModule\n\n\n\n\n\nPluginListModule\n\nPluginListModule\n\nNgxEditorjsDemoModule -->\n\nPluginListModule->NgxEditorjsDemoModule\n\n\n\nNgxEditorjsPluginsModule -->\n\nPluginListModule->NgxEditorjsPluginsModule\n\n\n\n\n\nPluginMarkerModule\n\nPluginMarkerModule\n\nNgxEditorjsDemoModule -->\n\nPluginMarkerModule->NgxEditorjsDemoModule\n\n\n\nNgxEditorjsPluginsModule -->\n\nPluginMarkerModule->NgxEditorjsPluginsModule\n\n\n\n\n\nPluginParagraphModule\n\nPluginParagraphModule\n\nNgxEditorjsDemoModule -->\n\nPluginParagraphModule->NgxEditorjsDemoModule\n\n\n\nNgxEditorjsPluginsModule -->\n\nPluginParagraphModule->NgxEditorjsPluginsModule\n\n\n\n\n\nPluginSimpleImageModule\n\nPluginSimpleImageModule\n\nNgxEditorjsDemoModule -->\n\nPluginSimpleImageModule->NgxEditorjsDemoModule\n\n\n\nNgxEditorjsPluginsModule -->\n\nPluginSimpleImageModule->NgxEditorjsPluginsModule\n\n\n\n\n\nNgxEditorJSComponent\n\nNgxEditorJSComponent\n\nNgxEditorJSModule -->\n\nNgxEditorJSComponent->NgxEditorJSModule\n\n\n\n\n\nNgxEditorJSDirective\n\nNgxEditorJSDirective\n\nNgxEditorJSModule -->\n\nNgxEditorJSDirective->NgxEditorJSModule\n\n\n\n\n\nNgxEditorJSPluginService\n\nNgxEditorJSPluginService\n\nNgxEditorJSModule -->\n\nNgxEditorJSPluginService->NgxEditorJSModule\n\n\n\n\n\nNgxEditorJSService\n\nNgxEditorJSService\n\nNgxEditorJSModule -->\n\nNgxEditorJSService->NgxEditorJSModule\n\n\n\n\n\nPluginImageModule\n\nPluginImageModule\n\nNgxEditorjsPluginsModule -->\n\nPluginImageModule->NgxEditorjsPluginsModule\n\n\n\n\n\nPluginCodeModule \n\nPluginCodeModule \n\nPluginCodeModule  -->\n\nNgxEditorjsPluginsModule->PluginCodeModule \n\n\n\n\n\nPluginHeaderModule \n\nPluginHeaderModule \n\nPluginHeaderModule  -->\n\nNgxEditorjsPluginsModule->PluginHeaderModule \n\n\n\n\n\nPluginImageModule \n\nPluginImageModule \n\nPluginImageModule  -->\n\nNgxEditorjsPluginsModule->PluginImageModule \n\n\n\n\n\nPluginLinkModule \n\nPluginLinkModule \n\nPluginLinkModule  -->\n\nNgxEditorjsPluginsModule->PluginLinkModule \n\n\n\n\n\nPluginListModule \n\nPluginListModule \n\nPluginListModule  -->\n\nNgxEditorjsPluginsModule->PluginListModule \n\n\n\n\n\nPluginMarkerModule \n\nPluginMarkerModule \n\nPluginMarkerModule  -->\n\nNgxEditorjsPluginsModule->PluginMarkerModule \n\n\n\n\n\nPluginParagraphModule \n\nPluginParagraphModule \n\nPluginParagraphModule  -->\n\nNgxEditorjsPluginsModule->PluginParagraphModule \n\n\n\n\n\nPluginSimpleImageModule \n\nPluginSimpleImageModule \n\nPluginSimpleImageModule  -->\n\nNgxEditorjsPluginsModule->PluginSimpleImageModule \n\n\n\n\n\nPagesQuery\n\nPagesQuery\n\nPageStoreModule -->\n\nPagesQuery->PageStoreModule\n\n\n\n\n\nPagesService\n\nPagesService\n\nPageStoreModule -->\n\nPagesService->PageStoreModule\n\n\n\n\n\nPagesStore\n\nPagesStore\n\nPageStoreModule -->\n\nPagesStore->PageStoreModule\n\n\n\n\n\nPluginCode\n\nPluginCode\n\nPluginCodeModule -->\n\nPluginCode->PluginCodeModule\n\n\n\n\n\nPluginHeader\n\nPluginHeader\n\nPluginHeaderModule -->\n\nPluginHeader->PluginHeaderModule\n\n\n\n\n\nPluginImage\n\nPluginImage\n\nPluginImageModule -->\n\nPluginImage->PluginImageModule\n\n\n\n\n\nPluginLink\n\nPluginLink\n\nPluginLinkModule -->\n\nPluginLink->PluginLinkModule\n\n\n\n\n\nPluginList\n\nPluginList\n\nPluginListModule -->\n\nPluginList->PluginListModule\n\n\n\n\n\nPluginMarker\n\nPluginMarker\n\nPluginMarkerModule -->\n\nPluginMarker->PluginMarkerModule\n\n\n\n\n\nPluginParagraph\n\nPluginParagraph\n\nPluginParagraphModule -->\n\nPluginParagraph->PluginParagraphModule\n\n\n\n\n\nPluginSimpleImage\n\nPluginSimpleImage\n\nPluginSimpleImageModule -->\n\nPluginSimpleImage->PluginSimpleImageModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n  \n\n    \n        \n            \n                \n                    \n                    \n                        22 Modules\n                    \n                \n            \n        \n        \n            \n                \n                    \n                    6 Components\n                \n            \n        \n        \n            \n                \n                    \n                    1 Directive\n                \n            \n        \n        \n            \n                \n                    \n                    22 Injectables\n                \n            \n        \n        \n            \n                \n                    \n                    8 Classes\n                \n            \n        \n        \n            \n                \n                    \n                    43 Interfaces\n                \n            \n        \n    \n\n\n \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"todo.html":{"url":"todo.html","title":"getting-started - todo","body":"\n                   \n\nngx-tinynodes Todo\nGeneral Todos\n\n Add CI pipeline for publishing modules\n Publish doc changes and tags back to repo\n\nngx-editorjs\n\n Add full EditorJS config support\n Add config options as @Input on component and directive\n Add autosave option support to module config\n Expose EditorJS CoreAPI via service helpers (e.g. blocks, selection, etc)\n Provide peer-dependency ngrx/effects via library to control service\n\nngx-editorjs-demo\n\n Add store for page\n Add controls for setting editor\n Add Save feature\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/typealiases.html":{"url":"miscellaneous/typealiases.html","title":"miscellaneous-typealiases - typealiases","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous\n  Type aliases\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            BlockTypes   (libs/.../blocks.ts)\n                        \n                        \n                            ListStyle   (libs/.../blocks.ts)\n                        \n                        \n                            NgxEditorJSActions   (libs/.../ngx-editorjs.actions.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    libs/ngx-editorjs/src/lib/types/blocks.ts\n    \n    \n        \n            \n                \n                    \n                    BlockTypes\n                \n            \n            \n                \n                    Type of all the basic block type\n\n                \n            \n            \n                \n                        ParagraphBlock | HeaderBlock | ImageBlock | ListBlock | Block\n\n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    ListStyle\n                \n            \n            \n                \n                    Available list styles, supports ordered and unordered.\nA custom string can also be added\n\n                \n            \n            \n                \n                        \"ordered\" | \"unordered\" | string\n\n                \n            \n        \n    \n    libs/ngx-editorjs-ngrx/src/lib/actions/ngx-editorjs.actions.ts\n    \n    \n        \n            \n                \n                    \n                    NgxEditorJSActions\n                \n            \n            \n                \n                        SaveStart | SaveEnd | NotReady | Ready | Changed\n\n                \n            \n        \n    \n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/variables.html":{"url":"miscellaneous/variables.html","title":"miscellaneous-variables - variables","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous\n  Variables\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            appRoutes   (apps/.../app-routing.module.ts)\n                        \n                        \n                            DEFAULT_HOLDER_ID   (libs/.../editor-config.ts)\n                        \n                        \n                            EDITIOR_JS_INSTANCE   (libs/.../config.ts)\n                        \n                        \n                            EDITORJS_MODULE_IMPORT   (libs/.../editorjs-injector.ts)\n                        \n                        \n                            environment   (apps/.../environment.prod.ts)\n                        \n                        \n                            environment   (apps/.../environment.ts)\n                        \n                        \n                            FOR_ROOT_OPTIONS_TOKEN   (libs/.../config.ts)\n                        \n                        \n                            getGreeting   (apps/.../app.po.ts)\n                        \n                        \n                            InitialPlugins   (libs/.../plugins.ts)\n                        \n                        \n                            InitialPlugins   (libs/.../plugins.ts)\n                        \n                        \n                            MAP_DEFAULTS   (libs/.../editorjs-injector.ts)\n                        \n                        \n                            NGX_EDITORJS_CONFIG   (libs/.../config.ts)\n                        \n                        \n                            ngxEditorjsDemoRoutes   (libs/.../ngx-editorjs-demo.routes.ts)\n                        \n                        \n                            ngxHideableHeaderDemoRoutes   (libs/.../ngx-hideable-header-demo.module.ts)\n                        \n                        \n                            UserPlugins   (libs/.../plugins.ts)\n                        \n                        \n                            UserPlugins   (libs/.../plugins.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    apps/ngx-tinynodes/src/app/app-routing.module.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            appRoutes\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     Route[]\n\n                        \n                    \n                    \n                        \n                            Default value : [\n  {\n    path: '',\n    redirectTo: 'home',\n    pathMatch: 'full'\n  },\n  {\n    path: 'home',\n    component: HomePageComponent\n  }\n]\n                        \n                    \n\n                \n                    \n                        The main application routes\n\n                    \n                \n\n            \n        \n\n    libs/ngx-editorjs/src/lib/config/editor-config.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            DEFAULT_HOLDER_ID\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Default value : 'editor-js'\n                        \n                    \n\n                \n                    \n                        The default holder ID to attach EditorJS to\n\n                    \n                \n\n            \n        \n\n    libs/ngx-editorjs/src/lib/types/config.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            EDITIOR_JS_INSTANCE\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : new InjectionToken('EDITIOR_JS_INSTANCE')\n                        \n                    \n\n                \n                    \n                        Get the EditorJS instance injected into the app\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            FOR_ROOT_OPTIONS_TOKEN\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : new InjectionToken('FOR_ROOT_OPTIONS_TOKEN')\n                        \n                    \n\n                \n                    \n                        Internal token for injecting the NgxEditorJSConfig into the config factory\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            NGX_EDITORJS_CONFIG\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : new InjectionToken('NGX_EDITORJS_CONFIG')\n                        \n                    \n\n                \n                    \n                        Injection token provied for NgxEditorJSConfig\n\n                    \n                \n\n            \n        \n\n    libs/ngx-editorjs/src/lib/utils/editorjs-injector.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            EDITORJS_MODULE_IMPORT\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : new InjectionToken('EDITORJS_MODULE_IMPORT')\n                        \n                    \n\n                \n                    \n                        Injection token for the EditorJS class\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            MAP_DEFAULTS\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     []\n\n                        \n                    \n                    \n                        \n                            Default value : [['blocksMap', []], ['changeMap', 0], ['readyMap', false]]\n                        \n                    \n\n                \n                    \n                        Default values for each internal map\n\n                    \n                \n\n            \n        \n\n    apps/ngx-tinynodes/src/environments/environment.prod.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            environment\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         object\n\n                        \n                    \n                    \n                        \n                            Default value : {\n  production: true\n}\n                        \n                    \n\n\n            \n        \n\n    apps/ngx-tinynodes/src/environments/environment.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            environment\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         object\n\n                        \n                    \n                    \n                        \n                            Default value : {\n  production: false\n}\n                        \n                    \n\n\n            \n        \n\n    apps/ngx-tinynodes-e2e/src/support/app.po.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            getGreeting\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : () => cy.get('h1')\n                        \n                    \n\n\n            \n        \n\n    libs/ngx-editorjs/src/lib/types/plugins.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            InitialPlugins\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : new InjectionToken('InitialPlugins')\n                        \n                    \n\n                \n                    \n                        The Injection token for initial plugins as defined in the ngx-editorjs module\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            UserPlugins\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : new InjectionToken('UserPlugins')\n                        \n                    \n\n                \n                    \n                        The injection token for adding plugins via your own application\n\n                    \n                \n\n            \n        \n\n    libs/ngx-editorjs-plugins/src/lib/types/plugins.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            InitialPlugins\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : new InjectionToken('InitialPlugins')\n                        \n                    \n\n                \n                    \n                        The Injection token for initial plugins as defined in the ngx-editorjs module\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            UserPlugins\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : new InjectionToken('UserPlugins')\n                        \n                    \n\n                \n                    \n                        The injection token for adding plugins via your own application\n\n                    \n                \n\n            \n        \n\n    libs/ngx-editorjs-demo/src/lib/ngx-editorjs-demo.routes.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            ngxEditorjsDemoRoutes\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     Route[]\n\n                        \n                    \n                    \n                        \n                            Default value : [\n  {\n    path: 'ngx-editorjs-demo',\n    redirectTo: 'ngx-editorjs-demo/pages',\n    pathMatch: 'full'\n  },\n  {\n    path: 'ngx-editorjs-demo/pages',\n    component: PageContainerComponent\n  },\n\n  {\n    path: 'ngx-editorjs-demo/pages/:id',\n    component: PageContainerComponent\n  }\n]\n                        \n                    \n\n\n            \n        \n\n    libs/ngx-hideable-header-demo/src/lib/ngx-hideable-header-demo.module.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            ngxHideableHeaderDemoRoutes\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     Route[]\n\n                        \n                    \n                    \n                        \n                            Default value : []\n                        \n                    \n\n\n            \n        \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"additional-documentation/tinynodes-library-docs.html":{"url":"additional-documentation/tinynodes-library-docs.html","title":"additional-page - Tinynodes Library Docs","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nNgx-Tinynodes Libraries\nHere you can find all the README and CHANGELOG details of all projects released to NPM\n\nPlease note due to a bug in CompoDoc the `README.md` files are currently not generated correctly - these are rendered correctly on GitHub and NPM.\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"additional-documentation/tinynodes-library-docs/ngx-editorjs-readme.html":{"url":"additional-documentation/tinynodes-library-docs/ngx-editorjs-readme.html","title":"additional-page - ngx-editorjs Readme","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nNgx-EditorJS\nThis library provides Angular support for EditorJS via a directive, component and service.\nYou can see a demo in action or download it\non GitHub to see how it was implemented.\nFor changes see the CHANGELOG\nInstalling and usage\nInstall the library via npm along with the plugins module and EditorJS module. For each plugin you want to use you also need to install it's dependency - see the Plugin Docs for more information.\n```bash\n\nnpm install @tinynodes/ngx-editorjs @tinynodes/ngx-editorjs-plugins @editorjs/editorjs @editorjs/paragraph....\n```\n\nOnce installed, include the NgxEditorJSModule module in your project with the forRoot method. The forRoot takes an optional configuration.\nYou also need to pass a provider for UserPlugins with a factory function that returns an options map tools to provide to the EditorJS instance. An example of this is shows in the demo application\n```typescript\nimport { NgModule } from '@angular/core';\nimport { BrowserModule } from '@angular/platform-browser';\nimport { NgxEditorJSModule } from '@tinynodes/ngx-editorjs';\nimport { AppComponent } from './app.component';\nimport EditorJS from '@editorjs/editorjs';\nimport {\n  PluginParagraphModule,\n  PluginParagraph,\n  PluginHeaderModule,\n  PluginHeader,\n  PluginListModule,\n  PluginList\n} from '@tinynodes/ngx-editorjs-plugins';\nexport function createTools() {\n  return {\n    paragraph: new PluginParagraph(),\n    header: new PluginHeader(),\n    list: new PluginList()\n  };\n}\n@NgModule({\n  declarations: [AppComponent],\n  imports: [\n    BrowserModule,\n    NgxEditorJSModule.forRoot({\n      editorjs: {\n        autofocus: false,\n        holder: 'editor',\n        initialBlock: 'paragraph',\n        data: {\n          time: Date.now(),\n          version: EditorJS.version,\n          blocks: []\n        }\n      }\n    })\n  ],\n  providers: [\n    {\n      provide: UserPlugins,\n      useFactory: createTools\n    }\n  ],\n  bootstrap: [AppComponent]\n})\nexport class AppModule {}\n```\nConfiguration\nEditorJS Config\nThe configuration is deigned to be extendable in the future, so each potential feature has a key. For configuring EditorJS pass the options below into a editorjs key in the config.\nThe module configuration allows EditorJS to be provided with a set of options for use. See the EditorJS docs for more details.\n| Configuration Key | Description                                                                                       |\n| ----------------- | ------------------------------------------------------------------------------------------------- |\n| autofocus       | Sets the EditorJS instance to autofocus on load                                                   |\n| data            | Initial data to load into the editor, this is an OutputData object from EditorJS                |\n| hideToolbar     | Hides the toolbar by default                                                                      |\n| holder          | The element ID of the holder, this will set all instances in this module to use this as a default |\n| initialBlock    | The default block type to use in the editor                                                       |\n| minHeight       | Height of Editor's bottom area that allows to set focus on the last Block                         |\n| placeholder     | Placeholder of the first block                                                                    |\n| sanitizer       | Content sanitizer configurations                                                                  |\nAdding custom tools\nSee Adding Custom Tools\nWhat's in the library\nNgxEditorJSDirective\nThis is the main directive which can be used on any element with the [ngxEditorJS]. It has one input which is blocks and this takes an array of EditorJS blocks.\nNgxEditorJSComponent\nThis component can be used in any Angular component using the  tag. Again this component can take a set of blocks, it also provides a holder input for overriding the ID.\nNgxEditorJSService\nThis service provides handling the life-cycle of the EditorJS instance, and exposes the underlying EditorJS instance.API - in future releases more of the API will be exposed via service methods to make controlling the container easier.\nLinks\n\nDocumentation\nGitHub\nNPM\nAngular Demo\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"additional-documentation/tinynodes-library-docs/ngx-editorjs-readme/ngx-editorjs-changelog.html":{"url":"additional-documentation/tinynodes-library-docs/ngx-editorjs-readme/ngx-editorjs-changelog.html","title":"additional-page - ngx-editorjs Changelog","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nChangelog\nAll notable changes to this project will be documented in this file.\nThe format is based on Keep a Changelog,\nand this project adheres to Semantic Versioning.\n[1.3.0] - 2019-05-15\nAdded\n\n@Input properties on the component and directive for providing EditorJS instance configuration\ncreateEditorJSConfig function available to generate EditorJS configurations\n\nChanged\n\nInternal service now uses an EditorJS injector module and service, provides more robust control and creation of EditorJS instances and controlling them.\n\n[1.2.0] - 2019-05-13\nAdded\n\nAdded all configuration options for EditorJS to the module configuration\n\nChanged\n\nRemoved all plugins from the ngx-editorjs project. All plugins are now provided by the @tinynodes/ngx-editorjs-plugins module and a default set of tools must be provided in an application.\nAdded NgxEditorJSPluginService back to core, all plugins must now be provided with a UserPlugin provider.\n\n[1.1.2] - 2019-05-11\nAdded\n\nImproved internal documentation for generated docs.\n\nRemoved\n\nGenerated docs no longer included in this module - all docs are now available via the generated docs site\n\n[1.1.1] - 2019-05-10\nAdded\n\nGenerated docs via CompoDoc in npm package\nInclude CHANGELOG.md in npm package\n\n[1.1.0] - 2019-05-10\nAdded\n\nEditorJS default paragraph plugin is now included in the default tools, fixes issue where the regenerated component failed to use the default plugin.\n\nChanged\n\nNgxEditorJSService is now provided in the root and now stores multiple editor instances. Getters removed and replaced with methods that take the holder parameter which is the ID of the DOM element the editor should be attached to.\nPlugins are now instances of an Injectable class for AOT and have an instance method of plugin. Also supports shortcut as an optional method that returns the string to set up as the shortcut.\nEditorJSPlugin now renamed BasePlugin and changed from class to interface.\nImproved documentation\n\n[1.0.0] - 2019-05-10\nAdded\n\nInitial release\nReadme, Changelog\nNgxEditorJSModule: That can be imported into the root of a project\nNgxEditorJSDirective: A directive that can attach an EditorJS instance to an element\nNgxEditorJSComponent: A component that is pre-configured to use the directive in any Angular project\nNgxEditorJSService: An Angular service for controlling an EditorJS instance\nDefault plugins for Header and List plugins, documentation on how to add plugins with AOT support\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"additional-documentation/tinynodes-library-docs/ngx-editorjs-plugins-readme.html":{"url":"additional-documentation/tinynodes-library-docs/ngx-editorjs-plugins-readme.html","title":"additional-page - ngx-editorjs-plugins Readme","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nNgx-EditorJS Plugins\nThis module provides a default set of EditorJS plugins for @tinynodes/ngx-editorjs via Angular modules.\nPeer Dependencies\nAll EditorJS plugins are listed as peerDependencies of the project - this is because Angular requires these modules to be in the root. You must manually install these are the root of your Angular application.\n```bash\n\nnpm install @editorjs/paragraph @editorjs/header ....\n```\n\nPlugin List\n| Plugin Name             | Description                                            | Links                                                                                               |\n| ----------------------- | ------------------------------------------------------ | --------------------------------------------------------------------------------------------------- |\n| PluginCodeModule        | Provides a  block editor                       | README GitHub              |\n| PluginHeaderModule      | Provides a  -  block editor                  | README GitHub          |\n| PluginImageModule       | Provides an  block editor + file upload support | README GitHub            |\n| PluginLinkModule        | Provides an  block editor                         | README GitHub              |\n| PluginIListModule       | Provides an / block editor                   | README GitHub              |\n| PluginMarkerModule      | Provides inline text marking                           | README GitHub          |\n| PluginParagraphModule   | Provides an  block editor                         | README GitHub    |\n| PluginSimpleImageModule | Provides an  block editor with paste support    | README GitHub |\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"additional-documentation/tinynodes-library-docs/ngx-editorjs-plugins-readme/ngx-editorjs-plugins-changelog.html":{"url":"additional-documentation/tinynodes-library-docs/ngx-editorjs-plugins-readme/ngx-editorjs-plugins-changelog.html","title":"additional-page - ngx-editorjs-plugins Changelog","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nChangelog\nAll notable changes to this project will be documented in this file.\nThe format is based on Keep a Changelog,\nand this project adheres to Semantic Versioning.\n[1.1.0] - 2019-05-13\nRemoved\n\nRemoved the NgxEditorJSPluginService from this module back to core\n\n[1.0.0] - 2019-05-11\nAdded\n\nInitial release of module with default plugins - see README.md for details.\nMoved the internal PluginService to public NgxEditorJSPluginService provided by this module\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"}}
}
