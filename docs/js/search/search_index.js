var COMPODOC_SEARCH_INDEX = {
    "index": {"version":"2.3.6","fields":["title","body"],"fieldVectors":[["title/components/AppComponent.html",[0,1.661,1,2.164]],["body/components/AppComponent.html",[0,2.886,1,2.919,2,2.361,3,0.162,4,0.162,5,1.816,6,1.17,7,1.717,8,1.816,9,0.114,10,3.167,11,5.999,12,2.479,13,0.451,14,2.937,15,1.99,16,1.549,17,3.971,18,3.81,19,1.657,20,4.56,21,5.228,22,1.717,23,4.385,24,2.83,25,2.761,26,5.213,27,2.761,28,4.308,29,0.421,30,1.096,31,2.856,32,2.404,33,5.999,34,1.361,35,4.615,36,5.095,37,3.149,38,3.341,39,0.924,40,2.246,41,3.35,42,1.272,43,4.308,44,0.986,45,0.012,46,1.728,47,0.805,48,0.619,49,2.937,50,0.884,51,2.151,52,2.361,53,3.769,54,2.834,55,1.755,56,3.769,57,2.834,58,5.824,59,1.499,60,2.255,61,2.834,62,3.769,63,1.778,64,4.131,65,4.56,66,2.071,67,3.769,68,2.834,69,4.308,70,3.341,71,0.542,72,2.761,73,2.246,74,0.407,75,1.932,76,1.309,77,2.246,78,2.479,79,2.071,80,0.152,81,0.291,82,0.895,83,1.63,84,2.479,85,2.479,86,2.479,87,2.479,88,2.479,89,2.159,90,1.593,91,2.076,92,5.824,93,2.834,94,3.158,95,1.932,96,3.554,97,2.834,98,1.99,99,2.479,100,3.769,101,3.769,102,2.479,103,2.479,104,2.479,105,2.479,106,2.479,107,1.42,108,1.054,109,1.42,110,3.769,111,4.257,112,4.56,113,2.479,114,2.479,115,2.479,116,3.769,117,2.761,118,0.663,119,3.769,120,2.479,121,2.246,122,2.479,123,3.414,124,2.479,125,2.479,126,2.479,127,2.479,128,2.071,129,2.479,130,2.246,131,0.924,132,2.761,133,2.159,134,1.259,135,3.732,136,1.816,137,1.816,138,1.42,139,1.816,140,1.483,141,1.816,142,1.816,143,1.362,144,1.816,145,1.42,146,1.816,147,1.483,148,1.717,149,1.309,150,1.553,151,1.816,152,0.004,153,0.006,154,0.004]],["title/modules/AppModule.html",[155,0.664,156,2.944]],["body/modules/AppModule.html",[1,3.99,3,0.202,4,0.202,9,0.142,10,1.633,13,0.562,14,3.46,15,2.996,24,2.095,45,0.012,55,1.709,71,0.713,74,0.508,80,0.19,81,0.363,89,2.543,90,1.51,131,1.153,140,3.742,147,3.742,152,0.005,153,0.007,154,0.005,155,0.913,156,5.665,157,1.153,158,1.272,159,2.284,160,2.284,161,1.36,162,1.272,163,3.094,164,3.094,165,3.094,166,3.094,167,4.874,168,4.874,169,3.763,170,4.874,171,2.021,172,1.409,173,1.36,174,3.536,175,5.075,176,4.022,177,4.44,178,5.075,179,5.075,180,3.075,181,5.075,182,5.075,183,3.536,184,1.952,185,5.075,186,3.094,187,3.094,188,4.44,189,4.022,190,2.585,191,5.075,192,3.536,193,3.094,194,2.411,195,3.536,196,2.543,197,3.094,198,3.094,199,1.938,200,3.536,201,3.094,202,2.021,203,0.188,204,3.094,205,2.802,206,2.585,207,3.536,208,3.536,209,3.536,210,3.536,211,2.802,212,3.536,213,3.536,214,3.536,215,3.536,216,3.536,217,3.536,218,3.536,219,3.536,220,2.411,221,3.536,222,3.536,223,3.536,224,3.536,225,3.536]],["title/injectables/AppService.html",[41,2.484,226,0.886]],["body/injectables/AppService.html",[3,0.287,4,0.287,9,0.202,10,3.465,29,0.746,31,2.751,32,2.658,34,2.035,39,1.637,41,3.705,42,1.371,44,1.747,45,0.012,46,1.49,47,0.938,48,1.096,59,1.747,60,2.628,71,0.649,74,0.721,76,2.319,80,0.269,81,0.516,82,2.247,83,2.888,152,0.007,153,0.009,154,0.007,199,3.897,226,1.322,227,1.931,228,4.392,229,6.564,230,4.128,231,5.484,232,4.392,233,4.808,234,4.545,235,5.02,236,5.104,237,5.02,238,5.02,239,5.02,240,4.392,241,3.979,242,4.128,243,1.747,244,5.02,245,5.02,246,5.02]],["title/modules/ApplicationDataModule.html",[155,0.664,167,2.944]],["body/modules/ApplicationDataModule.html",[3,0.304,4,0.304,9,0.214,10,2.459,41,4.636,45,0.012,71,0.664,74,0.765,80,0.285,81,0.547,131,1.736,152,0.007,153,0.009,154,0.007,155,0.819,157,1.736,158,1.914,159,2.048,160,2.048,161,2.812,162,1.914,167,5.731,171,2.663,172,2.12,173,2.048,184,2.572,233,5.165,234,4.883,240,4.657,241,4.218,247,4.657,248,4.657,249,5.323,250,5.323]],["title/injectables/ApplicationQuery.html",[226,0.886,233,2.767]],["body/injectables/ApplicationQuery.html",[3,0.32,4,0.32,9,0.226,10,3.191,39,1.831,42,1.082,44,1.953,45,0.012,46,1.665,47,1.049,48,1.225,71,0.676,74,0.806,80,0.301,81,0.577,152,0.008,153,0.01,154,0.008,196,2.813,199,3.786,226,1.418,227,2.159,233,4.428,234,4.732,236,5.932,241,4.448,251,4.911,252,2.752,253,4.911,254,5.613,255,3.597,256,4.911,257,4.911,258,4.911]],["title/interfaces/ApplicationState.html",[255,2.767,259,0.538]],["body/interfaces/ApplicationState.html",[3,0.329,4,0.329,9,0.232,10,2.665,29,0.858,30,1.787,45,0.012,47,1.313,71,0.5,80,0.377,128,4.218,152,0.008,153,0.01,154,0.008,194,3.934,231,5.764,255,4.503,259,0.876,260,1.766,261,4.573,262,6.249,263,3.018,264,5.764,265,6.148,266,1.299,267,4.218]],["title/injectables/ApplicationStore.html",[226,0.886,234,2.616]],["body/injectables/ApplicationStore.html",[3,0.309,4,0.309,9,0.218,10,3.402,15,2.502,29,0.805,34,2.135,39,2.402,42,1.303,45,0.012,46,1.607,59,1.884,60,2.835,71,0.638,74,0.778,80,0.29,81,0.557,152,0.007,153,0.009,154,0.007,196,2.714,199,4.036,226,1.387,227,2.084,231,4.94,234,4.094,252,2.692,255,3.471,256,4.739,268,4.739,269,7.713,270,5.416,271,5.416,272,5.356,273,4.292,274,3.115,275,5.416,276,5.416]],["title/interfaces/BasePlugin.html",[259,0.538,277,1.782]],["body/interfaces/BasePlugin.html",[3,0.231,4,0.231,9,0.163,13,0.643,15,1.869,29,0.601,30,1.419,34,2.174,42,0.78,45,0.012,47,1.042,48,1.701,63,2.303,71,0.483,74,0.581,80,0.387,81,0.416,90,1.029,152,0.006,153,0.008,154,0.006,155,0.858,203,0.255,243,1.941,259,0.9,260,1.238,266,1.437,277,2.841,278,0.319,279,2.758,280,4.421,281,3.804,282,2.584,283,4.078,284,4.483,285,5.031,286,3.309,287,4.078,288,2.758,289,3.07,290,5.06,291,1.164,292,2.327,293,2.217,294,2.395,295,3.206,296,2.118,297,2.118,298,2.593,299,3.206,300,1.319,301,3.575,302,3.575,303,1.798,304,2.388,305,3.209,306,2.451,307,2.957,308,2.758,309,1.945,310,2.327,311,2.957]],["title/interfaces/Block.html",[118,0.664,259,0.538]],["body/interfaces/Block.html",[3,0.174,4,0.174,6,1.26,9,0.123,13,0.485,29,0.454,30,1.538,42,0.589,45,0.012,47,1.576,48,1.32,50,1.328,80,0.396,98,2.793,107,2.284,108,2.688,109,2.284,118,1.282,152,0.004,153,0.006,154,0.004,203,0.268,252,2.409,259,0.983,260,0.935,263,2.172,266,1.719,278,0.359,282,0.935,294,1.586,312,1.53,313,3.053,314,2.797,315,1.85,316,3.053,317,1.951,318,3.545,319,1.26,320,1.53,321,2.385,322,2.385,323,1.53,324,1.41,325,2.385,326,1.307,327,2.191,328,2.489,329,2.191,330,2.902,331,2.385,332,1.598,333,1.598,334,1.307,335,2.191,336,2.875,337,2.497,338,2.497,339,1.598,340,2.854,341,1.673,342,1.673,343,1.673,344,1.673,345,1.673,346,2.191,347,1.598,348,1.598]],["title/interfaces/BlocksMap.html",[259,0.538,349,2.616]],["body/interfaces/BlocksMap.html",[3,0.28,4,0.28,9,0.197,13,0.779,42,0.945,45,0.012,71,0.609,76,2.264,80,0.399,118,1.081,152,0.007,153,0.009,154,0.007,203,0.298,259,0.927,260,1.5,263,1.952,266,1.733,278,0.5,291,1.41,294,2.679,296,4.031,315,2.969,334,2.098,349,3.842,350,3.341,351,5.25,352,5.606,353,4.324,354,4.901,355,2.098,356,2.685,357,2.969,358,3.341,359,2.178,360,3.141,361,2.969,362,3.341,363,2.969,364,2.969,365,2.969]],["title/interfaces/ChangeMap.html",[259,0.538,365,2.616]],["body/interfaces/ChangeMap.html",[3,0.278,4,0.278,9,0.196,13,0.775,42,0.94,45,0.012,71,0.607,76,2.252,80,0.398,118,0.972,152,0.007,153,0.009,154,0.007,203,0.297,259,0.925,260,1.492,263,1.942,266,1.73,278,0.498,291,1.402,294,2.675,296,4.024,315,2.954,334,2.705,349,2.954,350,3.324,351,5.241,352,5.6,353,3.324,355,2.087,356,2.671,357,2.954,358,3.324,359,2.166,360,3.124,361,2.954,362,4.309,363,3.829,364,3.829,365,3.829,366,4.875]],["title/classes/Changed.html",[81,0.444,367,2.26]],["body/classes/Changed.html",[3,0.22,4,0.22,9,0.156,19,2.83,29,0.574,30,1.374,32,3.117,39,1.259,42,1.201,44,1.343,45,0.012,46,1.145,47,1.523,48,0.843,50,0.792,51,1.593,71,0.467,80,0.405,81,0.73,82,1.706,90,1.806,152,0.005,153,0.007,154,0.005,203,0.29,266,1.598,278,0.532,291,1.11,314,2.008,359,3.155,367,3.716,368,2.474,369,3.88,370,2.22,371,4.138,372,5.253,373,2.632,374,4.246,375,5.4,376,3.86,377,3.682,378,2.474,379,3.413,380,2.632,381,2.339,382,3.26,383,3.461,384,2.021,385,3.26,386,2.339,387,3.413,388,2.632,389,4.301,390,3.155,391,2.632,392,2.632,393,2.632,394,2.474]],["title/interfaces/EditorJSConfig.html",[259,0.538,395,3.156]],["body/interfaces/EditorJSConfig.html",[3,0.199,4,0.199,9,0.14,13,0.554,29,0.518,30,1.277,45,0.012,46,1.489,47,1.402,48,1.785,50,1.459,63,1.438,71,0.435,74,0.5,80,0.316,94,3.041,118,1.094,133,2.516,152,0.005,153,0.007,154,0.005,203,0.264,220,2.375,259,0.626,260,1.066,263,2.833,266,1.72,274,2.887,278,0.275,288,2.375,291,1.002,292,4.09,301,2.232,302,2.232,303,2.862,305,2.003,314,2.644,328,1.931,334,2.519,363,3.041,379,3.529,390,2.862,395,4.302,396,2.546,397,2.628,398,4.391,399,5.635,400,4.391,401,5.635,402,6.222,403,6.222,404,4.392,405,4.392,406,4.392,407,3.217,408,3.669,409,4.392,410,4.392,411,4.392,412,2.516,413,3.978,414,2.887,415,4.392,416,4.392,417,3.978,418,3.978,419,2.628,420,4.392,421,3.423,422,5.635,423,4.392,424,2.76,425,2.76,426,2.003,427,3.041,428,2.375,429,2.76,430,2.232,431,2.76]],["title/interfaces/EditorMap.html",[259,0.538,357,2.616]],["body/interfaces/EditorMap.html",[3,0.281,4,0.281,9,0.198,13,0.783,42,0.95,45,0.012,71,0.61,76,2.276,80,0.399,118,0.979,152,0.007,153,0.009,154,0.007,203,0.302,259,0.929,260,1.508,263,1.963,266,1.736,278,0.502,291,1.417,294,2.683,296,4.037,315,2.985,334,2.109,349,2.985,350,3.359,351,5.259,352,5.48,353,3.359,355,2.109,356,3.487,357,3.855,358,3.359,359,2.189,360,3.158,361,2.985,362,3.359,363,2.985,364,2.985,365,2.985,432,4.927]],["title/components/EditorPageComponent.html",[0,1.661,138,2.164]],["body/components/EditorPageComponent.html",[0,2.098,1,1.53,2,2.497,3,0.174,4,0.174,5,1.957,6,1.26,7,1.85,8,1.957,9,0.123,19,1.753,22,1.85,23,4.476,24,2.251,25,2.921,27,2.921,29,0.454,30,1.159,31,3.853,32,1.881,34,1.44,38,2.921,39,0.996,42,1.309,44,1.062,45,0.012,46,1.794,47,0.852,48,0.666,50,0.627,51,1.26,55,2.285,59,1.586,60,2.385,70,1.957,71,0.56,74,0.439,76,1.41,79,2.232,80,0.164,81,0.314,82,1.723,83,1.756,89,2.284,90,1.789,91,3.113,94,1.85,95,3.107,96,3.107,118,0.839,131,0.996,132,2.921,133,2.284,134,1.357,135,3.875,136,1.957,137,1.957,138,3.03,139,1.957,140,1.598,141,1.957,142,1.957,143,1.468,144,1.957,145,1.53,146,1.957,147,1.598,148,1.85,149,1.41,150,1.673,151,1.957,152,0.004,153,0.006,154,0.004,155,0.701,202,2.172,203,0.292,230,2.921,242,3.495,243,1.586,278,0.554,300,1.486,355,2.334,417,3.612,433,6.152,434,5.573,435,2.671,436,5.453,437,5.453,438,4.557,439,6.786,440,5.453,441,6.047,442,6.047,443,3.053,444,6.047,445,3.03,446,3.053,447,4.557,448,3.053,449,3.053,450,4.557,451,4.557,452,3.107,453,4.557,454,3.053,455,3.053,456,3.053,457,3.053,458,4.557,459,3.053,460,2.419,461,3.053,462,2.671,463,2.671,464,3.053,465,3.053,466,3.053,467,3.053,468,3.053,469,3.053,470,3.107,471,3.987,472,3.331,473,2.761,474,4.557,475,3.987,476,4.557,477,2.921,478,2.419,479,2.419]],["title/interfaces/Header.html",[259,0.538,330,1.782]],["body/interfaces/Header.html",[3,0.177,4,0.177,6,1.279,9,0.125,13,0.493,29,0.461,30,1.399,45,0.012,47,1.555,48,1.33,50,1.4,80,0.398,98,3.353,107,2.309,108,2.699,109,2.309,118,1.272,152,0.004,153,0.006,154,0.004,203,0.253,252,2.426,259,0.977,260,0.949,263,2.191,266,1.699,278,0.244,282,0.949,294,1.078,312,1.553,314,2.627,317,1.326,318,3.014,319,1.279,320,1.553,321,2.412,322,2.412,323,1.553,324,1.431,325,2.412,326,1.326,327,2.215,328,2.505,329,2.215,330,3.162,331,3.572,332,2.412,333,2.412,334,2.355,335,2.215,336,2.893,337,2.525,338,2.525,339,1.622,340,2.88,341,1.698,342,1.698,343,1.698,344,1.698,345,1.698,346,2.215,347,1.622,348,1.622]],["title/interfaces/HeaderBlock.html",[259,0.538,335,2.076]],["body/interfaces/HeaderBlock.html",[3,0.181,4,0.181,6,1.31,9,0.128,13,0.505,29,0.472,30,1.419,45,0.012,47,1.564,48,1.345,50,1.349,80,0.4,98,2.846,107,2.35,108,2.718,109,2.35,118,1.283,152,0.004,153,0.006,154,0.004,203,0.264,252,2.619,259,0.99,260,0.971,263,2.222,266,1.645,278,0.25,282,0.971,294,1.104,312,1.59,314,2.559,317,1.358,318,3.057,319,1.31,320,1.59,321,2.455,322,2.455,323,1.59,324,1.466,325,2.455,326,1.358,327,2.255,328,2.53,329,2.255,330,3.017,331,2.455,332,1.661,333,1.661,334,1.358,335,2.682,336,2.922,337,2.57,338,2.57,339,1.661,340,2.92,341,1.739,342,1.739,343,1.739,344,1.739,345,1.739,346,2.255,347,1.661,348,1.661]],["title/interfaces/Image.html",[259,0.538,336,1.919]],["body/interfaces/Image.html",[3,0.167,4,0.167,6,1.205,9,0.118,13,0.464,29,0.434,30,1.35,45,0.012,47,1.559,48,1.736,50,1.369,80,0.391,98,2.731,107,2.208,108,2.651,109,2.208,118,1.262,152,0.004,153,0.006,154,0.004,203,0.247,252,2.355,259,0.965,260,0.893,263,2.907,266,1.724,278,0.23,282,0.893,294,1.015,312,1.463,314,2.576,317,1.249,318,2.908,319,1.205,320,1.463,321,2.306,322,2.306,323,1.463,324,1.348,325,2.306,326,1.249,327,2.118,328,2.441,329,2.118,330,2.943,331,2.306,332,1.528,333,1.528,334,1.249,335,2.118,336,3.169,337,3.656,338,3.656,339,2.306,340,3.492,341,3.239,342,2.414,343,3.239,344,2.414,345,3.239,346,2.118,347,1.528,348,1.528]],["title/interfaces/ImageBlock.html",[259,0.538,346,2.076]],["body/interfaces/ImageBlock.html",[3,0.181,4,0.181,6,1.31,9,0.128,13,0.505,29,0.472,30,1.419,45,0.012,47,1.564,48,1.345,50,1.349,80,0.4,98,2.846,107,2.35,108,2.718,109,2.35,118,1.283,152,0.004,153,0.006,154,0.004,203,0.264,252,2.619,259,0.99,260,0.971,263,2.222,266,1.645,278,0.25,282,0.971,294,1.104,312,1.59,314,2.559,317,1.358,318,3.057,319,1.31,320,1.59,321,2.455,322,2.455,323,1.59,324,1.466,325,2.455,326,1.358,327,2.255,328,2.53,329,2.255,330,2.939,331,2.455,332,1.661,333,1.661,334,1.358,335,2.255,336,3.059,337,2.57,338,2.57,339,1.661,340,2.92,341,1.739,342,1.739,343,1.739,344,1.739,345,1.739,346,2.682,347,1.661,348,1.661]],["title/interfaces/List.html",[108,1.606,259,0.538]],["body/interfaces/List.html",[3,0.177,4,0.177,6,1.279,9,0.125,13,0.493,29,0.461,30,1.399,45,0.012,47,1.56,48,1.33,50,1.4,80,0.398,98,2.814,107,3.42,108,2.884,109,3.42,118,1.272,152,0.004,153,0.006,154,0.004,203,0.253,252,2.426,259,0.977,260,0.949,263,2.191,266,1.634,278,0.244,282,0.949,294,1.078,312,1.553,314,2.627,317,1.326,318,3.739,319,1.279,320,1.553,321,2.412,322,2.412,323,1.553,324,1.431,325,3.188,326,1.326,327,2.215,328,2.505,329,2.215,330,2.917,331,2.412,332,1.622,333,1.622,334,1.326,335,2.215,336,2.893,337,2.525,338,2.525,339,1.622,340,2.88,341,1.698,342,1.698,343,1.698,344,1.698,345,1.698,346,2.215,347,1.622,348,1.622]],["title/interfaces/ListBlock.html",[259,0.538,327,2.076]],["body/interfaces/ListBlock.html",[3,0.18,4,0.18,6,1.301,9,0.127,13,0.501,29,0.469,30,1.413,45,0.012,47,1.563,48,1.341,50,1.409,80,0.4,98,2.837,107,2.338,108,2.819,109,2.338,118,1.283,152,0.004,153,0.006,154,0.004,203,0.27,252,2.612,259,0.98,260,0.965,263,2.213,266,1.642,278,0.249,282,1.428,294,1.096,312,1.579,314,2.553,317,1.349,318,3.044,319,1.301,320,1.579,321,2.442,322,2.442,323,1.579,324,1.456,325,2.442,326,1.997,327,2.671,328,2.522,329,2.243,330,2.932,331,2.442,332,1.65,333,1.65,334,1.349,335,2.243,336,2.914,337,2.557,338,2.557,339,1.65,340,2.908,341,1.727,342,1.727,343,1.727,344,1.727,345,1.727,346,2.243,347,1.65,348,1.65]],["title/modules/MaterialModule.html",[155,0.664,168,2.944]],["body/modules/MaterialModule.html",[3,0.338,4,0.338,9,0.238,10,2.733,45,0.012,71,0.618,74,0.85,75,4.035,80,0.317,81,0.608,152,0.008,153,0.01,154,0.008,157,1.93,162,2.128,168,4.865,180,3.585,184,2.745,480,5.918,481,7.66,482,7.66,483,7.66,484,7.66,485,6.702]],["title/interfaces/MenuItem.html",[259,0.538,264,3.156]],["body/interfaces/MenuItem.html",[3,0.329,4,0.329,9,0.232,10,2.665,29,0.858,30,1.787,45,0.012,47,1.313,71,0.5,80,0.377,128,5.764,152,0.008,153,0.01,154,0.008,194,3.934,231,4.218,255,3.698,259,0.876,260,1.766,261,4.573,262,4.573,263,2.298,264,5.538,265,6.899,266,1.706,267,5.764]],["title/components/NavBarComponent.html",[0,1.661,140,2.26]],["body/components/NavBarComponent.html",[0,2.652,1,1.789,2,2.8,3,0.204,4,0.204,5,2.288,6,1.474,7,2.163,8,2.288,9,0.144,10,3.009,22,2.163,23,4.658,24,2.845,25,3.275,27,3.275,29,0.531,32,1.474,34,1.614,37,3.735,39,1.164,40,2.829,41,3.747,42,1.151,44,1.242,45,0.012,46,1.933,47,0.667,48,0.779,49,3.484,50,0.733,51,1.474,55,1.202,56,6.031,59,1.242,60,1.869,70,2.288,71,0.442,72,3.275,74,0.513,77,2.829,80,0.191,81,0.367,82,1.885,83,2.054,90,1.518,91,1.422,94,3.096,96,3.484,98,2.36,99,3.124,100,4.471,101,4.471,102,3.124,103,3.124,104,3.124,105,3.124,106,3.124,107,1.789,108,1.328,109,1.789,110,4.471,111,4.761,112,5.221,113,3.124,114,3.124,115,3.124,116,4.471,117,3.275,118,0.786,119,4.471,120,3.124,121,2.829,122,3.124,123,4.049,124,3.124,125,3.124,126,3.124,127,3.124,128,2.61,129,3.124,130,2.829,131,1.164,132,3.275,133,2.561,134,1.587,135,4.175,136,2.288,137,2.288,138,1.789,139,2.288,140,3.41,141,4.84,142,2.288,143,1.716,144,2.288,145,1.789,146,2.288,147,1.869,148,2.163,149,1.649,150,1.956,151,2.288,152,0.005,153,0.007,154,0.005,211,5.162,229,5.699,262,4.049,486,5.699,487,3.124,488,5.11,489,5.967,490,5.11,491,5.11,492,5.11,493,3.57,494,3.57,495,3.57,496,3.275,497,2.561,498,3.484]],["title/components/NgxEditorJSComponent.html",[0,1.661,143,2.076]],["body/components/NgxEditorJSComponent.html",[0,2.865,1,1.577,2,2.554,3,0.18,4,0.18,5,2.016,6,1.299,7,3.363,8,2.016,9,0.127,13,0.741,15,2.153,22,1.906,23,4.512,24,2.291,25,2.987,27,2.987,29,0.468,30,1.185,32,2.291,37,3.406,39,1.026,42,1.263,44,1.095,45,0.012,46,1.821,47,1.224,48,1.212,50,0.956,55,1.06,66,2.3,70,2.016,71,0.531,72,3.557,73,2.493,74,0.452,80,0.169,81,0.323,82,2.353,90,1.667,91,3.099,94,2.823,95,3.177,96,3.177,98,1.453,118,0.854,123,2.493,131,1.026,132,2.987,133,3.075,134,2.467,135,3.933,136,2.016,137,2.016,138,1.577,139,2.016,140,1.647,141,2.016,142,2.016,143,2.95,144,2.016,145,1.577,146,2.016,147,1.647,148,1.906,149,2.834,150,1.724,151,2.016,152,0.004,153,0.006,154,0.004,203,0.227,259,0.581,266,1.049,278,0.541,284,2.681,303,2.071,319,1.923,326,1.995,339,2.439,355,2.805,389,1.906,390,2.467,397,2.439,407,2.987,412,2.336,413,3.693,419,2.439,445,3.284,478,2.493,479,3.693,499,6.003,500,2.753,501,3.406,502,4.66,503,3.693,504,4.184,505,3.693,506,5.551,507,4.66,508,3.797,509,3.146,510,4.66,511,3.146,512,4.66,513,3.146,514,4.66,515,4.077,516,3.146,517,2.753,518,2.753,519,2.493,520,2.493,521,2.145,522,3.146,523,3.146,524,3.146,525,3.146,526,3.146,527,3.146]],["title/interfaces/NgxEditorJSConfig.html",[259,0.538,427,2.616]],["body/interfaces/NgxEditorJSConfig.html",[3,0.243,4,0.243,9,0.171,13,0.676,29,0.632,30,1.468,45,0.012,46,1.261,47,0.794,48,1.259,50,1.344,63,1.754,71,0.499,74,0.611,80,0.351,94,2.574,118,1.007,133,2.13,152,0.006,153,0.008,154,0.006,203,0.292,220,3.934,259,0.719,260,1.301,263,2.298,266,1.475,274,2.444,278,0.335,288,2.897,291,1.222,292,4.358,301,2.723,302,2.723,303,2.564,305,2.444,314,2.145,328,1.635,334,1.819,363,2.574,379,3.161,390,1.888,395,5.136,396,3.106,397,2.224,398,2.897,399,3.718,400,2.897,401,3.718,402,5.048,403,5.048,404,3.718,405,3.718,406,3.718,407,2.723,408,3.106,409,3.718,410,3.718,411,3.718,412,2.13,413,3.368,414,2.444,415,3.718,416,3.718,417,3.368,418,3.368,419,2.224,420,3.718,421,2.897,422,5.048,423,3.718,424,4.572,425,4.572,426,3.319,427,3.969,428,3.934,429,3.368,430,2.723,431,3.368]],["title/directives/NgxEditorJSDirective.html",[134,1.919,149,1.994]],["body/directives/NgxEditorJSDirective.html",[2,2.65,3,0.189,4,0.189,9,0.133,13,0.526,14,3.298,16,1.739,19,1.861,21,4.53,22,2.005,23,2.93,29,0.492,30,1.23,32,2.595,34,1.528,35,4.983,37,3.535,39,1.079,42,1.426,44,1.683,45,0.012,46,1.435,47,1.175,48,1.056,50,0.679,51,1.366,52,2.65,59,2.188,60,3.291,71,0.544,72,3.1,74,0.475,80,0.177,81,0.34,82,1.806,83,1.903,90,1.23,91,2.664,118,0.879,133,3.151,134,3.105,148,2.005,149,2.234,150,2.65,152,0.005,153,0.007,154,0.005,203,0.28,230,3.1,243,1.683,278,0.595,291,0.952,309,2.325,340,2.532,355,2.863,397,3.657,407,3.1,412,2.424,445,3.501,473,2.93,504,3.298,505,3.833,508,2.865,519,2.622,520,2.622,528,6.601,529,2.895,530,3.535,531,5.501,532,3.535,533,4.231,534,5.716,535,5.716,536,5.852,537,6.288,538,4.837,539,3.309,540,6.288,541,4.837,542,4.837,543,3.1,544,3.298,545,3.309,546,4.837,547,6.288,548,3.309,549,2.005,550,3.309,551,3.309,552,2.895,553,3.309,554,3.309,555,3.309,556,3.309,557,3.309,558,3.309,559,3.309,560,3.309,561,3.309,562,3.309,563,3.309,564,3.309]],["title/injectables/NgxEditorJSEffects.html",[226,0.886,565,3.422]],["body/injectables/NgxEditorJSEffects.html",[3,0.225,4,0.225,9,0.159,29,0.586,30,1.394,31,2.16,32,2.262,39,1.286,42,1.057,44,1.372,45,0.012,46,1.17,47,0.737,48,0.861,50,0.809,51,1.627,63,2.262,66,2.882,71,0.658,74,0.566,76,1.821,79,2.882,80,0.211,81,0.405,83,2.268,118,0.606,152,0.005,153,0.008,154,0.005,202,1.57,203,0.265,226,1.125,227,1.517,242,4.037,243,2.368,274,3.152,278,0.497,291,1.134,296,2.064,314,2.037,355,3.17,371,4.057,381,2.388,382,3.976,384,3.297,385,3.297,390,2.435,445,3.411,462,3.449,463,3.449,536,5.511,565,4.343,566,5.511,567,3.449,568,3.942,569,7.405,570,3.942,571,5.48,572,5.48,573,6.807,574,5.48,575,6.299,576,5.48,577,5.48,578,5.48,579,5.48,580,4.343,581,4.343,582,3.736,583,4.343,584,3.942,585,3.942,586,5.48,587,3.942,588,2.688,589,3.942,590,3.942,591,3.942,592,3.942]],["title/modules/NgxEditorJSModule.html",[155,0.664,169,2.366]],["body/modules/NgxEditorJSModule.html",[3,0.157,4,0.157,9,0.111,13,0.669,15,2.646,16,1.512,17,3.906,34,0.867,39,0.895,42,0.529,44,0.955,45,0.012,46,0.815,47,0.513,48,1.566,49,2.867,50,1.176,51,1.133,52,2.305,59,0.955,63,2.11,71,0.621,74,0.394,80,0.226,81,0.282,91,1.675,108,1.021,131,0.895,143,3.631,149,3.489,152,0.004,153,0.006,154,0.004,155,0.95,157,0.895,158,0.987,159,1.967,160,1.056,161,2.204,162,1.838,169,4.461,171,1.675,172,1.094,173,1.056,180,2.548,184,1.967,202,2.036,203,0.251,220,2.867,243,1.463,274,1.579,278,0.332,283,3.074,285,2.007,292,3.553,293,2.305,300,0.895,303,1.22,304,1.8,305,1.579,306,2.548,314,1.021,326,1.8,328,1.618,330,1.133,390,1.869,397,3.233,398,2.867,400,2.867,414,3.295,419,1.437,426,3.553,427,4.109,430,2.695,445,3.265,473,4.239,517,2.402,518,2.402,519,2.176,521,1.872,532,3.074,543,3.672,593,2.402,594,2.402,595,2.402,596,2.402,597,2.402,598,4.176,599,3.948,600,4.176,601,3.948,602,3.074,603,2.007,604,3.68,605,3.333,606,4.472,607,3.68,608,4.206,609,4.206,610,2.746,611,5.012,612,3.333,613,5.012,614,4.051,615,5.112,616,3.074,617,1.872,618,4.206,619,2.695,620,2.695,621,2.695,622,2.746,623,2.746,624,2.402,625,2.176,626,2.007,627,2.867,628,3.074,629,2.007,630,2.007,631,2.746,632,2.176,633,2.746,634,2.746,635,2.746,636,2.746,637,2.746,638,2.746,639,2.746,640,2.746,641,2.746]],["title/injectables/NgxEditorJSPluginService.html",[226,0.886,642,2.484]],["body/injectables/NgxEditorJSPluginService.html",[3,0.145,4,0.145,9,0.102,13,0.873,15,2.536,16,1.422,17,1.729,29,0.377,30,1.006,31,2.664,34,1.249,39,1.29,42,1.271,44,2.072,45,0.012,46,1.872,47,1.179,48,1.529,50,1.127,51,1.632,59,2.437,60,2.07,62,4.805,71,0.342,74,0.364,80,0.136,81,0.564,82,2.374,91,1.575,152,0.003,153,0.005,154,0.003,155,0.608,177,3.46,199,3.735,203,0.265,226,0.812,227,0.975,230,2.534,243,2.195,266,1.668,277,2.604,278,0.537,282,2.44,284,1.458,293,3.998,294,2.492,296,3.979,297,2.07,298,3.116,300,1.29,303,1.757,304,3.288,306,3.607,310,3.629,319,1.632,356,2.167,397,2.07,414,2.275,425,3.134,477,4.043,508,3.162,521,4.492,642,2.275,643,2.218,644,3.46,645,5.492,646,3.955,647,4.862,648,3.955,649,4.805,650,2.535,651,3.955,652,5.492,653,3.955,654,3.955,655,3.955,656,3.955,657,2.535,658,3.955,659,2.535,660,3.955,661,2.535,662,5.492,663,3.134,664,3.46,665,3.955,666,2.535,667,2.891,668,3.955,669,2.535,670,2.535,671,3.955,672,2.218,673,1.389,674,2.218,675,2.535,676,2.535,677,2.535,678,2.535,679,2.535,680,5.492,681,2.218,682,2.009,683,2.535,684,2.535,685,2.535,686,2.535,687,2.535,688,3.955,689,3.955,690,3.955]],["title/modules/NgxEditorJSPluginServiceModule.html",[155,0.664,598,2.767]],["body/modules/NgxEditorJSPluginServiceModule.html",[3,0.312,4,0.312,9,0.22,13,0.869,16,2.443,45,0.012,71,0.588,74,0.785,80,0.293,81,0.562,131,1.782,150,3.723,152,0.008,153,0.009,154,0.008,155,1.137,157,1.782,158,1.965,159,2.102,160,2.102,161,2.845,162,1.965,171,2.707,172,2.177,173,2.102,184,2.614,203,0.203,278,0.431,282,2.08,508,3.405,598,5.199,627,4.633,642,4.666,691,4.781,692,4.781,693,5.464,694,5.464]],["title/injectables/NgxEditorJSService.html",[226,0.886,445,2.164]],["body/injectables/NgxEditorJSService.html",[3,0.079,4,0.079,9,0.056,13,0.802,16,0.866,17,0.948,29,0.207,30,0.613,31,3.609,32,0.574,34,0.761,39,0.785,42,1.22,44,1.945,45,0.012,46,1.954,47,1.182,48,1.31,50,1.036,51,1.941,52,1.32,59,2.248,60,2.642,63,2.548,71,0.437,74,0.2,76,0.642,80,0.075,81,0.143,82,2.312,91,2.127,111,1.016,118,0.973,152,0.002,153,0.003,154,0.002,202,0.554,203,0.283,226,0.494,227,0.535,242,4.054,243,1.322,266,1.711,274,1.385,278,0.51,286,1.158,287,1.76,291,0.4,296,3.767,297,0.728,303,1.07,304,1.626,305,1.385,309,1.158,349,3.058,351,1.642,352,3.207,353,1.642,355,3.052,356,2.926,357,2.849,358,2.59,359,2.09,360,1.544,361,3.058,362,1.642,363,2.301,364,2.849,365,3.058,379,1.746,384,2.462,390,3.394,397,4.083,407,2.434,408,1.76,412,3.094,414,1.385,419,1.988,421,1.642,426,3.342,427,2.301,428,1.642,430,0.891,445,1.904,496,1.544,504,1.642,508,1.904,520,1.102,521,4.209,532,1.76,544,1.642,549,1.459,552,2.107,580,1.909,581,1.909,582,1.642,583,1.909,612,1.909,613,2.107,624,1.217,626,1.76,642,2.185,663,3.727,664,2.107,667,1.76,672,1.217,674,1.217,681,2.107,682,1.909,695,1.217,696,1.909,697,4.294,698,4.115,699,4.703,700,1.909,701,2.408,702,4.703,703,3.798,704,2.408,705,2.408,706,2.408,707,3.323,708,1.391,709,3.186,710,3.798,711,2.408,712,2.408,713,3.798,714,3.757,715,1.391,716,1.909,717,2.408,718,2.107,719,3.186,720,2.525,721,4.115,722,2.107,723,2.107,724,1.642,725,2.408,726,2.408,727,2.408,728,1.391,729,3.798,730,2.107,731,2.408,732,2.408,733,2.408,734,1.391,735,5.339,736,4.703,737,2.408,738,1.391,739,2.408,740,1.207,741,0.728,742,1.909,743,1.112,744,2.408,745,1.391,746,3.798,747,3.798,748,2.408,749,1.391,750,2.408,751,1.391,752,3.323,753,2.408,754,1.391,755,1.391,756,4.231,757,1.391,758,1.391,759,2.408,760,1.391,761,1.391,762,5.591,763,1.391,764,3.798,765,1.391,766,2.408,767,3.798,768,1.391,769,2.408,770,3.186,771,1.391,772,1.391,773,1.391,774,1.391,775,1.391,776,1.391,777,1.391,778,1.391,779,1.391,780,1.391,781,2.408,782,1.391,783,1.391,784,1.391,785,2.408,786,1.391,787,1.391,788,1.391,789,1.391,790,1.391,791,1.391,792,1.391,793,1.391,794,3.186,795,1.391,796,1.391,797,1.391]],["title/modules/NgxEditorjsDemoModule.html",[155,0.664,170,2.944]],["body/modules/NgxEditorjsDemoModule.html",[3,0.211,4,0.211,9,0.149,45,0.012,71,0.7,74,0.53,75,2.517,80,0.198,81,0.379,90,1.331,131,1.204,138,4.021,145,4.084,152,0.005,153,0.007,154,0.005,155,0.568,157,1.204,158,1.327,159,2.338,160,1.42,161,2.013,162,2.186,169,3.973,170,5.765,171,2.084,172,1.47,173,1.42,180,3.17,184,2.013,193,3.229,194,2.517,202,2.084,203,0.259,204,3.229,205,2.925,278,0.291,304,1.58,310,3.01,414,2.123,434,2.925,460,2.925,485,4.578,543,2.366,616,3.825,617,2.517,632,2.925,798,3.229,799,3.229,800,3.229,801,3.229,802,5.471,803,4.393,804,4.393,805,4.17,806,4.393,807,2.925,808,3.691,809,5.232,810,5.232,811,5.232,812,4.147,813,3.691,814,3.691,815,3.691,816,2.925,817,3.691,818,2.925,819,3.691,820,3.691,821,3.691,822,3.691]],["title/modules/NgxEditorjsNgrxModule.html",[155,0.664,823,3.156]],["body/modules/NgxEditorjsNgrxModule.html",[3,0.313,4,0.313,9,0.221,45,0.012,71,0.671,74,0.787,80,0.294,81,0.563,131,1.787,152,0.008,153,0.009,154,0.008,155,0.843,157,1.787,158,1.971,159,2.108,160,2.108,161,2.108,162,1.971,169,4.448,171,2.712,172,2.183,173,2.108,180,4.124,184,2.619,202,2.183,203,0.274,278,0.432,588,3.736,616,4.976,617,3.736,823,5.934,824,4.795,825,5.48,826,5.48,827,5.48,828,5.48,829,5.48]],["title/modules/NgxEditorjsPluginsModule.html",[155,0.664,830,3.156]],["body/modules/NgxEditorjsPluginsModule.html",[3,0.186,4,0.186,9,0.131,13,0.517,16,1.717,45,0.012,71,0.685,74,0.467,80,0.174,81,0.334,117,3.06,118,0.734,131,1.06,152,0.004,153,0.007,154,0.004,155,0.87,157,2.166,158,1.169,159,1.251,160,1.251,161,1.251,162,2.034,171,1.902,172,1.295,173,1.251,180,2.892,184,1.837,203,0.231,278,0.256,281,3.255,297,2.499,317,2.044,530,3.49,543,3.06,598,5.02,599,4.745,600,5.02,601,4.745,616,3.49,617,2.217,629,3.49,696,3.784,724,3.255,803,4.745,804,4.745,805,4.505,806,4.745,830,6.251,831,2.844,832,2.844,833,2.844,834,5.02,835,3.251,836,3.251,837,4.774,838,4.774,839,4.774,840,4.774,841,4.177,842,3.251,843,3.251,844,3.251,845,3.251,846,3.251,847,2.844,848,3.251,849,3.251,850,2.376,851,3.251,852,3.251]],["title/classes/NotReady.html",[81,0.444,387,2.366]],["body/classes/NotReady.html",[3,0.22,4,0.22,9,0.156,19,2.83,29,0.574,30,1.374,32,3.117,39,1.259,42,1.201,44,1.343,45,0.012,46,1.145,47,1.523,48,0.843,50,0.792,51,1.593,71,0.467,80,0.405,81,0.73,82,1.706,90,1.806,152,0.005,153,0.007,154,0.005,203,0.29,266,1.598,278,0.532,291,1.11,314,2.008,359,3.155,367,3.531,368,2.474,369,3.88,370,2.22,371,4.138,372,5.253,373,2.632,374,4.246,377,2.632,378,2.474,379,3.413,380,2.632,381,2.339,382,3.26,383,3.461,384,2.021,385,3.26,386,2.339,387,3.696,388,2.632,389,4.301,390,3.155,391,2.632,392,3.682,393,2.632,394,2.474,853,5.4,854,3.86]],["title/interfaces/Page.html",[55,1.454,259,0.538]],["body/interfaces/Page.html",[3,0.299,4,0.299,9,0.211,29,0.78,30,1.685,38,4.887,45,0.012,47,1.425,55,2.231,71,0.574,80,0.389,118,1.019,152,0.007,153,0.009,154,0.007,196,2.63,202,2.09,203,0.246,252,2.09,259,0.905,260,1.606,266,1.717,278,0.414,294,1.826,355,3.264,412,4.203,452,5.199,855,3.836,856,4.887,857,4.887]],["title/interfaces/PageBlock.html",[259,0.538,856,2.767]],["body/interfaces/PageBlock.html",[3,0.317,4,0.317,9,0.223,29,0.825,30,1.744,38,3.554,45,0.012,47,1.036,55,1.868,71,0.594,80,0.399,118,1.145,152,0.008,153,0.009,154,0.008,196,2.779,202,2.209,203,0.254,252,2.732,259,0.928,260,1.698,266,1.544,278,0.437,294,1.929,355,2.374,412,4.239,452,3.781,855,4.054,856,4.771,857,4.395]],["title/components/PageContainerComponent.html",[0,1.661,145,2.164]],["body/components/PageContainerComponent.html",[0,2.443,1,2.006,2,3.034,3,0.228,4,0.228,5,2.565,6,1.652,7,2.424,8,2.565,9,0.161,18,4.047,22,2.424,23,4.781,24,2.62,25,3.549,27,3.549,29,0.595,32,1.652,39,1.305,42,1.068,44,1.392,45,0.012,46,2.033,47,0.748,48,0.874,55,2.658,70,2.565,71,0.593,74,0.575,76,1.848,80,0.215,81,0.411,83,2.302,89,3.433,90,1.94,91,1.594,94,2.424,95,2.728,96,2.728,131,1.305,132,3.549,133,2.775,134,1.778,135,4.391,136,2.565,137,2.565,138,2.006,139,2.565,140,2.095,141,2.565,142,2.565,143,1.924,144,2.565,145,3.433,146,2.565,147,2.095,148,2.424,149,1.848,150,2.193,151,2.565,152,0.006,153,0.008,154,0.006,155,0.851,202,2.206,203,0.283,230,3.549,242,3.549,243,1.392,278,0.501,470,4.904,471,4.844,472,4.047,478,3.171,479,3.171,816,5.031,858,5.555,859,3.501,860,6.349,861,5.537,862,4.002,863,4.768,864,4.002,865,3.501,866,4.002,867,4.002,868,4.002,869,4.002,870,5.537,871,4.002]],["title/modules/PageStoreModule.html",[155,0.664,802,2.944]],["body/modules/PageStoreModule.html",[3,0.303,4,0.303,9,0.214,45,0.012,71,0.663,74,0.763,80,0.285,81,0.545,131,1.731,152,0.007,153,0.009,154,0.007,155,0.816,157,1.731,158,1.909,159,2.042,160,2.042,161,2.808,162,1.909,171,2.658,172,2.114,173,2.042,184,2.567,203,0.197,278,0.419,802,5.728,863,5.161,872,4.644,873,4.644,874,5.161,875,4.632,876,5.308,877,4.644,878,5.308,879,4.206]],["title/injectables/PagesQuery.html",[226,0.886,874,2.767]],["body/injectables/PagesQuery.html",[3,0.317,4,0.317,9,0.224,39,1.814,42,1.073,44,1.935,45,0.012,46,1.65,47,1.039,48,1.214,55,1.873,71,0.674,74,0.799,80,0.298,81,0.572,152,0.008,153,0.009,154,0.008,196,2.788,199,3.765,203,0.255,226,1.41,227,2.14,252,2.737,253,4.867,257,4.867,258,4.867,278,0.542,874,4.403,875,4.478,879,4.408,880,4.867,881,7.455,882,5.563,883,4.066,884,3.793]],["title/injectables/PagesService.html",[226,0.886,863,2.767]],["body/injectables/PagesService.html",[3,0.148,4,0.148,9,0.104,13,0.884,16,1.447,29,0.385,30,1.023,31,2.702,32,2.628,34,1.271,38,1.661,39,0.845,42,1.415,44,2.311,45,0.012,46,1.971,47,1.346,48,1.539,55,2.802,59,2.311,60,3.333,63,1.07,71,0.575,74,0.372,76,1.197,80,0.139,81,0.266,82,1.901,118,1.128,152,0.004,153,0.006,154,0.004,196,1.299,199,4.021,202,1.032,203,0.28,226,0.826,227,0.997,230,2.578,232,2.268,236,4.404,242,4.257,243,0.902,278,0.588,305,1.491,309,1.934,319,1.661,324,1.858,355,2.844,384,2.106,389,1.57,407,2.578,412,3.932,452,1.767,470,4.913,477,3.562,504,2.743,508,2.016,521,3.362,530,2.941,682,3.188,716,3.188,723,2.268,752,3.52,856,4.257,863,2.578,865,2.268,874,3.856,875,3.46,877,2.268,879,2.054,883,1.895,885,2.268,886,4.023,887,4.023,888,4.023,889,4.023,890,4.023,891,4.023,892,2.592,893,4.023,894,2.592,895,6.016,896,4.023,897,2.592,898,4.023,899,3.188,900,4.023,901,2.592,902,4.023,903,2.592,904,4.023,905,2.592,906,4.023,907,4.023,908,2.592,909,2.592,910,2.592,911,5.557,912,4.023,913,2.592,914,2.592,915,2.592,916,4.023,917,2.592,918,2.592,919,4.931,920,4.023,921,2.592,922,2.592,923,2.592]],["title/interfaces/PagesState.html",[259,0.538,884,2.944]],["body/interfaces/PagesState.html",[3,0.327,4,0.327,9,0.231,39,1.87,45,0.012,46,1.701,55,1.931,71,0.654,74,0.824,80,0.375,81,0.589,152,0.008,153,0.01,154,0.008,196,2.874,203,0.213,226,1.437,252,3.01,259,0.715,260,1.755,272,5.548,273,4.545,278,0.452,470,3.91,875,3.298,883,4.192,884,4.773,924,4.545,925,6.611,926,6.125]],["title/injectables/PagesStore.html",[226,0.886,875,2.484]],["body/injectables/PagesStore.html",[3,0.321,4,0.321,9,0.227,39,2.444,42,1.086,45,0.012,46,1.67,55,1.896,71,0.649,74,0.809,80,0.371,81,0.579,152,0.008,153,0.01,154,0.008,196,2.822,203,0.257,226,1.421,227,2.166,252,2.986,259,0.702,272,5.486,273,4.462,278,0.546,470,3.839,875,3.981,883,4.115,884,3.839,924,4.462,925,6.056,926,6.557,927,5.63]],["title/interfaces/Paragraph.html",[259,0.538,328,1.661]],["body/interfaces/Paragraph.html",[3,0.18,4,0.18,6,1.303,9,0.127,13,0.502,29,0.469,30,1.415,45,0.012,47,1.554,48,1.342,50,1.41,80,0.4,98,3.371,107,2.341,108,2.714,109,2.341,118,1.274,152,0.004,153,0.006,154,0.004,203,0.255,252,2.449,259,0.981,260,0.966,263,2.215,266,1.707,278,0.249,282,0.966,294,1.098,312,1.582,314,2.643,317,1.351,318,3.048,319,1.303,320,1.582,321,2.445,322,2.445,323,1.582,324,1.458,325,2.445,326,1.351,327,2.246,328,2.808,329,2.246,330,2.934,331,2.445,332,1.652,333,1.652,334,1.351,335,2.246,336,2.916,337,2.56,338,2.56,339,1.652,340,2.911,341,1.73,342,1.73,343,1.73,344,1.73,345,1.73,346,2.246,347,1.652,348,1.652]],["title/interfaces/ParagraphBlock.html",[259,0.538,329,2.076]],["body/interfaces/ParagraphBlock.html",[3,0.181,4,0.181,6,1.31,9,0.128,13,0.505,29,0.472,30,1.419,45,0.012,47,1.564,48,1.345,50,1.349,80,0.4,98,2.846,107,2.35,108,2.718,109,2.35,118,1.283,152,0.004,153,0.006,154,0.004,203,0.264,252,2.619,259,0.99,260,0.971,263,2.222,266,1.645,278,0.25,282,0.971,294,1.104,312,1.59,314,2.559,317,1.358,318,3.057,319,1.31,320,1.59,321,2.455,322,2.455,323,1.59,324,1.466,325,2.455,326,1.358,327,2.255,328,2.648,329,2.682,330,2.939,331,2.455,332,1.661,333,1.661,334,1.358,335,2.255,336,2.922,337,2.57,338,2.57,339,1.661,340,2.92,341,1.739,342,1.739,343,1.739,344,1.739,345,1.739,346,2.255,347,1.661,348,1.661]],["title/injectables/PluginCode.html",[226,0.886,928,2.767]],["body/injectables/PluginCode.html",[3,0.295,4,0.295,9,0.208,13,0.823,19,1.991,29,0.769,34,2.074,42,0.998,45,0.012,59,2.724,71,0.657,74,0.743,80,0.277,81,0.532,82,2.279,118,1.01,152,0.007,153,0.009,154,0.007,203,0.281,226,1.348,227,1.991,243,1.8,277,2.71,278,0.518,282,2.518,286,3.157,289,3.764,291,1.488,300,2.474,673,2.835,928,4.208,929,4.527,930,5.174,931,5.204,932,5.174]],["title/modules/PluginCodeModule.html",[155,0.664,803,2.616]],["body/modules/PluginCodeModule.html",[3,0.3,4,0.3,9,0.212,13,0.837,16,2.386,45,0.012,50,1.362,71,0.575,74,0.756,80,0.282,81,0.541,118,1.021,131,1.716,152,0.007,153,0.009,154,0.007,155,1.118,157,1.716,158,1.892,159,2.025,160,2.025,161,2.797,162,1.892,171,2.644,172,2.096,173,2.025,184,2.553,203,0.269,278,0.415,300,2.165,497,3.326,740,3.326,741,3.474,743,3.066,803,4.869,928,5.15,933,4.604,934,4.604,935,5.263,936,2.884,937,5.263,938,3.027,939,5.263]],["title/interfaces/PluginConfig.html",[259,0.538,293,2.366]],["body/interfaces/PluginConfig.html",[3,0.243,4,0.243,9,0.171,13,0.676,15,1.963,34,1.823,42,1.113,45,0.012,48,1.43,63,2.381,71,0.499,74,0.611,80,0.394,81,0.593,90,1.081,152,0.006,153,0.008,154,0.006,155,1.007,203,0.26,243,1.478,259,0.876,260,1.301,266,1.582,277,3.032,278,0.455,279,2.897,280,3.368,281,2.897,282,2.547,283,3.106,284,3.768,286,3.149,287,3.106,288,2.897,289,3.149,290,5.191,291,1.222,292,3.319,293,3.161,294,2.636,295,4.572,296,2.224,297,2.224,298,2.723,299,3.368,300,1.386,301,3.698,302,3.698,303,1.888,304,2.47,305,3.319,306,2.574,307,3.106,308,2.897,309,2.043,310,2.444,311,3.106,315,2.574,940,4.249]],["title/injectables/PluginHeader.html",[226,0.886,619,2.767]],["body/injectables/PluginHeader.html",[3,0.294,4,0.294,9,0.208,13,0.82,19,1.985,29,0.767,34,2.071,42,0.995,45,0.012,59,2.722,71,0.656,74,0.741,80,0.277,81,0.53,82,2.276,118,1.008,152,0.007,153,0.009,154,0.007,203,0.281,226,1.345,227,1.985,243,1.795,277,2.705,278,0.517,282,2.517,286,3.644,289,3.463,291,1.484,300,2.472,330,2.705,619,4.201,673,2.827,941,4.515,942,5.16,943,4.515]],["title/modules/PluginHeaderModule.html",[155,0.664,599,2.616]],["body/modules/PluginHeaderModule.html",[3,0.299,4,0.299,9,0.211,13,0.834,16,2.382,45,0.012,50,1.36,71,0.574,74,0.754,80,0.281,81,0.539,118,1.019,131,1.711,152,0.007,153,0.009,154,0.007,155,1.116,157,1.711,158,1.887,159,2.019,160,2.019,161,2.793,162,1.887,171,2.639,172,2.09,173,2.019,184,2.549,203,0.269,278,0.414,300,2.161,330,2.734,497,3.32,599,4.865,619,5.146,740,3.32,741,3.468,743,3.06,936,2.875,938,3.018,944,4.591,945,4.591,946,5.248,947,5.248,948,5.248]],["title/injectables/PluginImage.html",[226,0.886,949,2.944]],["body/injectables/PluginImage.html",[3,0.294,4,0.294,9,0.208,13,0.82,19,1.985,29,0.767,34,2.071,42,0.995,45,0.012,59,2.722,71,0.656,74,0.741,80,0.277,81,0.53,82,2.276,118,1.008,152,0.007,153,0.009,154,0.007,203,0.281,226,1.345,227,1.985,243,1.795,277,2.705,278,0.517,282,2.517,286,3.644,289,3.463,291,1.484,300,2.472,336,2.913,673,2.827,949,4.469,950,4.515,951,5.16,952,5.16]],["title/modules/PluginImageModule.html",[155,0.664,834,2.767]],["body/modules/PluginImageModule.html",[3,0.3,4,0.3,9,0.212,13,0.837,16,2.386,45,0.012,50,1.362,71,0.575,74,0.756,80,0.282,81,0.541,118,1.021,131,1.716,152,0.007,153,0.009,154,0.007,155,1.118,157,1.716,158,1.892,159,2.025,160,2.025,161,2.797,162,1.892,171,2.644,172,2.096,173,2.025,184,2.553,203,0.269,278,0.415,300,2.165,497,3.326,740,3.326,741,3.474,743,3.066,834,5.15,936,2.884,938,3.027,949,5.479,953,4.604,954,4.604,955,5.263,956,4.604,957,4.604]],["title/injectables/PluginLink.html",[226,0.886,958,2.944]],["body/injectables/PluginLink.html",[3,0.295,4,0.295,9,0.208,13,0.823,19,1.991,29,0.769,34,2.074,42,0.998,45,0.012,59,2.724,71,0.657,74,0.743,80,0.277,81,0.532,82,2.279,118,1.01,152,0.007,153,0.009,154,0.007,203,0.281,226,1.348,227,1.991,243,1.8,267,4.8,277,2.71,278,0.518,282,2.518,286,3.647,289,3.468,291,1.488,300,2.474,673,2.835,958,4.477,959,4.527,960,5.174,961,5.174]],["title/modules/PluginLinkModule.html",[155,0.664,804,2.616]],["body/modules/PluginLinkModule.html",[3,0.3,4,0.3,9,0.212,13,0.837,16,2.386,45,0.012,50,1.362,71,0.575,74,0.756,80,0.282,81,0.541,118,1.021,131,1.716,152,0.007,153,0.009,154,0.007,155,1.118,157,1.716,158,1.892,159,2.025,160,2.025,161,2.797,162,1.892,171,2.644,172,2.096,173,2.025,184,2.553,203,0.269,278,0.415,300,2.165,497,3.326,740,3.326,741,3.474,743,3.066,804,4.869,936,2.884,938,3.027,958,5.479,962,4.604,963,4.604,964,5.263,965,5.263,966,5.263]],["title/injectables/PluginList.html",[226,0.886,620,2.767]],["body/injectables/PluginList.html",[3,0.294,4,0.294,9,0.208,13,0.82,19,1.985,29,0.767,34,2.071,42,0.995,45,0.012,59,2.722,71,0.656,74,0.741,80,0.277,81,0.53,82,2.276,108,2.437,118,1.008,152,0.007,153,0.009,154,0.007,203,0.281,226,1.345,227,1.985,243,1.795,277,2.705,278,0.517,282,2.517,286,3.644,289,3.463,291,1.484,300,2.472,620,4.201,673,2.827,967,4.515,968,5.16,969,4.515]],["title/modules/PluginListModule.html",[155,0.664,600,2.767]],["body/modules/PluginListModule.html",[3,0.299,4,0.299,9,0.211,13,0.834,16,2.382,45,0.012,50,1.36,71,0.574,74,0.754,80,0.281,81,0.539,118,1.019,131,1.711,152,0.007,153,0.009,154,0.007,155,1.116,157,1.711,158,1.887,159,2.019,160,2.019,161,2.793,162,1.887,171,2.639,172,2.09,173,2.019,184,2.549,203,0.269,278,0.414,300,2.161,497,3.32,600,5.146,620,5.146,740,3.32,741,3.468,743,3.06,936,2.875,938,3.018,970,4.591,971,4.591,972,5.248,973,5.248,974,5.248]],["title/injectables/PluginMarker.html",[226,0.886,975,2.767]],["body/injectables/PluginMarker.html",[3,0.274,4,0.274,9,0.193,13,0.763,19,1.846,29,0.714,34,1.976,42,1.206,45,0.012,59,2.818,71,0.638,74,0.69,80,0.257,81,0.493,82,2.478,117,4.01,152,0.007,153,0.009,154,0.007,203,0.284,226,1.284,227,1.846,243,2.177,266,1.08,277,2.582,278,0.549,282,2.529,284,4.511,286,3.546,289,3.346,291,1.38,300,2.405,673,2.63,975,4.01,976,4.199,977,5.845,978,4.799,979,4.799,980,4.199,981,4.799]],["title/modules/PluginMarkerModule.html",[155,0.664,805,2.484]],["body/modules/PluginMarkerModule.html",[3,0.299,4,0.299,9,0.211,13,0.834,16,2.382,45,0.012,50,1.36,71,0.574,74,0.754,80,0.281,81,0.539,117,4.246,131,1.711,152,0.007,153,0.009,154,0.007,155,1.116,157,1.711,158,1.887,159,2.019,160,2.019,161,2.793,162,1.887,171,2.639,172,2.09,173,2.019,184,2.549,203,0.269,278,0.414,300,2.161,497,3.32,740,3.32,741,3.468,743,3.06,805,4.619,936,2.875,938,3.018,975,5.146,977,5.25,982,4.591,983,4.591,984,5.248,985,4.591,986,5.248]],["title/injectables/PluginParagraph.html",[226,0.886,621,2.767]],["body/injectables/PluginParagraph.html",[3,0.295,4,0.295,9,0.208,13,0.823,19,1.991,29,0.769,34,2.074,42,0.998,45,0.012,59,2.724,71,0.657,74,0.743,80,0.277,81,0.532,82,2.279,118,1.01,152,0.007,153,0.009,154,0.007,203,0.281,226,1.348,227,1.991,243,1.8,277,2.71,278,0.518,282,2.518,286,3.647,289,3.468,291,1.488,300,2.474,328,2.526,621,4.208,673,2.835,987,4.527,988,5.174,989,4.527]],["title/modules/PluginParagraphModule.html",[155,0.664,601,2.616]],["body/modules/PluginParagraphModule.html",[3,0.3,4,0.3,9,0.212,13,0.837,16,2.386,45,0.012,50,1.362,71,0.575,74,0.756,80,0.282,81,0.541,118,1.021,131,1.716,152,0.007,153,0.009,154,0.007,155,1.118,157,1.716,158,1.892,159,2.025,160,2.025,161,2.797,162,1.892,171,2.644,172,2.096,173,2.025,184,2.553,203,0.269,278,0.415,300,2.165,497,3.326,601,4.869,621,5.15,740,3.326,741,3.474,743,3.066,936,2.884,938,3.027,990,4.604,991,4.604,992,5.263,993,5.263,994,5.263]],["title/injectables/PluginSimpleImage.html",[226,0.886,995,2.944]],["body/injectables/PluginSimpleImage.html",[3,0.29,4,0.29,9,0.204,13,0.807,19,1.953,29,0.755,34,2.049,42,0.979,45,0.012,59,2.708,71,0.652,74,0.729,80,0.272,81,0.522,82,2.258,91,2.584,118,0.997,152,0.007,153,0.009,154,0.007,203,0.279,226,1.331,227,1.953,243,1.766,277,2.677,278,0.511,282,2.508,286,3.118,289,3.436,291,1.46,300,2.115,336,3.177,673,2.781,850,4.741,995,4.422,996,5.14,997,4.44,998,5.675,999,5.075,1000,6.486,1001,5.075]],["title/modules/PluginSimpleImageModule.html",[155,0.664,806,2.616]],["body/modules/PluginSimpleImageModule.html",[3,0.294,4,0.294,9,0.208,13,0.82,16,2.357,45,0.012,71,0.567,74,0.741,80,0.277,81,0.53,118,1.008,131,1.683,152,0.007,153,0.009,154,0.007,155,1.108,157,1.683,158,1.855,159,1.985,160,1.985,161,2.771,162,1.855,171,2.611,172,2.055,173,1.985,184,2.522,203,0.267,278,0.407,297,3.431,300,2.138,336,2.913,497,3.285,740,3.285,741,3.431,743,3.028,806,4.844,850,3.772,936,2.827,938,2.968,956,4.515,957,4.515,995,5.451,996,4.089,998,6.303,1002,4.515,1003,4.515,1004,5.16]],["title/classes/Ready.html",[81,0.444,359,1.919]],["body/classes/Ready.html",[3,0.22,4,0.22,9,0.156,19,2.83,29,0.574,30,1.374,32,3.117,39,1.259,42,1.201,44,1.343,45,0.012,46,1.145,47,1.523,48,0.843,50,0.792,51,1.593,71,0.467,80,0.405,81,0.73,82,1.706,90,1.806,152,0.005,153,0.007,154,0.005,203,0.29,266,1.598,278,0.532,291,1.11,314,2.008,359,3.269,367,3.531,368,2.474,369,3.88,370,2.22,371,4.138,372,5.253,373,2.632,374,4.246,377,2.632,378,2.474,379,3.413,380,2.632,381,2.339,382,3.26,383,3.461,384,2.021,385,3.26,386,2.339,387,3.413,388,2.632,389,4.301,390,3.155,391,2.632,392,2.632,393,3.682,394,2.474,1005,5.4,1006,3.86]],["title/interfaces/ReadyMap.html",[259,0.538,361,2.616]],["body/interfaces/ReadyMap.html",[3,0.278,4,0.278,9,0.196,13,0.775,42,0.94,45,0.012,71,0.607,76,2.252,80,0.398,118,0.972,152,0.007,153,0.009,154,0.007,203,0.297,259,0.925,260,1.492,263,2.518,266,1.73,278,0.498,291,1.402,294,2.675,296,4.024,315,2.954,334,2.087,349,2.954,350,3.324,351,5.241,352,5.6,353,3.324,355,2.087,356,2.671,357,2.954,358,4.309,359,2.809,360,4.051,361,3.829,362,3.324,363,2.954,364,2.954,365,2.954,1007,4.875]],["title/classes/SaveEnd.html",[81,0.444,385,2.26]],["body/classes/SaveEnd.html",[3,0.22,4,0.22,9,0.156,19,2.83,29,0.574,30,1.374,32,3.117,39,1.259,42,1.201,44,1.343,45,0.012,46,1.145,47,1.523,48,0.843,50,0.792,51,1.593,71,0.467,80,0.405,81,0.73,82,1.706,90,1.806,152,0.005,153,0.007,154,0.005,203,0.29,266,1.598,278,0.532,291,1.11,314,2.008,359,3.155,367,3.531,368,2.474,369,3.88,370,2.22,371,4.138,372,5.253,373,2.632,374,4.246,377,2.632,378,2.474,379,3.413,380,2.632,381,2.339,382,3.26,383,3.461,384,2.021,385,3.531,386,2.339,387,3.413,388,2.632,389,4.301,390,3.155,391,3.682,392,2.632,393,2.632,394,2.474,1008,5.4,1009,3.86]],["title/classes/SaveStart.html",[81,0.444,382,2.26]],["body/classes/SaveStart.html",[3,0.22,4,0.22,9,0.156,19,2.83,29,0.574,30,1.374,32,3.117,39,1.259,42,1.201,44,1.343,45,0.012,46,1.145,47,1.523,48,0.843,50,0.792,51,1.593,71,0.467,80,0.405,81,0.73,82,1.706,90,1.806,152,0.005,153,0.007,154,0.005,203,0.29,266,1.598,278,0.532,291,1.11,314,2.008,359,3.155,367,3.531,368,2.474,369,3.88,370,2.22,371,4.138,372,5.253,373,2.632,374,4.246,377,2.632,378,2.474,379,3.413,380,2.632,381,2.339,382,3.531,383,3.461,384,2.021,385,3.26,386,2.339,387,3.413,388,3.682,389,4.301,390,3.155,391,2.632,392,2.632,393,2.632,394,2.474,1010,5.4,1011,3.86]],["title/components/SidebarComponent.html",[0,1.661,147,2.26]],["body/components/SidebarComponent.html",[0,2.341,1,1.854,2,2.871,3,0.211,4,0.211,5,2.37,6,1.527,7,2.241,8,2.37,9,0.149,10,3.351,19,2.016,20,5.324,21,5.75,22,2.241,23,4.697,24,2.884,25,3.358,27,3.358,29,0.55,30,1.333,31,3.334,32,2.732,33,5.324,34,1.655,35,5.245,36,5.791,39,1.206,40,2.931,41,3.807,42,1.347,44,1.287,45,0.012,46,1.964,47,0.979,48,0.807,49,3.572,50,0.759,51,2.163,55,1.246,59,1.823,60,2.743,63,2.163,64,4.822,65,5.324,66,2.703,67,4.584,70,3.9,71,0.605,73,2.931,74,0.531,75,2.522,76,1.708,77,2.931,78,3.236,79,2.703,80,0.198,81,0.38,83,2.127,84,3.236,85,3.236,86,3.236,87,3.236,88,3.236,89,2.626,90,1.777,91,1.473,131,1.206,132,3.358,133,2.626,134,1.644,135,4.242,136,2.37,137,2.37,138,1.854,139,2.37,140,1.936,141,2.37,142,2.37,143,1.778,144,2.37,145,1.854,146,2.37,147,3.464,148,2.241,149,1.708,150,2.027,151,2.37,152,0.005,153,0.007,154,0.005,203,0.194,1012,6.348,1013,3.236,1014,6.085,1015,5.24,1016,5.24,1017,3.699,1018,3.699,1019,3.699]],["title/interfaces/Tag.html",[259,0.538,857,2.767]],["body/interfaces/Tag.html",[3,0.318,4,0.318,9,0.225,29,0.83,30,1.751,38,3.576,45,0.012,47,1.042,55,1.879,71,0.596,80,0.4,118,1.059,152,0.008,153,0.009,154,0.008,196,2.796,202,2.222,203,0.255,252,2.222,259,0.93,260,1.708,266,1.754,278,0.44,294,2.712,355,2.388,412,4.012,452,3.804,855,4.078,856,4.411,857,4.784]],["title/interfaces/ToolSettingsMap.html",[259,0.538,298,2.767]],["body/interfaces/ToolSettingsMap.html",[3,0.241,4,0.241,9,0.17,13,0.673,15,1.954,34,1.817,42,1.109,45,0.012,48,1.427,63,2.374,71,0.498,74,0.608,80,0.393,81,0.435,90,1.076,152,0.006,153,0.008,154,0.006,155,0.884,203,0.26,243,1.472,259,0.874,260,1.295,266,1.579,277,2.697,278,0.454,279,2.884,280,3.352,281,2.884,282,2.531,283,3.092,284,3.759,286,3.526,287,3.092,288,2.884,289,3.371,290,5.558,291,1.217,292,2.433,293,2.318,294,2.632,295,3.352,296,3.011,297,3.011,298,3.686,299,4.558,300,1.876,301,3.686,302,3.686,303,1.88,304,2.462,305,3.308,306,2.563,307,3.092,308,2.884,309,2.034,310,2.433,311,3.092,315,2.563,1020,4.23]],["title/changelog.html",[1021,2.479,1022,2.479,1023,1.992]],["body/changelog.html",[16,1.931,24,2.216,45,0.009,49,3.661,52,2.942,63,2.216,89,2.691,118,0.826,152,0.007,153,0.009,154,0.007,155,0.826,162,1.931,202,2.139,203,0.249,304,3.141,364,3.253,421,3.661,472,3.925,496,3.441,505,4.255,582,3.661,696,4.255,698,5.88,742,4.255,1023,3.683,1024,5.369,1025,5.369,1026,5.326,1027,4.698,1028,5.369,1029,4.255,1030,5.369,1031,3.925,1032,5.369,1033,5.369,1034,3.925,1035,5.369,1036,6.721,1037,5.369,1038,6.721,1039,5.369,1040,5.369,1041,5.88,1042,4.698,1043,5.369,1044,5.369,1045,5.369,1046,3.441,1047,5.369,1048,5.369,1049,5.369,1050,5.369,1051,4.698,1052,5.369,1053,5.369,1054,5.369,1055,5.369,1056,4.255,1057,5.369,1058,5.369,1059,5.369,1060,5.369,1061,5.369,1062,4.698,1063,4.698]],["title/contributing.html",[1021,2.479,1022,2.479,1064,3.181]],["body/contributing.html",[9,0.122,18,2.206,31,2.476,42,0.582,44,1.05,45,0.006,63,1.865,82,1.427,121,2.392,152,0.006,153,0.006,154,0.004,158,1.085,206,3.958,259,0.376,309,2.172,319,1.246,331,1.58,356,2.476,364,2.737,371,1.654,386,1.829,421,2.058,426,1.736,472,2.206,473,2.737,501,3.303,503,2.392,544,2.058,549,1.829,582,3.692,626,2.206,649,2.641,707,2.641,721,3.953,724,3.692,743,2.087,841,2.641,899,2.392,931,5.552,1041,3.953,1042,2.641,1046,4.997,1062,3.953,1063,2.641,1064,3.953,1065,3.953,1066,5.416,1067,3.018,1068,3.018,1069,2.641,1070,2.641,1071,3.018,1072,3.018,1073,3.018,1074,7.005,1075,4.518,1076,3.018,1077,5.416,1078,6.012,1079,3.018,1080,3.018,1081,2.641,1082,3.018,1083,3.018,1084,3.953,1085,2.641,1086,2.392,1087,2.641,1088,3.018,1089,3.018,1090,3.018,1091,3.018,1092,6.012,1093,2.641,1094,3.018,1095,2.392,1096,3.018,1097,3.018,1098,3.953,1099,2.641,1100,3.018,1101,3.018,1102,3.018,1103,3.953,1104,3.018,1105,3.018,1106,4.518,1107,3.018,1108,3.018,1109,3.018,1110,4.518,1111,3.018,1112,6.438,1113,3.018,1114,6.438,1115,4.518,1116,2.641,1117,4.518,1118,3.018,1119,3.018,1120,3.018,1121,3.018,1122,3.018,1123,3.018,1124,3.018,1125,3.018,1126,4.518,1127,3.018,1128,3.018,1129,4.518,1130,3.018,1131,3.018,1132,3.018,1133,4.518,1134,3.018,1135,4.518,1136,6.438,1137,3.018,1138,3.018,1139,3.018,1140,4.518,1141,3.018,1142,3.018,1143,3.018,1144,3.018,1145,3.018,1146,3.018,1147,3.018,1148,3.018,1149,3.018,1150,3.018,1151,3.018,1152,3.018,1153,3.018,1154,3.018,1155,4.518,1156,5.416,1157,3.018,1158,3.018,1159,3.018,1160,3.018,1161,3.018,1162,3.018,1163,3.018,1164,3.018,1165,4.518,1166,3.018,1167,3.018,1168,2.641,1169,3.018,1170,2.641,1171,3.018,1172,3.018,1173,3.018,1174,4.518,1175,3.018,1176,3.018,1177,3.018,1178,4.518,1179,3.018,1180,2.641,1181,3.018,1182,3.018,1183,3.018,1184,3.018,1185,3.018,1186,2.392,1187,4.518,1188,3.018,1189,3.018,1190,4.518,1191,3.018,1192,3.018,1193,3.018,1194,3.018,1195,3.018,1196,3.018,1197,3.018,1198,3.018,1199,3.018,1200,3.018,1201,3.018,1202,4.518,1203,3.018,1204,3.018,1205,3.018,1206,3.018,1207,3.018,1208,3.018,1209,3.018,1210,3.018,1211,4.518,1212,4.518,1213,4.518,1214,3.018,1215,3.018,1216,3.018,1217,3.018,1218,3.018,1219,3.018,1220,3.018,1221,3.018,1222,3.018,1223,3.018,1224,3.018,1225,2.641,1226,3.018,1227,4.518,1228,3.018,1229,4.518,1230,3.018,1231,3.018,1232,2.641,1233,3.018,1234,3.018,1235,3.953,1236,2.641,1237,3.018,1238,3.018,1239,3.018,1240,3.018,1241,3.018,1242,3.018,1243,3.018,1244,3.018,1245,3.018,1246,3.018,1247,3.018,1248,3.018,1249,3.018,1250,3.018,1251,3.018,1252,3.018,1253,3.018,1254,3.018,1255,3.018,1256,3.018,1257,3.018,1258,3.018,1259,3.018,1260,3.018,1261,3.018,1262,3.018,1263,3.018,1264,3.018,1265,3.018,1266,3.018,1267,3.018]],["title/coverage.html",[1268,5.103]],["body/coverage.html",[0,2.355,1,1.183,9,0.095,10,3.363,11,2.066,12,2.066,24,0.974,41,1.358,45,0.012,47,0.441,55,0.795,63,0.974,81,0.591,95,5.67,108,0.878,111,5.904,118,0.363,130,1.871,134,1.049,138,1.183,140,1.236,143,1.135,145,1.183,147,1.236,149,1.091,152,0.003,153,0.005,154,0.003,203,0.306,206,2.733,211,1.871,226,1.582,228,2.066,233,1.513,234,1.43,251,2.066,255,1.513,259,1.003,261,2.963,264,1.726,268,2.066,277,0.974,278,0.672,279,3.924,285,2.733,293,1.294,298,1.513,306,1.43,310,1.358,312,3.432,327,1.135,328,0.908,329,1.135,330,0.974,335,1.135,336,1.049,346,1.135,349,1.43,350,3.6,357,1.43,359,1.049,361,1.43,365,1.43,367,1.236,369,3.31,370,3.31,382,1.236,385,1.236,387,1.294,395,1.726,396,3.393,427,1.43,430,1.513,433,2.066,434,1.871,435,2.066,445,1.183,486,2.066,487,2.066,499,2.066,500,2.066,528,2.066,529,2.066,565,1.871,566,2.066,567,2.066,602,2.733,603,2.733,614,1.871,619,1.513,620,1.513,621,1.513,628,1.726,642,1.358,643,2.066,695,2.066,807,1.871,812,1.871,816,1.871,818,1.871,850,1.726,855,3.393,856,1.513,857,1.513,858,2.066,859,2.066,863,1.513,874,1.513,875,1.358,880,2.066,884,1.61,885,2.066,924,2.963,928,1.513,929,2.066,941,2.066,949,1.61,950,2.066,958,1.61,959,2.066,967,2.066,975,1.513,976,2.066,987,2.066,995,1.61,996,1.871,997,2.066,1012,2.066,1013,2.066,1268,2.066,1269,1.61,1270,2.361,1271,2.361,1272,2.066,1273,6.849,1274,2.066,1275,5.755,1276,2.066,1277,2.066,1278,7.389,1279,2.361,1280,6.122,1281,3.739,1282,5.755,1283,6.122,1284,2.066,1285,2.066,1286,2.066,1287,2.066,1288,2.361,1289,2.361,1290,2.361,1291,7.389,1292,5.755,1293,2.361,1294,3.739,1295,2.361,1296,2.361,1297,2.361,1298,2.361,1299,2.361,1300,2.361,1301,2.361]],["title/dependencies.html",[158,1.861,1302,2.882]],["body/dependencies.html",[45,0.012,74,0.743,75,3.528,76,2.39,90,1.316,152,0.007,153,0.009,154,0.007,158,1.861,176,4.101,186,4.527,187,4.527,189,5.204,190,4.8,194,3.528,196,3.291,197,4.527,198,4.527,199,2.835,201,4.527,205,4.101,291,1.488,378,3.316,460,4.101,588,3.528,617,3.528,630,3.782,943,4.527,969,4.527,989,4.527,1303,5.174,1304,8.226,1305,5.174,1306,6.566,1307,5.174,1308,5.174,1309,5.174,1310,5.174,1311,5.174,1312,5.174,1313,5.174,1314,5.174,1315,5.174,1316,5.174,1317,6.566,1318,5.174,1319,5.174,1320,5.174,1321,5.174,1322,5.174,1323,5.174,1324,5.174]],["title/miscellaneous/enumerations.html",[1325,2.091,1326,4.529]],["body/miscellaneous/enumerations.html",[29,0.869,45,0.012,51,3.348,90,2.063,152,0.008,153,0.01,154,0.008,203,0.306,278,0.461,359,3.385,367,3.706,369,3.361,370,4.073,381,4.29,382,3.058,383,4.538,384,3.058,385,3.058,386,3.54,387,3.202,1325,3.361,1326,5.112,1327,4.271]],["title/miscellaneous/functions.html",[1325,2.091,1328,4.529]],["body/miscellaneous/functions.html",[15,2.733,24,2.442,29,0.88,45,0.011,59,2.482,89,2.966,90,1.505,91,2.357,152,0.008,153,0.01,154,0.008,203,0.219,278,0.563,293,3.91,297,3.097,300,1.93,303,2.63,304,2.533,419,3.097,426,3.404,602,4.325,603,5.215,625,4.69,626,4.325,627,4.035,628,5.599,716,4.69,812,6.071,1286,5.177,1325,3.404,1327,4.325,1328,5.177,1329,5.918]],["title/index.html",[29,0.541,1021,2.479,1022,2.479]],["body/index.html",[0,2.22,2,3.162,15,2.665,16,2.075,24,2.382,45,0.01,52,3.85,53,5.048,89,3.522,90,1.468,134,2.564,152,0.008,153,0.01,154,0.008,202,2.298,203,0.26,419,3.02,498,3.934,501,5.136,508,2.892,544,3.934,604,6.148,605,4.573,700,4.573,1023,3.162,1026,4.573,1029,4.573,1046,4.503,1065,6.629,1170,5.048,1269,4.791,1330,4.573,1331,5.048,1332,5.77,1333,5.048,1334,3.934,1335,5.048,1336,5.77,1337,5.77,1338,5.048,1339,5.048,1340,5.77]],["title/license.html",[1021,2.479,1022,2.479,1341,3.636]],["body/license.html",[24,2.066,45,0.009,64,3.968,90,1.274,152,0.007,153,0.009,154,0.007,173,1.926,326,2.143,371,2.743,473,3.895,503,5.629,1034,3.66,1093,4.38,1098,4.38,1103,5.625,1116,4.38,1225,4.38,1232,4.38,1236,4.38,1269,3.414,1333,5.625,1338,4.38,1339,4.38,1342,4.38,1343,5.007,1344,5.007,1345,7.103,1346,5.007,1347,5.007,1348,5.007,1349,5.007,1350,5.007,1351,6.43,1352,8.255,1353,5.007,1354,5.007,1355,5.007,1356,5.007,1357,5.007,1358,5.007,1359,4.38,1360,5.007,1361,5.007,1362,5.007,1363,5.007,1364,6.43,1365,5.007,1366,5.007,1367,5.007,1368,4.38,1369,5.007,1370,5.007,1371,6.43,1372,6.43,1373,4.38,1374,5.007,1375,5.007,1376,5.007,1377,5.007,1378,5.007,1379,5.007,1380,5.007,1381,5.007,1382,5.007,1383,5.007,1384,5.007,1385,5.007,1386,5.007,1387,5.007,1388,5.007,1389,5.007,1390,5.007,1391,5.007,1392,5.007,1393,5.007,1394,5.007,1395,5.007,1396,5.007,1397,5.007,1398,5.007]],["title/modules.html",[157,1.902]],["body/modules.html",[45,0.009,152,0.007,153,0.009,154,0.007,156,3.518,157,1.683,167,3.518,168,3.518,169,2.827,170,3.518,190,6.275,319,2.13,598,3.307,599,3.126,600,3.307,601,3.126,802,3.518,803,3.126,804,3.126,805,2.968,806,3.126,823,3.772,830,3.772,834,3.307,1399,5.854,1400,8.585,1401,8.608,1402,5.16]],["title/overview.html",[1403,5.103]],["body/overview.html",[1,3.364,2,1.461,41,2.887,45,0.012,131,0.87,134,1.185,138,3.364,140,2.627,143,3.227,145,3.364,147,2.627,149,3.1,152,0.004,153,0.006,154,0.004,155,0.41,156,5.376,157,0.87,158,0.959,159,1.026,160,1.026,161,1.026,162,0.959,163,2.333,164,2.333,165,2.333,166,2.333,167,4.849,168,3.422,169,4.423,170,5.529,171,1.638,172,1.062,173,1.026,227,1.026,233,3.217,234,3.041,247,2.333,248,2.333,260,0.816,332,1.396,333,1.396,368,1.709,445,2.516,593,2.333,594,2.333,595,2.333,596,2.333,597,2.333,598,4.655,599,4.4,600,4.655,601,4.4,619,3.217,620,3.217,621,3.217,642,2.887,691,2.333,692,2.333,798,2.333,799,2.333,800,2.333,801,2.333,802,5.181,803,4.4,804,4.4,805,4.177,806,4.4,823,4.124,824,2.333,830,6.07,831,2.333,832,2.333,833,2.333,834,4.558,863,3.217,872,2.333,873,2.333,874,3.217,875,2.887,928,3.217,933,2.333,934,2.333,944,2.333,945,2.333,949,3.422,953,2.333,954,2.333,958,3.422,962,2.333,963,2.333,970,2.333,971,2.333,975,3.217,982,2.333,983,2.333,990,2.333,991,2.333,995,3.422,1002,2.333,1003,2.333,1403,2.333,1404,4.112,1405,2.667,1406,2.667]],["title/todo.html",[1021,2.479,1022,2.479,1407,2.882]],["body/todo.html",[0,2.096,24,2.249,45,0.009,55,1.835,72,3.492,89,2.73,90,1.879,91,2.17,134,2.421,152,0.008,153,0.009,154,0.008,155,0.838,157,1.777,199,2.985,203,0.286,309,3.261,355,2.332,384,2.852,414,4.248,424,4.318,428,3.715,477,5.269,508,3.399,532,3.982,543,3.492,549,3.301,588,3.715,714,4.767,730,4.767,936,2.985,1031,3.982,1168,4.767,1180,4.767,1330,4.318,1342,4.767,1359,4.767,1399,4.624,1407,4.318,1408,5.448,1409,5.448,1410,4.767,1411,5.448,1412,5.448,1413,5.448,1414,5.448,1415,5.448,1416,5.448,1417,5.448,1418,5.448,1419,5.448,1420,5.448,1421,5.448,1422,4.767]],["title/miscellaneous/typealiases.html",[1325,2.091,1423,5.177]],["body/miscellaneous/typealiases.html",[6,2.317,29,0.835,45,0.012,47,1.399,108,2.087,118,1.062,152,0.008,153,0.01,154,0.008,203,0.208,266,1.555,278,0.545,312,2.813,319,2.317,320,2.813,321,3.616,322,3.616,323,2.813,324,2.593,325,3.616,327,2.698,329,2.698,335,2.698,346,2.698,347,2.938,348,3.616,359,2.494,367,2.938,369,3.229,370,3.974,382,2.938,385,2.938,387,3.076,394,4.428,1325,3.229,1327,4.103,1424,5.613,1425,6.909]],["title/miscellaneous/variables.html",[1086,4.103,1325,2.091]],["body/miscellaneous/variables.html",[0,2.404,10,3.124,14,2.648,15,2.505,24,1.603,29,0.578,42,0.749,45,0.012,47,1.329,50,1.63,51,3.236,63,2.579,89,2.718,90,1.924,91,1.547,138,2.718,145,1.947,152,0.005,153,0.007,154,0.005,155,0.597,203,0.302,206,4.944,274,3.12,278,0.533,279,2.648,292,2.234,301,4.005,302,4.005,303,1.726,304,2.322,306,3.286,307,2.839,308,2.648,309,1.867,310,3.12,311,2.839,328,1.494,390,1.726,396,2.839,397,2.033,398,2.648,400,2.648,408,2.839,427,3.286,429,3.078,430,3.476,431,3.078,602,2.839,603,3.964,614,4.298,627,2.648,629,2.839,630,2.839,667,3.964,807,3.078,818,4.298,1086,3.078,1272,3.399,1274,4.745,1276,3.399,1277,4.745,1284,3.399,1285,3.399,1287,4.745,1325,2.234,1327,3.964,1330,4.298,1426,3.884,1427,3.884,1428,3.884,1429,3.884,1430,5.424,1431,3.884,1432,5.424,1433,7.115,1434,5.424,1435,5.424,1436,3.884,1437,5.424,1438,3.884,1439,5.424,1440,3.884,1441,3.884]],["title/additional-documentation/tinynodes-library-docs.html",[24,1.141,55,0.931,317,1.183,496,1.771,1031,2.02]],["body/additional-documentation/tinynodes-library-docs.html",[24,2.682,45,0.01,90,1.653,152,0.009,153,0.01,154,0.009,498,4.431,743,3.001,1023,3.561,1027,5.685,1029,5.15,1051,5.685,1334,4.431,1442,6.498,1443,6.498]],["title/additional-documentation/tinynodes-library-docs/ngx-editorjs-readme.html",[55,0.931,90,0.703,203,0.102,317,1.183,1334,1.884]],["body/additional-documentation/tinynodes-library-docs/ngx-editorjs-readme.html",[0,2.246,1,2.372,13,0.387,14,1.658,15,1.768,16,1.702,18,1.778,19,0.936,34,0.768,45,0.012,47,0.454,48,0.531,50,1.102,52,2.942,63,1.004,71,0.659,72,3.034,74,0.771,80,0.332,81,0.6,89,1.918,90,0.619,91,2.47,108,0.904,118,0.374,133,1.918,134,1.701,143,1.169,149,1.123,150,1.333,152,0.003,153,0.005,154,0.003,155,0.953,156,1.658,157,1.248,159,0.936,160,0.936,161,1.473,162,0.875,169,2.942,180,2.319,184,2.385,188,3.349,189,1.928,190,1.778,202,2.138,203,0.292,220,1.658,226,0.971,243,1.647,266,0.547,274,2.202,277,1.58,281,1.658,282,1.787,284,2.202,285,2.798,289,1.84,291,1.101,292,3.088,293,2.098,294,1.647,297,3.056,303,1.081,308,2.61,309,2.981,310,2.723,314,1.76,323,1.219,326,1.639,328,1.473,330,1.004,355,2.298,356,1.333,360,1.559,371,1.333,379,1.333,390,2.386,397,2.81,398,3.227,400,2.61,412,1.918,414,2.202,418,3.034,419,2.81,426,2.723,428,2.61,445,1.219,473,2.868,475,2.128,477,3.441,496,1.559,497,1.918,498,3.227,501,2.798,504,1.658,508,2.372,515,2.128,530,1.778,533,2.128,543,3.742,544,1.658,549,1.474,580,1.928,581,1.928,582,1.658,583,1.928,588,1.658,605,3.034,606,2.128,607,2.128,611,2.128,612,1.928,625,1.928,627,2.61,628,2.798,629,1.778,630,1.778,632,1.928,663,1.928,667,1.778,718,2.128,720,1.928,722,2.128,724,3.227,740,2.926,741,1.273,742,4.254,743,1.123,805,2.202,847,2.128,857,1.559,928,1.559,931,1.928,975,3.973,977,3.034,980,2.128,985,2.128,1023,1.333,1031,3.46,1046,2.453,1069,3.349,1081,3.349,1087,2.128,1099,3.349,1186,1.928,1235,2.128,1269,2.61,1331,2.128,1335,2.128,1368,2.128,1399,3.227,1407,1.928,1410,2.128,1422,3.349,1444,2.432,1445,2.432,1446,2.432,1447,2.432,1448,2.432,1449,2.432,1450,3.349,1451,2.128,1452,2.432,1453,2.432,1454,5.368,1455,2.432,1456,2.432,1457,2.432,1458,3.828,1459,2.432,1460,2.432,1461,3.828,1462,2.432,1463,3.349,1464,2.432,1465,4.733,1466,2.432,1467,2.432,1468,2.432,1469,2.432,1470,2.432,1471,2.128,1472,2.432,1473,2.432,1474,2.432,1475,2.432,1476,2.432,1477,2.432,1478,2.432,1479,2.432,1480,2.432,1481,2.432,1482,2.432,1483,2.128,1484,2.432,1485,2.432,1486,2.432,1487,2.432,1488,2.432,1489,2.432,1490,2.432,1491,2.432,1492,2.432,1493,2.432,1494,2.432,1495,2.432,1496,2.432,1497,2.432]],["title/additional-documentation/tinynodes-library-docs/ngx-editorjs-readme/ngx-editorjs-changelog.html",[55,0.931,90,0.703,203,0.102,317,1.183,1023,1.514]],["body/additional-documentation/tinynodes-library-docs/ngx-editorjs-readme/ngx-editorjs-changelog.html",[0,2.143,7,2.446,9,0.163,17,3.798,34,1.275,45,0.008,48,0.881,50,1.481,52,3.052,59,1.404,81,0.572,91,2.219,108,1.501,133,2.792,134,2.475,143,1.941,149,1.864,152,0.006,153,0.008,154,0.006,155,0.857,169,2.212,176,3.199,202,2.219,203,0.267,226,0.828,259,0.503,266,0.909,277,1.666,282,1.952,284,3.204,297,2.113,303,1.794,304,3.334,309,2.678,319,1.666,320,2.023,324,3.176,326,2.384,328,1.553,330,1.666,356,3.052,367,2.916,390,1.794,397,3.338,412,2.023,419,2.113,426,3.204,445,2.792,473,3.375,477,2.587,496,4.624,498,3.798,508,2.023,531,3.532,549,2.446,700,5.45,720,3.199,724,2.752,756,3.199,899,5.718,1023,3.495,1026,3.199,1034,5.026,1046,4.624,1056,3.199,1070,3.532,1095,3.199,1186,3.199,1269,4.348,1302,4.414,1334,2.752,1373,4.873,1399,2.752,1450,3.532,1451,3.532,1463,4.873,1471,6.688,1483,3.532,1498,3.532,1499,3.532,1500,3.532,1501,3.532,1502,3.532,1503,3.532,1504,3.532,1505,4.037,1506,3.532,1507,3.532,1508,4.037,1509,6.016,1510,3.532,1511,5.57,1512,4.037,1513,4.037,1514,6.378,1515,4.037,1516,4.037,1517,4.037,1518,4.037,1519,4.037,1520,4.037,1521,4.037,1522,4.037,1523,4.037,1524,4.037,1525,4.037,1526,4.037,1527,4.037,1528,4.037,1529,3.532,1530,4.037]],["title/additional-documentation/tinynodes-library-docs/ngx-editorjs-plugins-readme.html",[55,0.831,90,0.628,203,0.091,304,1.056,317,1.056,1334,1.682]],["body/additional-documentation/tinynodes-library-docs/ngx-editorjs-plugins-readme.html",[9,0.187,13,0.736,16,2.976,45,0.012,46,1.374,50,0.951,52,2.538,90,1.178,91,3.155,98,2.139,108,1.722,117,2.968,118,1.218,152,0.006,153,0.008,154,0.006,155,0.712,157,1.51,202,1.845,203,0.28,267,3.385,282,2.315,304,3.114,309,2.227,419,2.424,497,4.029,508,3.063,599,2.806,601,2.806,642,2.664,644,4.052,803,2.806,804,2.806,805,2.664,806,2.806,834,2.968,1085,4.052,1302,3.671,1399,4.167,1531,6.112,1532,4.632,1533,4.632,1534,4.632,1535,4.632,1536,4.632]],["title/additional-documentation/tinynodes-library-docs/ngx-editorjs-plugins-readme/ngx-editorjs-plugins-changelog.html",[55,0.831,90,0.628,203,0.091,304,1.056,317,1.056,1023,1.352]],["body/additional-documentation/tinynodes-library-docs/ngx-editorjs-plugins-readme/ngx-editorjs-plugins-changelog.html",[9,0.242,45,0.01,50,1.234,82,1.9,152,0.008,153,0.01,154,0.008,155,1.108,303,2.672,304,2.574,324,2.778,326,2.574,549,3.643,642,3.459,740,3.014,743,2.778,756,4.766,1023,3.948,1034,4.396,1046,4.617,1056,4.766,1084,5.261,1095,4.766,1498,5.261,1499,5.261,1500,5.261,1501,5.261,1502,5.261,1503,5.261,1504,5.261,1506,5.261,1507,5.261,1509,5.261,1510,5.261,1529,5.261]]],"invertedIndex":[["",{"_index":45,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"modules/ApplicationDataModule.html":{},"injectables/ApplicationQuery.html":{},"interfaces/ApplicationState.html":{},"injectables/ApplicationStore.html":{},"interfaces/BasePlugin.html":{},"interfaces/Block.html":{},"interfaces/BlocksMap.html":{},"interfaces/ChangeMap.html":{},"classes/Changed.html":{},"interfaces/EditorJSConfig.html":{},"interfaces/EditorMap.html":{},"components/EditorPageComponent.html":{},"interfaces/Header.html":{},"interfaces/HeaderBlock.html":{},"interfaces/Image.html":{},"interfaces/ImageBlock.html":{},"interfaces/List.html":{},"interfaces/ListBlock.html":{},"modules/MaterialModule.html":{},"interfaces/MenuItem.html":{},"components/NavBarComponent.html":{},"components/NgxEditorJSComponent.html":{},"interfaces/NgxEditorJSConfig.html":{},"directives/NgxEditorJSDirective.html":{},"injectables/NgxEditorJSEffects.html":{},"modules/NgxEditorJSModule.html":{},"injectables/NgxEditorJSPluginService.html":{},"modules/NgxEditorJSPluginServiceModule.html":{},"injectables/NgxEditorJSService.html":{},"modules/NgxEditorjsDemoModule.html":{},"modules/NgxEditorjsNgrxModule.html":{},"modules/NgxEditorjsPluginsModule.html":{},"classes/NotReady.html":{},"interfaces/Page.html":{},"interfaces/PageBlock.html":{},"components/PageContainerComponent.html":{},"modules/PageStoreModule.html":{},"injectables/PagesQuery.html":{},"injectables/PagesService.html":{},"interfaces/PagesState.html":{},"injectables/PagesStore.html":{},"interfaces/Paragraph.html":{},"interfaces/ParagraphBlock.html":{},"injectables/PluginCode.html":{},"modules/PluginCodeModule.html":{},"interfaces/PluginConfig.html":{},"injectables/PluginHeader.html":{},"modules/PluginHeaderModule.html":{},"injectables/PluginImage.html":{},"modules/PluginImageModule.html":{},"injectables/PluginLink.html":{},"modules/PluginLinkModule.html":{},"injectables/PluginList.html":{},"modules/PluginListModule.html":{},"injectables/PluginMarker.html":{},"modules/PluginMarkerModule.html":{},"injectables/PluginParagraph.html":{},"modules/PluginParagraphModule.html":{},"injectables/PluginSimpleImage.html":{},"modules/PluginSimpleImageModule.html":{},"classes/Ready.html":{},"interfaces/ReadyMap.html":{},"classes/SaveEnd.html":{},"classes/SaveStart.html":{},"components/SidebarComponent.html":{},"interfaces/Tag.html":{},"interfaces/ToolSettingsMap.html":{},"changelog.html":{},"contributing.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"index.html":{},"license.html":{},"modules.html":{},"overview.html":{},"todo.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{},"additional-documentation/tinynodes-library-docs.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-readme.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-readme/ngx-editorjs-changelog.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-plugins-readme.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-plugins-readme/ngx-editorjs-plugins-changelog.html":{}}}],["0",{"_index":111,"title":{},"body":{"components/AppComponent.html":{},"components/NavBarComponent.html":{},"injectables/NgxEditorJSService.html":{},"coverage.html":{}}}],["0.8.26",{"_index":1324,"title":{},"body":{"dependencies.html":{}}}],["0/1",{"_index":1275,"title":{},"body":{"coverage.html":{}}}],["0/2",{"_index":1283,"title":{},"body":{"coverage.html":{}}}],["0/3",{"_index":1282,"title":{},"body":{"coverage.html":{}}}],["0/4",{"_index":1280,"title":{},"body":{"coverage.html":{}}}],["0/5",{"_index":1288,"title":{},"body":{"coverage.html":{}}}],["0/6",{"_index":1281,"title":{},"body":{"coverage.html":{}}}],["05",{"_index":1509,"title":{},"body":{"additional-documentation/tinynodes-library-docs/ngx-editorjs-readme/ngx-editorjs-changelog.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-plugins-readme/ngx-editorjs-plugins-changelog.html":{}}}],["1",{"_index":332,"title":{},"body":{"interfaces/Block.html":{},"interfaces/Header.html":{},"interfaces/HeaderBlock.html":{},"interfaces/Image.html":{},"interfaces/ImageBlock.html":{},"interfaces/List.html":{},"interfaces/ListBlock.html":{},"interfaces/Paragraph.html":{},"interfaces/ParagraphBlock.html":{},"overview.html":{}}}],["1.0.0",{"_index":1529,"title":{},"body":{"additional-documentation/tinynodes-library-docs/ngx-editorjs-readme/ngx-editorjs-changelog.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-plugins-readme/ngx-editorjs-plugins-changelog.html":{}}}],["1.0.4",{"_index":1312,"title":{},"body":{"dependencies.html":{}}}],["1.1.0",{"_index":1517,"title":{},"body":{"additional-documentation/tinynodes-library-docs/ngx-editorjs-readme/ngx-editorjs-changelog.html":{}}}],["1.1.1",{"_index":1513,"title":{},"body":{"additional-documentation/tinynodes-library-docs/ngx-editorjs-readme/ngx-editorjs-changelog.html":{}}}],["1.1.2",{"_index":1508,"title":{},"body":{"additional-documentation/tinynodes-library-docs/ngx-editorjs-readme/ngx-editorjs-changelog.html":{}}}],["1.2",{"_index":1038,"title":{},"body":{"changelog.html":{}}}],["1.3.4",{"_index":1315,"title":{},"body":{"dependencies.html":{}}}],["1.4",{"_index":1265,"title":{},"body":{"contributing.html":{}}}],["1/1",{"_index":1278,"title":{},"body":{"coverage.html":{}}}],["10",{"_index":1514,"title":{},"body":{"additional-documentation/tinynodes-library-docs/ngx-editorjs-readme/ngx-editorjs-changelog.html":{}}}],["100",{"_index":95,"title":{},"body":{"components/AppComponent.html":{},"components/EditorPageComponent.html":{},"components/NgxEditorJSComponent.html":{},"components/PageContainerComponent.html":{},"coverage.html":{}}}],["100vh",{"_index":479,"title":{},"body":{"components/EditorPageComponent.html":{},"components/NgxEditorJSComponent.html":{},"components/PageContainerComponent.html":{}}}],["11",{"_index":1510,"title":{},"body":{"additional-documentation/tinynodes-library-docs/ngx-editorjs-readme/ngx-editorjs-changelog.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-plugins-readme/ngx-editorjs-plugins-changelog.html":{}}}],["12th",{"_index":1033,"title":{},"body":{"changelog.html":{}}}],["13/14",{"_index":1298,"title":{},"body":{"coverage.html":{}}}],["15",{"_index":127,"title":{},"body":{"components/AppComponent.html":{},"components/NavBarComponent.html":{}}}],["17",{"_index":1404,"title":{},"body":{"overview.html":{}}}],["1em",{"_index":526,"title":{},"body":{"components/NgxEditorJSComponent.html":{}}}],["2.0.8",{"_index":1320,"title":{},"body":{"dependencies.html":{}}}],["2.13.0",{"_index":1313,"title":{},"body":{"dependencies.html":{}}}],["2.2.3",{"_index":1314,"title":{},"body":{"dependencies.html":{}}}],["2.5.0",{"_index":1316,"title":{},"body":{"dependencies.html":{}}}],["2.5.4",{"_index":1318,"title":{},"body":{"dependencies.html":{}}}],["2/2",{"_index":1291,"title":{},"body":{"coverage.html":{}}}],["2/7",{"_index":1296,"title":{},"body":{"coverage.html":{}}}],["2019",{"_index":1034,"title":{},"body":{"changelog.html":{},"license.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-readme/ngx-editorjs-changelog.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-plugins-readme/ngx-editorjs-plugins-changelog.html":{}}}],["24",{"_index":1406,"title":{},"body":{"overview.html":{}}}],["250px",{"_index":97,"title":{},"body":{"components/AppComponent.html":{}}}],["28",{"_index":1295,"title":{},"body":{"coverage.html":{}}}],["2px",{"_index":522,"title":{},"body":{"components/NgxEditorJSComponent.html":{}}}],["3.0.2",{"_index":1311,"title":{},"body":{"dependencies.html":{}}}],["3/3",{"_index":1292,"title":{},"body":{"coverage.html":{}}}],["30px",{"_index":119,"title":{},"body":{"components/AppComponent.html":{},"components/NavBarComponent.html":{}}}],["36",{"_index":1289,"title":{},"body":{"coverage.html":{}}}],["4/11",{"_index":1290,"title":{},"body":{"coverage.html":{}}}],["5",{"_index":1405,"title":{},"body":{"overview.html":{}}}],["5px",{"_index":122,"title":{},"body":{"components/AppComponent.html":{},"components/NavBarComponent.html":{}}}],["6",{"_index":333,"title":{},"body":{"interfaces/Block.html":{},"interfaces/Header.html":{},"interfaces/HeaderBlock.html":{},"interfaces/Image.html":{},"interfaces/ImageBlock.html":{},"interfaces/List.html":{},"interfaces/ListBlock.html":{},"interfaces/Paragraph.html":{},"interfaces/ParagraphBlock.html":{},"overview.html":{}}}],["6.3.3",{"_index":1322,"title":{},"body":{"dependencies.html":{}}}],["6/6",{"_index":1294,"title":{},"body":{"coverage.html":{}}}],["6/7",{"_index":1279,"title":{},"body":{"coverage.html":{}}}],["7",{"_index":1332,"title":{},"body":{"index.html":{}}}],["7.0.0",{"_index":1308,"title":{},"body":{"dependencies.html":{}}}],["7.1.5",{"_index":1321,"title":{},"body":{"dependencies.html":{}}}],["7.2.15",{"_index":1304,"title":{},"body":{"dependencies.html":{}}}],["7.3.7",{"_index":1306,"title":{},"body":{"dependencies.html":{}}}],["7.4.0",{"_index":1317,"title":{},"body":{"dependencies.html":{}}}],["7/7",{"_index":1293,"title":{},"body":{"coverage.html":{}}}],["85",{"_index":130,"title":{},"body":{"components/AppComponent.html":{},"components/NavBarComponent.html":{},"coverage.html":{}}}],["9/9",{"_index":1299,"title":{},"body":{"coverage.html":{}}}],["92",{"_index":1297,"title":{},"body":{"coverage.html":{}}}],["a:active",{"_index":104,"title":{},"body":{"components/AppComponent.html":{},"components/NavBarComponent.html":{}}}],["a:hover",{"_index":103,"title":{},"body":{"components/AppComponent.html":{},"components/NavBarComponent.html":{}}}],["above",{"_index":1370,"title":{},"body":{"license.html":{}}}],["abusive",{"_index":1230,"title":{},"body":{"contributing.html":{}}}],["acceptable",{"_index":1184,"title":{},"body":{"contributing.html":{}}}],["accepting",{"_index":1147,"title":{},"body":{"contributing.html":{}}}],["access",{"_index":514,"title":{},"body":{"components/NgxEditorJSComponent.html":{}}}],["accessors",{"_index":230,"title":{},"body":{"injectables/AppService.html":{},"components/EditorPageComponent.html":{},"directives/NgxEditorJSDirective.html":{},"injectables/NgxEditorJSPluginService.html":{},"components/PageContainerComponent.html":{},"injectables/PagesService.html":{}}}],["account",{"_index":1219,"title":{},"body":{"contributing.html":{}}}],["acting",{"_index":1220,"title":{},"body":{"contributing.html":{}}}],["action",{"_index":371,"title":{},"body":{"classes/Changed.html":{},"injectables/NgxEditorJSEffects.html":{},"classes/NotReady.html":{},"classes/Ready.html":{},"classes/SaveEnd.html":{},"classes/SaveStart.html":{},"contributing.html":{},"license.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-readme.html":{}}}],["action.payload.holder",{"_index":579,"title":{},"body":{"injectables/NgxEditorJSEffects.html":{}}}],["actions",{"_index":569,"title":{},"body":{"injectables/NgxEditorJSEffects.html":{}}}],["actions/ngx",{"_index":589,"title":{},"body":{"injectables/NgxEditorJSEffects.html":{}}}],["actual_component",{"_index":151,"title":{},"body":{"components/AppComponent.html":{},"components/EditorPageComponent.html":{},"components/NavBarComponent.html":{},"components/NgxEditorJSComponent.html":{},"components/PageContainerComponent.html":{},"components/SidebarComponent.html":{}}}],["adapted",{"_index":1263,"title":{},"body":{"contributing.html":{}}}],["add",{"_index":477,"title":{},"body":{"components/EditorPageComponent.html":{},"injectables/NgxEditorJSPluginService.html":{},"injectables/PagesService.html":{},"todo.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-readme.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-readme/ngx-editorjs-changelog.html":{}}}],["add(key",{"_index":656,"title":{},"body":{"injectables/NgxEditorJSPluginService.html":{}}}],["add(page",{"_index":891,"title":{},"body":{"injectables/PagesService.html":{}}}],["addblock",{"_index":886,"title":{},"body":{"injectables/PagesService.html":{}}}],["addblock(pageid",{"_index":893,"title":{},"body":{"injectables/PagesService.html":{}}}],["added",{"_index":324,"title":{},"body":{"interfaces/Block.html":{},"interfaces/Header.html":{},"interfaces/HeaderBlock.html":{},"interfaces/Image.html":{},"interfaces/ImageBlock.html":{},"interfaces/List.html":{},"interfaces/ListBlock.html":{},"injectables/PagesService.html":{},"interfaces/Paragraph.html":{},"interfaces/ParagraphBlock.html":{},"miscellaneous/typealiases.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-readme/ngx-editorjs-changelog.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-plugins-readme/ngx-editorjs-plugins-changelog.html":{}}}],["adding",{"_index":308,"title":{},"body":{"interfaces/BasePlugin.html":{},"interfaces/PluginConfig.html":{},"interfaces/ToolSettingsMap.html":{},"miscellaneous/variables.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-readme.html":{}}}],["additional",{"_index":317,"title":{"additional-documentation/tinynodes-library-docs.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-readme.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-readme/ngx-editorjs-changelog.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-plugins-readme.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-plugins-readme/ngx-editorjs-plugins-changelog.html":{}},"body":{"interfaces/Block.html":{},"interfaces/Header.html":{},"interfaces/HeaderBlock.html":{},"interfaces/Image.html":{},"interfaces/ImageBlock.html":{},"interfaces/List.html":{},"interfaces/ListBlock.html":{},"modules/NgxEditorjsPluginsModule.html":{},"interfaces/Paragraph.html":{},"interfaces/ParagraphBlock.html":{}}}],["address",{"_index":1174,"title":{},"body":{"contributing.html":{}}}],["adds",{"_index":717,"title":{},"body":{"injectables/NgxEditorJSService.html":{}}}],["adheres",{"_index":1503,"title":{},"body":{"additional-documentation/tinynodes-library-docs/ngx-editorjs-readme/ngx-editorjs-changelog.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-plugins-readme/ngx-editorjs-plugins-changelog.html":{}}}],["advances",{"_index":1162,"title":{},"body":{"contributing.html":{}}}],["aftercontentinit",{"_index":436,"title":{},"body":{"components/EditorPageComponent.html":{}}}],["afterviewinit",{"_index":535,"title":{},"body":{"directives/NgxEditorJSDirective.html":{}}}],["again",{"_index":1475,"title":{},"body":{"additional-documentation/tinynodes-library-docs/ngx-editorjs-readme.html":{}}}],["age",{"_index":1120,"title":{},"body":{"contributing.html":{}}}],["akitangdevtools",{"_index":200,"title":{},"body":{"modules/AppModule.html":{}}}],["akitangdevtools.forroot",{"_index":224,"title":{},"body":{"modules/AppModule.html":{}}}],["akitangrouterstoremodule",{"_index":195,"title":{},"body":{"modules/AppModule.html":{}}}],["akitangrouterstoremodule.forroot",{"_index":225,"title":{},"body":{"modules/AppModule.html":{}}}],["aliases",{"_index":1424,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["align",{"_index":123,"title":{},"body":{"components/AppComponent.html":{},"components/NavBarComponent.html":{},"components/NgxEditorJSComponent.html":{}}}],["aligned",{"_index":1198,"title":{},"body":{"contributing.html":{}}}],["allow",{"_index":283,"title":{},"body":{"interfaces/BasePlugin.html":{},"modules/NgxEditorJSModule.html":{},"interfaces/PluginConfig.html":{},"interfaces/ToolSettingsMap.html":{}}}],["allows",{"_index":418,"title":{},"body":{"interfaces/EditorJSConfig.html":{},"interfaces/NgxEditorJSConfig.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-readme.html":{}}}],["and/or",{"_index":1362,"title":{},"body":{"license.html":{}}}],["angular",{"_index":52,"title":{},"body":{"components/AppComponent.html":{},"directives/NgxEditorJSDirective.html":{},"modules/NgxEditorJSModule.html":{},"injectables/NgxEditorJSService.html":{},"changelog.html":{},"index.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-readme.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-readme/ngx-editorjs-changelog.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-plugins-readme.html":{}}}],["angular's",{"_index":1468,"title":{},"body":{"additional-documentation/tinynodes-library-docs/ngx-editorjs-readme.html":{}}}],["angular/animations",{"_index":1303,"title":{},"body":{"dependencies.html":{}}}],["angular/cdk",{"_index":1305,"title":{},"body":{"dependencies.html":{}}}],["angular/common",{"_index":617,"title":{},"body":{"modules/NgxEditorJSModule.html":{},"modules/NgxEditorjsDemoModule.html":{},"modules/NgxEditorjsNgrxModule.html":{},"modules/NgxEditorjsPluginsModule.html":{},"dependencies.html":{}}}],["angular/common/http",{"_index":183,"title":{},"body":{"modules/AppModule.html":{}}}],["angular/compiler",{"_index":1307,"title":{},"body":{"dependencies.html":{}}}],["angular/core",{"_index":74,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"modules/ApplicationDataModule.html":{},"injectables/ApplicationQuery.html":{},"injectables/ApplicationStore.html":{},"interfaces/BasePlugin.html":{},"interfaces/EditorJSConfig.html":{},"components/EditorPageComponent.html":{},"modules/MaterialModule.html":{},"components/NavBarComponent.html":{},"components/NgxEditorJSComponent.html":{},"interfaces/NgxEditorJSConfig.html":{},"directives/NgxEditorJSDirective.html":{},"injectables/NgxEditorJSEffects.html":{},"modules/NgxEditorJSModule.html":{},"injectables/NgxEditorJSPluginService.html":{},"modules/NgxEditorJSPluginServiceModule.html":{},"injectables/NgxEditorJSService.html":{},"modules/NgxEditorjsDemoModule.html":{},"modules/NgxEditorjsNgrxModule.html":{},"modules/NgxEditorjsPluginsModule.html":{},"components/PageContainerComponent.html":{},"modules/PageStoreModule.html":{},"injectables/PagesQuery.html":{},"injectables/PagesService.html":{},"interfaces/PagesState.html":{},"injectables/PagesStore.html":{},"injectables/PluginCode.html":{},"modules/PluginCodeModule.html":{},"interfaces/PluginConfig.html":{},"injectables/PluginHeader.html":{},"modules/PluginHeaderModule.html":{},"injectables/PluginImage.html":{},"modules/PluginImageModule.html":{},"injectables/PluginLink.html":{},"modules/PluginLinkModule.html":{},"injectables/PluginList.html":{},"modules/PluginListModule.html":{},"injectables/PluginMarker.html":{},"modules/PluginMarkerModule.html":{},"injectables/PluginParagraph.html":{},"modules/PluginParagraphModule.html":{},"injectables/PluginSimpleImage.html":{},"modules/PluginSimpleImageModule.html":{},"components/SidebarComponent.html":{},"interfaces/ToolSettingsMap.html":{},"dependencies.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-readme.html":{}}}],["angular/flex",{"_index":186,"title":{},"body":{"modules/AppModule.html":{},"dependencies.html":{}}}],["angular/forms",{"_index":460,"title":{},"body":{"components/EditorPageComponent.html":{},"modules/NgxEditorjsDemoModule.html":{},"dependencies.html":{}}}],["angular/material",{"_index":75,"title":{},"body":{"components/AppComponent.html":{},"modules/MaterialModule.html":{},"modules/NgxEditorjsDemoModule.html":{},"components/SidebarComponent.html":{},"dependencies.html":{}}}],["angular/platform",{"_index":189,"title":{},"body":{"modules/AppModule.html":{},"dependencies.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-readme.html":{}}}],["angular/router",{"_index":194,"title":{},"body":{"modules/AppModule.html":{},"interfaces/ApplicationState.html":{},"interfaces/MenuItem.html":{},"modules/NgxEditorjsDemoModule.html":{},"dependencies.html":{}}}],["aot",{"_index":1463,"title":{},"body":{"additional-documentation/tinynodes-library-docs/ngx-editorjs-readme.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-readme/ngx-editorjs-changelog.html":{}}}],["api",{"_index":741,"title":{},"body":{"injectables/NgxEditorJSService.html":{},"modules/PluginCodeModule.html":{},"modules/PluginHeaderModule.html":{},"modules/PluginImageModule.html":{},"modules/PluginLinkModule.html":{},"modules/PluginListModule.html":{},"modules/PluginMarkerModule.html":{},"modules/PluginParagraphModule.html":{},"modules/PluginSimpleImageModule.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-readme.html":{}}}],["api](https://editorjs.io/api",{"_index":779,"title":{},"body":{"injectables/NgxEditorJSService.html":{}}}],["app",{"_index":49,"title":{},"body":{"components/AppComponent.html":{},"components/NavBarComponent.html":{},"modules/NgxEditorJSModule.html":{},"components/SidebarComponent.html":{},"changelog.html":{}}}],["app.component",{"_index":1455,"title":{},"body":{"additional-documentation/tinynodes-library-docs/ngx-editorjs-readme.html":{}}}],["app.component.css",{"_index":26,"title":{},"body":{"components/AppComponent.html":{}}}],["app.component.html",{"_index":28,"title":{},"body":{"components/AppComponent.html":{}}}],["appcomponent",{"_index":1,"title":{"components/AppComponent.html":{}},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"components/EditorPageComponent.html":{},"components/NavBarComponent.html":{},"components/NgxEditorJSComponent.html":{},"components/PageContainerComponent.html":{},"components/SidebarComponent.html":{},"coverage.html":{},"overview.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-readme.html":{}}}],["appear",{"_index":476,"title":{},"body":{"components/EditorPageComponent.html":{}}}],["appearance",{"_index":1130,"title":{},"body":{"contributing.html":{}}}],["application",{"_index":15,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"injectables/ApplicationStore.html":{},"interfaces/BasePlugin.html":{},"components/NgxEditorJSComponent.html":{},"modules/NgxEditorJSModule.html":{},"injectables/NgxEditorJSPluginService.html":{},"interfaces/PluginConfig.html":{},"interfaces/ToolSettingsMap.html":{},"miscellaneous/functions.html":{},"index.html":{},"miscellaneous/variables.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-readme.html":{}}}],["application.model",{"_index":256,"title":{},"body":{"injectables/ApplicationQuery.html":{},"injectables/ApplicationStore.html":{}}}],["application.query",{"_index":240,"title":{},"body":{"injectables/AppService.html":{},"modules/ApplicationDataModule.html":{}}}],["application.service",{"_index":250,"title":{},"body":{"modules/ApplicationDataModule.html":{}}}],["application.store",{"_index":241,"title":{},"body":{"injectables/AppService.html":{},"modules/ApplicationDataModule.html":{},"injectables/ApplicationQuery.html":{}}}],["applicationdatamodule",{"_index":167,"title":{"modules/ApplicationDataModule.html":{}},"body":{"modules/AppModule.html":{},"modules/ApplicationDataModule.html":{},"modules.html":{},"overview.html":{}}}],["applicationquery",{"_index":233,"title":{"injectables/ApplicationQuery.html":{}},"body":{"injectables/AppService.html":{},"modules/ApplicationDataModule.html":{},"injectables/ApplicationQuery.html":{},"coverage.html":{},"overview.html":{}}}],["applicationstate",{"_index":255,"title":{"interfaces/ApplicationState.html":{}},"body":{"injectables/ApplicationQuery.html":{},"interfaces/ApplicationState.html":{},"injectables/ApplicationStore.html":{},"interfaces/MenuItem.html":{},"coverage.html":{}}}],["applicationstore",{"_index":234,"title":{"injectables/ApplicationStore.html":{}},"body":{"injectables/AppService.html":{},"modules/ApplicationDataModule.html":{},"injectables/ApplicationQuery.html":{},"injectables/ApplicationStore.html":{},"coverage.html":{},"overview.html":{}}}],["applies",{"_index":1209,"title":{},"body":{"contributing.html":{}}}],["appmodule",{"_index":156,"title":{"modules/AppModule.html":{}},"body":{"modules/AppModule.html":{},"modules.html":{},"overview.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-readme.html":{}}}],["appointed",{"_index":1221,"title":{},"body":{"contributing.html":{}}}],["appropriate",{"_index":1187,"title":{},"body":{"contributing.html":{}}}],["approutes",{"_index":1277,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["apps/.../app.po.ts",{"_index":1429,"title":{},"body":{"miscellaneous/variables.html":{}}}],["apps/.../app.routes.ts",{"_index":1426,"title":{},"body":{"miscellaneous/variables.html":{}}}],["apps/.../environment.prod.ts",{"_index":1427,"title":{},"body":{"miscellaneous/variables.html":{}}}],["apps/.../environment.ts",{"_index":1428,"title":{},"body":{"miscellaneous/variables.html":{}}}],["apps/ngx",{"_index":10,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"modules/ApplicationDataModule.html":{},"injectables/ApplicationQuery.html":{},"interfaces/ApplicationState.html":{},"injectables/ApplicationStore.html":{},"modules/MaterialModule.html":{},"interfaces/MenuItem.html":{},"components/NavBarComponent.html":{},"components/SidebarComponent.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["appservice",{"_index":41,"title":{"injectables/AppService.html":{}},"body":{"components/AppComponent.html":{},"injectables/AppService.html":{},"modules/ApplicationDataModule.html":{},"components/NavBarComponent.html":{},"components/SidebarComponent.html":{},"coverage.html":{},"overview.html":{}}}],["area",{"_index":417,"title":{},"body":{"interfaces/EditorJSConfig.html":{},"components/EditorPageComponent.html":{},"interfaces/NgxEditorJSConfig.html":{}}}],["arising",{"_index":1396,"title":{},"body":{"license.html":{}}}],["array",{"_index":663,"title":{},"body":{"injectables/NgxEditorJSPluginService.html":{},"injectables/NgxEditorJSService.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-readme.html":{}}}],["arrayadd",{"_index":909,"title":{},"body":{"injectables/PagesService.html":{}}}],["arrayadd(entity.blocks",{"_index":921,"title":{},"body":{"injectables/PagesService.html":{}}}],["arrayremove",{"_index":910,"title":{},"body":{"injectables/PagesService.html":{}}}],["arrayremove(entity.blocks",{"_index":922,"title":{},"body":{"injectables/PagesService.html":{}}}],["associated",{"_index":1353,"title":{},"body":{"license.html":{}}}],["attach",{"_index":531,"title":{},"body":{"directives/NgxEditorJSDirective.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-readme/ngx-editorjs-changelog.html":{}}}],["attached",{"_index":1526,"title":{},"body":{"additional-documentation/tinynodes-library-docs/ngx-editorjs-readme/ngx-editorjs-changelog.html":{}}}],["attacks",{"_index":1167,"title":{},"body":{"contributing.html":{}}}],["attention",{"_index":1161,"title":{},"body":{"contributing.html":{}}}],["attributes",{"_index":502,"title":{},"body":{"components/NgxEditorJSComponent.html":{}}}],["attribution",{"_index":1262,"title":{},"body":{"contributing.html":{}}}],["authors",{"_index":1387,"title":{},"body":{"license.html":{}}}],["auto",{"_index":120,"title":{},"body":{"components/AppComponent.html":{},"components/NavBarComponent.html":{}}}],["autofocus",{"_index":398,"title":{},"body":{"interfaces/EditorJSConfig.html":{},"interfaces/NgxEditorJSConfig.html":{},"modules/NgxEditorJSModule.html":{},"miscellaneous/variables.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-readme.html":{}}}],["autofocused",{"_index":404,"title":{},"body":{"interfaces/EditorJSConfig.html":{},"interfaces/NgxEditorJSConfig.html":{}}}],["autosave",{"_index":714,"title":{},"body":{"injectables/NgxEditorJSService.html":{},"todo.html":{}}}],["available",{"_index":319,"title":{},"body":{"interfaces/Block.html":{},"interfaces/Header.html":{},"interfaces/HeaderBlock.html":{},"interfaces/Image.html":{},"interfaces/ImageBlock.html":{},"interfaces/List.html":{},"interfaces/ListBlock.html":{},"components/NgxEditorJSComponent.html":{},"injectables/NgxEditorJSPluginService.html":{},"injectables/PagesService.html":{},"interfaces/Paragraph.html":{},"interfaces/ParagraphBlock.html":{},"contributing.html":{},"modules.html":{},"miscellaneous/typealiases.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-readme/ngx-editorjs-changelog.html":{}}}],["await",{"_index":789,"title":{},"body":{"injectables/NgxEditorJSService.html":{}}}],["back",{"_index":730,"title":{},"body":{"injectables/NgxEditorJSService.html":{},"todo.html":{}}}],["background",{"_index":342,"title":{},"body":{"interfaces/Block.html":{},"interfaces/Header.html":{},"interfaces/HeaderBlock.html":{},"interfaces/Image.html":{},"interfaces/ImageBlock.html":{},"interfaces/List.html":{},"interfaces/ListBlock.html":{},"interfaces/Paragraph.html":{},"interfaces/ParagraphBlock.html":{}}}],["ban",{"_index":1199,"title":{},"body":{"contributing.html":{}}}],["bar",{"_index":488,"title":{},"body":{"components/NavBarComponent.html":{}}}],["bar'},{'name",{"_index":142,"title":{},"body":{"components/AppComponent.html":{},"components/EditorPageComponent.html":{},"components/NavBarComponent.html":{},"components/NgxEditorJSComponent.html":{},"components/PageContainerComponent.html":{},"components/SidebarComponent.html":{}}}],["bar.component",{"_index":212,"title":{},"body":{"modules/AppModule.html":{}}}],["bar.component.html",{"_index":490,"title":{},"body":{"components/NavBarComponent.html":{}}}],["bar.component.scss",{"_index":489,"title":{},"body":{"components/NavBarComponent.html":{}}}],["bar.component.ts",{"_index":487,"title":{},"body":{"components/NavBarComponent.html":{},"coverage.html":{}}}],["bar.component.ts:11",{"_index":491,"title":{},"body":{"components/NavBarComponent.html":{}}}],["bar.component.ts:15",{"_index":493,"title":{},"body":{"components/NavBarComponent.html":{}}}],["bar/nav",{"_index":211,"title":{},"body":{"modules/AppModule.html":{},"components/NavBarComponent.html":{},"coverage.html":{}}}],["base",{"_index":313,"title":{},"body":{"interfaces/Block.html":{}}}],["based",{"_index":1501,"title":{},"body":{"additional-documentation/tinynodes-library-docs/ngx-editorjs-readme/ngx-editorjs-changelog.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-plugins-readme/ngx-editorjs-plugins-changelog.html":{}}}],["baseplugin",{"_index":277,"title":{"interfaces/BasePlugin.html":{}},"body":{"interfaces/BasePlugin.html":{},"injectables/NgxEditorJSPluginService.html":{},"injectables/PluginCode.html":{},"interfaces/PluginConfig.html":{},"injectables/PluginHeader.html":{},"injectables/PluginImage.html":{},"injectables/PluginLink.html":{},"injectables/PluginList.html":{},"injectables/PluginMarker.html":{},"injectables/PluginParagraph.html":{},"injectables/PluginSimpleImage.html":{},"interfaces/ToolSettingsMap.html":{},"coverage.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-readme.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-readme/ngx-editorjs-changelog.html":{}}}],["bash",{"_index":1448,"title":{},"body":{"additional-documentation/tinynodes-library-docs/ngx-editorjs-readme.html":{}}}],["basic",{"_index":347,"title":{},"body":{"interfaces/Block.html":{},"interfaces/Header.html":{},"interfaces/HeaderBlock.html":{},"interfaces/Image.html":{},"interfaces/ImageBlock.html":{},"interfaces/List.html":{},"interfaces/ListBlock.html":{},"interfaces/Paragraph.html":{},"interfaces/ParagraphBlock.html":{},"miscellaneous/typealiases.html":{}}}],["before",{"_index":721,"title":{},"body":{"injectables/NgxEditorJSService.html":{},"contributing.html":{}}}],["behavior",{"_index":1136,"title":{},"body":{"contributing.html":{}}}],["behaviors",{"_index":1203,"title":{},"body":{"contributing.html":{}}}],["behaviorsubject",{"_index":352,"title":{},"body":{"interfaces/BlocksMap.html":{},"interfaces/ChangeMap.html":{},"interfaces/EditorMap.html":{},"injectables/NgxEditorJSService.html":{},"interfaces/ReadyMap.html":{}}}],["behaviorsubject(0",{"_index":769,"title":{},"body":{"injectables/NgxEditorJSService.html":{}}}],["behaviorsubject(false",{"_index":766,"title":{},"body":{"injectables/NgxEditorJSService.html":{}}}],["being",{"_index":1141,"title":{},"body":{"contributing.html":{}}}],["below",{"_index":475,"title":{},"body":{"components/EditorPageComponent.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-readme.html":{}}}],["best",{"_index":1151,"title":{},"body":{"contributing.html":{}}}],["beta.24",{"_index":1309,"title":{},"body":{"dependencies.html":{}}}],["better",{"_index":1489,"title":{},"body":{"additional-documentation/tinynodes-library-docs/ngx-editorjs-readme.html":{}}}],["block",{"_index":118,"title":{"interfaces/Block.html":{}},"body":{"components/AppComponent.html":{},"interfaces/Block.html":{},"interfaces/BlocksMap.html":{},"interfaces/ChangeMap.html":{},"interfaces/EditorJSConfig.html":{},"interfaces/EditorMap.html":{},"components/EditorPageComponent.html":{},"interfaces/Header.html":{},"interfaces/HeaderBlock.html":{},"interfaces/Image.html":{},"interfaces/ImageBlock.html":{},"interfaces/List.html":{},"interfaces/ListBlock.html":{},"components/NavBarComponent.html":{},"components/NgxEditorJSComponent.html":{},"interfaces/NgxEditorJSConfig.html":{},"directives/NgxEditorJSDirective.html":{},"injectables/NgxEditorJSEffects.html":{},"injectables/NgxEditorJSService.html":{},"modules/NgxEditorjsPluginsModule.html":{},"interfaces/Page.html":{},"interfaces/PageBlock.html":{},"injectables/PagesService.html":{},"interfaces/Paragraph.html":{},"interfaces/ParagraphBlock.html":{},"injectables/PluginCode.html":{},"modules/PluginCodeModule.html":{},"injectables/PluginHeader.html":{},"modules/PluginHeaderModule.html":{},"injectables/PluginImage.html":{},"modules/PluginImageModule.html":{},"injectables/PluginLink.html":{},"modules/PluginLinkModule.html":{},"injectables/PluginList.html":{},"modules/PluginListModule.html":{},"injectables/PluginParagraph.html":{},"modules/PluginParagraphModule.html":{},"injectables/PluginSimpleImage.html":{},"modules/PluginSimpleImageModule.html":{},"interfaces/ReadyMap.html":{},"interfaces/Tag.html":{},"changelog.html":{},"coverage.html":{},"miscellaneous/typealiases.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-readme.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-plugins-readme.html":{}}}],["block.id",{"_index":923,"title":{},"body":{"injectables/PagesService.html":{}}}],["blocks",{"_index":355,"title":{},"body":{"interfaces/BlocksMap.html":{},"interfaces/ChangeMap.html":{},"interfaces/EditorMap.html":{},"components/EditorPageComponent.html":{},"components/NgxEditorJSComponent.html":{},"directives/NgxEditorJSDirective.html":{},"injectables/NgxEditorJSEffects.html":{},"injectables/NgxEditorJSService.html":{},"interfaces/Page.html":{},"interfaces/PageBlock.html":{},"injectables/PagesService.html":{},"interfaces/ReadyMap.html":{},"interfaces/Tag.html":{},"todo.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-readme.html":{}}}],["blocks.subscribe",{"_index":578,"title":{},"body":{"injectables/NgxEditorJSEffects.html":{}}}],["blocksmap",{"_index":349,"title":{"interfaces/BlocksMap.html":{}},"body":{"interfaces/BlocksMap.html":{},"interfaces/ChangeMap.html":{},"interfaces/EditorMap.html":{},"injectables/NgxEditorJSService.html":{},"interfaces/ReadyMap.html":{},"coverage.html":{}}}],["blocktypes",{"_index":348,"title":{},"body":{"interfaces/Block.html":{},"interfaces/Header.html":{},"interfaces/HeaderBlock.html":{},"interfaces/Image.html":{},"interfaces/ImageBlock.html":{},"interfaces/List.html":{},"interfaces/ListBlock.html":{},"interfaces/Paragraph.html":{},"interfaces/ParagraphBlock.html":{},"miscellaneous/typealiases.html":{}}}],["body",{"_index":1121,"title":{},"body":{"contributing.html":{}}}],["boolean",{"_index":263,"title":{},"body":{"interfaces/ApplicationState.html":{},"interfaces/Block.html":{},"interfaces/BlocksMap.html":{},"interfaces/ChangeMap.html":{},"interfaces/EditorJSConfig.html":{},"interfaces/EditorMap.html":{},"interfaces/Header.html":{},"interfaces/HeaderBlock.html":{},"interfaces/Image.html":{},"interfaces/ImageBlock.html":{},"interfaces/List.html":{},"interfaces/ListBlock.html":{},"interfaces/MenuItem.html":{},"interfaces/NgxEditorJSConfig.html":{},"interfaces/Paragraph.html":{},"interfaces/ParagraphBlock.html":{},"interfaces/ReadyMap.html":{}}}],["bootstrap",{"_index":160,"title":{},"body":{"modules/AppModule.html":{},"modules/ApplicationDataModule.html":{},"modules/NgxEditorJSModule.html":{},"modules/NgxEditorJSPluginServiceModule.html":{},"modules/NgxEditorjsDemoModule.html":{},"modules/NgxEditorjsNgrxModule.html":{},"modules/NgxEditorjsPluginsModule.html":{},"modules/PageStoreModule.html":{},"modules/PluginCodeModule.html":{},"modules/PluginHeaderModule.html":{},"modules/PluginImageModule.html":{},"modules/PluginLinkModule.html":{},"modules/PluginListModule.html":{},"modules/PluginMarkerModule.html":{},"modules/PluginParagraphModule.html":{},"modules/PluginSimpleImageModule.html":{},"overview.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-readme.html":{}}}],["border",{"_index":339,"title":{},"body":{"interfaces/Block.html":{},"interfaces/Header.html":{},"interfaces/HeaderBlock.html":{},"interfaces/Image.html":{},"interfaces/ImageBlock.html":{},"interfaces/List.html":{},"interfaces/ListBlock.html":{},"components/NgxEditorJSComponent.html":{},"interfaces/Paragraph.html":{},"interfaces/ParagraphBlock.html":{}}}],["both",{"_index":1210,"title":{},"body":{"contributing.html":{}}}],["bottom",{"_index":416,"title":{},"body":{"interfaces/EditorJSConfig.html":{},"interfaces/NgxEditorJSConfig.html":{}}}],["break",{"_index":1053,"title":{},"body":{"changelog.html":{}}}],["browse",{"_index":1401,"title":{},"body":{"modules.html":{}}}],["browser",{"_index":190,"title":{},"body":{"modules/AppModule.html":{},"dependencies.html":{},"modules.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-readme.html":{}}}],["browser/animations",{"_index":192,"title":{},"body":{"modules/AppModule.html":{}}}],["browseranimationsmodule",{"_index":191,"title":{},"body":{"modules/AppModule.html":{}}}],["browsermodule",{"_index":188,"title":{},"body":{"modules/AppModule.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-readme.html":{}}}],["bug",{"_index":1043,"title":{},"body":{"changelog.html":{}}}],["build",{"_index":1041,"title":{},"body":{"changelog.html":{},"contributing.html":{}}}],["builds",{"_index":175,"title":{},"body":{"modules/AppModule.html":{}}}],["bundled",{"_index":1469,"title":{},"body":{"additional-documentation/tinynodes-library-docs/ngx-editorjs-readme.html":{}}}],["calling",{"_index":747,"title":{},"body":{"injectables/NgxEditorJSService.html":{}}}],["calls",{"_index":729,"title":{},"body":{"injectables/NgxEditorJSService.html":{}}}],["caption",{"_index":338,"title":{},"body":{"interfaces/Block.html":{},"interfaces/Header.html":{},"interfaces/HeaderBlock.html":{},"interfaces/Image.html":{},"interfaces/ImageBlock.html":{},"interfaces/List.html":{},"interfaces/ListBlock.html":{},"interfaces/Paragraph.html":{},"interfaces/ParagraphBlock.html":{}}}],["cd",{"_index":1494,"title":{},"body":{"additional-documentation/tinynodes-library-docs/ngx-editorjs-readme.html":{}}}],["center",{"_index":124,"title":{},"body":{"components/AppComponent.html":{},"components/NavBarComponent.html":{}}}],["change",{"_index":364,"title":{},"body":{"interfaces/BlocksMap.html":{},"interfaces/ChangeMap.html":{},"interfaces/EditorMap.html":{},"injectables/NgxEditorJSService.html":{},"interfaces/ReadyMap.html":{},"changelog.html":{},"contributing.html":{}}}],["changed",{"_index":367,"title":{"classes/Changed.html":{}},"body":{"classes/Changed.html":{},"classes/NotReady.html":{},"classes/Ready.html":{},"classes/SaveEnd.html":{},"classes/SaveStart.html":{},"coverage.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/typealiases.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-readme/ngx-editorjs-changelog.html":{}}}],["changelog",{"_index":1023,"title":{"changelog.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-readme/ngx-editorjs-changelog.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-plugins-readme/ngx-editorjs-plugins-changelog.html":{}},"body":{"changelog.html":{},"index.html":{},"additional-documentation/tinynodes-library-docs.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-readme.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-readme/ngx-editorjs-changelog.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-plugins-readme/ngx-editorjs-plugins-changelog.html":{}}}],["changelog.md",{"_index":1516,"title":{},"body":{"additional-documentation/tinynodes-library-docs/ngx-editorjs-readme/ngx-editorjs-changelog.html":{}}}],["changelogs",{"_index":1028,"title":{},"body":{"changelog.html":{}}}],["changemap",{"_index":365,"title":{"interfaces/ChangeMap.html":{}},"body":{"interfaces/BlocksMap.html":{},"interfaces/ChangeMap.html":{},"interfaces/EditorMap.html":{},"injectables/NgxEditorJSService.html":{},"interfaces/ReadyMap.html":{},"coverage.html":{}}}],["changes",{"_index":549,"title":{},"body":{"directives/NgxEditorJSDirective.html":{},"injectables/NgxEditorJSService.html":{},"contributing.html":{},"todo.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-readme.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-readme/ngx-editorjs-changelog.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-plugins-readme/ngx-editorjs-plugins-changelog.html":{}}}],["changes.blocks",{"_index":558,"title":{},"body":{"directives/NgxEditorJSDirective.html":{}}}],["changes.blocks.currentvalue",{"_index":561,"title":{},"body":{"directives/NgxEditorJSDirective.html":{}}}],["changes.blocks.firstchange",{"_index":559,"title":{},"body":{"directives/NgxEditorJSDirective.html":{}}}],["charge",{"_index":1348,"title":{},"body":{"license.html":{}}}],["ci",{"_index":1409,"title":{},"body":{"todo.html":{}}}],["circumstances",{"_index":1242,"title":{},"body":{"contributing.html":{}}}],["claim",{"_index":1390,"title":{},"body":{"license.html":{}}}],["clarified",{"_index":1228,"title":{},"body":{"contributing.html":{}}}],["clarifying",{"_index":1183,"title":{},"body":{"contributing.html":{}}}],["class",{"_index":81,"title":{"classes/Changed.html":{},"classes/NotReady.html":{},"classes/Ready.html":{},"classes/SaveEnd.html":{},"classes/SaveStart.html":{}},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"modules/ApplicationDataModule.html":{},"injectables/ApplicationQuery.html":{},"injectables/ApplicationStore.html":{},"interfaces/BasePlugin.html":{},"classes/Changed.html":{},"components/EditorPageComponent.html":{},"modules/MaterialModule.html":{},"components/NavBarComponent.html":{},"components/NgxEditorJSComponent.html":{},"directives/NgxEditorJSDirective.html":{},"injectables/NgxEditorJSEffects.html":{},"modules/NgxEditorJSModule.html":{},"injectables/NgxEditorJSPluginService.html":{},"modules/NgxEditorJSPluginServiceModule.html":{},"injectables/NgxEditorJSService.html":{},"modules/NgxEditorjsDemoModule.html":{},"modules/NgxEditorjsNgrxModule.html":{},"modules/NgxEditorjsPluginsModule.html":{},"classes/NotReady.html":{},"components/PageContainerComponent.html":{},"modules/PageStoreModule.html":{},"injectables/PagesQuery.html":{},"injectables/PagesService.html":{},"interfaces/PagesState.html":{},"injectables/PagesStore.html":{},"injectables/PluginCode.html":{},"modules/PluginCodeModule.html":{},"interfaces/PluginConfig.html":{},"injectables/PluginHeader.html":{},"modules/PluginHeaderModule.html":{},"injectables/PluginImage.html":{},"modules/PluginImageModule.html":{},"injectables/PluginLink.html":{},"modules/PluginLinkModule.html":{},"injectables/PluginList.html":{},"modules/PluginListModule.html":{},"injectables/PluginMarker.html":{},"modules/PluginMarkerModule.html":{},"injectables/PluginParagraph.html":{},"modules/PluginParagraphModule.html":{},"injectables/PluginSimpleImage.html":{},"modules/PluginSimpleImageModule.html":{},"classes/Ready.html":{},"classes/SaveEnd.html":{},"classes/SaveStart.html":{},"components/SidebarComponent.html":{},"interfaces/ToolSettingsMap.html":{},"coverage.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-readme.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-readme/ngx-editorjs-changelog.html":{}}}],["classes",{"_index":368,"title":{},"body":{"classes/Changed.html":{},"classes/NotReady.html":{},"classes/Ready.html":{},"classes/SaveEnd.html":{},"classes/SaveStart.html":{},"overview.html":{}}}],["clean",{"_index":719,"title":{},"body":{"injectables/NgxEditorJSService.html":{}}}],["click",{"_index":474,"title":{},"body":{"components/EditorPageComponent.html":{}}}],["cluster_applicationdatamodule",{"_index":247,"title":{},"body":{"modules/ApplicationDataModule.html":{},"overview.html":{}}}],["cluster_applicationdatamodule_providers",{"_index":248,"title":{},"body":{"modules/ApplicationDataModule.html":{},"overview.html":{}}}],["cluster_appmodule",{"_index":163,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_appmodule_bootstrap",{"_index":166,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_appmodule_declarations",{"_index":164,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_appmodule_imports",{"_index":165,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_ngxeditorjsdemomodule",{"_index":798,"title":{},"body":{"modules/NgxEditorjsDemoModule.html":{},"overview.html":{}}}],["cluster_ngxeditorjsdemomodule_declarations",{"_index":799,"title":{},"body":{"modules/NgxEditorjsDemoModule.html":{},"overview.html":{}}}],["cluster_ngxeditorjsdemomodule_exports",{"_index":801,"title":{},"body":{"modules/NgxEditorjsDemoModule.html":{},"overview.html":{}}}],["cluster_ngxeditorjsdemomodule_imports",{"_index":800,"title":{},"body":{"modules/NgxEditorjsDemoModule.html":{},"overview.html":{}}}],["cluster_ngxeditorjsmodule",{"_index":593,"title":{},"body":{"modules/NgxEditorJSModule.html":{},"overview.html":{}}}],["cluster_ngxeditorjsmodule_declarations",{"_index":594,"title":{},"body":{"modules/NgxEditorJSModule.html":{},"overview.html":{}}}],["cluster_ngxeditorjsmodule_exports",{"_index":596,"title":{},"body":{"modules/NgxEditorJSModule.html":{},"overview.html":{}}}],["cluster_ngxeditorjsmodule_imports",{"_index":595,"title":{},"body":{"modules/NgxEditorJSModule.html":{},"overview.html":{}}}],["cluster_ngxeditorjsmodule_providers",{"_index":597,"title":{},"body":{"modules/NgxEditorJSModule.html":{},"overview.html":{}}}],["cluster_ngxeditorjsngrxmodule",{"_index":824,"title":{},"body":{"modules/NgxEditorjsNgrxModule.html":{},"overview.html":{}}}],["cluster_ngxeditorjsngrxmodule_imports",{"_index":825,"title":{},"body":{"modules/NgxEditorjsNgrxModule.html":{}}}],["cluster_ngxeditorjspluginservicemodule",{"_index":691,"title":{},"body":{"modules/NgxEditorJSPluginServiceModule.html":{},"overview.html":{}}}],["cluster_ngxeditorjspluginservicemodule_providers",{"_index":692,"title":{},"body":{"modules/NgxEditorJSPluginServiceModule.html":{},"overview.html":{}}}],["cluster_ngxeditorjspluginsmodule",{"_index":831,"title":{},"body":{"modules/NgxEditorjsPluginsModule.html":{},"overview.html":{}}}],["cluster_ngxeditorjspluginsmodule_exports",{"_index":833,"title":{},"body":{"modules/NgxEditorjsPluginsModule.html":{},"overview.html":{}}}],["cluster_ngxeditorjspluginsmodule_imports",{"_index":832,"title":{},"body":{"modules/NgxEditorjsPluginsModule.html":{},"overview.html":{}}}],["cluster_pagestoremodule",{"_index":872,"title":{},"body":{"modules/PageStoreModule.html":{},"overview.html":{}}}],["cluster_pagestoremodule_providers",{"_index":873,"title":{},"body":{"modules/PageStoreModule.html":{},"overview.html":{}}}],["cluster_plugincodemodule",{"_index":933,"title":{},"body":{"modules/PluginCodeModule.html":{},"overview.html":{}}}],["cluster_plugincodemodule_providers",{"_index":934,"title":{},"body":{"modules/PluginCodeModule.html":{},"overview.html":{}}}],["cluster_pluginheadermodule",{"_index":944,"title":{},"body":{"modules/PluginHeaderModule.html":{},"overview.html":{}}}],["cluster_pluginheadermodule_providers",{"_index":945,"title":{},"body":{"modules/PluginHeaderModule.html":{},"overview.html":{}}}],["cluster_pluginimagemodule",{"_index":953,"title":{},"body":{"modules/PluginImageModule.html":{},"overview.html":{}}}],["cluster_pluginimagemodule_providers",{"_index":954,"title":{},"body":{"modules/PluginImageModule.html":{},"overview.html":{}}}],["cluster_pluginlinkmodule",{"_index":962,"title":{},"body":{"modules/PluginLinkModule.html":{},"overview.html":{}}}],["cluster_pluginlinkmodule_providers",{"_index":963,"title":{},"body":{"modules/PluginLinkModule.html":{},"overview.html":{}}}],["cluster_pluginlistmodule",{"_index":970,"title":{},"body":{"modules/PluginListModule.html":{},"overview.html":{}}}],["cluster_pluginlistmodule_providers",{"_index":971,"title":{},"body":{"modules/PluginListModule.html":{},"overview.html":{}}}],["cluster_pluginmarkermodule",{"_index":982,"title":{},"body":{"modules/PluginMarkerModule.html":{},"overview.html":{}}}],["cluster_pluginmarkermodule_providers",{"_index":983,"title":{},"body":{"modules/PluginMarkerModule.html":{},"overview.html":{}}}],["cluster_pluginparagraphmodule",{"_index":990,"title":{},"body":{"modules/PluginParagraphModule.html":{},"overview.html":{}}}],["cluster_pluginparagraphmodule_providers",{"_index":991,"title":{},"body":{"modules/PluginParagraphModule.html":{},"overview.html":{}}}],["cluster_pluginsimpleimagemodule",{"_index":1002,"title":{},"body":{"modules/PluginSimpleImageModule.html":{},"overview.html":{}}}],["cluster_pluginsimpleimagemodule_providers",{"_index":1003,"title":{},"body":{"modules/PluginSimpleImageModule.html":{},"overview.html":{}}}],["cmd+shift+m",{"_index":981,"title":{},"body":{"injectables/PluginMarker.html":{}}}],["code",{"_index":931,"title":{},"body":{"injectables/PluginCode.html":{},"contributing.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-readme.html":{}}}],["code.plugin",{"_index":937,"title":{},"body":{"modules/PluginCodeModule.html":{}}}],["collection",{"_index":604,"title":{},"body":{"modules/NgxEditorJSModule.html":{},"index.html":{}}}],["color",{"_index":101,"title":{},"body":{"components/AppComponent.html":{},"components/NavBarComponent.html":{}}}],["combinelatest",{"_index":461,"title":{},"body":{"components/EditorPageComponent.html":{}}}],["combinelatest([this.form",{"_index":466,"title":{},"body":{"components/EditorPageComponent.html":{}}}],["comments",{"_index":1165,"title":{},"body":{"contributing.html":{}}}],["commits",{"_index":1194,"title":{},"body":{"contributing.html":{}}}],["common",{"_index":1047,"title":{},"body":{"changelog.html":{}}}],["commonmodule",{"_index":616,"title":{},"body":{"modules/NgxEditorJSModule.html":{},"modules/NgxEditorjsDemoModule.html":{},"modules/NgxEditorjsNgrxModule.html":{},"modules/NgxEditorjsPluginsModule.html":{}}}],["community",{"_index":1114,"title":{},"body":{"contributing.html":{}}}],["complaints",{"_index":1237,"title":{},"body":{"contributing.html":{}}}],["completes",{"_index":731,"title":{},"body":{"injectables/NgxEditorJSService.html":{}}}],["compodoc",{"_index":1515,"title":{},"body":{"additional-documentation/tinynodes-library-docs/ngx-editorjs-readme/ngx-editorjs-changelog.html":{}}}],["component",{"_index":0,"title":{"components/AppComponent.html":{},"components/EditorPageComponent.html":{},"components/NavBarComponent.html":{},"components/NgxEditorJSComponent.html":{},"components/PageContainerComponent.html":{},"components/SidebarComponent.html":{}},"body":{"components/AppComponent.html":{},"components/EditorPageComponent.html":{},"components/NavBarComponent.html":{},"components/NgxEditorJSComponent.html":{},"components/PageContainerComponent.html":{},"components/SidebarComponent.html":{},"coverage.html":{},"index.html":{},"todo.html":{},"miscellaneous/variables.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-readme.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-readme/ngx-editorjs-changelog.html":{}}}],["component/app.component",{"_index":209,"title":{},"body":{"modules/AppModule.html":{}}}],["component/app.component.ts",{"_index":12,"title":{},"body":{"components/AppComponent.html":{},"coverage.html":{}}}],["component/app.component.ts:20",{"_index":54,"title":{},"body":{"components/AppComponent.html":{}}}],["component/app.component.ts:25",{"_index":68,"title":{},"body":{"components/AppComponent.html":{}}}],["component/app.component.ts:30",{"_index":43,"title":{},"body":{"components/AppComponent.html":{}}}],["component/app.component.ts:37",{"_index":61,"title":{},"body":{"components/AppComponent.html":{}}}],["component/app.component.ts:46",{"_index":57,"title":{},"body":{"components/AppComponent.html":{}}}],["component/editorjs.component",{"_index":623,"title":{},"body":{"modules/NgxEditorJSModule.html":{}}}],["component/editorjs.component.ts",{"_index":500,"title":{},"body":{"components/NgxEditorJSComponent.html":{},"coverage.html":{}}}],["component/editorjs.component.ts:23",{"_index":513,"title":{},"body":{"components/NgxEditorJSComponent.html":{}}}],["component/editorjs.component.ts:29",{"_index":511,"title":{},"body":{"components/NgxEditorJSComponent.html":{}}}],["component/editorjs.component.ts:35",{"_index":510,"title":{},"body":{"components/NgxEditorJSComponent.html":{}}}],["component/editorjs.component.ts:42",{"_index":516,"title":{},"body":{"components/NgxEditorJSComponent.html":{}}}],["component/sidebar.component",{"_index":214,"title":{},"body":{"modules/AppModule.html":{}}}],["component/sidebar.component.ts",{"_index":1013,"title":{},"body":{"components/SidebarComponent.html":{},"coverage.html":{}}}],["component/sidebar.component.ts:13",{"_index":1019,"title":{},"body":{"components/SidebarComponent.html":{}}}],["component/sidebar.component.ts:15",{"_index":1016,"title":{},"body":{"components/SidebarComponent.html":{}}}],["component/sidebar.component.ts:19",{"_index":1018,"title":{},"body":{"components/SidebarComponent.html":{}}}],["component/sidebar.component.ts:25",{"_index":1017,"title":{},"body":{"components/SidebarComponent.html":{}}}],["component_template",{"_index":136,"title":{},"body":{"components/AppComponent.html":{},"components/EditorPageComponent.html":{},"components/NavBarComponent.html":{},"components/NgxEditorJSComponent.html":{},"components/PageContainerComponent.html":{},"components/SidebarComponent.html":{}}}],["components",{"_index":2,"title":{},"body":{"components/AppComponent.html":{},"components/EditorPageComponent.html":{},"components/NavBarComponent.html":{},"components/NgxEditorJSComponent.html":{},"directives/NgxEditorJSDirective.html":{},"components/PageContainerComponent.html":{},"components/SidebarComponent.html":{},"index.html":{},"overview.html":{}}}],["components/app",{"_index":208,"title":{},"body":{"modules/AppModule.html":{}}}],["components/nav",{"_index":210,"title":{},"body":{"modules/AppModule.html":{}}}],["components/sidebar",{"_index":213,"title":{},"body":{"modules/AppModule.html":{}}}],["conditions",{"_index":1369,"title":{},"body":{"license.html":{}}}],["conduct",{"_index":1074,"title":{},"body":{"contributing.html":{}}}],["confidentiality",{"_index":1245,"title":{},"body":{"contributing.html":{}}}],["config",{"_index":414,"title":{},"body":{"interfaces/EditorJSConfig.html":{},"interfaces/NgxEditorJSConfig.html":{},"modules/NgxEditorJSModule.html":{},"injectables/NgxEditorJSPluginService.html":{},"injectables/NgxEditorJSService.html":{},"modules/NgxEditorjsDemoModule.html":{},"todo.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-readme.html":{}}}],["config.editorjs.autofocus",{"_index":635,"title":{},"body":{"modules/NgxEditorJSModule.html":{}}}],["config.editorjs.data",{"_index":641,"title":{},"body":{"modules/NgxEditorJSModule.html":{}}}],["config.editorjs.holder",{"_index":637,"title":{},"body":{"modules/NgxEditorJSModule.html":{}}}],["config.editorjs.initialblock",{"_index":639,"title":{},"body":{"modules/NgxEditorJSModule.html":{}}}],["configurable",{"_index":1497,"title":{},"body":{"additional-documentation/tinynodes-library-docs/ngx-editorjs-readme.html":{}}}],["configuration",{"_index":292,"title":{},"body":{"interfaces/BasePlugin.html":{},"interfaces/EditorJSConfig.html":{},"interfaces/NgxEditorJSConfig.html":{},"modules/NgxEditorJSModule.html":{},"interfaces/PluginConfig.html":{},"interfaces/ToolSettingsMap.html":{},"miscellaneous/variables.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-readme.html":{}}}],["configurations",{"_index":668,"title":{},"body":{"injectables/NgxEditorJSPluginService.html":{}}}],["configured",{"_index":1451,"title":{},"body":{"additional-documentation/tinynodes-library-docs/ngx-editorjs-readme.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-readme/ngx-editorjs-changelog.html":{}}}],["configuring",{"_index":1460,"title":{},"body":{"additional-documentation/tinynodes-library-docs/ngx-editorjs-readme.html":{}}}],["connection",{"_index":1397,"title":{},"body":{"license.html":{}}}],["considered",{"_index":1177,"title":{},"body":{"contributing.html":{}}}],["const",{"_index":305,"title":{},"body":{"interfaces/BasePlugin.html":{},"interfaces/EditorJSConfig.html":{},"interfaces/NgxEditorJSConfig.html":{},"modules/NgxEditorJSModule.html":{},"injectables/NgxEditorJSService.html":{},"injectables/PagesService.html":{},"interfaces/PluginConfig.html":{},"interfaces/ToolSettingsMap.html":{}}}],["constructive",{"_index":1148,"title":{},"body":{"contributing.html":{}}}],["constructor",{"_index":39,"title":{},"body":{"components/AppComponent.html":{},"injectables/AppService.html":{},"injectables/ApplicationQuery.html":{},"injectables/ApplicationStore.html":{},"classes/Changed.html":{},"components/EditorPageComponent.html":{},"components/NavBarComponent.html":{},"components/NgxEditorJSComponent.html":{},"directives/NgxEditorJSDirective.html":{},"injectables/NgxEditorJSEffects.html":{},"modules/NgxEditorJSModule.html":{},"injectables/NgxEditorJSPluginService.html":{},"injectables/NgxEditorJSService.html":{},"classes/NotReady.html":{},"components/PageContainerComponent.html":{},"injectables/PagesQuery.html":{},"injectables/PagesService.html":{},"interfaces/PagesState.html":{},"injectables/PagesStore.html":{},"classes/Ready.html":{},"classes/SaveEnd.html":{},"classes/SaveStart.html":{},"components/SidebarComponent.html":{}}}],["constructor(actions",{"_index":568,"title":{},"body":{"injectables/NgxEditorJSEffects.html":{}}}],["constructor(app",{"_index":40,"title":{},"body":{"components/AppComponent.html":{},"components/NavBarComponent.html":{},"components/SidebarComponent.html":{}}}],["constructor(config",{"_index":708,"title":{},"body":{"injectables/NgxEditorJSService.html":{}}}],["constructor(el",{"_index":539,"title":{},"body":{"directives/NgxEditorJSDirective.html":{}}}],["constructor(fb",{"_index":443,"title":{},"body":{"components/EditorPageComponent.html":{}}}],["constructor(initialplugins",{"_index":650,"title":{},"body":{"injectables/NgxEditorJSPluginService.html":{}}}],["constructor(pagesservice",{"_index":862,"title":{},"body":{"components/PageContainerComponent.html":{}}}],["constructor(payload",{"_index":373,"title":{},"body":{"classes/Changed.html":{},"classes/NotReady.html":{},"classes/Ready.html":{},"classes/SaveEnd.html":{},"classes/SaveStart.html":{}}}],["constructor(private",{"_index":83,"title":{},"body":{"components/AppComponent.html":{},"injectables/AppService.html":{},"components/EditorPageComponent.html":{},"components/NavBarComponent.html":{},"directives/NgxEditorJSDirective.html":{},"injectables/NgxEditorJSEffects.html":{},"components/PageContainerComponent.html":{},"components/SidebarComponent.html":{}}}],["constructor(protected",{"_index":257,"title":{},"body":{"injectables/ApplicationQuery.html":{},"injectables/PagesQuery.html":{}}}],["constructor(public",{"_index":389,"title":{},"body":{"classes/Changed.html":{},"components/NgxEditorJSComponent.html":{},"classes/NotReady.html":{},"injectables/PagesService.html":{},"classes/Ready.html":{},"classes/SaveEnd.html":{},"classes/SaveStart.html":{}}}],["constructor(query",{"_index":232,"title":{},"body":{"injectables/AppService.html":{},"injectables/PagesService.html":{}}}],["constructor(service",{"_index":509,"title":{},"body":{"components/NgxEditorJSComponent.html":{}}}],["constructor(store",{"_index":253,"title":{},"body":{"injectables/ApplicationQuery.html":{},"injectables/PagesQuery.html":{}}}],["contacting",{"_index":1234,"title":{},"body":{"contributing.html":{}}}],["container",{"_index":18,"title":{},"body":{"components/AppComponent.html":{},"components/PageContainerComponent.html":{},"contributing.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-readme.html":{}}}],["container'},{'name",{"_index":146,"title":{},"body":{"components/AppComponent.html":{},"components/EditorPageComponent.html":{},"components/NavBarComponent.html":{},"components/NgxEditorJSComponent.html":{},"components/PageContainerComponent.html":{},"components/SidebarComponent.html":{}}}],["container.component",{"_index":817,"title":{},"body":{"modules/NgxEditorjsDemoModule.html":{}}}],["container.component.html",{"_index":861,"title":{},"body":{"components/PageContainerComponent.html":{}}}],["container.component.scss",{"_index":860,"title":{},"body":{"components/PageContainerComponent.html":{}}}],["container.component.ts",{"_index":859,"title":{},"body":{"components/PageContainerComponent.html":{},"coverage.html":{}}}],["container.component.ts:11",{"_index":864,"title":{},"body":{"components/PageContainerComponent.html":{}}}],["container.component.ts:14",{"_index":866,"title":{},"body":{"components/PageContainerComponent.html":{}}}],["container/page",{"_index":816,"title":{},"body":{"modules/NgxEditorjsDemoModule.html":{},"components/PageContainerComponent.html":{},"coverage.html":{}}}],["containers/editor",{"_index":813,"title":{},"body":{"modules/NgxEditorjsDemoModule.html":{}}}],["containers/editorjs",{"_index":622,"title":{},"body":{"modules/NgxEditorJSModule.html":{}}}],["containers/page",{"_index":815,"title":{},"body":{"modules/NgxEditorjsDemoModule.html":{}}}],["containing",{"_index":351,"title":{},"body":{"interfaces/BlocksMap.html":{},"interfaces/ChangeMap.html":{},"interfaces/EditorMap.html":{},"injectables/NgxEditorJSService.html":{},"interfaces/ReadyMap.html":{}}}],["content",{"_index":93,"title":{},"body":{"components/AppComponent.html":{}}}],["continue",{"_index":1059,"title":{},"body":{"changelog.html":{}}}],["contract",{"_index":1394,"title":{},"body":{"license.html":{}}}],["contributes",{"_index":1137,"title":{},"body":{"contributing.html":{}}}],["contributing",{"_index":1064,"title":{"contributing.html":{}},"body":{"contributing.html":{}}}],["contributions",{"_index":1197,"title":{},"body":{"contributing.html":{}}}],["contributor",{"_index":1202,"title":{},"body":{"contributing.html":{}}}],["contributors",{"_index":1111,"title":{},"body":{"contributing.html":{}}}],["control",{"_index":532,"title":{},"body":{"directives/NgxEditorJSDirective.html":{},"modules/NgxEditorJSModule.html":{},"injectables/NgxEditorJSService.html":{},"todo.html":{}}}],["controlling",{"_index":1483,"title":{},"body":{"additional-documentation/tinynodes-library-docs/ngx-editorjs-readme.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-readme/ngx-editorjs-changelog.html":{}}}],["controls",{"_index":1421,"title":{},"body":{"todo.html":{}}}],["copies",{"_index":1364,"title":{},"body":{"license.html":{}}}],["copy",{"_index":1351,"title":{},"body":{"license.html":{}}}],["copyright",{"_index":1345,"title":{},"body":{"license.html":{}}}],["core",{"_index":176,"title":{},"body":{"modules/AppModule.html":{},"dependencies.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-readme/ngx-editorjs-changelog.html":{}}}],["coreapi",{"_index":1414,"title":{},"body":{"todo.html":{}}}],["corrective",{"_index":1189,"title":{},"body":{"contributing.html":{}}}],["covenant",{"_index":1264,"title":{},"body":{"contributing.html":{}}}],["covenant.org/version/1/4",{"_index":1267,"title":{},"body":{"contributing.html":{}}}],["cover",{"_index":1049,"title":{},"body":{"changelog.html":{}}}],["coverage",{"_index":1268,"title":{"coverage.html":{}},"body":{"coverage.html":{}}}],["create",{"_index":1466,"title":{},"body":{"additional-documentation/tinynodes-library-docs/ngx-editorjs-readme.html":{}}}],["created",{"_index":504,"title":{},"body":{"components/NgxEditorJSComponent.html":{},"directives/NgxEditorJSDirective.html":{},"injectables/NgxEditorJSService.html":{},"injectables/PagesService.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-readme.html":{}}}],["createeditor",{"_index":702,"title":{},"body":{"injectables/NgxEditorJSService.html":{}}}],["createeditor(holder",{"_index":712,"title":{},"body":{"injectables/NgxEditorJSService.html":{}}}],["createngxeditorjsdemotools",{"_index":812,"title":{},"body":{"modules/NgxEditorjsDemoModule.html":{},"coverage.html":{},"miscellaneous/functions.html":{}}}],["creates",{"_index":716,"title":{},"body":{"injectables/NgxEditorJSService.html":{},"injectables/PagesService.html":{},"miscellaneous/functions.html":{}}}],["createtools",{"_index":628,"title":{},"body":{"modules/NgxEditorJSModule.html":{},"coverage.html":{},"miscellaneous/functions.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-readme.html":{}}}],["creating",{"_index":626,"title":{},"body":{"modules/NgxEditorJSModule.html":{},"injectables/NgxEditorJSService.html":{},"contributing.html":{},"miscellaneous/functions.html":{}}}],["creation",{"_index":405,"title":{},"body":{"interfaces/EditorJSConfig.html":{},"interfaces/NgxEditorJSConfig.html":{}}}],["criticism",{"_index":1149,"title":{},"body":{"contributing.html":{}}}],["current",{"_index":698,"title":{},"body":{"injectables/NgxEditorJSService.html":{},"changelog.html":{}}}],["currently",{"_index":1037,"title":{},"body":{"changelog.html":{}}}],["cursor",{"_index":113,"title":{},"body":{"components/AppComponent.html":{},"components/NavBarComponent.html":{}}}],["custom",{"_index":323,"title":{},"body":{"interfaces/Block.html":{},"interfaces/Header.html":{},"interfaces/HeaderBlock.html":{},"interfaces/Image.html":{},"interfaces/ImageBlock.html":{},"interfaces/List.html":{},"interfaces/ListBlock.html":{},"interfaces/Paragraph.html":{},"interfaces/ParagraphBlock.html":{},"miscellaneous/typealiases.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-readme.html":{}}}],["custommodule",{"_index":1473,"title":{},"body":{"additional-documentation/tinynodes-library-docs/ngx-editorjs-readme.html":{}}}],["cy.get('h1",{"_index":1438,"title":{},"body":{"miscellaneous/variables.html":{}}}],["cycle",{"_index":1479,"title":{},"body":{"additional-documentation/tinynodes-library-docs/ngx-editorjs-readme.html":{}}}],["damages",{"_index":1391,"title":{},"body":{"license.html":{}}}],["darkgray",{"_index":524,"title":{},"body":{"components/NgxEditorJSComponent.html":{}}}],["data",{"_index":314,"title":{},"body":{"interfaces/Block.html":{},"classes/Changed.html":{},"interfaces/EditorJSConfig.html":{},"interfaces/Header.html":{},"interfaces/HeaderBlock.html":{},"interfaces/Image.html":{},"interfaces/ImageBlock.html":{},"interfaces/List.html":{},"interfaces/ListBlock.html":{},"interfaces/NgxEditorJSConfig.html":{},"injectables/NgxEditorJSEffects.html":{},"modules/NgxEditorJSModule.html":{},"classes/NotReady.html":{},"interfaces/Paragraph.html":{},"interfaces/ParagraphBlock.html":{},"classes/Ready.html":{},"classes/SaveEnd.html":{},"classes/SaveStart.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-readme.html":{}}}],["date.now",{"_index":581,"title":{},"body":{"injectables/NgxEditorJSEffects.html":{},"injectables/NgxEditorJSService.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-readme.html":{}}}],["datorama/akita",{"_index":196,"title":{},"body":{"modules/AppModule.html":{},"injectables/ApplicationQuery.html":{},"injectables/ApplicationStore.html":{},"interfaces/Page.html":{},"interfaces/PageBlock.html":{},"injectables/PagesQuery.html":{},"injectables/PagesService.html":{},"interfaces/PagesState.html":{},"injectables/PagesStore.html":{},"interfaces/Tag.html":{},"dependencies.html":{}}}],["deal",{"_index":1354,"title":{},"body":{"license.html":{}}}],["dealings",{"_index":1398,"title":{},"body":{"license.html":{}}}],["declarations",{"_index":159,"title":{},"body":{"modules/AppModule.html":{},"modules/ApplicationDataModule.html":{},"modules/NgxEditorJSModule.html":{},"modules/NgxEditorJSPluginServiceModule.html":{},"modules/NgxEditorjsDemoModule.html":{},"modules/NgxEditorjsNgrxModule.html":{},"modules/NgxEditorjsPluginsModule.html":{},"modules/PageStoreModule.html":{},"modules/PluginCodeModule.html":{},"modules/PluginHeaderModule.html":{},"modules/PluginImageModule.html":{},"modules/PluginLinkModule.html":{},"modules/PluginListModule.html":{},"modules/PluginMarkerModule.html":{},"modules/PluginParagraphModule.html":{},"modules/PluginSimpleImageModule.html":{},"overview.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-readme.html":{}}}],["decoration",{"_index":99,"title":{},"body":{"components/AppComponent.html":{},"components/NavBarComponent.html":{}}}],["decorators",{"_index":66,"title":{},"body":{"components/AppComponent.html":{},"components/NgxEditorJSComponent.html":{},"injectables/NgxEditorJSEffects.html":{},"components/SidebarComponent.html":{}}}],["deem",{"_index":1204,"title":{},"body":{"contributing.html":{}}}],["deemed",{"_index":1240,"title":{},"body":{"contributing.html":{}}}],["default",{"_index":50,"title":{},"body":{"components/AppComponent.html":{},"interfaces/Block.html":{},"classes/Changed.html":{},"interfaces/EditorJSConfig.html":{},"components/EditorPageComponent.html":{},"interfaces/Header.html":{},"interfaces/HeaderBlock.html":{},"interfaces/Image.html":{},"interfaces/ImageBlock.html":{},"interfaces/List.html":{},"interfaces/ListBlock.html":{},"components/NavBarComponent.html":{},"components/NgxEditorJSComponent.html":{},"interfaces/NgxEditorJSConfig.html":{},"directives/NgxEditorJSDirective.html":{},"injectables/NgxEditorJSEffects.html":{},"modules/NgxEditorJSModule.html":{},"injectables/NgxEditorJSPluginService.html":{},"injectables/NgxEditorJSService.html":{},"classes/NotReady.html":{},"interfaces/Paragraph.html":{},"interfaces/ParagraphBlock.html":{},"modules/PluginCodeModule.html":{},"modules/PluginHeaderModule.html":{},"modules/PluginImageModule.html":{},"modules/PluginLinkModule.html":{},"modules/PluginListModule.html":{},"modules/PluginMarkerModule.html":{},"modules/PluginParagraphModule.html":{},"classes/Ready.html":{},"classes/SaveEnd.html":{},"classes/SaveStart.html":{},"components/SidebarComponent.html":{},"miscellaneous/variables.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-readme.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-readme/ngx-editorjs-changelog.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-plugins-readme.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-plugins-readme/ngx-editorjs-plugins-changelog.html":{}}}],["default_config",{"_index":614,"title":{},"body":{"modules/NgxEditorJSModule.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["default_config.editorjs.autofocus",{"_index":636,"title":{},"body":{"modules/NgxEditorJSModule.html":{}}}],["default_config.editorjs.holder",{"_index":638,"title":{},"body":{"modules/NgxEditorJSModule.html":{}}}],["default_config.editorjs.initialblock",{"_index":640,"title":{},"body":{"modules/NgxEditorJSModule.html":{}}}],["defaults",{"_index":613,"title":{},"body":{"modules/NgxEditorJSModule.html":{},"injectables/NgxEditorJSService.html":{}}}],["define",{"_index":423,"title":{},"body":{"interfaces/EditorJSConfig.html":{},"interfaces/NgxEditorJSConfig.html":{}}}],["defined",{"_index":42,"title":{},"body":{"components/AppComponent.html":{},"injectables/AppService.html":{},"injectables/ApplicationQuery.html":{},"injectables/ApplicationStore.html":{},"interfaces/BasePlugin.html":{},"interfaces/Block.html":{},"interfaces/BlocksMap.html":{},"interfaces/ChangeMap.html":{},"classes/Changed.html":{},"interfaces/EditorMap.html":{},"components/EditorPageComponent.html":{},"components/NavBarComponent.html":{},"components/NgxEditorJSComponent.html":{},"directives/NgxEditorJSDirective.html":{},"injectables/NgxEditorJSEffects.html":{},"modules/NgxEditorJSModule.html":{},"injectables/NgxEditorJSPluginService.html":{},"injectables/NgxEditorJSService.html":{},"classes/NotReady.html":{},"components/PageContainerComponent.html":{},"injectables/PagesQuery.html":{},"injectables/PagesService.html":{},"injectables/PagesStore.html":{},"injectables/PluginCode.html":{},"interfaces/PluginConfig.html":{},"injectables/PluginHeader.html":{},"injectables/PluginImage.html":{},"injectables/PluginLink.html":{},"injectables/PluginList.html":{},"injectables/PluginMarker.html":{},"injectables/PluginParagraph.html":{},"injectables/PluginSimpleImage.html":{},"classes/Ready.html":{},"interfaces/ReadyMap.html":{},"classes/SaveEnd.html":{},"classes/SaveStart.html":{},"components/SidebarComponent.html":{},"interfaces/ToolSettingsMap.html":{},"contributing.html":{},"miscellaneous/variables.html":{}}}],["defines",{"_index":280,"title":{},"body":{"interfaces/BasePlugin.html":{},"interfaces/PluginConfig.html":{},"interfaces/ToolSettingsMap.html":{}}}],["deigned",{"_index":1456,"title":{},"body":{"additional-documentation/tinynodes-library-docs/ngx-editorjs-readme.html":{}}}],["delayed",{"_index":1039,"title":{},"body":{"changelog.html":{}}}],["delete",{"_index":682,"title":{},"body":{"injectables/NgxEditorJSPluginService.html":{},"injectables/NgxEditorJSService.html":{},"injectables/PagesService.html":{}}}],["delete(pageid",{"_index":896,"title":{},"body":{"injectables/PagesService.html":{}}}],["demo",{"_index":89,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"components/EditorPageComponent.html":{},"components/PageContainerComponent.html":{},"components/SidebarComponent.html":{},"changelog.html":{},"miscellaneous/functions.html":{},"index.html":{},"todo.html":{},"miscellaneous/variables.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-readme.html":{}}}],["demo.module.ts",{"_index":808,"title":{},"body":{"modules/NgxEditorjsDemoModule.html":{}}}],["demo.routes",{"_index":819,"title":{},"body":{"modules/NgxEditorjsDemoModule.html":{}}}],["demo.routes.ts",{"_index":1287,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["demo/pages",{"_index":1439,"title":{},"body":{"miscellaneous/variables.html":{}}}],["demo/pages/editor",{"_index":1440,"title":{},"body":{"miscellaneous/variables.html":{}}}],["demo/pages/editor/:id",{"_index":1441,"title":{},"body":{"miscellaneous/variables.html":{}}}],["demo/src/lib/config/index.ts",{"_index":1286,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["demo/src/lib/containers/editor",{"_index":433,"title":{},"body":{"components/EditorPageComponent.html":{},"coverage.html":{}}}],["demo/src/lib/containers/page",{"_index":858,"title":{},"body":{"components/PageContainerComponent.html":{},"coverage.html":{}}}],["demo/src/lib/ngx",{"_index":807,"title":{},"body":{"modules/NgxEditorjsDemoModule.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["demo/src/lib/store/pages/pages.models.ts",{"_index":855,"title":{},"body":{"interfaces/Page.html":{},"interfaces/PageBlock.html":{},"interfaces/Tag.html":{},"coverage.html":{}}}],["demo/src/lib/store/pages/pages.module.ts",{"_index":876,"title":{},"body":{"modules/PageStoreModule.html":{}}}],["demo/src/lib/store/pages/pages.query.ts",{"_index":880,"title":{},"body":{"injectables/PagesQuery.html":{},"coverage.html":{}}}],["demo/src/lib/store/pages/pages.query.ts:7",{"_index":882,"title":{},"body":{"injectables/PagesQuery.html":{}}}],["demo/src/lib/store/pages/pages.service.ts",{"_index":885,"title":{},"body":{"injectables/PagesService.html":{},"coverage.html":{}}}],["demo/src/lib/store/pages/pages.service.ts:15",{"_index":890,"title":{},"body":{"injectables/PagesService.html":{}}}],["demo/src/lib/store/pages/pages.service.ts:17",{"_index":907,"title":{},"body":{"injectables/PagesService.html":{}}}],["demo/src/lib/store/pages/pages.service.ts:24",{"_index":908,"title":{},"body":{"injectables/PagesService.html":{}}}],["demo/src/lib/store/pages/pages.service.ts:32",{"_index":892,"title":{},"body":{"injectables/PagesService.html":{}}}],["demo/src/lib/store/pages/pages.service.ts:47",{"_index":905,"title":{},"body":{"injectables/PagesService.html":{}}}],["demo/src/lib/store/pages/pages.service.ts:56",{"_index":897,"title":{},"body":{"injectables/PagesService.html":{}}}],["demo/src/lib/store/pages/pages.service.ts:60",{"_index":903,"title":{},"body":{"injectables/PagesService.html":{}}}],["demo/src/lib/store/pages/pages.service.ts:64",{"_index":894,"title":{},"body":{"injectables/PagesService.html":{}}}],["demo/src/lib/store/pages/pages.service.ts:70",{"_index":901,"title":{},"body":{"injectables/PagesService.html":{}}}],["demo/src/lib/store/pages/pages.store.ts",{"_index":924,"title":{},"body":{"interfaces/PagesState.html":{},"injectables/PagesStore.html":{},"coverage.html":{}}}],["demo/src/lib/store/pages/pages.store.ts:9",{"_index":927,"title":{},"body":{"injectables/PagesStore.html":{}}}],["demo](https://tinynodes",{"_index":217,"title":{},"body":{"modules/AppModule.html":{}}}],["demos",{"_index":53,"title":{},"body":{"components/AppComponent.html":{},"index.html":{}}}],["dependencies",{"_index":158,"title":{"dependencies.html":{}},"body":{"modules/AppModule.html":{},"modules/ApplicationDataModule.html":{},"modules/NgxEditorJSModule.html":{},"modules/NgxEditorJSPluginServiceModule.html":{},"modules/NgxEditorjsDemoModule.html":{},"modules/NgxEditorjsNgrxModule.html":{},"modules/NgxEditorjsPluginsModule.html":{},"modules/PageStoreModule.html":{},"modules/PluginCodeModule.html":{},"modules/PluginHeaderModule.html":{},"modules/PluginImageModule.html":{},"modules/PluginLinkModule.html":{},"modules/PluginListModule.html":{},"modules/PluginMarkerModule.html":{},"modules/PluginParagraphModule.html":{},"modules/PluginSimpleImageModule.html":{},"contributing.html":{},"dependencies.html":{},"overview.html":{}}}],["dependency",{"_index":1420,"title":{},"body":{"todo.html":{}}}],["description",{"_index":13,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"interfaces/BasePlugin.html":{},"interfaces/Block.html":{},"interfaces/BlocksMap.html":{},"interfaces/ChangeMap.html":{},"interfaces/EditorJSConfig.html":{},"interfaces/EditorMap.html":{},"interfaces/Header.html":{},"interfaces/HeaderBlock.html":{},"interfaces/Image.html":{},"interfaces/ImageBlock.html":{},"interfaces/List.html":{},"interfaces/ListBlock.html":{},"components/NgxEditorJSComponent.html":{},"interfaces/NgxEditorJSConfig.html":{},"directives/NgxEditorJSDirective.html":{},"modules/NgxEditorJSModule.html":{},"injectables/NgxEditorJSPluginService.html":{},"modules/NgxEditorJSPluginServiceModule.html":{},"injectables/NgxEditorJSService.html":{},"modules/NgxEditorjsPluginsModule.html":{},"injectables/PagesService.html":{},"interfaces/Paragraph.html":{},"interfaces/ParagraphBlock.html":{},"injectables/PluginCode.html":{},"modules/PluginCodeModule.html":{},"interfaces/PluginConfig.html":{},"injectables/PluginHeader.html":{},"modules/PluginHeaderModule.html":{},"injectables/PluginImage.html":{},"modules/PluginImageModule.html":{},"injectables/PluginLink.html":{},"modules/PluginLinkModule.html":{},"injectables/PluginList.html":{},"modules/PluginListModule.html":{},"injectables/PluginMarker.html":{},"modules/PluginMarkerModule.html":{},"injectables/PluginParagraph.html":{},"modules/PluginParagraphModule.html":{},"injectables/PluginSimpleImage.html":{},"modules/PluginSimpleImageModule.html":{},"interfaces/ReadyMap.html":{},"interfaces/ToolSettingsMap.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-readme.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-plugins-readme.html":{}}}],["destroy",{"_index":703,"title":{},"body":{"injectables/NgxEditorJSService.html":{}}}],["destroy(holder",{"_index":727,"title":{},"body":{"injectables/NgxEditorJSService.html":{}}}],["destroyed",{"_index":58,"title":{},"body":{"components/AppComponent.html":{}}}],["destroys",{"_index":732,"title":{},"body":{"injectables/NgxEditorJSService.html":{}}}],["details",{"_index":743,"title":{},"body":{"injectables/NgxEditorJSService.html":{},"modules/PluginCodeModule.html":{},"modules/PluginHeaderModule.html":{},"modules/PluginImageModule.html":{},"modules/PluginLinkModule.html":{},"modules/PluginListModule.html":{},"modules/PluginMarkerModule.html":{},"modules/PluginParagraphModule.html":{},"modules/PluginSimpleImageModule.html":{},"contributing.html":{},"additional-documentation/tinynodes-library-docs.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-readme.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-plugins-readme/ngx-editorjs-plugins-changelog.html":{}}}],["determined",{"_index":1259,"title":{},"body":{"contributing.html":{}}}],["developed",{"_index":1492,"title":{},"body":{"additional-documentation/tinynodes-library-docs/ngx-editorjs-readme.html":{}}}],["developers",{"_index":1102,"title":{},"body":{"contributing.html":{}}}],["development",{"_index":1336,"title":{},"body":{"index.html":{}}}],["devlog",{"_index":1035,"title":{},"body":{"changelog.html":{}}}],["differing",{"_index":1143,"title":{},"body":{"contributing.html":{}}}],["directive",{"_index":134,"title":{"directives/NgxEditorJSDirective.html":{}},"body":{"components/AppComponent.html":{},"components/EditorPageComponent.html":{},"components/NavBarComponent.html":{},"components/NgxEditorJSComponent.html":{},"directives/NgxEditorJSDirective.html":{},"components/PageContainerComponent.html":{},"components/SidebarComponent.html":{},"coverage.html":{},"index.html":{},"overview.html":{},"todo.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-readme.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-readme/ngx-editorjs-changelog.html":{}}}],["directive/component",{"_index":1495,"title":{},"body":{"additional-documentation/tinynodes-library-docs/ngx-editorjs-readme.html":{}}}],["directives",{"_index":148,"title":{},"body":{"components/AppComponent.html":{},"components/EditorPageComponent.html":{},"components/NavBarComponent.html":{},"components/NgxEditorJSComponent.html":{},"directives/NgxEditorJSDirective.html":{},"components/PageContainerComponent.html":{},"components/SidebarComponent.html":{}}}],["directives/ngx",{"_index":517,"title":{},"body":{"components/NgxEditorJSComponent.html":{},"modules/NgxEditorJSModule.html":{}}}],["disability",{"_index":1123,"title":{},"body":{"contributing.html":{}}}],["disable",{"_index":726,"title":{},"body":{"injectables/NgxEditorJSService.html":{}}}],["discuss",{"_index":1067,"title":{},"body":{"contributing.html":{}}}],["dispatch",{"_index":592,"title":{},"body":{"injectables/NgxEditorJSEffects.html":{}}}],["display",{"_index":116,"title":{},"body":{"components/AppComponent.html":{},"components/NavBarComponent.html":{}}}],["distribute",{"_index":1360,"title":{},"body":{"license.html":{}}}],["doc",{"_index":1411,"title":{},"body":{"todo.html":{}}}],["docs",{"_index":496,"title":{"additional-documentation/tinynodes-library-docs.html":{}},"body":{"components/NavBarComponent.html":{},"injectables/NgxEditorJSService.html":{},"changelog.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-readme.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-readme/ngx-editorjs-changelog.html":{}}}],["documentation",{"_index":1269,"title":{},"body":{"coverage.html":{},"index.html":{},"license.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-readme.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-readme/ngx-editorjs-changelog.html":{}}}],["documented",{"_index":1499,"title":{},"body":{"additional-documentation/tinynodes-library-docs/ngx-editorjs-readme/ngx-editorjs-changelog.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-plugins-readme/ngx-editorjs-plugins-changelog.html":{}}}],["doing",{"_index":1083,"title":{},"body":{"contributing.html":{}}}],["dom",{"_index":7,"title":{},"body":{"components/AppComponent.html":{},"components/EditorPageComponent.html":{},"components/NavBarComponent.html":{},"components/NgxEditorJSComponent.html":{},"components/PageContainerComponent.html":{},"components/SidebarComponent.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-readme/ngx-editorjs-changelog.html":{}}}],["download",{"_index":1444,"title":{},"body":{"additional-documentation/tinynodes-library-docs/ngx-editorjs-readme.html":{}}}],["due",{"_index":1040,"title":{},"body":{"changelog.html":{}}}],["dynamic",{"_index":1310,"title":{},"body":{"dependencies.html":{}}}],["e",{"_index":1214,"title":{},"body":{"contributing.html":{}}}],["e.g",{"_index":1416,"title":{},"body":{"todo.html":{}}}],["e2e/src/support/app.po.ts",{"_index":1272,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["each",{"_index":629,"title":{},"body":{"modules/NgxEditorJSModule.html":{},"modules/NgxEditorjsPluginsModule.html":{},"miscellaneous/variables.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-readme.html":{}}}],["easier",{"_index":1484,"title":{},"body":{"additional-documentation/tinynodes-library-docs/ngx-editorjs-readme.html":{}}}],["easily",{"_index":837,"title":{},"body":{"modules/NgxEditorjsPluginsModule.html":{}}}],["edit",{"_index":1192,"title":{},"body":{"contributing.html":{}}}],["editor",{"_index":91,"title":{},"body":{"components/AppComponent.html":{},"components/EditorPageComponent.html":{},"components/NavBarComponent.html":{},"components/NgxEditorJSComponent.html":{},"directives/NgxEditorJSDirective.html":{},"modules/NgxEditorJSModule.html":{},"injectables/NgxEditorJSPluginService.html":{},"injectables/NgxEditorJSService.html":{},"components/PageContainerComponent.html":{},"injectables/PluginSimpleImage.html":{},"components/SidebarComponent.html":{},"miscellaneous/functions.html":{},"todo.html":{},"miscellaneous/variables.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-readme.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-readme/ngx-editorjs-changelog.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-plugins-readme.html":{}}}],["editor's",{"_index":415,"title":{},"body":{"interfaces/EditorJSConfig.html":{},"interfaces/NgxEditorJSConfig.html":{}}}],["editorconfig",{"_index":759,"title":{},"body":{"injectables/NgxEditorJSService.html":{}}}],["editorjs",{"_index":203,"title":{"additional-documentation/tinynodes-library-docs/ngx-editorjs-readme.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-readme/ngx-editorjs-changelog.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-plugins-readme.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-plugins-readme/ngx-editorjs-plugins-changelog.html":{}},"body":{"modules/AppModule.html":{},"interfaces/BasePlugin.html":{},"interfaces/Block.html":{},"interfaces/BlocksMap.html":{},"interfaces/ChangeMap.html":{},"classes/Changed.html":{},"interfaces/EditorJSConfig.html":{},"interfaces/EditorMap.html":{},"components/EditorPageComponent.html":{},"interfaces/Header.html":{},"interfaces/HeaderBlock.html":{},"interfaces/Image.html":{},"interfaces/ImageBlock.html":{},"interfaces/List.html":{},"interfaces/ListBlock.html":{},"components/NgxEditorJSComponent.html":{},"interfaces/NgxEditorJSConfig.html":{},"directives/NgxEditorJSDirective.html":{},"injectables/NgxEditorJSEffects.html":{},"modules/NgxEditorJSModule.html":{},"injectables/NgxEditorJSPluginService.html":{},"modules/NgxEditorJSPluginServiceModule.html":{},"injectables/NgxEditorJSService.html":{},"modules/NgxEditorjsDemoModule.html":{},"modules/NgxEditorjsNgrxModule.html":{},"modules/NgxEditorjsPluginsModule.html":{},"classes/NotReady.html":{},"interfaces/Page.html":{},"interfaces/PageBlock.html":{},"components/PageContainerComponent.html":{},"modules/PageStoreModule.html":{},"injectables/PagesQuery.html":{},"injectables/PagesService.html":{},"interfaces/PagesState.html":{},"injectables/PagesStore.html":{},"interfaces/Paragraph.html":{},"interfaces/ParagraphBlock.html":{},"injectables/PluginCode.html":{},"modules/PluginCodeModule.html":{},"interfaces/PluginConfig.html":{},"injectables/PluginHeader.html":{},"modules/PluginHeaderModule.html":{},"injectables/PluginImage.html":{},"modules/PluginImageModule.html":{},"injectables/PluginLink.html":{},"modules/PluginLinkModule.html":{},"injectables/PluginList.html":{},"modules/PluginListModule.html":{},"injectables/PluginMarker.html":{},"modules/PluginMarkerModule.html":{},"injectables/PluginParagraph.html":{},"modules/PluginParagraphModule.html":{},"injectables/PluginSimpleImage.html":{},"modules/PluginSimpleImageModule.html":{},"classes/Ready.html":{},"interfaces/ReadyMap.html":{},"classes/SaveEnd.html":{},"classes/SaveStart.html":{},"components/SidebarComponent.html":{},"interfaces/Tag.html":{},"interfaces/ToolSettingsMap.html":{},"changelog.html":{},"coverage.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"index.html":{},"todo.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-readme.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-readme/ngx-editorjs-changelog.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-plugins-readme.html":{}}}],["editorjs'},{'name",{"_index":144,"title":{},"body":{"components/AppComponent.html":{},"components/EditorPageComponent.html":{},"components/NavBarComponent.html":{},"components/NgxEditorJSComponent.html":{},"components/PageContainerComponent.html":{},"components/SidebarComponent.html":{}}}],["editorjs.actions",{"_index":590,"title":{},"body":{"injectables/NgxEditorJSEffects.html":{}}}],["editorjs.actions.ts",{"_index":370,"title":{},"body":{"classes/Changed.html":{},"classes/NotReady.html":{},"classes/Ready.html":{},"classes/SaveEnd.html":{},"classes/SaveStart.html":{},"coverage.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/typealiases.html":{}}}],["editorjs.actions.ts:13",{"_index":1010,"title":{},"body":{"classes/SaveStart.html":{}}}],["editorjs.actions.ts:14",{"_index":1011,"title":{},"body":{"classes/SaveStart.html":{}}}],["editorjs.actions.ts:18",{"_index":1008,"title":{},"body":{"classes/SaveEnd.html":{}}}],["editorjs.actions.ts:19",{"_index":1009,"title":{},"body":{"classes/SaveEnd.html":{}}}],["editorjs.actions.ts:23",{"_index":853,"title":{},"body":{"classes/NotReady.html":{}}}],["editorjs.actions.ts:24",{"_index":854,"title":{},"body":{"classes/NotReady.html":{}}}],["editorjs.actions.ts:28",{"_index":1005,"title":{},"body":{"classes/Ready.html":{}}}],["editorjs.actions.ts:29",{"_index":1006,"title":{},"body":{"classes/Ready.html":{}}}],["editorjs.actions.ts:33",{"_index":375,"title":{},"body":{"classes/Changed.html":{}}}],["editorjs.actions.ts:34",{"_index":376,"title":{},"body":{"classes/Changed.html":{}}}],["editorjs.component.html",{"_index":507,"title":{},"body":{"components/NgxEditorJSComponent.html":{}}}],["editorjs.component.scss",{"_index":506,"title":{},"body":{"components/NgxEditorJSComponent.html":{}}}],["editorjs.directive",{"_index":518,"title":{},"body":{"components/NgxEditorJSComponent.html":{},"modules/NgxEditorJSModule.html":{}}}],["editorjs.directive.ts",{"_index":529,"title":{},"body":{"directives/NgxEditorJSDirective.html":{},"coverage.html":{}}}],["editorjs.directive.ts:24",{"_index":541,"title":{},"body":{"directives/NgxEditorJSDirective.html":{}}}],["editorjs.directive.ts:26",{"_index":551,"title":{},"body":{"directives/NgxEditorJSDirective.html":{}}}],["editorjs.directive.ts:31",{"_index":553,"title":{},"body":{"directives/NgxEditorJSDirective.html":{}}}],["editorjs.directive.ts:35",{"_index":555,"title":{},"body":{"directives/NgxEditorJSDirective.html":{}}}],["editorjs.directive.ts:39",{"_index":548,"title":{},"body":{"directives/NgxEditorJSDirective.html":{}}}],["editorjs.directive.ts:45",{"_index":545,"title":{},"body":{"directives/NgxEditorJSDirective.html":{}}}],["editorjs.directive.ts:49",{"_index":550,"title":{},"body":{"directives/NgxEditorJSDirective.html":{}}}],["editorjs.effects.ts",{"_index":567,"title":{},"body":{"injectables/NgxEditorJSEffects.html":{},"coverage.html":{}}}],["editorjs.effects.ts:10",{"_index":570,"title":{},"body":{"injectables/NgxEditorJSEffects.html":{}}}],["editorjs.effects.ts:14",{"_index":585,"title":{},"body":{"injectables/NgxEditorJSEffects.html":{}}}],["editorjs.module.ts",{"_index":603,"title":{},"body":{"modules/NgxEditorJSModule.html":{},"coverage.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["editorjs.module.ts:66",{"_index":610,"title":{},"body":{"modules/NgxEditorJSModule.html":{}}}],["editorjs.version",{"_index":583,"title":{},"body":{"injectables/NgxEditorJSEffects.html":{},"injectables/NgxEditorJSService.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-readme.html":{}}}],["editorjs/code",{"_index":932,"title":{},"body":{"injectables/PluginCode.html":{}}}],["editorjs/editorjs",{"_index":291,"title":{},"body":{"interfaces/BasePlugin.html":{},"interfaces/BlocksMap.html":{},"interfaces/ChangeMap.html":{},"classes/Changed.html":{},"interfaces/EditorJSConfig.html":{},"interfaces/EditorMap.html":{},"interfaces/NgxEditorJSConfig.html":{},"directives/NgxEditorJSDirective.html":{},"injectables/NgxEditorJSEffects.html":{},"injectables/NgxEditorJSService.html":{},"classes/NotReady.html":{},"injectables/PluginCode.html":{},"interfaces/PluginConfig.html":{},"injectables/PluginHeader.html":{},"injectables/PluginImage.html":{},"injectables/PluginLink.html":{},"injectables/PluginList.html":{},"injectables/PluginMarker.html":{},"injectables/PluginParagraph.html":{},"injectables/PluginSimpleImage.html":{},"classes/Ready.html":{},"interfaces/ReadyMap.html":{},"classes/SaveEnd.html":{},"classes/SaveStart.html":{},"interfaces/ToolSettingsMap.html":{},"dependencies.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-readme.html":{}}}],["editorjs/header",{"_index":943,"title":{},"body":{"injectables/PluginHeader.html":{},"dependencies.html":{}}}],["editorjs/image",{"_index":952,"title":{},"body":{"injectables/PluginImage.html":{}}}],["editorjs/link",{"_index":961,"title":{},"body":{"injectables/PluginLink.html":{}}}],["editorjs/list",{"_index":969,"title":{},"body":{"injectables/PluginList.html":{},"dependencies.html":{}}}],["editorjs/marker",{"_index":980,"title":{},"body":{"injectables/PluginMarker.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-readme.html":{}}}],["editorjs/paragraph",{"_index":989,"title":{},"body":{"injectables/PluginParagraph.html":{},"dependencies.html":{}}}],["editorjs/simple",{"_index":1001,"title":{},"body":{"injectables/PluginSimpleImage.html":{}}}],["editorjs/src/lib/containers/editorjs",{"_index":499,"title":{},"body":{"components/NgxEditorJSComponent.html":{},"coverage.html":{}}}],["editorjs/src/lib/directives/ngx",{"_index":528,"title":{},"body":{"directives/NgxEditorJSDirective.html":{},"coverage.html":{}}}],["editorjs/src/lib/ngx",{"_index":602,"title":{},"body":{"modules/NgxEditorJSModule.html":{},"coverage.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["editorjs/src/lib/services/editorjs.service.ts",{"_index":695,"title":{},"body":{"injectables/NgxEditorJSService.html":{},"coverage.html":{}}}],["editorjs/src/lib/services/editorjs.service.ts:103",{"_index":738,"title":{},"body":{"injectables/NgxEditorJSService.html":{}}}],["editorjs/src/lib/services/editorjs.service.ts:115",{"_index":734,"title":{},"body":{"injectables/NgxEditorJSService.html":{}}}],["editorjs/src/lib/services/editorjs.service.ts:127",{"_index":749,"title":{},"body":{"injectables/NgxEditorJSService.html":{}}}],["editorjs/src/lib/services/editorjs.service.ts:139",{"_index":745,"title":{},"body":{"injectables/NgxEditorJSService.html":{}}}],["editorjs/src/lib/services/editorjs.service.ts:152",{"_index":754,"title":{},"body":{"injectables/NgxEditorJSService.html":{}}}],["editorjs/src/lib/services/editorjs.service.ts:172",{"_index":751,"title":{},"body":{"injectables/NgxEditorJSService.html":{}}}],["editorjs/src/lib/services/editorjs.service.ts:189",{"_index":728,"title":{},"body":{"injectables/NgxEditorJSService.html":{}}}],["editorjs/src/lib/services/editorjs.service.ts:24",{"_index":757,"title":{},"body":{"injectables/NgxEditorJSService.html":{}}}],["editorjs/src/lib/services/editorjs.service.ts:29",{"_index":755,"title":{},"body":{"injectables/NgxEditorJSService.html":{}}}],["editorjs/src/lib/services/editorjs.service.ts:34",{"_index":758,"title":{},"body":{"injectables/NgxEditorJSService.html":{}}}],["editorjs/src/lib/services/editorjs.service.ts:39",{"_index":711,"title":{},"body":{"injectables/NgxEditorJSService.html":{}}}],["editorjs/src/lib/services/editorjs.service.ts:55",{"_index":715,"title":{},"body":{"injectables/NgxEditorJSService.html":{}}}],["editorjs/src/lib/types/blocks.ts",{"_index":312,"title":{},"body":{"interfaces/Block.html":{},"interfaces/Header.html":{},"interfaces/HeaderBlock.html":{},"interfaces/Image.html":{},"interfaces/ImageBlock.html":{},"interfaces/List.html":{},"interfaces/ListBlock.html":{},"interfaces/Paragraph.html":{},"interfaces/ParagraphBlock.html":{},"coverage.html":{},"miscellaneous/typealiases.html":{}}}],["editorjs/src/lib/types/blocks.ts:13",{"_index":316,"title":{},"body":{"interfaces/Block.html":{}}}],["editorjs/src/lib/types/config.ts",{"_index":396,"title":{},"body":{"interfaces/EditorJSConfig.html":{},"interfaces/NgxEditorJSConfig.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["editorjs/src/lib/types/maps.ts",{"_index":350,"title":{},"body":{"interfaces/BlocksMap.html":{},"interfaces/ChangeMap.html":{},"interfaces/EditorMap.html":{},"interfaces/ReadyMap.html":{},"coverage.html":{}}}],["editorjs/src/lib/types/maps.ts:15",{"_index":354,"title":{},"body":{"interfaces/BlocksMap.html":{}}}],["editorjs/src/lib/types/maps.ts:22",{"_index":1007,"title":{},"body":{"interfaces/ReadyMap.html":{}}}],["editorjs/src/lib/types/maps.ts:29",{"_index":366,"title":{},"body":{"interfaces/ChangeMap.html":{}}}],["editorjs/src/lib/types/maps.ts:8",{"_index":432,"title":{},"body":{"interfaces/EditorMap.html":{}}}],["editorjs](http://editorjs.io",{"_index":631,"title":{},"body":{"modules/NgxEditorJSModule.html":{}}}],["editorjsactiontypes",{"_index":381,"title":{},"body":{"classes/Changed.html":{},"injectables/NgxEditorJSEffects.html":{},"classes/NotReady.html":{},"classes/Ready.html":{},"classes/SaveEnd.html":{},"classes/SaveStart.html":{},"miscellaneous/enumerations.html":{}}}],["editorjsactiontypes.changed",{"_index":377,"title":{},"body":{"classes/Changed.html":{},"classes/NotReady.html":{},"classes/Ready.html":{},"classes/SaveEnd.html":{},"classes/SaveStart.html":{}}}],["editorjsactiontypes.notready",{"_index":392,"title":{},"body":{"classes/Changed.html":{},"classes/NotReady.html":{},"classes/Ready.html":{},"classes/SaveEnd.html":{},"classes/SaveStart.html":{}}}],["editorjsactiontypes.ready",{"_index":393,"title":{},"body":{"classes/Changed.html":{},"classes/NotReady.html":{},"classes/Ready.html":{},"classes/SaveEnd.html":{},"classes/SaveStart.html":{}}}],["editorjsactiontypes.saveend",{"_index":391,"title":{},"body":{"classes/Changed.html":{},"classes/NotReady.html":{},"classes/Ready.html":{},"classes/SaveEnd.html":{},"classes/SaveStart.html":{}}}],["editorjsactiontypes.savestart",{"_index":388,"title":{},"body":{"classes/Changed.html":{},"classes/NotReady.html":{},"classes/Ready.html":{},"classes/SaveEnd.html":{},"classes/SaveStart.html":{}}}],["editorjsconfig",{"_index":395,"title":{"interfaces/EditorJSConfig.html":{}},"body":{"interfaces/EditorJSConfig.html":{},"interfaces/NgxEditorJSConfig.html":{},"coverage.html":{}}}],["editorjsplugin",{"_index":1527,"title":{},"body":{"additional-documentation/tinynodes-library-docs/ngx-editorjs-readme/ngx-editorjs-changelog.html":{}}}],["editormap",{"_index":357,"title":{"interfaces/EditorMap.html":{}},"body":{"interfaces/BlocksMap.html":{},"interfaces/ChangeMap.html":{},"interfaces/EditorMap.html":{},"injectables/NgxEditorJSService.html":{},"interfaces/ReadyMap.html":{},"coverage.html":{}}}],["editorpagecomponent",{"_index":138,"title":{"components/EditorPageComponent.html":{}},"body":{"components/AppComponent.html":{},"components/EditorPageComponent.html":{},"components/NavBarComponent.html":{},"components/NgxEditorJSComponent.html":{},"modules/NgxEditorjsDemoModule.html":{},"components/PageContainerComponent.html":{},"components/SidebarComponent.html":{},"coverage.html":{},"overview.html":{},"miscellaneous/variables.html":{}}}],["editorservice",{"_index":536,"title":{},"body":{"directives/NgxEditorJSDirective.html":{},"injectables/NgxEditorJSEffects.html":{}}}],["edits",{"_index":1196,"title":{},"body":{"contributing.html":{}}}],["effect",{"_index":586,"title":{},"body":{"injectables/NgxEditorJSEffects.html":{}}}],["effect({dispatch",{"_index":584,"title":{},"body":{"injectables/NgxEditorJSEffects.html":{}}}],["effects",{"_index":1493,"title":{},"body":{"additional-documentation/tinynodes-library-docs/ngx-editorjs-readme.html":{}}}],["effectsmodule",{"_index":828,"title":{},"body":{"modules/NgxEditorjsNgrxModule.html":{}}}],["effectsmodule.forfeature",{"_index":829,"title":{},"body":{"modules/NgxEditorjsNgrxModule.html":{}}}],["el",{"_index":542,"title":{},"body":{"directives/NgxEditorJSDirective.html":{}}}],["electronic",{"_index":1173,"title":{},"body":{"contributing.html":{}}}],["element",{"_index":133,"title":{},"body":{"components/AppComponent.html":{},"interfaces/EditorJSConfig.html":{},"components/EditorPageComponent.html":{},"components/NavBarComponent.html":{},"components/NgxEditorJSComponent.html":{},"interfaces/NgxEditorJSConfig.html":{},"directives/NgxEditorJSDirective.html":{},"components/PageContainerComponent.html":{},"components/SidebarComponent.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-readme.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-readme/ngx-editorjs-changelog.html":{}}}],["elementref",{"_index":540,"title":{},"body":{"directives/NgxEditorJSDirective.html":{}}}],["elements",{"_index":353,"title":{},"body":{"interfaces/BlocksMap.html":{},"interfaces/ChangeMap.html":{},"interfaces/EditorMap.html":{},"injectables/NgxEditorJSService.html":{},"interfaces/ReadyMap.html":{}}}],["email",{"_index":1071,"title":{},"body":{"contributing.html":{}}}],["empathy",{"_index":1153,"title":{},"body":{"contributing.html":{}}}],["end",{"_index":386,"title":{},"body":{"classes/Changed.html":{},"classes/NotReady.html":{},"classes/Ready.html":{},"classes/SaveEnd.html":{},"classes/SaveStart.html":{},"contributing.html":{},"miscellaneous/enumerations.html":{}}}],["enforce",{"_index":1253,"title":{},"body":{"contributing.html":{}}}],["enforcement",{"_index":1229,"title":{},"body":{"contributing.html":{}}}],["enhancements",{"_index":1490,"title":{},"body":{"additional-documentation/tinynodes-library-docs/ngx-editorjs-readme.html":{}}}],["ensure",{"_index":1080,"title":{},"body":{"contributing.html":{}}}],["entity",{"_index":920,"title":{},"body":{"injectables/PagesService.html":{}}}],["entitystate",{"_index":925,"title":{},"body":{"interfaces/PagesState.html":{},"injectables/PagesStore.html":{}}}],["entitystore",{"_index":926,"title":{},"body":{"interfaces/PagesState.html":{},"injectables/PagesStore.html":{}}}],["entrycomponents",{"_index":809,"title":{},"body":{"modules/NgxEditorjsDemoModule.html":{}}}],["enum",{"_index":380,"title":{},"body":{"classes/Changed.html":{},"classes/NotReady.html":{},"classes/Ready.html":{},"classes/SaveEnd.html":{},"classes/SaveStart.html":{}}}],["enumerations",{"_index":1326,"title":{"miscellaneous/enumerations.html":{}},"body":{"miscellaneous/enumerations.html":{}}}],["environment",{"_index":206,"title":{},"body":{"modules/AppModule.html":{},"contributing.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["environment.production",{"_index":223,"title":{},"body":{"modules/AppModule.html":{}}}],["environments/environment",{"_index":207,"title":{},"body":{"modules/AppModule.html":{}}}],["error",{"_index":736,"title":{},"body":{"injectables/NgxEditorJSService.html":{}}}],["error(`no",{"_index":785,"title":{},"body":{"injectables/NgxEditorJSService.html":{}}}],["etc",{"_index":1418,"title":{},"body":{"todo.html":{}}}],["ethnicity",{"_index":1124,"title":{},"body":{"contributing.html":{}}}],["event",{"_index":1225,"title":{},"body":{"contributing.html":{},"license.html":{}}}],["everyone",{"_index":1118,"title":{},"body":{"contributing.html":{}}}],["example",{"_index":505,"title":{},"body":{"components/NgxEditorJSComponent.html":{},"directives/NgxEditorJSDirective.html":{},"changelog.html":{}}}],["examples",{"_index":1092,"title":{},"body":{"contributing.html":{}}}],["exclude",{"_index":662,"title":{},"body":{"injectables/NgxEditorJSPluginService.html":{}}}],["exclude.includes(key",{"_index":686,"title":{},"body":{"injectables/NgxEditorJSPluginService.html":{}}}],["excludetools",{"_index":713,"title":{},"body":{"injectables/NgxEditorJSService.html":{}}}],["exist",{"_index":739,"title":{},"body":{"injectables/NgxEditorJSService.html":{}}}],["existing",{"_index":718,"title":{},"body":{"injectables/NgxEditorJSService.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-readme.html":{}}}],["expanded",{"_index":1048,"title":{},"body":{"changelog.html":{}}}],["expected",{"_index":1185,"title":{},"body":{"contributing.html":{}}}],["experience",{"_index":1117,"title":{},"body":{"contributing.html":{}}}],["experiences",{"_index":1145,"title":{},"body":{"contributing.html":{}}}],["explicit",{"_index":1175,"title":{},"body":{"contributing.html":{}}}],["export",{"_index":80,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"modules/ApplicationDataModule.html":{},"injectables/ApplicationQuery.html":{},"interfaces/ApplicationState.html":{},"injectables/ApplicationStore.html":{},"interfaces/BasePlugin.html":{},"interfaces/Block.html":{},"interfaces/BlocksMap.html":{},"interfaces/ChangeMap.html":{},"classes/Changed.html":{},"interfaces/EditorJSConfig.html":{},"interfaces/EditorMap.html":{},"components/EditorPageComponent.html":{},"interfaces/Header.html":{},"interfaces/HeaderBlock.html":{},"interfaces/Image.html":{},"interfaces/ImageBlock.html":{},"interfaces/List.html":{},"interfaces/ListBlock.html":{},"modules/MaterialModule.html":{},"interfaces/MenuItem.html":{},"components/NavBarComponent.html":{},"components/NgxEditorJSComponent.html":{},"interfaces/NgxEditorJSConfig.html":{},"directives/NgxEditorJSDirective.html":{},"injectables/NgxEditorJSEffects.html":{},"modules/NgxEditorJSModule.html":{},"injectables/NgxEditorJSPluginService.html":{},"modules/NgxEditorJSPluginServiceModule.html":{},"injectables/NgxEditorJSService.html":{},"modules/NgxEditorjsDemoModule.html":{},"modules/NgxEditorjsNgrxModule.html":{},"modules/NgxEditorjsPluginsModule.html":{},"classes/NotReady.html":{},"interfaces/Page.html":{},"interfaces/PageBlock.html":{},"components/PageContainerComponent.html":{},"modules/PageStoreModule.html":{},"injectables/PagesQuery.html":{},"injectables/PagesService.html":{},"interfaces/PagesState.html":{},"injectables/PagesStore.html":{},"interfaces/Paragraph.html":{},"interfaces/ParagraphBlock.html":{},"injectables/PluginCode.html":{},"modules/PluginCodeModule.html":{},"interfaces/PluginConfig.html":{},"injectables/PluginHeader.html":{},"modules/PluginHeaderModule.html":{},"injectables/PluginImage.html":{},"modules/PluginImageModule.html":{},"injectables/PluginLink.html":{},"modules/PluginLinkModule.html":{},"injectables/PluginList.html":{},"modules/PluginListModule.html":{},"injectables/PluginMarker.html":{},"modules/PluginMarkerModule.html":{},"injectables/PluginParagraph.html":{},"modules/PluginParagraphModule.html":{},"injectables/PluginSimpleImage.html":{},"modules/PluginSimpleImageModule.html":{},"classes/Ready.html":{},"interfaces/ReadyMap.html":{},"classes/SaveEnd.html":{},"classes/SaveStart.html":{},"components/SidebarComponent.html":{},"interfaces/Tag.html":{},"interfaces/ToolSettingsMap.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-readme.html":{}}}],["exported",{"_index":299,"title":{},"body":{"interfaces/BasePlugin.html":{},"interfaces/PluginConfig.html":{},"interfaces/ToolSettingsMap.html":{}}}],["exports",{"_index":162,"title":{},"body":{"modules/AppModule.html":{},"modules/ApplicationDataModule.html":{},"modules/MaterialModule.html":{},"modules/NgxEditorJSModule.html":{},"modules/NgxEditorJSPluginServiceModule.html":{},"modules/NgxEditorjsDemoModule.html":{},"modules/NgxEditorjsNgrxModule.html":{},"modules/NgxEditorjsPluginsModule.html":{},"modules/PageStoreModule.html":{},"modules/PluginCodeModule.html":{},"modules/PluginHeaderModule.html":{},"modules/PluginImageModule.html":{},"modules/PluginLinkModule.html":{},"modules/PluginListModule.html":{},"modules/PluginMarkerModule.html":{},"modules/PluginParagraphModule.html":{},"modules/PluginSimpleImageModule.html":{},"changelog.html":{},"overview.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-readme.html":{}}}],["expose",{"_index":1413,"title":{},"body":{"todo.html":{}}}],["exposed",{"_index":1087,"title":{},"body":{"contributing.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-readme.html":{}}}],["exposes",{"_index":1480,"title":{},"body":{"additional-documentation/tinynodes-library-docs/ngx-editorjs-readme.html":{}}}],["express",{"_index":1378,"title":{},"body":{"license.html":{}}}],["expression",{"_index":1127,"title":{},"body":{"contributing.html":{}}}],["extendable",{"_index":1457,"title":{},"body":{"additional-documentation/tinynodes-library-docs/ngx-editorjs-readme.html":{}}}],["extending",{"_index":295,"title":{},"body":{"interfaces/BasePlugin.html":{},"interfaces/PluginConfig.html":{},"interfaces/ToolSettingsMap.html":{}}}],["extends",{"_index":252,"title":{},"body":{"injectables/ApplicationQuery.html":{},"injectables/ApplicationStore.html":{},"interfaces/Block.html":{},"interfaces/Header.html":{},"interfaces/HeaderBlock.html":{},"interfaces/Image.html":{},"interfaces/ImageBlock.html":{},"interfaces/List.html":{},"interfaces/ListBlock.html":{},"interfaces/Page.html":{},"interfaces/PageBlock.html":{},"injectables/PagesQuery.html":{},"interfaces/PagesState.html":{},"injectables/PagesStore.html":{},"interfaces/Paragraph.html":{},"interfaces/ParagraphBlock.html":{},"interfaces/Tag.html":{}}}],["face",{"_index":1255,"title":{},"body":{"contributing.html":{}}}],["factory",{"_index":625,"title":{},"body":{"modules/NgxEditorJSModule.html":{},"miscellaneous/functions.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-readme.html":{}}}],["failed",{"_index":1520,"title":{},"body":{"additional-documentation/tinynodes-library-docs/ngx-editorjs-readme/ngx-editorjs-changelog.html":{}}}],["fair",{"_index":1188,"title":{},"body":{"contributing.html":{}}}],["faith",{"_index":1254,"title":{},"body":{"contributing.html":{}}}],["false",{"_index":274,"title":{},"body":{"injectables/ApplicationStore.html":{},"interfaces/EditorJSConfig.html":{},"interfaces/NgxEditorJSConfig.html":{},"injectables/NgxEditorJSEffects.html":{},"modules/NgxEditorJSModule.html":{},"injectables/NgxEditorJSService.html":{},"miscellaneous/variables.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-readme.html":{}}}],["false]].foreach(([mapkay",{"_index":793,"title":{},"body":{"injectables/NgxEditorJSService.html":{}}}],["fb",{"_index":447,"title":{},"body":{"components/EditorPageComponent.html":{}}}],["feature",{"_index":1422,"title":{},"body":{"todo.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-readme.html":{}}}],["features",{"_index":605,"title":{},"body":{"modules/NgxEditorJSModule.html":{},"index.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-readme.html":{}}}],["file",{"_index":9,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"modules/ApplicationDataModule.html":{},"injectables/ApplicationQuery.html":{},"interfaces/ApplicationState.html":{},"injectables/ApplicationStore.html":{},"interfaces/BasePlugin.html":{},"interfaces/Block.html":{},"interfaces/BlocksMap.html":{},"interfaces/ChangeMap.html":{},"classes/Changed.html":{},"interfaces/EditorJSConfig.html":{},"interfaces/EditorMap.html":{},"components/EditorPageComponent.html":{},"interfaces/Header.html":{},"interfaces/HeaderBlock.html":{},"interfaces/Image.html":{},"interfaces/ImageBlock.html":{},"interfaces/List.html":{},"interfaces/ListBlock.html":{},"modules/MaterialModule.html":{},"interfaces/MenuItem.html":{},"components/NavBarComponent.html":{},"components/NgxEditorJSComponent.html":{},"interfaces/NgxEditorJSConfig.html":{},"directives/NgxEditorJSDirective.html":{},"injectables/NgxEditorJSEffects.html":{},"modules/NgxEditorJSModule.html":{},"injectables/NgxEditorJSPluginService.html":{},"modules/NgxEditorJSPluginServiceModule.html":{},"injectables/NgxEditorJSService.html":{},"modules/NgxEditorjsDemoModule.html":{},"modules/NgxEditorjsNgrxModule.html":{},"modules/NgxEditorjsPluginsModule.html":{},"classes/NotReady.html":{},"interfaces/Page.html":{},"interfaces/PageBlock.html":{},"components/PageContainerComponent.html":{},"modules/PageStoreModule.html":{},"injectables/PagesQuery.html":{},"injectables/PagesService.html":{},"interfaces/PagesState.html":{},"injectables/PagesStore.html":{},"interfaces/Paragraph.html":{},"interfaces/ParagraphBlock.html":{},"injectables/PluginCode.html":{},"modules/PluginCodeModule.html":{},"interfaces/PluginConfig.html":{},"injectables/PluginHeader.html":{},"modules/PluginHeaderModule.html":{},"injectables/PluginImage.html":{},"modules/PluginImageModule.html":{},"injectables/PluginLink.html":{},"modules/PluginLinkModule.html":{},"injectables/PluginList.html":{},"modules/PluginListModule.html":{},"injectables/PluginMarker.html":{},"modules/PluginMarkerModule.html":{},"injectables/PluginParagraph.html":{},"modules/PluginParagraphModule.html":{},"injectables/PluginSimpleImage.html":{},"modules/PluginSimpleImageModule.html":{},"classes/Ready.html":{},"interfaces/ReadyMap.html":{},"classes/SaveEnd.html":{},"classes/SaveStart.html":{},"components/SidebarComponent.html":{},"interfaces/Tag.html":{},"interfaces/ToolSettingsMap.html":{},"contributing.html":{},"coverage.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-readme/ngx-editorjs-changelog.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-plugins-readme.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-plugins-readme/ngx-editorjs-plugins-changelog.html":{}}}],["filed",{"_index":1044,"title":{},"body":{"changelog.html":{}}}],["files",{"_index":1093,"title":{},"body":{"contributing.html":{},"license.html":{}}}],["filter(([key",{"_index":685,"title":{},"body":{"injectables/NgxEditorJSPluginService.html":{}}}],["finaltools",{"_index":690,"title":{},"body":{"injectables/NgxEditorJSPluginService.html":{}}}],["find",{"_index":1027,"title":{},"body":{"changelog.html":{},"additional-documentation/tinynodes-library-docs.html":{}}}],["first",{"_index":421,"title":{},"body":{"interfaces/EditorJSConfig.html":{},"interfaces/NgxEditorJSConfig.html":{},"injectables/NgxEditorJSService.html":{},"changelog.html":{},"contributing.html":{}}}],["fitness",{"_index":1383,"title":{},"body":{"license.html":{}}}],["fixes",{"_index":1518,"title":{},"body":{"additional-documentation/tinynodes-library-docs/ngx-editorjs-readme/ngx-editorjs-changelog.html":{}}}],["flexlayoutmodule",{"_index":185,"title":{},"body":{"modules/AppModule.html":{}}}],["focus",{"_index":420,"title":{},"body":{"interfaces/EditorJSConfig.html":{},"interfaces/NgxEditorJSConfig.html":{}}}],["focusing",{"_index":1150,"title":{},"body":{"contributing.html":{}}}],["folder",{"_index":1335,"title":{},"body":{"index.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-readme.html":{}}}],["follow",{"_index":1075,"title":{},"body":{"contributing.html":{}}}],["following",{"_index":1368,"title":{},"body":{"license.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-readme.html":{}}}],["foreach(([key",{"_index":678,"title":{},"body":{"injectables/NgxEditorJSPluginService.html":{}}}],["form",{"_index":439,"title":{},"body":{"components/EditorPageComponent.html":{}}}],["format",{"_index":1500,"title":{},"body":{"additional-documentation/tinynodes-library-docs/ngx-editorjs-readme/ngx-editorjs-changelog.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-plugins-readme/ngx-editorjs-plugins-changelog.html":{}}}],["formbuilder",{"_index":444,"title":{},"body":{"components/EditorPageComponent.html":{}}}],["formgroup",{"_index":458,"title":{},"body":{"components/EditorPageComponent.html":{}}}],["forroot",{"_index":606,"title":{},"body":{"modules/NgxEditorJSModule.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-readme.html":{}}}],["forroot(config",{"_index":609,"title":{},"body":{"modules/NgxEditorJSModule.html":{}}}],["fostering",{"_index":1108,"title":{},"body":{"contributing.html":{}}}],["free",{"_index":1116,"title":{},"body":{"contributing.html":{},"license.html":{}}}],["friendly",{"_index":1464,"title":{},"body":{"additional-documentation/tinynodes-library-docs/ngx-editorjs-readme.html":{}}}],["full",{"_index":1330,"title":{},"body":{"index.html":{},"todo.html":{},"miscellaneous/variables.html":{}}}],["function",{"_index":285,"title":{},"body":{"interfaces/BasePlugin.html":{},"modules/NgxEditorJSModule.html":{},"coverage.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-readme.html":{}}}],["functions",{"_index":1328,"title":{"miscellaneous/functions.html":{}},"body":{"miscellaneous/functions.html":{}}}],["furnished",{"_index":1367,"title":{},"body":{"license.html":{}}}],["further",{"_index":1227,"title":{},"body":{"contributing.html":{}}}],["future",{"_index":1458,"title":{},"body":{"additional-documentation/tinynodes-library-docs/ngx-editorjs-readme.html":{}}}],["gender",{"_index":1125,"title":{},"body":{"contributing.html":{}}}],["general",{"_index":1342,"title":{},"body":{"license.html":{},"todo.html":{}}}],["generated",{"_index":700,"title":{},"body":{"injectables/NgxEditorJSService.html":{},"index.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-readme/ngx-editorjs-changelog.html":{}}}],["generation",{"_index":1496,"title":{},"body":{"additional-documentation/tinynodes-library-docs/ngx-editorjs-readme.html":{}}}],["get(key",{"_index":658,"title":{},"body":{"injectables/NgxEditorJSPluginService.html":{}}}],["getblocks",{"_index":704,"title":{},"body":{"injectables/NgxEditorJSService.html":{}}}],["getblocks(holder",{"_index":733,"title":{},"body":{"injectables/NgxEditorJSService.html":{}}}],["geteditor",{"_index":552,"title":{},"body":{"directives/NgxEditorJSDirective.html":{},"injectables/NgxEditorJSService.html":{}}}],["geteditor(holder",{"_index":737,"title":{},"body":{"injectables/NgxEditorJSService.html":{}}}],["getform",{"_index":456,"title":{},"body":{"components/EditorPageComponent.html":{}}}],["getgreeting",{"_index":1274,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["gethidden",{"_index":238,"title":{},"body":{"injectables/AppService.html":{}}}],["getpages",{"_index":865,"title":{},"body":{"components/PageContainerComponent.html":{},"injectables/PagesService.html":{}}}],["getplugins",{"_index":669,"title":{},"body":{"injectables/NgxEditorJSPluginService.html":{}}}],["getservice",{"_index":554,"title":{},"body":{"directives/NgxEditorJSDirective.html":{}}}],["getters",{"_index":1523,"title":{},"body":{"additional-documentation/tinynodes-library-docs/ngx-editorjs-readme/ngx-editorjs-changelog.html":{}}}],["getting",{"_index":1021,"title":{"changelog.html":{},"contributing.html":{},"index.html":{},"license.html":{},"todo.html":{}},"body":{}}],["gettools",{"_index":648,"title":{},"body":{"injectables/NgxEditorJSPluginService.html":{}}}],["gettools(exclude",{"_index":660,"title":{},"body":{"injectables/NgxEditorJSPluginService.html":{}}}],["github",{"_index":497,"title":{},"body":{"components/NavBarComponent.html":{},"modules/PluginCodeModule.html":{},"modules/PluginHeaderModule.html":{},"modules/PluginImageModule.html":{},"modules/PluginLinkModule.html":{},"modules/PluginListModule.html":{},"modules/PluginMarkerModule.html":{},"modules/PluginParagraphModule.html":{},"modules/PluginSimpleImageModule.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-readme.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-plugins-readme.html":{}}}],["go",{"_index":870,"title":{},"body":{"components/PageContainerComponent.html":{}}}],["good",{"_index":1063,"title":{},"body":{"changelog.html":{},"contributing.html":{}}}],["gracefully",{"_index":1146,"title":{},"body":{"contributing.html":{}}}],["granted",{"_index":1347,"title":{},"body":{"license.html":{}}}],["graph",{"_index":1402,"title":{},"body":{"modules.html":{}}}],["gt",{"_index":871,"title":{},"body":{"components/PageContainerComponent.html":{}}}],["guid",{"_index":911,"title":{},"body":{"injectables/PagesService.html":{}}}],["hammerjs",{"_index":1319,"title":{},"body":{"dependencies.html":{}}}],["handling",{"_index":1477,"title":{},"body":{"additional-documentation/tinynodes-library-docs/ngx-editorjs-readme.html":{}}}],["harassing",{"_index":1231,"title":{},"body":{"contributing.html":{}}}],["harassment",{"_index":1115,"title":{},"body":{"contributing.html":{}}}],["harmful",{"_index":1207,"title":{},"body":{"contributing.html":{}}}],["haschanged",{"_index":705,"title":{},"body":{"injectables/NgxEditorJSService.html":{}}}],["haschanged(holder",{"_index":744,"title":{},"body":{"injectables/NgxEditorJSService.html":{}}}],["header",{"_index":330,"title":{"interfaces/Header.html":{}},"body":{"interfaces/Block.html":{},"interfaces/Header.html":{},"interfaces/HeaderBlock.html":{},"interfaces/Image.html":{},"interfaces/ImageBlock.html":{},"interfaces/List.html":{},"interfaces/ListBlock.html":{},"modules/NgxEditorJSModule.html":{},"interfaces/Paragraph.html":{},"interfaces/ParagraphBlock.html":{},"injectables/PluginHeader.html":{},"modules/PluginHeaderModule.html":{},"coverage.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-readme.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-readme/ngx-editorjs-changelog.html":{}}}],["header.plugin",{"_index":947,"title":{},"body":{"modules/PluginHeaderModule.html":{}}}],["headerblock",{"_index":335,"title":{"interfaces/HeaderBlock.html":{}},"body":{"interfaces/Block.html":{},"interfaces/Header.html":{},"interfaces/HeaderBlock.html":{},"interfaces/Image.html":{},"interfaces/ImageBlock.html":{},"interfaces/List.html":{},"interfaces/ListBlock.html":{},"interfaces/Paragraph.html":{},"interfaces/ParagraphBlock.html":{},"coverage.html":{},"miscellaneous/typealiases.html":{}}}],["height",{"_index":94,"title":{},"body":{"components/AppComponent.html":{},"interfaces/EditorJSConfig.html":{},"components/EditorPageComponent.html":{},"components/NavBarComponent.html":{},"components/NgxEditorJSComponent.html":{},"interfaces/NgxEditorJSConfig.html":{},"components/PageContainerComponent.html":{}}}],["helpers",{"_index":1415,"title":{},"body":{"todo.html":{}}}],["here",{"_index":1442,"title":{},"body":{"additional-documentation/tinynodes-library-docs.html":{}}}],["hereby",{"_index":1346,"title":{},"body":{"license.html":{}}}],["hidden",{"_index":231,"title":{},"body":{"injectables/AppService.html":{},"interfaces/ApplicationState.html":{},"injectables/ApplicationStore.html":{},"interfaces/MenuItem.html":{}}}],["hidetoolbar",{"_index":399,"title":{},"body":{"interfaces/EditorJSConfig.html":{},"interfaces/NgxEditorJSConfig.html":{}}}],["hold",{"_index":413,"title":{},"body":{"interfaces/EditorJSConfig.html":{},"components/NgxEditorJSComponent.html":{},"interfaces/NgxEditorJSConfig.html":{}}}],["holder",{"_index":390,"title":{},"body":{"classes/Changed.html":{},"interfaces/EditorJSConfig.html":{},"components/NgxEditorJSComponent.html":{},"interfaces/NgxEditorJSConfig.html":{},"injectables/NgxEditorJSEffects.html":{},"modules/NgxEditorJSModule.html":{},"injectables/NgxEditorJSService.html":{},"classes/NotReady.html":{},"classes/Ready.html":{},"classes/SaveEnd.html":{},"classes/SaveStart.html":{},"miscellaneous/variables.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-readme.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-readme/ngx-editorjs-changelog.html":{}}}],["holders",{"_index":1388,"title":{},"body":{"license.html":{}}}],["host",{"_index":478,"title":{},"body":{"components/EditorPageComponent.html":{},"components/NgxEditorJSComponent.html":{},"components/PageContainerComponent.html":{}}}],["html",{"_index":132,"title":{},"body":{"components/AppComponent.html":{},"components/EditorPageComponent.html":{},"components/NavBarComponent.html":{},"components/NgxEditorJSComponent.html":{},"components/PageContainerComponent.html":{},"components/SidebarComponent.html":{}}}],["http://contributor",{"_index":1266,"title":{},"body":{"contributing.html":{}}}],["httpclient",{"_index":181,"title":{},"body":{"modules/AppModule.html":{}}}],["httpclientmodule",{"_index":182,"title":{},"body":{"modules/AppModule.html":{}}}],["i'll",{"_index":1058,"title":{},"body":{"changelog.html":{}}}],["icon",{"_index":115,"title":{},"body":{"components/AppComponent.html":{},"components/NavBarComponent.html":{}}}],["id",{"_index":412,"title":{},"body":{"interfaces/EditorJSConfig.html":{},"components/NgxEditorJSComponent.html":{},"interfaces/NgxEditorJSConfig.html":{},"directives/NgxEditorJSDirective.html":{},"injectables/NgxEditorJSService.html":{},"interfaces/Page.html":{},"interfaces/PageBlock.html":{},"injectables/PagesService.html":{},"interfaces/Tag.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-readme.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-readme/ngx-editorjs-changelog.html":{}}}],["identifier",{"_index":1270,"title":{},"body":{"coverage.html":{}}}],["identity",{"_index":1126,"title":{},"body":{"contributing.html":{}}}],["image",{"_index":336,"title":{"interfaces/Image.html":{}},"body":{"interfaces/Block.html":{},"interfaces/Header.html":{},"interfaces/HeaderBlock.html":{},"interfaces/Image.html":{},"interfaces/ImageBlock.html":{},"interfaces/List.html":{},"interfaces/ListBlock.html":{},"interfaces/Paragraph.html":{},"interfaces/ParagraphBlock.html":{},"injectables/PluginImage.html":{},"injectables/PluginSimpleImage.html":{},"modules/PluginSimpleImageModule.html":{},"coverage.html":{}}}],["image.module",{"_index":851,"title":{},"body":{"modules/NgxEditorjsPluginsModule.html":{}}}],["image.module.ts",{"_index":1004,"title":{},"body":{"modules/PluginSimpleImageModule.html":{}}}],["image.plugin",{"_index":956,"title":{},"body":{"modules/PluginImageModule.html":{},"modules/PluginSimpleImageModule.html":{}}}],["image.plugin.ts",{"_index":997,"title":{},"body":{"injectables/PluginSimpleImage.html":{},"coverage.html":{}}}],["image.plugin.ts:14",{"_index":999,"title":{},"body":{"injectables/PluginSimpleImage.html":{}}}],["image/simple",{"_index":850,"title":{},"body":{"modules/NgxEditorjsPluginsModule.html":{},"injectables/PluginSimpleImage.html":{},"modules/PluginSimpleImageModule.html":{},"coverage.html":{}}}],["imageblock",{"_index":346,"title":{"interfaces/ImageBlock.html":{}},"body":{"interfaces/Block.html":{},"interfaces/Header.html":{},"interfaces/HeaderBlock.html":{},"interfaces/Image.html":{},"interfaces/ImageBlock.html":{},"interfaces/List.html":{},"interfaces/ListBlock.html":{},"interfaces/Paragraph.html":{},"interfaces/ParagraphBlock.html":{},"coverage.html":{},"miscellaneous/typealiases.html":{}}}],["imagery",{"_index":1159,"title":{},"body":{"contributing.html":{}}}],["implemented",{"_index":1445,"title":{},"body":{"additional-documentation/tinynodes-library-docs/ngx-editorjs-readme.html":{}}}],["implements",{"_index":19,"title":{},"body":{"components/AppComponent.html":{},"classes/Changed.html":{},"components/EditorPageComponent.html":{},"directives/NgxEditorJSDirective.html":{},"classes/NotReady.html":{},"injectables/PluginCode.html":{},"injectables/PluginHeader.html":{},"injectables/PluginImage.html":{},"injectables/PluginLink.html":{},"injectables/PluginList.html":{},"injectables/PluginMarker.html":{},"injectables/PluginParagraph.html":{},"injectables/PluginSimpleImage.html":{},"classes/Ready.html":{},"classes/SaveEnd.html":{},"classes/SaveStart.html":{},"components/SidebarComponent.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-readme.html":{}}}],["implied",{"_index":1379,"title":{},"body":{"license.html":{}}}],["import",{"_index":71,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"modules/ApplicationDataModule.html":{},"injectables/ApplicationQuery.html":{},"interfaces/ApplicationState.html":{},"injectables/ApplicationStore.html":{},"interfaces/BasePlugin.html":{},"interfaces/BlocksMap.html":{},"interfaces/ChangeMap.html":{},"classes/Changed.html":{},"interfaces/EditorJSConfig.html":{},"interfaces/EditorMap.html":{},"components/EditorPageComponent.html":{},"modules/MaterialModule.html":{},"interfaces/MenuItem.html":{},"components/NavBarComponent.html":{},"components/NgxEditorJSComponent.html":{},"interfaces/NgxEditorJSConfig.html":{},"directives/NgxEditorJSDirective.html":{},"injectables/NgxEditorJSEffects.html":{},"modules/NgxEditorJSModule.html":{},"injectables/NgxEditorJSPluginService.html":{},"modules/NgxEditorJSPluginServiceModule.html":{},"injectables/NgxEditorJSService.html":{},"modules/NgxEditorjsDemoModule.html":{},"modules/NgxEditorjsNgrxModule.html":{},"modules/NgxEditorjsPluginsModule.html":{},"classes/NotReady.html":{},"interfaces/Page.html":{},"interfaces/PageBlock.html":{},"components/PageContainerComponent.html":{},"modules/PageStoreModule.html":{},"injectables/PagesQuery.html":{},"injectables/PagesService.html":{},"interfaces/PagesState.html":{},"injectables/PagesStore.html":{},"injectables/PluginCode.html":{},"modules/PluginCodeModule.html":{},"interfaces/PluginConfig.html":{},"injectables/PluginHeader.html":{},"modules/PluginHeaderModule.html":{},"injectables/PluginImage.html":{},"modules/PluginImageModule.html":{},"injectables/PluginLink.html":{},"modules/PluginLinkModule.html":{},"injectables/PluginList.html":{},"modules/PluginListModule.html":{},"injectables/PluginMarker.html":{},"modules/PluginMarkerModule.html":{},"injectables/PluginParagraph.html":{},"modules/PluginParagraphModule.html":{},"injectables/PluginSimpleImage.html":{},"modules/PluginSimpleImageModule.html":{},"classes/Ready.html":{},"interfaces/ReadyMap.html":{},"classes/SaveEnd.html":{},"classes/SaveStart.html":{},"components/SidebarComponent.html":{},"interfaces/Tag.html":{},"interfaces/ToolSettingsMap.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-readme.html":{}}}],["imported",{"_index":1530,"title":{},"body":{"additional-documentation/tinynodes-library-docs/ngx-editorjs-readme/ngx-editorjs-changelog.html":{}}}],["importing",{"_index":839,"title":{},"body":{"modules/NgxEditorjsPluginsModule.html":{}}}],["imports",{"_index":180,"title":{},"body":{"modules/AppModule.html":{},"modules/MaterialModule.html":{},"modules/NgxEditorJSModule.html":{},"modules/NgxEditorjsDemoModule.html":{},"modules/NgxEditorjsNgrxModule.html":{},"modules/NgxEditorjsPluginsModule.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-readme.html":{}}}],["improve",{"_index":1488,"title":{},"body":{"additional-documentation/tinynodes-library-docs/ngx-editorjs-readme.html":{}}}],["improved",{"_index":1511,"title":{},"body":{"additional-documentation/tinynodes-library-docs/ngx-editorjs-readme/ngx-editorjs-changelog.html":{}}}],["inappropriate",{"_index":1178,"title":{},"body":{"contributing.html":{}}}],["incident",{"_index":1248,"title":{},"body":{"contributing.html":{}}}],["include",{"_index":724,"title":{},"body":{"injectables/NgxEditorJSService.html":{},"modules/NgxEditorjsPluginsModule.html":{},"contributing.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-readme.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-readme/ngx-editorjs-changelog.html":{}}}],["included",{"_index":1373,"title":{},"body":{"license.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-readme/ngx-editorjs-changelog.html":{}}}],["includes",{"_index":1085,"title":{},"body":{"contributing.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-plugins-readme.html":{}}}],["including",{"_index":1333,"title":{},"body":{"index.html":{},"license.html":{}}}],["inclusive",{"_index":1139,"title":{},"body":{"contributing.html":{}}}],["increase",{"_index":1090,"title":{},"body":{"contributing.html":{}}}],["index",{"_index":29,"title":{"index.html":{}},"body":{"components/AppComponent.html":{},"injectables/AppService.html":{},"interfaces/ApplicationState.html":{},"injectables/ApplicationStore.html":{},"interfaces/BasePlugin.html":{},"interfaces/Block.html":{},"classes/Changed.html":{},"interfaces/EditorJSConfig.html":{},"components/EditorPageComponent.html":{},"interfaces/Header.html":{},"interfaces/HeaderBlock.html":{},"interfaces/Image.html":{},"interfaces/ImageBlock.html":{},"interfaces/List.html":{},"interfaces/ListBlock.html":{},"interfaces/MenuItem.html":{},"components/NavBarComponent.html":{},"components/NgxEditorJSComponent.html":{},"interfaces/NgxEditorJSConfig.html":{},"directives/NgxEditorJSDirective.html":{},"injectables/NgxEditorJSEffects.html":{},"injectables/NgxEditorJSPluginService.html":{},"injectables/NgxEditorJSService.html":{},"classes/NotReady.html":{},"interfaces/Page.html":{},"interfaces/PageBlock.html":{},"components/PageContainerComponent.html":{},"injectables/PagesService.html":{},"interfaces/Paragraph.html":{},"interfaces/ParagraphBlock.html":{},"injectables/PluginCode.html":{},"injectables/PluginHeader.html":{},"injectables/PluginImage.html":{},"injectables/PluginLink.html":{},"injectables/PluginList.html":{},"injectables/PluginMarker.html":{},"injectables/PluginParagraph.html":{},"injectables/PluginSimpleImage.html":{},"classes/Ready.html":{},"classes/SaveEnd.html":{},"classes/SaveStart.html":{},"components/SidebarComponent.html":{},"interfaces/Tag.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["indexable",{"_index":315,"title":{},"body":{"interfaces/Block.html":{},"interfaces/BlocksMap.html":{},"interfaces/ChangeMap.html":{},"interfaces/EditorMap.html":{},"interfaces/PluginConfig.html":{},"interfaces/ReadyMap.html":{},"interfaces/ToolSettingsMap.html":{}}}],["individual",{"_index":841,"title":{},"body":{"modules/NgxEditorjsPluginsModule.html":{},"contributing.html":{}}}],["info",{"_index":3,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"modules/ApplicationDataModule.html":{},"injectables/ApplicationQuery.html":{},"interfaces/ApplicationState.html":{},"injectables/ApplicationStore.html":{},"interfaces/BasePlugin.html":{},"interfaces/Block.html":{},"interfaces/BlocksMap.html":{},"interfaces/ChangeMap.html":{},"classes/Changed.html":{},"interfaces/EditorJSConfig.html":{},"interfaces/EditorMap.html":{},"components/EditorPageComponent.html":{},"interfaces/Header.html":{},"interfaces/HeaderBlock.html":{},"interfaces/Image.html":{},"interfaces/ImageBlock.html":{},"interfaces/List.html":{},"interfaces/ListBlock.html":{},"modules/MaterialModule.html":{},"interfaces/MenuItem.html":{},"components/NavBarComponent.html":{},"components/NgxEditorJSComponent.html":{},"interfaces/NgxEditorJSConfig.html":{},"directives/NgxEditorJSDirective.html":{},"injectables/NgxEditorJSEffects.html":{},"modules/NgxEditorJSModule.html":{},"injectables/NgxEditorJSPluginService.html":{},"modules/NgxEditorJSPluginServiceModule.html":{},"injectables/NgxEditorJSService.html":{},"modules/NgxEditorjsDemoModule.html":{},"modules/NgxEditorjsNgrxModule.html":{},"modules/NgxEditorjsPluginsModule.html":{},"classes/NotReady.html":{},"interfaces/Page.html":{},"interfaces/PageBlock.html":{},"components/PageContainerComponent.html":{},"modules/PageStoreModule.html":{},"injectables/PagesQuery.html":{},"injectables/PagesService.html":{},"interfaces/PagesState.html":{},"injectables/PagesStore.html":{},"interfaces/Paragraph.html":{},"interfaces/ParagraphBlock.html":{},"injectables/PluginCode.html":{},"modules/PluginCodeModule.html":{},"interfaces/PluginConfig.html":{},"injectables/PluginHeader.html":{},"modules/PluginHeaderModule.html":{},"injectables/PluginImage.html":{},"modules/PluginImageModule.html":{},"injectables/PluginLink.html":{},"modules/PluginLinkModule.html":{},"injectables/PluginList.html":{},"modules/PluginListModule.html":{},"injectables/PluginMarker.html":{},"modules/PluginMarkerModule.html":{},"injectables/PluginParagraph.html":{},"modules/PluginParagraphModule.html":{},"injectables/PluginSimpleImage.html":{},"modules/PluginSimpleImageModule.html":{},"classes/Ready.html":{},"interfaces/ReadyMap.html":{},"classes/SaveEnd.html":{},"classes/SaveStart.html":{},"components/SidebarComponent.html":{},"interfaces/Tag.html":{},"interfaces/ToolSettingsMap.html":{}}}],["information",{"_index":1170,"title":{},"body":{"contributing.html":{},"index.html":{}}}],["initial",{"_index":303,"title":{},"body":{"interfaces/BasePlugin.html":{},"interfaces/EditorJSConfig.html":{},"components/NgxEditorJSComponent.html":{},"interfaces/NgxEditorJSConfig.html":{},"modules/NgxEditorJSModule.html":{},"injectables/NgxEditorJSPluginService.html":{},"injectables/NgxEditorJSService.html":{},"interfaces/PluginConfig.html":{},"interfaces/ToolSettingsMap.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-readme.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-readme/ngx-editorjs-changelog.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-plugins-readme/ngx-editorjs-plugins-changelog.html":{}}}],["initialblock",{"_index":400,"title":{},"body":{"interfaces/EditorJSConfig.html":{},"interfaces/NgxEditorJSConfig.html":{},"modules/NgxEditorJSModule.html":{},"miscellaneous/variables.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-readme.html":{}}}],["initialized",{"_index":62,"title":{},"body":{"components/AppComponent.html":{},"injectables/NgxEditorJSPluginService.html":{}}}],["initialplugins",{"_index":306,"title":{},"body":{"interfaces/BasePlugin.html":{},"modules/NgxEditorJSModule.html":{},"injectables/NgxEditorJSPluginService.html":{},"interfaces/PluginConfig.html":{},"interfaces/ToolSettingsMap.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["inject",{"_index":672,"title":{},"body":{"injectables/NgxEditorJSPluginService.html":{},"injectables/NgxEditorJSService.html":{}}}],["inject(initialplugins",{"_index":675,"title":{},"body":{"injectables/NgxEditorJSPluginService.html":{}}}],["inject(ngx_editorjs_config",{"_index":761,"title":{},"body":{"injectables/NgxEditorJSService.html":{}}}],["inject(userplugins",{"_index":676,"title":{},"body":{"injectables/NgxEditorJSPluginService.html":{}}}],["injectable",{"_index":226,"title":{"injectables/AppService.html":{},"injectables/ApplicationQuery.html":{},"injectables/ApplicationStore.html":{},"injectables/NgxEditorJSEffects.html":{},"injectables/NgxEditorJSPluginService.html":{},"injectables/NgxEditorJSService.html":{},"injectables/PagesQuery.html":{},"injectables/PagesService.html":{},"injectables/PagesStore.html":{},"injectables/PluginCode.html":{},"injectables/PluginHeader.html":{},"injectables/PluginImage.html":{},"injectables/PluginLink.html":{},"injectables/PluginList.html":{},"injectables/PluginMarker.html":{},"injectables/PluginParagraph.html":{},"injectables/PluginSimpleImage.html":{}},"body":{"injectables/AppService.html":{},"injectables/ApplicationQuery.html":{},"injectables/ApplicationStore.html":{},"injectables/NgxEditorJSEffects.html":{},"injectables/NgxEditorJSPluginService.html":{},"injectables/NgxEditorJSService.html":{},"injectables/PagesQuery.html":{},"injectables/PagesService.html":{},"interfaces/PagesState.html":{},"injectables/PagesStore.html":{},"injectables/PluginCode.html":{},"injectables/PluginHeader.html":{},"injectables/PluginImage.html":{},"injectables/PluginLink.html":{},"injectables/PluginList.html":{},"injectables/PluginMarker.html":{},"injectables/PluginParagraph.html":{},"injectables/PluginSimpleImage.html":{},"coverage.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-readme.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-readme/ngx-editorjs-changelog.html":{}}}],["injectables",{"_index":227,"title":{},"body":{"injectables/AppService.html":{},"injectables/ApplicationQuery.html":{},"injectables/ApplicationStore.html":{},"injectables/NgxEditorJSEffects.html":{},"injectables/NgxEditorJSPluginService.html":{},"injectables/NgxEditorJSService.html":{},"injectables/PagesQuery.html":{},"injectables/PagesService.html":{},"injectables/PagesStore.html":{},"injectables/PluginCode.html":{},"injectables/PluginHeader.html":{},"injectables/PluginImage.html":{},"injectables/PluginLink.html":{},"injectables/PluginList.html":{},"injectables/PluginMarker.html":{},"injectables/PluginParagraph.html":{},"injectables/PluginSimpleImage.html":{},"overview.html":{}}}],["injected",{"_index":645,"title":{},"body":{"injectables/NgxEditorJSPluginService.html":{}}}],["injection",{"_index":301,"title":{},"body":{"interfaces/BasePlugin.html":{},"interfaces/EditorJSConfig.html":{},"interfaces/NgxEditorJSConfig.html":{},"interfaces/PluginConfig.html":{},"interfaces/ToolSettingsMap.html":{},"miscellaneous/variables.html":{}}}],["injectiontoken",{"_index":288,"title":{},"body":{"interfaces/BasePlugin.html":{},"interfaces/EditorJSConfig.html":{},"interfaces/NgxEditorJSConfig.html":{},"interfaces/PluginConfig.html":{},"interfaces/ToolSettingsMap.html":{}}}],["injectiontoken('initialplugins",{"_index":307,"title":{},"body":{"interfaces/BasePlugin.html":{},"interfaces/PluginConfig.html":{},"interfaces/ToolSettingsMap.html":{},"miscellaneous/variables.html":{}}}],["injectiontoken('ngx_editorjs_config",{"_index":431,"title":{},"body":{"interfaces/EditorJSConfig.html":{},"interfaces/NgxEditorJSConfig.html":{},"miscellaneous/variables.html":{}}}],["injectiontoken('userplugins",{"_index":311,"title":{},"body":{"interfaces/BasePlugin.html":{},"interfaces/PluginConfig.html":{},"interfaces/ToolSettingsMap.html":{},"miscellaneous/variables.html":{}}}],["inline",{"_index":117,"title":{},"body":{"components/AppComponent.html":{},"components/NavBarComponent.html":{},"modules/NgxEditorjsPluginsModule.html":{},"injectables/PluginMarker.html":{},"modules/PluginMarkerModule.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-plugins-readme.html":{}}}],["input",{"_index":72,"title":{},"body":{"components/AppComponent.html":{},"components/NavBarComponent.html":{},"components/NgxEditorJSComponent.html":{},"directives/NgxEditorJSDirective.html":{},"todo.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-readme.html":{}}}],["inputs",{"_index":37,"title":{},"body":{"components/AppComponent.html":{},"components/NavBarComponent.html":{},"components/NgxEditorJSComponent.html":{},"directives/NgxEditorJSDirective.html":{}}}],["inside",{"_index":1465,"title":{},"body":{"additional-documentation/tinynodes-library-docs/ngx-editorjs-readme.html":{}}}],["install",{"_index":1081,"title":{},"body":{"contributing.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-readme.html":{}}}],["installed",{"_index":1449,"title":{},"body":{"additional-documentation/tinynodes-library-docs/ngx-editorjs-readme.html":{}}}],["installing",{"_index":1446,"title":{},"body":{"additional-documentation/tinynodes-library-docs/ngx-editorjs-readme.html":{}}}],["instance",{"_index":397,"title":{},"body":{"interfaces/EditorJSConfig.html":{},"components/NgxEditorJSComponent.html":{},"interfaces/NgxEditorJSConfig.html":{},"directives/NgxEditorJSDirective.html":{},"modules/NgxEditorJSModule.html":{},"injectables/NgxEditorJSPluginService.html":{},"injectables/NgxEditorJSService.html":{},"miscellaneous/variables.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-readme.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-readme/ngx-editorjs-changelog.html":{}}}],["instance.api",{"_index":1481,"title":{},"body":{"additional-documentation/tinynodes-library-docs/ngx-editorjs-readme.html":{}}}],["instances",{"_index":356,"title":{},"body":{"interfaces/BlocksMap.html":{},"interfaces/ChangeMap.html":{},"interfaces/EditorMap.html":{},"injectables/NgxEditorJSPluginService.html":{},"injectables/NgxEditorJSService.html":{},"interfaces/ReadyMap.html":{},"contributing.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-readme.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-readme/ngx-editorjs-changelog.html":{}}}],["insulting/derogatory",{"_index":1164,"title":{},"body":{"contributing.html":{}}}],["interactions",{"_index":1076,"title":{},"body":{"contributing.html":{}}}],["interest",{"_index":1107,"title":{},"body":{"contributing.html":{}}}],["interface",{"_index":259,"title":{"interfaces/ApplicationState.html":{},"interfaces/BasePlugin.html":{},"interfaces/Block.html":{},"interfaces/BlocksMap.html":{},"interfaces/ChangeMap.html":{},"interfaces/EditorJSConfig.html":{},"interfaces/EditorMap.html":{},"interfaces/Header.html":{},"interfaces/HeaderBlock.html":{},"interfaces/Image.html":{},"interfaces/ImageBlock.html":{},"interfaces/List.html":{},"interfaces/ListBlock.html":{},"interfaces/MenuItem.html":{},"interfaces/NgxEditorJSConfig.html":{},"interfaces/Page.html":{},"interfaces/PageBlock.html":{},"interfaces/PagesState.html":{},"interfaces/Paragraph.html":{},"interfaces/ParagraphBlock.html":{},"interfaces/PluginConfig.html":{},"interfaces/ReadyMap.html":{},"interfaces/Tag.html":{},"interfaces/ToolSettingsMap.html":{}},"body":{"interfaces/ApplicationState.html":{},"interfaces/BasePlugin.html":{},"interfaces/Block.html":{},"interfaces/BlocksMap.html":{},"interfaces/ChangeMap.html":{},"interfaces/EditorJSConfig.html":{},"interfaces/EditorMap.html":{},"interfaces/Header.html":{},"interfaces/HeaderBlock.html":{},"interfaces/Image.html":{},"interfaces/ImageBlock.html":{},"interfaces/List.html":{},"interfaces/ListBlock.html":{},"interfaces/MenuItem.html":{},"components/NgxEditorJSComponent.html":{},"interfaces/NgxEditorJSConfig.html":{},"interfaces/Page.html":{},"interfaces/PageBlock.html":{},"interfaces/PagesState.html":{},"injectables/PagesStore.html":{},"interfaces/Paragraph.html":{},"interfaces/ParagraphBlock.html":{},"interfaces/PluginConfig.html":{},"interfaces/ReadyMap.html":{},"interfaces/Tag.html":{},"interfaces/ToolSettingsMap.html":{},"contributing.html":{},"coverage.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-readme/ngx-editorjs-changelog.html":{}}}],["interfaces",{"_index":260,"title":{},"body":{"interfaces/ApplicationState.html":{},"interfaces/BasePlugin.html":{},"interfaces/Block.html":{},"interfaces/BlocksMap.html":{},"interfaces/ChangeMap.html":{},"interfaces/EditorJSConfig.html":{},"interfaces/EditorMap.html":{},"interfaces/Header.html":{},"interfaces/HeaderBlock.html":{},"interfaces/Image.html":{},"interfaces/ImageBlock.html":{},"interfaces/List.html":{},"interfaces/ListBlock.html":{},"interfaces/MenuItem.html":{},"interfaces/NgxEditorJSConfig.html":{},"interfaces/Page.html":{},"interfaces/PageBlock.html":{},"interfaces/PagesState.html":{},"interfaces/Paragraph.html":{},"interfaces/ParagraphBlock.html":{},"interfaces/PluginConfig.html":{},"interfaces/ReadyMap.html":{},"interfaces/Tag.html":{},"interfaces/ToolSettingsMap.html":{},"overview.html":{}}}],["internal",{"_index":756,"title":{},"body":{"injectables/NgxEditorJSService.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-readme/ngx-editorjs-changelog.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-plugins-readme/ngx-editorjs-plugins-changelog.html":{}}}],["investigated",{"_index":1239,"title":{},"body":{"contributing.html":{}}}],["isready",{"_index":706,"title":{},"body":{"injectables/NgxEditorJSService.html":{}}}],["isready(holder",{"_index":748,"title":{},"body":{"injectables/NgxEditorJSService.html":{}}}],["issue",{"_index":1070,"title":{},"body":{"contributing.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-readme/ngx-editorjs-changelog.html":{}}}],["issues",{"_index":1042,"title":{},"body":{"changelog.html":{},"contributing.html":{}}}],["items",{"_index":107,"title":{},"body":{"components/AppComponent.html":{},"interfaces/Block.html":{},"interfaces/Header.html":{},"interfaces/HeaderBlock.html":{},"interfaces/Image.html":{},"interfaces/ImageBlock.html":{},"interfaces/List.html":{},"interfaces/ListBlock.html":{},"components/NavBarComponent.html":{},"interfaces/Paragraph.html":{},"interfaces/ParagraphBlock.html":{}}}],["js",{"_index":630,"title":{},"body":{"modules/NgxEditorJSModule.html":{},"dependencies.html":{},"miscellaneous/variables.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-readme.html":{}}}],["js/code",{"_index":939,"title":{},"body":{"modules/PluginCodeModule.html":{}}}],["js/header",{"_index":948,"title":{},"body":{"modules/PluginHeaderModule.html":{}}}],["js/image",{"_index":957,"title":{},"body":{"modules/PluginImageModule.html":{},"modules/PluginSimpleImageModule.html":{}}}],["js/link",{"_index":966,"title":{},"body":{"modules/PluginLinkModule.html":{}}}],["js/list",{"_index":974,"title":{},"body":{"modules/PluginListModule.html":{}}}],["js/marker",{"_index":986,"title":{},"body":{"modules/PluginMarkerModule.html":{}}}],["js/paragraph",{"_index":994,"title":{},"body":{"modules/PluginParagraphModule.html":{}}}],["keep",{"_index":1502,"title":{},"body":{"additional-documentation/tinynodes-library-docs/ngx-editorjs-readme/ngx-editorjs-changelog.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-plugins-readme/ngx-editorjs-plugins-changelog.html":{}}}],["key",{"_index":294,"title":{},"body":{"interfaces/BasePlugin.html":{},"interfaces/Block.html":{},"interfaces/BlocksMap.html":{},"interfaces/ChangeMap.html":{},"interfaces/EditorMap.html":{},"interfaces/Header.html":{},"interfaces/HeaderBlock.html":{},"interfaces/Image.html":{},"interfaces/ImageBlock.html":{},"interfaces/List.html":{},"interfaces/ListBlock.html":{},"injectables/NgxEditorJSPluginService.html":{},"interfaces/Page.html":{},"interfaces/PageBlock.html":{},"interfaces/Paragraph.html":{},"interfaces/ParagraphBlock.html":{},"interfaces/PluginConfig.html":{},"interfaces/ReadyMap.html":{},"interfaces/Tag.html":{},"interfaces/ToolSettingsMap.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-readme.html":{}}}],["keys",{"_index":664,"title":{},"body":{"injectables/NgxEditorJSPluginService.html":{},"injectables/NgxEditorJSService.html":{}}}],["kind",{"_index":1377,"title":{},"body":{"license.html":{}}}],["label",{"_index":128,"title":{},"body":{"components/AppComponent.html":{},"interfaces/ApplicationState.html":{},"interfaces/MenuItem.html":{},"components/NavBarComponent.html":{}}}],["language",{"_index":1140,"title":{},"body":{"contributing.html":{}}}],["last",{"_index":363,"title":{},"body":{"interfaces/BlocksMap.html":{},"interfaces/ChangeMap.html":{},"interfaces/EditorJSConfig.html":{},"interfaces/EditorMap.html":{},"interfaces/NgxEditorJSConfig.html":{},"injectables/NgxEditorJSService.html":{},"interfaces/ReadyMap.html":{}}}],["layer",{"_index":1082,"title":{},"body":{"contributing.html":{}}}],["layout",{"_index":187,"title":{},"body":{"modules/AppModule.html":{},"dependencies.html":{}}}],["leadership",{"_index":1261,"title":{},"body":{"contributing.html":{}}}],["left",{"_index":527,"title":{},"body":{"components/NgxEditorJSComponent.html":{}}}],["legend",{"_index":131,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/ApplicationDataModule.html":{},"components/EditorPageComponent.html":{},"components/NavBarComponent.html":{},"components/NgxEditorJSComponent.html":{},"modules/NgxEditorJSModule.html":{},"modules/NgxEditorJSPluginServiceModule.html":{},"modules/NgxEditorjsDemoModule.html":{},"modules/NgxEditorjsNgrxModule.html":{},"modules/NgxEditorjsPluginsModule.html":{},"components/PageContainerComponent.html":{},"modules/PageStoreModule.html":{},"modules/PluginCodeModule.html":{},"modules/PluginHeaderModule.html":{},"modules/PluginImageModule.html":{},"modules/PluginLinkModule.html":{},"modules/PluginListModule.html":{},"modules/PluginMarkerModule.html":{},"modules/PluginParagraphModule.html":{},"modules/PluginSimpleImageModule.html":{},"components/SidebarComponent.html":{},"overview.html":{}}}],["level",{"_index":331,"title":{},"body":{"interfaces/Block.html":{},"interfaces/Header.html":{},"interfaces/HeaderBlock.html":{},"interfaces/Image.html":{},"interfaces/ImageBlock.html":{},"interfaces/List.html":{},"interfaces/ListBlock.html":{},"interfaces/Paragraph.html":{},"interfaces/ParagraphBlock.html":{},"contributing.html":{}}}],["liability",{"_index":1392,"title":{},"body":{"license.html":{}}}],["liable",{"_index":1389,"title":{},"body":{"license.html":{}}}],["libraries",{"_index":1029,"title":{},"body":{"changelog.html":{},"index.html":{},"additional-documentation/tinynodes-library-docs.html":{}}}],["library",{"_index":1031,"title":{"additional-documentation/tinynodes-library-docs.html":{}},"body":{"changelog.html":{},"todo.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-readme.html":{}}}],["libs/.../blocks.ts",{"_index":1425,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["libs/.../config.ts",{"_index":1431,"title":{},"body":{"miscellaneous/variables.html":{}}}],["libs/.../index.ts",{"_index":1329,"title":{},"body":{"miscellaneous/functions.html":{}}}],["libs/.../ngx",{"_index":1327,"title":{},"body":{"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["libs/.../plugins.ts",{"_index":1430,"title":{},"body":{"miscellaneous/variables.html":{}}}],["libs/ngx",{"_index":278,"title":{},"body":{"interfaces/BasePlugin.html":{},"interfaces/Block.html":{},"interfaces/BlocksMap.html":{},"interfaces/ChangeMap.html":{},"classes/Changed.html":{},"interfaces/EditorJSConfig.html":{},"interfaces/EditorMap.html":{},"components/EditorPageComponent.html":{},"interfaces/Header.html":{},"interfaces/HeaderBlock.html":{},"interfaces/Image.html":{},"interfaces/ImageBlock.html":{},"interfaces/List.html":{},"interfaces/ListBlock.html":{},"components/NgxEditorJSComponent.html":{},"interfaces/NgxEditorJSConfig.html":{},"directives/NgxEditorJSDirective.html":{},"injectables/NgxEditorJSEffects.html":{},"modules/NgxEditorJSModule.html":{},"injectables/NgxEditorJSPluginService.html":{},"modules/NgxEditorJSPluginServiceModule.html":{},"injectables/NgxEditorJSService.html":{},"modules/NgxEditorjsDemoModule.html":{},"modules/NgxEditorjsNgrxModule.html":{},"modules/NgxEditorjsPluginsModule.html":{},"classes/NotReady.html":{},"interfaces/Page.html":{},"interfaces/PageBlock.html":{},"components/PageContainerComponent.html":{},"modules/PageStoreModule.html":{},"injectables/PagesQuery.html":{},"injectables/PagesService.html":{},"interfaces/PagesState.html":{},"injectables/PagesStore.html":{},"interfaces/Paragraph.html":{},"interfaces/ParagraphBlock.html":{},"injectables/PluginCode.html":{},"modules/PluginCodeModule.html":{},"interfaces/PluginConfig.html":{},"injectables/PluginHeader.html":{},"modules/PluginHeaderModule.html":{},"injectables/PluginImage.html":{},"modules/PluginImageModule.html":{},"injectables/PluginLink.html":{},"modules/PluginLinkModule.html":{},"injectables/PluginList.html":{},"modules/PluginListModule.html":{},"injectables/PluginMarker.html":{},"modules/PluginMarkerModule.html":{},"injectables/PluginParagraph.html":{},"modules/PluginParagraphModule.html":{},"injectables/PluginSimpleImage.html":{},"modules/PluginSimpleImageModule.html":{},"classes/Ready.html":{},"interfaces/ReadyMap.html":{},"classes/SaveEnd.html":{},"classes/SaveStart.html":{},"interfaces/Tag.html":{},"interfaces/ToolSettingsMap.html":{},"coverage.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["licence",{"_index":1344,"title":{},"body":{"license.html":{}}}],["license",{"_index":1341,"title":{"license.html":{}},"body":{}}],["life",{"_index":1478,"title":{},"body":{"additional-documentation/tinynodes-library-docs/ngx-editorjs-readme.html":{}}}],["lightgray",{"_index":105,"title":{},"body":{"components/AppComponent.html":{},"components/NavBarComponent.html":{}}}],["limitation",{"_index":1356,"title":{},"body":{"license.html":{}}}],["limited",{"_index":1380,"title":{},"body":{"license.html":{}}}],["line",{"_index":129,"title":{},"body":{"components/AppComponent.html":{},"components/NavBarComponent.html":{}}}],["link",{"_index":267,"title":{},"body":{"interfaces/ApplicationState.html":{},"interfaces/MenuItem.html":{},"injectables/PluginLink.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-plugins-readme.html":{}}}],["link.plugin",{"_index":965,"title":{},"body":{"modules/PluginLinkModule.html":{}}}],["links",{"_index":1331,"title":{},"body":{"index.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-readme.html":{}}}],["list",{"_index":108,"title":{"interfaces/List.html":{}},"body":{"components/AppComponent.html":{},"interfaces/Block.html":{},"interfaces/Header.html":{},"interfaces/HeaderBlock.html":{},"interfaces/Image.html":{},"interfaces/ImageBlock.html":{},"interfaces/List.html":{},"interfaces/ListBlock.html":{},"components/NavBarComponent.html":{},"modules/NgxEditorJSModule.html":{},"interfaces/Paragraph.html":{},"interfaces/ParagraphBlock.html":{},"injectables/PluginList.html":{},"coverage.html":{},"miscellaneous/typealiases.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-readme.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-readme/ngx-editorjs-changelog.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-plugins-readme.html":{}}}],["list.plugin",{"_index":973,"title":{},"body":{"modules/PluginListModule.html":{}}}],["listblock",{"_index":327,"title":{"interfaces/ListBlock.html":{}},"body":{"interfaces/Block.html":{},"interfaces/Header.html":{},"interfaces/HeaderBlock.html":{},"interfaces/Image.html":{},"interfaces/ImageBlock.html":{},"interfaces/List.html":{},"interfaces/ListBlock.html":{},"interfaces/Paragraph.html":{},"interfaces/ParagraphBlock.html":{},"coverage.html":{},"miscellaneous/typealiases.html":{}}}],["liststyle",{"_index":325,"title":{},"body":{"interfaces/Block.html":{},"interfaces/Header.html":{},"interfaces/HeaderBlock.html":{},"interfaces/Image.html":{},"interfaces/ImageBlock.html":{},"interfaces/List.html":{},"interfaces/ListBlock.html":{},"interfaces/Paragraph.html":{},"interfaces/ParagraphBlock.html":{},"miscellaneous/typealiases.html":{}}}],["literal",{"_index":374,"title":{},"body":{"classes/Changed.html":{},"classes/NotReady.html":{},"classes/Ready.html":{},"classes/SaveEnd.html":{},"classes/SaveStart.html":{}}}],["load",{"_index":1461,"title":{},"body":{"additional-documentation/tinynodes-library-docs/ngx-editorjs-readme.html":{}}}],["loader",{"_index":222,"title":{},"body":{"modules/AppModule.html":{}}}],["locations",{"_index":1089,"title":{},"body":{"contributing.html":{}}}],["longer",{"_index":1512,"title":{},"body":{"additional-documentation/tinynodes-library-docs/ngx-editorjs-readme/ngx-editorjs-changelog.html":{}}}],["made",{"_index":701,"title":{},"body":{"injectables/NgxEditorJSService.html":{}}}],["mail",{"_index":1215,"title":{},"body":{"contributing.html":{}}}],["main",{"_index":14,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"directives/NgxEditorJSDirective.html":{},"miscellaneous/variables.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-readme.html":{}}}],["maintain",{"_index":1244,"title":{},"body":{"contributing.html":{}}}],["maintainers",{"_index":1112,"title":{},"body":{"contributing.html":{}}}],["make",{"_index":1069,"title":{},"body":{"contributing.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-readme.html":{}}}],["makes",{"_index":646,"title":{},"body":{"injectables/NgxEditorJSPluginService.html":{}}}],["making",{"_index":1062,"title":{},"body":{"changelog.html":{},"contributing.html":{}}}],["management",{"_index":1491,"title":{},"body":{"additional-documentation/tinynodes-library-docs/ngx-editorjs-readme.html":{}}}],["manager",{"_index":471,"title":{},"body":{"components/EditorPageComponent.html":{},"components/PageContainerComponent.html":{}}}],["map",{"_index":296,"title":{},"body":{"interfaces/BasePlugin.html":{},"interfaces/BlocksMap.html":{},"interfaces/ChangeMap.html":{},"interfaces/EditorMap.html":{},"injectables/NgxEditorJSEffects.html":{},"injectables/NgxEditorJSPluginService.html":{},"injectables/NgxEditorJSService.html":{},"interfaces/PluginConfig.html":{},"interfaces/ReadyMap.html":{},"interfaces/ToolSettingsMap.html":{}}}],["map((action",{"_index":573,"title":{},"body":{"injectables/NgxEditorJSEffects.html":{}}}],["maps",{"_index":697,"title":{},"body":{"injectables/NgxEditorJSService.html":{}}}],["margin",{"_index":112,"title":{},"body":{"components/AppComponent.html":{},"components/NavBarComponent.html":{}}}],["markdown",{"_index":205,"title":{},"body":{"modules/AppModule.html":{},"modules/NgxEditorjsDemoModule.html":{},"dependencies.html":{}}}],["markdownmodule",{"_index":204,"title":{},"body":{"modules/AppModule.html":{},"modules/NgxEditorjsDemoModule.html":{}}}],["markdownmodule.forchild",{"_index":822,"title":{},"body":{"modules/NgxEditorjsDemoModule.html":{}}}],["markdownmodule.forroot",{"_index":221,"title":{},"body":{"modules/AppModule.html":{}}}],["marker",{"_index":977,"title":{},"body":{"injectables/PluginMarker.html":{},"modules/PluginMarkerModule.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-readme.html":{}}}],["marker.plugin",{"_index":985,"title":{},"body":{"modules/PluginMarkerModule.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-readme.html":{}}}],["marking",{"_index":1535,"title":{},"body":{"additional-documentation/tinynodes-library-docs/ngx-editorjs-plugins-readme.html":{}}}],["mat",{"_index":92,"title":{},"body":{"components/AppComponent.html":{}}}],["matbuttonmodule",{"_index":811,"title":{},"body":{"modules/NgxEditorjsDemoModule.html":{}}}],["matcardmodule",{"_index":485,"title":{},"body":{"modules/MaterialModule.html":{},"modules/NgxEditorjsDemoModule.html":{}}}],["matching",{"_index":153,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"modules/ApplicationDataModule.html":{},"injectables/ApplicationQuery.html":{},"interfaces/ApplicationState.html":{},"injectables/ApplicationStore.html":{},"interfaces/BasePlugin.html":{},"interfaces/Block.html":{},"interfaces/BlocksMap.html":{},"interfaces/ChangeMap.html":{},"classes/Changed.html":{},"interfaces/EditorJSConfig.html":{},"interfaces/EditorMap.html":{},"components/EditorPageComponent.html":{},"interfaces/Header.html":{},"interfaces/HeaderBlock.html":{},"interfaces/Image.html":{},"interfaces/ImageBlock.html":{},"interfaces/List.html":{},"interfaces/ListBlock.html":{},"modules/MaterialModule.html":{},"interfaces/MenuItem.html":{},"components/NavBarComponent.html":{},"components/NgxEditorJSComponent.html":{},"interfaces/NgxEditorJSConfig.html":{},"directives/NgxEditorJSDirective.html":{},"injectables/NgxEditorJSEffects.html":{},"modules/NgxEditorJSModule.html":{},"injectables/NgxEditorJSPluginService.html":{},"modules/NgxEditorJSPluginServiceModule.html":{},"injectables/NgxEditorJSService.html":{},"modules/NgxEditorjsDemoModule.html":{},"modules/NgxEditorjsNgrxModule.html":{},"modules/NgxEditorjsPluginsModule.html":{},"classes/NotReady.html":{},"interfaces/Page.html":{},"interfaces/PageBlock.html":{},"components/PageContainerComponent.html":{},"modules/PageStoreModule.html":{},"injectables/PagesQuery.html":{},"injectables/PagesService.html":{},"interfaces/PagesState.html":{},"injectables/PagesStore.html":{},"interfaces/Paragraph.html":{},"interfaces/ParagraphBlock.html":{},"injectables/PluginCode.html":{},"modules/PluginCodeModule.html":{},"interfaces/PluginConfig.html":{},"injectables/PluginHeader.html":{},"modules/PluginHeaderModule.html":{},"injectables/PluginImage.html":{},"modules/PluginImageModule.html":{},"injectables/PluginLink.html":{},"modules/PluginLinkModule.html":{},"injectables/PluginList.html":{},"modules/PluginListModule.html":{},"injectables/PluginMarker.html":{},"modules/PluginMarkerModule.html":{},"injectables/PluginParagraph.html":{},"modules/PluginParagraphModule.html":{},"injectables/PluginSimpleImage.html":{},"modules/PluginSimpleImageModule.html":{},"classes/Ready.html":{},"interfaces/ReadyMap.html":{},"classes/SaveEnd.html":{},"classes/SaveStart.html":{},"components/SidebarComponent.html":{},"interfaces/Tag.html":{},"interfaces/ToolSettingsMap.html":{},"changelog.html":{},"contributing.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"index.html":{},"license.html":{},"modules.html":{},"overview.html":{},"todo.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{},"additional-documentation/tinynodes-library-docs.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-readme.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-readme/ngx-editorjs-changelog.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-plugins-readme.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-plugins-readme/ngx-editorjs-plugins-changelog.html":{}}}],["material",{"_index":69,"title":{},"body":{"components/AppComponent.html":{}}}],["material.module",{"_index":215,"title":{},"body":{"modules/AppModule.html":{}}}],["materialmodule",{"_index":168,"title":{"modules/MaterialModule.html":{}},"body":{"modules/AppModule.html":{},"modules/MaterialModule.html":{},"modules.html":{},"overview.html":{}}}],["maticonmodule",{"_index":483,"title":{},"body":{"modules/MaterialModule.html":{}}}],["matlistmodule",{"_index":484,"title":{},"body":{"modules/MaterialModule.html":{}}}],["matsidenav",{"_index":65,"title":{},"body":{"components/AppComponent.html":{},"components/SidebarComponent.html":{}}}],["matsidenavmodule",{"_index":481,"title":{},"body":{"modules/MaterialModule.html":{}}}],["mattoolbarmodule",{"_index":482,"title":{},"body":{"modules/MaterialModule.html":{}}}],["me@tane.dev",{"_index":1236,"title":{},"body":{"contributing.html":{},"license.html":{}}}],["meantime",{"_index":1057,"title":{},"body":{"changelog.html":{}}}],["media",{"_index":1218,"title":{},"body":{"contributing.html":{}}}],["members",{"_index":1155,"title":{},"body":{"contributing.html":{}}}],["menu",{"_index":262,"title":{},"body":{"interfaces/ApplicationState.html":{},"interfaces/MenuItem.html":{},"components/NavBarComponent.html":{}}}],["menuitem",{"_index":264,"title":{"interfaces/MenuItem.html":{}},"body":{"interfaces/ApplicationState.html":{},"interfaces/MenuItem.html":{},"coverage.html":{}}}],["merchantability",{"_index":1382,"title":{},"body":{"license.html":{}}}],["merge",{"_index":1098,"title":{},"body":{"contributing.html":{},"license.html":{}}}],["merged",{"_index":653,"title":{},"body":{"injectables/NgxEditorJSPluginService.html":{}}}],["mergemap",{"_index":591,"title":{},"body":{"injectables/NgxEditorJSEffects.html":{}}}],["mergemap(([action",{"_index":577,"title":{},"body":{"injectables/NgxEditorJSEffects.html":{}}}],["metadata",{"_index":22,"title":{},"body":{"components/AppComponent.html":{},"components/EditorPageComponent.html":{},"components/NavBarComponent.html":{},"components/NgxEditorJSComponent.html":{},"directives/NgxEditorJSDirective.html":{},"components/PageContainerComponent.html":{},"components/SidebarComponent.html":{}}}],["method",{"_index":426,"title":{},"body":{"interfaces/EditorJSConfig.html":{},"interfaces/NgxEditorJSConfig.html":{},"modules/NgxEditorJSModule.html":{},"injectables/NgxEditorJSService.html":{},"contributing.html":{},"miscellaneous/functions.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-readme.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-readme/ngx-editorjs-changelog.html":{}}}],["methods",{"_index":34,"title":{},"body":{"components/AppComponent.html":{},"injectables/AppService.html":{},"injectables/ApplicationStore.html":{},"interfaces/BasePlugin.html":{},"components/EditorPageComponent.html":{},"components/NavBarComponent.html":{},"directives/NgxEditorJSDirective.html":{},"modules/NgxEditorJSModule.html":{},"injectables/NgxEditorJSPluginService.html":{},"injectables/NgxEditorJSService.html":{},"injectables/PagesService.html":{},"injectables/PluginCode.html":{},"interfaces/PluginConfig.html":{},"injectables/PluginHeader.html":{},"injectables/PluginImage.html":{},"injectables/PluginLink.html":{},"injectables/PluginList.html":{},"injectables/PluginMarker.html":{},"injectables/PluginParagraph.html":{},"injectables/PluginSimpleImage.html":{},"components/SidebarComponent.html":{},"interfaces/ToolSettingsMap.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-readme.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-readme/ngx-editorjs-changelog.html":{}}}],["middle",{"_index":126,"title":{},"body":{"components/AppComponent.html":{},"components/NavBarComponent.html":{}}}],["minheight",{"_index":401,"title":{},"body":{"interfaces/EditorJSConfig.html":{},"interfaces/NgxEditorJSConfig.html":{}}}],["miscellaneous",{"_index":1325,"title":{"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}},"body":{"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["mit",{"_index":1343,"title":{},"body":{"license.html":{}}}],["modify",{"_index":1358,"title":{},"body":{"license.html":{}}}],["module",{"_index":155,"title":{"modules/AppModule.html":{},"modules/ApplicationDataModule.html":{},"modules/MaterialModule.html":{},"modules/NgxEditorJSModule.html":{},"modules/NgxEditorJSPluginServiceModule.html":{},"modules/NgxEditorjsDemoModule.html":{},"modules/NgxEditorjsNgrxModule.html":{},"modules/NgxEditorjsPluginsModule.html":{},"modules/PageStoreModule.html":{},"modules/PluginCodeModule.html":{},"modules/PluginHeaderModule.html":{},"modules/PluginImageModule.html":{},"modules/PluginLinkModule.html":{},"modules/PluginListModule.html":{},"modules/PluginMarkerModule.html":{},"modules/PluginParagraphModule.html":{},"modules/PluginSimpleImageModule.html":{}},"body":{"modules/AppModule.html":{},"modules/ApplicationDataModule.html":{},"interfaces/BasePlugin.html":{},"components/EditorPageComponent.html":{},"modules/NgxEditorJSModule.html":{},"injectables/NgxEditorJSPluginService.html":{},"modules/NgxEditorJSPluginServiceModule.html":{},"modules/NgxEditorjsDemoModule.html":{},"modules/NgxEditorjsNgrxModule.html":{},"modules/NgxEditorjsPluginsModule.html":{},"components/PageContainerComponent.html":{},"modules/PageStoreModule.html":{},"modules/PluginCodeModule.html":{},"interfaces/PluginConfig.html":{},"modules/PluginHeaderModule.html":{},"modules/PluginImageModule.html":{},"modules/PluginLinkModule.html":{},"modules/PluginListModule.html":{},"modules/PluginMarkerModule.html":{},"modules/PluginParagraphModule.html":{},"modules/PluginSimpleImageModule.html":{},"interfaces/ToolSettingsMap.html":{},"changelog.html":{},"overview.html":{},"todo.html":{},"miscellaneous/variables.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-readme.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-readme/ngx-editorjs-changelog.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-plugins-readme.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-plugins-readme/ngx-editorjs-plugins-changelog.html":{}}}],["modules",{"_index":157,"title":{"modules.html":{}},"body":{"modules/AppModule.html":{},"modules/ApplicationDataModule.html":{},"modules/MaterialModule.html":{},"modules/NgxEditorJSModule.html":{},"modules/NgxEditorJSPluginServiceModule.html":{},"modules/NgxEditorjsDemoModule.html":{},"modules/NgxEditorjsNgrxModule.html":{},"modules/NgxEditorjsPluginsModule.html":{},"modules/PageStoreModule.html":{},"modules/PluginCodeModule.html":{},"modules/PluginHeaderModule.html":{},"modules/PluginImageModule.html":{},"modules/PluginLinkModule.html":{},"modules/PluginListModule.html":{},"modules/PluginMarkerModule.html":{},"modules/PluginParagraphModule.html":{},"modules/PluginSimpleImageModule.html":{},"modules.html":{},"overview.html":{},"todo.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-readme.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-plugins-readme.html":{}}}],["modulewithproviders",{"_index":615,"title":{},"body":{"modules/NgxEditorJSModule.html":{}}}],["more",{"_index":742,"title":{},"body":{"injectables/NgxEditorJSService.html":{},"changelog.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-readme.html":{}}}],["moved",{"_index":1507,"title":{},"body":{"additional-documentation/tinynodes-library-docs/ngx-editorjs-readme/ngx-editorjs-changelog.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-plugins-readme/ngx-editorjs-plugins-changelog.html":{}}}],["multiple",{"_index":1522,"title":{},"body":{"additional-documentation/tinynodes-library-docs/ngx-editorjs-readme/ngx-editorjs-changelog.html":{}}}],["name",{"_index":46,"title":{},"body":{"components/AppComponent.html":{},"injectables/AppService.html":{},"injectables/ApplicationQuery.html":{},"injectables/ApplicationStore.html":{},"classes/Changed.html":{},"interfaces/EditorJSConfig.html":{},"components/EditorPageComponent.html":{},"components/NavBarComponent.html":{},"components/NgxEditorJSComponent.html":{},"interfaces/NgxEditorJSConfig.html":{},"directives/NgxEditorJSDirective.html":{},"injectables/NgxEditorJSEffects.html":{},"modules/NgxEditorJSModule.html":{},"injectables/NgxEditorJSPluginService.html":{},"injectables/NgxEditorJSService.html":{},"classes/NotReady.html":{},"components/PageContainerComponent.html":{},"injectables/PagesQuery.html":{},"injectables/PagesService.html":{},"interfaces/PagesState.html":{},"injectables/PagesStore.html":{},"classes/Ready.html":{},"classes/SaveEnd.html":{},"classes/SaveStart.html":{},"components/SidebarComponent.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-plugins-readme.html":{}}}],["nationality",{"_index":1128,"title":{},"body":{"contributing.html":{}}}],["nav",{"_index":141,"title":{},"body":{"components/AppComponent.html":{},"components/EditorPageComponent.html":{},"components/NavBarComponent.html":{},"components/NgxEditorJSComponent.html":{},"components/PageContainerComponent.html":{},"components/SidebarComponent.html":{}}}],["navbar",{"_index":492,"title":{},"body":{"components/NavBarComponent.html":{}}}],["navbarcomponent",{"_index":140,"title":{"components/NavBarComponent.html":{}},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"components/EditorPageComponent.html":{},"components/NavBarComponent.html":{},"components/NgxEditorJSComponent.html":{},"components/PageContainerComponent.html":{},"components/SidebarComponent.html":{},"coverage.html":{},"overview.html":{}}}],["navigation",{"_index":106,"title":{},"body":{"components/AppComponent.html":{},"components/NavBarComponent.html":{}}}],["nbsp",{"_index":495,"title":{},"body":{"components/NavBarComponent.html":{}}}],["necessary",{"_index":1241,"title":{},"body":{"contributing.html":{}}}],["need",{"_index":1470,"title":{},"body":{"additional-documentation/tinynodes-library-docs/ngx-editorjs-readme.html":{}}}],["new",{"_index":63,"title":{},"body":{"components/AppComponent.html":{},"interfaces/BasePlugin.html":{},"interfaces/EditorJSConfig.html":{},"interfaces/NgxEditorJSConfig.html":{},"injectables/NgxEditorJSEffects.html":{},"modules/NgxEditorJSModule.html":{},"injectables/NgxEditorJSService.html":{},"injectables/PagesService.html":{},"interfaces/PluginConfig.html":{},"components/SidebarComponent.html":{},"interfaces/ToolSettingsMap.html":{},"changelog.html":{},"contributing.html":{},"coverage.html":{},"miscellaneous/variables.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-readme.html":{}}}],["newpage",{"_index":914,"title":{},"body":{"injectables/PagesService.html":{}}}],["ng",{"_index":197,"title":{},"body":{"modules/AppModule.html":{},"dependencies.html":{}}}],["ngaftercontentinit",{"_index":441,"title":{},"body":{"components/EditorPageComponent.html":{}}}],["ngafterviewinit",{"_index":537,"title":{},"body":{"directives/NgxEditorJSDirective.html":{}}}],["ngdevtools",{"_index":201,"title":{},"body":{"modules/AppModule.html":{},"dependencies.html":{}}}],["ngmodule",{"_index":184,"title":{},"body":{"modules/AppModule.html":{},"modules/ApplicationDataModule.html":{},"modules/MaterialModule.html":{},"modules/NgxEditorJSModule.html":{},"modules/NgxEditorJSPluginServiceModule.html":{},"modules/NgxEditorjsDemoModule.html":{},"modules/NgxEditorjsNgrxModule.html":{},"modules/NgxEditorjsPluginsModule.html":{},"modules/PageStoreModule.html":{},"modules/PluginCodeModule.html":{},"modules/PluginHeaderModule.html":{},"modules/PluginImageModule.html":{},"modules/PluginLinkModule.html":{},"modules/PluginListModule.html":{},"modules/PluginMarkerModule.html":{},"modules/PluginParagraphModule.html":{},"modules/PluginSimpleImageModule.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-readme.html":{}}}],["ngonchanges",{"_index":538,"title":{},"body":{"directives/NgxEditorJSDirective.html":{}}}],["ngonchanges(changes",{"_index":546,"title":{},"body":{"directives/NgxEditorJSDirective.html":{}}}],["ngondestroy",{"_index":35,"title":{},"body":{"components/AppComponent.html":{},"directives/NgxEditorJSDirective.html":{},"components/SidebarComponent.html":{}}}],["ngoninit",{"_index":36,"title":{},"body":{"components/AppComponent.html":{},"components/SidebarComponent.html":{}}}],["ngrx.module.ts",{"_index":827,"title":{},"body":{"modules/NgxEditorjsNgrxModule.html":{}}}],["ngrx/effects",{"_index":588,"title":{},"body":{"injectables/NgxEditorJSEffects.html":{},"modules/NgxEditorjsNgrxModule.html":{},"dependencies.html":{},"todo.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-readme.html":{}}}],["ngrx/src/lib/actions/ngx",{"_index":369,"title":{},"body":{"classes/Changed.html":{},"classes/NotReady.html":{},"classes/Ready.html":{},"classes/SaveEnd.html":{},"classes/SaveStart.html":{},"coverage.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/typealiases.html":{}}}],["ngrx/src/lib/effects/ngx",{"_index":566,"title":{},"body":{"injectables/NgxEditorJSEffects.html":{},"coverage.html":{}}}],["ngrx/src/lib/ngx",{"_index":826,"title":{},"body":{"modules/NgxEditorjsNgrxModule.html":{}}}],["ngrx/store",{"_index":378,"title":{},"body":{"classes/Changed.html":{},"classes/NotReady.html":{},"classes/Ready.html":{},"classes/SaveEnd.html":{},"classes/SaveStart.html":{},"dependencies.html":{}}}],["ngx",{"_index":90,"title":{"additional-documentation/tinynodes-library-docs/ngx-editorjs-readme.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-readme/ngx-editorjs-changelog.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-plugins-readme.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-plugins-readme/ngx-editorjs-plugins-changelog.html":{}},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"interfaces/BasePlugin.html":{},"classes/Changed.html":{},"components/EditorPageComponent.html":{},"components/NavBarComponent.html":{},"components/NgxEditorJSComponent.html":{},"directives/NgxEditorJSDirective.html":{},"modules/NgxEditorjsDemoModule.html":{},"classes/NotReady.html":{},"components/PageContainerComponent.html":{},"interfaces/PluginConfig.html":{},"classes/Ready.html":{},"classes/SaveEnd.html":{},"classes/SaveStart.html":{},"components/SidebarComponent.html":{},"interfaces/ToolSettingsMap.html":{},"dependencies.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"index.html":{},"license.html":{},"todo.html":{},"miscellaneous/variables.html":{},"additional-documentation/tinynodes-library-docs.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-readme.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-plugins-readme.html":{}}}],["ngx.firebaseapp.com",{"_index":218,"title":{},"body":{"modules/AppModule.html":{}}}],["ngx_editorjs_config",{"_index":430,"title":{},"body":{"interfaces/EditorJSConfig.html":{},"interfaces/NgxEditorJSConfig.html":{},"modules/NgxEditorJSModule.html":{},"injectables/NgxEditorJSService.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["ngxeditorjs",{"_index":150,"title":{},"body":{"components/AppComponent.html":{},"components/EditorPageComponent.html":{},"components/NavBarComponent.html":{},"components/NgxEditorJSComponent.html":{},"directives/NgxEditorJSDirective.html":{},"modules/NgxEditorJSPluginServiceModule.html":{},"components/PageContainerComponent.html":{},"components/SidebarComponent.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-readme.html":{}}}],["ngxeditorjsactions",{"_index":394,"title":{},"body":{"classes/Changed.html":{},"classes/NotReady.html":{},"classes/Ready.html":{},"classes/SaveEnd.html":{},"classes/SaveStart.html":{},"miscellaneous/typealiases.html":{}}}],["ngxeditorjscomponent",{"_index":143,"title":{"components/NgxEditorJSComponent.html":{}},"body":{"components/AppComponent.html":{},"components/EditorPageComponent.html":{},"components/NavBarComponent.html":{},"components/NgxEditorJSComponent.html":{},"modules/NgxEditorJSModule.html":{},"components/PageContainerComponent.html":{},"components/SidebarComponent.html":{},"coverage.html":{},"overview.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-readme.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-readme/ngx-editorjs-changelog.html":{}}}],["ngxeditorjsconfig",{"_index":427,"title":{"interfaces/NgxEditorJSConfig.html":{}},"body":{"interfaces/EditorJSConfig.html":{},"interfaces/NgxEditorJSConfig.html":{},"modules/NgxEditorJSModule.html":{},"injectables/NgxEditorJSService.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["ngxeditorjsdemomodule",{"_index":170,"title":{"modules/NgxEditorjsDemoModule.html":{}},"body":{"modules/AppModule.html":{},"modules/NgxEditorjsDemoModule.html":{},"modules.html":{},"overview.html":{}}}],["ngxeditorjsdemoroutes",{"_index":818,"title":{},"body":{"modules/NgxEditorjsDemoModule.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["ngxeditorjsdirective",{"_index":149,"title":{"directives/NgxEditorJSDirective.html":{}},"body":{"components/AppComponent.html":{},"components/EditorPageComponent.html":{},"components/NavBarComponent.html":{},"components/NgxEditorJSComponent.html":{},"directives/NgxEditorJSDirective.html":{},"modules/NgxEditorJSModule.html":{},"components/PageContainerComponent.html":{},"components/SidebarComponent.html":{},"coverage.html":{},"overview.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-readme.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-readme/ngx-editorjs-changelog.html":{}}}],["ngxeditorjseffects",{"_index":565,"title":{"injectables/NgxEditorJSEffects.html":{}},"body":{"injectables/NgxEditorJSEffects.html":{},"coverage.html":{}}}],["ngxeditorjsmodule",{"_index":169,"title":{"modules/NgxEditorJSModule.html":{}},"body":{"modules/AppModule.html":{},"modules/NgxEditorJSModule.html":{},"modules/NgxEditorjsDemoModule.html":{},"modules/NgxEditorjsNgrxModule.html":{},"modules.html":{},"overview.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-readme.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-readme/ngx-editorjs-changelog.html":{}}}],["ngxeditorjsmodule.forroot",{"_index":220,"title":{},"body":{"modules/AppModule.html":{},"interfaces/EditorJSConfig.html":{},"interfaces/NgxEditorJSConfig.html":{},"modules/NgxEditorJSModule.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-readme.html":{}}}],["ngxeditorjsngrxmodule",{"_index":823,"title":{"modules/NgxEditorjsNgrxModule.html":{}},"body":{"modules/NgxEditorjsNgrxModule.html":{},"modules.html":{},"overview.html":{}}}],["ngxeditorjspluginservice",{"_index":642,"title":{"injectables/NgxEditorJSPluginService.html":{}},"body":{"injectables/NgxEditorJSPluginService.html":{},"modules/NgxEditorJSPluginServiceModule.html":{},"injectables/NgxEditorJSService.html":{},"coverage.html":{},"overview.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-plugins-readme.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-plugins-readme/ngx-editorjs-plugins-changelog.html":{}}}],["ngxeditorjspluginservicemodule",{"_index":598,"title":{"modules/NgxEditorJSPluginServiceModule.html":{}},"body":{"modules/NgxEditorJSModule.html":{},"modules/NgxEditorJSPluginServiceModule.html":{},"modules/NgxEditorjsPluginsModule.html":{},"modules.html":{},"overview.html":{}}}],["ngxeditorjspluginsmodule",{"_index":830,"title":{"modules/NgxEditorjsPluginsModule.html":{}},"body":{"modules/NgxEditorjsPluginsModule.html":{},"modules.html":{},"overview.html":{}}}],["ngxeditorjsservice",{"_index":445,"title":{"injectables/NgxEditorJSService.html":{}},"body":{"components/EditorPageComponent.html":{},"components/NgxEditorJSComponent.html":{},"directives/NgxEditorJSDirective.html":{},"injectables/NgxEditorJSEffects.html":{},"modules/NgxEditorJSModule.html":{},"injectables/NgxEditorJSService.html":{},"coverage.html":{},"overview.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-readme.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-readme/ngx-editorjs-changelog.html":{}}}],["ngzone",{"_index":710,"title":{},"body":{"injectables/NgxEditorJSService.html":{}}}],["none",{"_index":100,"title":{},"body":{"components/AppComponent.html":{},"components/NavBarComponent.html":{}}}],["noninfringement",{"_index":1386,"title":{},"body":{"license.html":{}}}],["notable",{"_index":1498,"title":{},"body":{"additional-documentation/tinynodes-library-docs/ngx-editorjs-readme/ngx-editorjs-changelog.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-plugins-readme/ngx-editorjs-plugins-changelog.html":{}}}],["note",{"_index":1073,"title":{},"body":{"contributing.html":{}}}],["notice",{"_index":1371,"title":{},"body":{"license.html":{}}}],["notready",{"_index":387,"title":{"classes/NotReady.html":{}},"body":{"classes/Changed.html":{},"classes/NotReady.html":{},"classes/Ready.html":{},"classes/SaveEnd.html":{},"classes/SaveStart.html":{},"coverage.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/typealiases.html":{}}}],["now",{"_index":1471,"title":{},"body":{"additional-documentation/tinynodes-library-docs/ngx-editorjs-readme.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-readme/ngx-editorjs-changelog.html":{}}}],["npm",{"_index":498,"title":{},"body":{"components/NavBarComponent.html":{},"index.html":{},"additional-documentation/tinynodes-library-docs.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-readme.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-readme/ngx-editorjs-changelog.html":{}}}],["nrwl/nx",{"_index":1045,"title":{},"body":{"changelog.html":{}}}],["null",{"_index":681,"title":{},"body":{"injectables/NgxEditorJSPluginService.html":{},"injectables/NgxEditorJSService.html":{}}}],["number",{"_index":334,"title":{},"body":{"interfaces/Block.html":{},"interfaces/BlocksMap.html":{},"interfaces/ChangeMap.html":{},"interfaces/EditorJSConfig.html":{},"interfaces/EditorMap.html":{},"interfaces/Header.html":{},"interfaces/HeaderBlock.html":{},"interfaces/Image.html":{},"interfaces/ImageBlock.html":{},"interfaces/List.html":{},"interfaces/ListBlock.html":{},"interfaces/NgxEditorJSConfig.html":{},"interfaces/Paragraph.html":{},"interfaces/ParagraphBlock.html":{},"interfaces/ReadyMap.html":{}}}],["numbers",{"_index":1091,"title":{},"body":{"contributing.html":{}}}],["nx",{"_index":1340,"title":{},"body":{"index.html":{}}}],["object",{"_index":667,"title":{},"body":{"injectables/NgxEditorJSPluginService.html":{},"injectables/NgxEditorJSService.html":{},"miscellaneous/variables.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-readme.html":{}}}],["object.entries",{"_index":677,"title":{},"body":{"injectables/NgxEditorJSPluginService.html":{}}}],["object.entries(this.pluginsmap",{"_index":684,"title":{},"body":{"injectables/NgxEditorJSPluginService.html":{}}}],["obligated",{"_index":1243,"title":{},"body":{"contributing.html":{}}}],["observable",{"_index":242,"title":{},"body":{"injectables/AppService.html":{},"components/EditorPageComponent.html":{},"injectables/NgxEditorJSEffects.html":{},"injectables/NgxEditorJSService.html":{},"components/PageContainerComponent.html":{},"injectables/PagesService.html":{}}}],["obtaining",{"_index":1350,"title":{},"body":{"license.html":{}}}],["offensive",{"_index":1206,"title":{},"body":{"contributing.html":{}}}],["official",{"_index":1213,"title":{},"body":{"contributing.html":{}}}],["officially",{"_index":1050,"title":{},"body":{"changelog.html":{}}}],["offline",{"_index":1224,"title":{},"body":{"contributing.html":{}}}],["oftype",{"_index":587,"title":{},"body":{"injectables/NgxEditorJSEffects.html":{}}}],["oftype(editorjsactiontypes.savestart",{"_index":572,"title":{},"body":{"injectables/NgxEditorJSEffects.html":{}}}],["once",{"_index":1099,"title":{},"body":{"contributing.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-readme.html":{}}}],["onchange",{"_index":776,"title":{},"body":{"injectables/NgxEditorJSService.html":{}}}],["onchanges",{"_index":534,"title":{},"body":{"directives/NgxEditorJSDirective.html":{}}}],["ondestroy",{"_index":21,"title":{},"body":{"components/AppComponent.html":{},"directives/NgxEditorJSDirective.html":{},"components/SidebarComponent.html":{}}}],["one",{"_index":722,"title":{},"body":{"injectables/NgxEditorJSService.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-readme.html":{}}}],["oninit",{"_index":20,"title":{},"body":{"components/AppComponent.html":{},"components/SidebarComponent.html":{}}}],["online",{"_index":1223,"title":{},"body":{"contributing.html":{}}}],["onready",{"_index":774,"title":{},"body":{"injectables/NgxEditorJSService.html":{}}}],["onsubmit",{"_index":442,"title":{},"body":{"components/EditorPageComponent.html":{}}}],["open",{"_index":1109,"title":{},"body":{"contributing.html":{}}}],["option",{"_index":424,"title":{},"body":{"interfaces/EditorJSConfig.html":{},"interfaces/NgxEditorJSConfig.html":{},"todo.html":{}}}],["optional",{"_index":48,"title":{},"body":{"components/AppComponent.html":{},"injectables/AppService.html":{},"injectables/ApplicationQuery.html":{},"interfaces/BasePlugin.html":{},"interfaces/Block.html":{},"classes/Changed.html":{},"interfaces/EditorJSConfig.html":{},"components/EditorPageComponent.html":{},"interfaces/Header.html":{},"interfaces/HeaderBlock.html":{},"interfaces/Image.html":{},"interfaces/ImageBlock.html":{},"interfaces/List.html":{},"interfaces/ListBlock.html":{},"components/NavBarComponent.html":{},"components/NgxEditorJSComponent.html":{},"interfaces/NgxEditorJSConfig.html":{},"directives/NgxEditorJSDirective.html":{},"injectables/NgxEditorJSEffects.html":{},"modules/NgxEditorJSModule.html":{},"injectables/NgxEditorJSPluginService.html":{},"injectables/NgxEditorJSService.html":{},"classes/NotReady.html":{},"components/PageContainerComponent.html":{},"injectables/PagesQuery.html":{},"injectables/PagesService.html":{},"interfaces/Paragraph.html":{},"interfaces/ParagraphBlock.html":{},"interfaces/PluginConfig.html":{},"classes/Ready.html":{},"classes/SaveEnd.html":{},"classes/SaveStart.html":{},"components/SidebarComponent.html":{},"interfaces/ToolSettingsMap.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-readme.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-readme/ngx-editorjs-changelog.html":{}}}],["options",{"_index":428,"title":{},"body":{"interfaces/EditorJSConfig.html":{},"interfaces/NgxEditorJSConfig.html":{},"injectables/NgxEditorJSService.html":{},"todo.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-readme.html":{}}}],["options.data",{"_index":773,"title":{},"body":{"injectables/NgxEditorJSService.html":{}}}],["ordered",{"_index":321,"title":{},"body":{"interfaces/Block.html":{},"interfaces/Header.html":{},"interfaces/HeaderBlock.html":{},"interfaces/Image.html":{},"interfaces/ImageBlock.html":{},"interfaces/List.html":{},"interfaces/ListBlock.html":{},"interfaces/Paragraph.html":{},"interfaces/ParagraphBlock.html":{},"miscellaneous/typealiases.html":{}}}],["orientation",{"_index":1134,"title":{},"body":{"contributing.html":{}}}],["others",{"_index":1169,"title":{},"body":{"contributing.html":{}}}],["otherwise",{"_index":1232,"title":{},"body":{"contributing.html":{},"license.html":{}}}],["out",{"_index":173,"title":{},"body":{"modules/AppModule.html":{},"modules/ApplicationDataModule.html":{},"modules/NgxEditorJSModule.html":{},"modules/NgxEditorJSPluginServiceModule.html":{},"modules/NgxEditorjsDemoModule.html":{},"modules/NgxEditorjsNgrxModule.html":{},"modules/NgxEditorjsPluginsModule.html":{},"modules/PageStoreModule.html":{},"modules/PluginCodeModule.html":{},"modules/PluginHeaderModule.html":{},"modules/PluginImageModule.html":{},"modules/PluginLinkModule.html":{},"modules/PluginListModule.html":{},"modules/PluginMarkerModule.html":{},"modules/PluginParagraphModule.html":{},"modules/PluginSimpleImageModule.html":{},"license.html":{},"overview.html":{}}}],["output",{"_index":406,"title":{},"body":{"interfaces/EditorJSConfig.html":{},"interfaces/NgxEditorJSConfig.html":{}}}],["outputdata",{"_index":379,"title":{},"body":{"classes/Changed.html":{},"interfaces/EditorJSConfig.html":{},"interfaces/NgxEditorJSConfig.html":{},"injectables/NgxEditorJSService.html":{},"classes/NotReady.html":{},"classes/Ready.html":{},"classes/SaveEnd.html":{},"classes/SaveStart.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-readme.html":{}}}],["overall",{"_index":1025,"title":{},"body":{"changelog.html":{}}}],["overriding",{"_index":1476,"title":{},"body":{"additional-documentation/tinynodes-library-docs/ngx-editorjs-readme.html":{}}}],["overview",{"_index":1403,"title":{"overview.html":{}},"body":{"overview.html":{}}}],["overwrite",{"_index":1453,"title":{},"body":{"additional-documentation/tinynodes-library-docs/ngx-editorjs-readme.html":{}}}],["owners",{"_index":1072,"title":{},"body":{"contributing.html":{}}}],["package",{"_index":1302,"title":{"dependencies.html":{}},"body":{"additional-documentation/tinynodes-library-docs/ngx-editorjs-readme/ngx-editorjs-changelog.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-plugins-readme.html":{}}}],["padding",{"_index":110,"title":{},"body":{"components/AppComponent.html":{},"components/NavBarComponent.html":{}}}],["page",{"_index":55,"title":{"interfaces/Page.html":{},"additional-documentation/tinynodes-library-docs.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-readme.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-readme/ngx-editorjs-changelog.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-plugins-readme.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-plugins-readme/ngx-editorjs-plugins-changelog.html":{}},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"components/EditorPageComponent.html":{},"components/NavBarComponent.html":{},"components/NgxEditorJSComponent.html":{},"interfaces/Page.html":{},"interfaces/PageBlock.html":{},"components/PageContainerComponent.html":{},"injectables/PagesQuery.html":{},"injectables/PagesService.html":{},"interfaces/PagesState.html":{},"injectables/PagesStore.html":{},"components/SidebarComponent.html":{},"interfaces/Tag.html":{},"coverage.html":{},"todo.html":{}}}],["page'},{'name",{"_index":139,"title":{},"body":{"components/AppComponent.html":{},"components/EditorPageComponent.html":{},"components/NavBarComponent.html":{},"components/NgxEditorJSComponent.html":{},"components/PageContainerComponent.html":{},"components/SidebarComponent.html":{}}}],["page.component",{"_index":814,"title":{},"body":{"modules/NgxEditorjsDemoModule.html":{}}}],["page.component.html",{"_index":438,"title":{},"body":{"components/EditorPageComponent.html":{}}}],["page.component.scss",{"_index":437,"title":{},"body":{"components/EditorPageComponent.html":{}}}],["page.component.ts",{"_index":435,"title":{},"body":{"components/EditorPageComponent.html":{},"coverage.html":{}}}],["page.component.ts:12",{"_index":446,"title":{},"body":{"components/EditorPageComponent.html":{}}}],["page.component.ts:15",{"_index":454,"title":{},"body":{"components/EditorPageComponent.html":{}}}],["page.component.ts:20",{"_index":455,"title":{},"body":{"components/EditorPageComponent.html":{}}}],["page.component.ts:22",{"_index":457,"title":{},"body":{"components/EditorPageComponent.html":{}}}],["page.component.ts:26",{"_index":448,"title":{},"body":{"components/EditorPageComponent.html":{}}}],["page.component.ts:30",{"_index":449,"title":{},"body":{"components/EditorPageComponent.html":{}}}],["page.id",{"_index":916,"title":{},"body":{"injectables/PagesService.html":{}}}],["page/editor",{"_index":434,"title":{},"body":{"components/EditorPageComponent.html":{},"modules/NgxEditorjsDemoModule.html":{},"coverage.html":{}}}],["pageblock",{"_index":856,"title":{"interfaces/PageBlock.html":{}},"body":{"interfaces/Page.html":{},"interfaces/PageBlock.html":{},"injectables/PagesService.html":{},"interfaces/Tag.html":{},"coverage.html":{}}}],["pagecontainercomponent",{"_index":145,"title":{"components/PageContainerComponent.html":{}},"body":{"components/AppComponent.html":{},"components/EditorPageComponent.html":{},"components/NavBarComponent.html":{},"components/NgxEditorJSComponent.html":{},"modules/NgxEditorjsDemoModule.html":{},"components/PageContainerComponent.html":{},"components/SidebarComponent.html":{},"coverage.html":{},"overview.html":{},"miscellaneous/variables.html":{}}}],["pagedata",{"_index":440,"title":{},"body":{"components/EditorPageComponent.html":{}}}],["pageid",{"_index":895,"title":{},"body":{"injectables/PagesService.html":{}}}],["pages",{"_index":470,"title":{},"body":{"components/EditorPageComponent.html":{},"components/PageContainerComponent.html":{},"injectables/PagesService.html":{},"interfaces/PagesState.html":{},"injectables/PagesStore.html":{}}}],["pages.models",{"_index":883,"title":{},"body":{"injectables/PagesQuery.html":{},"injectables/PagesService.html":{},"interfaces/PagesState.html":{},"injectables/PagesStore.html":{}}}],["pages.query",{"_index":877,"title":{},"body":{"modules/PageStoreModule.html":{},"injectables/PagesService.html":{}}}],["pages.service",{"_index":878,"title":{},"body":{"modules/PageStoreModule.html":{}}}],["pages.store",{"_index":879,"title":{},"body":{"modules/PageStoreModule.html":{},"injectables/PagesQuery.html":{},"injectables/PagesService.html":{}}}],["pagesquery",{"_index":874,"title":{"injectables/PagesQuery.html":{}},"body":{"modules/PageStoreModule.html":{},"injectables/PagesQuery.html":{},"injectables/PagesService.html":{},"coverage.html":{},"overview.html":{}}}],["pagesservice",{"_index":863,"title":{"injectables/PagesService.html":{}},"body":{"components/PageContainerComponent.html":{},"modules/PageStoreModule.html":{},"injectables/PagesService.html":{},"coverage.html":{},"overview.html":{}}}],["pagesstate",{"_index":884,"title":{"interfaces/PagesState.html":{}},"body":{"injectables/PagesQuery.html":{},"interfaces/PagesState.html":{},"injectables/PagesStore.html":{},"coverage.html":{}}}],["pagesstore",{"_index":875,"title":{"injectables/PagesStore.html":{}},"body":{"modules/PageStoreModule.html":{},"injectables/PagesQuery.html":{},"injectables/PagesService.html":{},"interfaces/PagesState.html":{},"injectables/PagesStore.html":{},"coverage.html":{},"overview.html":{}}}],["pagestoremodule",{"_index":802,"title":{"modules/PageStoreModule.html":{}},"body":{"modules/NgxEditorjsDemoModule.html":{},"modules/PageStoreModule.html":{},"modules.html":{},"overview.html":{}}}],["pagetags",{"_index":452,"title":{},"body":{"components/EditorPageComponent.html":{},"interfaces/Page.html":{},"interfaces/PageBlock.html":{},"injectables/PagesService.html":{},"interfaces/Tag.html":{}}}],["pagetitle",{"_index":38,"title":{},"body":{"components/AppComponent.html":{},"components/EditorPageComponent.html":{},"interfaces/Page.html":{},"interfaces/PageBlock.html":{},"injectables/PagesService.html":{},"interfaces/Tag.html":{}}}],["paragraph",{"_index":328,"title":{"interfaces/Paragraph.html":{}},"body":{"interfaces/Block.html":{},"interfaces/EditorJSConfig.html":{},"interfaces/Header.html":{},"interfaces/HeaderBlock.html":{},"interfaces/Image.html":{},"interfaces/ImageBlock.html":{},"interfaces/List.html":{},"interfaces/ListBlock.html":{},"interfaces/NgxEditorJSConfig.html":{},"modules/NgxEditorJSModule.html":{},"interfaces/Paragraph.html":{},"interfaces/ParagraphBlock.html":{},"injectables/PluginParagraph.html":{},"coverage.html":{},"miscellaneous/variables.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-readme.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-readme/ngx-editorjs-changelog.html":{}}}],["paragraph.plugin",{"_index":993,"title":{},"body":{"modules/PluginParagraphModule.html":{}}}],["paragraphblock",{"_index":329,"title":{"interfaces/ParagraphBlock.html":{}},"body":{"interfaces/Block.html":{},"interfaces/Header.html":{},"interfaces/HeaderBlock.html":{},"interfaces/Image.html":{},"interfaces/ImageBlock.html":{},"interfaces/List.html":{},"interfaces/ListBlock.html":{},"interfaces/Paragraph.html":{},"interfaces/ParagraphBlock.html":{},"coverage.html":{},"miscellaneous/typealiases.html":{}}}],["param",{"_index":521,"title":{},"body":{"components/NgxEditorJSComponent.html":{},"modules/NgxEditorJSModule.html":{},"injectables/NgxEditorJSPluginService.html":{},"injectables/NgxEditorJSService.html":{},"injectables/PagesService.html":{}}}],["parameter",{"_index":1525,"title":{},"body":{"additional-documentation/tinynodes-library-docs/ngx-editorjs-readme/ngx-editorjs-changelog.html":{}}}],["parameters",{"_index":44,"title":{},"body":{"components/AppComponent.html":{},"injectables/AppService.html":{},"injectables/ApplicationQuery.html":{},"classes/Changed.html":{},"components/EditorPageComponent.html":{},"components/NavBarComponent.html":{},"components/NgxEditorJSComponent.html":{},"directives/NgxEditorJSDirective.html":{},"injectables/NgxEditorJSEffects.html":{},"modules/NgxEditorJSModule.html":{},"injectables/NgxEditorJSPluginService.html":{},"injectables/NgxEditorJSService.html":{},"classes/NotReady.html":{},"components/PageContainerComponent.html":{},"injectables/PagesQuery.html":{},"injectables/PagesService.html":{},"classes/Ready.html":{},"classes/SaveEnd.html":{},"classes/SaveStart.html":{},"components/SidebarComponent.html":{},"contributing.html":{}}}],["parentmodule",{"_index":633,"title":{},"body":{"modules/NgxEditorJSModule.html":{}}}],["participants",{"_index":1157,"title":{},"body":{"contributing.html":{}}}],["participation",{"_index":1113,"title":{},"body":{"contributing.html":{}}}],["particular",{"_index":1384,"title":{},"body":{"license.html":{}}}],["pass",{"_index":611,"title":{},"body":{"modules/NgxEditorJSModule.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-readme.html":{}}}],["passed",{"_index":425,"title":{},"body":{"interfaces/EditorJSConfig.html":{},"interfaces/NgxEditorJSConfig.html":{},"injectables/NgxEditorJSPluginService.html":{}}}],["paste",{"_index":1536,"title":{},"body":{"additional-documentation/tinynodes-library-docs/ngx-editorjs-plugins-readme.html":{}}}],["path",{"_index":1433,"title":{},"body":{"miscellaneous/variables.html":{}}}],["pathmatch",{"_index":1435,"title":{},"body":{"miscellaneous/variables.html":{}}}],["payload",{"_index":372,"title":{},"body":{"classes/Changed.html":{},"classes/NotReady.html":{},"classes/Ready.html":{},"classes/SaveEnd.html":{},"classes/SaveStart.html":{}}}],["peer",{"_index":1419,"title":{},"body":{"todo.html":{}}}],["permanent",{"_index":1257,"title":{},"body":{"contributing.html":{}}}],["permanently",{"_index":1201,"title":{},"body":{"contributing.html":{}}}],["permission",{"_index":1103,"title":{},"body":{"contributing.html":{},"license.html":{}}}],["permit",{"_index":1365,"title":{},"body":{"license.html":{}}}],["person",{"_index":1349,"title":{},"body":{"license.html":{}}}],["personal",{"_index":1129,"title":{},"body":{"contributing.html":{}}}],["persons",{"_index":1366,"title":{},"body":{"license.html":{}}}],["physical",{"_index":1172,"title":{},"body":{"contributing.html":{}}}],["pipeline",{"_index":1410,"title":{},"body":{"todo.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-readme.html":{}}}],["piper",{"_index":1339,"title":{},"body":{"index.html":{},"license.html":{}}}],["placeholder",{"_index":402,"title":{},"body":{"interfaces/EditorJSConfig.html":{},"interfaces/NgxEditorJSConfig.html":{}}}],["please",{"_index":1066,"title":{},"body":{"contributing.html":{}}}],["pledge",{"_index":1106,"title":{},"body":{"contributing.html":{}}}],["plug",{"_index":838,"title":{},"body":{"modules/NgxEditorjsPluginsModule.html":{}}}],["plugin",{"_index":282,"title":{},"body":{"interfaces/BasePlugin.html":{},"interfaces/Block.html":{},"interfaces/Header.html":{},"interfaces/HeaderBlock.html":{},"interfaces/Image.html":{},"interfaces/ImageBlock.html":{},"interfaces/List.html":{},"interfaces/ListBlock.html":{},"injectables/NgxEditorJSPluginService.html":{},"modules/NgxEditorJSPluginServiceModule.html":{},"interfaces/Paragraph.html":{},"interfaces/ParagraphBlock.html":{},"injectables/PluginCode.html":{},"interfaces/PluginConfig.html":{},"injectables/PluginHeader.html":{},"injectables/PluginImage.html":{},"injectables/PluginLink.html":{},"injectables/PluginList.html":{},"injectables/PluginMarker.html":{},"injectables/PluginParagraph.html":{},"injectables/PluginSimpleImage.html":{},"interfaces/ToolSettingsMap.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-readme.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-readme/ngx-editorjs-changelog.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-plugins-readme.html":{}}}],["plugin.plugin",{"_index":689,"title":{},"body":{"injectables/NgxEditorJSPluginService.html":{}}}],["plugin.shortcut",{"_index":688,"title":{},"body":{"injectables/NgxEditorJSPluginService.html":{}}}],["plugincode",{"_index":928,"title":{"injectables/PluginCode.html":{}},"body":{"injectables/PluginCode.html":{},"modules/PluginCodeModule.html":{},"coverage.html":{},"overview.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-readme.html":{}}}],["plugincodemodule",{"_index":803,"title":{"modules/PluginCodeModule.html":{}},"body":{"modules/NgxEditorjsDemoModule.html":{},"modules/NgxEditorjsPluginsModule.html":{},"modules/PluginCodeModule.html":{},"modules.html":{},"overview.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-plugins-readme.html":{}}}],["pluginconfig",{"_index":293,"title":{"interfaces/PluginConfig.html":{}},"body":{"interfaces/BasePlugin.html":{},"modules/NgxEditorJSModule.html":{},"injectables/NgxEditorJSPluginService.html":{},"interfaces/PluginConfig.html":{},"interfaces/ToolSettingsMap.html":{},"coverage.html":{},"miscellaneous/functions.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-readme.html":{}}}],["pluginheader",{"_index":619,"title":{"injectables/PluginHeader.html":{}},"body":{"modules/NgxEditorJSModule.html":{},"injectables/PluginHeader.html":{},"modules/PluginHeaderModule.html":{},"coverage.html":{},"overview.html":{}}}],["pluginheadermodule",{"_index":599,"title":{"modules/PluginHeaderModule.html":{}},"body":{"modules/NgxEditorJSModule.html":{},"modules/NgxEditorjsPluginsModule.html":{},"modules/PluginHeaderModule.html":{},"modules.html":{},"overview.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-plugins-readme.html":{}}}],["pluginilistmodule",{"_index":1534,"title":{},"body":{"additional-documentation/tinynodes-library-docs/ngx-editorjs-plugins-readme.html":{}}}],["pluginimage",{"_index":949,"title":{"injectables/PluginImage.html":{}},"body":{"injectables/PluginImage.html":{},"modules/PluginImageModule.html":{},"coverage.html":{},"overview.html":{}}}],["pluginimagemodule",{"_index":834,"title":{"modules/PluginImageModule.html":{}},"body":{"modules/NgxEditorjsPluginsModule.html":{},"modules/PluginImageModule.html":{},"modules.html":{},"overview.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-plugins-readme.html":{}}}],["pluginlink",{"_index":958,"title":{"injectables/PluginLink.html":{}},"body":{"injectables/PluginLink.html":{},"modules/PluginLinkModule.html":{},"coverage.html":{},"overview.html":{}}}],["pluginlinkmodule",{"_index":804,"title":{"modules/PluginLinkModule.html":{}},"body":{"modules/NgxEditorjsDemoModule.html":{},"modules/NgxEditorjsPluginsModule.html":{},"modules/PluginLinkModule.html":{},"modules.html":{},"overview.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-plugins-readme.html":{}}}],["pluginlist",{"_index":620,"title":{"injectables/PluginList.html":{}},"body":{"modules/NgxEditorJSModule.html":{},"injectables/PluginList.html":{},"modules/PluginListModule.html":{},"coverage.html":{},"overview.html":{}}}],["pluginlistmodule",{"_index":600,"title":{"modules/PluginListModule.html":{}},"body":{"modules/NgxEditorJSModule.html":{},"modules/NgxEditorjsPluginsModule.html":{},"modules/PluginListModule.html":{},"modules.html":{},"overview.html":{}}}],["pluginmarker",{"_index":975,"title":{"injectables/PluginMarker.html":{}},"body":{"injectables/PluginMarker.html":{},"modules/PluginMarkerModule.html":{},"coverage.html":{},"overview.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-readme.html":{}}}],["pluginmarkermodule",{"_index":805,"title":{"modules/PluginMarkerModule.html":{}},"body":{"modules/NgxEditorjsDemoModule.html":{},"modules/NgxEditorjsPluginsModule.html":{},"modules/PluginMarkerModule.html":{},"modules.html":{},"overview.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-readme.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-plugins-readme.html":{}}}],["pluginparagraph",{"_index":621,"title":{"injectables/PluginParagraph.html":{}},"body":{"modules/NgxEditorJSModule.html":{},"injectables/PluginParagraph.html":{},"modules/PluginParagraphModule.html":{},"coverage.html":{},"overview.html":{}}}],["pluginparagraphmodule",{"_index":601,"title":{"modules/PluginParagraphModule.html":{}},"body":{"modules/NgxEditorJSModule.html":{},"modules/NgxEditorjsPluginsModule.html":{},"modules/PluginParagraphModule.html":{},"modules.html":{},"overview.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-plugins-readme.html":{}}}],["plugins",{"_index":304,"title":{"additional-documentation/tinynodes-library-docs/ngx-editorjs-plugins-readme.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-plugins-readme/ngx-editorjs-plugins-changelog.html":{}},"body":{"interfaces/BasePlugin.html":{},"modules/NgxEditorJSModule.html":{},"injectables/NgxEditorJSPluginService.html":{},"injectables/NgxEditorJSService.html":{},"modules/NgxEditorjsDemoModule.html":{},"interfaces/PluginConfig.html":{},"interfaces/ToolSettingsMap.html":{},"changelog.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-readme/ngx-editorjs-changelog.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-plugins-readme.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-plugins-readme/ngx-editorjs-plugins-changelog.html":{}}}],["plugins.module.ts",{"_index":836,"title":{},"body":{"modules/NgxEditorjsPluginsModule.html":{}}}],["plugins.service",{"_index":694,"title":{},"body":{"modules/NgxEditorJSPluginServiceModule.html":{}}}],["plugins/code/code.module",{"_index":842,"title":{},"body":{"modules/NgxEditorjsPluginsModule.html":{}}}],["plugins/header/header.module",{"_index":843,"title":{},"body":{"modules/NgxEditorjsPluginsModule.html":{}}}],["plugins/image/image.module",{"_index":844,"title":{},"body":{"modules/NgxEditorjsPluginsModule.html":{}}}],["plugins/link/link.module",{"_index":845,"title":{},"body":{"modules/NgxEditorjsPluginsModule.html":{}}}],["plugins/list/list.module",{"_index":846,"title":{},"body":{"modules/NgxEditorjsPluginsModule.html":{}}}],["plugins/marker/marker.module",{"_index":847,"title":{},"body":{"modules/NgxEditorjsPluginsModule.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-readme.html":{}}}],["plugins/marker/marker.plugin",{"_index":1472,"title":{},"body":{"additional-documentation/tinynodes-library-docs/ngx-editorjs-readme.html":{}}}],["plugins/paragraph/paragraph.module",{"_index":848,"title":{},"body":{"modules/NgxEditorjsPluginsModule.html":{}}}],["plugins/simple",{"_index":849,"title":{},"body":{"modules/NgxEditorjsPluginsModule.html":{}}}],["plugins/src/lib/ngx",{"_index":835,"title":{},"body":{"modules/NgxEditorjsPluginsModule.html":{}}}],["plugins/src/lib/plugins/code/code.module.ts",{"_index":935,"title":{},"body":{"modules/PluginCodeModule.html":{}}}],["plugins/src/lib/plugins/code/code.plugin.ts",{"_index":929,"title":{},"body":{"injectables/PluginCode.html":{},"coverage.html":{}}}],["plugins/src/lib/plugins/code/code.plugin.ts:14",{"_index":930,"title":{},"body":{"injectables/PluginCode.html":{}}}],["plugins/src/lib/plugins/header/header.module.ts",{"_index":946,"title":{},"body":{"modules/PluginHeaderModule.html":{}}}],["plugins/src/lib/plugins/header/header.plugin.ts",{"_index":941,"title":{},"body":{"injectables/PluginHeader.html":{},"coverage.html":{}}}],["plugins/src/lib/plugins/header/header.plugin.ts:14",{"_index":942,"title":{},"body":{"injectables/PluginHeader.html":{}}}],["plugins/src/lib/plugins/image/image.module.ts",{"_index":955,"title":{},"body":{"modules/PluginImageModule.html":{}}}],["plugins/src/lib/plugins/image/image.plugin.ts",{"_index":950,"title":{},"body":{"injectables/PluginImage.html":{},"coverage.html":{}}}],["plugins/src/lib/plugins/image/image.plugin.ts:14",{"_index":951,"title":{},"body":{"injectables/PluginImage.html":{}}}],["plugins/src/lib/plugins/link/link.module.ts",{"_index":964,"title":{},"body":{"modules/PluginLinkModule.html":{}}}],["plugins/src/lib/plugins/link/link.plugin.ts",{"_index":959,"title":{},"body":{"injectables/PluginLink.html":{},"coverage.html":{}}}],["plugins/src/lib/plugins/link/link.plugin.ts:14",{"_index":960,"title":{},"body":{"injectables/PluginLink.html":{}}}],["plugins/src/lib/plugins/list/list.module.ts",{"_index":972,"title":{},"body":{"modules/PluginListModule.html":{}}}],["plugins/src/lib/plugins/list/list.plugin.ts",{"_index":967,"title":{},"body":{"injectables/PluginList.html":{},"coverage.html":{}}}],["plugins/src/lib/plugins/list/list.plugin.ts:14",{"_index":968,"title":{},"body":{"injectables/PluginList.html":{}}}],["plugins/src/lib/plugins/marker/marker.module.ts",{"_index":984,"title":{},"body":{"modules/PluginMarkerModule.html":{}}}],["plugins/src/lib/plugins/marker/marker.plugin.ts",{"_index":976,"title":{},"body":{"injectables/PluginMarker.html":{},"coverage.html":{}}}],["plugins/src/lib/plugins/marker/marker.plugin.ts:14",{"_index":978,"title":{},"body":{"injectables/PluginMarker.html":{}}}],["plugins/src/lib/plugins/marker/marker.plugin.ts:20",{"_index":979,"title":{},"body":{"injectables/PluginMarker.html":{}}}],["plugins/src/lib/plugins/paragraph/paragraph.module.ts",{"_index":992,"title":{},"body":{"modules/PluginParagraphModule.html":{}}}],["plugins/src/lib/plugins/paragraph/paragraph.plugin.ts",{"_index":987,"title":{},"body":{"injectables/PluginParagraph.html":{},"coverage.html":{}}}],["plugins/src/lib/plugins/paragraph/paragraph.plugin.ts:14",{"_index":988,"title":{},"body":{"injectables/PluginParagraph.html":{}}}],["plugins/src/lib/plugins/simple",{"_index":996,"title":{},"body":{"injectables/PluginSimpleImage.html":{},"modules/PluginSimpleImageModule.html":{},"coverage.html":{}}}],["plugins/src/lib/services/plugins.module.ts",{"_index":693,"title":{},"body":{"modules/NgxEditorJSPluginServiceModule.html":{}}}],["plugins/src/lib/services/plugins.service.ts",{"_index":643,"title":{},"body":{"injectables/NgxEditorJSPluginService.html":{},"coverage.html":{}}}],["plugins/src/lib/services/plugins.service.ts:15",{"_index":651,"title":{},"body":{"injectables/NgxEditorJSPluginService.html":{}}}],["plugins/src/lib/services/plugins.service.ts:35",{"_index":657,"title":{},"body":{"injectables/NgxEditorJSPluginService.html":{}}}],["plugins/src/lib/services/plugins.service.ts:43",{"_index":666,"title":{},"body":{"injectables/NgxEditorJSPluginService.html":{}}}],["plugins/src/lib/services/plugins.service.ts:52",{"_index":659,"title":{},"body":{"injectables/NgxEditorJSPluginService.html":{}}}],["plugins/src/lib/services/plugins.service.ts:59",{"_index":670,"title":{},"body":{"injectables/NgxEditorJSPluginService.html":{}}}],["plugins/src/lib/services/plugins.service.ts:67",{"_index":661,"title":{},"body":{"injectables/NgxEditorJSPluginService.html":{}}}],["plugins/src/lib/types/plugins.ts",{"_index":279,"title":{},"body":{"interfaces/BasePlugin.html":{},"interfaces/PluginConfig.html":{},"interfaces/ToolSettingsMap.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["plugins/src/lib/types/plugins.ts:17",{"_index":1020,"title":{},"body":{"interfaces/ToolSettingsMap.html":{}}}],["plugins/src/lib/types/plugins.ts:7",{"_index":940,"title":{},"body":{"interfaces/PluginConfig.html":{}}}],["pluginservice",{"_index":1506,"title":{},"body":{"additional-documentation/tinynodes-library-docs/ngx-editorjs-readme/ngx-editorjs-changelog.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-plugins-readme/ngx-editorjs-plugins-changelog.html":{}}}],["pluginsimpleimage",{"_index":995,"title":{"injectables/PluginSimpleImage.html":{}},"body":{"injectables/PluginSimpleImage.html":{},"modules/PluginSimpleImageModule.html":{},"coverage.html":{},"overview.html":{}}}],["pluginsimpleimagemodule",{"_index":806,"title":{"modules/PluginSimpleImageModule.html":{}},"body":{"modules/NgxEditorjsDemoModule.html":{},"modules/NgxEditorjsPluginsModule.html":{},"modules/PluginSimpleImageModule.html":{},"modules.html":{},"overview.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-plugins-readme.html":{}}}],["pluginsmap",{"_index":647,"title":{},"body":{"injectables/NgxEditorJSPluginService.html":{}}}],["pointer",{"_index":114,"title":{},"body":{"components/AppComponent.html":{},"components/NavBarComponent.html":{}}}],["policies",{"_index":1250,"title":{},"body":{"contributing.html":{}}}],["political",{"_index":1166,"title":{},"body":{"contributing.html":{}}}],["portions",{"_index":1375,"title":{},"body":{"license.html":{}}}],["ports",{"_index":1088,"title":{},"body":{"contributing.html":{}}}],["positive",{"_index":1138,"title":{},"body":{"contributing.html":{}}}],["possible",{"_index":840,"title":{},"body":{"modules/NgxEditorjsPluginsModule.html":{}}}],["posted",{"_index":1251,"title":{},"body":{"contributing.html":{}}}],["posting",{"_index":1216,"title":{},"body":{"contributing.html":{}}}],["potential",{"_index":1459,"title":{},"body":{"additional-documentation/tinynodes-library-docs/ngx-editorjs-readme.html":{}}}],["pre",{"_index":1450,"title":{},"body":{"additional-documentation/tinynodes-library-docs/ngx-editorjs-readme.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-readme/ngx-editorjs-changelog.html":{}}}],["private",{"_index":31,"title":{},"body":{"components/AppComponent.html":{},"injectables/AppService.html":{},"components/EditorPageComponent.html":{},"injectables/NgxEditorJSEffects.html":{},"injectables/NgxEditorJSPluginService.html":{},"injectables/NgxEditorJSService.html":{},"injectables/PagesService.html":{},"components/SidebarComponent.html":{},"contributing.html":{}}}],["process",{"_index":1079,"title":{},"body":{"contributing.html":{}}}],["produced",{"_index":655,"title":{},"body":{"injectables/NgxEditorJSPluginService.html":{}}}],["production",{"_index":1437,"title":{},"body":{"miscellaneous/variables.html":{}}}],["professional",{"_index":1179,"title":{},"body":{"contributing.html":{}}}],["project",{"_index":1046,"title":{},"body":{"changelog.html":{},"contributing.html":{},"index.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-readme.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-readme/ngx-editorjs-changelog.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-plugins-readme/ngx-editorjs-plugins-changelog.html":{}}}],["project's",{"_index":1260,"title":{},"body":{"contributing.html":{}}}],["projects",{"_index":1443,"title":{},"body":{"additional-documentation/tinynodes-library-docs.html":{}}}],["properties",{"_index":30,"title":{},"body":{"components/AppComponent.html":{},"interfaces/ApplicationState.html":{},"interfaces/BasePlugin.html":{},"interfaces/Block.html":{},"classes/Changed.html":{},"interfaces/EditorJSConfig.html":{},"components/EditorPageComponent.html":{},"interfaces/Header.html":{},"interfaces/HeaderBlock.html":{},"interfaces/Image.html":{},"interfaces/ImageBlock.html":{},"interfaces/List.html":{},"interfaces/ListBlock.html":{},"interfaces/MenuItem.html":{},"components/NgxEditorJSComponent.html":{},"interfaces/NgxEditorJSConfig.html":{},"directives/NgxEditorJSDirective.html":{},"injectables/NgxEditorJSEffects.html":{},"injectables/NgxEditorJSPluginService.html":{},"injectables/NgxEditorJSService.html":{},"classes/NotReady.html":{},"interfaces/Page.html":{},"interfaces/PageBlock.html":{},"injectables/PagesService.html":{},"interfaces/Paragraph.html":{},"interfaces/ParagraphBlock.html":{},"classes/Ready.html":{},"classes/SaveEnd.html":{},"classes/SaveStart.html":{},"components/SidebarComponent.html":{},"interfaces/Tag.html":{}}}],["property",{"_index":340,"title":{},"body":{"interfaces/Block.html":{},"interfaces/Header.html":{},"interfaces/HeaderBlock.html":{},"interfaces/Image.html":{},"interfaces/ImageBlock.html":{},"interfaces/List.html":{},"interfaces/ListBlock.html":{},"directives/NgxEditorJSDirective.html":{},"interfaces/Paragraph.html":{},"interfaces/ParagraphBlock.html":{}}}],["provide",{"_index":543,"title":{},"body":{"directives/NgxEditorJSDirective.html":{},"modules/NgxEditorJSModule.html":{},"modules/NgxEditorjsDemoModule.html":{},"modules/NgxEditorjsPluginsModule.html":{},"todo.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-readme.html":{}}}],["provided",{"_index":326,"title":{},"body":{"interfaces/Block.html":{},"interfaces/Header.html":{},"interfaces/HeaderBlock.html":{},"interfaces/Image.html":{},"interfaces/ImageBlock.html":{},"interfaces/List.html":{},"interfaces/ListBlock.html":{},"components/NgxEditorJSComponent.html":{},"modules/NgxEditorJSModule.html":{},"interfaces/Paragraph.html":{},"interfaces/ParagraphBlock.html":{},"license.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-readme.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-readme/ngx-editorjs-changelog.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-plugins-readme/ngx-editorjs-plugins-changelog.html":{}}}],["providedin",{"_index":674,"title":{},"body":{"injectables/NgxEditorJSPluginService.html":{},"injectables/NgxEditorJSService.html":{}}}],["providers",{"_index":161,"title":{},"body":{"modules/AppModule.html":{},"modules/ApplicationDataModule.html":{},"modules/NgxEditorJSModule.html":{},"modules/NgxEditorJSPluginServiceModule.html":{},"modules/NgxEditorjsDemoModule.html":{},"modules/NgxEditorjsNgrxModule.html":{},"modules/NgxEditorjsPluginsModule.html":{},"modules/PageStoreModule.html":{},"modules/PluginCodeModule.html":{},"modules/PluginHeaderModule.html":{},"modules/PluginImageModule.html":{},"modules/PluginLinkModule.html":{},"modules/PluginListModule.html":{},"modules/PluginMarkerModule.html":{},"modules/PluginParagraphModule.html":{},"modules/PluginSimpleImageModule.html":{},"overview.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-readme.html":{}}}],["provides",{"_index":16,"title":{},"body":{"components/AppComponent.html":{},"directives/NgxEditorJSDirective.html":{},"modules/NgxEditorJSModule.html":{},"injectables/NgxEditorJSPluginService.html":{},"modules/NgxEditorJSPluginServiceModule.html":{},"injectables/NgxEditorJSService.html":{},"modules/NgxEditorjsPluginsModule.html":{},"injectables/PagesService.html":{},"modules/PluginCodeModule.html":{},"modules/PluginHeaderModule.html":{},"modules/PluginImageModule.html":{},"modules/PluginLinkModule.html":{},"modules/PluginListModule.html":{},"modules/PluginMarkerModule.html":{},"modules/PluginParagraphModule.html":{},"modules/PluginSimpleImageModule.html":{},"changelog.html":{},"index.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-readme.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-plugins-readme.html":{}}}],["providing",{"_index":1532,"title":{},"body":{"additional-documentation/tinynodes-library-docs/ngx-editorjs-plugins-readme.html":{}}}],["provied",{"_index":429,"title":{},"body":{"interfaces/EditorJSConfig.html":{},"interfaces/NgxEditorJSConfig.html":{},"miscellaneous/variables.html":{}}}],["public",{"_index":82,"title":{},"body":{"components/AppComponent.html":{},"injectables/AppService.html":{},"classes/Changed.html":{},"components/EditorPageComponent.html":{},"components/NavBarComponent.html":{},"components/NgxEditorJSComponent.html":{},"directives/NgxEditorJSDirective.html":{},"injectables/NgxEditorJSPluginService.html":{},"injectables/NgxEditorJSService.html":{},"classes/NotReady.html":{},"injectables/PagesService.html":{},"injectables/PluginCode.html":{},"injectables/PluginHeader.html":{},"injectables/PluginImage.html":{},"injectables/PluginLink.html":{},"injectables/PluginList.html":{},"injectables/PluginMarker.html":{},"injectables/PluginParagraph.html":{},"injectables/PluginSimpleImage.html":{},"classes/Ready.html":{},"classes/SaveEnd.html":{},"classes/SaveStart.html":{},"contributing.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-plugins-readme/ngx-editorjs-plugins-changelog.html":{}}}],["publish",{"_index":1359,"title":{},"body":{"license.html":{},"todo.html":{}}}],["publishing",{"_index":1168,"title":{},"body":{"contributing.html":{},"todo.html":{}}}],["pull",{"_index":1077,"title":{},"body":{"contributing.html":{}}}],["purpose",{"_index":1385,"title":{},"body":{"license.html":{}}}],["query",{"_index":236,"title":{},"body":{"injectables/AppService.html":{},"injectables/ApplicationQuery.html":{},"injectables/PagesService.html":{}}}],["queryentity",{"_index":881,"title":{},"body":{"injectables/PagesQuery.html":{}}}],["race",{"_index":1131,"title":{},"body":{"contributing.html":{}}}],["radius",{"_index":525,"title":{},"body":{"components/NgxEditorJSComponent.html":{}}}],["reactiveformsmodule",{"_index":810,"title":{},"body":{"modules/NgxEditorjsDemoModule.html":{}}}],["readme",{"_index":1334,"title":{"additional-documentation/tinynodes-library-docs/ngx-editorjs-readme.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-plugins-readme.html":{}},"body":{"index.html":{},"additional-documentation/tinynodes-library-docs.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-readme/ngx-editorjs-changelog.html":{}}}],["readme.md",{"_index":1084,"title":{},"body":{"contributing.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-plugins-readme/ngx-editorjs-plugins-changelog.html":{}}}],["readonly",{"_index":32,"title":{},"body":{"components/AppComponent.html":{},"injectables/AppService.html":{},"classes/Changed.html":{},"components/EditorPageComponent.html":{},"components/NavBarComponent.html":{},"components/NgxEditorJSComponent.html":{},"directives/NgxEditorJSDirective.html":{},"injectables/NgxEditorJSEffects.html":{},"injectables/NgxEditorJSService.html":{},"classes/NotReady.html":{},"components/PageContainerComponent.html":{},"injectables/PagesService.html":{},"classes/Ready.html":{},"classes/SaveEnd.html":{},"classes/SaveStart.html":{},"components/SidebarComponent.html":{}}}],["ready",{"_index":359,"title":{"classes/Ready.html":{}},"body":{"interfaces/BlocksMap.html":{},"interfaces/ChangeMap.html":{},"classes/Changed.html":{},"interfaces/EditorMap.html":{},"injectables/NgxEditorJSService.html":{},"classes/NotReady.html":{},"classes/Ready.html":{},"interfaces/ReadyMap.html":{},"classes/SaveEnd.html":{},"classes/SaveStart.html":{},"coverage.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/typealiases.html":{}}}],["readymap",{"_index":361,"title":{"interfaces/ReadyMap.html":{}},"body":{"interfaces/BlocksMap.html":{},"interfaces/ChangeMap.html":{},"interfaces/EditorMap.html":{},"injectables/NgxEditorJSService.html":{},"interfaces/ReadyMap.html":{},"coverage.html":{}}}],["reasonably",{"_index":1176,"title":{},"body":{"contributing.html":{}}}],["redirectto",{"_index":1434,"title":{},"body":{"miscellaneous/variables.html":{}}}],["reduce((finaltools",{"_index":687,"title":{},"body":{"injectables/NgxEditorJSPluginService.html":{}}}],["regard",{"_index":1246,"title":{},"body":{"contributing.html":{}}}],["regardless",{"_index":1119,"title":{},"body":{"contributing.html":{}}}],["regenerated",{"_index":1519,"title":{},"body":{"additional-documentation/tinynodes-library-docs/ngx-editorjs-readme/ngx-editorjs-changelog.html":{}}}],["registered",{"_index":671,"title":{},"body":{"injectables/NgxEditorJSPluginService.html":{}}}],["registering",{"_index":1531,"title":{},"body":{"additional-documentation/tinynodes-library-docs/ngx-editorjs-plugins-readme.html":{}}}],["reject",{"_index":1193,"title":{},"body":{"contributing.html":{}}}],["related",{"_index":1024,"title":{},"body":{"changelog.html":{}}}],["release",{"_index":1056,"title":{},"body":{"changelog.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-readme/ngx-editorjs-changelog.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-plugins-readme/ngx-editorjs-plugins-changelog.html":{}}}],["released",{"_index":1051,"title":{},"body":{"changelog.html":{},"additional-documentation/tinynodes-library-docs.html":{}}}],["releases",{"_index":1482,"title":{},"body":{"additional-documentation/tinynodes-library-docs/ngx-editorjs-readme.html":{}}}],["religion",{"_index":1132,"title":{},"body":{"contributing.html":{}}}],["remove",{"_index":649,"title":{},"body":{"injectables/NgxEditorJSPluginService.html":{},"contributing.html":{}}}],["remove(key",{"_index":665,"title":{},"body":{"injectables/NgxEditorJSPluginService.html":{}}}],["removeblock",{"_index":887,"title":{},"body":{"injectables/PagesService.html":{}}}],["removeblock(pageid",{"_index":900,"title":{},"body":{"injectables/PagesService.html":{}}}],["removed",{"_index":899,"title":{},"body":{"injectables/PagesService.html":{},"contributing.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-readme/ngx-editorjs-changelog.html":{}}}],["removes",{"_index":898,"title":{},"body":{"injectables/PagesService.html":{}}}],["renamed",{"_index":1528,"title":{},"body":{"additional-documentation/tinynodes-library-docs/ngx-editorjs-readme/ngx-editorjs-changelog.html":{}}}],["render",{"_index":407,"title":{},"body":{"interfaces/EditorJSConfig.html":{},"components/NgxEditorJSComponent.html":{},"interfaces/NgxEditorJSConfig.html":{},"directives/NgxEditorJSDirective.html":{},"injectables/NgxEditorJSService.html":{},"injectables/PagesService.html":{}}}],["repercussions",{"_index":1258,"title":{},"body":{"contributing.html":{}}}],["replaced",{"_index":1524,"title":{},"body":{"additional-documentation/tinynodes-library-docs/ngx-editorjs-readme/ngx-editorjs-changelog.html":{}}}],["repo",{"_index":936,"title":{},"body":{"modules/PluginCodeModule.html":{},"modules/PluginHeaderModule.html":{},"modules/PluginImageModule.html":{},"modules/PluginLinkModule.html":{},"modules/PluginListModule.html":{},"modules/PluginMarkerModule.html":{},"modules/PluginParagraphModule.html":{},"modules/PluginSimpleImageModule.html":{},"todo.html":{}}}],["repo](https://github.com/editor",{"_index":938,"title":{},"body":{"modules/PluginCodeModule.html":{},"modules/PluginHeaderModule.html":{},"modules/PluginImageModule.html":{},"modules/PluginLinkModule.html":{},"modules/PluginListModule.html":{},"modules/PluginMarkerModule.html":{},"modules/PluginParagraphModule.html":{},"modules/PluginSimpleImageModule.html":{}}}],["report",{"_index":1036,"title":{},"body":{"changelog.html":{}}}],["reported",{"_index":1233,"title":{},"body":{"contributing.html":{}}}],["reporter",{"_index":1247,"title":{},"body":{"contributing.html":{}}}],["repository",{"_index":1065,"title":{},"body":{"contributing.html":{},"index.html":{}}}],["represent",{"_index":1094,"title":{},"body":{"contributing.html":{}}}],["representation",{"_index":1226,"title":{},"body":{"contributing.html":{}}}],["representative",{"_index":1222,"title":{},"body":{"contributing.html":{}}}],["representing",{"_index":1212,"title":{},"body":{"contributing.html":{}}}],["request",{"_index":1078,"title":{},"body":{"contributing.html":{}}}],["required",{"_index":281,"title":{},"body":{"interfaces/BasePlugin.html":{},"modules/NgxEditorjsPluginsModule.html":{},"interfaces/PluginConfig.html":{},"interfaces/ToolSettingsMap.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-readme.html":{}}}],["reset",{"_index":172,"title":{},"body":{"modules/AppModule.html":{},"modules/ApplicationDataModule.html":{},"modules/NgxEditorJSModule.html":{},"modules/NgxEditorJSPluginServiceModule.html":{},"modules/NgxEditorjsDemoModule.html":{},"modules/NgxEditorjsNgrxModule.html":{},"modules/NgxEditorjsPluginsModule.html":{},"modules/PageStoreModule.html":{},"modules/PluginCodeModule.html":{},"modules/PluginHeaderModule.html":{},"modules/PluginImageModule.html":{},"modules/PluginLinkModule.html":{},"modules/PluginListModule.html":{},"modules/PluginMarkerModule.html":{},"modules/PluginParagraphModule.html":{},"modules/PluginSimpleImageModule.html":{},"overview.html":{}}}],["resolved",{"_index":1055,"title":{},"body":{"changelog.html":{}}}],["respectful",{"_index":1142,"title":{},"body":{"contributing.html":{}}}],["response",{"_index":1190,"title":{},"body":{"contributing.html":{}}}],["responsibilities",{"_index":1181,"title":{},"body":{"contributing.html":{}}}],["responsibility",{"_index":1191,"title":{},"body":{"contributing.html":{}}}],["responsible",{"_index":1182,"title":{},"body":{"contributing.html":{}}}],["restriction",{"_index":1355,"title":{},"body":{"license.html":{}}}],["result",{"_index":152,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"modules/ApplicationDataModule.html":{},"injectables/ApplicationQuery.html":{},"interfaces/ApplicationState.html":{},"injectables/ApplicationStore.html":{},"interfaces/BasePlugin.html":{},"interfaces/Block.html":{},"interfaces/BlocksMap.html":{},"interfaces/ChangeMap.html":{},"classes/Changed.html":{},"interfaces/EditorJSConfig.html":{},"interfaces/EditorMap.html":{},"components/EditorPageComponent.html":{},"interfaces/Header.html":{},"interfaces/HeaderBlock.html":{},"interfaces/Image.html":{},"interfaces/ImageBlock.html":{},"interfaces/List.html":{},"interfaces/ListBlock.html":{},"modules/MaterialModule.html":{},"interfaces/MenuItem.html":{},"components/NavBarComponent.html":{},"components/NgxEditorJSComponent.html":{},"interfaces/NgxEditorJSConfig.html":{},"directives/NgxEditorJSDirective.html":{},"injectables/NgxEditorJSEffects.html":{},"modules/NgxEditorJSModule.html":{},"injectables/NgxEditorJSPluginService.html":{},"modules/NgxEditorJSPluginServiceModule.html":{},"injectables/NgxEditorJSService.html":{},"modules/NgxEditorjsDemoModule.html":{},"modules/NgxEditorjsNgrxModule.html":{},"modules/NgxEditorjsPluginsModule.html":{},"classes/NotReady.html":{},"interfaces/Page.html":{},"interfaces/PageBlock.html":{},"components/PageContainerComponent.html":{},"modules/PageStoreModule.html":{},"injectables/PagesQuery.html":{},"injectables/PagesService.html":{},"interfaces/PagesState.html":{},"injectables/PagesStore.html":{},"interfaces/Paragraph.html":{},"interfaces/ParagraphBlock.html":{},"injectables/PluginCode.html":{},"modules/PluginCodeModule.html":{},"interfaces/PluginConfig.html":{},"injectables/PluginHeader.html":{},"modules/PluginHeaderModule.html":{},"injectables/PluginImage.html":{},"modules/PluginImageModule.html":{},"injectables/PluginLink.html":{},"modules/PluginLinkModule.html":{},"injectables/PluginList.html":{},"modules/PluginListModule.html":{},"injectables/PluginMarker.html":{},"modules/PluginMarkerModule.html":{},"injectables/PluginParagraph.html":{},"modules/PluginParagraphModule.html":{},"injectables/PluginSimpleImage.html":{},"modules/PluginSimpleImageModule.html":{},"classes/Ready.html":{},"interfaces/ReadyMap.html":{},"classes/SaveEnd.html":{},"classes/SaveStart.html":{},"components/SidebarComponent.html":{},"interfaces/Tag.html":{},"interfaces/ToolSettingsMap.html":{},"changelog.html":{},"contributing.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"index.html":{},"license.html":{},"modules.html":{},"overview.html":{},"todo.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{},"additional-documentation/tinynodes-library-docs.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-readme.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-readme/ngx-editorjs-changelog.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-plugins-readme.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-plugins-readme/ngx-editorjs-plugins-changelog.html":{}}}],["results",{"_index":154,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"modules/ApplicationDataModule.html":{},"injectables/ApplicationQuery.html":{},"interfaces/ApplicationState.html":{},"injectables/ApplicationStore.html":{},"interfaces/BasePlugin.html":{},"interfaces/Block.html":{},"interfaces/BlocksMap.html":{},"interfaces/ChangeMap.html":{},"classes/Changed.html":{},"interfaces/EditorJSConfig.html":{},"interfaces/EditorMap.html":{},"components/EditorPageComponent.html":{},"interfaces/Header.html":{},"interfaces/HeaderBlock.html":{},"interfaces/Image.html":{},"interfaces/ImageBlock.html":{},"interfaces/List.html":{},"interfaces/ListBlock.html":{},"modules/MaterialModule.html":{},"interfaces/MenuItem.html":{},"components/NavBarComponent.html":{},"components/NgxEditorJSComponent.html":{},"interfaces/NgxEditorJSConfig.html":{},"directives/NgxEditorJSDirective.html":{},"injectables/NgxEditorJSEffects.html":{},"modules/NgxEditorJSModule.html":{},"injectables/NgxEditorJSPluginService.html":{},"modules/NgxEditorJSPluginServiceModule.html":{},"injectables/NgxEditorJSService.html":{},"modules/NgxEditorjsDemoModule.html":{},"modules/NgxEditorjsNgrxModule.html":{},"modules/NgxEditorjsPluginsModule.html":{},"classes/NotReady.html":{},"interfaces/Page.html":{},"interfaces/PageBlock.html":{},"components/PageContainerComponent.html":{},"modules/PageStoreModule.html":{},"injectables/PagesQuery.html":{},"injectables/PagesService.html":{},"interfaces/PagesState.html":{},"injectables/PagesStore.html":{},"interfaces/Paragraph.html":{},"interfaces/ParagraphBlock.html":{},"injectables/PluginCode.html":{},"modules/PluginCodeModule.html":{},"interfaces/PluginConfig.html":{},"injectables/PluginHeader.html":{},"modules/PluginHeaderModule.html":{},"injectables/PluginImage.html":{},"modules/PluginImageModule.html":{},"injectables/PluginLink.html":{},"modules/PluginLinkModule.html":{},"injectables/PluginList.html":{},"modules/PluginListModule.html":{},"injectables/PluginMarker.html":{},"modules/PluginMarkerModule.html":{},"injectables/PluginParagraph.html":{},"modules/PluginParagraphModule.html":{},"injectables/PluginSimpleImage.html":{},"modules/PluginSimpleImageModule.html":{},"classes/Ready.html":{},"interfaces/ReadyMap.html":{},"classes/SaveEnd.html":{},"classes/SaveStart.html":{},"components/SidebarComponent.html":{},"interfaces/Tag.html":{},"interfaces/ToolSettingsMap.html":{},"changelog.html":{},"contributing.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"index.html":{},"license.html":{},"modules.html":{},"overview.html":{},"todo.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{},"additional-documentation/tinynodes-library-docs.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-readme.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-readme/ngx-editorjs-changelog.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-plugins-readme.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-plugins-readme/ngx-editorjs-plugins-changelog.html":{}}}],["return",{"_index":243,"title":{},"body":{"injectables/AppService.html":{},"interfaces/BasePlugin.html":{},"components/EditorPageComponent.html":{},"directives/NgxEditorJSDirective.html":{},"injectables/NgxEditorJSEffects.html":{},"modules/NgxEditorJSModule.html":{},"injectables/NgxEditorJSPluginService.html":{},"injectables/NgxEditorJSService.html":{},"components/PageContainerComponent.html":{},"injectables/PagesService.html":{},"injectables/PluginCode.html":{},"interfaces/PluginConfig.html":{},"injectables/PluginHeader.html":{},"injectables/PluginImage.html":{},"injectables/PluginLink.html":{},"injectables/PluginList.html":{},"injectables/PluginMarker.html":{},"injectables/PluginParagraph.html":{},"injectables/PluginSimpleImage.html":{},"interfaces/ToolSettingsMap.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-readme.html":{}}}],["returned",{"_index":287,"title":{},"body":{"interfaces/BasePlugin.html":{},"injectables/NgxEditorJSService.html":{},"interfaces/PluginConfig.html":{},"interfaces/ToolSettingsMap.html":{}}}],["returns",{"_index":59,"title":{},"body":{"components/AppComponent.html":{},"injectables/AppService.html":{},"injectables/ApplicationStore.html":{},"components/EditorPageComponent.html":{},"components/NavBarComponent.html":{},"directives/NgxEditorJSDirective.html":{},"modules/NgxEditorJSModule.html":{},"injectables/NgxEditorJSPluginService.html":{},"injectables/NgxEditorJSService.html":{},"injectables/PagesService.html":{},"injectables/PluginCode.html":{},"injectables/PluginHeader.html":{},"injectables/PluginImage.html":{},"injectables/PluginLink.html":{},"injectables/PluginList.html":{},"injectables/PluginMarker.html":{},"injectables/PluginParagraph.html":{},"injectables/PluginSimpleImage.html":{},"components/SidebarComponent.html":{},"miscellaneous/functions.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-readme/ngx-editorjs-changelog.html":{}}}],["reviewed",{"_index":1238,"title":{},"body":{"contributing.html":{}}}],["reviewer",{"_index":1105,"title":{},"body":{"contributing.html":{}}}],["right",{"_index":121,"title":{},"body":{"components/AppComponent.html":{},"components/NavBarComponent.html":{},"contributing.html":{}}}],["rights",{"_index":1357,"title":{},"body":{"license.html":{}}}],["root",{"_index":17,"title":{},"body":{"components/AppComponent.html":{},"modules/NgxEditorJSModule.html":{},"injectables/NgxEditorJSPluginService.html":{},"injectables/NgxEditorJSService.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-readme/ngx-editorjs-changelog.html":{}}}],["root'},{'name",{"_index":137,"title":{},"body":{"components/AppComponent.html":{},"components/EditorPageComponent.html":{},"components/NavBarComponent.html":{},"components/NgxEditorJSComponent.html":{},"components/PageContainerComponent.html":{},"components/SidebarComponent.html":{}}}],["route",{"_index":1432,"title":{},"body":{"miscellaneous/variables.html":{}}}],["router",{"_index":198,"title":{},"body":{"modules/AppModule.html":{},"dependencies.html":{}}}],["routerlink",{"_index":265,"title":{},"body":{"interfaces/ApplicationState.html":{},"interfaces/MenuItem.html":{}}}],["routermodule",{"_index":193,"title":{},"body":{"modules/AppModule.html":{},"modules/NgxEditorjsDemoModule.html":{}}}],["routermodule.forchild(ngxeditorjsdemoroutes",{"_index":821,"title":{},"body":{"modules/NgxEditorjsDemoModule.html":{}}}],["routermodule.forroot",{"_index":219,"title":{},"body":{"modules/AppModule.html":{}}}],["routes",{"_index":1436,"title":{},"body":{"miscellaneous/variables.html":{}}}],["run",{"_index":1337,"title":{},"body":{"index.html":{}}}],["rxjs",{"_index":76,"title":{},"body":{"components/AppComponent.html":{},"injectables/AppService.html":{},"interfaces/BlocksMap.html":{},"interfaces/ChangeMap.html":{},"interfaces/EditorMap.html":{},"components/EditorPageComponent.html":{},"injectables/NgxEditorJSEffects.html":{},"injectables/NgxEditorJSService.html":{},"components/PageContainerComponent.html":{},"injectables/PagesService.html":{},"interfaces/ReadyMap.html":{},"components/SidebarComponent.html":{},"dependencies.html":{}}}],["rxjs/operators",{"_index":79,"title":{},"body":{"components/AppComponent.html":{},"components/EditorPageComponent.html":{},"injectables/NgxEditorJSEffects.html":{},"components/SidebarComponent.html":{}}}],["sanitizer",{"_index":403,"title":{},"body":{"interfaces/EditorJSConfig.html":{},"interfaces/NgxEditorJSConfig.html":{}}}],["sanitizerconfig",{"_index":422,"title":{},"body":{"interfaces/EditorJSConfig.html":{},"interfaces/NgxEditorJSConfig.html":{}}}],["save",{"_index":384,"title":{},"body":{"classes/Changed.html":{},"injectables/NgxEditorJSEffects.html":{},"injectables/NgxEditorJSService.html":{},"classes/NotReady.html":{},"injectables/PagesService.html":{},"classes/Ready.html":{},"classes/SaveEnd.html":{},"classes/SaveStart.html":{},"miscellaneous/enumerations.html":{},"todo.html":{}}}],["save(holder",{"_index":750,"title":{},"body":{"injectables/NgxEditorJSService.html":{}}}],["saveend",{"_index":385,"title":{"classes/SaveEnd.html":{}},"body":{"classes/Changed.html":{},"injectables/NgxEditorJSEffects.html":{},"classes/NotReady.html":{},"classes/Ready.html":{},"classes/SaveEnd.html":{},"classes/SaveStart.html":{},"coverage.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/typealiases.html":{}}}],["savestart",{"_index":382,"title":{"classes/SaveStart.html":{}},"body":{"classes/Changed.html":{},"injectables/NgxEditorJSEffects.html":{},"classes/NotReady.html":{},"classes/Ready.html":{},"classes/SaveEnd.html":{},"classes/SaveStart.html":{},"coverage.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/typealiases.html":{}}}],["scheme",{"_index":1096,"title":{},"body":{"contributing.html":{}}}],["scope",{"_index":1208,"title":{},"body":{"contributing.html":{}}}],["scripts",{"_index":1052,"title":{},"body":{"changelog.html":{}}}],["second",{"_index":1104,"title":{},"body":{"contributing.html":{}}}],["see",{"_index":740,"title":{},"body":{"injectables/NgxEditorJSService.html":{},"modules/PluginCodeModule.html":{},"modules/PluginHeaderModule.html":{},"modules/PluginImageModule.html":{},"modules/PluginLinkModule.html":{},"modules/PluginListModule.html":{},"modules/PluginMarkerModule.html":{},"modules/PluginParagraphModule.html":{},"modules/PluginSimpleImageModule.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-readme.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-plugins-readme/ngx-editorjs-plugins-changelog.html":{}}}],["selection",{"_index":1417,"title":{},"body":{"todo.html":{}}}],["selector",{"_index":23,"title":{},"body":{"components/AppComponent.html":{},"components/EditorPageComponent.html":{},"components/NavBarComponent.html":{},"components/NgxEditorJSComponent.html":{},"directives/NgxEditorJSDirective.html":{},"components/PageContainerComponent.html":{},"components/SidebarComponent.html":{}}}],["sell",{"_index":1363,"title":{},"body":{"license.html":{}}}],["semantic",{"_index":1504,"title":{},"body":{"additional-documentation/tinynodes-library-docs/ngx-editorjs-readme/ngx-editorjs-changelog.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-plugins-readme/ngx-editorjs-plugins-changelog.html":{}}}],["semver",{"_index":1097,"title":{},"body":{"contributing.html":{}}}],["separately",{"_index":1252,"title":{},"body":{"contributing.html":{}}}],["service",{"_index":508,"title":{},"body":{"components/NgxEditorJSComponent.html":{},"directives/NgxEditorJSDirective.html":{},"injectables/NgxEditorJSPluginService.html":{},"modules/NgxEditorJSPluginServiceModule.html":{},"injectables/NgxEditorJSService.html":{},"injectables/PagesService.html":{},"index.html":{},"todo.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-readme.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-readme/ngx-editorjs-changelog.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-plugins-readme.html":{}}}],["services",{"_index":533,"title":{},"body":{"directives/NgxEditorJSDirective.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-readme.html":{}}}],["services/editorjs.service",{"_index":519,"title":{},"body":{"components/NgxEditorJSComponent.html":{},"directives/NgxEditorJSDirective.html":{},"modules/NgxEditorJSModule.html":{}}}],["services/plugins.module",{"_index":852,"title":{},"body":{"modules/NgxEditorjsPluginsModule.html":{}}}],["set",{"_index":419,"title":{},"body":{"interfaces/EditorJSConfig.html":{},"components/NgxEditorJSComponent.html":{},"interfaces/NgxEditorJSConfig.html":{},"modules/NgxEditorJSModule.html":{},"injectables/NgxEditorJSService.html":{},"miscellaneous/functions.html":{},"index.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-readme.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-readme/ngx-editorjs-changelog.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-plugins-readme.html":{}}}],["setblocks",{"_index":888,"title":{},"body":{"injectables/PagesService.html":{}}}],["setblocks(pageid",{"_index":902,"title":{},"body":{"injectables/PagesService.html":{}}}],["sets",{"_index":612,"title":{},"body":{"modules/NgxEditorJSModule.html":{},"injectables/NgxEditorJSService.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-readme.html":{}}}],["setting",{"_index":1180,"title":{},"body":{"contributing.html":{},"todo.html":{}}}],["settings",{"_index":286,"title":{},"body":{"interfaces/BasePlugin.html":{},"injectables/NgxEditorJSService.html":{},"injectables/PluginCode.html":{},"interfaces/PluginConfig.html":{},"injectables/PluginHeader.html":{},"injectables/PluginImage.html":{},"injectables/PluginLink.html":{},"injectables/PluginList.html":{},"injectables/PluginMarker.html":{},"injectables/PluginParagraph.html":{},"injectables/PluginSimpleImage.html":{},"interfaces/ToolSettingsMap.html":{}}}],["several",{"_index":696,"title":{},"body":{"injectables/NgxEditorJSService.html":{},"modules/NgxEditorjsPluginsModule.html":{},"changelog.html":{}}}],["sexual",{"_index":1133,"title":{},"body":{"contributing.html":{}}}],["sexualized",{"_index":1158,"title":{},"body":{"contributing.html":{}}}],["shall",{"_index":1372,"title":{},"body":{"license.html":{}}}],["shift+ctrl+m",{"_index":1467,"title":{},"body":{"additional-documentation/tinynodes-library-docs/ngx-editorjs-readme.html":{}}}],["shortcut",{"_index":284,"title":{},"body":{"interfaces/BasePlugin.html":{},"components/NgxEditorJSComponent.html":{},"injectables/NgxEditorJSPluginService.html":{},"interfaces/PluginConfig.html":{},"injectables/PluginMarker.html":{},"interfaces/ToolSettingsMap.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-readme.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-readme/ngx-editorjs-changelog.html":{}}}],["showing",{"_index":1152,"title":{},"body":{"contributing.html":{}}}],["shown",{"_index":411,"title":{},"body":{"interfaces/EditorJSConfig.html":{},"interfaces/NgxEditorJSConfig.html":{}}}],["sidebar",{"_index":70,"title":{},"body":{"components/AppComponent.html":{},"components/EditorPageComponent.html":{},"components/NavBarComponent.html":{},"components/NgxEditorJSComponent.html":{},"components/PageContainerComponent.html":{},"components/SidebarComponent.html":{}}}],["sidebar.component.html",{"_index":1015,"title":{},"body":{"components/SidebarComponent.html":{}}}],["sidebar.component.scss",{"_index":1014,"title":{},"body":{"components/SidebarComponent.html":{}}}],["sidebarcomponent",{"_index":147,"title":{"components/SidebarComponent.html":{}},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"components/EditorPageComponent.html":{},"components/NavBarComponent.html":{},"components/NgxEditorJSComponent.html":{},"components/PageContainerComponent.html":{},"components/SidebarComponent.html":{},"coverage.html":{},"overview.html":{}}}],["sidenav",{"_index":33,"title":{},"body":{"components/AppComponent.html":{},"components/SidebarComponent.html":{}}}],["sign",{"_index":1100,"title":{},"body":{"contributing.html":{}}}],["simple",{"_index":998,"title":{},"body":{"injectables/PluginSimpleImage.html":{},"modules/PluginSimpleImageModule.html":{}}}],["simplechanges",{"_index":547,"title":{},"body":{"directives/NgxEditorJSDirective.html":{}}}],["simpleimage",{"_index":1000,"title":{},"body":{"injectables/PluginSimpleImage.html":{}}}],["single",{"_index":177,"title":{},"body":{"modules/AppModule.html":{},"injectables/NgxEditorJSPluginService.html":{}}}],["singleton",{"_index":644,"title":{},"body":{"injectables/NgxEditorJSPluginService.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-plugins-readme.html":{}}}],["site",{"_index":1026,"title":{},"body":{"changelog.html":{},"index.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-readme/ngx-editorjs-changelog.html":{}}}],["size",{"_index":1122,"title":{},"body":{"contributing.html":{}}}],["skipself",{"_index":618,"title":{},"body":{"modules/NgxEditorJSModule.html":{}}}],["small",{"_index":1061,"title":{},"body":{"changelog.html":{}}}],["social",{"_index":1217,"title":{},"body":{"contributing.html":{}}}],["software",{"_index":1352,"title":{},"body":{"license.html":{}}}],["solid",{"_index":523,"title":{},"body":{"components/NgxEditorJSComponent.html":{}}}],["source",{"_index":4,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"modules/ApplicationDataModule.html":{},"injectables/ApplicationQuery.html":{},"interfaces/ApplicationState.html":{},"injectables/ApplicationStore.html":{},"interfaces/BasePlugin.html":{},"interfaces/Block.html":{},"interfaces/BlocksMap.html":{},"interfaces/ChangeMap.html":{},"classes/Changed.html":{},"interfaces/EditorJSConfig.html":{},"interfaces/EditorMap.html":{},"components/EditorPageComponent.html":{},"interfaces/Header.html":{},"interfaces/HeaderBlock.html":{},"interfaces/Image.html":{},"interfaces/ImageBlock.html":{},"interfaces/List.html":{},"interfaces/ListBlock.html":{},"modules/MaterialModule.html":{},"interfaces/MenuItem.html":{},"components/NavBarComponent.html":{},"components/NgxEditorJSComponent.html":{},"interfaces/NgxEditorJSConfig.html":{},"directives/NgxEditorJSDirective.html":{},"injectables/NgxEditorJSEffects.html":{},"modules/NgxEditorJSModule.html":{},"injectables/NgxEditorJSPluginService.html":{},"modules/NgxEditorJSPluginServiceModule.html":{},"injectables/NgxEditorJSService.html":{},"modules/NgxEditorjsDemoModule.html":{},"modules/NgxEditorjsNgrxModule.html":{},"modules/NgxEditorjsPluginsModule.html":{},"classes/NotReady.html":{},"interfaces/Page.html":{},"interfaces/PageBlock.html":{},"components/PageContainerComponent.html":{},"modules/PageStoreModule.html":{},"injectables/PagesQuery.html":{},"injectables/PagesService.html":{},"interfaces/PagesState.html":{},"injectables/PagesStore.html":{},"interfaces/Paragraph.html":{},"interfaces/ParagraphBlock.html":{},"injectables/PluginCode.html":{},"modules/PluginCodeModule.html":{},"interfaces/PluginConfig.html":{},"injectables/PluginHeader.html":{},"modules/PluginHeaderModule.html":{},"injectables/PluginImage.html":{},"modules/PluginImageModule.html":{},"injectables/PluginLink.html":{},"modules/PluginLinkModule.html":{},"injectables/PluginList.html":{},"modules/PluginListModule.html":{},"injectables/PluginMarker.html":{},"modules/PluginMarkerModule.html":{},"injectables/PluginParagraph.html":{},"modules/PluginParagraphModule.html":{},"injectables/PluginSimpleImage.html":{},"modules/PluginSimpleImageModule.html":{},"classes/Ready.html":{},"interfaces/ReadyMap.html":{},"classes/SaveEnd.html":{},"classes/SaveStart.html":{},"components/SidebarComponent.html":{},"interfaces/Tag.html":{},"interfaces/ToolSettingsMap.html":{}}}],["spaces",{"_index":1211,"title":{},"body":{"contributing.html":{}}}],["specific",{"_index":1249,"title":{},"body":{"contributing.html":{}}}],["standard",{"_index":1452,"title":{},"body":{"additional-documentation/tinynodes-library-docs/ngx-editorjs-readme.html":{}}}],["standards",{"_index":1135,"title":{},"body":{"contributing.html":{}}}],["start",{"_index":383,"title":{},"body":{"classes/Changed.html":{},"classes/NotReady.html":{},"classes/Ready.html":{},"classes/SaveEnd.html":{},"classes/SaveStart.html":{},"miscellaneous/enumerations.html":{}}}],["started",{"_index":1022,"title":{"changelog.html":{},"contributing.html":{},"index.html":{},"license.html":{},"todo.html":{}},"body":{}}],["state",{"_index":360,"title":{},"body":{"interfaces/BlocksMap.html":{},"interfaces/ChangeMap.html":{},"interfaces/EditorMap.html":{},"injectables/NgxEditorJSService.html":{},"interfaces/ReadyMap.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-readme.html":{}}}],["statements",{"_index":1271,"title":{},"body":{"coverage.html":{}}}],["states",{"_index":699,"title":{},"body":{"injectables/NgxEditorJSService.html":{}}}],["static",{"_index":608,"title":{},"body":{"modules/NgxEditorJSModule.html":{}}}],["store",{"_index":199,"title":{},"body":{"modules/AppModule.html":{},"injectables/AppService.html":{},"injectables/ApplicationQuery.html":{},"injectables/ApplicationStore.html":{},"injectables/NgxEditorJSPluginService.html":{},"injectables/PagesQuery.html":{},"injectables/PagesService.html":{},"dependencies.html":{},"todo.html":{}}}],["store/app/application.module",{"_index":216,"title":{},"body":{"modules/AppModule.html":{}}}],["store/app/application.service",{"_index":77,"title":{},"body":{"components/AppComponent.html":{},"components/NavBarComponent.html":{},"components/SidebarComponent.html":{}}}],["store/pages/pages.models",{"_index":867,"title":{},"body":{"components/PageContainerComponent.html":{}}}],["store/pages/pages.module",{"_index":820,"title":{},"body":{"modules/NgxEditorjsDemoModule.html":{}}}],["store/pages/pages.service",{"_index":868,"title":{},"body":{"components/PageContainerComponent.html":{}}}],["storeconfig",{"_index":272,"title":{},"body":{"injectables/ApplicationStore.html":{},"interfaces/PagesState.html":{},"injectables/PagesStore.html":{}}}],["stored",{"_index":654,"title":{},"body":{"injectables/NgxEditorJSPluginService.html":{}}}],["stores",{"_index":1521,"title":{},"body":{"additional-documentation/tinynodes-library-docs/ngx-editorjs-readme/ngx-editorjs-changelog.html":{}}}],["stretch",{"_index":344,"title":{},"body":{"interfaces/Block.html":{},"interfaces/Header.html":{},"interfaces/HeaderBlock.html":{},"interfaces/Image.html":{},"interfaces/ImageBlock.html":{},"interfaces/List.html":{},"interfaces/ListBlock.html":{},"interfaces/Paragraph.html":{},"interfaces/ParagraphBlock.html":{}}}],["stretched",{"_index":345,"title":{},"body":{"interfaces/Block.html":{},"interfaces/Header.html":{},"interfaces/HeaderBlock.html":{},"interfaces/Image.html":{},"interfaces/ImageBlock.html":{},"interfaces/List.html":{},"interfaces/ListBlock.html":{},"interfaces/Paragraph.html":{},"interfaces/ParagraphBlock.html":{}}}],["string",{"_index":266,"title":{},"body":{"interfaces/ApplicationState.html":{},"interfaces/BasePlugin.html":{},"interfaces/Block.html":{},"interfaces/BlocksMap.html":{},"interfaces/ChangeMap.html":{},"classes/Changed.html":{},"interfaces/EditorJSConfig.html":{},"interfaces/EditorMap.html":{},"interfaces/Header.html":{},"interfaces/HeaderBlock.html":{},"interfaces/Image.html":{},"interfaces/ImageBlock.html":{},"interfaces/List.html":{},"interfaces/ListBlock.html":{},"interfaces/MenuItem.html":{},"components/NgxEditorJSComponent.html":{},"interfaces/NgxEditorJSConfig.html":{},"injectables/NgxEditorJSPluginService.html":{},"injectables/NgxEditorJSService.html":{},"classes/NotReady.html":{},"interfaces/Page.html":{},"interfaces/PageBlock.html":{},"interfaces/Paragraph.html":{},"interfaces/ParagraphBlock.html":{},"interfaces/PluginConfig.html":{},"injectables/PluginMarker.html":{},"classes/Ready.html":{},"interfaces/ReadyMap.html":{},"classes/SaveEnd.html":{},"classes/SaveStart.html":{},"interfaces/Tag.html":{},"interfaces/ToolSettingsMap.html":{},"miscellaneous/typealiases.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-readme.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-readme/ngx-editorjs-changelog.html":{}}}],["style",{"_index":109,"title":{},"body":{"components/AppComponent.html":{},"interfaces/Block.html":{},"interfaces/Header.html":{},"interfaces/HeaderBlock.html":{},"interfaces/Image.html":{},"interfaces/ImageBlock.html":{},"interfaces/List.html":{},"interfaces/ListBlock.html":{},"components/NavBarComponent.html":{},"interfaces/Paragraph.html":{},"interfaces/ParagraphBlock.html":{}}}],["styles",{"_index":6,"title":{},"body":{"components/AppComponent.html":{},"interfaces/Block.html":{},"components/EditorPageComponent.html":{},"interfaces/Header.html":{},"interfaces/HeaderBlock.html":{},"interfaces/Image.html":{},"interfaces/ImageBlock.html":{},"interfaces/List.html":{},"interfaces/ListBlock.html":{},"components/NavBarComponent.html":{},"components/NgxEditorJSComponent.html":{},"components/PageContainerComponent.html":{},"interfaces/Paragraph.html":{},"interfaces/ParagraphBlock.html":{},"components/SidebarComponent.html":{},"miscellaneous/typealiases.html":{}}}],["styleurls",{"_index":25,"title":{},"body":{"components/AppComponent.html":{},"components/EditorPageComponent.html":{},"components/NavBarComponent.html":{},"components/NgxEditorJSComponent.html":{},"components/PageContainerComponent.html":{},"components/SidebarComponent.html":{}}}],["subject",{"_index":64,"title":{},"body":{"components/AppComponent.html":{},"components/SidebarComponent.html":{},"license.html":{}}}],["sublicense",{"_index":1361,"title":{},"body":{"license.html":{}}}],["subscribed",{"_index":746,"title":{},"body":{"injectables/NgxEditorJSService.html":{}}}],["substantial",{"_index":1374,"title":{},"body":{"license.html":{}}}],["such",{"_index":1171,"title":{},"body":{"contributing.html":{}}}],["sunday",{"_index":1032,"title":{},"body":{"changelog.html":{}}}],["super",{"_index":273,"title":{},"body":{"injectables/ApplicationStore.html":{},"interfaces/PagesState.html":{},"injectables/PagesStore.html":{}}}],["super(store",{"_index":258,"title":{},"body":{"injectables/ApplicationQuery.html":{},"injectables/PagesQuery.html":{}}}],["support",{"_index":1399,"title":{},"body":{"modules.html":{},"todo.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-readme.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-readme/ngx-editorjs-changelog.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-plugins-readme.html":{}}}],["supports",{"_index":320,"title":{},"body":{"interfaces/Block.html":{},"interfaces/Header.html":{},"interfaces/HeaderBlock.html":{},"interfaces/Image.html":{},"interfaces/ImageBlock.html":{},"interfaces/List.html":{},"interfaces/ListBlock.html":{},"interfaces/Paragraph.html":{},"interfaces/ParagraphBlock.html":{},"miscellaneous/typealiases.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-readme/ngx-editorjs-changelog.html":{}}}],["svg",{"_index":1400,"title":{},"body":{"modules.html":{}}}],["switchmap",{"_index":462,"title":{},"body":{"components/EditorPageComponent.html":{},"injectables/NgxEditorJSEffects.html":{}}}],["switchmap(([form",{"_index":469,"title":{},"body":{"components/EditorPageComponent.html":{}}}],["t",{"_index":318,"title":{},"body":{"interfaces/Block.html":{},"interfaces/Header.html":{},"interfaces/HeaderBlock.html":{},"interfaces/Image.html":{},"interfaces/ImageBlock.html":{},"interfaces/List.html":{},"interfaces/ListBlock.html":{},"interfaces/Paragraph.html":{},"interfaces/ParagraphBlock.html":{}}}],["table",{"_index":1301,"title":{},"body":{"coverage.html":{}}}],["tablesort(document.getelementbyid('coverage",{"_index":1300,"title":{},"body":{"coverage.html":{}}}],["tag",{"_index":857,"title":{"interfaces/Tag.html":{}},"body":{"interfaces/Page.html":{},"interfaces/PageBlock.html":{},"interfaces/Tag.html":{},"coverage.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-readme.html":{}}}],["tags",{"_index":1412,"title":{},"body":{"todo.html":{}}}],["take",{"_index":1186,"title":{},"body":{"contributing.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-readme.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-readme/ngx-editorjs-changelog.html":{}}}],["takes",{"_index":607,"title":{},"body":{"modules/NgxEditorJSModule.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-readme.html":{}}}],["takeuntil",{"_index":78,"title":{},"body":{"components/AppComponent.html":{},"components/SidebarComponent.html":{}}}],["tane",{"_index":1338,"title":{},"body":{"index.html":{},"license.html":{}}}],["tap",{"_index":463,"title":{},"body":{"components/EditorPageComponent.html":{},"injectables/NgxEditorJSEffects.html":{}}}],["team",{"_index":1235,"title":{},"body":{"contributing.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-readme.html":{}}}],["template",{"_index":5,"title":{},"body":{"components/AppComponent.html":{},"components/EditorPageComponent.html":{},"components/NavBarComponent.html":{},"components/NgxEditorJSComponent.html":{},"components/PageContainerComponent.html":{},"components/SidebarComponent.html":{}}}],["templateurl",{"_index":27,"title":{},"body":{"components/AppComponent.html":{},"components/EditorPageComponent.html":{},"components/NavBarComponent.html":{},"components/NgxEditorJSComponent.html":{},"components/PageContainerComponent.html":{},"components/SidebarComponent.html":{}}}],["temporarily",{"_index":1200,"title":{},"body":{"contributing.html":{}}}],["temporary",{"_index":1256,"title":{},"body":{"contributing.html":{}}}],["tests",{"_index":1486,"title":{},"body":{"additional-documentation/tinynodes-library-docs/ngx-editorjs-readme.html":{}}}],["text",{"_index":98,"title":{},"body":{"components/AppComponent.html":{},"interfaces/Block.html":{},"interfaces/Header.html":{},"interfaces/HeaderBlock.html":{},"interfaces/Image.html":{},"interfaces/ImageBlock.html":{},"interfaces/List.html":{},"interfaces/ListBlock.html":{},"components/NavBarComponent.html":{},"components/NgxEditorJSComponent.html":{},"interfaces/Paragraph.html":{},"interfaces/ParagraphBlock.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-plugins-readme.html":{}}}],["this._value().hidden",{"_index":276,"title":{},"body":{"injectables/ApplicationStore.html":{}}}],["this.actions$.pipe",{"_index":571,"title":{},"body":{"injectables/NgxEditorJSEffects.html":{}}}],["this.add(key",{"_index":679,"title":{},"body":{"injectables/NgxEditorJSPluginService.html":{}}}],["this.app.hidden.pipe(takeuntil(this.ondestroy$)).subscribe(value",{"_index":84,"title":{},"body":{"components/AppComponent.html":{},"components/SidebarComponent.html":{}}}],["this.app.togglesidebar",{"_index":494,"title":{},"body":{"components/NavBarComponent.html":{}}}],["this.blocks",{"_index":563,"title":{},"body":{"directives/NgxEditorJSDirective.html":{}}}],["this.blocksmap[holder",{"_index":781,"title":{},"body":{"injectables/NgxEditorJSService.html":{}}}],["this.blocksmap[holder].asobservable",{"_index":782,"title":{},"body":{"injectables/NgxEditorJSService.html":{}}}],["this.blocksmap[holder].next(outputdata.blocks",{"_index":791,"title":{},"body":{"injectables/NgxEditorJSService.html":{}}}],["this.changemap[holder",{"_index":767,"title":{},"body":{"injectables/NgxEditorJSService.html":{}}}],["this.changemap[holder].asobservable",{"_index":784,"title":{},"body":{"injectables/NgxEditorJSService.html":{}}}],["this.changemap[holder].next(0",{"_index":768,"title":{},"body":{"injectables/NgxEditorJSService.html":{}}}],["this.changemap[holder].next(date.now",{"_index":777,"title":{},"body":{"injectables/NgxEditorJSService.html":{}}}],["this.changemap[holder].next(outputdata.time",{"_index":792,"title":{},"body":{"injectables/NgxEditorJSService.html":{}}}],["this.config.editorjs",{"_index":771,"title":{},"body":{"injectables/NgxEditorJSService.html":{}}}],["this.createeditor(holder",{"_index":780,"title":{},"body":{"injectables/NgxEditorJSService.html":{}}}],["this.destroy(holder",{"_index":763,"title":{},"body":{"injectables/NgxEditorJSService.html":{}}}],["this.editor.blocks",{"_index":467,"title":{},"body":{"components/EditorPageComponent.html":{}}}],["this.editormap[holder",{"_index":762,"title":{},"body":{"injectables/NgxEditorJSService.html":{}}}],["this.editormap[holder].blocks.clear",{"_index":786,"title":{},"body":{"injectables/NgxEditorJSService.html":{}}}],["this.editormap[holder].blocks.render",{"_index":787,"title":{},"body":{"injectables/NgxEditorJSService.html":{}}}],["this.editormap[holder].destroy",{"_index":797,"title":{},"body":{"injectables/NgxEditorJSService.html":{}}}],["this.editormap[holder].saver.save",{"_index":790,"title":{},"body":{"injectables/NgxEditorJSService.html":{}}}],["this.editorservice",{"_index":557,"title":{},"body":{"directives/NgxEditorJSDirective.html":{}}}],["this.editorservice.createeditor(this.el.nativeelement.id",{"_index":562,"title":{},"body":{"directives/NgxEditorJSDirective.html":{}}}],["this.editorservice.destroy(this.el.nativeelement.id",{"_index":564,"title":{},"body":{"directives/NgxEditorJSDirective.html":{}}}],["this.editorservice.getblocks(action.payload.holder",{"_index":576,"title":{},"body":{"injectables/NgxEditorJSEffects.html":{}}}],["this.editorservice.geteditor(this.el.nativeelement.id",{"_index":556,"title":{},"body":{"directives/NgxEditorJSDirective.html":{}}}],["this.editorservice.save(action.payload.holder",{"_index":574,"title":{},"body":{"injectables/NgxEditorJSEffects.html":{}}}],["this.editorservice.update(this.el.nativeelement.id",{"_index":560,"title":{},"body":{"directives/NgxEditorJSDirective.html":{}}}],["this.fb.array",{"_index":453,"title":{},"body":{"components/EditorPageComponent.html":{}}}],["this.fb.group",{"_index":450,"title":{},"body":{"components/EditorPageComponent.html":{}}}],["this.form",{"_index":464,"title":{},"body":{"components/EditorPageComponent.html":{}}}],["this.ondestroy$.complete",{"_index":88,"title":{},"body":{"components/AppComponent.html":{},"components/SidebarComponent.html":{}}}],["this.ondestroy$.next(true",{"_index":87,"title":{},"body":{"components/AppComponent.html":{},"components/SidebarComponent.html":{}}}],["this.pagedata",{"_index":465,"title":{},"body":{"components/EditorPageComponent.html":{}}}],["this.pagedata$.pipe",{"_index":468,"title":{},"body":{"components/EditorPageComponent.html":{}}}],["this.pages",{"_index":912,"title":{},"body":{"injectables/PagesService.html":{}}}],["this.pagesservice.pages",{"_index":869,"title":{},"body":{"components/PageContainerComponent.html":{}}}],["this.plugins.gettools(excludetools",{"_index":772,"title":{},"body":{"injectables/NgxEditorJSService.html":{}}}],["this.pluginsmap",{"_index":683,"title":{},"body":{"injectables/NgxEditorJSPluginService.html":{}}}],["this.pluginsmap[key",{"_index":680,"title":{},"body":{"injectables/NgxEditorJSPluginService.html":{}}}],["this.query.select('hidden",{"_index":244,"title":{},"body":{"injectables/AppService.html":{}}}],["this.query.selectall",{"_index":913,"title":{},"body":{"injectables/PagesService.html":{}}}],["this.readymap[holder",{"_index":764,"title":{},"body":{"injectables/NgxEditorJSService.html":{}}}],["this.readymap[holder].asobservable",{"_index":783,"title":{},"body":{"injectables/NgxEditorJSService.html":{}}}],["this.readymap[holder].next(false",{"_index":765,"title":{},"body":{"injectables/NgxEditorJSService.html":{}}}],["this.readymap[holder].next(true",{"_index":775,"title":{},"body":{"injectables/NgxEditorJSService.html":{}}}],["this.save(holder",{"_index":778,"title":{},"body":{"injectables/NgxEditorJSService.html":{}}}],["this.sidenav.close",{"_index":85,"title":{},"body":{"components/AppComponent.html":{},"components/SidebarComponent.html":{}}}],["this.sidenav.open",{"_index":86,"title":{},"body":{"components/AppComponent.html":{},"components/SidebarComponent.html":{}}}],["this.store._value().hidden",{"_index":246,"title":{},"body":{"injectables/AppService.html":{}}}],["this.store.add(newpage",{"_index":915,"title":{},"body":{"injectables/PagesService.html":{}}}],["this.store.remove(pageid",{"_index":918,"title":{},"body":{"injectables/PagesService.html":{}}}],["this.store.update",{"_index":245,"title":{},"body":{"injectables/AppService.html":{}}}],["this.store.update(pageid",{"_index":919,"title":{},"body":{"injectables/PagesService.html":{}}}],["this.store.upsert(page.id",{"_index":917,"title":{},"body":{"injectables/PagesService.html":{}}}],["this.update",{"_index":275,"title":{},"body":{"injectables/ApplicationStore.html":{}}}],["this.zone.run",{"_index":770,"title":{},"body":{"injectables/NgxEditorJSService.html":{}}}],["this.zone.run(async",{"_index":788,"title":{},"body":{"injectables/NgxEditorJSService.html":{}}}],["this[mapkay][holder",{"_index":794,"title":{},"body":{"injectables/NgxEditorJSService.html":{}}}],["this[mapkay][holder].complete",{"_index":796,"title":{},"body":{"injectables/NgxEditorJSService.html":{}}}],["this[mapkay][holder].next(value",{"_index":795,"title":{},"body":{"injectables/NgxEditorJSService.html":{}}}],["threatening",{"_index":1205,"title":{},"body":{"contributing.html":{}}}],["throw",{"_index":735,"title":{},"body":{"injectables/NgxEditorJSService.html":{}}}],["time",{"_index":580,"title":{},"body":{"injectables/NgxEditorJSEffects.html":{},"injectables/NgxEditorJSService.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-readme.html":{}}}],["timestamp",{"_index":362,"title":{},"body":{"interfaces/BlocksMap.html":{},"interfaces/ChangeMap.html":{},"interfaces/EditorMap.html":{},"injectables/NgxEditorJSService.html":{},"interfaces/ReadyMap.html":{}}}],["tinynodes",{"_index":24,"title":{"additional-documentation/tinynodes-library-docs.html":{}},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"components/EditorPageComponent.html":{},"components/NavBarComponent.html":{},"components/NgxEditorJSComponent.html":{},"components/PageContainerComponent.html":{},"components/SidebarComponent.html":{},"changelog.html":{},"coverage.html":{},"miscellaneous/functions.html":{},"index.html":{},"license.html":{},"todo.html":{},"miscellaneous/variables.html":{},"additional-documentation/tinynodes-library-docs.html":{}}}],["tinynodes/ngx",{"_index":202,"title":{},"body":{"modules/AppModule.html":{},"components/EditorPageComponent.html":{},"injectables/NgxEditorJSEffects.html":{},"modules/NgxEditorJSModule.html":{},"injectables/NgxEditorJSService.html":{},"modules/NgxEditorjsDemoModule.html":{},"modules/NgxEditorjsNgrxModule.html":{},"interfaces/Page.html":{},"interfaces/PageBlock.html":{},"components/PageContainerComponent.html":{},"injectables/PagesService.html":{},"interfaces/Tag.html":{},"changelog.html":{},"index.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-readme.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-readme/ngx-editorjs-changelog.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-plugins-readme.html":{}}}],["tinynodes/src/app/app.module.ts",{"_index":174,"title":{},"body":{"modules/AppModule.html":{}}}],["tinynodes/src/app/app.routes.ts",{"_index":1276,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["tinynodes/src/app/components/app",{"_index":11,"title":{},"body":{"components/AppComponent.html":{},"coverage.html":{}}}],["tinynodes/src/app/components/nav",{"_index":486,"title":{},"body":{"components/NavBarComponent.html":{},"coverage.html":{}}}],["tinynodes/src/app/components/sidebar",{"_index":1012,"title":{},"body":{"components/SidebarComponent.html":{},"coverage.html":{}}}],["tinynodes/src/app/material.module.ts",{"_index":480,"title":{},"body":{"modules/MaterialModule.html":{}}}],["tinynodes/src/app/store/app/application.model.ts",{"_index":261,"title":{},"body":{"interfaces/ApplicationState.html":{},"interfaces/MenuItem.html":{},"coverage.html":{}}}],["tinynodes/src/app/store/app/application.module.ts",{"_index":249,"title":{},"body":{"modules/ApplicationDataModule.html":{}}}],["tinynodes/src/app/store/app/application.query.ts",{"_index":251,"title":{},"body":{"injectables/ApplicationQuery.html":{},"coverage.html":{}}}],["tinynodes/src/app/store/app/application.query.ts:7",{"_index":254,"title":{},"body":{"injectables/ApplicationQuery.html":{}}}],["tinynodes/src/app/store/app/application.service.ts",{"_index":228,"title":{},"body":{"injectables/AppService.html":{},"coverage.html":{}}}],["tinynodes/src/app/store/app/application.service.ts:10",{"_index":239,"title":{},"body":{"injectables/AppService.html":{}}}],["tinynodes/src/app/store/app/application.service.ts:14",{"_index":237,"title":{},"body":{"injectables/AppService.html":{}}}],["tinynodes/src/app/store/app/application.service.ts:7",{"_index":235,"title":{},"body":{"injectables/AppService.html":{}}}],["tinynodes/src/app/store/app/application.store.ts",{"_index":268,"title":{},"body":{"injectables/ApplicationStore.html":{},"coverage.html":{}}}],["tinynodes/src/app/store/app/application.store.ts:14",{"_index":271,"title":{},"body":{"injectables/ApplicationStore.html":{}}}],["tinynodes/src/app/store/app/application.store.ts:7",{"_index":270,"title":{},"body":{"injectables/ApplicationStore.html":{}}}],["tinynodes/src/environments/environment.prod.ts",{"_index":1284,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["tinynodes/src/environments/environment.ts",{"_index":1285,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["title",{"_index":56,"title":{},"body":{"components/AppComponent.html":{},"components/NavBarComponent.html":{}}}],["todo",{"_index":1407,"title":{"todo.html":{}},"body":{"todo.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-readme.html":{}}}],["todos",{"_index":1408,"title":{},"body":{"todo.html":{}}}],["togglemenu",{"_index":269,"title":{},"body":{"injectables/ApplicationStore.html":{}}}],["togglesidebar",{"_index":229,"title":{},"body":{"injectables/AppService.html":{},"components/NavBarComponent.html":{}}}],["token",{"_index":302,"title":{},"body":{"interfaces/BasePlugin.html":{},"interfaces/EditorJSConfig.html":{},"interfaces/NgxEditorJSConfig.html":{},"interfaces/PluginConfig.html":{},"interfaces/ToolSettingsMap.html":{},"miscellaneous/variables.html":{}}}],["tool",{"_index":300,"title":{},"body":{"interfaces/BasePlugin.html":{},"components/EditorPageComponent.html":{},"modules/NgxEditorJSModule.html":{},"injectables/NgxEditorJSPluginService.html":{},"injectables/PluginCode.html":{},"modules/PluginCodeModule.html":{},"interfaces/PluginConfig.html":{},"injectables/PluginHeader.html":{},"modules/PluginHeaderModule.html":{},"injectables/PluginImage.html":{},"modules/PluginImageModule.html":{},"injectables/PluginLink.html":{},"modules/PluginLinkModule.html":{},"injectables/PluginList.html":{},"modules/PluginListModule.html":{},"injectables/PluginMarker.html":{},"modules/PluginMarkerModule.html":{},"injectables/PluginParagraph.html":{},"modules/PluginParagraphModule.html":{},"injectables/PluginSimpleImage.html":{},"modules/PluginSimpleImageModule.html":{},"interfaces/ToolSettingsMap.html":{},"miscellaneous/functions.html":{}}}],["toolbar",{"_index":409,"title":{},"body":{"interfaces/EditorJSConfig.html":{},"interfaces/NgxEditorJSConfig.html":{}}}],["toolconstructable",{"_index":290,"title":{},"body":{"interfaces/BasePlugin.html":{},"interfaces/PluginConfig.html":{},"interfaces/ToolSettingsMap.html":{}}}],["tools",{"_index":297,"title":{},"body":{"interfaces/BasePlugin.html":{},"injectables/NgxEditorJSPluginService.html":{},"injectables/NgxEditorJSService.html":{},"modules/NgxEditorjsPluginsModule.html":{},"interfaces/PluginConfig.html":{},"modules/PluginSimpleImageModule.html":{},"interfaces/ToolSettingsMap.html":{},"miscellaneous/functions.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-readme.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-readme/ngx-editorjs-changelog.html":{}}}],["toolsettings",{"_index":289,"title":{},"body":{"interfaces/BasePlugin.html":{},"injectables/PluginCode.html":{},"interfaces/PluginConfig.html":{},"injectables/PluginHeader.html":{},"injectables/PluginImage.html":{},"injectables/PluginLink.html":{},"injectables/PluginList.html":{},"injectables/PluginMarker.html":{},"injectables/PluginParagraph.html":{},"injectables/PluginSimpleImage.html":{},"interfaces/ToolSettingsMap.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-readme.html":{}}}],["toolsettingsmap",{"_index":298,"title":{"interfaces/ToolSettingsMap.html":{}},"body":{"interfaces/BasePlugin.html":{},"injectables/NgxEditorJSPluginService.html":{},"interfaces/PluginConfig.html":{},"interfaces/ToolSettingsMap.html":{},"coverage.html":{}}}],["tort",{"_index":1395,"title":{},"body":{"license.html":{}}}],["towards",{"_index":1154,"title":{},"body":{"contributing.html":{}}}],["tree",{"_index":8,"title":{},"body":{"components/AppComponent.html":{},"components/EditorPageComponent.html":{},"components/NavBarComponent.html":{},"components/NgxEditorJSComponent.html":{},"components/PageContainerComponent.html":{},"components/SidebarComponent.html":{}}}],["trolling",{"_index":1163,"title":{},"body":{"contributing.html":{}}}],["true",{"_index":408,"title":{},"body":{"interfaces/EditorJSConfig.html":{},"interfaces/NgxEditorJSConfig.html":{},"injectables/NgxEditorJSService.html":{},"miscellaneous/variables.html":{}}}],["ts",{"_index":1454,"title":{},"body":{"additional-documentation/tinynodes-library-docs/ngx-editorjs-readme.html":{}}}],["two",{"_index":1101,"title":{},"body":{"contributing.html":{}}}],["type",{"_index":47,"title":{},"body":{"components/AppComponent.html":{},"injectables/AppService.html":{},"injectables/ApplicationQuery.html":{},"interfaces/ApplicationState.html":{},"interfaces/BasePlugin.html":{},"interfaces/Block.html":{},"classes/Changed.html":{},"interfaces/EditorJSConfig.html":{},"components/EditorPageComponent.html":{},"interfaces/Header.html":{},"interfaces/HeaderBlock.html":{},"interfaces/Image.html":{},"interfaces/ImageBlock.html":{},"interfaces/List.html":{},"interfaces/ListBlock.html":{},"interfaces/MenuItem.html":{},"components/NavBarComponent.html":{},"components/NgxEditorJSComponent.html":{},"interfaces/NgxEditorJSConfig.html":{},"directives/NgxEditorJSDirective.html":{},"injectables/NgxEditorJSEffects.html":{},"modules/NgxEditorJSModule.html":{},"injectables/NgxEditorJSPluginService.html":{},"injectables/NgxEditorJSService.html":{},"classes/NotReady.html":{},"interfaces/Page.html":{},"interfaces/PageBlock.html":{},"components/PageContainerComponent.html":{},"injectables/PagesQuery.html":{},"injectables/PagesService.html":{},"interfaces/Paragraph.html":{},"interfaces/ParagraphBlock.html":{},"classes/Ready.html":{},"classes/SaveEnd.html":{},"classes/SaveStart.html":{},"components/SidebarComponent.html":{},"interfaces/Tag.html":{},"coverage.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-readme.html":{}}}],["typealiases",{"_index":1423,"title":{"miscellaneous/typealiases.html":{}},"body":{}}],["types/blocks",{"_index":520,"title":{},"body":{"components/NgxEditorJSComponent.html":{},"directives/NgxEditorJSDirective.html":{},"injectables/NgxEditorJSService.html":{}}}],["types/config",{"_index":624,"title":{},"body":{"modules/NgxEditorJSModule.html":{},"injectables/NgxEditorJSService.html":{}}}],["types/maps",{"_index":760,"title":{},"body":{"injectables/NgxEditorJSService.html":{}}}],["types/plugins",{"_index":673,"title":{},"body":{"injectables/NgxEditorJSPluginService.html":{},"injectables/PluginCode.html":{},"injectables/PluginHeader.html":{},"injectables/PluginImage.html":{},"injectables/PluginLink.html":{},"injectables/PluginList.html":{},"injectables/PluginMarker.html":{},"injectables/PluginParagraph.html":{},"injectables/PluginSimpleImage.html":{}}}],["unacceptable",{"_index":1156,"title":{},"body":{"contributing.html":{}}}],["undefined",{"_index":1462,"title":{},"body":{"additional-documentation/tinynodes-library-docs/ngx-editorjs-readme.html":{}}}],["under",{"_index":1030,"title":{},"body":{"changelog.html":{}}}],["underlying",{"_index":515,"title":{},"body":{"components/NgxEditorJSComponent.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-readme.html":{}}}],["unit",{"_index":1485,"title":{},"body":{"additional-documentation/tinynodes-library-docs/ngx-editorjs-readme.html":{}}}],["unordered",{"_index":322,"title":{},"body":{"interfaces/Block.html":{},"interfaces/Header.html":{},"interfaces/HeaderBlock.html":{},"interfaces/Image.html":{},"interfaces/ImageBlock.html":{},"interfaces/List.html":{},"interfaces/ListBlock.html":{},"interfaces/Paragraph.html":{},"interfaces/ParagraphBlock.html":{},"miscellaneous/typealiases.html":{}}}],["unreleased",{"_index":1505,"title":{},"body":{"additional-documentation/tinynodes-library-docs/ngx-editorjs-readme/ngx-editorjs-changelog.html":{}}}],["until",{"_index":1054,"title":{},"body":{"changelog.html":{}}}],["unwelcome",{"_index":1160,"title":{},"body":{"contributing.html":{}}}],["up",{"_index":720,"title":{},"body":{"injectables/NgxEditorJSService.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-readme.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-readme/ngx-editorjs-changelog.html":{}}}],["update",{"_index":707,"title":{},"body":{"injectables/NgxEditorJSService.html":{},"contributing.html":{}}}],["update(holder",{"_index":753,"title":{},"body":{"injectables/NgxEditorJSService.html":{}}}],["updated",{"_index":906,"title":{},"body":{"injectables/PagesService.html":{}}}],["updates",{"_index":752,"title":{},"body":{"injectables/NgxEditorJSService.html":{},"injectables/PagesService.html":{}}}],["upload",{"_index":1533,"title":{},"body":{"additional-documentation/tinynodes-library-docs/ngx-editorjs-plugins-readme.html":{}}}],["upsert",{"_index":889,"title":{},"body":{"injectables/PagesService.html":{}}}],["upsert(page",{"_index":904,"title":{},"body":{"injectables/PagesService.html":{}}}],["url",{"_index":337,"title":{},"body":{"interfaces/Block.html":{},"interfaces/Header.html":{},"interfaces/HeaderBlock.html":{},"interfaces/Image.html":{},"interfaces/ImageBlock.html":{},"interfaces/List.html":{},"interfaces/ListBlock.html":{},"interfaces/Paragraph.html":{},"interfaces/ParagraphBlock.html":{}}}],["usage",{"_index":1447,"title":{},"body":{"additional-documentation/tinynodes-library-docs/ngx-editorjs-readme.html":{}}}],["use",{"_index":473,"title":{},"body":{"components/EditorPageComponent.html":{},"directives/NgxEditorJSDirective.html":{},"modules/NgxEditorJSModule.html":{},"contributing.html":{},"license.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-readme.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-readme/ngx-editorjs-changelog.html":{}}}],["used",{"_index":627,"title":{},"body":{"modules/NgxEditorJSModule.html":{},"modules/NgxEditorJSPluginServiceModule.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-readme.html":{}}}],["usefactory",{"_index":632,"title":{},"body":{"modules/NgxEditorJSModule.html":{},"modules/NgxEditorjsDemoModule.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-readme.html":{}}}],["useful",{"_index":472,"title":{},"body":{"components/EditorPageComponent.html":{},"components/PageContainerComponent.html":{},"changelog.html":{},"contributing.html":{}}}],["user",{"_index":652,"title":{},"body":{"injectables/NgxEditorJSPluginService.html":{}}}],["userplugins",{"_index":310,"title":{},"body":{"interfaces/BasePlugin.html":{},"injectables/NgxEditorJSPluginService.html":{},"modules/NgxEditorjsDemoModule.html":{},"interfaces/PluginConfig.html":{},"interfaces/ToolSettingsMap.html":{},"coverage.html":{},"miscellaneous/variables.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-readme.html":{}}}],["usevalue",{"_index":634,"title":{},"body":{"modules/NgxEditorJSModule.html":{}}}],["using",{"_index":501,"title":{},"body":{"components/NgxEditorJSComponent.html":{},"contributing.html":{},"index.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-readme.html":{}}}],["validators",{"_index":459,"title":{},"body":{"components/EditorPageComponent.html":{}}}],["validators.required",{"_index":451,"title":{},"body":{"components/EditorPageComponent.html":{}}}],["value",{"_index":51,"title":{},"body":{"components/AppComponent.html":{},"classes/Changed.html":{},"components/EditorPageComponent.html":{},"components/NavBarComponent.html":{},"directives/NgxEditorJSDirective.html":{},"injectables/NgxEditorJSEffects.html":{},"modules/NgxEditorJSModule.html":{},"injectables/NgxEditorJSPluginService.html":{},"injectables/NgxEditorJSService.html":{},"classes/NotReady.html":{},"classes/Ready.html":{},"classes/SaveEnd.html":{},"classes/SaveStart.html":{},"components/SidebarComponent.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/variables.html":{}}}],["values",{"_index":358,"title":{},"body":{"interfaces/BlocksMap.html":{},"interfaces/ChangeMap.html":{},"interfaces/EditorMap.html":{},"injectables/NgxEditorJSService.html":{},"interfaces/ReadyMap.html":{}}}],["var",{"_index":135,"title":{},"body":{"components/AppComponent.html":{},"components/EditorPageComponent.html":{},"components/NavBarComponent.html":{},"components/NgxEditorJSComponent.html":{},"components/PageContainerComponent.html":{},"components/SidebarComponent.html":{}}}],["variable",{"_index":1273,"title":{},"body":{"coverage.html":{}}}],["variables",{"_index":1086,"title":{"miscellaneous/variables.html":{}},"body":{"contributing.html":{},"miscellaneous/variables.html":{}}}],["version",{"_index":582,"title":{},"body":{"injectables/NgxEditorJSEffects.html":{},"injectables/NgxEditorJSService.html":{},"changelog.html":{},"contributing.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-readme.html":{}}}],["versioning",{"_index":1095,"title":{},"body":{"contributing.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-readme/ngx-editorjs-changelog.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-plugins-readme/ngx-editorjs-plugins-changelog.html":{}}}],["vertical",{"_index":125,"title":{},"body":{"components/AppComponent.html":{},"components/NavBarComponent.html":{}}}],["via",{"_index":309,"title":{},"body":{"interfaces/BasePlugin.html":{},"directives/NgxEditorJSDirective.html":{},"injectables/NgxEditorJSService.html":{},"injectables/PagesService.html":{},"interfaces/PluginConfig.html":{},"interfaces/ToolSettingsMap.html":{},"contributing.html":{},"todo.html":{},"miscellaneous/variables.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-readme.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-readme/ngx-editorjs-changelog.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-plugins-readme.html":{}}}],["view",{"_index":178,"title":{},"body":{"modules/AppModule.html":{}}}],["viewchild",{"_index":73,"title":{},"body":{"components/AppComponent.html":{},"components/NgxEditorJSComponent.html":{},"components/SidebarComponent.html":{}}}],["viewchild(matsidenav",{"_index":67,"title":{},"body":{"components/AppComponent.html":{},"components/SidebarComponent.html":{}}}],["viewchild(ngxeditorjsdirective",{"_index":512,"title":{},"body":{"components/NgxEditorJSComponent.html":{}}}],["viewpoints",{"_index":1144,"title":{},"body":{"contributing.html":{}}}],["visit",{"_index":179,"title":{},"body":{"modules/AppModule.html":{}}}],["void",{"_index":60,"title":{},"body":{"components/AppComponent.html":{},"injectables/AppService.html":{},"injectables/ApplicationStore.html":{},"components/EditorPageComponent.html":{},"components/NavBarComponent.html":{},"directives/NgxEditorJSDirective.html":{},"injectables/NgxEditorJSPluginService.html":{},"injectables/NgxEditorJSService.html":{},"injectables/PagesService.html":{},"components/SidebarComponent.html":{}}}],["want",{"_index":725,"title":{},"body":{"injectables/NgxEditorJSService.html":{}}}],["warranties",{"_index":1381,"title":{},"body":{"license.html":{}}}],["warranty",{"_index":1376,"title":{},"body":{"license.html":{}}}],["way",{"_index":530,"title":{},"body":{"directives/NgxEditorJSDirective.html":{},"modules/NgxEditorjsPluginsModule.html":{},"injectables/PagesService.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-readme.html":{}}}],["welcoming",{"_index":1110,"title":{},"body":{"contributing.html":{}}}],["what's",{"_index":1474,"title":{},"body":{"additional-documentation/tinynodes-library-docs/ngx-editorjs-readme.html":{}}}],["whether",{"_index":1393,"title":{},"body":{"license.html":{}}}],["white",{"_index":102,"title":{},"body":{"components/AppComponent.html":{},"components/NavBarComponent.html":{}}}],["width",{"_index":96,"title":{},"body":{"components/AppComponent.html":{},"components/EditorPageComponent.html":{},"components/NavBarComponent.html":{},"components/NgxEditorJSComponent.html":{},"components/PageContainerComponent.html":{}}}],["wiki",{"_index":1195,"title":{},"body":{"contributing.html":{}}}],["wish",{"_index":1068,"title":{},"body":{"contributing.html":{}}}],["withbackground",{"_index":343,"title":{},"body":{"interfaces/Block.html":{},"interfaces/Header.html":{},"interfaces/HeaderBlock.html":{},"interfaces/Image.html":{},"interfaces/ImageBlock.html":{},"interfaces/List.html":{},"interfaces/ListBlock.html":{},"interfaces/Paragraph.html":{},"interfaces/ParagraphBlock.html":{}}}],["withborder",{"_index":341,"title":{},"body":{"interfaces/Block.html":{},"interfaces/Header.html":{},"interfaces/HeaderBlock.html":{},"interfaces/Image.html":{},"interfaces/ImageBlock.html":{},"interfaces/List.html":{},"interfaces/ListBlock.html":{},"interfaces/Paragraph.html":{},"interfaces/ParagraphBlock.html":{}}}],["within",{"_index":544,"title":{},"body":{"directives/NgxEditorJSDirective.html":{},"injectables/NgxEditorJSService.html":{},"contributing.html":{},"index.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-readme.html":{}}}],["withlatestfrom",{"_index":575,"title":{},"body":{"injectables/NgxEditorJSEffects.html":{}}}],["without",{"_index":503,"title":{},"body":{"components/NgxEditorJSComponent.html":{},"contributing.html":{},"license.html":{}}}],["won't",{"_index":410,"title":{},"body":{"interfaces/EditorJSConfig.html":{},"interfaces/NgxEditorJSConfig.html":{}}}],["work",{"_index":1060,"title":{},"body":{"changelog.html":{}}}],["x1f614",{"_index":1487,"title":{},"body":{"additional-documentation/tinynodes-library-docs/ngx-editorjs-readme.html":{}}}],["yes",{"_index":723,"title":{},"body":{"injectables/NgxEditorJSService.html":{},"injectables/PagesService.html":{}}}],["zone",{"_index":709,"title":{},"body":{"injectables/NgxEditorJSService.html":{}}}],["zone.js",{"_index":1323,"title":{},"body":{"dependencies.html":{}}}],["zoom",{"_index":171,"title":{},"body":{"modules/AppModule.html":{},"modules/ApplicationDataModule.html":{},"modules/NgxEditorJSModule.html":{},"modules/NgxEditorJSPluginServiceModule.html":{},"modules/NgxEditorjsDemoModule.html":{},"modules/NgxEditorjsNgrxModule.html":{},"modules/NgxEditorjsPluginsModule.html":{},"modules/PageStoreModule.html":{},"modules/PluginCodeModule.html":{},"modules/PluginHeaderModule.html":{},"modules/PluginImageModule.html":{},"modules/PluginLinkModule.html":{},"modules/PluginListModule.html":{},"modules/PluginMarkerModule.html":{},"modules/PluginParagraphModule.html":{},"modules/PluginSimpleImageModule.html":{},"overview.html":{}}}]],"pipeline":["stemmer"]},
    "store": {"components/AppComponent.html":{"url":"components/AppComponent.html","title":"component - AppComponent","body":"\n                   \n\n\n\n\n\n  Components\n  AppComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    apps/ngx-tinynodes/src/app/components/app-component/app.component.ts\n\n\n    \n        Description\n    \n    \n        The main application component that provides the root container\n\n    \n\n\n    \n        Implements\n    \n    \n                    OnInit\n                    OnDestroy\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                tinynodes-root\n            \n\n            \n                styleUrls\n                ./app.component.css\n            \n\n\n\n            \n                templateUrl\n                ./app.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                    Readonly\n                                onDestroy$\n                            \n                            \n                                sidenav\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngOnDestroy\n                            \n                            \n                                ngOnInit\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                pageTitle\n                            \n                        \n                    \n                \n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(app: AppService)\n                    \n                \n                        \n                            \n                                Defined in apps/ngx-tinynodes/src/app/components/app-component/app.component.ts:30\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        app\n                                                  \n                                                        \n                                                                        AppService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        pageTitle\n                    \n                \n                \n                    \n                        Default value : 'Tinynodes Angular Demos'\n                    \n                \n                        \n                            \n                                    Defined in apps/ngx-tinynodes/src/app/components/app-component/app.component.ts:20\n                            \n                        \n                \n                    \n                        The page title\n\n                    \n                \n            \n        \n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngOnDestroy\n                        \n                        \n                    \n                \n            \n            \n                \nngOnDestroy()\n                \n            \n\n\n            \n                \n                    Defined in apps/ngx-tinynodes/src/app/components/app-component/app.component.ts:46\n                \n            \n\n\n            \n                \n                    Component destroyed\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngOnInit\n                        \n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in apps/ngx-tinynodes/src/app/components/app-component/app.component.ts:37\n                \n            \n\n\n            \n                \n                    Component initialized\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                                Readonly\n                            onDestroy$\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : new Subject()\n                        \n                    \n                        \n                            \n                                    Defined in apps/ngx-tinynodes/src/app/components/app-component/app.component.ts:30\n                            \n                        \n\n                \n                    \n                        When the component is destroyed\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            sidenav\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     MatSidenav\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @ViewChild(MatSidenav)\n                            \n                        \n                    \n                        \n                            \n                                    Defined in apps/ngx-tinynodes/src/app/components/app-component/app.component.ts:25\n                            \n                        \n\n                \n                    \n                        The Material sidebar\n\n                    \n                \n\n            \n        \n\n\n\n\n\n    \n        import { Component, Input, ViewChild, OnInit, OnDestroy } from '@angular/core';\nimport { MatSidenav } from '@angular/material';\nimport { Subject } from 'rxjs';\nimport { AppService } from '../../store/app/application.service';\nimport { takeUntil } from 'rxjs/operators';\n\n/**\n * The main application component that provides the root container\n */\n@Component({\n  selector: 'tinynodes-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\nexport class AppComponent implements OnInit, OnDestroy {\n  /**\n   * The page title\n   */\n  @Input()\n  public pageTitle = 'Tinynodes Angular Demos';\n\n  /**\n   * The Material sidebar\n   */\n  @ViewChild(MatSidenav) sidenav: MatSidenav;\n\n  /**\n   * When the component is destroyed\n   */\n  private readonly onDestroy$ = new Subject();\n\n  constructor(private readonly app: AppService) {}\n\n  /**\n   * Component initialized\n   */\n  ngOnInit() {\n    this.app.hidden.pipe(takeUntil(this.onDestroy$)).subscribe(value => {\n      value ? this.sidenav.close() : this.sidenav.open();\n    });\n  }\n\n  /**\n   * Component destroyed\n   */\n  ngOnDestroy() {\n    this.onDestroy$.next(true);\n    this.onDestroy$.complete();\n  }\n}\n\n    \n\n    \n        \n  \n    \n      \n        Demo: ngx-editor\n      \n    \n  \n  \n    \n\n    \n      \n    \n  \n\n\n\n\n\n  \n    \n      \n        \n      \n    \n    \n      \n        \n      \n    \n  \n -->\n\n    \n\n    \n                \n                    ./app.component.css\n                \n                mat-sidenav-container,\nmat-sidenav-content,\nmat-sidenav {\n  height: 100%;\n}\n\nmat-sidenav {\n  width: 250px;\n}\n\na {\n  text-decoration: none;\n  color: white;\n}\n\na:hover,\na:active {\n  color: lightgray;\n}\n\n.navigation-items {\n  list-style: none;\n  padding: 0;\n  margin: 0;\n  cursor: pointer;\n}\n\n.icon {\n  display: inline-block;\n  height: 30px;\n  margin: 0 auto;\n  padding-right: 5px;\n  text-align: center;\n  vertical-align: middle;\n  width: 15%;\n}\n\n.label {\n  display: inline-block;\n  line-height: 30px;\n  margin: 0;\n  width: 85%;\n}\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                    Demo: ngx-editor                                                                                               -->'\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'tinynodes-root'},{'name': 'EditorPageComponent', 'selector': 'ngx-editor-page'},{'name': 'NavBarComponent', 'selector': 'tinynodes-nav-bar'},{'name': 'NgxEditorJSComponent', 'selector': 'ngx-editorjs'},{'name': 'PageContainerComponent', 'selector': 'ngx-page-container'},{'name': 'SidebarComponent', 'selector': 'tinynodes-sidebar'}];\n    var DIRECTIVES = [{'name': 'NgxEditorJSDirective', 'selector': '[ngxEditorJS]'}];\n    var ACTUAL_COMPONENT = {'name': 'AppComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/AppModule.html":{"url":"modules/AppModule.html","title":"module - AppModule","body":"\n                   \n\n\n\n\n    Modules\n    AppModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_AppModule\n\n\n\ncluster_AppModule_declarations\n\n\n\ncluster_AppModule_imports\n\n\n\ncluster_AppModule_bootstrap\n\n\n\n\nAppComponent\n\nAppComponent\n\n\n\nAppModule\n\nAppModule\n\nAppModule -->\n\nAppComponent->AppModule\n\n\n\n\n\nNavBarComponent\n\nNavBarComponent\n\nAppModule -->\n\nNavBarComponent->AppModule\n\n\n\n\n\nSidebarComponent\n\nSidebarComponent\n\nAppModule -->\n\nSidebarComponent->AppModule\n\n\n\n\n\nAppComponent \n\nAppComponent \n\nAppComponent  -->\n\nAppModule->AppComponent \n\n\n\n\n\nApplicationDataModule\n\nApplicationDataModule\n\nAppModule -->\n\nApplicationDataModule->AppModule\n\n\n\n\n\nMaterialModule\n\nMaterialModule\n\nAppModule -->\n\nMaterialModule->AppModule\n\n\n\n\n\nNgxEditorJSModule\n\nNgxEditorJSModule\n\nAppModule -->\n\nNgxEditorJSModule->AppModule\n\n\n\n\n\nNgxEditorjsDemoModule\n\nNgxEditorjsDemoModule\n\nAppModule -->\n\nNgxEditorjsDemoModule->AppModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            apps/ngx-tinynodes/src/app/app.module.ts\n        \n\n\n        \n            Description\n        \n        \n            The main ngx-tinynodes module that builds the core single page application.\nTo view the application visit the demo\n\n        \n\n\n        \n            \n                \n                    Declarations\n                    \n                        \n                            AppComponent\n                        \n                        \n                            NavBarComponent\n                        \n                        \n                            SidebarComponent\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            ApplicationDataModule\n                        \n                        \n                            MaterialModule\n                        \n                        \n                            NgxEditorJSModule\n                        \n                        \n                            NgxEditorjsDemoModule\n                        \n                    \n                \n                \n                    Bootstrap\n                    \n                        \n                            AppComponent\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { HttpClient, HttpClientModule } from '@angular/common/http';\nimport { NgModule } from '@angular/core';\nimport { FlexLayoutModule } from '@angular/flex-layout';\nimport { BrowserModule } from '@angular/platform-browser';\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\nimport { RouterModule } from '@angular/router';\nimport { AkitaNgRouterStoreModule } from '@datorama/akita-ng-router-store';\nimport { AkitaNgDevtools } from '@datorama/akita-ngdevtools';\nimport { NgxEditorJSModule } from '@tinynodes/ngx-editorjs';\nimport { NgxEditorjsDemoModule } from '@tinynodes/ngx-editorjs-demo';\nimport { MarkdownModule } from 'ngx-markdown';\nimport { environment } from '../environments/environment';\nimport { AppComponent } from './components/app-component/app.component';\nimport { NavBarComponent } from './components/nav-bar/nav-bar.component';\nimport { SidebarComponent } from './components/sidebar-component/sidebar.component';\nimport { MaterialModule } from './material.module';\nimport { ApplicationDataModule } from './store/app/application.module';\n\n/**\n * The main `ngx-tinynodes` module that builds the core single page application.\n * To view the application visit [the demo](https://tinynodes-ngx.firebaseapp.com/)\n */\n@NgModule({\n  declarations: [AppComponent, NavBarComponent, SidebarComponent],\n  imports: [\n    BrowserModule,\n    HttpClientModule,\n    BrowserAnimationsModule,\n    MaterialModule,\n    FlexLayoutModule,\n    ApplicationDataModule,\n    RouterModule.forRoot([]),\n    NgxEditorJSModule.forRoot(),\n    NgxEditorjsDemoModule,\n    MarkdownModule.forRoot({ loader: HttpClient }),\n    environment.production ? [] : [AkitaNgDevtools.forRoot(), AkitaNgRouterStoreModule.forRoot()]\n  ],\n  bootstrap: [AppComponent]\n})\nexport class AppModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/AppService.html":{"url":"injectables/AppService.html","title":"injectable - AppService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  AppService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/ngx-tinynodes/src/app/store/app/application.service.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                toggleSidebar\n                            \n                        \n                    \n                \n\n\n\n\n\n                    \n                        \n                            Accessors\n                        \n                    \n                    \n                        \n                            \n                                \n                                    hidden\n                                \n                            \n                        \n                    \n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(query: ApplicationQuery, store: ApplicationStore)\n                    \n                \n                        \n                            \n                                Defined in apps/ngx-tinynodes/src/app/store/app/application.service.ts:7\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        query\n                                                  \n                                                        \n                                                                        ApplicationQuery\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        store\n                                                  \n                                                        \n                                                                        ApplicationStore\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            toggleSidebar\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    toggleSidebar()\n                \n            \n\n\n            \n                \n                    Defined in apps/ngx-tinynodes/src/app/store/app/application.service.ts:14\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n\n            \n    \n        Accessors\n    \n        \n            \n                \n                    \n                        \n                        hidden\n                    \n                \n\n                \n                    \n                        gethidden()\n                    \n                \n                            \n                                \n                                    Defined in apps/ngx-tinynodes/src/app/store/app/application.service.ts:10\n                                \n                            \n\n            \n        \n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { ApplicationQuery } from './application.query';\nimport { ApplicationStore } from './application.store';\nimport { Observable } from 'rxjs';\n\n@Injectable()\nexport class AppService {\n  constructor(private readonly query: ApplicationQuery, private readonly store: ApplicationStore) {}\n\n  get hidden(): Observable {\n    return this.query.select('hidden');\n  }\n\n  public toggleSidebar() {\n    this.store.update({ hidden: !this.store._value().hidden });\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/ApplicationDataModule.html":{"url":"modules/ApplicationDataModule.html","title":"module - ApplicationDataModule","body":"\n                   \n\n\n\n\n    Modules\n    ApplicationDataModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_ApplicationDataModule\n\n\n\ncluster_ApplicationDataModule_providers\n\n\n\n\nAppService\n\nAppService\n\n\n\nApplicationDataModule\n\nApplicationDataModule\n\nApplicationDataModule -->\n\nAppService->ApplicationDataModule\n\n\n\n\n\nApplicationQuery\n\nApplicationQuery\n\nApplicationDataModule -->\n\nApplicationQuery->ApplicationDataModule\n\n\n\n\n\nApplicationStore\n\nApplicationStore\n\nApplicationDataModule -->\n\nApplicationStore->ApplicationDataModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            apps/ngx-tinynodes/src/app/store/app/application.module.ts\n        \n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            AppService\n                        \n                        \n                            ApplicationQuery\n                        \n                        \n                            ApplicationStore\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { NgModule } from '@angular/core';\nimport { ApplicationQuery } from './application.query';\nimport { AppService } from './application.service';\nimport { ApplicationStore } from './application.store';\n\n@NgModule({\n  providers: [AppService, ApplicationQuery, ApplicationStore]\n})\nexport class ApplicationDataModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/ApplicationQuery.html":{"url":"injectables/ApplicationQuery.html","title":"injectable - ApplicationQuery","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  ApplicationQuery\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/ngx-tinynodes/src/app/store/app/application.query.ts\n        \n\n\n            \n                Extends\n            \n            \n                        Query\n            \n\n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(store: ApplicationStore)\n                    \n                \n                        \n                            \n                                Defined in apps/ngx-tinynodes/src/app/store/app/application.query.ts:7\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        store\n                                                  \n                                                        \n                                                                        ApplicationStore\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { Query } from '@datorama/akita';\nimport { ApplicationState } from './application.model';\nimport { ApplicationStore } from './application.store';\n\n@Injectable()\nexport class ApplicationQuery extends Query {\n  constructor(protected store: ApplicationStore) {\n    super(store);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/ApplicationState.html":{"url":"interfaces/ApplicationState.html","title":"interface - ApplicationState","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  ApplicationState\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/ngx-tinynodes/src/app/store/app/application.model.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        hidden\n                                \n                                \n                                        menu\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        hidden\n                                    \n                                \n                                \n                                    \n                                        hidden:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        menu\n                                    \n                                \n                                \n                                    \n                                        menu:         MenuItem[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         MenuItem[]\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { RouterLink } from '@angular/router';\n\nexport interface MenuItem {\n  label: string;\n  link: RouterLink;\n}\n\nexport interface ApplicationState {\n  hidden: boolean;\n  menu: MenuItem[];\n}\n\n    \n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/ApplicationStore.html":{"url":"injectables/ApplicationStore.html","title":"injectable - ApplicationStore","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  ApplicationStore\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/ngx-tinynodes/src/app/store/app/application.store.ts\n        \n\n\n            \n                Extends\n            \n            \n                    Store\n            \n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                toggleMenu\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in apps/ngx-tinynodes/src/app/store/app/application.store.ts:7\n                            \n                        \n\n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            toggleMenu\n                        \n                        \n                    \n                \n            \n            \n                \ntoggleMenu()\n                \n            \n\n\n            \n                \n                    Defined in apps/ngx-tinynodes/src/app/store/app/application.store.ts:14\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Store, StoreConfig } from '@datorama/akita';\nimport { Injectable } from '@angular/core';\nimport { ApplicationState } from './application.model';\n\n@Injectable()\n@StoreConfig({ name: 'application' })\nexport class ApplicationStore extends Store {\n  constructor() {\n    super({\n      hidden: false\n    });\n  }\n\n  toggleMenu() {\n    this.update({ hidden: !this._value().hidden });\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/BasePlugin.html":{"url":"interfaces/BasePlugin.html","title":"interface - BasePlugin","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  BasePlugin\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            libs/ngx-editorjs-plugins/src/lib/types/plugins.ts\n        \n\n            \n                Description\n            \n            \n                Defines the interface for required and optional plugin methods.\nThese methods allow a plugin to return a EditorJS plugin and an optional shortcut\n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        plugin\n                                \n                                \n                                            Optional\n                                        shortcut\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        plugin\n                                    \n                                \n                                \n                                    \n                                        plugin:         function\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         function\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    The plugin settings to be returned\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        shortcut\n                                    \n                                \n                                \n                                    \n                                        shortcut:         function\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         function\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    Optional shortcut for the plugin\n\n                                \n                            \n                        \n                    \n            \n    \n\n\n    \n        import { InjectionToken } from '@angular/core';\nimport { ToolSettings, ToolConstructable } from '@editorjs/editorjs';\n\n/**\n * A Module plugin configuration\n */\nexport interface PluginConfig {\n  /**\n   * The key of the plugin and the plugin class extending `BasePlugin`\n   */\n  [key: string]: BasePlugin;\n}\n\n/**\n * A map of all the tools settings\n */\nexport interface ToolSettingsMap {\n  /**\n   * The key of the plugin and the plugin exported tool settings\n   */\n  [key: string]: ToolConstructable | ToolSettings;\n}\n\n/**\n * Defines the interface for required and optional plugin methods.\n * These methods allow a plugin to return a EditorJS plugin and an optional shortcut\n */\nexport interface BasePlugin {\n  /**\n   * The plugin settings to be returned\n   */\n  plugin: () => ToolConstructable | ToolSettings;\n\n  /**\n   * Optional shortcut for the plugin\n   */\n  shortcut?: () => string;\n}\n\n/**\n * The Injection token for initial plugins as defined in the ngx-editorjs module\n */\nexport const InitialPlugins = new InjectionToken('InitialPlugins');\n\n/**\n * The injection token for adding plugins via your own application\n */\nexport const UserPlugins = new InjectionToken('UserPlugins');\n\n    \n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/Block.html":{"url":"interfaces/Block.html","title":"interface - Block","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  Block\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            libs/ngx-editorjs/src/lib/types/blocks.ts\n        \n\n            \n                Description\n            \n            \n                Base block type for EditorJS\n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        data\n                                \n                                \n                                        type\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n            \n    Indexable\n        \n            \n                \n                    \n                        [key: string]:        any\n\n                    \n                \n                        \n                            \n                                Defined in libs/ngx-editorjs/src/lib/types/blocks.ts:13\n                            \n                        \n                \n                    \n                        Additional properties on the type\n\n                    \n                \n            \n        \n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        data\n                                    \n                                \n                                \n                                    \n                                        data:     T\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     T\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    The data interface for the block type\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        type\n                                    \n                                \n                                \n                                    \n                                        type:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    The EditorJS block type\n\n                                \n                            \n                        \n                    \n            \n    \n\n\n    \n        export interface Block {\n  /**\n   * The EditorJS block type\n   */\n  type: string;\n\n  /**\n   * The data interface for the block type\n   */\n  data: T;\n\n  /**\n   * Additional properties on the type\n   */\n  [key: string]: any;\n}\n\n/**\n * Available list styles, supports `ordered` and `unordered`.\n * A custom string can also be added\n */\nexport type ListStyle = 'ordered' | 'unordered' | string;\n\n/**\n * Default data type for a list block\n */\nexport interface List {\n  /**\n   * The list style\n   */\n  style: ListStyle;\n  /**\n   * List items of type T\n   */\n  items: T[];\n}\n\n/**\n * The default list block is provided by the EditorJS list plugin\n */\nexport interface ListBlock extends Block> {\n  /**\n   * The EditorJS block type\n   */\n  type: 'list';\n}\n\n/**\n * Default data type for a paragraph block\n */\ninterface Paragraph {\n  /**\n   * The paragraph text\n   */\n  text: string;\n}\n\n/**\n * Interface for a paragraph block\n */\nexport interface ParagraphBlock extends Block {\n  /**\n   * The EditorJS block type\n   */\n  type: 'paragraph';\n}\n\n/**\n * Default data type for a header block\n */\ninterface Header {\n  /**\n   * The header text\n   */\n  text: string;\n  /**\n   * The header level from 1-6\n   */\n  level: number;\n}\n\n/**\n * Interface for a header block\n */\nexport interface HeaderBlock extends Block {\n  /**\n   * The EditorJS block type\n   */\n  type: 'header';\n}\n\n/**\n * Default data type for a header block\n */\nexport interface Image {\n  /**\n   * The image URL\n   */\n  url: string;\n  /**\n   * Optional image caption\n   */\n  caption?: string;\n  /**\n   * Optional border property\n   */\n  withBorder?: boolean;\n\n  /**\n   * Optional background property\n   */\n  withBackground?: boolean;\n\n  /**\n   * Optional stretch property\n   */\n  stretched?: boolean;\n}\n\n/**\n * Interface for a image block\n */\nexport interface ImageBlock extends Block {\n  /**\n   * The EditorJS block type\n   */\n  type: 'image';\n}\n\n/**\n * Type of all the basic block type\n */\nexport type BlockTypes = ParagraphBlock | HeaderBlock | ImageBlock | ListBlock | Block;\n\n    \n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/BlocksMap.html":{"url":"interfaces/BlocksMap.html","title":"interface - BlocksMap","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  BlocksMap\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            libs/ngx-editorjs/src/lib/types/maps.ts\n        \n\n            \n                Description\n            \n            \n                A map containing BehaviorSubject of Block elements from EditorJS\n\n            \n\n\n\n\n            \n    Indexable\n        \n            \n                \n                    \n                        [key: string]:        BehaviorSubject\n\n                    \n                \n                        \n                            \n                                Defined in libs/ngx-editorjs/src/lib/types/maps.ts:15\n                            \n                        \n            \n        \n\n\n    \n\n\n    \n        import EditorJS from '@editorjs/editorjs';\nimport { BehaviorSubject } from 'rxjs';\nimport { Block } from './blocks';\n\n/**\n * A map containing instances of `EditorJS`\n */\nexport interface EditorMap {\n  [key: string]: EditorJS;\n}\n\n/**\n * A map containing `BehaviorSubject` of `Block` elements from `EditorJS`\n */\nexport interface BlocksMap {\n  [key: string]: BehaviorSubject;\n}\n\n/**\n * A map containing `BehaviorSubject` of `boolean` values of the ready state of `EditorJS`\n */\nexport interface ReadyMap {\n  [key: string]: BehaviorSubject;\n}\n\n/**\n * A map containing `BehaviorSubject` of `number` which is the timestamp of the last `EditorJS` change\n */\nexport interface ChangeMap {\n  [key: string]: BehaviorSubject;\n}\n\n    \n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/ChangeMap.html":{"url":"interfaces/ChangeMap.html","title":"interface - ChangeMap","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  ChangeMap\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            libs/ngx-editorjs/src/lib/types/maps.ts\n        \n\n            \n                Description\n            \n            \n                A map containing BehaviorSubject of number which is the timestamp of the last EditorJS change\n\n            \n\n\n\n\n            \n    Indexable\n        \n            \n                \n                    \n                        [key: string]:    BehaviorSubject\n\n                    \n                \n                        \n                            \n                                Defined in libs/ngx-editorjs/src/lib/types/maps.ts:29\n                            \n                        \n            \n        \n\n\n    \n\n\n    \n        import EditorJS from '@editorjs/editorjs';\nimport { BehaviorSubject } from 'rxjs';\nimport { Block } from './blocks';\n\n/**\n * A map containing instances of `EditorJS`\n */\nexport interface EditorMap {\n  [key: string]: EditorJS;\n}\n\n/**\n * A map containing `BehaviorSubject` of `Block` elements from `EditorJS`\n */\nexport interface BlocksMap {\n  [key: string]: BehaviorSubject;\n}\n\n/**\n * A map containing `BehaviorSubject` of `boolean` values of the ready state of `EditorJS`\n */\nexport interface ReadyMap {\n  [key: string]: BehaviorSubject;\n}\n\n/**\n * A map containing `BehaviorSubject` of `number` which is the timestamp of the last `EditorJS` change\n */\nexport interface ChangeMap {\n  [key: string]: BehaviorSubject;\n}\n\n    \n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/Changed.html":{"url":"classes/Changed.html","title":"class - Changed","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  Changed\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            libs/ngx-editorjs-ngrx/src/lib/actions/ngx-editorjs.actions.ts\n        \n\n\n\n            \n                Implements\n            \n            \n                        Action\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                payload\n                            \n                            \n                                    Readonly\n                                type\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(payload: literal type)\n                    \n                \n                        \n                            \n                                Defined in libs/ngx-editorjs-ngrx/src/lib/actions/ngx-editorjs.actions.ts:33\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        payload\n                                                  \n                                                        \n                                                                    literal type\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            payload\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     literal type\n\n                        \n                    \n                        \n                            \n                                    Defined in libs/ngx-editorjs-ngrx/src/lib/actions/ngx-editorjs.actions.ts:34\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                            type\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : EditorJSActionTypes.Changed\n                        \n                    \n                        \n                            \n                                    Defined in libs/ngx-editorjs-ngrx/src/lib/actions/ngx-editorjs.actions.ts:33\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { Action } from '@ngrx/store';\nimport { OutputData } from '@editorjs/editorjs';\n\nexport enum EditorJSActionTypes {\n  SaveStart = '[ngx-editorjs] Start Save',\n  SaveEnd = '[ngx-editorjs] Start End',\n  NotReady = '[ngx-editorjs] Not Ready',\n  Ready = '[ngx-editorjs] Ready',\n  Changed = '[ngx-editorjs] Changed'\n}\n\nexport class SaveStart implements Action {\n  readonly type = EditorJSActionTypes.SaveStart;\n  constructor(public payload: { holder: string }) {}\n}\n\nexport class SaveEnd implements Action {\n  readonly type = EditorJSActionTypes.SaveEnd;\n  constructor(public payload: { holder: string; data: OutputData }) {}\n}\n\nexport class NotReady implements Action {\n  readonly type = EditorJSActionTypes.NotReady;\n  constructor(public payload: { holder: string }) {}\n}\n\nexport class Ready implements Action {\n  readonly type = EditorJSActionTypes.Ready;\n  constructor(public payload: { holder: string }) {}\n}\n\nexport class Changed implements Action {\n  readonly type = EditorJSActionTypes.Changed;\n  constructor(public payload: { holder: string; data: OutputData }) {}\n}\n\nexport type NgxEditorJSActions = SaveStart | SaveEnd | NotReady | Ready | Changed;\n\n    \n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/EditorJSConfig.html":{"url":"interfaces/EditorJSConfig.html","title":"interface - EditorJSConfig","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  EditorJSConfig\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            libs/ngx-editorjs/src/lib/types/config.ts\n        \n\n            \n                Description\n            \n            \n                Configuration for the EditorJS instance\n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                            Optional\n                                        autofocus\n                                \n                                \n                                            Optional\n                                        data\n                                \n                                \n                                            Optional\n                                        hideToolbar\n                                \n                                \n                                            Optional\n                                        holder\n                                \n                                \n                                            Optional\n                                        initialBlock\n                                \n                                \n                                            Optional\n                                        minHeight\n                                \n                                \n                                            Optional\n                                        placeholder\n                                \n                                \n                                            Optional\n                                        sanitizer\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        autofocus\n                                    \n                                \n                                \n                                    \n                                        autofocus:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    If the EditorJS is autofocused on creation (default: false)\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        data\n                                    \n                                \n                                \n                                    \n                                        data:     OutputData\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     OutputData\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    Any initial output data to render\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        hideToolbar\n                                    \n                                \n                                \n                                    \n                                        hideToolbar:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    If true, toolbar won't be shown\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        holder\n                                    \n                                \n                                \n                                    \n                                        holder:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    ID of the element to hold the config\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        initialBlock\n                                    \n                                \n                                \n                                    \n                                        initialBlock:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    The name of the initial block (default \"paragraph\")\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        minHeight\n                                    \n                                \n                                \n                                    \n                                        minHeight:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    Height of Editor's bottom area that allows to set focus on the last Block\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        placeholder\n                                    \n                                \n                                \n                                    \n                                        placeholder:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    First Block placeholder\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        sanitizer\n                                    \n                                \n                                \n                                    \n                                        sanitizer:     SanitizerConfig\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     SanitizerConfig\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    Define default sanitizer configuration\n\n                                \n                            \n                        \n                    \n            \n    \n\n\n    \n        import { InjectionToken } from '@angular/core';\nimport { OutputData, SanitizerConfig } from '@editorjs/editorjs';\n\n/**\n * Configuration for the EditorJS instance\n */\nexport interface EditorJSConfig {\n  /**\n   * ID of the element to hold the config\n   */\n  holder?: string;\n  /**\n   * If the EditorJS is autofocused on creation (default: false)\n   */\n  autofocus?: boolean;\n\n  /**\n   * The name of the initial block (default \"paragraph\")\n   */\n  initialBlock?: string;\n\n  /**\n   * Any initial output data to render\n   */\n  data?: OutputData;\n\n  /**\n   * First Block placeholder\n   */\n  placeholder?: string;\n\n  /**\n   * Define default sanitizer configuration\n   */\n  sanitizer?: SanitizerConfig;\n\n  /**\n   * If true, toolbar won't be shown\n   */\n  hideToolbar?: boolean;\n\n  /**\n   * Height of Editor's bottom area that allows to set focus on the last Block\n   */\n  minHeight?: number;\n}\n\n/**\n * The configuration option that can be passed to the `NgxEditorJSModule.forRoot` method\n */\nexport interface NgxEditorJSConfig {\n  /**\n   * Configuration options for `EditorJS`\n   */\n  editorjs?: EditorJSConfig;\n}\n\n/**\n * Injection token provied for `NgxEditorJSConfig`\n */\nexport const NGX_EDITORJS_CONFIG = new InjectionToken('NGX_EDITORJS_CONFIG');\n\n    \n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/EditorMap.html":{"url":"interfaces/EditorMap.html","title":"interface - EditorMap","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  EditorMap\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            libs/ngx-editorjs/src/lib/types/maps.ts\n        \n\n            \n                Description\n            \n            \n                A map containing instances of EditorJS\n\n            \n\n\n\n\n            \n    Indexable\n        \n            \n                \n                    \n                        [key: string]:    EditorJS\n\n                    \n                \n                        \n                            \n                                Defined in libs/ngx-editorjs/src/lib/types/maps.ts:8\n                            \n                        \n            \n        \n\n\n    \n\n\n    \n        import EditorJS from '@editorjs/editorjs';\nimport { BehaviorSubject } from 'rxjs';\nimport { Block } from './blocks';\n\n/**\n * A map containing instances of `EditorJS`\n */\nexport interface EditorMap {\n  [key: string]: EditorJS;\n}\n\n/**\n * A map containing `BehaviorSubject` of `Block` elements from `EditorJS`\n */\nexport interface BlocksMap {\n  [key: string]: BehaviorSubject;\n}\n\n/**\n * A map containing `BehaviorSubject` of `boolean` values of the ready state of `EditorJS`\n */\nexport interface ReadyMap {\n  [key: string]: BehaviorSubject;\n}\n\n/**\n * A map containing `BehaviorSubject` of `number` which is the timestamp of the last `EditorJS` change\n */\nexport interface ChangeMap {\n  [key: string]: BehaviorSubject;\n}\n\n    \n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/EditorPageComponent.html":{"url":"components/EditorPageComponent.html","title":"component - EditorPageComponent","body":"\n                   \n\n\n\n\n\n  Components\n  EditorPageComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    libs/ngx-editorjs-demo/src/lib/containers/editor-page/editor-page.component.ts\n\n\n\n\n    \n        Implements\n    \n    \n                    AfterContentInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                ngx-editor-page\n            \n\n            \n                styleUrls\n                editor-page.component.scss\n            \n\n\n\n            \n                templateUrl\n                editor-page.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                form$\n                            \n                            \n                                    Private\n                                pageData$\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngAfterContentInit\n                            \n                            \n                                    Public\n                                onSubmit\n                            \n                        \n                    \n                \n\n\n\n\n\n                    \n                        \n                            Accessors\n                        \n                    \n                    \n                        \n                            \n                                \n                                    form\n                                \n                            \n                        \n                    \n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(fb: FormBuilder, editor: NgxEditorJSService)\n                    \n                \n                        \n                            \n                                Defined in libs/ngx-editorjs-demo/src/lib/containers/editor-page/editor-page.component.ts:12\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        fb\n                                                  \n                                                        \n                                                                        FormBuilder\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        editor\n                                                  \n                                                        \n                                                                        NgxEditorJSService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngAfterContentInit\n                        \n                        \n                    \n                \n            \n            \n                \nngAfterContentInit()\n                \n            \n\n\n            \n                \n                    Defined in libs/ngx-editorjs-demo/src/lib/containers/editor-page/editor-page.component.ts:26\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            onSubmit\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    onSubmit()\n                \n            \n\n\n            \n                \n                    Defined in libs/ngx-editorjs-demo/src/lib/containers/editor-page/editor-page.component.ts:30\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            form$\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : this.fb.group({\n    pageTitle: ['', [Validators.required]],\n    pageTags: this.fb.array([])\n  })\n                        \n                    \n                        \n                            \n                                    Defined in libs/ngx-editorjs-demo/src/lib/containers/editor-page/editor-page.component.ts:15\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            pageData$\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     Observable\n\n                        \n                    \n                        \n                            \n                                    Defined in libs/ngx-editorjs-demo/src/lib/containers/editor-page/editor-page.component.ts:20\n                            \n                        \n\n\n            \n        \n\n\n    \n    \n        Accessors\n    \n        \n            \n                \n                    \n                        \n                        form\n                    \n                \n\n                \n                    \n                        getform()\n                    \n                \n                            \n                                \n                                    Defined in libs/ngx-editorjs-demo/src/lib/containers/editor-page/editor-page.component.ts:22\n                                \n                            \n\n            \n        \n\n\n\n\n    \n        import { AfterContentInit, Component } from '@angular/core';\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\nimport { Block, NgxEditorJSService } from '@tinynodes/ngx-editorjs';\nimport { combineLatest, Observable } from 'rxjs';\nimport { switchMap, tap } from 'rxjs/operators';\n\n@Component({\n  selector: 'ngx-editor-page',\n  templateUrl: 'editor-page.component.html',\n  styleUrls: ['editor-page.component.scss']\n})\nexport class EditorPageComponent implements AfterContentInit {\n  constructor(private readonly fb: FormBuilder, private readonly editor: NgxEditorJSService) {}\n\n  private form$ = this.fb.group({\n    pageTitle: ['', [Validators.required]],\n    pageTags: this.fb.array([])\n  });\n\n  private pageData$: Observable[]>)[]>;\n\n  get form(): FormGroup {\n    return this.form$;\n  }\n\n  ngAfterContentInit() {\n    // this.pageData$ = combineLatest([this.form$, this.editor.blocks]);\n  }\n\n  public onSubmit() {\n    this.pageData$.pipe(\n      switchMap(([form, blocks]) => {\n        return [];\n      })\n    );\n  }\n}\n\n    \n\n    \n        \n  Ngx-EditorJS Pages Manager\n  A useful demo of the\n    @tinynodes/ngx-editorjs\n    module\n  \n    How to use\n    Click on the editor area below, the EditorJS block tool should appear.\n    Add blocks to the page\n  \n   \n\n\n    \n\n    \n                \n                    editor-page.component.scss\n                \n                :host {\n  width: 100%;\n  height: 100vh;\n}\n\n.page {\n  width: 100%;\n}\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '  Ngx-EditorJS Pages Manager  A useful demo of the    @tinynodes/ngx-editorjs    module      How to use    Click on the editor area below, the EditorJS block tool should appear.    Add blocks to the page     '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'tinynodes-root'},{'name': 'EditorPageComponent', 'selector': 'ngx-editor-page'},{'name': 'NavBarComponent', 'selector': 'tinynodes-nav-bar'},{'name': 'NgxEditorJSComponent', 'selector': 'ngx-editorjs'},{'name': 'PageContainerComponent', 'selector': 'ngx-page-container'},{'name': 'SidebarComponent', 'selector': 'tinynodes-sidebar'}];\n    var DIRECTIVES = [{'name': 'NgxEditorJSDirective', 'selector': '[ngxEditorJS]'}];\n    var ACTUAL_COMPONENT = {'name': 'EditorPageComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/Header.html":{"url":"interfaces/Header.html","title":"interface - Header","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  Header\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            libs/ngx-editorjs/src/lib/types/blocks.ts\n        \n\n            \n                Description\n            \n            \n                Default data type for a header block\n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        level\n                                \n                                \n                                        text\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        level\n                                    \n                                \n                                \n                                    \n                                        level:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    The header level from 1-6\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        text\n                                    \n                                \n                                \n                                    \n                                        text:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    The header text\n\n                                \n                            \n                        \n                    \n            \n    \n\n\n    \n        export interface Block {\n  /**\n   * The EditorJS block type\n   */\n  type: string;\n\n  /**\n   * The data interface for the block type\n   */\n  data: T;\n\n  /**\n   * Additional properties on the type\n   */\n  [key: string]: any;\n}\n\n/**\n * Available list styles, supports `ordered` and `unordered`.\n * A custom string can also be added\n */\nexport type ListStyle = 'ordered' | 'unordered' | string;\n\n/**\n * Default data type for a list block\n */\nexport interface List {\n  /**\n   * The list style\n   */\n  style: ListStyle;\n  /**\n   * List items of type T\n   */\n  items: T[];\n}\n\n/**\n * The default list block is provided by the EditorJS list plugin\n */\nexport interface ListBlock extends Block> {\n  /**\n   * The EditorJS block type\n   */\n  type: 'list';\n}\n\n/**\n * Default data type for a paragraph block\n */\ninterface Paragraph {\n  /**\n   * The paragraph text\n   */\n  text: string;\n}\n\n/**\n * Interface for a paragraph block\n */\nexport interface ParagraphBlock extends Block {\n  /**\n   * The EditorJS block type\n   */\n  type: 'paragraph';\n}\n\n/**\n * Default data type for a header block\n */\ninterface Header {\n  /**\n   * The header text\n   */\n  text: string;\n  /**\n   * The header level from 1-6\n   */\n  level: number;\n}\n\n/**\n * Interface for a header block\n */\nexport interface HeaderBlock extends Block {\n  /**\n   * The EditorJS block type\n   */\n  type: 'header';\n}\n\n/**\n * Default data type for a header block\n */\nexport interface Image {\n  /**\n   * The image URL\n   */\n  url: string;\n  /**\n   * Optional image caption\n   */\n  caption?: string;\n  /**\n   * Optional border property\n   */\n  withBorder?: boolean;\n\n  /**\n   * Optional background property\n   */\n  withBackground?: boolean;\n\n  /**\n   * Optional stretch property\n   */\n  stretched?: boolean;\n}\n\n/**\n * Interface for a image block\n */\nexport interface ImageBlock extends Block {\n  /**\n   * The EditorJS block type\n   */\n  type: 'image';\n}\n\n/**\n * Type of all the basic block type\n */\nexport type BlockTypes = ParagraphBlock | HeaderBlock | ImageBlock | ListBlock | Block;\n\n    \n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/HeaderBlock.html":{"url":"interfaces/HeaderBlock.html","title":"interface - HeaderBlock","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  HeaderBlock\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            libs/ngx-editorjs/src/lib/types/blocks.ts\n        \n\n            \n                Description\n            \n            \n                Interface for a header block\n\n            \n\n            \n                Extends\n            \n            \n                        Block\n            \n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        type\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        type\n                                    \n                                \n                                \n                                    \n                                        type:     \n\n                                    \n                                \n\n\n\n\n\n\n\n                            \n                                \n                                    The EditorJS block type\n\n                                \n                            \n                        \n                    \n            \n    \n\n\n    \n        export interface Block {\n  /**\n   * The EditorJS block type\n   */\n  type: string;\n\n  /**\n   * The data interface for the block type\n   */\n  data: T;\n\n  /**\n   * Additional properties on the type\n   */\n  [key: string]: any;\n}\n\n/**\n * Available list styles, supports `ordered` and `unordered`.\n * A custom string can also be added\n */\nexport type ListStyle = 'ordered' | 'unordered' | string;\n\n/**\n * Default data type for a list block\n */\nexport interface List {\n  /**\n   * The list style\n   */\n  style: ListStyle;\n  /**\n   * List items of type T\n   */\n  items: T[];\n}\n\n/**\n * The default list block is provided by the EditorJS list plugin\n */\nexport interface ListBlock extends Block> {\n  /**\n   * The EditorJS block type\n   */\n  type: 'list';\n}\n\n/**\n * Default data type for a paragraph block\n */\ninterface Paragraph {\n  /**\n   * The paragraph text\n   */\n  text: string;\n}\n\n/**\n * Interface for a paragraph block\n */\nexport interface ParagraphBlock extends Block {\n  /**\n   * The EditorJS block type\n   */\n  type: 'paragraph';\n}\n\n/**\n * Default data type for a header block\n */\ninterface Header {\n  /**\n   * The header text\n   */\n  text: string;\n  /**\n   * The header level from 1-6\n   */\n  level: number;\n}\n\n/**\n * Interface for a header block\n */\nexport interface HeaderBlock extends Block {\n  /**\n   * The EditorJS block type\n   */\n  type: 'header';\n}\n\n/**\n * Default data type for a header block\n */\nexport interface Image {\n  /**\n   * The image URL\n   */\n  url: string;\n  /**\n   * Optional image caption\n   */\n  caption?: string;\n  /**\n   * Optional border property\n   */\n  withBorder?: boolean;\n\n  /**\n   * Optional background property\n   */\n  withBackground?: boolean;\n\n  /**\n   * Optional stretch property\n   */\n  stretched?: boolean;\n}\n\n/**\n * Interface for a image block\n */\nexport interface ImageBlock extends Block {\n  /**\n   * The EditorJS block type\n   */\n  type: 'image';\n}\n\n/**\n * Type of all the basic block type\n */\nexport type BlockTypes = ParagraphBlock | HeaderBlock | ImageBlock | ListBlock | Block;\n\n    \n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/Image.html":{"url":"interfaces/Image.html","title":"interface - Image","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  Image\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            libs/ngx-editorjs/src/lib/types/blocks.ts\n        \n\n            \n                Description\n            \n            \n                Default data type for a header block\n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                            Optional\n                                        caption\n                                \n                                \n                                            Optional\n                                        stretched\n                                \n                                \n                                        url\n                                \n                                \n                                            Optional\n                                        withBackground\n                                \n                                \n                                            Optional\n                                        withBorder\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        caption\n                                    \n                                \n                                \n                                    \n                                        caption:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    Optional image caption\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        stretched\n                                    \n                                \n                                \n                                    \n                                        stretched:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    Optional stretch property\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        url\n                                    \n                                \n                                \n                                    \n                                        url:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    The image URL\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        withBackground\n                                    \n                                \n                                \n                                    \n                                        withBackground:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    Optional background property\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        withBorder\n                                    \n                                \n                                \n                                    \n                                        withBorder:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    Optional border property\n\n                                \n                            \n                        \n                    \n            \n    \n\n\n    \n        export interface Block {\n  /**\n   * The EditorJS block type\n   */\n  type: string;\n\n  /**\n   * The data interface for the block type\n   */\n  data: T;\n\n  /**\n   * Additional properties on the type\n   */\n  [key: string]: any;\n}\n\n/**\n * Available list styles, supports `ordered` and `unordered`.\n * A custom string can also be added\n */\nexport type ListStyle = 'ordered' | 'unordered' | string;\n\n/**\n * Default data type for a list block\n */\nexport interface List {\n  /**\n   * The list style\n   */\n  style: ListStyle;\n  /**\n   * List items of type T\n   */\n  items: T[];\n}\n\n/**\n * The default list block is provided by the EditorJS list plugin\n */\nexport interface ListBlock extends Block> {\n  /**\n   * The EditorJS block type\n   */\n  type: 'list';\n}\n\n/**\n * Default data type for a paragraph block\n */\ninterface Paragraph {\n  /**\n   * The paragraph text\n   */\n  text: string;\n}\n\n/**\n * Interface for a paragraph block\n */\nexport interface ParagraphBlock extends Block {\n  /**\n   * The EditorJS block type\n   */\n  type: 'paragraph';\n}\n\n/**\n * Default data type for a header block\n */\ninterface Header {\n  /**\n   * The header text\n   */\n  text: string;\n  /**\n   * The header level from 1-6\n   */\n  level: number;\n}\n\n/**\n * Interface for a header block\n */\nexport interface HeaderBlock extends Block {\n  /**\n   * The EditorJS block type\n   */\n  type: 'header';\n}\n\n/**\n * Default data type for a header block\n */\nexport interface Image {\n  /**\n   * The image URL\n   */\n  url: string;\n  /**\n   * Optional image caption\n   */\n  caption?: string;\n  /**\n   * Optional border property\n   */\n  withBorder?: boolean;\n\n  /**\n   * Optional background property\n   */\n  withBackground?: boolean;\n\n  /**\n   * Optional stretch property\n   */\n  stretched?: boolean;\n}\n\n/**\n * Interface for a image block\n */\nexport interface ImageBlock extends Block {\n  /**\n   * The EditorJS block type\n   */\n  type: 'image';\n}\n\n/**\n * Type of all the basic block type\n */\nexport type BlockTypes = ParagraphBlock | HeaderBlock | ImageBlock | ListBlock | Block;\n\n    \n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/ImageBlock.html":{"url":"interfaces/ImageBlock.html","title":"interface - ImageBlock","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  ImageBlock\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            libs/ngx-editorjs/src/lib/types/blocks.ts\n        \n\n            \n                Description\n            \n            \n                Interface for a image block\n\n            \n\n            \n                Extends\n            \n            \n                        Block\n            \n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        type\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        type\n                                    \n                                \n                                \n                                    \n                                        type:     \n\n                                    \n                                \n\n\n\n\n\n\n\n                            \n                                \n                                    The EditorJS block type\n\n                                \n                            \n                        \n                    \n            \n    \n\n\n    \n        export interface Block {\n  /**\n   * The EditorJS block type\n   */\n  type: string;\n\n  /**\n   * The data interface for the block type\n   */\n  data: T;\n\n  /**\n   * Additional properties on the type\n   */\n  [key: string]: any;\n}\n\n/**\n * Available list styles, supports `ordered` and `unordered`.\n * A custom string can also be added\n */\nexport type ListStyle = 'ordered' | 'unordered' | string;\n\n/**\n * Default data type for a list block\n */\nexport interface List {\n  /**\n   * The list style\n   */\n  style: ListStyle;\n  /**\n   * List items of type T\n   */\n  items: T[];\n}\n\n/**\n * The default list block is provided by the EditorJS list plugin\n */\nexport interface ListBlock extends Block> {\n  /**\n   * The EditorJS block type\n   */\n  type: 'list';\n}\n\n/**\n * Default data type for a paragraph block\n */\ninterface Paragraph {\n  /**\n   * The paragraph text\n   */\n  text: string;\n}\n\n/**\n * Interface for a paragraph block\n */\nexport interface ParagraphBlock extends Block {\n  /**\n   * The EditorJS block type\n   */\n  type: 'paragraph';\n}\n\n/**\n * Default data type for a header block\n */\ninterface Header {\n  /**\n   * The header text\n   */\n  text: string;\n  /**\n   * The header level from 1-6\n   */\n  level: number;\n}\n\n/**\n * Interface for a header block\n */\nexport interface HeaderBlock extends Block {\n  /**\n   * The EditorJS block type\n   */\n  type: 'header';\n}\n\n/**\n * Default data type for a header block\n */\nexport interface Image {\n  /**\n   * The image URL\n   */\n  url: string;\n  /**\n   * Optional image caption\n   */\n  caption?: string;\n  /**\n   * Optional border property\n   */\n  withBorder?: boolean;\n\n  /**\n   * Optional background property\n   */\n  withBackground?: boolean;\n\n  /**\n   * Optional stretch property\n   */\n  stretched?: boolean;\n}\n\n/**\n * Interface for a image block\n */\nexport interface ImageBlock extends Block {\n  /**\n   * The EditorJS block type\n   */\n  type: 'image';\n}\n\n/**\n * Type of all the basic block type\n */\nexport type BlockTypes = ParagraphBlock | HeaderBlock | ImageBlock | ListBlock | Block;\n\n    \n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/List.html":{"url":"interfaces/List.html","title":"interface - List","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  List\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            libs/ngx-editorjs/src/lib/types/blocks.ts\n        \n\n            \n                Description\n            \n            \n                Default data type for a list block\n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        items\n                                \n                                \n                                        style\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        items\n                                    \n                                \n                                \n                                    \n                                        items:     T[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     T[]\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    List items of type T\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        style\n                                    \n                                \n                                \n                                    \n                                        style:         ListStyle\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         ListStyle\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    The list style\n\n                                \n                            \n                        \n                    \n            \n    \n\n\n    \n        export interface Block {\n  /**\n   * The EditorJS block type\n   */\n  type: string;\n\n  /**\n   * The data interface for the block type\n   */\n  data: T;\n\n  /**\n   * Additional properties on the type\n   */\n  [key: string]: any;\n}\n\n/**\n * Available list styles, supports `ordered` and `unordered`.\n * A custom string can also be added\n */\nexport type ListStyle = 'ordered' | 'unordered' | string;\n\n/**\n * Default data type for a list block\n */\nexport interface List {\n  /**\n   * The list style\n   */\n  style: ListStyle;\n  /**\n   * List items of type T\n   */\n  items: T[];\n}\n\n/**\n * The default list block is provided by the EditorJS list plugin\n */\nexport interface ListBlock extends Block> {\n  /**\n   * The EditorJS block type\n   */\n  type: 'list';\n}\n\n/**\n * Default data type for a paragraph block\n */\ninterface Paragraph {\n  /**\n   * The paragraph text\n   */\n  text: string;\n}\n\n/**\n * Interface for a paragraph block\n */\nexport interface ParagraphBlock extends Block {\n  /**\n   * The EditorJS block type\n   */\n  type: 'paragraph';\n}\n\n/**\n * Default data type for a header block\n */\ninterface Header {\n  /**\n   * The header text\n   */\n  text: string;\n  /**\n   * The header level from 1-6\n   */\n  level: number;\n}\n\n/**\n * Interface for a header block\n */\nexport interface HeaderBlock extends Block {\n  /**\n   * The EditorJS block type\n   */\n  type: 'header';\n}\n\n/**\n * Default data type for a header block\n */\nexport interface Image {\n  /**\n   * The image URL\n   */\n  url: string;\n  /**\n   * Optional image caption\n   */\n  caption?: string;\n  /**\n   * Optional border property\n   */\n  withBorder?: boolean;\n\n  /**\n   * Optional background property\n   */\n  withBackground?: boolean;\n\n  /**\n   * Optional stretch property\n   */\n  stretched?: boolean;\n}\n\n/**\n * Interface for a image block\n */\nexport interface ImageBlock extends Block {\n  /**\n   * The EditorJS block type\n   */\n  type: 'image';\n}\n\n/**\n * Type of all the basic block type\n */\nexport type BlockTypes = ParagraphBlock | HeaderBlock | ImageBlock | ListBlock | Block;\n\n    \n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/ListBlock.html":{"url":"interfaces/ListBlock.html","title":"interface - ListBlock","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  ListBlock\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            libs/ngx-editorjs/src/lib/types/blocks.ts\n        \n\n            \n                Description\n            \n            \n                The default list block is provided by the EditorJS list plugin\n\n            \n\n            \n                Extends\n            \n            \n                        Block\n            \n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        type\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        type\n                                    \n                                \n                                \n                                    \n                                        type:     \n\n                                    \n                                \n\n\n\n\n\n\n\n                            \n                                \n                                    The EditorJS block type\n\n                                \n                            \n                        \n                    \n            \n    \n\n\n    \n        export interface Block {\n  /**\n   * The EditorJS block type\n   */\n  type: string;\n\n  /**\n   * The data interface for the block type\n   */\n  data: T;\n\n  /**\n   * Additional properties on the type\n   */\n  [key: string]: any;\n}\n\n/**\n * Available list styles, supports `ordered` and `unordered`.\n * A custom string can also be added\n */\nexport type ListStyle = 'ordered' | 'unordered' | string;\n\n/**\n * Default data type for a list block\n */\nexport interface List {\n  /**\n   * The list style\n   */\n  style: ListStyle;\n  /**\n   * List items of type T\n   */\n  items: T[];\n}\n\n/**\n * The default list block is provided by the EditorJS list plugin\n */\nexport interface ListBlock extends Block> {\n  /**\n   * The EditorJS block type\n   */\n  type: 'list';\n}\n\n/**\n * Default data type for a paragraph block\n */\ninterface Paragraph {\n  /**\n   * The paragraph text\n   */\n  text: string;\n}\n\n/**\n * Interface for a paragraph block\n */\nexport interface ParagraphBlock extends Block {\n  /**\n   * The EditorJS block type\n   */\n  type: 'paragraph';\n}\n\n/**\n * Default data type for a header block\n */\ninterface Header {\n  /**\n   * The header text\n   */\n  text: string;\n  /**\n   * The header level from 1-6\n   */\n  level: number;\n}\n\n/**\n * Interface for a header block\n */\nexport interface HeaderBlock extends Block {\n  /**\n   * The EditorJS block type\n   */\n  type: 'header';\n}\n\n/**\n * Default data type for a header block\n */\nexport interface Image {\n  /**\n   * The image URL\n   */\n  url: string;\n  /**\n   * Optional image caption\n   */\n  caption?: string;\n  /**\n   * Optional border property\n   */\n  withBorder?: boolean;\n\n  /**\n   * Optional background property\n   */\n  withBackground?: boolean;\n\n  /**\n   * Optional stretch property\n   */\n  stretched?: boolean;\n}\n\n/**\n * Interface for a image block\n */\nexport interface ImageBlock extends Block {\n  /**\n   * The EditorJS block type\n   */\n  type: 'image';\n}\n\n/**\n * Type of all the basic block type\n */\nexport type BlockTypes = ParagraphBlock | HeaderBlock | ImageBlock | ListBlock | Block;\n\n    \n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/MaterialModule.html":{"url":"modules/MaterialModule.html","title":"module - MaterialModule","body":"\n                   \n\n\n\n\n    Modules\n    MaterialModule\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            apps/ngx-tinynodes/src/app/material.module.ts\n        \n\n\n\n\n        \n            \n            \n        \n\n\n    \n\n\n    \n        import { NgModule } from '@angular/core';\n\nimport { MatSidenavModule, MatToolbarModule, MatIconModule, MatListModule, MatCardModule } from '@angular/material';\n\n@NgModule({\n  imports: [MatSidenavModule, MatToolbarModule, MatIconModule, MatListModule, MatCardModule],\n  exports: [MatSidenavModule, MatToolbarModule, MatIconModule, MatListModule, MatCardModule]\n})\nexport class MaterialModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/MenuItem.html":{"url":"interfaces/MenuItem.html","title":"interface - MenuItem","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  MenuItem\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/ngx-tinynodes/src/app/store/app/application.model.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        label\n                                \n                                \n                                        link\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        label\n                                    \n                                \n                                \n                                    \n                                        label:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        link\n                                    \n                                \n                                \n                                    \n                                        link:         RouterLink\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         RouterLink\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { RouterLink } from '@angular/router';\n\nexport interface MenuItem {\n  label: string;\n  link: RouterLink;\n}\n\nexport interface ApplicationState {\n  hidden: boolean;\n  menu: MenuItem[];\n}\n\n    \n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/NavBarComponent.html":{"url":"components/NavBarComponent.html","title":"component - NavBarComponent","body":"\n                   \n\n\n\n\n\n  Components\n  NavBarComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    apps/ngx-tinynodes/src/app/components/nav-bar/nav-bar.component.ts\n\n\n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                tinynodes-nav-bar\n            \n\n            \n                styleUrls\n                nav-bar.component.scss\n            \n\n\n\n            \n                templateUrl\n                nav-bar.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                toggleSidebar\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                title\n                            \n                        \n                    \n                \n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(app: AppService)\n                    \n                \n                        \n                            \n                                Defined in apps/ngx-tinynodes/src/app/components/nav-bar/nav-bar.component.ts:11\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        app\n                                                  \n                                                        \n                                                                        AppService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        title\n                    \n                \n                \n                    \n                        Default value : 'Navbar Component'\n                    \n                \n                        \n                            \n                                    Defined in apps/ngx-tinynodes/src/app/components/nav-bar/nav-bar.component.ts:11\n                            \n                        \n            \n        \n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            toggleSidebar\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    toggleSidebar()\n                \n            \n\n\n            \n                \n                    Defined in apps/ngx-tinynodes/src/app/components/nav-bar/nav-bar.component.ts:15\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n\n\n\n\n    \n        import { Component, Input } from '@angular/core';\nimport { AppService } from '../../store/app/application.service';\n\n@Component({\n  selector: 'tinynodes-nav-bar',\n  templateUrl: 'nav-bar.component.html',\n  styleUrls: ['nav-bar.component.scss']\n})\nexport class NavBarComponent {\n  @Input()\n  title = 'Navbar Component';\n\n  constructor(private readonly app: AppService) {}\n\n  public toggleSidebar() {\n    this.app.toggleSidebar();\n  }\n}\n\n    \n\n    \n        \n  \n    menu\n  \n  &nbsp;\n  \n    {{ title }}\n  \n  \n    \n      \n        \n          Docs\n        \n      \n      \n        \n          Github\n        \n      \n      \n        \n          NPM\n        \n      \n    \n  \n\n\n    \n\n    \n                \n                    nav-bar.component.scss\n                \n                a {\n  text-decoration: none;\n  color: white;\n}\n\na:hover,\na:active {\n  color: lightgray;\n}\n\n.navigation-items {\n  list-style: none;\n  padding: 0;\n  margin: 0;\n  cursor: pointer;\n}\n\n.icon {\n  display: inline-block;\n  height: 30px;\n  margin: 0 auto;\n  padding-right: 5px;\n  text-align: center;\n  vertical-align: middle;\n  width: 15%;\n}\n\n.label {\n  display: inline-block;\n  line-height: 30px;\n  margin: 0;\n  width: 85%;\n}\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '      menu           {{ title }}                                Docs                                      Github                                      NPM                    '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'tinynodes-root'},{'name': 'EditorPageComponent', 'selector': 'ngx-editor-page'},{'name': 'NavBarComponent', 'selector': 'tinynodes-nav-bar'},{'name': 'NgxEditorJSComponent', 'selector': 'ngx-editorjs'},{'name': 'PageContainerComponent', 'selector': 'ngx-page-container'},{'name': 'SidebarComponent', 'selector': 'tinynodes-sidebar'}];\n    var DIRECTIVES = [{'name': 'NgxEditorJSDirective', 'selector': '[ngxEditorJS]'}];\n    var ACTUAL_COMPONENT = {'name': 'NavBarComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/NgxEditorJSComponent.html":{"url":"components/NgxEditorJSComponent.html","title":"component - NgxEditorJSComponent","body":"\n                   \n\n\n\n\n\n  Components\n  NgxEditorJSComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    libs/ngx-editorjs/src/lib/containers/editorjs-component/editorjs.component.ts\n\n\n    \n        Description\n    \n    \n        This component is provided as a shortcut to using EditorJS in your\napplication. The attributes are optional and without a default component\nwill be created\n\n    \n\n\n\n    \n        Example\n    \n    \n                \n                    \n                \n    \n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                ngx-editorjs\n            \n\n            \n                styleUrls\n                editorjs.component.scss\n            \n\n\n\n            \n                templateUrl\n                editorjs.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                editor\n                            \n                            \n                                    Public\n                                    Readonly\n                                service\n                            \n                        \n                    \n                \n\n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                blocks\n                            \n                            \n                                holder\n                            \n                        \n                    \n                \n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(service: NgxEditorJSService)\n                    \n                \n                        \n                            \n                                Defined in libs/ngx-editorjs/src/lib/containers/editorjs-component/editorjs.component.ts:35\n                            \n                        \n\n                \n                    \n                            When created an instance of the service is available as\na public interface\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        service\n                                                  \n                                                        \n                                                                        NgxEditorJSService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                The editor service\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        blocks\n                    \n                \n                \n                    \n                        Type :         Block[]\n\n                    \n                \n                        \n                            \n                                    Defined in libs/ngx-editorjs/src/lib/containers/editorjs-component/editorjs.component.ts:35\n                            \n                        \n                \n                    \n                        An initial set of blocks to render in the component\n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        holder\n                    \n                \n                \n                    \n                        Type :         string\n\n                    \n                \n                        \n                            \n                                    Defined in libs/ngx-editorjs/src/lib/containers/editorjs-component/editorjs.component.ts:29\n                            \n                        \n                \n                    \n                        The ID of the dom element that will hold the editor\n\n                    \n                \n            \n        \n\n\n\n\n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            editor\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     NgxEditorJSDirective\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @ViewChild(NgxEditorJSDirective)\n                            \n                        \n                    \n                        \n                            \n                                    Defined in libs/ngx-editorjs/src/lib/containers/editorjs-component/editorjs.component.ts:23\n                            \n                        \n\n                \n                    \n                        Access to the underlying editor directive\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                                Readonly\n                            service\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         NgxEditorJSService\n\n                        \n                    \n                        \n                            \n                                    Defined in libs/ngx-editorjs/src/lib/containers/editorjs-component/editorjs.component.ts:42\n                            \n                        \n\n                \n                    \n                        The editor service\n                    \n                \n\n            \n        \n\n\n\n\n\n    \n        import { Component, Input, ViewChild } from '@angular/core';\nimport { NgxEditorJSDirective } from '../../directives/ngx-editorjs.directive';\nimport { NgxEditorJSService } from '../../services/editorjs.service';\nimport { Block } from '../../types/blocks';\n\n/**\n * This component is provided as a shortcut to using EditorJS in your\n * application. The attributes are optional and without a default component\n * will be created\n *\n * @example\n * \n */\n@Component({\n  selector: 'ngx-editorjs',\n  templateUrl: 'editorjs.component.html',\n  styleUrls: ['editorjs.component.scss']\n})\nexport class NgxEditorJSComponent {\n  /**\n   * Access to the underlying editor directive\n   */\n  @ViewChild(NgxEditorJSDirective) public editor: NgxEditorJSDirective;\n\n  /**\n   * The ID of the dom element that will hold the editor\n   */\n  @Input()\n  public holder: string;\n\n  /**\n   * An initial set of blocks to render in the component\n   */\n  @Input()\n  public blocks: Block[];\n\n  /**\n   * When created an instance of the service is available as\n   * a public interface\n   * @param service The editor service\n   */\n  constructor(public readonly service: NgxEditorJSService) {}\n}\n\n    \n\n    \n        \n\n    \n\n    \n                \n                    editorjs.component.scss\n                \n                :host {\n  width: 100%;\n  height: 100vh;\n}\n\n.editor {\n  width: 100%;\n  height: 100vh;\n  border: 2px solid darkgray;\n  border-radius: 1em;\n  text-align: left;\n}\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = ''\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'tinynodes-root'},{'name': 'EditorPageComponent', 'selector': 'ngx-editor-page'},{'name': 'NavBarComponent', 'selector': 'tinynodes-nav-bar'},{'name': 'NgxEditorJSComponent', 'selector': 'ngx-editorjs'},{'name': 'PageContainerComponent', 'selector': 'ngx-page-container'},{'name': 'SidebarComponent', 'selector': 'tinynodes-sidebar'}];\n    var DIRECTIVES = [{'name': 'NgxEditorJSDirective', 'selector': '[ngxEditorJS]'}];\n    var ACTUAL_COMPONENT = {'name': 'NgxEditorJSComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/NgxEditorJSConfig.html":{"url":"interfaces/NgxEditorJSConfig.html","title":"interface - NgxEditorJSConfig","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  NgxEditorJSConfig\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            libs/ngx-editorjs/src/lib/types/config.ts\n        \n\n            \n                Description\n            \n            \n                The configuration option that can be passed to the NgxEditorJSModule.forRoot method\n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                            Optional\n                                        editorjs\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        editorjs\n                                    \n                                \n                                \n                                    \n                                        editorjs:         EditorJSConfig\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         EditorJSConfig\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    Configuration options for EditorJS\n\n                                \n                            \n                        \n                    \n            \n    \n\n\n    \n        import { InjectionToken } from '@angular/core';\nimport { OutputData, SanitizerConfig } from '@editorjs/editorjs';\n\n/**\n * Configuration for the EditorJS instance\n */\nexport interface EditorJSConfig {\n  /**\n   * ID of the element to hold the config\n   */\n  holder?: string;\n  /**\n   * If the EditorJS is autofocused on creation (default: false)\n   */\n  autofocus?: boolean;\n\n  /**\n   * The name of the initial block (default \"paragraph\")\n   */\n  initialBlock?: string;\n\n  /**\n   * Any initial output data to render\n   */\n  data?: OutputData;\n\n  /**\n   * First Block placeholder\n   */\n  placeholder?: string;\n\n  /**\n   * Define default sanitizer configuration\n   */\n  sanitizer?: SanitizerConfig;\n\n  /**\n   * If true, toolbar won't be shown\n   */\n  hideToolbar?: boolean;\n\n  /**\n   * Height of Editor's bottom area that allows to set focus on the last Block\n   */\n  minHeight?: number;\n}\n\n/**\n * The configuration option that can be passed to the `NgxEditorJSModule.forRoot` method\n */\nexport interface NgxEditorJSConfig {\n  /**\n   * Configuration options for `EditorJS`\n   */\n  editorjs?: EditorJSConfig;\n}\n\n/**\n * Injection token provied for `NgxEditorJSConfig`\n */\nexport const NGX_EDITORJS_CONFIG = new InjectionToken('NGX_EDITORJS_CONFIG');\n\n    \n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"directives/NgxEditorJSDirective.html":{"url":"directives/NgxEditorJSDirective.html","title":"directive - NgxEditorJSDirective","body":"\n                   \n\n\n\n\n\n\n\n  Directives\n  NgxEditorJSDirective\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            libs/ngx-editorjs/src/lib/directives/ngx-editorjs.directive.ts\n        \n\n            \n                Description\n            \n            \n                The main directive of ngx-editorjs provides a way to attach\nan EditorJS instance to any element and control it via\nAngular services and components\nTo use attach to any element with an id property\n\n            \n\n            \n                Implements\n            \n            \n                            OnDestroy\n                            OnChanges\n                            AfterViewInit\n            \n\n            \n                Example\n            \n            \n                        \n                            \n                        \n            \n\n        \n            Metadata\n            \n                \n\n                    \n                        Selector\n                        [ngxEditorJS]\n                    \n\n                \n            \n        \n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                    Readonly\n                                editorService\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngAfterViewInit\n                            \n                            \n                                ngOnChanges\n                            \n                            \n                                ngOnDestroy\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                blocks\n                            \n                        \n                    \n                \n\n\n\n\n                    \n                        \n                            Accessors\n                        \n                    \n                    \n                        \n                            \n                                \n                                    editor\n                                \n                                \n                                    service\n                                \n                            \n                        \n                    \n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(el: ElementRef, editorService: NgxEditorJSService)\n                    \n                \n                        \n                            \n                                Defined in libs/ngx-editorjs/src/lib/directives/ngx-editorjs.directive.ts:24\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        el\n                                                  \n                                                        \n                                                                        ElementRef\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        editorService\n                                                  \n                                                        \n                                                                        NgxEditorJSService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    Inputs\n        \n            \n                \n                    \n                        \n                        blocks\n                    \n                \n                \n                    \n                        Type :         Block[]\n\n                    \n                \n                \n                    \n                        Default value : []\n                    \n                \n                        \n                            \n                                    Defined in libs/ngx-editorjs/src/lib/directives/ngx-editorjs.directive.ts:24\n                            \n                        \n                \n                    \n                        Provide EditorJS blocks to render within the instance\n\n                    \n                \n            \n        \n\n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngAfterViewInit\n                        \n                        \n                    \n                \n            \n            \n                \nngAfterViewInit()\n                \n            \n\n\n            \n                \n                    Defined in libs/ngx-editorjs/src/lib/directives/ngx-editorjs.directive.ts:45\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngOnChanges\n                        \n                        \n                    \n                \n            \n            \n                \nngOnChanges(changes: SimpleChanges)\n                \n            \n\n\n            \n                \n                    Defined in libs/ngx-editorjs/src/lib/directives/ngx-editorjs.directive.ts:39\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    changes\n                                    \n                                                SimpleChanges\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngOnDestroy\n                        \n                        \n                    \n                \n            \n            \n                \nngOnDestroy()\n                \n            \n\n\n            \n                \n                    Defined in libs/ngx-editorjs/src/lib/directives/ngx-editorjs.directive.ts:49\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                                Readonly\n                            editorService\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         NgxEditorJSService\n\n                        \n                    \n                        \n                            \n                                    Defined in libs/ngx-editorjs/src/lib/directives/ngx-editorjs.directive.ts:26\n                            \n                        \n\n\n            \n        \n\n\n            \n    \n        Accessors\n    \n        \n            \n                \n                    \n                        \n                        editor\n                    \n                \n\n                \n                    \n                        geteditor()\n                    \n                \n                            \n                                \n                                    Defined in libs/ngx-editorjs/src/lib/directives/ngx-editorjs.directive.ts:31\n                                \n                            \n                    \n                        \n                                Get the instance of the editor this directive has created\n\n\n                                \n                                    Returns :     EditorJS\n\n                                \n                        \n                    \n\n            \n        \n        \n            \n                \n                    \n                        \n                        service\n                    \n                \n\n                \n                    \n                        getservice()\n                    \n                \n                            \n                                \n                                    Defined in libs/ngx-editorjs/src/lib/directives/ngx-editorjs.directive.ts:35\n                                \n                            \n\n            \n        \n\n\n    \n\n\n    \n        import { AfterViewInit, Directive, ElementRef, Input, OnChanges, OnDestroy, SimpleChanges } from '@angular/core';\nimport EditorJS from '@editorjs/editorjs';\nimport { NgxEditorJSService } from '../services/editorjs.service';\nimport { Block } from '../types/blocks';\n\n/**\n * The main directive of `ngx-editorjs` provides a way to attach\n * an EditorJS instance to any element and control it via\n * Angular services and components\n *\n * To use attach to any element with an `id` property\n *\n * @example\n * \n */\n@Directive({\n  selector: '[ngxEditorJS]'\n})\nexport class NgxEditorJSDirective implements OnDestroy, OnChanges, AfterViewInit {\n  /**\n   * Provide `EditorJS` blocks to render within the instance\n   */\n  @Input()\n  blocks: Block[] = [];\n\n  constructor(private readonly el: ElementRef, public readonly editorService: NgxEditorJSService) {}\n\n  /**\n   * Get the instance of the editor this directive has created\n   */\n  get editor(): EditorJS {\n    return this.editorService.getEditor(this.el.nativeElement.id);\n  }\n\n  get service(): NgxEditorJSService {\n    return this.editorService;\n  }\n\n  ngOnChanges(changes: SimpleChanges): void {\n    if (changes.blocks && !changes.blocks.firstChange) {\n      this.editorService.update(this.el.nativeElement.id, changes.blocks.currentValue);\n    }\n  }\n\n  ngAfterViewInit() {\n    this.editorService.createEditor(this.el.nativeElement.id, this.blocks);\n  }\n\n  ngOnDestroy() {\n    this.editorService.destroy(this.el.nativeElement.id);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/NgxEditorJSEffects.html":{"url":"injectables/NgxEditorJSEffects.html","title":"injectable - NgxEditorJSEffects","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  NgxEditorJSEffects\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            libs/ngx-editorjs-ngrx/src/lib/effects/ngx-editorjs.effects.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                $save\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(actions$: Actions, editorService: NgxEditorJSService)\n                    \n                \n                        \n                            \n                                Defined in libs/ngx-editorjs-ngrx/src/lib/effects/ngx-editorjs.effects.ts:10\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        actions$\n                                                  \n                                                        \n                                                                    Actions\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        editorService\n                                                  \n                                                        \n                                                                        NgxEditorJSService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            $save\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : this.actions$.pipe(\n    ofType(EditorJSActionTypes.SaveStart),\n    map((action: SaveStart) => {\n      this.editorService.save(action.payload.holder);\n      return action;\n    }),\n    withLatestFrom([\n      map((action: SaveStart) => action),\n      (action: SaveStart): Observable => this.editorService.getBlocks(action.payload.holder)\n    ]),\n    mergeMap(([action, blocks]) => {\n      blocks.subscribe();\n      return new SaveEnd({\n        holder: action.payload.holder,\n        data: {\n          time: Date.now(),\n          version: EditorJS.version,\n          blocks: blocks\n        }\n      });\n    })\n  )\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Effect({dispatch: false})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in libs/ngx-editorjs-ngrx/src/lib/effects/ngx-editorjs.effects.ts:14\n                            \n                        \n\n\n            \n        \n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { Effect, Actions, ofType } from '@ngrx/effects';\nimport { NgxEditorJSService, Block } from '@tinynodes/ngx-editorjs';\nimport { EditorJSActionTypes, SaveStart, SaveEnd } from '../actions/ngx-editorjs.actions';\nimport { switchMap, map, withLatestFrom, tap, mergeMap } from 'rxjs/operators';\nimport { Observable } from 'rxjs';\nimport EditorJS from '@editorjs/editorjs';\n\n@Injectable()\nexport class NgxEditorJSEffects {\n  constructor(private readonly actions$: Actions, private readonly editorService: NgxEditorJSService) {}\n\n  @Effect({ dispatch: false })\n  $save = this.actions$.pipe(\n    ofType(EditorJSActionTypes.SaveStart),\n    map((action: SaveStart) => {\n      this.editorService.save(action.payload.holder);\n      return action;\n    }),\n    withLatestFrom([\n      map((action: SaveStart) => action),\n      (action: SaveStart): Observable => this.editorService.getBlocks(action.payload.holder)\n    ]),\n    mergeMap(([action, blocks]) => {\n      blocks.subscribe();\n      return new SaveEnd({\n        holder: action.payload.holder,\n        data: {\n          time: Date.now(),\n          version: EditorJS.version,\n          blocks: blocks\n        }\n      });\n    })\n  );\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/NgxEditorJSModule.html":{"url":"modules/NgxEditorJSModule.html","title":"module - NgxEditorJSModule","body":"\n                   \n\n\n\n\n    Modules\n    NgxEditorJSModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_NgxEditorJSModule\n\n\n\ncluster_NgxEditorJSModule_declarations\n\n\n\ncluster_NgxEditorJSModule_imports\n\n\n\ncluster_NgxEditorJSModule_exports\n\n\n\ncluster_NgxEditorJSModule_providers\n\n\n\n\nNgxEditorJSComponent\n\nNgxEditorJSComponent\n\n\n\nNgxEditorJSModule\n\nNgxEditorJSModule\n\nNgxEditorJSModule -->\n\nNgxEditorJSComponent->NgxEditorJSModule\n\n\n\n\n\nNgxEditorJSDirective\n\nNgxEditorJSDirective\n\nNgxEditorJSModule -->\n\nNgxEditorJSDirective->NgxEditorJSModule\n\n\n\n\n\nNgxEditorJSComponent \n\nNgxEditorJSComponent \n\nNgxEditorJSComponent  -->\n\nNgxEditorJSModule->NgxEditorJSComponent \n\n\n\n\n\nNgxEditorJSDirective \n\nNgxEditorJSDirective \n\nNgxEditorJSDirective  -->\n\nNgxEditorJSModule->NgxEditorJSDirective \n\n\n\n\n\nNgxEditorJSPluginServiceModule\n\nNgxEditorJSPluginServiceModule\n\nNgxEditorJSModule -->\n\nNgxEditorJSPluginServiceModule->NgxEditorJSModule\n\n\n\n\n\nPluginHeaderModule\n\nPluginHeaderModule\n\nNgxEditorJSModule -->\n\nPluginHeaderModule->NgxEditorJSModule\n\n\n\n\n\nPluginListModule\n\nPluginListModule\n\nNgxEditorJSModule -->\n\nPluginListModule->NgxEditorJSModule\n\n\n\n\n\nPluginParagraphModule\n\nPluginParagraphModule\n\nNgxEditorJSModule -->\n\nPluginParagraphModule->NgxEditorJSModule\n\n\n\n\n\nNgxEditorJSService\n\nNgxEditorJSService\n\nNgxEditorJSModule -->\n\nNgxEditorJSService->NgxEditorJSModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            libs/ngx-editorjs/src/lib/ngx-editorjs.module.ts\n        \n\n\n        \n            Description\n        \n        \n            The @tinynodes/ngx-editorjs module provides a collection of features to allow\nany Angular app to use and control an EditorJS instance\nTo use import the module NgxEditorJSModule.forRoot() into the root of your application.\nThe forRoot method takes an optional NgxEditorJSConfig config, this will provide a\ndefault instance.\n\n        \n\n\n        \n            \n                \n                    Declarations\n                    \n                        \n                            NgxEditorJSComponent\n                        \n                        \n                            NgxEditorJSDirective\n                        \n                    \n                \n                \n                    Providers\n                    \n                        \n                            NgxEditorJSService\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            NgxEditorJSPluginServiceModule\n                        \n                        \n                            PluginHeaderModule\n                        \n                        \n                            PluginListModule\n                        \n                        \n                            PluginParagraphModule\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            NgxEditorJSComponent\n                        \n                        \n                            NgxEditorJSDirective\n                        \n                    \n                \n            \n        \n\n        \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Static\n                            forRoot\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    forRoot(config: NgxEditorJSConfig)\n                \n            \n\n\n            \n                \n                    Defined in libs/ngx-editorjs/src/lib/ngx-editorjs.module.ts:66\n                \n            \n\n\n            \n                \n                    Use this method in the root of the application.  You can pass an optional configuration\nwhich sets some defaults, or use the provided defaults.\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Default value\n                                    Description\n                                \n                            \n                            \n                                \n                                    config\n                                    \n                                                NgxEditorJSConfig\n                                    \n\n                                    \n                                        No\n                                    \n\n                                    \n                                        DEFAULT_CONFIG\n                                    \n\n                                    \n                                        The optional configuration to pass\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         ModuleWithProviders\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n    \n\n\n    \n        import { CommonModule } from '@angular/common';\nimport { ModuleWithProviders, NgModule, Optional, SkipSelf } from '@angular/core';\nimport {\n  InitialPlugins,\n  NgxEditorJSPluginServiceModule,\n  PluginConfig,\n  PluginHeader,\n  PluginHeaderModule,\n  PluginList,\n  PluginListModule,\n  PluginParagraph,\n  PluginParagraphModule\n} from '@tinynodes/ngx-editorjs-plugins';\nimport { NgxEditorJSComponent } from './containers/editorjs-component/editorjs.component';\nimport { NgxEditorJSDirective } from './directives/ngx-editorjs.directive';\nimport { NgxEditorJSService } from './services/editorjs.service';\nimport { NgxEditorJSConfig, NGX_EDITORJS_CONFIG } from './types/config';\n\n/**\n * Factory method for creating the initial set of tool plugins used with the\n * editor\n */\nexport function createTools(): PluginConfig {\n  return { header: new PluginHeader(), list: new PluginList(), paragraph: new PluginParagraph() };\n}\n\n/**\n * A default configuration used by each EditorJS instance\n */\nconst DEFAULT_CONFIG: NgxEditorJSConfig = {\n  editorjs: { autofocus: false, initialBlock: 'paragraph', holder: 'editor-js' }\n};\n\n/**\n * The `@tinynodes/ngx-editorjs` module provides a collection of features to allow\n * any Angular app to use and control an [EditorJS](http://editorjs.io) instance\n *\n * To use import the module `NgxEditorJSModule.forRoot()` into the root of your application.\n * The `forRoot` method takes an optional `NgxEditorJSConfig` config, this will provide a\n * default instance.\n */\n@NgModule({\n  imports: [CommonModule, PluginHeaderModule, PluginListModule, PluginParagraphModule, NgxEditorJSPluginServiceModule],\n  declarations: [NgxEditorJSComponent, NgxEditorJSDirective],\n  exports: [NgxEditorJSComponent, NgxEditorJSDirective],\n  providers: [\n    NgxEditorJSService,\n    {\n      provide: InitialPlugins,\n      useFactory: createTools\n    }\n  ]\n})\nexport class NgxEditorJSModule {\n  constructor(\n    @Optional()\n    @SkipSelf()\n    parentModule: NgxEditorJSModule\n  ) {}\n\n  /**\n   * Use this method in the root of the application.  You can pass an optional configuration\n   * which sets some defaults, or use the provided defaults.\n   * @param config The optional configuration to pass\n   */\n  static forRoot(config: NgxEditorJSConfig = DEFAULT_CONFIG): ModuleWithProviders {\n    return {\n      ngModule: NgxEditorJSModule,\n      providers: [\n        {\n          provide: NGX_EDITORJS_CONFIG,\n          useValue: {\n            editorjs: {\n              autofocus: config.editorjs.autofocus || DEFAULT_CONFIG.editorjs.autofocus,\n              holder: config.editorjs.holder || DEFAULT_CONFIG.editorjs.holder,\n              initialBlock: config.editorjs.initialBlock || DEFAULT_CONFIG.editorjs.initialBlock,\n              data: config.editorjs.data\n            }\n          }\n        }\n      ]\n    };\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/NgxEditorJSPluginService.html":{"url":"injectables/NgxEditorJSPluginService.html","title":"injectable - NgxEditorJSPluginService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  NgxEditorJSPluginService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            libs/ngx-editorjs-plugins/src/lib/services/plugins.service.ts\n        \n\n            \n                Description\n            \n            \n                The plugin service provides a singleton to store all plugins injected into the application\nand makes them available for all instances of EditorJS\n\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                pluginsMap\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                add\n                            \n                            \n                                    Public\n                                get\n                            \n                            \n                                    Public\n                                getTools\n                            \n                            \n                                    Public\n                                remove\n                            \n                        \n                    \n                \n\n\n\n\n\n                    \n                        \n                            Accessors\n                        \n                    \n                    \n                        \n                            \n                                \n                                    plugins\n                                \n                            \n                        \n                    \n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(initialPlugins: PluginConfig, userPlugins: PluginConfig)\n                    \n                \n                        \n                            \n                                Defined in libs/ngx-editorjs-plugins/src/lib/services/plugins.service.ts:15\n                            \n                        \n\n                \n                    \n                            When the class is initialized the initial plugins and any user plugins\nwill be passed in and merged and stored in the config map\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        initialPlugins\n                                                  \n                                                        \n                                                                        PluginConfig\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                Default plugins produced by the module\n\n                                                        \n                                                \n                                                \n                                                        userPlugins\n                                                  \n                                                        \n                                                                        PluginConfig\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                User plugins injected into the application\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            add\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    add(key: string, plugin: BasePlugin)\n                \n            \n\n\n            \n                \n                    Defined in libs/ngx-editorjs-plugins/src/lib/services/plugins.service.ts:35\n                \n            \n\n\n            \n                \n                    Add a plugin to the store\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    key\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        The key for the map to store the plugin\n\n                                    \n                                \n                                \n                                    plugin\n                                    \n                                                BasePlugin\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        The plugin instance to add to the service\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            get\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    get(key: string)\n                \n            \n\n\n            \n                \n                    Defined in libs/ngx-editorjs-plugins/src/lib/services/plugins.service.ts:52\n                \n            \n\n\n            \n                \n                    Get a single plugin from the map\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    key\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         BasePlugin\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            getTools\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    getTools(exclude: string[])\n                \n            \n\n\n            \n                \n                    Defined in libs/ngx-editorjs-plugins/src/lib/services/plugins.service.ts:67\n                \n            \n\n\n            \n                \n                    Returns a map of tools to be initialized by the editor\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Default value\n                                    Description\n                                \n                            \n                            \n                                \n                                    exclude\n                                    \n                                            string[]\n                                    \n\n                                    \n                                        No\n                                    \n\n                                    \n                                        []\n                                    \n\n                                    \n                                        Optional array of keys to exclude from the map\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         ToolSettingsMap\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            remove\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    remove(key: string)\n                \n            \n\n\n            \n                \n                    Defined in libs/ngx-editorjs-plugins/src/lib/services/plugins.service.ts:43\n                \n            \n\n\n            \n                \n                    Remove a plugin from the store\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    key\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            pluginsMap\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         PluginConfig\n\n                        \n                    \n                    \n                        \n                            Default value : {}\n                        \n                    \n                        \n                            \n                                    Defined in libs/ngx-editorjs-plugins/src/lib/services/plugins.service.ts:15\n                            \n                        \n\n                \n                    \n                        Object map of the plugin configurations\n\n                    \n                \n\n            \n        \n\n\n            \n    \n        Accessors\n    \n        \n            \n                \n                    \n                        \n                        plugins\n                    \n                \n\n                \n                    \n                        getplugins()\n                    \n                \n                            \n                                \n                                    Defined in libs/ngx-editorjs-plugins/src/lib/services/plugins.service.ts:59\n                                \n                            \n                    \n                        \n                                Returns a map of all the plugins registered with this service\n\n\n                                \n                                    Returns :         PluginConfig\n\n                                \n                        \n                    \n\n            \n        \n\n    \n\n\n    \n        import { Inject, Injectable, Optional } from '@angular/core';\nimport { BasePlugin, InitialPlugins, PluginConfig, ToolSettingsMap, UserPlugins } from '../types/plugins';\n\n/**\n * The plugin service provides a singleton to store all plugins injected into the application\n * and makes them available for all instances of `EditorJS`\n */\n@Injectable({\n  providedIn: 'root'\n})\nexport class NgxEditorJSPluginService {\n  /**\n   * Object map of the plugin configurations\n   */\n  private pluginsMap: PluginConfig = {};\n\n  /**\n   * When the class is initialized the initial plugins and any user plugins\n   * will be passed in and merged and stored in the config map\n   * @param initialPlugins Default plugins produced by the module\n   * @param userPlugins User plugins injected into the application\n   */\n  constructor(\n    @Inject(InitialPlugins) initialPlugins: PluginConfig,\n    @Optional() @Inject(UserPlugins) userPlugins: PluginConfig\n  ) {\n    Object.entries({ ...initialPlugins, ...userPlugins }).forEach(([key, tool]) => this.add(key, tool));\n  }\n\n  /**\n   * Add a plugin to the store\n   * @param key The key for the map to store the plugin\n   * @param plugin The plugin instance to add to the service\n   */\n  public add(key: string, plugin: BasePlugin) {\n    this.pluginsMap[key] = plugin;\n  }\n\n  /**\n   * Remove a plugin from the store\n   * @param key\n   */\n  public remove(key: string) {\n    this.pluginsMap[key] = null;\n    delete this.pluginsMap[key];\n  }\n\n  /**\n   * Get a single plugin from the map\n   * @param name\n   */\n  public get(key: string): BasePlugin {\n    return this.pluginsMap[key];\n  }\n\n  /**\n   * Returns a map of all the plugins registered with this service\n   */\n  public get plugins(): PluginConfig {\n    return this.pluginsMap;\n  }\n\n  /**\n   * Returns a map of tools to be initialized by the editor\n   * @param exclude Optional array of keys to exclude from the map\n   */\n  public getTools(exclude: string[] = []): ToolSettingsMap {\n    return Object.entries(this.pluginsMap)\n      .filter(([key]) => {\n        return !exclude.includes(key);\n      })\n      .reduce((finalTools, [key, plugin]) => {\n        if (plugin.shortcut) {\n          return {\n            [key]: {\n              class: plugin.plugin(),\n              shortcut: plugin.shortcut()\n            },\n            ...finalTools\n          };\n        } else {\n          return { [key]: plugin.plugin(), ...finalTools };\n        }\n      }, {});\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/NgxEditorJSPluginServiceModule.html":{"url":"modules/NgxEditorJSPluginServiceModule.html","title":"module - NgxEditorJSPluginServiceModule","body":"\n                   \n\n\n\n\n    Modules\n    NgxEditorJSPluginServiceModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_NgxEditorJSPluginServiceModule\n\n\n\ncluster_NgxEditorJSPluginServiceModule_providers\n\n\n\n\nNgxEditorJSPluginService\n\nNgxEditorJSPluginService\n\n\n\nNgxEditorJSPluginServiceModule\n\nNgxEditorJSPluginServiceModule\n\nNgxEditorJSPluginServiceModule -->\n\nNgxEditorJSPluginService->NgxEditorJSPluginServiceModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            libs/ngx-editorjs-plugins/src/lib/services/plugins.module.ts\n        \n\n\n        \n            Description\n        \n        \n            This module provides the plugin service used by NgxEditorJS.\n\n        \n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            NgxEditorJSPluginService\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { NgModule } from '@angular/core';\nimport { NgxEditorJSPluginService } from './plugins.service';\n\n/**\n * This module provides the plugin service used by NgxEditorJS.\n */\n@NgModule({\n  providers: [NgxEditorJSPluginService]\n})\nexport class NgxEditorJSPluginServiceModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/NgxEditorJSService.html":{"url":"injectables/NgxEditorJSService.html","title":"injectable - NgxEditorJSService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  NgxEditorJSService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            libs/ngx-editorjs/src/lib/services/editorjs.service.ts\n        \n\n            \n                Description\n            \n            \n                The NgxEditorJSService provides control EditorJS instances via Angular.\nThe service has several maps:\n- A map of EditorJS instances\n- A map of BehaviorSubject containing the current array of blocks\n- A map of ready states\nThe are generated from the last save made on that instance\n\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                blocksMap\n                            \n                            \n                                    Private\n                                changeMap\n                            \n                            \n                                    Private\n                                editorMap\n                            \n                            \n                                    Private\n                                readyMap\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                createEditor\n                            \n                            \n                                    Public\n                                destroy\n                            \n                            \n                                    Public\n                                getBlocks\n                            \n                            \n                                    Public\n                                getEditor\n                            \n                            \n                                    Public\n                                hasChanged\n                            \n                            \n                                    Public\n                                isReady\n                            \n                            \n                                    Public\n                                save\n                            \n                            \n                                    Public\n                                update\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(config: NgxEditorJSConfig, plugins: NgxEditorJSPluginService, zone: NgZone)\n                    \n                \n                        \n                            \n                                Defined in libs/ngx-editorjs/src/lib/services/editorjs.service.ts:39\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        config\n                                                  \n                                                        \n                                                                        NgxEditorJSConfig\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        plugins\n                                                  \n                                                        \n                                                                        NgxEditorJSPluginService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        zone\n                                                  \n                                                        \n                                                                        NgZone\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            createEditor\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    createEditor(holder: string, blocks?: Block[], excludeTools?: string[], autoSave)\n                \n            \n\n\n            \n                \n                    Defined in libs/ngx-editorjs/src/lib/services/editorjs.service.ts:55\n                \n            \n\n\n            \n                \n                    This method creates a new EditorJS instance and adds it to the editor map.\nIf there is an existing editor it will clean up first before creating a new one\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Default value\n                                    Description\n                                \n                            \n                            \n                                \n                                    holder\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n                                    \n                                    \n\n                                    \n                                        The ID of the holder of the instance\n\n                                    \n                                \n                                \n                                    blocks\n                                    \n                                                Block[]\n                                    \n\n                                    \n                                        Yes\n                                    \n\n                                    \n                                    \n\n                                    \n                                        Optional initial set of blocks to render in the editor\n\n                                    \n                                \n                                \n                                    excludeTools\n                                    \n                                            string[]\n                                    \n\n                                    \n                                        Yes\n                                    \n\n                                    \n                                    \n\n                                    \n                                        String array of keys to not include with this editor\n\n                                    \n                                \n                                \n                                    autoSave\n                                    \n                                    \n\n                                    \n                                        No\n                                    \n\n                                    \n                                        true\n                                    \n\n                                    \n                                        When an instance changes we update the block map, set to false if you want to disable\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            destroy\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    destroy(holder: string)\n                \n            \n\n\n            \n                \n                    Defined in libs/ngx-editorjs/src/lib/services/editorjs.service.ts:189\n                \n            \n\n\n            \n                \n                    Destroy the EditorJS instance\nIt also calls the maps and sets their values back to their defaults and then\ncompletes and destroys them\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    holder\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        The ID of the holder of the instance\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            getBlocks\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    getBlocks(holder: string)\n                \n            \n\n\n            \n                \n                    Defined in libs/ngx-editorjs/src/lib/services/editorjs.service.ts:115\n                \n            \n\n\n            \n                \n                    Get an observable of the blocks for an EditorJS instance\nIf there is no instance of that name it will throw an error.\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    holder\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        The ID of the holder of the instance\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Observable\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            getEditor\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    getEditor(holder: string)\n                \n            \n\n\n            \n                \n                    Defined in libs/ngx-editorjs/src/lib/services/editorjs.service.ts:103\n                \n            \n\n\n            \n                \n                    Get an EditorJS instance, if the instance does not exist it will be created\nand returned with the default settings\nSee the EditorJS API docs for more details\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    holder\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        The ID of the holder of the instance\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     EditorJS\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            hasChanged\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    hasChanged(holder: string)\n                \n            \n\n\n            \n                \n                    Defined in libs/ngx-editorjs/src/lib/services/editorjs.service.ts:139\n                \n            \n\n\n            \n                \n                    Returns an Observable of the current timestamp of the last change\nthis can be subscribed to before calling the createEditor method\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    holder\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Observable\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            isReady\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    isReady(holder: string)\n                \n            \n\n\n            \n                \n                    Defined in libs/ngx-editorjs/src/lib/services/editorjs.service.ts:127\n                \n            \n\n\n            \n                \n                    Returns an Observable of the current ready state, this can be subscribed to before calling\nthe createEditor method\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    holder\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Observable\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            save\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    save(holder: string)\n                \n            \n\n\n            \n                \n                    Defined in libs/ngx-editorjs/src/lib/services/editorjs.service.ts:172\n                \n            \n\n\n            \n                \n                    Calls the EditorJS save method which returns an OutputData object.\nFrom this the service updates the blocks map and change map values\nIf there is no instance of that name it will throw an error.\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    holder\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        The ID of the holder of the instance\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            update\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    update(holder: string, blocks: Block[])\n                \n            \n\n\n            \n                \n                    Defined in libs/ngx-editorjs/src/lib/services/editorjs.service.ts:152\n                \n            \n\n\n            \n                \n                    This method updates the blocks within the EditorJS instance.\nIf there is no instance of that name it will throw an error.\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    holder\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        The ID of the holder of the instance\n\n                                    \n                                \n                                \n                                    blocks\n                                    \n                                                Block[]\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        The array of Block elements to render\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            blocksMap\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         BlocksMap\n\n                        \n                    \n                    \n                        \n                            Default value : {}\n                        \n                    \n                        \n                            \n                                    Defined in libs/ngx-editorjs/src/lib/services/editorjs.service.ts:29\n                            \n                        \n\n                \n                    \n                        Internal map of all Block BehaviorSubject instances\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            changeMap\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         ChangeMap\n\n                        \n                    \n                    \n                        \n                            Default value : {}\n                        \n                    \n                        \n                            \n                                    Defined in libs/ngx-editorjs/src/lib/services/editorjs.service.ts:39\n                            \n                        \n\n                \n                    \n                        Internal map of all EditorJS change states\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            editorMap\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         EditorMap\n\n                        \n                    \n                    \n                        \n                            Default value : {}\n                        \n                    \n                        \n                            \n                                    Defined in libs/ngx-editorjs/src/lib/services/editorjs.service.ts:24\n                            \n                        \n\n                \n                    \n                        Internal map of all EditorJS instances\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            readyMap\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         ReadyMap\n\n                        \n                    \n                    \n                        \n                            Default value : {}\n                        \n                    \n                        \n                            \n                                    Defined in libs/ngx-editorjs/src/lib/services/editorjs.service.ts:34\n                            \n                        \n\n                \n                    \n                        Internal map of all EditorJS ready states\n\n                    \n                \n\n            \n        \n\n\n    \n\n\n    \n        import { Inject, Injectable, NgZone } from '@angular/core';\nimport EditorJS, { EditorConfig } from '@editorjs/editorjs';\nimport { NgxEditorJSPluginService } from '@tinynodes/ngx-editorjs-plugins';\nimport { BehaviorSubject, Observable } from 'rxjs';\nimport { Block } from '../types/blocks';\nimport { NgxEditorJSConfig, NGX_EDITORJS_CONFIG } from '../types/config';\nimport { BlocksMap, ChangeMap, EditorMap, ReadyMap } from '../types/maps';\n\n/**\n * The NgxEditorJSService provides control EditorJS instances via Angular.\n * The service has several maps:\n * - A map of `EditorJS` instances\n * - A map of `BehaviorSubject` containing the current array of blocks\n * - A map of ready states\n * The are generated from the last save made on that instance\n */\n@Injectable({\n  providedIn: 'root'\n})\nexport class NgxEditorJSService {\n  /**\n   * Internal map of all EditorJS instances\n   */\n  private editorMap: EditorMap = {};\n\n  /**\n   * Internal map of all Block `BehaviorSubject` instances\n   */\n  private blocksMap: BlocksMap = {};\n\n  /**\n   * Internal map of all EditorJS ready states\n   */\n  private readyMap: ReadyMap = {};\n\n  /**\n   * Internal map of all EditorJS change states\n   */\n  private changeMap: ChangeMap = {};\n\n  constructor(\n    @Inject(NGX_EDITORJS_CONFIG) private config: NgxEditorJSConfig,\n    private readonly plugins: NgxEditorJSPluginService,\n    private zone: NgZone\n  ) {}\n\n  /**\n   * This method creates a new EditorJS instance and adds it to the editor map.\n   * If there is an existing editor it will clean up first before creating a new one\n   * @param holder The ID of the holder of the instance\n   * @param blocks Optional initial set of blocks to render in the editor\n   * @param excludeTools String array of keys to not include with this editor\n   * @param autoSave When an instance changes we update the block map, set to false if you want to disable\n   */\n  public createEditor(holder: string, blocks?: Block[], excludeTools?: string[], autoSave = true): void {\n    if (this.editorMap[holder]) {\n      this.destroy(holder);\n    }\n\n    if (this.readyMap[holder]) {\n      this.readyMap[holder].next(false);\n    } else {\n      this.readyMap[holder] = new BehaviorSubject(false);\n    }\n    if (this.changeMap[holder]) {\n      this.changeMap[holder].next(0);\n    } else {\n      this.changeMap[holder] = new BehaviorSubject(0);\n    }\n\n    this.zone.run(() => {\n      const options: EditorConfig = {\n        ...this.config.editorjs,\n        holder,\n        tools: this.plugins.getTools(excludeTools)\n      };\n      if (blocks) {\n        options.data = {\n          blocks,\n          time: Date.now(),\n          version: EditorJS.version\n        };\n      }\n      this.editorMap[holder] = new EditorJS({\n        ...options,\n        onReady: () => {\n          this.readyMap[holder].next(true);\n        },\n        onChange: () => {\n          this.changeMap[holder].next(Date.now());\n          if (autoSave) this.save(holder);\n        }\n      });\n    });\n  }\n\n  /**\n   * Get an `EditorJS` instance, if the instance does not exist it will be created\n   * and returned with the default settings\n   * See the [EditorJS API](https://editorjs.io/api) docs for more details\n   * @param holder The ID of the holder of the instance\n   */\n  public getEditor(holder: string): EditorJS {\n    if (!this.editorMap[holder]) {\n      this.createEditor(holder);\n    }\n    return this.editorMap[holder];\n  }\n\n  /**\n   * Get an observable of the blocks for an `EditorJS` instance\n   * If there is no instance of that name it will throw an error.\n   * @param holder The ID of the holder of the instance\n   */\n  public getBlocks(holder: string): Observable {\n    if (!this.blocksMap[holder]) {\n      this.blocksMap[holder] = new BehaviorSubject([]);\n    }\n    return this.blocksMap[holder].asObservable();\n  }\n\n  /**\n   * Returns an `Observable` of the current ready state, this can be subscribed to before calling\n   * the `createEditor` method\n   * @param holder\n   */\n  public isReady(holder: string): Observable {\n    if (!this.readyMap[holder]) {\n      this.readyMap[holder] = new BehaviorSubject(false);\n    }\n    return this.readyMap[holder].asObservable();\n  }\n\n  /**\n   * Returns an `Observable` of the current timestamp of the last change\n   * this can be subscribed to before calling the `createEditor` method\n   * @param holder\n   */\n  public hasChanged(holder: string): Observable {\n    if (!this.changeMap[holder]) {\n      this.changeMap[holder] = new BehaviorSubject(0);\n    }\n    return this.changeMap[holder].asObservable();\n  }\n\n  /**\n   * This method updates the blocks within the `EditorJS` instance.\n   * If there is no instance of that name it will throw an error.\n   * @param holder The ID of the holder of the instance\n   * @param blocks The array of `Block` elements to render\n   */\n  public update(holder: string, blocks: Block[]) {\n    if (!this.editorMap[holder]) {\n      throw new Error(`No EditorJS instance for ${holder}`);\n    }\n    this.zone.run(() => {\n      this.editorMap[holder].blocks.clear();\n      this.editorMap[holder].blocks.render({\n        blocks,\n        time: Date.now(),\n        version: EditorJS.version\n      });\n    });\n  }\n\n  /**\n   * Calls the `EditorJS` save method which returns an `OutputData` object.\n   * From this the service updates the blocks map and change map values\n   * If there is no instance of that name it will throw an error.\n   * @param holder The ID of the holder of the instance\n   */\n  public save(holder: string): void {\n    if (!this.editorMap[holder]) {\n      throw new Error(`No EditorJS instance for ${holder}`);\n    }\n    this.zone.run(async () => {\n      const outputData = await this.editorMap[holder].saver.save();\n      this.blocksMap[holder].next(outputData.blocks);\n      this.changeMap[holder].next(outputData.time);\n    });\n  }\n\n  /**\n   * Destroy the `EditorJS` instance\n   * It also calls the maps and sets their values back to their defaults and then\n   * completes and destroys them\n   * @param holder The ID of the holder of the instance\n   */\n  public destroy(holder: string): void {\n    // Clean up the maps\n    [['blocksMap', []], ['changeMap', 0], ['readyMap', false]].forEach(([mapKay, value]: [string, any]) => {\n      if (this[mapKay][holder]) {\n        this[mapKay][holder].next(value);\n        this[mapKay][holder].complete();\n        this[mapKay][holder] = null;\n        delete this[mapKay][holder];\n      }\n    });\n    this.zone.run(() => {\n      if (this.editorMap[holder]) {\n        this.editorMap[holder].destroy();\n        this.editorMap[holder] = null;\n        delete this.editorMap[holder];\n      }\n    });\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/NgxEditorjsDemoModule.html":{"url":"modules/NgxEditorjsDemoModule.html","title":"module - NgxEditorjsDemoModule","body":"\n                   \n\n\n\n\n    Modules\n    NgxEditorjsDemoModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_NgxEditorjsDemoModule\n\n\n\ncluster_NgxEditorjsDemoModule_declarations\n\n\n\ncluster_NgxEditorjsDemoModule_imports\n\n\n\ncluster_NgxEditorjsDemoModule_exports\n\n\n\n\nEditorPageComponent\n\nEditorPageComponent\n\n\n\nNgxEditorjsDemoModule\n\nNgxEditorjsDemoModule\n\nNgxEditorjsDemoModule -->\n\nEditorPageComponent->NgxEditorjsDemoModule\n\n\n\n\n\nPageContainerComponent\n\nPageContainerComponent\n\nNgxEditorjsDemoModule -->\n\nPageContainerComponent->NgxEditorjsDemoModule\n\n\n\n\n\nEditorPageComponent \n\nEditorPageComponent \n\nEditorPageComponent  -->\n\nNgxEditorjsDemoModule->EditorPageComponent \n\n\n\n\n\nPageContainerComponent \n\nPageContainerComponent \n\nPageContainerComponent  -->\n\nNgxEditorjsDemoModule->PageContainerComponent \n\n\n\n\n\nPageStoreModule \n\nPageStoreModule \n\nPageStoreModule  -->\n\nNgxEditorjsDemoModule->PageStoreModule \n\n\n\n\n\nNgxEditorJSModule\n\nNgxEditorJSModule\n\nNgxEditorjsDemoModule -->\n\nNgxEditorJSModule->NgxEditorjsDemoModule\n\n\n\n\n\nPageStoreModule\n\nPageStoreModule\n\nNgxEditorjsDemoModule -->\n\nPageStoreModule->NgxEditorjsDemoModule\n\n\n\n\n\nPluginCodeModule\n\nPluginCodeModule\n\nNgxEditorjsDemoModule -->\n\nPluginCodeModule->NgxEditorjsDemoModule\n\n\n\n\n\nPluginLinkModule\n\nPluginLinkModule\n\nNgxEditorjsDemoModule -->\n\nPluginLinkModule->NgxEditorjsDemoModule\n\n\n\n\n\nPluginMarkerModule\n\nPluginMarkerModule\n\nNgxEditorjsDemoModule -->\n\nPluginMarkerModule->NgxEditorjsDemoModule\n\n\n\n\n\nPluginSimpleImageModule\n\nPluginSimpleImageModule\n\nNgxEditorjsDemoModule -->\n\nPluginSimpleImageModule->NgxEditorjsDemoModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            libs/ngx-editorjs-demo/src/lib/ngx-editorjs-demo.module.ts\n        \n\n\n\n\n        \n            \n                \n                    Declarations\n                    \n                        \n                            EditorPageComponent\n                        \n                        \n                            PageContainerComponent\n                        \n                    \n                \n                \n                    EntryComponents\n                    \n                        \n                            PageContainerComponent\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            NgxEditorJSModule\n                        \n                        \n                            PageStoreModule\n                        \n                        \n                            PluginCodeModule\n                        \n                        \n                            PluginLinkModule\n                        \n                        \n                            PluginMarkerModule\n                        \n                        \n                            PluginSimpleImageModule\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            EditorPageComponent\n                        \n                        \n                            PageContainerComponent\n                        \n                        \n                            PageStoreModule\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\nimport { ReactiveFormsModule } from '@angular/forms';\nimport { MatButtonModule, MatCardModule } from '@angular/material';\nimport { RouterModule } from '@angular/router';\nimport { NgxEditorJSModule } from '@tinynodes/ngx-editorjs';\nimport {\n  PluginCodeModule,\n  PluginLinkModule,\n  PluginMarkerModule,\n  PluginSimpleImageModule,\n  UserPlugins\n} from '@tinynodes/ngx-editorjs-plugins';\nimport { MarkdownModule } from 'ngx-markdown';\nimport { createNgxEditorJSDemoTools } from './config';\nimport { EditorPageComponent } from './containers/editor-page/editor-page.component';\nimport { PageContainerComponent } from './containers/page-container/page-container.component';\nimport { ngxEditorjsDemoRoutes } from './ngx-editorjs-demo.routes';\nimport { PageStoreModule } from './store/pages/pages.module';\n\n@NgModule({\n  imports: [\n    CommonModule,\n    RouterModule.forChild(ngxEditorjsDemoRoutes),\n    MarkdownModule.forChild(),\n    ReactiveFormsModule,\n    PageStoreModule,\n    NgxEditorJSModule,\n    PluginCodeModule,\n    PluginSimpleImageModule,\n    PluginLinkModule,\n    PluginMarkerModule,\n    MatCardModule,\n    MatButtonModule\n  ],\n  providers: [\n    {\n      provide: UserPlugins,\n      useFactory: createNgxEditorJSDemoTools\n    }\n  ],\n  declarations: [EditorPageComponent, PageContainerComponent],\n  exports: [EditorPageComponent, PageStoreModule, PageContainerComponent],\n  entryComponents: [PageContainerComponent]\n})\nexport class NgxEditorjsDemoModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/NgxEditorjsNgrxModule.html":{"url":"modules/NgxEditorjsNgrxModule.html","title":"module - NgxEditorjsNgrxModule","body":"\n                   \n\n\n\n\n    Modules\n    NgxEditorjsNgrxModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_NgxEditorjsNgrxModule\n\n\n\ncluster_NgxEditorjsNgrxModule_imports\n\n\n\n\nNgxEditorJSModule\n\nNgxEditorJSModule\n\n\n\nNgxEditorjsNgrxModule\n\nNgxEditorjsNgrxModule\n\nNgxEditorjsNgrxModule -->\n\nNgxEditorJSModule->NgxEditorjsNgrxModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            libs/ngx-editorjs-ngrx/src/lib/ngx-editorjs-ngrx.module.ts\n        \n\n\n\n\n        \n            \n                \n                    Imports\n                    \n                        \n                            NgxEditorJSModule\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { EffectsModule } from '@ngrx/effects';\nimport { NgxEditorJSModule } from '@tinynodes/ngx-editorjs';\n\n@NgModule({\n  imports: [CommonModule, NgxEditorJSModule, EffectsModule.forFeature([])]\n})\nexport class NgxEditorjsNgrxModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/NgxEditorjsPluginsModule.html":{"url":"modules/NgxEditorjsPluginsModule.html","title":"module - NgxEditorjsPluginsModule","body":"\n                   \n\n\n\n\n    Modules\n    NgxEditorjsPluginsModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_NgxEditorjsPluginsModule\n\n\n\ncluster_NgxEditorjsPluginsModule_imports\n\n\n\ncluster_NgxEditorjsPluginsModule_exports\n\n\n\n\nNgxEditorJSPluginServiceModule\n\nNgxEditorJSPluginServiceModule\n\n\n\nNgxEditorjsPluginsModule\n\nNgxEditorjsPluginsModule\n\nNgxEditorjsPluginsModule -->\n\nNgxEditorJSPluginServiceModule->NgxEditorjsPluginsModule\n\n\n\n\n\nPluginCodeModule\n\nPluginCodeModule\n\nNgxEditorjsPluginsModule -->\n\nPluginCodeModule->NgxEditorjsPluginsModule\n\n\n\n\n\nPluginHeaderModule\n\nPluginHeaderModule\n\nNgxEditorjsPluginsModule -->\n\nPluginHeaderModule->NgxEditorjsPluginsModule\n\n\n\n\n\nPluginImageModule\n\nPluginImageModule\n\nNgxEditorjsPluginsModule -->\n\nPluginImageModule->NgxEditorjsPluginsModule\n\n\n\n\n\nPluginLinkModule\n\nPluginLinkModule\n\nNgxEditorjsPluginsModule -->\n\nPluginLinkModule->NgxEditorjsPluginsModule\n\n\n\n\n\nPluginListModule\n\nPluginListModule\n\nNgxEditorjsPluginsModule -->\n\nPluginListModule->NgxEditorjsPluginsModule\n\n\n\n\n\nPluginMarkerModule\n\nPluginMarkerModule\n\nNgxEditorjsPluginsModule -->\n\nPluginMarkerModule->NgxEditorjsPluginsModule\n\n\n\n\n\nPluginParagraphModule\n\nPluginParagraphModule\n\nNgxEditorjsPluginsModule -->\n\nPluginParagraphModule->NgxEditorjsPluginsModule\n\n\n\n\n\nPluginSimpleImageModule\n\nPluginSimpleImageModule\n\nNgxEditorjsPluginsModule -->\n\nPluginSimpleImageModule->NgxEditorjsPluginsModule\n\n\n\n\n\nNgxEditorJSPluginServiceModule \n\nNgxEditorJSPluginServiceModule \n\nNgxEditorJSPluginServiceModule  -->\n\nNgxEditorjsPluginsModule->NgxEditorJSPluginServiceModule \n\n\n\n\n\nPluginCodeModule \n\nPluginCodeModule \n\nPluginCodeModule  -->\n\nNgxEditorjsPluginsModule->PluginCodeModule \n\n\n\n\n\nPluginHeaderModule \n\nPluginHeaderModule \n\nPluginHeaderModule  -->\n\nNgxEditorjsPluginsModule->PluginHeaderModule \n\n\n\n\n\nPluginImageModule \n\nPluginImageModule \n\nPluginImageModule  -->\n\nNgxEditorjsPluginsModule->PluginImageModule \n\n\n\n\n\nPluginLinkModule \n\nPluginLinkModule \n\nPluginLinkModule  -->\n\nNgxEditorjsPluginsModule->PluginLinkModule \n\n\n\n\n\nPluginListModule \n\nPluginListModule \n\nPluginListModule  -->\n\nNgxEditorjsPluginsModule->PluginListModule \n\n\n\n\n\nPluginMarkerModule \n\nPluginMarkerModule \n\nPluginMarkerModule  -->\n\nNgxEditorjsPluginsModule->PluginMarkerModule \n\n\n\n\n\nPluginParagraphModule \n\nPluginParagraphModule \n\nPluginParagraphModule  -->\n\nNgxEditorjsPluginsModule->PluginParagraphModule \n\n\n\n\n\nPluginSimpleImageModule \n\nPluginSimpleImageModule \n\nPluginSimpleImageModule  -->\n\nNgxEditorjsPluginsModule->PluginSimpleImageModule \n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            libs/ngx-editorjs-plugins/src/lib/ngx-editorjs-plugins.module.ts\n        \n\n\n        \n            Description\n        \n        \n            The NgxEditorjsPluginsModule provides several additional modules\nthat provide a way to easily plug in block and inline tools for EditorJS.\nImporting NgxEditorjsPluginsModule will include all modules, while it\nis also possible to import each individual module as required.\n\n        \n\n\n        \n            \n                \n                    Imports\n                    \n                        \n                            NgxEditorJSPluginServiceModule\n                        \n                        \n                            PluginCodeModule\n                        \n                        \n                            PluginHeaderModule\n                        \n                        \n                            PluginImageModule\n                        \n                        \n                            PluginLinkModule\n                        \n                        \n                            PluginListModule\n                        \n                        \n                            PluginMarkerModule\n                        \n                        \n                            PluginParagraphModule\n                        \n                        \n                            PluginSimpleImageModule\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            NgxEditorJSPluginServiceModule\n                        \n                        \n                            PluginCodeModule\n                        \n                        \n                            PluginHeaderModule\n                        \n                        \n                            PluginImageModule\n                        \n                        \n                            PluginLinkModule\n                        \n                        \n                            PluginListModule\n                        \n                        \n                            PluginMarkerModule\n                        \n                        \n                            PluginParagraphModule\n                        \n                        \n                            PluginSimpleImageModule\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\nimport { PluginCodeModule } from './plugins/code/code.module';\nimport { PluginHeaderModule } from './plugins/header/header.module';\nimport { PluginImageModule } from './plugins/image/image.module';\nimport { PluginLinkModule } from './plugins/link/link.module';\nimport { PluginListModule } from './plugins/list/list.module';\nimport { PluginMarkerModule } from './plugins/marker/marker.module';\nimport { PluginParagraphModule } from './plugins/paragraph/paragraph.module';\nimport { PluginSimpleImageModule } from './plugins/simple-image/simple-image.module';\nimport { NgxEditorJSPluginServiceModule } from './services/plugins.module';\n\n/**\n * The `NgxEditorjsPluginsModule` provides several additional modules\n * that provide a way to easily plug in block and inline tools for `EditorJS`.\n *\n * Importing `NgxEditorjsPluginsModule` will include all modules, while it\n * is also possible to import each individual module as required.\n */\n@NgModule({\n  imports: [\n    CommonModule,\n    PluginCodeModule,\n    PluginHeaderModule,\n    PluginImageModule,\n    PluginLinkModule,\n    PluginListModule,\n    PluginMarkerModule,\n    PluginParagraphModule,\n    PluginSimpleImageModule,\n    NgxEditorJSPluginServiceModule\n  ],\n  exports: [\n    PluginCodeModule,\n    PluginHeaderModule,\n    PluginImageModule,\n    PluginLinkModule,\n    PluginListModule,\n    PluginMarkerModule,\n    PluginParagraphModule,\n    PluginSimpleImageModule,\n    NgxEditorJSPluginServiceModule\n  ]\n})\nexport class NgxEditorjsPluginsModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/NotReady.html":{"url":"classes/NotReady.html","title":"class - NotReady","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  NotReady\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            libs/ngx-editorjs-ngrx/src/lib/actions/ngx-editorjs.actions.ts\n        \n\n\n\n            \n                Implements\n            \n            \n                        Action\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                payload\n                            \n                            \n                                    Readonly\n                                type\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(payload: literal type)\n                    \n                \n                        \n                            \n                                Defined in libs/ngx-editorjs-ngrx/src/lib/actions/ngx-editorjs.actions.ts:23\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        payload\n                                                  \n                                                        \n                                                                    literal type\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            payload\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     literal type\n\n                        \n                    \n                        \n                            \n                                    Defined in libs/ngx-editorjs-ngrx/src/lib/actions/ngx-editorjs.actions.ts:24\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                            type\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : EditorJSActionTypes.NotReady\n                        \n                    \n                        \n                            \n                                    Defined in libs/ngx-editorjs-ngrx/src/lib/actions/ngx-editorjs.actions.ts:23\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { Action } from '@ngrx/store';\nimport { OutputData } from '@editorjs/editorjs';\n\nexport enum EditorJSActionTypes {\n  SaveStart = '[ngx-editorjs] Start Save',\n  SaveEnd = '[ngx-editorjs] Start End',\n  NotReady = '[ngx-editorjs] Not Ready',\n  Ready = '[ngx-editorjs] Ready',\n  Changed = '[ngx-editorjs] Changed'\n}\n\nexport class SaveStart implements Action {\n  readonly type = EditorJSActionTypes.SaveStart;\n  constructor(public payload: { holder: string }) {}\n}\n\nexport class SaveEnd implements Action {\n  readonly type = EditorJSActionTypes.SaveEnd;\n  constructor(public payload: { holder: string; data: OutputData }) {}\n}\n\nexport class NotReady implements Action {\n  readonly type = EditorJSActionTypes.NotReady;\n  constructor(public payload: { holder: string }) {}\n}\n\nexport class Ready implements Action {\n  readonly type = EditorJSActionTypes.Ready;\n  constructor(public payload: { holder: string }) {}\n}\n\nexport class Changed implements Action {\n  readonly type = EditorJSActionTypes.Changed;\n  constructor(public payload: { holder: string; data: OutputData }) {}\n}\n\nexport type NgxEditorJSActions = SaveStart | SaveEnd | NotReady | Ready | Changed;\n\n    \n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/Page.html":{"url":"interfaces/Page.html","title":"interface - Page","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  Page\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            libs/ngx-editorjs-demo/src/lib/store/pages/pages.models.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        blocks\n                                \n                                \n                                        id\n                                \n                                \n                                        pageTags\n                                \n                                \n                                        pageTitle\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        blocks\n                                    \n                                \n                                \n                                    \n                                        blocks:     PageBlock[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     PageBlock[]\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        id\n                                    \n                                \n                                \n                                    \n                                        id:     ID\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     ID\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        pageTags\n                                    \n                                \n                                \n                                    \n                                        pageTags:         Tag[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         Tag[]\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        pageTitle\n                                    \n                                \n                                \n                                    \n                                        pageTitle:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { ID } from '@datorama/akita';\nimport { Block } from '@tinynodes/ngx-editorjs';\n\nexport interface Tag {\n  key: string;\n}\n\nexport interface PageBlock extends Block {\n  id: ID;\n}\n\nexport interface Page {\n  id: ID;\n  pageTitle: string;\n  pageTags: Tag[];\n  blocks: PageBlock[];\n}\n\n    \n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/PageBlock.html":{"url":"interfaces/PageBlock.html","title":"interface - PageBlock","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  PageBlock\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            libs/ngx-editorjs-demo/src/lib/store/pages/pages.models.ts\n        \n\n\n            \n                Extends\n            \n            \n                        Block\n            \n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        id\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        id\n                                    \n                                \n                                \n                                    \n                                        id:     ID\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     ID\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { ID } from '@datorama/akita';\nimport { Block } from '@tinynodes/ngx-editorjs';\n\nexport interface Tag {\n  key: string;\n}\n\nexport interface PageBlock extends Block {\n  id: ID;\n}\n\nexport interface Page {\n  id: ID;\n  pageTitle: string;\n  pageTags: Tag[];\n  blocks: PageBlock[];\n}\n\n    \n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/PageContainerComponent.html":{"url":"components/PageContainerComponent.html","title":"component - PageContainerComponent","body":"\n                   \n\n\n\n\n\n  Components\n  PageContainerComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    libs/ngx-editorjs-demo/src/lib/containers/page-container/page-container.component.ts\n\n\n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                ngx-page-container\n            \n\n            \n                styleUrls\n                page-container.component.scss\n            \n\n\n\n            \n                templateUrl\n                page-container.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n\n\n\n\n\n\n                    \n                        \n                            Accessors\n                        \n                    \n                    \n                        \n                            \n                                \n                                    pages\n                                \n                            \n                        \n                    \n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(pagesService: PagesService)\n                    \n                \n                        \n                            \n                                Defined in libs/ngx-editorjs-demo/src/lib/containers/page-container/page-container.component.ts:11\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        pagesService\n                                                  \n                                                        \n                                                                        PagesService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n\n\n    \n    \n        Accessors\n    \n        \n            \n                \n                    \n                        \n                        pages\n                    \n                \n\n                \n                    \n                        getpages()\n                    \n                \n                            \n                                \n                                    Defined in libs/ngx-editorjs-demo/src/lib/containers/page-container/page-container.component.ts:14\n                                \n                            \n\n            \n        \n\n\n\n\n    \n        import { Component } from '@angular/core';\nimport { Observable } from 'rxjs';\nimport { Page } from '../../store/pages/pages.models';\nimport { PagesService } from '../../store/pages/pages.service';\n\n@Component({\n  selector: 'ngx-page-container',\n  templateUrl: 'page-container.component.html',\n  styleUrls: ['page-container.component.scss']\n})\nexport class PageContainerComponent {\n  constructor(private readonly pagesService: PagesService) {}\n\n  get pages(): Observable {\n    return this.pagesService.pages;\n  }\n}\n\n    \n\n    \n        \n  Ngx-EditorJS Pages Manager\n  A useful demo of the\n    @tinynodes/ngx-editorjs\n    module\n  \n    Go to Demo &gt;\n  \n  \n    \n  \n\n\n    \n\n    \n                \n                    page-container.component.scss\n                \n                :host {\n  width: 100%;\n  height: 100vh;\n}\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '  Ngx-EditorJS Pages Manager  A useful demo of the    @tinynodes/ngx-editorjs    module      Go to Demo >          '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'tinynodes-root'},{'name': 'EditorPageComponent', 'selector': 'ngx-editor-page'},{'name': 'NavBarComponent', 'selector': 'tinynodes-nav-bar'},{'name': 'NgxEditorJSComponent', 'selector': 'ngx-editorjs'},{'name': 'PageContainerComponent', 'selector': 'ngx-page-container'},{'name': 'SidebarComponent', 'selector': 'tinynodes-sidebar'}];\n    var DIRECTIVES = [{'name': 'NgxEditorJSDirective', 'selector': '[ngxEditorJS]'}];\n    var ACTUAL_COMPONENT = {'name': 'PageContainerComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/PageStoreModule.html":{"url":"modules/PageStoreModule.html","title":"module - PageStoreModule","body":"\n                   \n\n\n\n\n    Modules\n    PageStoreModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_PageStoreModule\n\n\n\ncluster_PageStoreModule_providers\n\n\n\n\nPagesQuery\n\nPagesQuery\n\n\n\nPageStoreModule\n\nPageStoreModule\n\nPageStoreModule -->\n\nPagesQuery->PageStoreModule\n\n\n\n\n\nPagesService\n\nPagesService\n\nPageStoreModule -->\n\nPagesService->PageStoreModule\n\n\n\n\n\nPagesStore\n\nPagesStore\n\nPageStoreModule -->\n\nPagesStore->PageStoreModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            libs/ngx-editorjs-demo/src/lib/store/pages/pages.module.ts\n        \n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            PagesQuery\n                        \n                        \n                            PagesService\n                        \n                        \n                            PagesStore\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { NgModule } from '@angular/core';\nimport { PagesQuery } from './pages.query';\nimport { PagesService } from './pages.service';\nimport { PagesStore } from './pages.store';\n\n@NgModule({\n  providers: [PagesStore, PagesQuery, PagesService]\n})\nexport class PageStoreModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/PagesQuery.html":{"url":"injectables/PagesQuery.html","title":"injectable - PagesQuery","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  PagesQuery\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            libs/ngx-editorjs-demo/src/lib/store/pages/pages.query.ts\n        \n\n\n            \n                Extends\n            \n            \n                    QueryEntity\n            \n\n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(store: PagesStore)\n                    \n                \n                        \n                            \n                                Defined in libs/ngx-editorjs-demo/src/lib/store/pages/pages.query.ts:7\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        store\n                                                  \n                                                        \n                                                                        PagesStore\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { QueryEntity } from '@datorama/akita';\nimport { Page } from './pages.models';\nimport { PagesState, PagesStore } from './pages.store';\n\n@Injectable()\nexport class PagesQuery extends QueryEntity {\n  constructor(protected store: PagesStore) {\n    super(store);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/PagesService.html":{"url":"injectables/PagesService.html","title":"injectable - PagesService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  PagesService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            libs/ngx-editorjs-demo/src/lib/store/pages/pages.service.ts\n        \n\n            \n                Description\n            \n            \n                This page service provides a way to save and render pages\nvia the store\n\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                pages$\n                            \n                            \n                                    Public\n                                    Readonly\n                                query\n                            \n                            \n                                    Public\n                                    Readonly\n                                store\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                add\n                            \n                            \n                                addBlock\n                            \n                            \n                                delete\n                            \n                            \n                                removeBlock\n                            \n                            \n                                setBlocks\n                            \n                            \n                                upsert\n                            \n                        \n                    \n                \n\n\n\n\n\n                    \n                        \n                            Accessors\n                        \n                    \n                    \n                        \n                            \n                                \n                                    pages\n                                \n                            \n                        \n                    \n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(query: PagesQuery, store: PagesStore)\n                    \n                \n                        \n                            \n                                Defined in libs/ngx-editorjs-demo/src/lib/store/pages/pages.service.ts:15\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        query\n                                                  \n                                                        \n                                                                        PagesQuery\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        store\n                                                  \n                                                        \n                                                                        PagesStore\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            add\n                        \n                        \n                    \n                \n            \n            \n                \nadd(page?: Page)\n                \n            \n\n\n            \n                \n                    Defined in libs/ngx-editorjs-demo/src/lib/store/pages/pages.service.ts:32\n                \n            \n\n\n            \n                \n                    Add a page to the store\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    page\n                                    \n                                                Page\n                                    \n\n                                    \n                                        Yes\n                                    \n\n\n                                    \n                                        An optional page to be added\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            addBlock\n                        \n                        \n                    \n                \n            \n            \n                \naddBlock(pageId: ID, block: Block)\n                \n            \n\n\n            \n                \n                    Defined in libs/ngx-editorjs-demo/src/lib/store/pages/pages.service.ts:64\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    pageId\n                                    \n                                            ID\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    block\n                                    \n                                                Block\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            delete\n                        \n                        \n                    \n                \n            \n            \n                \ndelete(pageId: ID)\n                \n            \n\n\n            \n                \n                    Defined in libs/ngx-editorjs-demo/src/lib/store/pages/pages.service.ts:56\n                \n            \n\n\n            \n                \n                    Removes a page\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    pageId\n                                    \n                                            ID\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        The ID of the page to be removed\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            removeBlock\n                        \n                        \n                    \n                \n            \n            \n                \nremoveBlock(pageId: ID, block: PageBlock)\n                \n            \n\n\n            \n                \n                    Defined in libs/ngx-editorjs-demo/src/lib/store/pages/pages.service.ts:70\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    pageId\n                                    \n                                            ID\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    block\n                                    \n                                                PageBlock\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            setBlocks\n                        \n                        \n                    \n                \n            \n            \n                \nsetBlocks(pageId: ID | any, blocks: PageBlock[])\n                \n            \n\n\n            \n                \n                    Defined in libs/ngx-editorjs-demo/src/lib/store/pages/pages.service.ts:60\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    pageId\n                                    \n                                            ID | any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    blocks\n                                    \n                                            PageBlock[]\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            upsert\n                        \n                        \n                    \n                \n            \n            \n                \nupsert(page: Page)\n                \n            \n\n\n            \n                \n                    Defined in libs/ngx-editorjs-demo/src/lib/store/pages/pages.service.ts:47\n                \n            \n\n\n            \n                \n                    Updates or creates a page\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    page\n                                    \n                                                Page\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        The page to be updated, if not available it will be created\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            pages$\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Observable\n\n                        \n                    \n                        \n                            \n                                    Defined in libs/ngx-editorjs-demo/src/lib/store/pages/pages.service.ts:15\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                                Readonly\n                            query\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         PagesQuery\n\n                        \n                    \n                        \n                            \n                                    Defined in libs/ngx-editorjs-demo/src/lib/store/pages/pages.service.ts:17\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                                Readonly\n                            store\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         PagesStore\n\n                        \n                    \n                        \n                            \n                                    Defined in libs/ngx-editorjs-demo/src/lib/store/pages/pages.service.ts:17\n                            \n                        \n\n\n            \n        \n\n\n            \n    \n        Accessors\n    \n        \n            \n                \n                    \n                        \n                        pages\n                    \n                \n\n                \n                    \n                        getpages()\n                    \n                \n                            \n                                \n                                    Defined in libs/ngx-editorjs-demo/src/lib/store/pages/pages.service.ts:24\n                                \n                            \n                    \n                        \n                                Get an observable of all the pages in the store\n\n\n                                \n                                    Returns :         Observable\n\n                                \n                        \n                    \n\n            \n        \n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { arrayAdd, arrayRemove, guid, ID } from '@datorama/akita';\nimport { Block } from '@tinynodes/ngx-editorjs';\nimport { Observable } from 'rxjs';\nimport { Page, PageBlock } from './pages.models';\nimport { PagesQuery } from './pages.query';\nimport { PagesStore } from './pages.store';\n\n/**\n * This page service provides a way to save and render pages\n * via the store\n */\n@Injectable()\nexport class PagesService {\n  private pages$: Observable;\n\n  constructor(public readonly query: PagesQuery, public readonly store: PagesStore) {\n    this.pages$ = this.query.selectAll();\n  }\n\n  /**\n   * Get an observable of all the pages in the store\n   */\n  get pages(): Observable {\n    return this.pages$;\n  }\n\n  /**\n   * Add a page to the store\n   * @param page An optional page to be added\n   */\n  add(page?: Page) {\n    const newPage: Page = {\n      id: guid(),\n      pageTitle: 'New Page',\n      pageTags: [],\n      blocks: [],\n      ...page\n    };\n    this.store.add(newPage);\n  }\n\n  /**\n   * Updates or creates a page\n   * @param page The page to be updated, if not available it will be created\n   */\n  upsert(page: Page) {\n    if (!page.id) page.id = guid();\n    this.store.upsert(page.id, page);\n  }\n\n  /**\n   * Removes a page\n   * @param pageId The ID of the page to be removed\n   */\n  delete(pageId: ID) {\n    this.store.remove(pageId);\n  }\n\n  setBlocks(pageId: ID | any, blocks: PageBlock[]) {\n    this.store.update(pageId, { blocks });\n  }\n\n  addBlock(pageId: ID, block: Block) {\n    this.store.update(pageId, (entity: Page) => ({\n      blocks: arrayAdd(entity.blocks, { id: guid(), ...block })\n    }));\n  }\n\n  removeBlock(pageId: ID, block: PageBlock) {\n    this.store.update(pageId, (entity: Page) => ({\n      blocks: arrayRemove(entity.blocks, block.id)\n    }));\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/PagesState.html":{"url":"interfaces/PagesState.html","title":"interface - PagesState","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  PagesState\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            libs/ngx-editorjs-demo/src/lib/store/pages/pages.store.ts\n        \n\n\n            \n                Extends\n            \n            \n                    EntityState\n            \n\n\n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { EntityState, EntityStore, StoreConfig } from '@datorama/akita';\nimport { Page } from './pages.models';\n\nexport interface PagesState extends EntityState {}\n\n@Injectable()\n@StoreConfig({ name: 'pages' })\nexport class PagesStore extends EntityStore {\n  constructor() {\n    super();\n  }\n}\n\n    \n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/PagesStore.html":{"url":"injectables/PagesStore.html","title":"injectable - PagesStore","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  PagesStore\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            libs/ngx-editorjs-demo/src/lib/store/pages/pages.store.ts\n        \n\n\n            \n                Extends\n            \n            \n                    EntityStore\n            \n\n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in libs/ngx-editorjs-demo/src/lib/store/pages/pages.store.ts:9\n                            \n                        \n\n            \n        \n\n\n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { EntityState, EntityStore, StoreConfig } from '@datorama/akita';\nimport { Page } from './pages.models';\n\nexport interface PagesState extends EntityState {}\n\n@Injectable()\n@StoreConfig({ name: 'pages' })\nexport class PagesStore extends EntityStore {\n  constructor() {\n    super();\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/Paragraph.html":{"url":"interfaces/Paragraph.html","title":"interface - Paragraph","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  Paragraph\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            libs/ngx-editorjs/src/lib/types/blocks.ts\n        \n\n            \n                Description\n            \n            \n                Default data type for a paragraph block\n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        text\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        text\n                                    \n                                \n                                \n                                    \n                                        text:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    The paragraph text\n\n                                \n                            \n                        \n                    \n            \n    \n\n\n    \n        export interface Block {\n  /**\n   * The EditorJS block type\n   */\n  type: string;\n\n  /**\n   * The data interface for the block type\n   */\n  data: T;\n\n  /**\n   * Additional properties on the type\n   */\n  [key: string]: any;\n}\n\n/**\n * Available list styles, supports `ordered` and `unordered`.\n * A custom string can also be added\n */\nexport type ListStyle = 'ordered' | 'unordered' | string;\n\n/**\n * Default data type for a list block\n */\nexport interface List {\n  /**\n   * The list style\n   */\n  style: ListStyle;\n  /**\n   * List items of type T\n   */\n  items: T[];\n}\n\n/**\n * The default list block is provided by the EditorJS list plugin\n */\nexport interface ListBlock extends Block> {\n  /**\n   * The EditorJS block type\n   */\n  type: 'list';\n}\n\n/**\n * Default data type for a paragraph block\n */\ninterface Paragraph {\n  /**\n   * The paragraph text\n   */\n  text: string;\n}\n\n/**\n * Interface for a paragraph block\n */\nexport interface ParagraphBlock extends Block {\n  /**\n   * The EditorJS block type\n   */\n  type: 'paragraph';\n}\n\n/**\n * Default data type for a header block\n */\ninterface Header {\n  /**\n   * The header text\n   */\n  text: string;\n  /**\n   * The header level from 1-6\n   */\n  level: number;\n}\n\n/**\n * Interface for a header block\n */\nexport interface HeaderBlock extends Block {\n  /**\n   * The EditorJS block type\n   */\n  type: 'header';\n}\n\n/**\n * Default data type for a header block\n */\nexport interface Image {\n  /**\n   * The image URL\n   */\n  url: string;\n  /**\n   * Optional image caption\n   */\n  caption?: string;\n  /**\n   * Optional border property\n   */\n  withBorder?: boolean;\n\n  /**\n   * Optional background property\n   */\n  withBackground?: boolean;\n\n  /**\n   * Optional stretch property\n   */\n  stretched?: boolean;\n}\n\n/**\n * Interface for a image block\n */\nexport interface ImageBlock extends Block {\n  /**\n   * The EditorJS block type\n   */\n  type: 'image';\n}\n\n/**\n * Type of all the basic block type\n */\nexport type BlockTypes = ParagraphBlock | HeaderBlock | ImageBlock | ListBlock | Block;\n\n    \n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/ParagraphBlock.html":{"url":"interfaces/ParagraphBlock.html","title":"interface - ParagraphBlock","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  ParagraphBlock\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            libs/ngx-editorjs/src/lib/types/blocks.ts\n        \n\n            \n                Description\n            \n            \n                Interface for a paragraph block\n\n            \n\n            \n                Extends\n            \n            \n                        Block\n            \n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        type\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        type\n                                    \n                                \n                                \n                                    \n                                        type:     \n\n                                    \n                                \n\n\n\n\n\n\n\n                            \n                                \n                                    The EditorJS block type\n\n                                \n                            \n                        \n                    \n            \n    \n\n\n    \n        export interface Block {\n  /**\n   * The EditorJS block type\n   */\n  type: string;\n\n  /**\n   * The data interface for the block type\n   */\n  data: T;\n\n  /**\n   * Additional properties on the type\n   */\n  [key: string]: any;\n}\n\n/**\n * Available list styles, supports `ordered` and `unordered`.\n * A custom string can also be added\n */\nexport type ListStyle = 'ordered' | 'unordered' | string;\n\n/**\n * Default data type for a list block\n */\nexport interface List {\n  /**\n   * The list style\n   */\n  style: ListStyle;\n  /**\n   * List items of type T\n   */\n  items: T[];\n}\n\n/**\n * The default list block is provided by the EditorJS list plugin\n */\nexport interface ListBlock extends Block> {\n  /**\n   * The EditorJS block type\n   */\n  type: 'list';\n}\n\n/**\n * Default data type for a paragraph block\n */\ninterface Paragraph {\n  /**\n   * The paragraph text\n   */\n  text: string;\n}\n\n/**\n * Interface for a paragraph block\n */\nexport interface ParagraphBlock extends Block {\n  /**\n   * The EditorJS block type\n   */\n  type: 'paragraph';\n}\n\n/**\n * Default data type for a header block\n */\ninterface Header {\n  /**\n   * The header text\n   */\n  text: string;\n  /**\n   * The header level from 1-6\n   */\n  level: number;\n}\n\n/**\n * Interface for a header block\n */\nexport interface HeaderBlock extends Block {\n  /**\n   * The EditorJS block type\n   */\n  type: 'header';\n}\n\n/**\n * Default data type for a header block\n */\nexport interface Image {\n  /**\n   * The image URL\n   */\n  url: string;\n  /**\n   * Optional image caption\n   */\n  caption?: string;\n  /**\n   * Optional border property\n   */\n  withBorder?: boolean;\n\n  /**\n   * Optional background property\n   */\n  withBackground?: boolean;\n\n  /**\n   * Optional stretch property\n   */\n  stretched?: boolean;\n}\n\n/**\n * Interface for a image block\n */\nexport interface ImageBlock extends Block {\n  /**\n   * The EditorJS block type\n   */\n  type: 'image';\n}\n\n/**\n * Type of all the basic block type\n */\nexport type BlockTypes = ParagraphBlock | HeaderBlock | ImageBlock | ListBlock | Block;\n\n    \n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/PluginCode.html":{"url":"injectables/PluginCode.html","title":"injectable - PluginCode","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  PluginCode\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            libs/ngx-editorjs-plugins/src/lib/plugins/code/code.plugin.ts\n        \n\n            \n                Description\n            \n            \n                This plugin returns the tool settings for a  block tool for EditorJS\n\n            \n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                plugin\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            plugin\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    plugin()\n                \n            \n\n\n            \n                \n                    Defined in libs/ngx-editorjs-plugins/src/lib/plugins/code/code.plugin.ts:14\n                \n            \n\n\n            \n                \n                    Returns the ToolSettings for this plugin\n\n\n                    \n                        Returns :     ToolSettings\n\n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport Code from '@editorjs/code';\nimport { ToolSettings } from '@editorjs/editorjs';\nimport { BasePlugin } from '../../types/plugins';\n\n/**\n * This plugin returns the tool settings for a `` block tool for `EditorJS`\n */\n@Injectable()\nexport class PluginCode implements BasePlugin {\n  /**\n   * Returns the `ToolSettings` for this plugin\n   */\n  public plugin(): ToolSettings {\n    return Code;\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/PluginCodeModule.html":{"url":"modules/PluginCodeModule.html","title":"module - PluginCodeModule","body":"\n                   \n\n\n\n\n    Modules\n    PluginCodeModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_PluginCodeModule\n\n\n\ncluster_PluginCodeModule_providers\n\n\n\n\nPluginCode\n\nPluginCode\n\n\n\nPluginCodeModule\n\nPluginCodeModule\n\nPluginCodeModule -->\n\nPluginCode->PluginCodeModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            libs/ngx-editorjs-plugins/src/lib/plugins/code/code.module.ts\n        \n\n\n        \n            Description\n        \n        \n            A module that provides the default EditorJS  block tool.\nSee the GitHub repo for API details\n\n        \n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            PluginCode\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { NgModule } from '@angular/core';\nimport { PluginCode } from './code.plugin';\n\n/**\n * A module that provides the default `EditorJS` `` block tool.\n * See [the GitHub repo](https://github.com/editor-js/code) for API details\n */\n@NgModule({\n  providers: [PluginCode]\n})\nexport class PluginCodeModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/PluginConfig.html":{"url":"interfaces/PluginConfig.html","title":"interface - PluginConfig","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  PluginConfig\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            libs/ngx-editorjs-plugins/src/lib/types/plugins.ts\n        \n\n            \n                Description\n            \n            \n                A Module plugin configuration\n\n            \n\n\n\n\n            \n    Indexable\n        \n            \n                \n                    \n                        [key: string]:        BasePlugin\n\n                    \n                \n                        \n                            \n                                Defined in libs/ngx-editorjs-plugins/src/lib/types/plugins.ts:7\n                            \n                        \n                \n                    \n                        The key of the plugin and the plugin class extending BasePlugin\n\n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { InjectionToken } from '@angular/core';\nimport { ToolSettings, ToolConstructable } from '@editorjs/editorjs';\n\n/**\n * A Module plugin configuration\n */\nexport interface PluginConfig {\n  /**\n   * The key of the plugin and the plugin class extending `BasePlugin`\n   */\n  [key: string]: BasePlugin;\n}\n\n/**\n * A map of all the tools settings\n */\nexport interface ToolSettingsMap {\n  /**\n   * The key of the plugin and the plugin exported tool settings\n   */\n  [key: string]: ToolConstructable | ToolSettings;\n}\n\n/**\n * Defines the interface for required and optional plugin methods.\n * These methods allow a plugin to return a EditorJS plugin and an optional shortcut\n */\nexport interface BasePlugin {\n  /**\n   * The plugin settings to be returned\n   */\n  plugin: () => ToolConstructable | ToolSettings;\n\n  /**\n   * Optional shortcut for the plugin\n   */\n  shortcut?: () => string;\n}\n\n/**\n * The Injection token for initial plugins as defined in the ngx-editorjs module\n */\nexport const InitialPlugins = new InjectionToken('InitialPlugins');\n\n/**\n * The injection token for adding plugins via your own application\n */\nexport const UserPlugins = new InjectionToken('UserPlugins');\n\n    \n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/PluginHeader.html":{"url":"injectables/PluginHeader.html","title":"injectable - PluginHeader","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  PluginHeader\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            libs/ngx-editorjs-plugins/src/lib/plugins/header/header.plugin.ts\n        \n\n            \n                Description\n            \n            \n                This plugin returns the tool settings for a  -  block tool for EditorJS\n\n            \n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                plugin\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            plugin\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    plugin()\n                \n            \n\n\n            \n                \n                    Defined in libs/ngx-editorjs-plugins/src/lib/plugins/header/header.plugin.ts:14\n                \n            \n\n\n            \n                \n                    Returns the plugin settings\n\n\n                    \n                        Returns :     ToolSettings\n\n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { ToolSettings } from '@editorjs/editorjs';\nimport Header from '@editorjs/header';\nimport { BasePlugin } from '../../types/plugins';\n\n/**\n * This plugin returns the tool settings for a ` - ` block tool for `EditorJS`\n */\n@Injectable()\nexport class PluginHeader implements BasePlugin {\n  /**\n   * Returns the plugin settings\n   */\n  public plugin(): ToolSettings {\n    return Header;\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/PluginHeaderModule.html":{"url":"modules/PluginHeaderModule.html","title":"module - PluginHeaderModule","body":"\n                   \n\n\n\n\n    Modules\n    PluginHeaderModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_PluginHeaderModule\n\n\n\ncluster_PluginHeaderModule_providers\n\n\n\n\nPluginHeader\n\nPluginHeader\n\n\n\nPluginHeaderModule\n\nPluginHeaderModule\n\nPluginHeaderModule -->\n\nPluginHeader->PluginHeaderModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            libs/ngx-editorjs-plugins/src/lib/plugins/header/header.module.ts\n        \n\n\n        \n            Description\n        \n        \n            A module that provides the default EditorJS header block tool.\nSee the GitHub repo for API details\n\n        \n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            PluginHeader\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { NgModule } from '@angular/core';\nimport { PluginHeader } from './header.plugin';\n\n/**\n * A module that provides the default `EditorJS` header block tool.\n * See [the GitHub repo](https://github.com/editor-js/header) for API details\n */\n@NgModule({\n  providers: [PluginHeader]\n})\nexport class PluginHeaderModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/PluginImage.html":{"url":"injectables/PluginImage.html","title":"injectable - PluginImage","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  PluginImage\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            libs/ngx-editorjs-plugins/src/lib/plugins/image/image.plugin.ts\n        \n\n            \n                Description\n            \n            \n                This plugin returns the tool settings for a  -  block tool for EditorJS\n\n            \n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                plugin\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            plugin\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    plugin()\n                \n            \n\n\n            \n                \n                    Defined in libs/ngx-editorjs-plugins/src/lib/plugins/image/image.plugin.ts:14\n                \n            \n\n\n            \n                \n                    Returns the plugin settings\n\n\n                    \n                        Returns :     ToolSettings\n\n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { ToolSettings } from '@editorjs/editorjs';\nimport Image from '@editorjs/image';\nimport { BasePlugin } from '../../types/plugins';\n\n/**\n * This plugin returns the tool settings for a ` - ` block tool for `EditorJS`\n */\n@Injectable()\nexport class PluginImage implements BasePlugin {\n  /**\n   * Returns the plugin settings\n   */\n  public plugin(): ToolSettings {\n    return Image;\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/PluginImageModule.html":{"url":"modules/PluginImageModule.html","title":"module - PluginImageModule","body":"\n                   \n\n\n\n\n    Modules\n    PluginImageModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_PluginImageModule\n\n\n\ncluster_PluginImageModule_providers\n\n\n\n\nPluginImage\n\nPluginImage\n\n\n\nPluginImageModule\n\nPluginImageModule\n\nPluginImageModule -->\n\nPluginImage->PluginImageModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            libs/ngx-editorjs-plugins/src/lib/plugins/image/image.module.ts\n        \n\n\n        \n            Description\n        \n        \n            A module that provides the default EditorJS  block tool.\nSee the GitHub repo for API details\n\n        \n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            PluginImage\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { NgModule } from '@angular/core';\nimport { PluginImage } from './image.plugin';\n\n/**\n * A module that provides the default `EditorJS` `` block tool.\n * See [the GitHub repo](https://github.com/editor-js/image) for API details\n */\n@NgModule({\n  providers: [PluginImage]\n})\nexport class PluginImageModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/PluginLink.html":{"url":"injectables/PluginLink.html","title":"injectable - PluginLink","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  PluginLink\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            libs/ngx-editorjs-plugins/src/lib/plugins/link/link.plugin.ts\n        \n\n            \n                Description\n            \n            \n                This plugin returns the tool settings for a  block tool for EditorJS\n\n            \n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                plugin\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            plugin\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    plugin()\n                \n            \n\n\n            \n                \n                    Defined in libs/ngx-editorjs-plugins/src/lib/plugins/link/link.plugin.ts:14\n                \n            \n\n\n            \n                \n                    Returns the plugin settings\n\n\n                    \n                        Returns :     ToolSettings\n\n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { ToolSettings } from '@editorjs/editorjs';\nimport Link from '@editorjs/link';\nimport { BasePlugin } from '../../types/plugins';\n\n/**\n * This plugin returns the tool settings for a `` block tool for `EditorJS`\n */\n@Injectable()\nexport class PluginLink implements BasePlugin {\n  /**\n   * Returns the plugin settings\n   */\n  public plugin(): ToolSettings {\n    return Link;\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/PluginLinkModule.html":{"url":"modules/PluginLinkModule.html","title":"module - PluginLinkModule","body":"\n                   \n\n\n\n\n    Modules\n    PluginLinkModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_PluginLinkModule\n\n\n\ncluster_PluginLinkModule_providers\n\n\n\n\nPluginLink\n\nPluginLink\n\n\n\nPluginLinkModule\n\nPluginLinkModule\n\nPluginLinkModule -->\n\nPluginLink->PluginLinkModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            libs/ngx-editorjs-plugins/src/lib/plugins/link/link.module.ts\n        \n\n\n        \n            Description\n        \n        \n            A module that provides the default EditorJS  block tool.\nSee the GitHub repo for API details\n\n        \n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            PluginLink\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { NgModule } from '@angular/core';\nimport { PluginLink } from './link.plugin';\n\n/**\n * A module that provides the default `EditorJS` `` block tool.\n * See [the GitHub repo](https://github.com/editor-js/link) for API details\n */\n@NgModule({\n  providers: [PluginLink]\n})\nexport class PluginLinkModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/PluginList.html":{"url":"injectables/PluginList.html","title":"injectable - PluginList","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  PluginList\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            libs/ngx-editorjs-plugins/src/lib/plugins/list/list.plugin.ts\n        \n\n            \n                Description\n            \n            \n                This plugin returns the tool settings for a  and  block tool for EditorJS\n\n            \n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                plugin\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            plugin\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    plugin()\n                \n            \n\n\n            \n                \n                    Defined in libs/ngx-editorjs-plugins/src/lib/plugins/list/list.plugin.ts:14\n                \n            \n\n\n            \n                \n                    Returns the plugin settings\n\n\n                    \n                        Returns :     ToolSettings\n\n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { ToolSettings } from '@editorjs/editorjs';\nimport List from '@editorjs/list';\nimport { BasePlugin } from '../../types/plugins';\n\n/**\n * This plugin returns the tool settings for a `` and `` block tool for `EditorJS`\n */\n@Injectable()\nexport class PluginList implements BasePlugin {\n  /**\n   * Returns the plugin settings\n   */\n  public plugin(): ToolSettings {\n    return List;\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/PluginListModule.html":{"url":"modules/PluginListModule.html","title":"module - PluginListModule","body":"\n                   \n\n\n\n\n    Modules\n    PluginListModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_PluginListModule\n\n\n\ncluster_PluginListModule_providers\n\n\n\n\nPluginList\n\nPluginList\n\n\n\nPluginListModule\n\nPluginListModule\n\nPluginListModule -->\n\nPluginList->PluginListModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            libs/ngx-editorjs-plugins/src/lib/plugins/list/list.module.ts\n        \n\n\n        \n            Description\n        \n        \n            A module that provides the default EditorJS  and  block tool.\nSee the GitHub repo for API details\n\n        \n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            PluginList\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { NgModule } from '@angular/core';\nimport { PluginList } from './list.plugin';\n\n/**\n * A module that provides the default `EditorJS` `` and `` block tool.\n * See [the GitHub repo](https://github.com/editor-js/list) for API details\n */\n@NgModule({\n  providers: [PluginList]\n})\nexport class PluginListModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/PluginMarker.html":{"url":"injectables/PluginMarker.html","title":"injectable - PluginMarker","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  PluginMarker\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            libs/ngx-editorjs-plugins/src/lib/plugins/marker/marker.plugin.ts\n        \n\n            \n                Description\n            \n            \n                This plugin returns the tool settings for a inline marker tool for EditorJS\n\n            \n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                plugin\n                            \n                            \n                                    Public\n                                shortcut\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            plugin\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    plugin()\n                \n            \n\n\n            \n                \n                    Defined in libs/ngx-editorjs-plugins/src/lib/plugins/marker/marker.plugin.ts:14\n                \n            \n\n\n            \n                \n                    Returns the plugin settings\n\n\n                    \n                        Returns :     ToolSettings\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            shortcut\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    shortcut()\n                \n            \n\n\n            \n                \n                    Defined in libs/ngx-editorjs-plugins/src/lib/plugins/marker/marker.plugin.ts:20\n                \n            \n\n\n            \n                \n                    Returns the plugin shortcut\n\n\n                    \n                        Returns :         string\n\n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { ToolSettings } from '@editorjs/editorjs';\nimport Marker from '@editorjs/marker';\nimport { BasePlugin } from '../../types/plugins';\n\n/**\n * This plugin returns the tool settings for a inline marker tool for `EditorJS`\n */\n@Injectable()\nexport class PluginMarker implements BasePlugin {\n  /**\n   * Returns the plugin settings\n   */\n  public plugin(): ToolSettings {\n    return Marker;\n  }\n  /**\n   * Returns the plugin shortcut\n   */\n  public shortcut() {\n    return 'CMD+SHIFT+M';\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/PluginMarkerModule.html":{"url":"modules/PluginMarkerModule.html","title":"module - PluginMarkerModule","body":"\n                   \n\n\n\n\n    Modules\n    PluginMarkerModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_PluginMarkerModule\n\n\n\ncluster_PluginMarkerModule_providers\n\n\n\n\nPluginMarker\n\nPluginMarker\n\n\n\nPluginMarkerModule\n\nPluginMarkerModule\n\nPluginMarkerModule -->\n\nPluginMarker->PluginMarkerModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            libs/ngx-editorjs-plugins/src/lib/plugins/marker/marker.module.ts\n        \n\n\n        \n            Description\n        \n        \n            A module that provides the default EditorJS inline marker tool.\nSee the GitHub repo for API details\n\n        \n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            PluginMarker\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { NgModule } from '@angular/core';\nimport { PluginMarker } from './marker.plugin';\n\n/**\n * A module that provides the default `EditorJS` inline marker tool.\n * See [the GitHub repo](https://github.com/editor-js/marker) for API details\n */\n@NgModule({\n  providers: [PluginMarker]\n})\nexport class PluginMarkerModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/PluginParagraph.html":{"url":"injectables/PluginParagraph.html","title":"injectable - PluginParagraph","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  PluginParagraph\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            libs/ngx-editorjs-plugins/src/lib/plugins/paragraph/paragraph.plugin.ts\n        \n\n            \n                Description\n            \n            \n                This plugin returns the tool settings for a  block tool for EditorJS\n\n            \n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                plugin\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            plugin\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    plugin()\n                \n            \n\n\n            \n                \n                    Defined in libs/ngx-editorjs-plugins/src/lib/plugins/paragraph/paragraph.plugin.ts:14\n                \n            \n\n\n            \n                \n                    Returns the plugin settings\n\n\n                    \n                        Returns :     ToolSettings\n\n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport Paragraph from '@editorjs/paragraph';\nimport { ToolSettings } from '@editorjs/editorjs';\nimport { BasePlugin } from '../../types/plugins';\n\n/**\n * This plugin returns the tool settings for a `` block tool for `EditorJS`\n */\n@Injectable()\nexport class PluginParagraph implements BasePlugin {\n  /**\n   * Returns the plugin settings\n   */\n  public plugin(): ToolSettings {\n    return Paragraph;\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/PluginParagraphModule.html":{"url":"modules/PluginParagraphModule.html","title":"module - PluginParagraphModule","body":"\n                   \n\n\n\n\n    Modules\n    PluginParagraphModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_PluginParagraphModule\n\n\n\ncluster_PluginParagraphModule_providers\n\n\n\n\nPluginParagraph\n\nPluginParagraph\n\n\n\nPluginParagraphModule\n\nPluginParagraphModule\n\nPluginParagraphModule -->\n\nPluginParagraph->PluginParagraphModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            libs/ngx-editorjs-plugins/src/lib/plugins/paragraph/paragraph.module.ts\n        \n\n\n        \n            Description\n        \n        \n            A module that provides the default EditorJS  block tool.\nSee the GitHub repo for API details\n\n        \n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            PluginParagraph\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { NgModule } from '@angular/core';\nimport { PluginParagraph } from './paragraph.plugin';\n\n/**\n * A module that provides the default `EditorJS` `` block tool.\n * See [the GitHub repo](https://github.com/editor-js/paragraph) for API details\n */\n@NgModule({\n  providers: [PluginParagraph]\n})\nexport class PluginParagraphModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/PluginSimpleImage.html":{"url":"injectables/PluginSimpleImage.html","title":"injectable - PluginSimpleImage","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  PluginSimpleImage\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            libs/ngx-editorjs-plugins/src/lib/plugins/simple-image/simple-image.plugin.ts\n        \n\n            \n                Description\n            \n            \n                This plugin returns the simple image tool for  block editor EditorJS\n\n            \n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                plugin\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            plugin\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    plugin()\n                \n            \n\n\n            \n                \n                    Defined in libs/ngx-editorjs-plugins/src/lib/plugins/simple-image/simple-image.plugin.ts:14\n                \n            \n\n\n            \n                \n                    Returns the plugin settings\n\n\n                    \n                        Returns :     ToolSettings\n\n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { ToolSettings } from '@editorjs/editorjs';\nimport SimpleImage from '@editorjs/simple-image';\nimport { BasePlugin } from '../../types/plugins';\n\n/**\n * This plugin returns the simple image tool for `` block editor `EditorJS`\n */\n@Injectable()\nexport class PluginSimpleImage implements BasePlugin {\n  /**\n   * Returns the plugin settings\n   */\n  public plugin(): ToolSettings {\n    return SimpleImage;\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/PluginSimpleImageModule.html":{"url":"modules/PluginSimpleImageModule.html","title":"module - PluginSimpleImageModule","body":"\n                   \n\n\n\n\n    Modules\n    PluginSimpleImageModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_PluginSimpleImageModule\n\n\n\ncluster_PluginSimpleImageModule_providers\n\n\n\n\nPluginSimpleImage\n\nPluginSimpleImage\n\n\n\nPluginSimpleImageModule\n\nPluginSimpleImageModule\n\nPluginSimpleImageModule -->\n\nPluginSimpleImage->PluginSimpleImageModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            libs/ngx-editorjs-plugins/src/lib/plugins/simple-image/simple-image.module.ts\n        \n\n\n        \n            Description\n        \n        \n            A module that provides the simple image tools for EditorJS  block tool.\nSee the GitHub repo for API details\n\n        \n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            PluginSimpleImage\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { NgModule } from '@angular/core';\nimport { PluginSimpleImage } from './simple-image.plugin';\n\n/**\n * A module that provides the simple image tools for `EditorJS` `` block tool.\n * See [the GitHub repo](https://github.com/editor-js/image) for API details\n */\n@NgModule({\n  providers: [PluginSimpleImage]\n})\nexport class PluginSimpleImageModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/Ready.html":{"url":"classes/Ready.html","title":"class - Ready","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  Ready\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            libs/ngx-editorjs-ngrx/src/lib/actions/ngx-editorjs.actions.ts\n        \n\n\n\n            \n                Implements\n            \n            \n                        Action\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                payload\n                            \n                            \n                                    Readonly\n                                type\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(payload: literal type)\n                    \n                \n                        \n                            \n                                Defined in libs/ngx-editorjs-ngrx/src/lib/actions/ngx-editorjs.actions.ts:28\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        payload\n                                                  \n                                                        \n                                                                    literal type\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            payload\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     literal type\n\n                        \n                    \n                        \n                            \n                                    Defined in libs/ngx-editorjs-ngrx/src/lib/actions/ngx-editorjs.actions.ts:29\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                            type\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : EditorJSActionTypes.Ready\n                        \n                    \n                        \n                            \n                                    Defined in libs/ngx-editorjs-ngrx/src/lib/actions/ngx-editorjs.actions.ts:28\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { Action } from '@ngrx/store';\nimport { OutputData } from '@editorjs/editorjs';\n\nexport enum EditorJSActionTypes {\n  SaveStart = '[ngx-editorjs] Start Save',\n  SaveEnd = '[ngx-editorjs] Start End',\n  NotReady = '[ngx-editorjs] Not Ready',\n  Ready = '[ngx-editorjs] Ready',\n  Changed = '[ngx-editorjs] Changed'\n}\n\nexport class SaveStart implements Action {\n  readonly type = EditorJSActionTypes.SaveStart;\n  constructor(public payload: { holder: string }) {}\n}\n\nexport class SaveEnd implements Action {\n  readonly type = EditorJSActionTypes.SaveEnd;\n  constructor(public payload: { holder: string; data: OutputData }) {}\n}\n\nexport class NotReady implements Action {\n  readonly type = EditorJSActionTypes.NotReady;\n  constructor(public payload: { holder: string }) {}\n}\n\nexport class Ready implements Action {\n  readonly type = EditorJSActionTypes.Ready;\n  constructor(public payload: { holder: string }) {}\n}\n\nexport class Changed implements Action {\n  readonly type = EditorJSActionTypes.Changed;\n  constructor(public payload: { holder: string; data: OutputData }) {}\n}\n\nexport type NgxEditorJSActions = SaveStart | SaveEnd | NotReady | Ready | Changed;\n\n    \n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/ReadyMap.html":{"url":"interfaces/ReadyMap.html","title":"interface - ReadyMap","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  ReadyMap\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            libs/ngx-editorjs/src/lib/types/maps.ts\n        \n\n            \n                Description\n            \n            \n                A map containing BehaviorSubject of boolean values of the ready state of EditorJS\n\n            \n\n\n\n\n            \n    Indexable\n        \n            \n                \n                    \n                        [key: string]:    BehaviorSubject\n\n                    \n                \n                        \n                            \n                                Defined in libs/ngx-editorjs/src/lib/types/maps.ts:22\n                            \n                        \n            \n        \n\n\n    \n\n\n    \n        import EditorJS from '@editorjs/editorjs';\nimport { BehaviorSubject } from 'rxjs';\nimport { Block } from './blocks';\n\n/**\n * A map containing instances of `EditorJS`\n */\nexport interface EditorMap {\n  [key: string]: EditorJS;\n}\n\n/**\n * A map containing `BehaviorSubject` of `Block` elements from `EditorJS`\n */\nexport interface BlocksMap {\n  [key: string]: BehaviorSubject;\n}\n\n/**\n * A map containing `BehaviorSubject` of `boolean` values of the ready state of `EditorJS`\n */\nexport interface ReadyMap {\n  [key: string]: BehaviorSubject;\n}\n\n/**\n * A map containing `BehaviorSubject` of `number` which is the timestamp of the last `EditorJS` change\n */\nexport interface ChangeMap {\n  [key: string]: BehaviorSubject;\n}\n\n    \n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/SaveEnd.html":{"url":"classes/SaveEnd.html","title":"class - SaveEnd","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  SaveEnd\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            libs/ngx-editorjs-ngrx/src/lib/actions/ngx-editorjs.actions.ts\n        \n\n\n\n            \n                Implements\n            \n            \n                        Action\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                payload\n                            \n                            \n                                    Readonly\n                                type\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(payload: literal type)\n                    \n                \n                        \n                            \n                                Defined in libs/ngx-editorjs-ngrx/src/lib/actions/ngx-editorjs.actions.ts:18\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        payload\n                                                  \n                                                        \n                                                                    literal type\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            payload\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     literal type\n\n                        \n                    \n                        \n                            \n                                    Defined in libs/ngx-editorjs-ngrx/src/lib/actions/ngx-editorjs.actions.ts:19\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                            type\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : EditorJSActionTypes.SaveEnd\n                        \n                    \n                        \n                            \n                                    Defined in libs/ngx-editorjs-ngrx/src/lib/actions/ngx-editorjs.actions.ts:18\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { Action } from '@ngrx/store';\nimport { OutputData } from '@editorjs/editorjs';\n\nexport enum EditorJSActionTypes {\n  SaveStart = '[ngx-editorjs] Start Save',\n  SaveEnd = '[ngx-editorjs] Start End',\n  NotReady = '[ngx-editorjs] Not Ready',\n  Ready = '[ngx-editorjs] Ready',\n  Changed = '[ngx-editorjs] Changed'\n}\n\nexport class SaveStart implements Action {\n  readonly type = EditorJSActionTypes.SaveStart;\n  constructor(public payload: { holder: string }) {}\n}\n\nexport class SaveEnd implements Action {\n  readonly type = EditorJSActionTypes.SaveEnd;\n  constructor(public payload: { holder: string; data: OutputData }) {}\n}\n\nexport class NotReady implements Action {\n  readonly type = EditorJSActionTypes.NotReady;\n  constructor(public payload: { holder: string }) {}\n}\n\nexport class Ready implements Action {\n  readonly type = EditorJSActionTypes.Ready;\n  constructor(public payload: { holder: string }) {}\n}\n\nexport class Changed implements Action {\n  readonly type = EditorJSActionTypes.Changed;\n  constructor(public payload: { holder: string; data: OutputData }) {}\n}\n\nexport type NgxEditorJSActions = SaveStart | SaveEnd | NotReady | Ready | Changed;\n\n    \n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/SaveStart.html":{"url":"classes/SaveStart.html","title":"class - SaveStart","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  SaveStart\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            libs/ngx-editorjs-ngrx/src/lib/actions/ngx-editorjs.actions.ts\n        \n\n\n\n            \n                Implements\n            \n            \n                        Action\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                payload\n                            \n                            \n                                    Readonly\n                                type\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(payload: literal type)\n                    \n                \n                        \n                            \n                                Defined in libs/ngx-editorjs-ngrx/src/lib/actions/ngx-editorjs.actions.ts:13\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        payload\n                                                  \n                                                        \n                                                                    literal type\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            payload\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     literal type\n\n                        \n                    \n                        \n                            \n                                    Defined in libs/ngx-editorjs-ngrx/src/lib/actions/ngx-editorjs.actions.ts:14\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                            type\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : EditorJSActionTypes.SaveStart\n                        \n                    \n                        \n                            \n                                    Defined in libs/ngx-editorjs-ngrx/src/lib/actions/ngx-editorjs.actions.ts:13\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { Action } from '@ngrx/store';\nimport { OutputData } from '@editorjs/editorjs';\n\nexport enum EditorJSActionTypes {\n  SaveStart = '[ngx-editorjs] Start Save',\n  SaveEnd = '[ngx-editorjs] Start End',\n  NotReady = '[ngx-editorjs] Not Ready',\n  Ready = '[ngx-editorjs] Ready',\n  Changed = '[ngx-editorjs] Changed'\n}\n\nexport class SaveStart implements Action {\n  readonly type = EditorJSActionTypes.SaveStart;\n  constructor(public payload: { holder: string }) {}\n}\n\nexport class SaveEnd implements Action {\n  readonly type = EditorJSActionTypes.SaveEnd;\n  constructor(public payload: { holder: string; data: OutputData }) {}\n}\n\nexport class NotReady implements Action {\n  readonly type = EditorJSActionTypes.NotReady;\n  constructor(public payload: { holder: string }) {}\n}\n\nexport class Ready implements Action {\n  readonly type = EditorJSActionTypes.Ready;\n  constructor(public payload: { holder: string }) {}\n}\n\nexport class Changed implements Action {\n  readonly type = EditorJSActionTypes.Changed;\n  constructor(public payload: { holder: string; data: OutputData }) {}\n}\n\nexport type NgxEditorJSActions = SaveStart | SaveEnd | NotReady | Ready | Changed;\n\n    \n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/SidebarComponent.html":{"url":"components/SidebarComponent.html","title":"component - SidebarComponent","body":"\n                   \n\n\n\n\n\n  Components\n  SidebarComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    apps/ngx-tinynodes/src/app/components/sidebar-component/sidebar.component.ts\n\n\n\n\n    \n        Implements\n    \n    \n                    OnInit\n                    OnDestroy\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                tinynodes-sidebar\n            \n\n            \n                styleUrls\n                sidebar.component.scss\n            \n\n\n\n            \n                templateUrl\n                sidebar.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                    Readonly\n                                onDestroy$\n                            \n                            \n                                sidenav\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngOnDestroy\n                            \n                            \n                                ngOnInit\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(app: AppService)\n                    \n                \n                        \n                            \n                                Defined in apps/ngx-tinynodes/src/app/components/sidebar-component/sidebar.component.ts:15\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        app\n                                                  \n                                                        \n                                                                        AppService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngOnDestroy\n                        \n                        \n                    \n                \n            \n            \n                \nngOnDestroy()\n                \n            \n\n\n            \n                \n                    Defined in apps/ngx-tinynodes/src/app/components/sidebar-component/sidebar.component.ts:25\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngOnInit\n                        \n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in apps/ngx-tinynodes/src/app/components/sidebar-component/sidebar.component.ts:19\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                                Readonly\n                            onDestroy$\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : new Subject()\n                        \n                    \n                        \n                            \n                                    Defined in apps/ngx-tinynodes/src/app/components/sidebar-component/sidebar.component.ts:15\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            sidenav\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     MatSidenav\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @ViewChild(MatSidenav)\n                            \n                        \n                    \n                        \n                            \n                                    Defined in apps/ngx-tinynodes/src/app/components/sidebar-component/sidebar.component.ts:13\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n    \n        import { Component, OnInit, ViewChild, OnDestroy } from '@angular/core';\nimport { AppService } from '../../store/app/application.service';\nimport { MatSidenav } from '@angular/material';\nimport { Subject } from 'rxjs';\nimport { takeUntil } from 'rxjs/operators';\n\n@Component({\n  selector: 'tinynodes-sidebar',\n  templateUrl: 'sidebar.component.html',\n  styleUrls: ['sidebar.component.scss']\n})\nexport class SidebarComponent implements OnInit, OnDestroy {\n  @ViewChild(MatSidenav) sidenav: MatSidenav;\n\n  private readonly onDestroy$ = new Subject();\n\n  constructor(private readonly app: AppService) {}\n\n  ngOnInit() {\n    this.app.hidden.pipe(takeUntil(this.onDestroy$)).subscribe(value => {\n      value ? this.sidenav.close() : this.sidenav.open();\n    });\n  }\n\n  ngOnDestroy() {\n    this.onDestroy$.next(true);\n    this.onDestroy$.complete();\n  }\n}\n\n    \n\n    \n        \n  \n    Demo: ngx-editorjs\n  \n\n\n    \n\n    \n                \n                    sidebar.component.scss\n                \n                \n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '      Demo: ngx-editorjs  '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'tinynodes-root'},{'name': 'EditorPageComponent', 'selector': 'ngx-editor-page'},{'name': 'NavBarComponent', 'selector': 'tinynodes-nav-bar'},{'name': 'NgxEditorJSComponent', 'selector': 'ngx-editorjs'},{'name': 'PageContainerComponent', 'selector': 'ngx-page-container'},{'name': 'SidebarComponent', 'selector': 'tinynodes-sidebar'}];\n    var DIRECTIVES = [{'name': 'NgxEditorJSDirective', 'selector': '[ngxEditorJS]'}];\n    var ACTUAL_COMPONENT = {'name': 'SidebarComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/Tag.html":{"url":"interfaces/Tag.html","title":"interface - Tag","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  Tag\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            libs/ngx-editorjs-demo/src/lib/store/pages/pages.models.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        key\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        key\n                                    \n                                \n                                \n                                    \n                                        key:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { ID } from '@datorama/akita';\nimport { Block } from '@tinynodes/ngx-editorjs';\n\nexport interface Tag {\n  key: string;\n}\n\nexport interface PageBlock extends Block {\n  id: ID;\n}\n\nexport interface Page {\n  id: ID;\n  pageTitle: string;\n  pageTags: Tag[];\n  blocks: PageBlock[];\n}\n\n    \n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/ToolSettingsMap.html":{"url":"interfaces/ToolSettingsMap.html","title":"interface - ToolSettingsMap","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  ToolSettingsMap\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            libs/ngx-editorjs-plugins/src/lib/types/plugins.ts\n        \n\n            \n                Description\n            \n            \n                A map of all the tools settings\n\n            \n\n\n\n\n            \n    Indexable\n        \n            \n                \n                    \n                        [key: string]:    ToolConstructable | ToolSettings\n\n                    \n                \n                        \n                            \n                                Defined in libs/ngx-editorjs-plugins/src/lib/types/plugins.ts:17\n                            \n                        \n                \n                    \n                        The key of the plugin and the plugin exported tool settings\n\n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { InjectionToken } from '@angular/core';\nimport { ToolSettings, ToolConstructable } from '@editorjs/editorjs';\n\n/**\n * A Module plugin configuration\n */\nexport interface PluginConfig {\n  /**\n   * The key of the plugin and the plugin class extending `BasePlugin`\n   */\n  [key: string]: BasePlugin;\n}\n\n/**\n * A map of all the tools settings\n */\nexport interface ToolSettingsMap {\n  /**\n   * The key of the plugin and the plugin exported tool settings\n   */\n  [key: string]: ToolConstructable | ToolSettings;\n}\n\n/**\n * Defines the interface for required and optional plugin methods.\n * These methods allow a plugin to return a EditorJS plugin and an optional shortcut\n */\nexport interface BasePlugin {\n  /**\n   * The plugin settings to be returned\n   */\n  plugin: () => ToolConstructable | ToolSettings;\n\n  /**\n   * Optional shortcut for the plugin\n   */\n  shortcut?: () => string;\n}\n\n/**\n * The Injection token for initial plugins as defined in the ngx-editorjs module\n */\nexport const InitialPlugins = new InjectionToken('InitialPlugins');\n\n/**\n * The injection token for adding plugins via your own application\n */\nexport const UserPlugins = new InjectionToken('UserPlugins');\n\n    \n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"changelog.html":{"url":"changelog.html","title":"getting-started - changelog","body":"\n                   \n\nTinynodes Changelog\n\nThis changelog is related to the overall site. You can also find changelogs for libraries under the library docs\n\n\nSunday, 12th May 2019\nThe first devlog is to report that currently version 1.2 has been delayed due to current build issues.\nA bug report has been filed on @nrwl/nx project.\nIn 1.2 there is a new @tinynodes/ngx-editorjs-plugins module that provides exports for several common EditorJS plugins and will be expanded to cover all the officially released plugins.\nWith this change the current build scripts break, and until it is resolved this will block the release.\nIn the meantime I'll continue to work on this small demo site, making it more useful as a good example of an Angular app.\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"contributing.html":{"url":"contributing.html","title":"getting-started - contributing","body":"\n                   \n\nContributing\nWhen contributing to this repository, please first discuss the change you wish to make via issue,\nemail, or any other method with the owners of this repository before making a change.\nPlease note we have a code of conduct, please follow it in all your interactions with the project.\nPull Request Process\n\nEnsure any install or build dependencies are removed before the end of the layer when doing a\nbuild.\nUpdate the README.md with details of changes to the interface, this includes new environment\nvariables, exposed ports, useful file locations and container parameters.\nIncrease the version numbers in any examples files and the README.md to the new version that this\nPull Request would represent. The versioning scheme we use is SemVer.\nYou may merge the Pull Request in once you have the sign-off of two other developers, or if you\ndo not have permission to do that, you may request the second reviewer to merge it for you.\n\nCode of Conduct\nOur Pledge\nIn the interest of fostering an open and welcoming environment, we as\ncontributors and maintainers pledge to making participation in our project and\nour community a harassment-free experience for everyone, regardless of age, body\nsize, disability, ethnicity, gender identity and expression, level of experience,\nnationality, personal appearance, race, religion, or sexual identity and\norientation.\nOur Standards\nExamples of behavior that contributes to creating a positive environment\ninclude:\n\nUsing welcoming and inclusive language\nBeing respectful of differing viewpoints and experiences\nGracefully accepting constructive criticism\nFocusing on what is best for the community\nShowing empathy towards other community members\n\nExamples of unacceptable behavior by participants include:\n\nThe use of sexualized language or imagery and unwelcome sexual attention or\nadvances\nTrolling, insulting/derogatory comments, and personal or political attacks\nPublic or private harassment\nPublishing others' private information, such as a physical or electronic\naddress, without explicit permission\nOther conduct which could reasonably be considered inappropriate in a\nprofessional setting\n\nOur Responsibilities\nProject maintainers are responsible for clarifying the standards of acceptable\nbehavior and are expected to take appropriate and fair corrective action in\nresponse to any instances of unacceptable behavior.\nProject maintainers have the right and responsibility to remove, edit, or\nreject comments, commits, code, wiki edits, issues, and other contributions\nthat are not aligned to this Code of Conduct, or to ban temporarily or\npermanently any contributor for other behaviors that they deem inappropriate,\nthreatening, offensive, or harmful.\nScope\nThis Code of Conduct applies both within project spaces and in public spaces\nwhen an individual is representing the project or its community. Examples of\nrepresenting a project or community include using an official project e-mail\naddress, posting via an official social media account, or acting as an appointed\nrepresentative at an online or offline event. Representation of a project may be\nfurther defined and clarified by project maintainers.\nEnforcement\nInstances of abusive, harassing, or otherwise unacceptable behavior may be\nreported by contacting the project team at me@tane.dev. All\ncomplaints will be reviewed and investigated and will result in a response that\nis deemed necessary and appropriate to the circumstances. The project team is\nobligated to maintain confidentiality with regard to the reporter of an incident.\nFurther details of specific enforcement policies may be posted separately.\nProject maintainers who do not follow or enforce the Code of Conduct in good\nfaith may face temporary or permanent repercussions as determined by other\nmembers of the project's leadership.\nAttribution\nThis Code of Conduct is adapted from the Contributor Covenant, version 1.4,\navailable at http://contributor-covenant.org/version/1/4\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"coverage.html":{"url":"coverage.html","title":"coverage - coverage","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    Documentation coverage\n\n\n\n    \n\n\n\n    \n        \n            File\n            Type\n            Identifier\n            Statements\n        \n    \n    \n        \n            \n                \n                apps/ngx-tinynodes-e2e/src/support/app.po.ts\n            \n            variable\n            getGreeting\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                apps/ngx-tinynodes/src/app/app.routes.ts\n            \n            variable\n            appRoutes\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                apps/ngx-tinynodes/src/app/components/app-component/app.component.ts\n            \n            component\n            AppComponent\n            \n                85 %\n                (6/7)\n            \n        \n        \n            \n                \n                apps/ngx-tinynodes/src/app/components/nav-bar/nav-bar.component.ts\n            \n            component\n            NavBarComponent\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                apps/ngx-tinynodes/src/app/components/sidebar-component/sidebar.component.ts\n            \n            component\n            SidebarComponent\n            \n                0 %\n                (0/6)\n            \n        \n        \n            \n                \n                apps/ngx-tinynodes/src/app/store/app/application.model.ts\n            \n            interface\n            ApplicationState\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                apps/ngx-tinynodes/src/app/store/app/application.model.ts\n            \n            interface\n            MenuItem\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                apps/ngx-tinynodes/src/app/store/app/application.query.ts\n            \n            injectable\n            ApplicationQuery\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                apps/ngx-tinynodes/src/app/store/app/application.service.ts\n            \n            injectable\n            AppService\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                apps/ngx-tinynodes/src/app/store/app/application.store.ts\n            \n            injectable\n            ApplicationStore\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                apps/ngx-tinynodes/src/environments/environment.prod.ts\n            \n            variable\n            environment\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                apps/ngx-tinynodes/src/environments/environment.ts\n            \n            variable\n            environment\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                libs/ngx-editorjs-demo/src/lib/config/index.ts\n            \n            function\n            createNgxEditorJSDemoTools\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                libs/ngx-editorjs-demo/src/lib/containers/editor-page/editor-page.component.ts\n            \n            component\n            EditorPageComponent\n            \n                0 %\n                (0/6)\n            \n        \n        \n            \n                \n                libs/ngx-editorjs-demo/src/lib/containers/page-container/page-container.component.ts\n            \n            component\n            PageContainerComponent\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                libs/ngx-editorjs-demo/src/lib/ngx-editorjs-demo.routes.ts\n            \n            variable\n            ngxEditorjsDemoRoutes\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                libs/ngx-editorjs-demo/src/lib/store/pages/pages.models.ts\n            \n            interface\n            Page\n            \n                0 %\n                (0/5)\n            \n        \n        \n            \n                \n                libs/ngx-editorjs-demo/src/lib/store/pages/pages.models.ts\n            \n            interface\n            PageBlock\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                libs/ngx-editorjs-demo/src/lib/store/pages/pages.models.ts\n            \n            interface\n            Tag\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                libs/ngx-editorjs-demo/src/lib/store/pages/pages.query.ts\n            \n            injectable\n            PagesQuery\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                libs/ngx-editorjs-demo/src/lib/store/pages/pages.service.ts\n            \n            injectable\n            PagesService\n            \n                36 %\n                (4/11)\n            \n        \n        \n            \n                \n                libs/ngx-editorjs-demo/src/lib/store/pages/pages.store.ts\n            \n            injectable\n            PagesStore\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                libs/ngx-editorjs-demo/src/lib/store/pages/pages.store.ts\n            \n            interface\n            PagesState\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                libs/ngx-editorjs-ngrx/src/lib/actions/ngx-editorjs.actions.ts\n            \n            class\n            Changed\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                libs/ngx-editorjs-ngrx/src/lib/actions/ngx-editorjs.actions.ts\n            \n            class\n            NotReady\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                libs/ngx-editorjs-ngrx/src/lib/actions/ngx-editorjs.actions.ts\n            \n            class\n            Ready\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                libs/ngx-editorjs-ngrx/src/lib/actions/ngx-editorjs.actions.ts\n            \n            class\n            SaveEnd\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                libs/ngx-editorjs-ngrx/src/lib/actions/ngx-editorjs.actions.ts\n            \n            class\n            SaveStart\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                libs/ngx-editorjs-ngrx/src/lib/effects/ngx-editorjs.effects.ts\n            \n            injectable\n            NgxEditorJSEffects\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                libs/ngx-editorjs-plugins/src/lib/plugins/code/code.plugin.ts\n            \n            injectable\n            PluginCode\n            \n                100 %\n                (2/2)\n            \n        \n        \n            \n                \n                libs/ngx-editorjs-plugins/src/lib/plugins/header/header.plugin.ts\n            \n            injectable\n            PluginHeader\n            \n                100 %\n                (2/2)\n            \n        \n        \n            \n                \n                libs/ngx-editorjs-plugins/src/lib/plugins/image/image.plugin.ts\n            \n            injectable\n            PluginImage\n            \n                100 %\n                (2/2)\n            \n        \n        \n            \n                \n                libs/ngx-editorjs-plugins/src/lib/plugins/link/link.plugin.ts\n            \n            injectable\n            PluginLink\n            \n                100 %\n                (2/2)\n            \n        \n        \n            \n                \n                libs/ngx-editorjs-plugins/src/lib/plugins/list/list.plugin.ts\n            \n            injectable\n            PluginList\n            \n                100 %\n                (2/2)\n            \n        \n        \n            \n                \n                libs/ngx-editorjs-plugins/src/lib/plugins/marker/marker.plugin.ts\n            \n            injectable\n            PluginMarker\n            \n                100 %\n                (3/3)\n            \n        \n        \n            \n                \n                libs/ngx-editorjs-plugins/src/lib/plugins/paragraph/paragraph.plugin.ts\n            \n            injectable\n            PluginParagraph\n            \n                100 %\n                (2/2)\n            \n        \n        \n            \n                \n                libs/ngx-editorjs-plugins/src/lib/plugins/simple-image/simple-image.plugin.ts\n            \n            injectable\n            PluginSimpleImage\n            \n                100 %\n                (2/2)\n            \n        \n        \n            \n                \n                libs/ngx-editorjs-plugins/src/lib/services/plugins.service.ts\n            \n            injectable\n            NgxEditorJSPluginService\n            \n                100 %\n                (7/7)\n            \n        \n        \n            \n                \n                libs/ngx-editorjs-plugins/src/lib/types/plugins.ts\n            \n            interface\n            BasePlugin\n            \n                100 %\n                (3/3)\n            \n        \n        \n            \n                \n                libs/ngx-editorjs-plugins/src/lib/types/plugins.ts\n            \n            interface\n            PluginConfig\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                libs/ngx-editorjs-plugins/src/lib/types/plugins.ts\n            \n            interface\n            ToolSettingsMap\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                libs/ngx-editorjs-plugins/src/lib/types/plugins.ts\n            \n            variable\n            InitialPlugins\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                libs/ngx-editorjs-plugins/src/lib/types/plugins.ts\n            \n            variable\n            UserPlugins\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                libs/ngx-editorjs/src/lib/containers/editorjs-component/editorjs.component.ts\n            \n            component\n            NgxEditorJSComponent\n            \n                100 %\n                (6/6)\n            \n        \n        \n            \n                \n                libs/ngx-editorjs/src/lib/directives/ngx-editorjs.directive.ts\n            \n            directive\n            NgxEditorJSDirective\n            \n                28 %\n                (2/7)\n            \n        \n        \n            \n                \n                libs/ngx-editorjs/src/lib/ngx-editorjs.module.ts\n            \n            function\n            createTools\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                libs/ngx-editorjs/src/lib/ngx-editorjs.module.ts\n            \n            variable\n            DEFAULT_CONFIG\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                libs/ngx-editorjs/src/lib/services/editorjs.service.ts\n            \n            injectable\n            NgxEditorJSService\n            \n                92 %\n                (13/14)\n            \n        \n        \n            \n                \n                libs/ngx-editorjs/src/lib/types/blocks.ts\n            \n            interface\n            Block\n            \n                100 %\n                (3/3)\n            \n        \n        \n            \n                \n                libs/ngx-editorjs/src/lib/types/blocks.ts\n            \n            interface\n            Header\n            \n                100 %\n                (3/3)\n            \n        \n        \n            \n                \n                libs/ngx-editorjs/src/lib/types/blocks.ts\n            \n            interface\n            HeaderBlock\n            \n                100 %\n                (2/2)\n            \n        \n        \n            \n                \n                libs/ngx-editorjs/src/lib/types/blocks.ts\n            \n            interface\n            Image\n            \n                100 %\n                (6/6)\n            \n        \n        \n            \n                \n                libs/ngx-editorjs/src/lib/types/blocks.ts\n            \n            interface\n            ImageBlock\n            \n                100 %\n                (2/2)\n            \n        \n        \n            \n                \n                libs/ngx-editorjs/src/lib/types/blocks.ts\n            \n            interface\n            List\n            \n                100 %\n                (3/3)\n            \n        \n        \n            \n                \n                libs/ngx-editorjs/src/lib/types/blocks.ts\n            \n            interface\n            ListBlock\n            \n                100 %\n                (2/2)\n            \n        \n        \n            \n                \n                libs/ngx-editorjs/src/lib/types/blocks.ts\n            \n            interface\n            Paragraph\n            \n                100 %\n                (2/2)\n            \n        \n        \n            \n                \n                libs/ngx-editorjs/src/lib/types/blocks.ts\n            \n            interface\n            ParagraphBlock\n            \n                100 %\n                (2/2)\n            \n        \n        \n            \n                \n                libs/ngx-editorjs/src/lib/types/config.ts\n            \n            interface\n            EditorJSConfig\n            \n                100 %\n                (9/9)\n            \n        \n        \n            \n                \n                libs/ngx-editorjs/src/lib/types/config.ts\n            \n            interface\n            NgxEditorJSConfig\n            \n                100 %\n                (2/2)\n            \n        \n        \n            \n                \n                libs/ngx-editorjs/src/lib/types/config.ts\n            \n            variable\n            NGX_EDITORJS_CONFIG\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                libs/ngx-editorjs/src/lib/types/maps.ts\n            \n            interface\n            BlocksMap\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                libs/ngx-editorjs/src/lib/types/maps.ts\n            \n            interface\n            ChangeMap\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                libs/ngx-editorjs/src/lib/types/maps.ts\n            \n            interface\n            EditorMap\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                libs/ngx-editorjs/src/lib/types/maps.ts\n            \n            interface\n            ReadyMap\n            \n                100 %\n                (1/1)\n            \n        \n    \n\n\n\n\n\n    new Tablesort(document.getElementById('coverage-table'));\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"dependencies.html":{"url":"dependencies.html","title":"package-dependencies - dependencies","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        Dependencies\n    \n    \n        \n            @angular/animations : ~7.2.15\n        \n            @angular/cdk : ^7.3.7\n        \n            @angular/common : ~7.2.15\n        \n            @angular/compiler : ~7.2.15\n        \n            @angular/core : ~7.2.15\n        \n            @angular/flex-layout : ^7.0.0-beta.24\n        \n            @angular/forms : ~7.2.15\n        \n            @angular/material : ^7.3.7\n        \n            @angular/platform-browser : ~7.2.15\n        \n            @angular/platform-browser-dynamic : ~7.2.15\n        \n            @angular/router : ~7.2.15\n        \n            @datorama/akita-ng-router-store : ^3.0.2\n        \n            @datorama/akita-ngdevtools : ^1.0.4\n        \n            @editorjs/editorjs : ^2.13.0\n        \n            @editorjs/header : ^2.2.3\n        \n            @editorjs/list : ^1.3.4\n        \n            @editorjs/paragraph : ^2.5.0\n        \n            @ngrx/effects : ^7.4.0\n        \n            @ngrx/store : ^7.4.0\n        \n            core-js : ^2.5.4\n        \n            hammerjs : ^2.0.8\n        \n            ngx-markdown : ^7.1.5\n        \n            rxjs : 6.3.3\n        \n            zone.js : ^0.8.26\n    \n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/enumerations.html":{"url":"miscellaneous/enumerations.html","title":"miscellaneous-enumerations - enumerations","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous\n  Enumerations\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            EditorJSActionTypes   (libs/.../ngx-editorjs.actions.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    libs/ngx-editorjs-ngrx/src/lib/actions/ngx-editorjs.actions.ts\n    \n        \n            \n                \n                    \n                        \n                        EditorJSActionTypes\n                    \n                \n                        \n                            \n                                 SaveStart\n                            \n                        \n                        \n                            \n                                Value : [ngx-editorjs] Start Save\n                            \n                        \n                        \n                            \n                                 SaveEnd\n                            \n                        \n                        \n                            \n                                Value : [ngx-editorjs] Start End\n                            \n                        \n                        \n                            \n                                 NotReady\n                            \n                        \n                        \n                            \n                                Value : [ngx-editorjs] Not Ready\n                            \n                        \n                        \n                            \n                                 Ready\n                            \n                        \n                        \n                            \n                                Value : [ngx-editorjs] Ready\n                            \n                        \n                        \n                            \n                                 Changed\n                            \n                        \n                        \n                            \n                                Value : [ngx-editorjs] Changed\n                            \n                        \n            \n        \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/functions.html":{"url":"miscellaneous/functions.html","title":"miscellaneous-functions - functions","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous\n  Functions\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            createNgxEditorJSDemoTools   (libs/.../index.ts)\n                        \n                        \n                            createTools   (libs/.../ngx-editorjs.module.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    libs/ngx-editorjs-demo/src/lib/config/index.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        \n                            createNgxEditorJSDemoTools\n                        \n                        \n                    \n                \n            \n            \n                \ncreateNgxEditorJSDemoTools()\n                \n            \n\n\n\n\n            \n                \n                    Creates the tools for the ngx-tinynodes demo application\n\n\n                    \n                        Returns :         PluginConfig\n\n                    \n                \n            \n        \n    \n    libs/ngx-editorjs/src/lib/ngx-editorjs.module.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        \n                            createTools\n                        \n                        \n                    \n                \n            \n            \n                \ncreateTools()\n                \n            \n\n\n\n\n            \n                \n                    Factory method for creating the initial set of tool plugins used with the\neditor\n\n\n                    \n                        Returns :         PluginConfig\n\n                    \n                \n            \n        \n    \n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"index.html":{"url":"index.html","title":"getting-started - index","body":"\n                   \n\nNgx-Tinynodes\nThis repository is a collection of Angular components and demos with full documentation.\nLinks\n\nRepository\nDocumentation\nDemo Application Site\nNPM Collection\n\nLibraries\n@tinynodes/ngx-editorjs\nThis project provides a set of features for using EditorJS within Angular 7+ - including a directive, component and service\n\nReadme\nChangelog\nDemo\nProject Folder\n\nDevelopment Information\nThis repository is run by Tane Piper and was generated using Nx.\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"license.html":{"url":"license.html","title":"getting-started - license","body":"\n                   \n\nngx-tinynodes General MIT Licence\nCopyright 2019 Tane Piper me@tane.dev\nPermission is hereby granted, free of charge, to any person obtaining a copy of this software and associated documentation files (the \"Software\"), to deal in the Software without restriction, including without limitation the rights to use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of the Software, and to permit persons to whom the Software is furnished to do so, subject to the following conditions:\nThe above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software.\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules.html":{"url":"modules.html","title":"modules - modules","body":"\n                   \n\n\n\n\n    Modules\n\n\n    \n            \n                \n                    \n                        ApplicationDataModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        AppModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        MaterialModule\n                    \n                    \n                                \n                                    No graph available.\n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        NgxEditorjsDemoModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        NgxEditorJSModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        NgxEditorjsNgrxModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        NgxEditorJSPluginServiceModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        NgxEditorjsPluginsModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        PageStoreModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        PluginCodeModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        PluginHeaderModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        PluginImageModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        PluginLinkModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        PluginListModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        PluginMarkerModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        PluginParagraphModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        PluginSimpleImageModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"overview.html":{"url":"overview.html","title":"overview - overview","body":"\n                   \n\n\n\n    Overview\n\n  \n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_ApplicationDataModule\n\n\n\ncluster_ApplicationDataModule_providers\n\n\n\ncluster_AppModule\n\n\n\ncluster_AppModule_declarations\n\n\n\ncluster_AppModule_imports\n\n\n\ncluster_AppModule_bootstrap\n\n\n\ncluster_NgxEditorjsDemoModule\n\n\n\ncluster_NgxEditorjsDemoModule_declarations\n\n\n\ncluster_NgxEditorjsDemoModule_imports\n\n\n\ncluster_NgxEditorjsDemoModule_exports\n\n\n\ncluster_NgxEditorJSModule\n\n\n\ncluster_NgxEditorJSModule_declarations\n\n\n\ncluster_NgxEditorJSModule_imports\n\n\n\ncluster_NgxEditorJSModule_exports\n\n\n\ncluster_NgxEditorJSModule_providers\n\n\n\ncluster_NgxEditorjsNgrxModule\n\n\n\ncluster_NgxEditorJSPluginServiceModule\n\n\n\ncluster_NgxEditorJSPluginServiceModule_providers\n\n\n\ncluster_NgxEditorjsPluginsModule\n\n\n\ncluster_NgxEditorjsPluginsModule_imports\n\n\n\ncluster_NgxEditorjsPluginsModule_exports\n\n\n\ncluster_PageStoreModule\n\n\n\ncluster_PageStoreModule_providers\n\n\n\ncluster_PluginCodeModule\n\n\n\ncluster_PluginCodeModule_providers\n\n\n\ncluster_PluginHeaderModule\n\n\n\ncluster_PluginHeaderModule_providers\n\n\n\ncluster_PluginImageModule\n\n\n\ncluster_PluginImageModule_providers\n\n\n\ncluster_PluginLinkModule\n\n\n\ncluster_PluginLinkModule_providers\n\n\n\ncluster_PluginListModule\n\n\n\ncluster_PluginListModule_providers\n\n\n\ncluster_PluginMarkerModule\n\n\n\ncluster_PluginMarkerModule_providers\n\n\n\ncluster_PluginParagraphModule\n\n\n\ncluster_PluginParagraphModule_providers\n\n\n\ncluster_PluginSimpleImageModule\n\n\n\ncluster_PluginSimpleImageModule_providers\n\n\n\n\nAppService\n\nAppService\n\n\n\nApplicationDataModule\n\nApplicationDataModule\n\nApplicationDataModule -->\n\nAppService->ApplicationDataModule\n\n\n\n\n\nApplicationQuery\n\nApplicationQuery\n\nApplicationDataModule -->\n\nApplicationQuery->ApplicationDataModule\n\n\n\n\n\nApplicationStore\n\nApplicationStore\n\nApplicationDataModule -->\n\nApplicationStore->ApplicationDataModule\n\n\n\n\n\nAppModule\n\nAppModule\n\nAppModule -->\n\nApplicationDataModule->AppModule\n\n\n\n\n\nAppComponent\n\nAppComponent\n\nAppModule -->\n\nAppComponent->AppModule\n\n\n\n\n\nNavBarComponent\n\nNavBarComponent\n\nAppModule -->\n\nNavBarComponent->AppModule\n\n\n\n\n\nSidebarComponent\n\nSidebarComponent\n\nAppModule -->\n\nSidebarComponent->AppModule\n\n\n\n\n\nAppComponent \n\nAppComponent \n\nAppComponent  -->\n\nAppModule->AppComponent \n\n\n\n\n\nMaterialModule\n\nMaterialModule\n\nAppModule -->\n\nMaterialModule->AppModule\n\n\n\n\n\nNgxEditorJSModule\n\nNgxEditorJSModule\n\nAppModule -->\n\nNgxEditorJSModule->AppModule\n\n\n\n\n\nNgxEditorjsDemoModule\n\nNgxEditorjsDemoModule\n\nNgxEditorjsDemoModule -->\n\nNgxEditorJSModule->NgxEditorjsDemoModule\n\n\n\n\n\nNgxEditorJSComponent \n\nNgxEditorJSComponent \n\nNgxEditorJSComponent  -->\n\nNgxEditorJSModule->NgxEditorJSComponent \n\n\n\n\n\nNgxEditorJSDirective \n\nNgxEditorJSDirective \n\nNgxEditorJSDirective  -->\n\nNgxEditorJSModule->NgxEditorJSDirective \n\n\n\n\n\nNgxEditorjsNgrxModule\n\nNgxEditorjsNgrxModule\n\nNgxEditorjsNgrxModule -->\n\nNgxEditorJSModule->NgxEditorjsNgrxModule\n\n\n\nAppModule -->\n\nNgxEditorjsDemoModule->AppModule\n\n\n\n\n\nEditorPageComponent \n\nEditorPageComponent \n\nEditorPageComponent  -->\n\nNgxEditorjsDemoModule->EditorPageComponent \n\n\n\n\n\nPageContainerComponent \n\nPageContainerComponent \n\nPageContainerComponent  -->\n\nNgxEditorjsDemoModule->PageContainerComponent \n\n\n\n\n\nPageStoreModule \n\nPageStoreModule \n\nPageStoreModule  -->\n\nNgxEditorjsDemoModule->PageStoreModule \n\n\n\n\n\nEditorPageComponent\n\nEditorPageComponent\n\nNgxEditorjsDemoModule -->\n\nEditorPageComponent->NgxEditorjsDemoModule\n\n\n\n\n\nPageContainerComponent\n\nPageContainerComponent\n\nNgxEditorjsDemoModule -->\n\nPageContainerComponent->NgxEditorjsDemoModule\n\n\n\n\n\nPageStoreModule\n\nPageStoreModule\n\nNgxEditorjsDemoModule -->\n\nPageStoreModule->NgxEditorjsDemoModule\n\n\n\n\n\nPluginCodeModule\n\nPluginCodeModule\n\nNgxEditorjsDemoModule -->\n\nPluginCodeModule->NgxEditorjsDemoModule\n\n\n\n\n\nNgxEditorjsPluginsModule\n\nNgxEditorjsPluginsModule\n\nNgxEditorjsPluginsModule -->\n\nPluginCodeModule->NgxEditorjsPluginsModule\n\n\n\n\n\nPluginLinkModule\n\nPluginLinkModule\n\nNgxEditorjsDemoModule -->\n\nPluginLinkModule->NgxEditorjsDemoModule\n\n\n\nNgxEditorjsPluginsModule -->\n\nPluginLinkModule->NgxEditorjsPluginsModule\n\n\n\n\n\nPluginMarkerModule\n\nPluginMarkerModule\n\nNgxEditorjsDemoModule -->\n\nPluginMarkerModule->NgxEditorjsDemoModule\n\n\n\nNgxEditorjsPluginsModule -->\n\nPluginMarkerModule->NgxEditorjsPluginsModule\n\n\n\n\n\nPluginSimpleImageModule\n\nPluginSimpleImageModule\n\nNgxEditorjsDemoModule -->\n\nPluginSimpleImageModule->NgxEditorjsDemoModule\n\n\n\nNgxEditorjsPluginsModule -->\n\nPluginSimpleImageModule->NgxEditorjsPluginsModule\n\n\n\n\n\nNgxEditorJSComponent\n\nNgxEditorJSComponent\n\nNgxEditorJSModule -->\n\nNgxEditorJSComponent->NgxEditorJSModule\n\n\n\n\n\nNgxEditorJSDirective\n\nNgxEditorJSDirective\n\nNgxEditorJSModule -->\n\nNgxEditorJSDirective->NgxEditorJSModule\n\n\n\n\n\nNgxEditorJSPluginServiceModule\n\nNgxEditorJSPluginServiceModule\n\nNgxEditorJSModule -->\n\nNgxEditorJSPluginServiceModule->NgxEditorJSModule\n\n\n\nNgxEditorjsPluginsModule -->\n\nNgxEditorJSPluginServiceModule->NgxEditorjsPluginsModule\n\n\n\n\n\nPluginHeaderModule\n\nPluginHeaderModule\n\nNgxEditorJSModule -->\n\nPluginHeaderModule->NgxEditorJSModule\n\n\n\nNgxEditorjsPluginsModule -->\n\nPluginHeaderModule->NgxEditorjsPluginsModule\n\n\n\n\n\nPluginListModule\n\nPluginListModule\n\nNgxEditorJSModule -->\n\nPluginListModule->NgxEditorJSModule\n\n\n\nNgxEditorjsPluginsModule -->\n\nPluginListModule->NgxEditorjsPluginsModule\n\n\n\n\n\nPluginParagraphModule\n\nPluginParagraphModule\n\nNgxEditorJSModule -->\n\nPluginParagraphModule->NgxEditorJSModule\n\n\n\nNgxEditorjsPluginsModule -->\n\nPluginParagraphModule->NgxEditorjsPluginsModule\n\n\n\n\n\nNgxEditorJSService\n\nNgxEditorJSService\n\nNgxEditorJSModule -->\n\nNgxEditorJSService->NgxEditorJSModule\n\n\n\n\n\nNgxEditorJSPluginService\n\nNgxEditorJSPluginService\n\nNgxEditorJSPluginServiceModule -->\n\nNgxEditorJSPluginService->NgxEditorJSPluginServiceModule\n\n\n\n\n\nPluginImageModule\n\nPluginImageModule\n\nNgxEditorjsPluginsModule -->\n\nPluginImageModule->NgxEditorjsPluginsModule\n\n\n\n\n\nNgxEditorJSPluginServiceModule \n\nNgxEditorJSPluginServiceModule \n\nNgxEditorJSPluginServiceModule  -->\n\nNgxEditorjsPluginsModule->NgxEditorJSPluginServiceModule \n\n\n\n\n\nPluginCodeModule \n\nPluginCodeModule \n\nPluginCodeModule  -->\n\nNgxEditorjsPluginsModule->PluginCodeModule \n\n\n\n\n\nPluginHeaderModule \n\nPluginHeaderModule \n\nPluginHeaderModule  -->\n\nNgxEditorjsPluginsModule->PluginHeaderModule \n\n\n\n\n\nPluginImageModule \n\nPluginImageModule \n\nPluginImageModule  -->\n\nNgxEditorjsPluginsModule->PluginImageModule \n\n\n\n\n\nPluginLinkModule \n\nPluginLinkModule \n\nPluginLinkModule  -->\n\nNgxEditorjsPluginsModule->PluginLinkModule \n\n\n\n\n\nPluginListModule \n\nPluginListModule \n\nPluginListModule  -->\n\nNgxEditorjsPluginsModule->PluginListModule \n\n\n\n\n\nPluginMarkerModule \n\nPluginMarkerModule \n\nPluginMarkerModule  -->\n\nNgxEditorjsPluginsModule->PluginMarkerModule \n\n\n\n\n\nPluginParagraphModule \n\nPluginParagraphModule \n\nPluginParagraphModule  -->\n\nNgxEditorjsPluginsModule->PluginParagraphModule \n\n\n\n\n\nPluginSimpleImageModule \n\nPluginSimpleImageModule \n\nPluginSimpleImageModule  -->\n\nNgxEditorjsPluginsModule->PluginSimpleImageModule \n\n\n\n\n\nPagesQuery\n\nPagesQuery\n\nPageStoreModule -->\n\nPagesQuery->PageStoreModule\n\n\n\n\n\nPagesService\n\nPagesService\n\nPageStoreModule -->\n\nPagesService->PageStoreModule\n\n\n\n\n\nPagesStore\n\nPagesStore\n\nPageStoreModule -->\n\nPagesStore->PageStoreModule\n\n\n\n\n\nPluginCode\n\nPluginCode\n\nPluginCodeModule -->\n\nPluginCode->PluginCodeModule\n\n\n\n\n\nPluginHeader\n\nPluginHeader\n\nPluginHeaderModule -->\n\nPluginHeader->PluginHeaderModule\n\n\n\n\n\nPluginImage\n\nPluginImage\n\nPluginImageModule -->\n\nPluginImage->PluginImageModule\n\n\n\n\n\nPluginLink\n\nPluginLink\n\nPluginLinkModule -->\n\nPluginLink->PluginLinkModule\n\n\n\n\n\nPluginList\n\nPluginList\n\nPluginListModule -->\n\nPluginList->PluginListModule\n\n\n\n\n\nPluginMarker\n\nPluginMarker\n\nPluginMarkerModule -->\n\nPluginMarker->PluginMarkerModule\n\n\n\n\n\nPluginParagraph\n\nPluginParagraph\n\nPluginParagraphModule -->\n\nPluginParagraph->PluginParagraphModule\n\n\n\n\n\nPluginSimpleImage\n\nPluginSimpleImage\n\nPluginSimpleImageModule -->\n\nPluginSimpleImage->PluginSimpleImageModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n  \n\n    \n        \n            \n                \n                    \n                    \n                        17 Modules\n                    \n                \n            \n        \n        \n            \n                \n                    \n                    6 Components\n                \n            \n        \n        \n            \n                \n                    \n                    1 Directive\n                \n            \n        \n        \n            \n                \n                    \n                    17 Injectables\n                \n            \n        \n        \n            \n                \n                    \n                    5 Classes\n                \n            \n        \n        \n            \n                \n                    \n                    24 Interfaces\n                \n            \n        \n    \n\n\n \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"todo.html":{"url":"todo.html","title":"getting-started - todo","body":"\n                   \n\nngx-tinynodes Todo\nGeneral Todos\n\n Add CI pipeline for publishing modules\n Publish doc changes and tags back to repo\n\nngx-editorjs\n\n Add full EditorJS config support\n Add config options as @Input on component and directive\n Add autosave option support to module config\n Expose EditorJS CoreAPI via service helpers (e.g. blocks, selection, etc)\n Provide peer-dependency ngrx/effects via library to control service\n\nngx-editorjs-demo\n\n Add store for page\n Add controls for setting editor\n Add Save feature\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/typealiases.html":{"url":"miscellaneous/typealiases.html","title":"miscellaneous-typealiases - typealiases","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous\n  Type aliases\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            BlockTypes   (libs/.../blocks.ts)\n                        \n                        \n                            ListStyle   (libs/.../blocks.ts)\n                        \n                        \n                            NgxEditorJSActions   (libs/.../ngx-editorjs.actions.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    libs/ngx-editorjs/src/lib/types/blocks.ts\n    \n    \n        \n            \n                \n                    \n                    BlockTypes\n                \n            \n            \n                \n                    Type of all the basic block type\n\n                \n            \n            \n                \n                        ParagraphBlock | HeaderBlock | ImageBlock | ListBlock | Block\n\n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    ListStyle\n                \n            \n            \n                \n                    Available list styles, supports ordered and unordered.\nA custom string can also be added\n\n                \n            \n            \n                \n                        \"ordered\" | \"unordered\" | string\n\n                \n            \n        \n    \n    libs/ngx-editorjs-ngrx/src/lib/actions/ngx-editorjs.actions.ts\n    \n    \n        \n            \n                \n                    \n                    NgxEditorJSActions\n                \n            \n            \n                \n                        SaveStart | SaveEnd | NotReady | Ready | Changed\n\n                \n            \n        \n    \n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/variables.html":{"url":"miscellaneous/variables.html","title":"miscellaneous-variables - variables","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous\n  Variables\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            appRoutes   (apps/.../app.routes.ts)\n                        \n                        \n                            DEFAULT_CONFIG   (libs/.../ngx-editorjs.module.ts)\n                        \n                        \n                            environment   (apps/.../environment.prod.ts)\n                        \n                        \n                            environment   (apps/.../environment.ts)\n                        \n                        \n                            getGreeting   (apps/.../app.po.ts)\n                        \n                        \n                            InitialPlugins   (libs/.../plugins.ts)\n                        \n                        \n                            NGX_EDITORJS_CONFIG   (libs/.../config.ts)\n                        \n                        \n                            ngxEditorjsDemoRoutes   (libs/.../ngx-editorjs-demo.routes.ts)\n                        \n                        \n                            UserPlugins   (libs/.../plugins.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    apps/ngx-tinynodes/src/app/app.routes.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            appRoutes\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     Route[]\n\n                        \n                    \n                    \n                        \n                            Default value : [\n  {\n    path: '',\n    redirectTo: 'ngx-editorjs-demo',\n    pathMatch: 'full'\n  }\n]\n                        \n                    \n\n                \n                    \n                        The main application routes\n\n                    \n                \n\n            \n        \n\n    libs/ngx-editorjs/src/lib/ngx-editorjs.module.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            DEFAULT_CONFIG\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         NgxEditorJSConfig\n\n                        \n                    \n                    \n                        \n                            Default value : {\n  editorjs: { autofocus: false, initialBlock: 'paragraph', holder: 'editor-js' }\n}\n                        \n                    \n\n                \n                    \n                        A default configuration used by each EditorJS instance\n\n                    \n                \n\n            \n        \n\n    apps/ngx-tinynodes/src/environments/environment.prod.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            environment\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         object\n\n                        \n                    \n                    \n                        \n                            Default value : {\n  production: true\n}\n                        \n                    \n\n\n            \n        \n\n    apps/ngx-tinynodes/src/environments/environment.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            environment\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         object\n\n                        \n                    \n                    \n                        \n                            Default value : {\n  production: false\n}\n                        \n                    \n\n\n            \n        \n\n    apps/ngx-tinynodes-e2e/src/support/app.po.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            getGreeting\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : () => cy.get('h1')\n                        \n                    \n\n\n            \n        \n\n    libs/ngx-editorjs-plugins/src/lib/types/plugins.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            InitialPlugins\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : new InjectionToken('InitialPlugins')\n                        \n                    \n\n                \n                    \n                        The Injection token for initial plugins as defined in the ngx-editorjs module\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            UserPlugins\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : new InjectionToken('UserPlugins')\n                        \n                    \n\n                \n                    \n                        The injection token for adding plugins via your own application\n\n                    \n                \n\n            \n        \n\n    libs/ngx-editorjs/src/lib/types/config.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            NGX_EDITORJS_CONFIG\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : new InjectionToken('NGX_EDITORJS_CONFIG')\n                        \n                    \n\n                \n                    \n                        Injection token provied for NgxEditorJSConfig\n\n                    \n                \n\n            \n        \n\n    libs/ngx-editorjs-demo/src/lib/ngx-editorjs-demo.routes.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            ngxEditorjsDemoRoutes\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     Route[]\n\n                        \n                    \n                    \n                        \n                            Default value : [\n  {\n    path: 'ngx-editorjs-demo',\n    redirectTo: 'ngx-editorjs-demo/pages',\n    pathMatch: 'full'\n  },\n  {\n    path: 'ngx-editorjs-demo/pages',\n    component: PageContainerComponent\n  },\n  {\n    path: 'ngx-editorjs-demo/pages/editor',\n    component: EditorPageComponent\n  },\n  {\n    path: 'ngx-editorjs-demo/pages/editor/:id',\n    component: EditorPageComponent\n  }\n]\n                        \n                    \n\n\n            \n        \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"additional-documentation/tinynodes-library-docs.html":{"url":"additional-documentation/tinynodes-library-docs.html","title":"additional-page - Tinynodes Library Docs","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nNgx-Tinynodes Libraries\nHere you can find all the README and CHANGELOG details of all projects released to NPM\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"additional-documentation/tinynodes-library-docs/ngx-editorjs-readme.html":{"url":"additional-documentation/tinynodes-library-docs/ngx-editorjs-readme.html","title":"additional-page - ngx-editorjs Readme","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nNgx-EditorJS\nThis library provides Angular support for EditorJS via a directive, component and service.\nYou can see a demo in action or download it\non GitHub to see how it was implemented.\nFor changes see the CHANGELOG\nInstalling and usage\nInstall the library via npm:\n```bash\n\nnpm install @tinynodes/ngx-editorjs\n```\n\nOnce installed, include the NgxEditorJSModule module in your project with the forRoot method. By default the editor is pre-configured with the standard Header and List tools provided by the EditorJS Team. To overwrite existing tools or add your own see documentation on adding then via Plugin Modules.\n```ts\nimport { NgModule } from '@angular/core';\nimport { BrowserModule } from '@angular/platform-browser';\nimport { NgxEditorJSModule } from '@tinynodes/ngx-editorjs';\nimport { AppComponent } from './app.component';\nimport EditorJS from '@editorjs/editorjs';\n@NgModule({\n  declarations: [AppComponent],\n  imports: [\n    BrowserModule,\n    NgxEditorJSModule.forRoot({\n      editorjs: {\n        autofocus: false,\n        holder: 'editor',\n        initialBlock: 'paragraph',\n        data: {\n          time: Date.now(),\n          version: EditorJS.version,\n          blocks: []\n        }\n      }\n    })\n  ],\n  bootstrap: [AppComponent]\n})\nexport class AppModule {}\n```\nConfiguration\nEditorJS Config\nThe configuration is deigned to be extendable in the future, so each potential feature has a key. For configuring EditorJS pass the options below into a editorjs key in the config.\nThe module configuration allows EditorJS to be provided with a set of options for use. See the EditorJS docs for more details.\n| Configuration Key | Description                                                                                       | Default     |\n| ----------------- | ------------------------------------------------------------------------------------------------- | ----------- |\n| autofocus       | Sets the EditorJS instance to autofocus on load                                                   | false     |\n| holder          | The element ID of the holder, this will set all instances in this module to use this as a default | editor-js |\n| initialBlock    | The default block type to use in the editor                                                       | paragraph |\n| data            | Initial data to load into the editor, this is an OutputData object from EditorJS                | undefined |\nAdding custom tools\nTo include tools in an Angular AOT-friendly way, inside your project, create a folder for your plugin and add an Injectable class with a plugin() method, and optional shortcut method for features that support it.\n```ts\nimport { Injectable } from '@angular/core';\nimport { ToolSettings } from '@editorjs/editorjs';\nimport Marker from '@editorjs/marker';\nimport { BasePlugin } from '@tinynodes/ngx-editorjs';\n@Injectable()\nexport class PluginMarker implements BasePlugin {\n  plugin(): ToolSettings {\n    return Marker;\n  }\n  shortcut(): string {\n    return 'SHIFT+CTRL+M';\n  }\n}\n```\nThis allows Angular's AOT to include the editor component bundled within the application. Then export this via a module:\n```ts\nimport { NgModule } from '@angular/core';\nimport { PluginMarker } from './marker.plugin';\n@NgModule({\n  providers: [PluginMarker]\n})\nexport class PluginMarkerModule {}\n```\nOnce you have created all your required modules, inside your Application or Feature module you need to provide an instance of UserPlugins using a factory function. Inside your module you can now add the following:\n```ts\nimport { NgModule } from '@angular/core';\nimport { NgxEditorJSModule, UserPlugins, PluginConfig } from '@tinynodes/ngx-editorjs';\nimport { PluginMarkerModule } from './plugins/marker/marker.module';\nimport { PluginMarker } from '../plugins/marker/marker.plugin';\nexport function createTools(): PluginConfig {\n  return {\n    code: new PluginCode()\n  };\n}\n@NgModule({\n  imports: [NgxEditorJSModule, PluginMarker],\n  providers: [\n    {\n      provide: UserPlugins,\n      useFactory: createTools\n    }\n  ],\n  exports: [PluginMarker]\n})\nexport class CustomModule {}\n```\nWhat's in the library\nNgxEditorJSDirective\nThis is the main directive which can be used on any element with the [ngxEditorJS]. It has one input which is blocks and this takes an array of EditorJS blocks.\nNgxEditorJSComponent\nThis component can be used in any Angular component using the  tag. Again this component can take a set of blocks, it also provides a holder input for overriding the ID.\nNgxEditorJSService\nThis service provides handling the life-cycle of the EditorJS instance, and exposes the underlying EditorJS instance.API - in future releases more of the API will be exposed via service methods to make controlling the container easier.\nLinks\n\nGitHub\nNPM\nAngular Demo\n\nTodo\n\n Add unit tests for all features (&#x1F614;)\n Improve documentation\n Provide better plugin support\n Provide enhancements for @ngrx/effects and other state management tools via pre-developed effects and services.\n Set up CD pipeline\n Provide more @Input on Directive/Component to make instance generation more configurable.\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"additional-documentation/tinynodes-library-docs/ngx-editorjs-readme/ngx-editorjs-changelog.html":{"url":"additional-documentation/tinynodes-library-docs/ngx-editorjs-readme/ngx-editorjs-changelog.html","title":"additional-page - ngx-editorjs Changelog","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nChangelog\nAll notable changes to this project will be documented in this file.\nThe format is based on Keep a Changelog,\nand this project adheres to Semantic Versioning.\n[Unreleased]\nRemoved\n\nRemoved default plugins from project. All plugins are now provided by the @tinynodes/ngx-editorjs-plugins module\nRemoved PluginService from core and moved to @tinynodes/ngx-editorjs-plugins\n\n[1.1.2] - 2019-05-11\nAdded\n\nImproved internal documentation for generated docs.\n\nRemoved\n\nGenerated docs no longer included in this module - all docs are now available via the generated docs site\n\n[1.1.1] - 2019-05-10\nAdded\n\nGenerated docs via CompoDoc in npm package\nInclude CHANGELOG.md in npm package\n\n[1.1.0] - 2019-05-10\nAdded\n\nEditorJS default paragraph plugin is now included in the default tools, fixes issue where the regenerated component failed to use the default plugin.\n\nChanged\n\nNgxEditorJSService is now provided in the root and now stores multiple editor instances. Getters removed and replaced with methods that take the holder parameter which is the ID of the DOM element the editor should be attached to.\nPlugins are now instances of an Injectable class for AOT and have an instance method of plugin. Also supports shortcut as an optional method that returns the string to set up as the shortcut.\nEditorJSPlugin now renamed BasePlugin and changed from class to interface.\nImproved documentation\n\n[1.0.0] - 2019-05-10\nAdded\n\nInitial release\nReadme, Changelog\nNgxEditorJSModule: That can be imported into the root of a project\nNgxEditorJSDirective: A directive that can attach an EditorJS instance to an element\nNgxEditorJSComponent: A component that is pre-configured to use the directive in any Angular project\nNgxEditorJSService: An Angular service for controlling an EditorJS instance\nDefault plugins for Header and List plugins, documentation on how to add plugins with AOT support\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"additional-documentation/tinynodes-library-docs/ngx-editorjs-plugins-readme.html":{"url":"additional-documentation/tinynodes-library-docs/ngx-editorjs-plugins-readme.html","title":"additional-page - ngx-editorjs-plugins Readme","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nNgx-EditorJS Plugins\nThis module provides a default set of EditorJS plugins for @tinynodes/ngx-editorjs via Angular modules and also provides the plugin service for registering and providing these plugins.\nPlugin Service\nThis package includes the NgxEditorJSPluginService which provides a singleton for registering\nEditorJS plugins with.\nPlugin List\n| Plugin Name             | Description                                            | EditorJS Plugin Link                             |\n| ----------------------- | ------------------------------------------------------ | ------------------------------------------------ |\n| PluginCodeModule        | Provides a  block editor                       | GitHub      |\n| PluginHeaderModule      | Provides a  -  block editor                  | GitHub    |\n| PluginImageModule       | Provides an  block editor + file upload support | GitHub     |\n| PluginLinkModule        | Provides an  block editor                         | GitHub      |\n| PluginIListModule       | Provides an / block editor                   | GitHub      |\n| PluginMarkerModule      | Provides inline text marking                           | GitHub    |\n| PluginParagraphModule   | Provides an  block editor                         | GitHub |\n| PluginSimpleImageModule | Provides an  block editor with paste support    | GitHub |\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"additional-documentation/tinynodes-library-docs/ngx-editorjs-plugins-readme/ngx-editorjs-plugins-changelog.html":{"url":"additional-documentation/tinynodes-library-docs/ngx-editorjs-plugins-readme/ngx-editorjs-plugins-changelog.html","title":"additional-page - ngx-editorjs-plugins Changelog","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nChangelog\nAll notable changes to this project will be documented in this file.\nThe format is based on Keep a Changelog,\nand this project adheres to Semantic Versioning.\n[1.0.0] - 2019-05-11\nAdded\n\nInitial release of module with default plugins - see README.md for details.\nMoved the internal PluginService to public NgxEditorJSPluginService provided by this module\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"}}
}
