var COMPODOC_SEARCH_INDEX = {
  index: {
    version: '2.3.6',
    fields: ['title', 'body'],
    fieldVectors: [
      ['title/interfaces/Block.html', [0, 0.076, 1, 0.4]],
      [
        'body/interfaces/Block.html',
        [
          0,
          0.141,
          1,
          0.774,
          2,
          0.726,
          3,
          0.278,
          4,
          0.278,
          5,
          0.206,
          6,
          0.293,
          7,
          1.658,
          8,
          0.335,
          9,
          2.09,
          10,
          0.875,
          11,
          0.193,
          12,
          0.726,
          13,
          1.671,
          14,
          1.549,
          15,
          1.848,
          16,
          0.906,
          17,
          1.262,
          18,
          1.197,
          19,
          3.413,
          20,
          1.774,
          21,
          2.475,
          22,
          0.017,
          23,
          0.508,
          24,
          1.197,
          25,
          2.585,
          26,
          1.658,
          27,
          1.576,
          28,
          2.352,
          29,
          2.352,
          30,
          1.25,
          31,
          1.25,
          32,
          2.352,
          33,
          0.752,
          34,
          2.48,
          35,
          2.48,
          36,
          1.1,
          37,
          0.757,
          38,
          2.235,
          39,
          2.058,
          40,
          2.173,
          41,
          2.827,
          42,
          2.235,
          43,
          2.644,
          44,
          2.235,
          45,
          1.658,
          46,
          1.658,
          47,
          1.147,
          48,
          2.235,
          49,
          2.842,
          50,
          2.48,
          51,
          1.146,
          52,
          2.48,
          53,
          1.748,
          54,
          1.667,
          55,
          1.748,
          56,
          1.891,
          57,
          1.748,
          58,
          1.748,
          59,
          1.748,
          60,
          1.748,
          61,
          2.235,
          62,
          1.658,
          63,
          1.658,
          64,
          0.007,
          65,
          0.01,
          66,
          0.007
        ]
      ],
      ['title/interfaces/BlockData.html', [0, 0.076, 67, 2.493]],
      [
        'body/interfaces/BlockData.html',
        [
          0,
          0.127,
          1,
          0.702,
          2,
          0.762,
          3,
          0.292,
          4,
          0.292,
          5,
          0.217,
          6,
          0.303,
          8,
          0.568,
          10,
          0.771,
          11,
          0.192,
          14,
          1.331,
          15,
          1.939,
          16,
          1.337,
          17,
          1.169,
          18,
          1.757,
          22,
          0.017,
          23,
          0.526,
          30,
          1.834,
          33,
          0.416,
          37,
          1.733,
          51,
          1.171,
          54,
          1.484,
          64,
          0.007,
          65,
          0.01,
          66,
          0.007,
          67,
          3.83,
          68,
          2.058,
          69,
          3.581,
          70,
          0.582,
          71,
          1.653,
          72,
          0.56,
          73,
          3.288,
          74,
          3.288,
          75,
          1.061,
          76,
          2.878,
          77,
          1.861,
          78,
          2.878,
          79,
          1.939,
          80,
          3.038,
          81,
          2.541,
          82,
          1.312,
          83,
          1.502,
          84,
          2.351,
          85,
          1.434,
          86,
          2.058,
          87,
          4.478,
          88,
          1.757,
          89,
          3.792,
          90,
          3.537,
          91,
          1.642,
          92,
          1.739,
          93,
          2.193,
          94,
          2.351,
          95,
          1.642,
          96,
          1.834,
          97,
          2.878,
          98,
          2.541,
          99,
          1.939,
          100,
          1.434,
          101,
          2.351,
          102,
          2.541,
          103,
          1.434,
          104,
          1.371,
          105,
          2.712,
          106,
          2.058,
          107,
          2.541,
          108,
          1.502,
          109,
          2.291,
          110,
          2.312,
          111,
          2.193,
          112,
          1.203,
          113,
          2.351,
          114,
          2.313,
          115,
          2.539,
          116,
          1.653,
          117,
          1.106,
          118,
          0.352,
          119,
          2.115,
          120,
          1.203,
          121,
          1.712,
          122,
          2.351,
          123,
          1.203,
          124,
          2.351,
          125,
          2.541,
          126,
          2.193,
          127,
          2.541,
          128,
          1.502,
          129,
          2.351
        ]
      ],
      ['title/interfaces/ChangeMap.html', [0, 0.076, 130, 2.339]],
      [
        'body/interfaces/ChangeMap.html',
        [
          0,
          0.132,
          1,
          0.57,
          2,
          0.947,
          3,
          0.362,
          4,
          0.362,
          5,
          0.269,
          6,
          0.351,
          8,
          0.437,
          11,
          0.199,
          15,
          2.41,
          16,
          1.434,
          17,
          1.215,
          18,
          1.561,
          22,
          0.016,
          23,
          0.502,
          47,
          1.495,
          64,
          0.009,
          65,
          0.012,
          66,
          0.009,
          70,
          0.75,
          75,
          1.319,
          91,
          2.178,
          130,
          3.333,
          131,
          2.921,
          132,
          5.029,
          133,
          4.537,
          134,
          2.97,
          135,
          2.706,
          136,
          1.649,
          137,
          4.449,
          138,
          1.703,
          139,
          2.279,
          140,
          2.47,
          141,
          1.956,
          142,
          2.557,
          143,
          2.322,
          144,
          1.956,
          145,
          2.97,
          146,
          2.557,
          147,
          2.557,
          148,
          2.363,
          149,
          2.41,
          150,
          2.725,
          151,
          2.322
        ]
      ],
      ['title/interfaces/CreateEditorJSOptions.html', [0, 0.076, 152, 3.159]],
      [
        'body/interfaces/CreateEditorJSOptions.html',
        [
          0,
          0.096,
          2,
          1.09,
          3,
          0.417,
          4,
          0.417,
          5,
          0.31,
          6,
          0.31,
          8,
          0.503,
          10,
          0.759,
          11,
          0.174,
          12,
          1.09,
          13,
          1.73,
          17,
          1.181,
          22,
          0.016,
          23,
          0.362,
          47,
          2.315,
          51,
          1.411,
          64,
          0.01,
          65,
          0.013,
          66,
          0.01,
          70,
          0.596,
          75,
          1.518,
          92,
          3.497,
          95,
          1.803,
          109,
          2.637,
          110,
          2.928,
          148,
          2.323,
          152,
          4.921,
          153,
          5.12,
          154,
          5.12,
          155,
          2.659,
          156,
          4.618,
          157,
          5.109,
          158,
          3.324,
          159,
          2.788,
          160,
          3.324,
          161,
          3.644
        ]
      ],
      ['title/interfaces/EditorJSChange.html', [0, 0.076, 150, 2.493]],
      [
        'body/interfaces/EditorJSChange.html',
        [
          0,
          0.132,
          1,
          0.669,
          2,
          0.937,
          3,
          0.358,
          4,
          0.358,
          5,
          0.266,
          6,
          0.266,
          8,
          0.433,
          10,
          0.634,
          11,
          0.199,
          12,
          0.937,
          13,
          1.571,
          16,
          1.402,
          17,
          1.167,
          22,
          0.016,
          23,
          0.5,
          47,
          2.157,
          64,
          0.009,
          65,
          0.012,
          66,
          0.009,
          70,
          0.746,
          75,
          1.305,
          91,
          2.13,
          130,
          2.529,
          131,
          2.89,
          132,
          4.919,
          133,
          4.477,
          134,
          2.254,
          135,
          2.415,
          136,
          1.252,
          138,
          1.685,
          139,
          2.254,
          140,
          2.827,
          141,
          1.935,
          142,
          2.529,
          143,
          2.306,
          144,
          1.935,
          145,
          2.95,
          146,
          2.529,
          147,
          2.529,
          148,
          2.655,
          149,
          3.119,
          150,
          3.527,
          151,
          2.903
        ]
      ],
      ['title/interfaces/EditorJSClass.html', [0, 0.076, 162, 2.339]],
      [
        'body/interfaces/EditorJSClass.html',
        [
          0,
          0.131,
          1,
          0.359,
          2,
          0.778,
          3,
          0.298,
          4,
          0.298,
          5,
          0.221,
          6,
          0.221,
          8,
          0.359,
          10,
          0.643,
          11,
          0.209,
          12,
          0.778,
          13,
          1.386,
          14,
          0.778,
          17,
          1.25,
          21,
          1.945,
          22,
          0.016,
          23,
          0.508,
          33,
          0.425,
          39,
          1.962,
          51,
          1.093,
          54,
          1.083,
          56,
          1.228,
          64,
          0.01,
          65,
          0.01,
          66,
          0.007,
          70,
          0.679,
          71,
          1.687,
          72,
          0.572,
          75,
          1.083,
          91,
          1.039,
          95,
          1.444,
          108,
          1.533,
          112,
          2.229,
          114,
          1.464,
          115,
          1.607,
          119,
          2.139,
          121,
          1.73,
          135,
          1.533,
          136,
          1.886,
          138,
          1.945,
          140,
          2.235,
          143,
          1.464,
          144,
          1.607,
          148,
          1.339,
          151,
          1.464,
          155,
          2.13,
          159,
          2.233,
          160,
          2.696,
          162,
          2.919,
          163,
          2.238,
          164,
          2.13,
          165,
          1.177,
          166,
          1.861,
          167,
          2.919,
          168,
          3.057,
          169,
          2.602,
          170,
          1.225,
          171,
          3.111,
          172,
          3.335,
          173,
          2.602,
          174,
          2.233,
          175,
          2.1,
          176,
          2.238,
          177,
          1.607,
          178,
          3.095,
          179,
          2.539,
          180,
          3.591,
          181,
          2.4,
          182,
          2.238,
          183,
          2.602,
          184,
          2.238,
          185,
          1.775,
          186,
          1.607,
          187,
          2.1,
          188,
          2.1,
          189,
          1.775,
          190,
          1.979,
          191,
          2.1,
          192,
          2.1,
          193,
          2.1,
          194,
          2.238,
          195,
          2.751,
          196,
          1.979,
          197,
          2.238,
          198,
          1.979,
          199,
          1.979,
          200,
          2.4,
          201,
          2.4,
          202,
          2.238,
          203,
          1.804,
          204,
          2.919,
          205,
          3.111,
          206,
          2.1,
          207,
          2.1,
          208,
          2.238
        ]
      ],
      ['title/interfaces/EditorJSInstanceConfig.html', [0, 0.076, 176, 2.493]],
      [
        'body/interfaces/EditorJSInstanceConfig.html',
        [
          0,
          0.127,
          1,
          0.351,
          2,
          0.76,
          3,
          0.291,
          4,
          0.291,
          5,
          0.216,
          6,
          0.216,
          8,
          0.351,
          10,
          0.688,
          11,
          0.205,
          12,
          0.76,
          13,
          1.364,
          14,
          0.76,
          17,
          1.199,
          21,
          1.913,
          22,
          0.016,
          23,
          0.505,
          33,
          0.415,
          39,
          1.68,
          51,
          1.309,
          54,
          1.481,
          56,
          1.2,
          64,
          0.01,
          65,
          0.01,
          66,
          0.007,
          70,
          0.671,
          71,
          1.649,
          72,
          0.559,
          75,
          1.058,
          91,
          1.015,
          95,
          1.776,
          108,
          1.497,
          112,
          2.399,
          114,
          1.43,
          115,
          1.57,
          119,
          2.112,
          121,
          1.709,
          135,
          1.497,
          136,
          1.87,
          138,
          1.913,
          140,
          2.207,
          143,
          1.43,
          144,
          2.197,
          148,
          1.831,
          151,
          1.43,
          155,
          2.096,
          159,
          2.197,
          160,
          3.295,
          162,
          2.052,
          163,
          2.187,
          164,
          1.497,
          165,
          1.071,
          166,
          1.308,
          167,
          2.052,
          168,
          2.619,
          169,
          1.829,
          170,
          0.861,
          171,
          2.187,
          172,
          2.344,
          173,
          1.829,
          174,
          2.891,
          175,
          2.872,
          176,
          3.061,
          177,
          2.197,
          178,
          3.138,
          179,
          2.678,
          180,
          3.788,
          181,
          3.282,
          182,
          3.826,
          183,
          2.56,
          184,
          3.826,
          185,
          1.734,
          186,
          1.57,
          187,
          2.052,
          188,
          2.052,
          189,
          1.734,
          190,
          1.934,
          191,
          2.052,
          192,
          2.052,
          193,
          2.052,
          194,
          2.187,
          195,
          2.707,
          196,
          1.934,
          197,
          2.187,
          198,
          1.934,
          199,
          1.934,
          200,
          2.344,
          201,
          2.344,
          202,
          2.187,
          203,
          1.781,
          204,
          2.872,
          205,
          3.061,
          206,
          2.052,
          207,
          2.052,
          208,
          2.187
        ]
      ],
      ['title/interfaces/EditorJSMaterialForm.html', [0, 0.076, 209, 3.521]],
      [
        'body/interfaces/EditorJSMaterialForm.html',
        [
          0,
          0.106,
          2,
          0.469,
          3,
          0.18,
          4,
          0.18,
          5,
          0.133,
          6,
          0.133,
          8,
          0.217,
          9,
          1.351,
          10,
          0.243,
          11,
          0.156,
          13,
          0.952,
          17,
          0.742,
          22,
          0.017,
          23,
          0.306,
          39,
          1.652,
          51,
          0.653,
          56,
          1.914,
          64,
          0.004,
          65,
          0.007,
          66,
          0.004,
          70,
          0.758,
          72,
          0.345,
          99,
          2.343,
          101,
          2.29,
          112,
          1.172,
          117,
          1.337,
          119,
          0.808,
          121,
          0.654,
          136,
          0.992,
          139,
          1.13,
          145,
          3.721,
          148,
          1.278,
          149,
          1.195,
          156,
          1.351,
          158,
          3.354,
          159,
          1.902,
          165,
          0.598,
          167,
          2.486,
          170,
          0.841,
          177,
          2.503,
          180,
          1.195,
          183,
          2.216,
          185,
          1.072,
          186,
          0.97,
          189,
          1.072,
          209,
          4.632,
          210,
          1.908,
          211,
          3.652,
          212,
          1.712,
          213,
          1.908,
          214,
          2.475,
          215,
          3.815,
          216,
          5.355,
          217,
          2.206,
          218,
          2.206,
          219,
          2.206,
          220,
          3.357,
          221,
          1.908,
          222,
          2.707,
          223,
          3.166,
          224,
          3.017,
          225,
          3.017,
          226,
          3.488,
          227,
          2.005,
          228,
          2.475,
          229,
          3.742,
          230,
          3.488,
          231,
          2.206,
          232,
          4.916,
          233,
          1.449,
          234,
          1.908,
          235,
          3.272,
          236,
          3.07,
          237,
          1.908,
          238,
          1.712,
          239,
          2.518,
          240,
          1.908,
          241,
          1.908,
          242,
          2.216,
          243,
          1.712,
          244,
          2.343,
          245,
          2.206,
          246,
          4.624,
          247,
          3.017,
          248,
          0.602,
          249,
          1.908,
          250,
          2.136,
          251,
          0.845,
          252,
          1.172,
          253,
          2.206,
          254,
          1.712,
          255,
          1.566,
          256,
          2.206,
          257,
          1.351,
          258,
          1.712,
          259,
          1.908,
          260,
          2.206,
          261,
          2.206,
          262,
          2.206,
          263,
          0.627,
          264,
          4.253,
          265,
          1.908,
          266,
          1.712,
          267,
          2.343,
          268,
          2.206,
          269,
          3.601,
          270,
          2.206,
          271,
          2.65,
          272,
          2.206,
          273,
          3.488,
          274,
          2.206,
          275,
          3.406,
          276,
          3.229,
          277,
          3.488,
          278,
          3.601,
          279,
          2.206,
          280,
          2.206,
          281,
          6.182,
          282,
          3.652,
          283,
          3.077,
          284,
          2.206,
          285,
          3.488,
          286,
          2.206,
          287,
          2.206,
          288,
          4.628,
          289,
          2.206,
          290,
          4.326,
          291,
          2.206,
          292,
          2.206,
          293,
          2.206,
          294,
          3.488,
          295,
          2.206,
          296,
          3.488,
          297,
          2.206,
          298,
          2.206,
          299,
          2.206,
          300,
          2.206,
          301,
          5.693,
          302,
          2.206,
          303,
          3.488,
          304,
          2.206,
          305,
          2.206,
          306,
          2.206,
          307,
          4.628,
          308,
          2.206,
          309,
          3.488,
          310,
          2.206,
          311,
          1.712,
          312,
          2.29,
          313,
          2.206,
          314,
          2.206,
          315,
          2.841,
          316,
          2.206,
          317,
          3.017,
          318,
          3.488,
          319,
          2.206,
          320,
          2.206,
          321,
          1.712,
          322,
          2.206,
          323,
          2.206,
          324,
          2.206,
          325,
          3.488,
          326,
          2.206,
          327,
          2.206,
          328,
          2.206,
          329,
          3.488,
          330,
          3.488,
          331,
          1.195,
          332,
          2.206,
          333,
          2.206,
          334,
          2.206,
          335,
          2.707,
          336,
          3.017,
          337,
          3.488,
          338,
          2.206,
          339,
          2.206,
          340,
          2.005,
          341,
          2.206,
          342,
          3.017,
          343,
          2.841,
          344,
          2.206,
          345,
          1.195,
          346,
          1.908,
          347,
          1.908,
          348,
          1.072,
          349,
          3.742,
          350,
          2.206,
          351,
          1.712,
          352,
          4.326,
          353,
          4.326,
          354,
          4.326,
          355,
          3.742,
          356,
          2.206,
          357,
          3.488,
          358,
          1.712,
          359,
          2.206,
          360,
          1.566,
          361,
          1.566,
          362,
          1.712,
          363,
          1.449,
          364,
          1.908,
          365,
          1.908,
          366,
          1.712,
          367,
          2.206,
          368,
          1.908,
          369,
          2.206,
          370,
          2.206,
          371,
          1.908,
          372,
          2.206,
          373,
          1.712,
          374,
          2.206,
          375,
          2.206,
          376,
          2.206,
          377,
          2.206
        ]
      ],
      ['title/interfaces/EditorMap.html', [0, 0.076, 142, 2.339]],
      [
        'body/interfaces/EditorMap.html',
        [
          0,
          0.133,
          1,
          0.572,
          2,
          0.952,
          3,
          0.364,
          4,
          0.364,
          5,
          0.27,
          6,
          0.352,
          8,
          0.44,
          11,
          0.195,
          15,
          2.423,
          16,
          1.435,
          17,
          1.217,
          18,
          1.569,
          22,
          0.016,
          23,
          0.502,
          47,
          1.503,
          64,
          0.009,
          65,
          0.012,
          66,
          0.009,
          70,
          0.752,
          75,
          1.326,
          91,
          2.18,
          130,
          2.571,
          131,
          2.937,
          132,
          5.033,
          133,
          4.54,
          134,
          2.291,
          135,
          2.44,
          136,
          1.272,
          138,
          1.712,
          139,
          2.291,
          140,
          2.476,
          141,
          2.559,
          142,
          3.344,
          143,
          2.331,
          144,
          1.967,
          145,
          2.981,
          146,
          2.571,
          147,
          2.571,
          148,
          2.37,
          149,
          2.423,
          150,
          2.74,
          151,
          2.331,
          378,
          4.473
        ]
      ],
      ['title/classes/FixedHeader.html', [165, 0.698, 379, 3.159]],
      [
        'body/classes/FixedHeader.html',
        [
          1,
          0.426,
          3,
          0.353,
          4,
          0.353,
          5,
          0.262,
          6,
          0.385,
          8,
          0.426,
          10,
          0.702,
          11,
          0.193,
          12,
          0.922,
          14,
          1.589,
          16,
          0.811,
          18,
          1.999,
          22,
          0.016,
          23,
          0.403,
          33,
          0.663,
          37,
          0.961,
          39,
          1.915,
          43,
          2.941,
          51,
          1.067,
          64,
          0.009,
          65,
          0.011,
          66,
          0.009,
          70,
          0.741,
          72,
          0.678,
          82,
          1.587,
          85,
          1.735,
          88,
          1.52,
          103,
          2.282,
          104,
          1.659,
          109,
          1.587,
          118,
          0.426,
          119,
          1.587,
          120,
          1.915,
          121,
          1.689,
          123,
          1.915,
          165,
          0.977,
          166,
          2.088,
          168,
          2.39,
          170,
          1.045,
          174,
          2.506,
          203,
          1.339,
          227,
          3.275,
          248,
          1.555,
          251,
          2.182,
          252,
          1.915,
          263,
          1.232,
          275,
          2.219,
          276,
          2.346,
          278,
          2.346,
          340,
          2.49,
          379,
          4.943,
          380,
          3.747,
          381,
          3.747,
          382,
          2.919,
          383,
          5.699,
          384,
          4.929,
          385,
          4.332,
          386,
          2.919,
          387,
          4.929,
          388,
          4.332,
          389,
          4.52,
          390,
          4.929,
          391,
          1.761,
          392,
          1.905,
          393,
          3.362,
          394,
          3.074,
          395,
          3.362,
          396,
          2.653,
          397,
          3.747,
          398,
          4.929,
          399,
          3.747,
          400,
          3.747,
          401,
          3.747,
          402,
          3.747,
          403,
          3.362,
          404,
          3.747,
          405,
          1.735,
          406,
          1.817,
          407,
          2.104,
          408,
          3.747,
          409,
          1.659,
          410,
          2.506,
          411,
          2.49
        ]
      ],
      ['title/interfaces/Header.html', [0, 0.076, 43, 1.558]],
      [
        'body/interfaces/Header.html',
        [
          0,
          0.14,
          1,
          0.769,
          2,
          0.735,
          3,
          0.281,
          4,
          0.281,
          5,
          0.209,
          6,
          0.209,
          7,
          1.679,
          8,
          0.34,
          10,
          0.866,
          11,
          0.185,
          12,
          0.735,
          13,
          1.546,
          14,
          1.475,
          16,
          0.647,
          17,
          1.251,
          20,
          1.266,
          21,
          2.169,
          22,
          0.017,
          23,
          0.509,
          24,
          1.212,
          25,
          2.593,
          26,
          1.679,
          27,
          1.596,
          28,
          2.373,
          29,
          2.373,
          30,
          1.266,
          31,
          1.266,
          32,
          2.373,
          33,
          0.784,
          34,
          2.502,
          35,
          2.502,
          36,
          1.113,
          37,
          0.767,
          38,
          2.255,
          39,
          2.069,
          40,
          2.183,
          41,
          3.268,
          42,
          2.255,
          43,
          2.825,
          44,
          3.113,
          45,
          2.373,
          46,
          2.373,
          47,
          1.904,
          48,
          2.255,
          49,
          2.856,
          50,
          2.502,
          51,
          1.153,
          52,
          2.502,
          53,
          1.77,
          54,
          1.679,
          55,
          1.77,
          56,
          1.904,
          57,
          1.77,
          58,
          1.77,
          59,
          1.77,
          60,
          1.77,
          61,
          2.255,
          62,
          1.679,
          63,
          1.679,
          64,
          0.007,
          65,
          0.01,
          66,
          0.007
        ]
      ],
      ['title/interfaces/HeaderBlock.html', [0, 0.076, 48, 1.88]],
      [
        'body/interfaces/HeaderBlock.html',
        [
          0,
          0.142,
          1,
          0.774,
          2,
          0.75,
          3,
          0.287,
          4,
          0.287,
          5,
          0.213,
          6,
          0.213,
          7,
          1.712,
          8,
          0.346,
          10,
          0.87,
          11,
          0.191,
          12,
          0.75,
          13,
          1.562,
          14,
          1.444,
          16,
          0.66,
          17,
          1.22,
          20,
          1.291,
          21,
          2.192,
          22,
          0.017,
          23,
          0.511,
          24,
          1.236,
          25,
          2.606,
          26,
          1.712,
          27,
          1.627,
          28,
          2.406,
          29,
          2.406,
          30,
          1.291,
          31,
          1.291,
          32,
          2.406,
          33,
          0.761,
          34,
          2.537,
          35,
          2.537,
          36,
          1.136,
          37,
          0.782,
          38,
          2.287,
          39,
          2.199,
          40,
          2.199,
          41,
          2.868,
          42,
          2.287,
          43,
          2.724,
          44,
          2.287,
          45,
          1.712,
          46,
          1.712,
          47,
          1.185,
          48,
          2.644,
          49,
          2.877,
          50,
          2.537,
          51,
          1.163,
          52,
          2.537,
          53,
          1.805,
          54,
          1.697,
          55,
          1.805,
          56,
          1.924,
          57,
          1.805,
          58,
          1.805,
          59,
          1.805,
          60,
          1.805,
          61,
          2.287,
          62,
          1.712,
          63,
          1.712,
          64,
          0.007,
          65,
          0.01,
          66,
          0.007
        ]
      ],
      ['title/interfaces/Image.html', [0, 0.076, 49, 1.79]],
      [
        'body/interfaces/Image.html',
        [
          0,
          0.139,
          1,
          0.765,
          2,
          0.699,
          3,
          0.268,
          4,
          0.268,
          5,
          0.199,
          6,
          0.199,
          7,
          1.596,
          8,
          0.323,
          10,
          0.868,
          11,
          0.182,
          12,
          0.699,
          13,
          1.503,
          14,
          1.453,
          16,
          0.615,
          17,
          1.265,
          20,
          1.204,
          21,
          2.109,
          22,
          0.017,
          23,
          0.503,
          24,
          1.153,
          25,
          2.559,
          26,
          1.596,
          27,
          1.517,
          28,
          2.289,
          29,
          2.289,
          30,
          1.204,
          31,
          1.204,
          32,
          2.289,
          33,
          0.771,
          34,
          2.414,
          35,
          2.414,
          36,
          1.059,
          37,
          0.729,
          38,
          2.176,
          39,
          2.023,
          40,
          2.141,
          41,
          2.779,
          42,
          2.176,
          43,
          2.675,
          44,
          2.176,
          45,
          1.596,
          46,
          1.596,
          47,
          1.104,
          48,
          2.176,
          49,
          3.072,
          50,
          3.396,
          51,
          1.422,
          52,
          3.396,
          53,
          2.414,
          54,
          1.965,
          55,
          3.083,
          56,
          2.391,
          57,
          2.414,
          58,
          3.083,
          59,
          2.414,
          60,
          3.083,
          61,
          2.176,
          62,
          1.596,
          63,
          1.596,
          64,
          0.007,
          65,
          0.009,
          66,
          0.007
        ]
      ],
      ['title/interfaces/ImageBlock.html', [0, 0.076, 61, 1.88]],
      [
        'body/interfaces/ImageBlock.html',
        [
          0,
          0.142,
          1,
          0.774,
          2,
          0.75,
          3,
          0.287,
          4,
          0.287,
          5,
          0.213,
          6,
          0.213,
          7,
          1.712,
          8,
          0.346,
          10,
          0.87,
          11,
          0.191,
          12,
          0.75,
          13,
          1.562,
          14,
          1.444,
          16,
          0.66,
          17,
          1.22,
          20,
          1.291,
          21,
          2.192,
          22,
          0.017,
          23,
          0.511,
          24,
          1.236,
          25,
          2.606,
          26,
          1.712,
          27,
          1.627,
          28,
          2.406,
          29,
          2.406,
          30,
          1.291,
          31,
          1.291,
          32,
          2.406,
          33,
          0.761,
          34,
          2.537,
          35,
          2.537,
          36,
          1.136,
          37,
          0.782,
          38,
          2.287,
          39,
          2.199,
          40,
          2.199,
          41,
          2.868,
          42,
          2.287,
          43,
          2.668,
          44,
          2.287,
          45,
          1.712,
          46,
          1.712,
          47,
          1.185,
          48,
          2.287,
          49,
          2.983,
          50,
          2.537,
          51,
          1.163,
          52,
          2.537,
          53,
          1.805,
          54,
          1.697,
          55,
          1.805,
          56,
          1.924,
          57,
          1.805,
          58,
          1.805,
          59,
          1.805,
          60,
          1.805,
          61,
          2.644,
          62,
          1.712,
          63,
          1.712,
          64,
          0.007,
          65,
          0.01,
          66,
          0.007
        ]
      ],
      ['title/interfaces/InjectorApiCallOptions.html', [0, 0.076, 204, 2.339]],
      [
        'body/interfaces/InjectorApiCallOptions.html',
        [
          0,
          0.127,
          1,
          0.353,
          2,
          0.765,
          3,
          0.293,
          4,
          0.293,
          5,
          0.217,
          6,
          0.217,
          8,
          0.353,
          10,
          0.69,
          11,
          0.207,
          12,
          0.765,
          13,
          1.371,
          14,
          0.765,
          17,
          1.296,
          21,
          1.923,
          22,
          0.016,
          23,
          0.506,
          33,
          0.418,
          39,
          1.688,
          51,
          1.278,
          54,
          1.066,
          56,
          1.209,
          64,
          0.01,
          65,
          0.01,
          66,
          0.007,
          70,
          0.673,
          71,
          1.661,
          72,
          0.563,
          75,
          1.066,
          91,
          1.023,
          95,
          1.428,
          108,
          2.106,
          112,
          2.215,
          114,
          1.44,
          115,
          1.581,
          119,
          2.12,
          121,
          1.716,
          135,
          1.508,
          136,
          1.942,
          138,
          1.923,
          140,
          2.216,
          143,
          1.44,
          144,
          1.581,
          148,
          1.317,
          151,
          1.44,
          155,
          2.427,
          159,
          2.209,
          160,
          2.673,
          162,
          2.067,
          163,
          2.203,
          164,
          1.508,
          165,
          1.074,
          166,
          1.317,
          167,
          2.067,
          168,
          2.628,
          169,
          1.842,
          170,
          0.867,
          171,
          2.203,
          172,
          2.361,
          173,
          1.842,
          174,
          1.581,
          175,
          2.067,
          176,
          2.203,
          177,
          1.581,
          178,
          3.27,
          179,
          2.781,
          180,
          3.796,
          181,
          2.361,
          182,
          2.203,
          183,
          2.573,
          184,
          2.203,
          185,
          1.747,
          186,
          1.581,
          187,
          2.067,
          188,
          2.067,
          189,
          1.747,
          190,
          1.948,
          191,
          2.067,
          192,
          2.067,
          193,
          2.067,
          194,
          2.203,
          195,
          2.72,
          196,
          1.948,
          197,
          2.203,
          198,
          1.948,
          199,
          1.948,
          200,
          2.361,
          201,
          2.361,
          202,
          3.076,
          203,
          2.037,
          204,
          3.326,
          205,
          4.183,
          206,
          2.067,
          207,
          2.067,
          208,
          2.203
        ]
      ],
      ['title/interfaces/InjectorApiCallResponse.html', [0, 0.076, 207, 2.339]],
      [
        'body/interfaces/InjectorApiCallResponse.html',
        [
          0,
          0.129,
          1,
          0.367,
          2,
          0.795,
          3,
          0.304,
          4,
          0.304,
          5,
          0.226,
          6,
          0.226,
          8,
          0.367,
          10,
          0.568,
          11,
          0.207,
          12,
          0.795,
          13,
          1.408,
          14,
          0.795,
          17,
          1.214,
          21,
          2.439,
          22,
          0.016,
          23,
          0.511,
          33,
          0.435,
          39,
          1.986,
          51,
          1.106,
          54,
          1.108,
          56,
          1.256,
          64,
          0.013,
          65,
          0.01,
          66,
          0.008,
          70,
          0.687,
          71,
          1.726,
          72,
          0.585,
          75,
          1.108,
          91,
          1.063,
          95,
          1.467,
          108,
          1.567,
          112,
          2.247,
          114,
          1.497,
          115,
          1.643,
          119,
          2.164,
          121,
          1.751,
          135,
          1.567,
          136,
          1.812,
          138,
          1.975,
          140,
          2.262,
          143,
          1.497,
          144,
          1.643,
          148,
          1.369,
          151,
          1.497,
          155,
          2.163,
          159,
          2.268,
          160,
          2.728,
          162,
          2.148,
          163,
          2.289,
          164,
          1.567,
          165,
          1.092,
          166,
          1.369,
          167,
          2.148,
          168,
          2.671,
          169,
          1.914,
          170,
          0.901,
          171,
          2.289,
          172,
          2.454,
          173,
          1.914,
          174,
          1.643,
          175,
          2.148,
          176,
          2.289,
          177,
          1.643,
          178,
          3.114,
          179,
          2.559,
          180,
          3.62,
          181,
          2.454,
          182,
          2.289,
          183,
          2.642,
          184,
          2.289,
          185,
          1.815,
          186,
          1.643,
          187,
          2.148,
          188,
          2.148,
          189,
          1.815,
          190,
          2.024,
          191,
          2.148,
          192,
          2.148,
          193,
          2.148,
          194,
          2.289,
          195,
          2.794,
          196,
          2.024,
          197,
          2.289,
          198,
          2.024,
          199,
          2.024,
          200,
          2.454,
          201,
          2.454,
          202,
          2.289,
          203,
          1.968,
          204,
          3.395,
          205,
          3.16,
          206,
          2.965,
          207,
          2.965,
          208,
          2.289
        ]
      ],
      ['title/interfaces/InjectorMethodOption.html', [0, 0.076, 198, 2.205]],
      [
        'body/interfaces/InjectorMethodOption.html',
        [
          0,
          0.127,
          1,
          0.349,
          2,
          0.756,
          3,
          0.289,
          4,
          0.289,
          5,
          0.215,
          6,
          0.215,
          8,
          0.349,
          10,
          0.723,
          11,
          0.207,
          12,
          0.756,
          13,
          1.36,
          14,
          1.327,
          17,
          1.242,
          21,
          1.908,
          22,
          0.016,
          23,
          0.504,
          33,
          0.413,
          39,
          1.675,
          51,
          1.389,
          54,
          1.054,
          56,
          1.933,
          64,
          0.01,
          65,
          0.01,
          66,
          0.007,
          70,
          0.669,
          71,
          1.641,
          72,
          0.556,
          75,
          1.054,
          91,
          1.011,
          95,
          1.417,
          108,
          1.491,
          112,
          2.435,
          114,
          1.424,
          115,
          1.563,
          119,
          2.107,
          121,
          1.705,
          135,
          2.089,
          136,
          1.773,
          138,
          2.387,
          140,
          2.387,
          143,
          1.424,
          144,
          1.563,
          148,
          1.302,
          151,
          1.424,
          155,
          2.412,
          159,
          2.191,
          160,
          2.656,
          162,
          2.043,
          163,
          2.177,
          164,
          1.491,
          165,
          1.069,
          166,
          1.302,
          167,
          2.043,
          168,
          2.614,
          169,
          1.821,
          170,
          0.857,
          171,
          2.177,
          172,
          2.334,
          173,
          1.821,
          174,
          1.563,
          175,
          2.043,
          176,
          2.177,
          177,
          1.563,
          178,
          3.263,
          179,
          2.605,
          180,
          3.685,
          181,
          2.334,
          182,
          2.177,
          183,
          2.552,
          184,
          2.177,
          185,
          1.727,
          186,
          1.563,
          187,
          2.043,
          188,
          2.043,
          189,
          1.727,
          190,
          1.925,
          191,
          2.043,
          192,
          2.043,
          193,
          2.043,
          194,
          2.177,
          195,
          3.116,
          196,
          1.925,
          197,
          2.177,
          198,
          2.699,
          199,
          2.699,
          200,
          3.272,
          201,
          4.094,
          202,
          2.177,
          203,
          1.777,
          204,
          2.863,
          205,
          3.052,
          206,
          2.043,
          207,
          2.043,
          208,
          2.177
        ]
      ],
      ['title/interfaces/List.html', [0, 0.076, 25, 1.491]],
      [
        'body/interfaces/List.html',
        [
          0,
          0.14,
          1,
          0.769,
          2,
          0.735,
          3,
          0.281,
          4,
          0.281,
          5,
          0.209,
          6,
          0.209,
          7,
          1.679,
          8,
          0.34,
          10,
          0.868,
          11,
          0.185,
          12,
          0.735,
          13,
          1.546,
          14,
          1.475,
          16,
          0.647,
          17,
          1.213,
          20,
          1.266,
          21,
          2.581,
          22,
          0.017,
          23,
          0.509,
          24,
          1.212,
          25,
          2.729,
          26,
          1.679,
          27,
          1.596,
          28,
          2.373,
          29,
          2.373,
          30,
          1.266,
          31,
          1.266,
          32,
          2.991,
          33,
          0.784,
          34,
          3.453,
          35,
          3.453,
          36,
          1.113,
          37,
          0.767,
          38,
          2.255,
          39,
          2.069,
          40,
          2.183,
          41,
          2.843,
          42,
          2.255,
          43,
          2.653,
          44,
          2.255,
          45,
          1.679,
          46,
          1.679,
          47,
          1.161,
          48,
          2.255,
          49,
          2.856,
          50,
          2.502,
          51,
          1.153,
          52,
          2.502,
          53,
          1.77,
          54,
          1.679,
          55,
          1.77,
          56,
          1.904,
          57,
          1.77,
          58,
          1.77,
          59,
          1.77,
          60,
          1.77,
          61,
          2.255,
          62,
          1.679,
          63,
          1.679,
          64,
          0.007,
          65,
          0.01,
          66,
          0.007
        ]
      ],
      ['title/interfaces/ListBlock.html', [0, 0.076, 38, 1.88]],
      [
        'body/interfaces/ListBlock.html',
        [
          0,
          0.14,
          1,
          0.774,
          2,
          0.746,
          3,
          0.285,
          4,
          0.285,
          5,
          0.212,
          6,
          0.212,
          7,
          1.702,
          8,
          0.344,
          10,
          0.869,
          11,
          0.195,
          12,
          0.746,
          13,
          1.558,
          14,
          1.441,
          16,
          0.656,
          17,
          1.218,
          20,
          1.284,
          21,
          2.185,
          22,
          0.017,
          23,
          0.511,
          24,
          1.229,
          25,
          2.681,
          26,
          1.702,
          27,
          1.618,
          28,
          2.396,
          29,
          2.396,
          30,
          1.284,
          31,
          1.284,
          32,
          2.396,
          33,
          0.788,
          34,
          2.527,
          35,
          2.527,
          36,
          1.589,
          37,
          1.095,
          38,
          2.636,
          39,
          2.194,
          40,
          2.194,
          41,
          2.86,
          42,
          2.278,
          43,
          2.664,
          44,
          2.278,
          45,
          1.702,
          46,
          1.702,
          47,
          1.178,
          48,
          2.278,
          49,
          2.871,
          50,
          2.527,
          51,
          1.16,
          52,
          2.527,
          53,
          1.795,
          54,
          1.692,
          55,
          1.795,
          56,
          1.919,
          57,
          1.795,
          58,
          1.795,
          59,
          1.795,
          60,
          1.795,
          61,
          2.278,
          62,
          1.702,
          63,
          1.702,
          64,
          0.007,
          65,
          0.01,
          66,
          0.007
        ]
      ],
      ['title/interfaces/NgxEditorJSConfig.html', [0, 0.076, 412, 2.889]],
      [
        'body/interfaces/NgxEditorJSConfig.html',
        [
          0,
          0.094,
          1,
          0.674,
          2,
          0.774,
          3,
          0.296,
          4,
          0.296,
          5,
          0.22,
          6,
          0.22,
          8,
          0.358,
          10,
          0.79,
          11,
          0.196,
          12,
          0.774,
          13,
          1.382,
          14,
          1.458,
          17,
          1.248,
          22,
          0.016,
          23,
          0.468,
          33,
          0.797,
          40,
          1.702,
          47,
          1.958,
          51,
          1.442,
          56,
          2.304,
          64,
          0.007,
          65,
          0.01,
          66,
          0.007,
          70,
          0.589,
          71,
          1.68,
          72,
          0.57,
          75,
          1.078,
          95,
          1.949,
          103,
          2.028,
          109,
          2.134,
          111,
          3.102,
          114,
          1.457,
          115,
          2.227,
          116,
          2.908,
          119,
          2.134,
          121,
          1.726,
          134,
          2.594,
          136,
          1.656,
          138,
          2.411,
          155,
          1.526,
          158,
          2.338,
          159,
          2.227,
          160,
          2.338,
          164,
          1.526,
          178,
          2.769,
          179,
          1.393,
          186,
          1.6,
          199,
          1.971,
          252,
          1.702,
          267,
          2.743,
          282,
          3.102,
          343,
          3.325,
          345,
          2.743,
          412,
          4.469,
          413,
          2.824,
          414,
          4.469,
          415,
          4.135,
          416,
          4.469,
          417,
          4.469,
          418,
          4.469,
          419,
          4.864,
          420,
          4.38,
          421,
          3.594,
          422,
          2.743,
          423,
          3.594,
          424,
          3.594,
          425,
          3.325,
          426,
          4.38,
          427,
          4.38,
          428,
          4.38,
          429,
          3.594,
          430,
          3.93,
          431,
          3.594,
          432,
          3.93,
          433,
          3.594,
          434,
          4.887,
          435,
          1.971,
          436,
          2.389,
          437,
          2.229,
          438,
          2.824,
          439,
          2.389,
          440,
          2.824,
          441,
          2.582,
          442,
          2.229,
          443,
          2.582,
          444,
          2.824,
          445,
          2.229,
          446,
          2.824,
          447,
          2.824
        ]
      ],
      ['title/directives/NgxEditorJSDirective.html', [239, 2.085, 448, 2.205]],
      [
        'body/directives/NgxEditorJSDirective.html',
        [
          1,
          0.626,
          3,
          0.121,
          4,
          0.121,
          5,
          0.09,
          6,
          0.428,
          8,
          0.38,
          10,
          0.758,
          11,
          0.195,
          12,
          0.316,
          14,
          0.536,
          17,
          1.149,
          18,
          2.466,
          22,
          0.016,
          23,
          0.105,
          24,
          0.884,
          31,
          1.725,
          33,
          0.45,
          36,
          1.058,
          37,
          0.559,
          40,
          0.847,
          41,
          1.786,
          47,
          1.775,
          51,
          0.614,
          54,
          1.488,
          56,
          1.775,
          64,
          0.003,
          65,
          0.005,
          66,
          0.003,
          70,
          0.584,
          72,
          0.232,
          75,
          0.44,
          83,
          1.622,
          92,
          1.879,
          95,
          1.232,
          96,
          1.291,
          100,
          1.315,
          103,
          1.735,
          108,
          1.057,
          109,
          1.725,
          110,
          1.163,
          112,
          2.066,
          116,
          1.786,
          117,
          0.778,
          119,
          0.923,
          121,
          1.689,
          133,
          0.853,
          134,
          1.291,
          135,
          1.622,
          136,
          1.957,
          138,
          0.568,
          139,
          0.76,
          140,
          2.182,
          143,
          0.594,
          144,
          1.701,
          145,
          1.681,
          148,
          0.923,
          151,
          1.735,
          156,
          3.235,
          157,
          3.907,
          158,
          2.984,
          160,
          2.174,
          165,
          0.254,
          166,
          1.725,
          168,
          0.622,
          169,
          1.981,
          170,
          0.608,
          178,
          2.645,
          179,
          0.965,
          183,
          0.76,
          189,
          1.879,
          190,
          0.804,
          220,
          2.548,
          222,
          3.002,
          223,
          2.922,
          227,
          3.372,
          228,
          2.745,
          236,
          2.33,
          237,
          1.284,
          238,
          1.152,
          239,
          1.291,
          242,
          2.706,
          243,
          1.152,
          252,
          1.3,
          257,
          1.543,
          258,
          1.955,
          266,
          1.955,
          267,
          2.861,
          269,
          3.728,
          271,
          1.543,
          275,
          2.919,
          276,
          2.55,
          278,
          2.346,
          282,
          2.011,
          283,
          2.223,
          288,
          1.955,
          307,
          1.955,
          315,
          2.54,
          317,
          2.179,
          321,
          1.955,
          331,
          1.365,
          336,
          3.747,
          340,
          1.448,
          342,
          3.346,
          343,
          1.654,
          345,
          3.501,
          348,
          1.879,
          349,
          2.839,
          351,
          3.002,
          358,
          1.152,
          360,
          1.788,
          363,
          1.654,
          364,
          2.179,
          366,
          1.152,
          368,
          3.346,
          371,
          2.839,
          382,
          1.291,
          386,
          1.681,
          414,
          3.563,
          415,
          2.54,
          416,
          3.074,
          417,
          3.074,
          418,
          3.074,
          419,
          3.563,
          422,
          1.365,
          423,
          3.342,
          424,
          1.788,
          425,
          1.654,
          429,
          1.788,
          431,
          1.788,
          434,
          3.362,
          448,
          3.59,
          449,
          1.284,
          450,
          7.072,
          451,
          1.484,
          452,
          2.179,
          453,
          1.788,
          454,
          2.54,
          455,
          1.955,
          456,
          2.839,
          457,
          1.284,
          458,
          1.955,
          459,
          4.763,
          460,
          2.519,
          461,
          3.346,
          462,
          3.868,
          463,
          2.179,
          464,
          2.519,
          465,
          2.839,
          466,
          3.346,
          467,
          3.283,
          468,
          3.346,
          469,
          3.283,
          470,
          2.519,
          471,
          2.519,
          472,
          2.709,
          473,
          5.506,
          474,
          1.484,
          475,
          3.868,
          476,
          2.839,
          477,
          1.484,
          478,
          3.283,
          479,
          3.346,
          480,
          1.484,
          481,
          2.179,
          482,
          1.484,
          483,
          1.654,
          484,
          1.788,
          485,
          2.519,
          486,
          2.519,
          487,
          1.955,
          488,
          2.519,
          489,
          2.519,
          490,
          2.519,
          491,
          2.519,
          492,
          1.955,
          493,
          2.519,
          494,
          1.484,
          495,
          2.519,
          496,
          2.179,
          497,
          4.569,
          498,
          1.484,
          499,
          1.484,
          500,
          3.002,
          501,
          1.955,
          502,
          1.484,
          503,
          2.179,
          504,
          1.484,
          505,
          1.484,
          506,
          2.519,
          507,
          2.519,
          508,
          2.179,
          509,
          1.484,
          510,
          2.519,
          511,
          1.484,
          512,
          2.179,
          513,
          5.867,
          514,
          1.484,
          515,
          5.699,
          516,
          1.955,
          517,
          1.484,
          518,
          2.519,
          519,
          1.484,
          520,
          1.484,
          521,
          1.484,
          522,
          1.484,
          523,
          2.519,
          524,
          1.484,
          525,
          1.053,
          526,
          3.346,
          527,
          1.484,
          528,
          1.788,
          529,
          2.845,
          530,
          2.519,
          531,
          2.519,
          532,
          3.868,
          533,
          1.484,
          534,
          1.955,
          535,
          2.519,
          536,
          2.54,
          537,
          1.955,
          538,
          2.179,
          539,
          2.519,
          540,
          2.179,
          541,
          2.179,
          542,
          2.519,
          543,
          2.519,
          544,
          2.49,
          545,
          1.484,
          546,
          2.179,
          547,
          2.179,
          548,
          1.284,
          549,
          1.484,
          550,
          2.839,
          551,
          1.484,
          552,
          1.484,
          553,
          1.484,
          554,
          1.484,
          555,
          1.484,
          556,
          1.484,
          557,
          1.484,
          558,
          1.955,
          559,
          1.484,
          560,
          1.484,
          561,
          1.284,
          562,
          0.975,
          563,
          1.284,
          564,
          1.543,
          565,
          1.484,
          566,
          1.053,
          567,
          1.484,
          568,
          1.484,
          569,
          1.484,
          570,
          1.484,
          571,
          3.346,
          572,
          1.484,
          573,
          4.709,
          574,
          1.484,
          575,
          1.484,
          576,
          1.484,
          577,
          2.839,
          578,
          1.484,
          579,
          1.484,
          580,
          1.484,
          581,
          1.484,
          582,
          1.484,
          583,
          1.484,
          584,
          1.484,
          585,
          1.484,
          586,
          1.484,
          587,
          4.332,
          588,
          1.484,
          589,
          1.484,
          590,
          1.484,
          591,
          1.284,
          592,
          1.484,
          593,
          1.484,
          594,
          1.484,
          595,
          2.519,
          596,
          1.484,
          597,
          1.284,
          598,
          1.484,
          599,
          1.484,
          600,
          3.283,
          601,
          1.484,
          602,
          1.484,
          603,
          1.284,
          604,
          1.484,
          605,
          1.484,
          606,
          1.484,
          607,
          1.484,
          608,
          1.284,
          609,
          1.284,
          610,
          1.484,
          611,
          1.484,
          612,
          1.484,
          613,
          1.484,
          614,
          1.484,
          615,
          1.484,
          616,
          1.484,
          617,
          1.484,
          618,
          2.519,
          619,
          1.484,
          620,
          1.484,
          621,
          1.152
        ]
      ],
      ['title/modules/NgxEditorJSModule.html', [118, 0.4, 622, 2.493]],
      [
        'body/modules/NgxEditorJSModule.html',
        [
          3,
          0.26,
          4,
          0.26,
          5,
          0.193,
          6,
          0.279,
          8,
          0.454,
          9,
          1.956,
          10,
          0.352,
          11,
          0.19,
          18,
          1.12,
          22,
          0.016,
          23,
          0.326,
          33,
          0.537,
          36,
          1.487,
          51,
          1.322,
          64,
          0.006,
          65,
          0.009,
          66,
          0.006,
          70,
          0.88,
          72,
          0.5,
          75,
          0.946,
          77,
          1.029,
          95,
          1.689,
          100,
          2.776,
          103,
          1.279,
          108,
          2.491,
          109,
          2.48,
          118,
          0.619,
          136,
          1.689,
          165,
          0.791,
          166,
          1.17,
          167,
          2.653,
          170,
          1.113,
          174,
          2.03,
          179,
          2.274,
          193,
          3.115,
          196,
          2.5,
          211,
          2.827,
          212,
          2.478,
          233,
          2.097,
          234,
          2.762,
          235,
          1.835,
          239,
          3.761,
          240,
          2.762,
          241,
          2.762,
          242,
          3.363,
          243,
          2.478,
          244,
          3.976,
          248,
          1.792,
          250,
          4.497,
          263,
          1.689,
          271,
          2.827,
          276,
          2.936,
          278,
          1.729,
          340,
          1.835,
          348,
          2.242,
          382,
          1.636,
          386,
          1.636,
          391,
          1.675,
          410,
          2.03,
          436,
          3.031,
          437,
          4.022,
          439,
          3.031,
          442,
          1.956,
          443,
          3.847,
          445,
          2.827,
          484,
          3.276,
          525,
          2.266,
          622,
          4.702,
          623,
          0.946,
          624,
          1.339,
          625,
          1.729,
          626,
          2.936,
          627,
          1.729,
          628,
          2.777,
          629,
          2.762,
          630,
          2.762,
          631,
          2.762,
          632,
          2.762,
          633,
          2.762,
          634,
          4.312,
          635,
          2.653,
          636,
          1.835,
          637,
          1.551,
          638,
          3.993,
          639,
          2.762,
          640,
          3.115,
          641,
          3.993,
          642,
          3.993,
          643,
          4.616,
          644,
          3.9,
          645,
          3.217,
          646,
          4.689,
          647,
          3.582,
          648,
          2.827,
          649,
          3.193,
          650,
          3.193,
          651,
          5.939,
          652,
          5.421,
          653,
          3.276,
          654,
          2.097,
          655,
          4.616,
          656,
          3.993,
          657,
          4.616,
          658,
          4.616,
          659,
          3.193,
          660,
          3.993,
          661,
          3.193,
          662,
          3.193,
          663,
          3.193,
          664,
          3.193,
          665,
          2.762,
          666,
          2.762,
          667,
          2.762,
          668,
          3.193,
          669,
          3.993,
          670,
          2.762,
          671,
          3.993,
          672,
          3.193,
          673,
          3.193
        ]
      ],
      ['title/interfaces/NgxEditorJSModuleConfig.html', [0, 0.076, 437, 2.493]],
      [
        'body/interfaces/NgxEditorJSModuleConfig.html',
        [
          0,
          0.105,
          1,
          0.619,
          2,
          0.901,
          3,
          0.345,
          4,
          0.345,
          5,
          0.256,
          6,
          0.256,
          8,
          0.416,
          10,
          0.467,
          11,
          0.208,
          12,
          0.901,
          13,
          1.532,
          14,
          1.195,
          17,
          1.08,
          22,
          0.016,
          23,
          0.494,
          33,
          0.733,
          40,
          1.424,
          47,
          1.424,
          51,
          1.051,
          56,
          1.887,
          64,
          0.009,
          65,
          0.011,
          66,
          0.009,
          70,
          0.653,
          71,
          1.956,
          72,
          0.663,
          75,
          1.255,
          95,
          2.039,
          103,
          1.696,
          109,
          2.057,
          111,
          2.594,
          114,
          1.696,
          115,
          2.469,
          116,
          2.593,
          119,
          2.307,
          121,
          1.867,
          134,
          2.17,
          136,
          1.597,
          138,
          2.15,
          155,
          2.355,
          158,
          1.956,
          159,
          1.862,
          160,
          3.097,
          164,
          1.776,
          178,
          1.862,
          179,
          2.15,
          186,
          1.862,
          199,
          3.041,
          252,
          1.424,
          267,
          2.294,
          282,
          2.594,
          343,
          2.781,
          345,
          2.294,
          412,
          4.47,
          413,
          3.287,
          414,
          3.006,
          415,
          2.781,
          416,
          3.006,
          417,
          3.006,
          418,
          3.006,
          419,
          3.985,
          420,
          3.664,
          421,
          3.006,
          422,
          2.294,
          423,
          3.006,
          424,
          3.006,
          425,
          2.781,
          426,
          3.664,
          427,
          3.664,
          428,
          3.664,
          429,
          3.006,
          430,
          3.287,
          431,
          3.006,
          432,
          3.287,
          433,
          3.006,
          434,
          4.358,
          435,
          3.041,
          436,
          3.687,
          437,
          3.439,
          438,
          3.287,
          439,
          2.781,
          440,
          3.287,
          441,
          3.006,
          442,
          2.594,
          443,
          3.006,
          444,
          3.287,
          445,
          2.594,
          446,
          3.287,
          447,
          3.287
        ]
      ],
      ['title/injectables/NgxEditorJSPluginService.html', [674, 2.493, 675, 1.977]],
      [
        'body/injectables/NgxEditorJSPluginService.html',
        [
          3,
          0.268,
          4,
          0.268,
          5,
          0.199,
          6,
          0.401,
          8,
          0.541,
          10,
          0.663,
          11,
          0.191,
          12,
          0.699,
          16,
          1.382,
          17,
          1.219,
          18,
          2.235,
          22,
          0.016,
          23,
          0.232,
          25,
          2.559,
          33,
          0.548,
          36,
          1.939,
          37,
          1.702,
          51,
          1.127,
          64,
          0.007,
          65,
          0.009,
          66,
          0.007,
          70,
          0.548,
          72,
          0.514,
          77,
          2.418,
          83,
          1.976,
          91,
          1.886,
          95,
          1.886,
          97,
          3.662,
          103,
          2.41,
          106,
          3.166,
          126,
          4.561,
          128,
          1.378,
          161,
          2.708,
          164,
          2.524,
          165,
          0.563,
          166,
          2.429,
          263,
          1.34,
          269,
          3.998,
          275,
          2.414,
          276,
          3.784,
          278,
          3.26,
          283,
          1.889,
          315,
          2.158,
          340,
          1.889,
          382,
          2.414,
          386,
          3.083,
          391,
          1.456,
          392,
          1.445,
          435,
          2.552,
          472,
          2.176,
          536,
          3.094,
          644,
          3.618,
          645,
          2.552,
          674,
          2.886,
          675,
          2.923,
          676,
          2.55,
          677,
          5.736,
          678,
          3.286,
          679,
          3.657,
          680,
          3.459,
          681,
          4.766,
          682,
          4.712,
          683,
          5.206,
          684,
          4.712,
          685,
          4.712,
          686,
          3.286,
          687,
          3.286,
          688,
          4.076,
          689,
          3.286,
          690,
          3.286,
          691,
          3.094,
          692,
          4.076,
          693,
          3.286,
          694,
          6.018,
          695,
          3.657,
          696,
          4.712,
          697,
          4.076,
          698,
          3.286,
          699,
          4.712,
          700,
          3.286,
          701,
          2.55,
          702,
          3.286,
          703,
          3.286,
          704,
          2.843,
          705,
          3.286,
          706,
          3.286,
          707,
          3.286,
          708,
          4.712,
          709,
          4.712,
          710,
          3.286,
          711,
          4.712,
          712,
          4.712,
          713,
          3.286
        ]
      ],
      ['title/injectables/NgxEditorJSService.html', [242, 2.085, 674, 2.493]],
      [
        'body/injectables/NgxEditorJSService.html',
        [
          3,
          0.085,
          4,
          0.085,
          5,
          0.064,
          6,
          0.328,
          8,
          0.519,
          10,
          0.581,
          11,
          0.203,
          12,
          0.223,
          14,
          0.535,
          16,
          0.349,
          17,
          0.717,
          18,
          1.852,
          20,
          0.683,
          21,
          0.402,
          22,
          0.016,
          23,
          0.074,
          31,
          0.683,
          33,
          0.293,
          36,
          1.245,
          37,
          0.558,
          51,
          1.043,
          64,
          0.011,
          65,
          0.004,
          66,
          0.002,
          70,
          0.547,
          72,
          0.164,
          75,
          0.311,
          77,
          1.348,
          80,
          0.51,
          88,
          0.654,
          91,
          0.992,
          92,
          1.48,
          93,
          1.142,
          95,
          0.867,
          96,
          0.955,
          97,
          1.072,
          100,
          0.747,
          103,
          2.175,
          106,
          3.808,
          108,
          1.055,
          109,
          1.415,
          110,
          1.784,
          112,
          2.209,
          113,
          2.001,
          119,
          1.533,
          121,
          1.688,
          130,
          1.072,
          133,
          2.006,
          135,
          2.213,
          136,
          1.819,
          138,
          1.336,
          139,
          0.538,
          140,
          1.801,
          141,
          2.068,
          142,
          1.446,
          143,
          1.787,
          144,
          1.34,
          145,
          2.143,
          146,
          1.072,
          147,
          1.072,
          148,
          2.086,
          151,
          0.747,
          152,
          2.365,
          155,
          3.074,
          157,
          0.745,
          158,
          2.359,
          159,
          0.462,
          160,
          1.162,
          162,
          1.751,
          164,
          1.278,
          165,
          0.522,
          166,
          2.128,
          168,
          0.782,
          169,
          0.955,
          170,
          0.45,
          173,
          0.538,
          174,
          0.82,
          177,
          0.82,
          178,
          2.504,
          179,
          2.8,
          180,
          3.615,
          182,
          1.142,
          183,
          1.788,
          184,
          1.142,
          186,
          1.84,
          187,
          0.604,
          188,
          0.604,
          189,
          0.906,
          191,
          0.604,
          192,
          0.604,
          196,
          0.569,
          198,
          3.685,
          203,
          2.09,
          204,
          1.751,
          205,
          2.138,
          206,
          1.072,
          207,
          1.446,
          208,
          2.138,
          214,
          1.324,
          228,
          0.745,
          236,
          2.477,
          238,
          0.815,
          242,
          0.955,
          248,
          0.287,
          252,
          0.846,
          267,
          1.01,
          269,
          3.727,
          275,
          1.979,
          276,
          2.942,
          278,
          3.391,
          283,
          3.339,
          312,
          1.225,
          315,
          3.229,
          321,
          2.365,
          335,
          1.447,
          340,
          1.072,
          346,
          1.613,
          347,
          2.636,
          348,
          2.564,
          351,
          1.952,
          355,
          1.613,
          358,
          1.447,
          363,
          2.292,
          365,
          1.613,
          366,
          3.247,
          382,
          2.143,
          386,
          2.704,
          396,
          1.867,
          422,
          1.651,
          424,
          1.785,
          433,
          2.163,
          435,
          3.204,
          436,
          1.225,
          437,
          1.867,
          439,
          0.69,
          459,
          2.636,
          465,
          0.908,
          466,
          3.619,
          468,
          4.254,
          472,
          2.271,
          481,
          0.908,
          484,
          1.785,
          487,
          3.463,
          492,
          1.447,
          500,
          0.815,
          526,
          3.342,
          528,
          3.49,
          529,
          2.537,
          536,
          1.225,
          546,
          3.619,
          547,
          1.613,
          548,
          1.613,
          550,
          5.477,
          561,
          0.908,
          563,
          2.176,
          564,
          1.142,
          577,
          3.619,
          597,
          0.908,
          603,
          4.069,
          608,
          0.908,
          609,
          0.908,
          621,
          0.815,
          640,
          0.604,
          644,
          0.69,
          645,
          2.093,
          665,
          0.908,
          666,
          0.908,
          674,
          1.142,
          675,
          1.48,
          676,
          0.815,
          680,
          1.072,
          681,
          0.908,
          695,
          0.815,
          704,
          0.908,
          714,
          1.05,
          715,
          1.952,
          716,
          1.613,
          717,
          3.864,
          718,
          3.864,
          719,
          1.613,
          720,
          1.865,
          721,
          1.324,
          722,
          1.865,
          723,
          1.865,
          724,
          1.613,
          725,
          2.001,
          726,
          3.619,
          727,
          4.462,
          728,
          3.019,
          729,
          3.019,
          730,
          1.865,
          731,
          1.865,
          732,
          1.865,
          733,
          1.05,
          734,
          4.462,
          735,
          3.864,
          736,
          1.05,
          737,
          1.613,
          738,
          1.865,
          739,
          1.865,
          740,
          1.05,
          741,
          1.865,
          742,
          1.447,
          743,
          3.047,
          744,
          2.636,
          745,
          1.865,
          746,
          1.613,
          747,
          1.613,
          748,
          3.047,
          749,
          1.865,
          750,
          1.05,
          751,
          5.695,
          752,
          5.695,
          753,
          3.488,
          754,
          1.865,
          755,
          1.05,
          756,
          1.865,
          757,
          1.05,
          758,
          1.865,
          759,
          1.865,
          760,
          1.05,
          761,
          1.865,
          762,
          1.865,
          763,
          1.05,
          764,
          1.865,
          765,
          1.05,
          766,
          1.865,
          767,
          1.05,
          768,
          1.865,
          769,
          1.05,
          770,
          1.865,
          771,
          1.05,
          772,
          1.613,
          773,
          1.865,
          774,
          1.05,
          775,
          1.865,
          776,
          1.447,
          777,
          1.613,
          778,
          1.865,
          779,
          1.865,
          780,
          1.05,
          781,
          1.05,
          782,
          1.05,
          783,
          0.815,
          784,
          1.05,
          785,
          1.05,
          786,
          1.05,
          787,
          5.915,
          788,
          1.05,
          789,
          1.05,
          790,
          1.865,
          791,
          1.05,
          792,
          1.05,
          793,
          1.05,
          794,
          1.05,
          795,
          0.908,
          796,
          0.908,
          797,
          1.05,
          798,
          1.05,
          799,
          1.05,
          800,
          1.865,
          801,
          1.447,
          802,
          1.865,
          803,
          1.05,
          804,
          3.047,
          805,
          3.864,
          806,
          1.05,
          807,
          2.516,
          808,
          1.05,
          809,
          3.047,
          810,
          1.05,
          811,
          1.865,
          812,
          1.05,
          813,
          1.05,
          814,
          1.865,
          815,
          1.05,
          816,
          1.865,
          817,
          1.05,
          818,
          1.05,
          819,
          1.05,
          820,
          1.865,
          821,
          1.05,
          822,
          1.05,
          823,
          0.908,
          824,
          1.05,
          825,
          3.047,
          826,
          1.05,
          827,
          2.516,
          828,
          1.05,
          829,
          1.05,
          830,
          1.05,
          831,
          1.05,
          832,
          3.864,
          833,
          1.05,
          834,
          1.05,
          835,
          1.865,
          836,
          2.516,
          837,
          3.047,
          838,
          1.05,
          839,
          1.865,
          840,
          1.05,
          841,
          1.05,
          842,
          1.05,
          843,
          1.865,
          844,
          1.865,
          845,
          1.865,
          846,
          1.865,
          847,
          1.865,
          848,
          1.05,
          849,
          1.05,
          850,
          1.865,
          851,
          1.05,
          852,
          1.05,
          853,
          3.047,
          854,
          1.05,
          855,
          1.05,
          856,
          3.047,
          857,
          1.05,
          858,
          3.047,
          859,
          1.05,
          860,
          1.05,
          861,
          2.516,
          862,
          2.516,
          863,
          1.865,
          864,
          1.05,
          865,
          1.865,
          866,
          1.05,
          867,
          1.05,
          868,
          1.05,
          869,
          1.05,
          870,
          1.05,
          871,
          1.05,
          872,
          1.05,
          873,
          1.05,
          874,
          1.05,
          875,
          1.05,
          876,
          1.613,
          877,
          1.05,
          878,
          1.05,
          879,
          1.05,
          880,
          1.05,
          881,
          1.05,
          882,
          1.05,
          883,
          1.865,
          884,
          1.865,
          885,
          3.49,
          886,
          1.05,
          887,
          1.05,
          888,
          1.05,
          889,
          1.05,
          890,
          1.05,
          891,
          1.05,
          892,
          1.865,
          893,
          1.05,
          894,
          1.05,
          895,
          1.05,
          896,
          1.05,
          897,
          1.865,
          898,
          1.05,
          899,
          1.865,
          900,
          1.05,
          901,
          1.05,
          902,
          1.05,
          903,
          1.865,
          904,
          1.05
        ]
      ],
      ['title/modules/NgxEditorjsPluginsModule.html', [118, 0.4, 634, 2.673]],
      [
        'body/modules/NgxEditorjsPluginsModule.html',
        [
          1,
          0.482,
          3,
          0.283,
          4,
          0.283,
          5,
          0.21,
          6,
          0.21,
          8,
          0.342,
          11,
          0.169,
          20,
          1.796,
          22,
          0.016,
          23,
          0.246,
          64,
          0.007,
          65,
          0.01,
          66,
          0.007,
          70,
          0.881,
          72,
          0.544,
          80,
          2.382,
          92,
          2.382,
          118,
          0.558,
          161,
          2.818,
          165,
          0.596,
          170,
          1.182,
          177,
          2.156,
          185,
          2.382,
          248,
          1.338,
          263,
          0.988,
          391,
          1.515,
          411,
          4.286,
          453,
          3.48,
          623,
          1.929,
          624,
          1.457,
          625,
          1.882,
          626,
          1.882,
          627,
          1.882,
          628,
          2.91,
          634,
          5.273,
          635,
          2.818,
          636,
          1.997,
          637,
          1.688,
          648,
          3.003,
          653,
          3.48,
          654,
          2.282,
          721,
          3.48,
          905,
          3.006,
          906,
          3.006,
          907,
          3.006,
          908,
          4.897,
          909,
          4.568,
          910,
          4.568,
          911,
          4.897,
          912,
          4.568,
          913,
          4.897,
          914,
          4.568,
          915,
          4.568,
          916,
          4.568,
          917,
          3.475,
          918,
          3.475,
          919,
          4.242,
          920,
          4.903,
          921,
          4.903,
          922,
          4.903,
          923,
          4.242,
          924,
          3.475,
          925,
          3.475,
          926,
          3.475,
          927,
          3.475,
          928,
          3.475,
          929,
          3.475,
          930,
          3.475,
          931,
          3.475,
          932,
          3.006,
          933,
          3.475,
          934,
          3.475,
          935,
          3.475,
          936,
          3.475,
          937,
          3.006,
          938,
          3.475
        ]
      ],
      ['title/modules/NgxEditorJSPluginServiceModule.html', [118, 0.4, 908, 2.673]],
      [
        'body/modules/NgxEditorJSPluginServiceModule.html',
        [
          3,
          0.432,
          4,
          0.432,
          5,
          0.321,
          6,
          0.321,
          11,
          0.145,
          22,
          0.016,
          23,
          0.375,
          37,
          1.178,
          64,
          0.011,
          65,
          0.013,
          66,
          0.011,
          70,
          0.848,
          72,
          0.831,
          118,
          0.522,
          120,
          2.179,
          123,
          2.179,
          128,
          2.718,
          165,
          0.91,
          248,
          1.448,
          263,
          1.99,
          391,
          2.003,
          392,
          2.333,
          623,
          1.573,
          624,
          2.225,
          625,
          2.874,
          626,
          2.874,
          627,
          2.874,
          628,
          2.718,
          635,
          3.725,
          636,
          3.05,
          637,
          2.578,
          669,
          4.59,
          671,
          4.59,
          675,
          3.694,
          677,
          4.59,
          908,
          4.993,
          939,
          4.59,
          940,
          4.59,
          941,
          5.306,
          942,
          3.511,
          943,
          3.05,
          944,
          5.306
        ]
      ],
      ['title/modules/NgxTinynodesComponentsModule.html', [118, 0.4, 945, 2.889]],
      [
        'body/modules/NgxTinynodesComponentsModule.html',
        [
          3,
          0.413,
          4,
          0.413,
          5,
          0.306,
          6,
          0.306,
          22,
          0.016,
          23,
          0.358,
          64,
          0.01,
          65,
          0.013,
          66,
          0.01,
          70,
          0.797,
          72,
          0.793,
          118,
          0.498,
          165,
          0.869,
          263,
          1.441,
          391,
          1.947,
          623,
          1.502,
          624,
          2.125,
          625,
          2.745,
          626,
          2.745,
          627,
          2.745,
          628,
          3.512,
          635,
          3.621,
          636,
          2.912,
          637,
          2.462,
          648,
          3.859,
          945,
          5.551,
          946,
          4.384,
          947,
          4.384,
          948,
          4.384,
          949,
          5.189,
          950,
          5.189,
          951,
          2.77,
          952,
          5.068,
          953,
          5.068,
          954,
          6.3,
          955,
          4.471,
          956,
          3.933,
          957,
          5.068,
          958,
          4.471,
          959,
          3.933,
          960,
          5.068
        ]
      ],
      ['title/interfaces/NgxTinynodesMatFieldComponent.html', [0, 0.076, 961, 3.521]],
      [
        'body/interfaces/NgxTinynodesMatFieldComponent.html',
        [
          0,
          0.107,
          2,
          1.218,
          3,
          0.466,
          4,
          0.466,
          5,
          0.346,
          6,
          0.346,
          22,
          0.016,
          23,
          0.405,
          39,
          2.28,
          64,
          0.012,
          65,
          0.014,
          66,
          0.012,
          70,
          0.841,
          72,
          0.896,
          215,
          5.265,
          220,
          5.265,
          224,
          5.868,
          228,
          4.814,
          229,
          5.868,
          233,
          3.758,
          951,
          2.517,
          961,
          5.868,
          962,
          5.723,
          963,
          6.254,
          964,
          4.062
        ]
      ],
      ['title/components/NgxTinynodesMatJsonOutputComponent.html', [223, 1.977, 965, 2.889]],
      [
        'body/components/NgxTinynodesMatJsonOutputComponent.html',
        [
          3,
          0.32,
          4,
          0.32,
          5,
          0.238,
          6,
          0.424,
          10,
          0.589,
          11,
          0.166,
          12,
          0.837,
          14,
          1.137,
          18,
          2.387,
          22,
          0.016,
          23,
          0.278,
          33,
          0.457,
          51,
          0.736,
          64,
          0.008,
          65,
          0.011,
          66,
          0.008,
          70,
          0.457,
          72,
          0.616,
          103,
          2.606,
          117,
          2.169,
          136,
          1.519,
          165,
          0.674,
          166,
          1.957,
          183,
          3.108,
          211,
          4.398,
          221,
          3.402,
          222,
          5.051,
          223,
          2.947,
          227,
          3.74,
          239,
          2.015,
          244,
          2.13,
          250,
          2.409,
          252,
          1.796,
          258,
          5.572,
          259,
          4.621,
          264,
          4.621,
          265,
          4.621,
          266,
          4.146,
          269,
          3.286,
          275,
          2.015,
          315,
          2.583,
          331,
          2.894,
          340,
          2.26,
          345,
          2.894,
          382,
          2.736,
          386,
          2.015,
          423,
          4.619,
          448,
          2.13,
          449,
          3.402,
          456,
          5.248,
          457,
          3.402,
          458,
          3.052,
          461,
          5.63,
          463,
          4.621,
          476,
          4.621,
          512,
          4.621,
          564,
          2.409,
          571,
          3.402,
          625,
          2.13,
          951,
          3.293,
          955,
          2.791,
          958,
          5.646,
          959,
          5.447,
          965,
          4.619,
          966,
          3.402,
          967,
          3.933,
          968,
          4.981,
          969,
          3.933,
          970,
          5.342,
          971,
          6.508,
          972,
          7.18,
          973,
          3.933,
          974,
          5.342,
          975,
          3.933,
          976,
          3.933,
          977,
          3.933,
          978,
          3.933,
          979,
          5.342,
          980,
          5.342,
          981,
          6.508,
          982,
          3.933,
          983,
          3.933,
          984,
          3.933,
          985,
          3.933,
          986,
          2.791,
          987,
          3.933
        ]
      ],
      ['title/modules/NgxTinynodesMatJsonOutputModule.html', [118, 0.4, 949, 2.673]],
      [
        'body/modules/NgxTinynodesMatJsonOutputModule.html',
        [
          3,
          0.414,
          4,
          0.414,
          5,
          0.308,
          6,
          0.308,
          22,
          0.016,
          23,
          0.36,
          64,
          0.01,
          65,
          0.013,
          66,
          0.01,
          70,
          0.859,
          72,
          0.797,
          117,
          1.572,
          118,
          0.5,
          165,
          0.872,
          211,
          3.117,
          263,
          1.447,
          391,
          1.952,
          623,
          1.508,
          624,
          2.134,
          625,
          2.756,
          626,
          3.72,
          627,
          2.756,
          628,
          3.518,
          635,
          3.63,
          636,
          2.924,
          637,
          2.472,
          648,
          3.117,
          653,
          4.483,
          654,
          3.341,
          949,
          5.011,
          951,
          2.237,
          958,
          5.098,
          959,
          3.949,
          964,
          3.611,
          965,
          5.611,
          968,
          3.611,
          988,
          4.402,
          989,
          4.402,
          990,
          4.402,
          991,
          5.088,
          992,
          5.088,
          993,
          6.316,
          994,
          6.316,
          995,
          6.316,
          996,
          4.402
        ]
      ],
      ['title/modules/NgxTinynodesMatTagInputModule.html', [118, 0.4, 950, 2.673]],
      [
        'body/modules/NgxTinynodesMatTagInputModule.html',
        [
          3,
          0.406,
          4,
          0.406,
          5,
          0.302,
          6,
          0.302,
          22,
          0.016,
          23,
          0.353,
          64,
          0.01,
          65,
          0.013,
          66,
          0.01,
          70,
          0.854,
          72,
          0.78,
          118,
          0.49,
          165,
          0.855,
          211,
          3.054,
          233,
          3.274,
          263,
          1.418,
          391,
          1.927,
          623,
          1.478,
          624,
          2.091,
          625,
          2.701,
          626,
          3.686,
          627,
          2.701,
          628,
          3.486,
          635,
          3.584,
          636,
          2.865,
          637,
          2.422,
          648,
          3.054,
          653,
          3.539,
          654,
          3.274,
          656,
          4.313,
          950,
          4.989,
          951,
          2.192,
          955,
          4.83,
          956,
          3.87,
          964,
          3.539,
          968,
          3.539,
          986,
          5.671,
          997,
          4.313,
          998,
          4.313,
          999,
          4.313,
          1000,
          4.313,
          1001,
          5.282,
          1002,
          5.282,
          1003,
          4.986,
          1004,
          4.986,
          1005,
          6.237,
          1006,
          6.237,
          1007,
          4.986
        ]
      ],
      ['title/interfaces/Paragraph.html', [0, 0.076, 40, 1.368]],
      [
        'body/interfaces/Paragraph.html',
        [
          0,
          0.141,
          1,
          0.77,
          2,
          0.747,
          3,
          0.286,
          4,
          0.286,
          5,
          0.212,
          6,
          0.212,
          7,
          1.705,
          8,
          0.345,
          10,
          0.866,
          11,
          0.186,
          12,
          0.747,
          13,
          1.559,
          14,
          1.481,
          16,
          0.657,
          17,
          1.255,
          20,
          1.286,
          21,
          2.187,
          22,
          0.017,
          23,
          0.511,
          24,
          1.231,
          25,
          2.603,
          26,
          1.705,
          27,
          1.621,
          28,
          2.399,
          29,
          2.399,
          30,
          1.286,
          31,
          1.286,
          32,
          2.399,
          33,
          0.788,
          34,
          2.529,
          35,
          2.529,
          36,
          1.131,
          37,
          0.779,
          38,
          2.28,
          39,
          2.083,
          40,
          2.388,
          41,
          3.281,
          42,
          2.28,
          43,
          2.665,
          44,
          2.28,
          45,
          1.705,
          46,
          1.705,
          47,
          1.18,
          48,
          2.28,
          49,
          2.872,
          50,
          2.529,
          51,
          1.16,
          52,
          2.529,
          53,
          1.798,
          54,
          1.693,
          55,
          1.798,
          56,
          1.92,
          57,
          1.798,
          58,
          1.798,
          59,
          1.798,
          60,
          1.798,
          61,
          2.28,
          62,
          1.705,
          63,
          1.705,
          64,
          0.007,
          65,
          0.01,
          66,
          0.007
        ]
      ],
      ['title/interfaces/ParagraphBlock.html', [0, 0.076, 42, 1.88]],
      [
        'body/interfaces/ParagraphBlock.html',
        [
          0,
          0.142,
          1,
          0.774,
          2,
          0.75,
          3,
          0.287,
          4,
          0.287,
          5,
          0.213,
          6,
          0.213,
          7,
          1.712,
          8,
          0.346,
          10,
          0.87,
          11,
          0.191,
          12,
          0.75,
          13,
          1.562,
          14,
          1.444,
          16,
          0.66,
          17,
          1.22,
          20,
          1.291,
          21,
          2.192,
          22,
          0.017,
          23,
          0.511,
          24,
          1.236,
          25,
          2.606,
          26,
          1.712,
          27,
          1.627,
          28,
          2.406,
          29,
          2.406,
          30,
          1.291,
          31,
          1.291,
          32,
          2.406,
          33,
          0.761,
          34,
          2.537,
          35,
          2.537,
          36,
          1.136,
          37,
          0.782,
          38,
          2.287,
          39,
          2.199,
          40,
          2.28,
          41,
          2.868,
          42,
          2.644,
          43,
          2.668,
          44,
          2.287,
          45,
          1.712,
          46,
          1.712,
          47,
          1.185,
          48,
          2.287,
          49,
          2.877,
          50,
          2.537,
          51,
          1.163,
          52,
          2.537,
          53,
          1.805,
          54,
          1.697,
          55,
          1.805,
          56,
          1.924,
          57,
          1.805,
          58,
          1.805,
          59,
          1.805,
          60,
          1.805,
          61,
          2.287,
          62,
          1.712,
          63,
          1.712,
          64,
          0.007,
          65,
          0.01,
          66,
          0.007
        ]
      ],
      ['title/modules/PluginCodeModule.html', [118, 0.4, 909, 2.493]],
      [
        'body/modules/PluginCodeModule.html',
        [
          1,
          0.623,
          3,
          0.417,
          4,
          0.417,
          5,
          0.31,
          6,
          0.31,
          8,
          0.503,
          10,
          0.564,
          11,
          0.197,
          16,
          0.958,
          22,
          0.016,
          23,
          0.362,
          33,
          0.737,
          64,
          0.01,
          65,
          0.013,
          66,
          0.01,
          70,
          0.837,
          72,
          0.801,
          82,
          1.876,
          85,
          2.05,
          88,
          2.224,
          104,
          1.96,
          118,
          0.623,
          120,
          2.131,
          123,
          2.131,
          128,
          2.147,
          165,
          0.878,
          170,
          1.529,
          203,
          1.959,
          248,
          1.73,
          251,
          2.428,
          252,
          2.131,
          263,
          1.456,
          391,
          1.959,
          392,
          2.251,
          405,
          2.539,
          406,
          2.659,
          407,
          2.487,
          409,
          2.428,
          410,
          2.788,
          623,
          1.518,
          909,
          3.884,
          942,
          2.773,
          943,
          2.942,
          1008,
          5.12,
          1009,
          2.487,
          1010,
          5.587,
          1011,
          5.12,
          1012,
          5.12
        ]
      ],
      ['title/interfaces/PluginConfig.html', [0, 0.076, 97, 2.339]],
      [
        'body/interfaces/PluginConfig.html',
        [
          0,
          0.117,
          1,
          0.691,
          2,
          0.668,
          3,
          0.256,
          4,
          0.256,
          5,
          0.19,
          6,
          0.19,
          8,
          0.662,
          10,
          0.847,
          11,
          0.185,
          12,
          0.668,
          13,
          1.244,
          14,
          1.332,
          16,
          1.355,
          17,
          1.073,
          18,
          1.102,
          22,
          0.016,
          23,
          0.512,
          30,
          1.967,
          33,
          0.53,
          37,
          1.754,
          51,
          1.413,
          54,
          1.352,
          64,
          0.006,
          65,
          0.009,
          66,
          0.006,
          67,
          4.227,
          68,
          1.805,
          70,
          0.53,
          71,
          1.45,
          72,
          0.492,
          73,
          2.995,
          74,
          2.995,
          75,
          0.931,
          76,
          2.621,
          77,
          1.73,
          78,
          2.621,
          79,
          1.701,
          80,
          2.863,
          81,
          2.229,
          82,
          1.15,
          83,
          1.317,
          84,
          2.062,
          85,
          1.258,
          86,
          1.805,
          87,
          4.955,
          88,
          1.6,
          89,
          3.526,
          90,
          3.833,
          91,
          1.527,
          92,
          1.525,
          93,
          1.923,
          94,
          2.062,
          95,
          1.78,
          96,
          2.336,
          97,
          3.086,
          98,
          3.236,
          99,
          2.47,
          100,
          1.826,
          101,
          2.995,
          102,
          3.236,
          103,
          1.826,
          104,
          2.256,
          105,
          3.536,
          106,
          1.805,
          107,
          2.229,
          108,
          1.912,
          109,
          2.468,
          110,
          2.721,
          111,
          2.793,
          112,
          1.533,
          113,
          3.526,
          114,
          2.151,
          115,
          2.361,
          116,
          1.45,
          117,
          0.97,
          118,
          0.309,
          119,
          1.967,
          120,
          1.055,
          121,
          1.592,
          122,
          2.062,
          123,
          1.055,
          124,
          2.062,
          125,
          2.229,
          126,
          1.923,
          127,
          2.229,
          128,
          1.317,
          129,
          2.062
        ]
      ],
      ['title/interfaces/PluginConfigMap.html', [0, 0.076, 126, 2.493]],
      [
        'body/interfaces/PluginConfigMap.html',
        [
          0,
          0.122,
          1,
          0.687,
          2,
          0.756,
          3,
          0.289,
          4,
          0.289,
          5,
          0.215,
          6,
          0.301,
          8,
          0.565,
          10,
          0.77,
          11,
          0.191,
          14,
          1.224,
          15,
          1.925,
          16,
          1.356,
          17,
          1.166,
          18,
          1.748,
          22,
          0.017,
          23,
          0.525,
          30,
          1.825,
          33,
          0.413,
          37,
          1.741,
          51,
          1.167,
          54,
          1.477,
          64,
          0.007,
          65,
          0.01,
          66,
          0.007,
          67,
          3.523,
          68,
          2.043,
          70,
          0.58,
          71,
          1.641,
          72,
          0.556,
          73,
          3.272,
          74,
          3.272,
          75,
          1.054,
          76,
          2.863,
          77,
          1.853,
          78,
          2.863,
          79,
          1.925,
          80,
          3.028,
          81,
          2.523,
          82,
          1.302,
          83,
          1.491,
          84,
          2.334,
          85,
          1.424,
          86,
          2.043,
          87,
          4.468,
          88,
          1.748,
          89,
          3.777,
          90,
          3.523,
          91,
          1.773,
          92,
          1.727,
          93,
          2.177,
          94,
          2.334,
          95,
          1.636,
          96,
          1.821,
          97,
          3.306,
          98,
          2.523,
          99,
          1.925,
          100,
          1.424,
          101,
          2.334,
          102,
          2.523,
          103,
          1.424,
          104,
          1.361,
          105,
          2.699,
          106,
          2.043,
          107,
          2.523,
          108,
          1.491,
          109,
          2.405,
          110,
          2.301,
          111,
          2.177,
          112,
          1.195,
          113,
          2.334,
          114,
          2.304,
          115,
          2.529,
          116,
          1.641,
          117,
          1.098,
          118,
          0.349,
          119,
          2.107,
          120,
          1.195,
          121,
          1.705,
          122,
          2.334,
          123,
          1.195,
          124,
          2.334,
          125,
          3.536,
          126,
          3.052,
          127,
          3.536,
          128,
          1.491,
          129,
          2.334,
          1013,
          3.555
        ]
      ],
      ['title/modules/PluginHeaderModule.html', [118, 0.4, 411, 2.339]],
      [
        'body/modules/PluginHeaderModule.html',
        [
          1,
          0.583,
          3,
          0.375,
          4,
          0.375,
          5,
          0.279,
          6,
          0.279,
          8,
          0.453,
          10,
          0.507,
          11,
          0.19,
          14,
          1.474,
          16,
          0.862,
          22,
          0.016,
          23,
          0.42,
          33,
          0.69,
          37,
          1.022,
          39,
          1.548,
          43,
          2.925,
          64,
          0.009,
          65,
          0.012,
          66,
          0.009,
          70,
          0.763,
          72,
          0.721,
          82,
          1.687,
          85,
          1.845,
          88,
          2.08,
          104,
          1.763,
          118,
          0.583,
          119,
          1.687,
          120,
          1.993,
          121,
          1.365,
          123,
          1.993,
          165,
          1.017,
          166,
          1.687,
          168,
          1.932,
          170,
          1.43,
          174,
          2.025,
          203,
          1.832,
          227,
          2.647,
          248,
          1.618,
          251,
          2.271,
          252,
          1.993,
          263,
          1.31,
          276,
          2.495,
          278,
          2.495,
          379,
          4.603,
          381,
          3.984,
          384,
          3.984,
          387,
          3.984,
          389,
          4.209,
          390,
          3.984,
          391,
          1.832,
          392,
          2.025,
          393,
          3.575,
          394,
          3.269,
          395,
          3.575,
          396,
          2.821,
          397,
          3.984,
          398,
          5.13,
          399,
          3.984,
          400,
          3.984,
          401,
          3.984,
          402,
          3.984,
          403,
          3.575,
          404,
          3.984,
          405,
          2.375,
          406,
          2.487,
          407,
          2.237,
          408,
          3.984,
          409,
          2.271,
          410,
          2.608,
          411,
          3.408,
          623,
          1.365,
          1009,
          2.237
        ]
      ],
      ['title/modules/PluginImageModule.html', [118, 0.4, 910, 2.493]],
      [
        'body/modules/PluginImageModule.html',
        [
          1,
          0.623,
          3,
          0.417,
          4,
          0.417,
          5,
          0.31,
          6,
          0.31,
          8,
          0.503,
          10,
          0.564,
          11,
          0.197,
          16,
          0.958,
          22,
          0.016,
          23,
          0.362,
          33,
          0.737,
          49,
          3.165,
          64,
          0.01,
          65,
          0.013,
          66,
          0.01,
          70,
          0.837,
          72,
          0.801,
          82,
          1.876,
          85,
          2.05,
          88,
          2.224,
          104,
          1.96,
          118,
          0.623,
          120,
          2.131,
          123,
          2.131,
          128,
          2.147,
          165,
          0.878,
          170,
          1.529,
          203,
          1.959,
          248,
          1.73,
          251,
          2.428,
          252,
          2.131,
          263,
          1.456,
          391,
          1.959,
          392,
          2.251,
          405,
          2.539,
          406,
          2.659,
          407,
          2.487,
          409,
          2.428,
          410,
          2.788,
          623,
          1.518,
          910,
          3.884,
          942,
          2.773,
          943,
          2.942,
          1009,
          2.487,
          1014,
          5.12,
          1015,
          5.12,
          1016,
          3.634
        ]
      ],
      ['title/modules/PluginInlineCodeModule.html', [118, 0.4, 911, 2.673]],
      [
        'body/modules/PluginInlineCodeModule.html',
        [
          1,
          0.622,
          3,
          0.415,
          4,
          0.415,
          5,
          0.308,
          6,
          0.308,
          8,
          0.501,
          10,
          0.562,
          11,
          0.197,
          16,
          0.955,
          22,
          0.016,
          23,
          0.361,
          33,
          0.736,
          64,
          0.01,
          65,
          0.013,
          66,
          0.01,
          70,
          0.8,
          72,
          0.798,
          80,
          3.072,
          82,
          1.868,
          86,
          2.93,
          88,
          2.219,
          104,
          1.952,
          105,
          2.762,
          118,
          0.622,
          120,
          2.126,
          123,
          2.126,
          165,
          0.874,
          170,
          1.525,
          203,
          1.954,
          248,
          1.726,
          251,
          2.421,
          252,
          2.126,
          263,
          1.45,
          391,
          1.954,
          392,
          2.242,
          405,
          2.533,
          406,
          2.652,
          407,
          2.477,
          409,
          2.421,
          410,
          2.781,
          623,
          1.511,
          911,
          4.153,
          937,
          4.411,
          1009,
          2.477,
          1010,
          5.336,
          1017,
          5.099,
          1018,
          5.099,
          1019,
          6.324,
          1020,
          5.099,
          1021,
          3.957,
          1022,
          5.099
        ]
      ],
      ['title/modules/PluginLinkModule.html', [118, 0.4, 912, 2.493]],
      [
        'body/modules/PluginLinkModule.html',
        [
          1,
          0.623,
          3,
          0.417,
          4,
          0.417,
          5,
          0.31,
          6,
          0.31,
          8,
          0.503,
          10,
          0.564,
          11,
          0.197,
          16,
          0.958,
          22,
          0.016,
          23,
          0.362,
          33,
          0.737,
          64,
          0.01,
          65,
          0.013,
          66,
          0.01,
          70,
          0.837,
          72,
          0.801,
          82,
          1.876,
          85,
          2.05,
          88,
          2.224,
          104,
          1.96,
          106,
          4.137,
          118,
          0.623,
          120,
          2.131,
          123,
          2.131,
          128,
          2.147,
          165,
          0.878,
          170,
          1.529,
          203,
          1.959,
          248,
          1.73,
          251,
          2.428,
          252,
          2.131,
          263,
          1.456,
          391,
          1.959,
          392,
          2.251,
          405,
          2.539,
          406,
          2.659,
          407,
          2.487,
          409,
          2.428,
          410,
          2.788,
          623,
          1.518,
          912,
          3.884,
          942,
          2.773,
          943,
          2.942,
          1009,
          2.487,
          1016,
          3.634,
          1023,
          5.12,
          1024,
          5.12
        ]
      ],
      ['title/modules/PluginListModule.html', [118, 0.4, 913, 2.673]],
      [
        'body/modules/PluginListModule.html',
        [
          1,
          0.623,
          3,
          0.417,
          4,
          0.417,
          5,
          0.31,
          6,
          0.31,
          8,
          0.503,
          10,
          0.564,
          11,
          0.197,
          16,
          0.958,
          22,
          0.016,
          23,
          0.362,
          25,
          2.637,
          33,
          0.737,
          64,
          0.01,
          65,
          0.013,
          66,
          0.01,
          70,
          0.837,
          72,
          0.801,
          82,
          1.876,
          85,
          2.05,
          88,
          2.224,
          104,
          1.96,
          118,
          0.623,
          120,
          2.131,
          123,
          2.131,
          128,
          2.147,
          165,
          0.878,
          170,
          1.529,
          203,
          1.959,
          248,
          1.73,
          251,
          2.428,
          252,
          2.131,
          263,
          1.456,
          391,
          1.959,
          392,
          2.251,
          405,
          2.539,
          406,
          2.659,
          407,
          2.487,
          409,
          2.428,
          410,
          2.788,
          623,
          1.518,
          913,
          4.164,
          942,
          2.773,
          943,
          2.942,
          1009,
          2.487,
          1016,
          3.634,
          1025,
          5.12,
          1026,
          5.12
        ]
      ],
      ['title/modules/PluginMarkerModule.html', [118, 0.4, 914, 2.493]],
      [
        'body/modules/PluginMarkerModule.html',
        [
          1,
          0.622,
          3,
          0.415,
          4,
          0.415,
          5,
          0.308,
          6,
          0.308,
          8,
          0.501,
          10,
          0.562,
          11,
          0.197,
          16,
          0.955,
          22,
          0.016,
          23,
          0.361,
          33,
          0.736,
          40,
          1.714,
          64,
          0.01,
          65,
          0.013,
          66,
          0.01,
          70,
          0.836,
          72,
          0.798,
          82,
          1.868,
          86,
          2.93,
          88,
          2.219,
          104,
          1.952,
          105,
          2.762,
          118,
          0.622,
          120,
          2.126,
          123,
          2.126,
          128,
          2.138,
          165,
          0.874,
          170,
          1.525,
          203,
          1.954,
          248,
          1.726,
          251,
          2.421,
          252,
          2.126,
          263,
          1.45,
          391,
          1.954,
          392,
          2.242,
          405,
          2.533,
          406,
          2.652,
          407,
          2.477,
          409,
          2.421,
          410,
          2.781,
          623,
          1.511,
          914,
          3.874,
          942,
          2.762,
          943,
          2.93,
          1009,
          2.477,
          1021,
          3.957,
          1027,
          5.099,
          1028,
          6.875,
          1029,
          3.619,
          1030,
          5.099
        ]
      ],
      ['title/modules/PluginParagraphModule.html', [118, 0.4, 915, 2.493]],
      [
        'body/modules/PluginParagraphModule.html',
        [
          1,
          0.628,
          3,
          0.422,
          4,
          0.422,
          5,
          0.314,
          6,
          0.314,
          8,
          0.51,
          10,
          0.571,
          11,
          0.198,
          16,
          0.971,
          22,
          0.016,
          23,
          0.367,
          33,
          0.743,
          40,
          2.43,
          64,
          0.01,
          65,
          0.013,
          66,
          0.01,
          70,
          0.806,
          72,
          0.812,
          82,
          1.899,
          85,
          2.076,
          88,
          2.241,
          104,
          1.985,
          118,
          0.628,
          120,
          2.148,
          123,
          2.148,
          165,
          0.889,
          170,
          1.541,
          203,
          1.974,
          248,
          1.744,
          251,
          2.446,
          252,
          2.148,
          263,
          1.474,
          391,
          1.974,
          392,
          2.28,
          405,
          2.559,
          406,
          2.68,
          407,
          2.518,
          409,
          2.446,
          410,
          2.81,
          623,
          1.537,
          915,
          3.914,
          1009,
          2.518,
          1021,
          4.024,
          1029,
          3.679,
          1031,
          5.184
        ]
      ],
      ['title/modules/PluginSimpleImageModule.html', [118, 0.4, 916, 2.493]],
      [
        'body/modules/PluginSimpleImageModule.html',
        [
          1,
          0.62,
          3,
          0.413,
          4,
          0.413,
          5,
          0.307,
          6,
          0.307,
          8,
          0.499,
          10,
          0.559,
          11,
          0.197,
          16,
          0.951,
          22,
          0.016,
          23,
          0.359,
          33,
          0.734,
          49,
          2.774,
          64,
          0.01,
          65,
          0.013,
          66,
          0.01,
          70,
          0.835,
          72,
          0.795,
          82,
          1.86,
          85,
          2.034,
          88,
          2.213,
          104,
          1.944,
          118,
          0.62,
          120,
          2.12,
          123,
          2.12,
          128,
          2.13,
          165,
          0.87,
          170,
          1.521,
          203,
          1.949,
          248,
          1.721,
          251,
          2.415,
          252,
          2.12,
          263,
          1.444,
          391,
          1.949,
          392,
          2.233,
          405,
          2.526,
          406,
          2.645,
          407,
          2.467,
          409,
          2.415,
          410,
          2.774,
          623,
          1.505,
          916,
          3.864,
          932,
          4.393,
          942,
          2.75,
          943,
          2.918,
          1009,
          2.467,
          1016,
          3.604,
          1032,
          5.078,
          1033,
          5.078,
          1034,
          6.862,
          1035,
          5.078,
          1036,
          4.393
        ]
      ],
      ['title/interfaces/ReadyMap.html', [0, 0.076, 146, 2.339]],
      [
        'body/interfaces/ReadyMap.html',
        [
          0,
          0.132,
          1,
          0.57,
          2,
          0.947,
          3,
          0.362,
          4,
          0.362,
          5,
          0.269,
          6,
          0.351,
          8,
          0.437,
          11,
          0.199,
          15,
          2.41,
          16,
          1.434,
          17,
          1.215,
          18,
          1.561,
          22,
          0.016,
          23,
          0.502,
          47,
          1.495,
          64,
          0.009,
          65,
          0.012,
          66,
          0.009,
          70,
          0.75,
          75,
          1.319,
          91,
          2.178,
          130,
          2.557,
          131,
          2.921,
          132,
          5.029,
          133,
          4.537,
          134,
          2.279,
          135,
          2.432,
          136,
          1.265,
          138,
          1.703,
          139,
          2.279,
          140,
          2.47,
          141,
          1.956,
          142,
          2.557,
          143,
          2.584,
          144,
          2.55,
          145,
          3.305,
          146,
          3.333,
          147,
          2.557,
          148,
          2.363,
          149,
          2.41,
          150,
          2.725,
          151,
          2.322,
          1037,
          4.449
        ]
      ],
      ['title/interfaces/SavedMap.html', [0, 0.076, 147, 2.339]],
      [
        'body/interfaces/SavedMap.html',
        [
          0,
          0.132,
          1,
          0.57,
          2,
          0.947,
          3,
          0.362,
          4,
          0.362,
          5,
          0.269,
          6,
          0.351,
          8,
          0.437,
          11,
          0.199,
          15,
          2.41,
          16,
          1.434,
          17,
          1.215,
          18,
          1.561,
          22,
          0.016,
          23,
          0.502,
          47,
          1.495,
          64,
          0.009,
          65,
          0.012,
          66,
          0.009,
          70,
          0.75,
          75,
          1.319,
          91,
          2.178,
          130,
          2.557,
          131,
          2.921,
          132,
          5.029,
          133,
          4.537,
          134,
          2.279,
          135,
          2.706,
          136,
          1.265,
          138,
          1.703,
          139,
          2.279,
          140,
          2.47,
          141,
          1.956,
          142,
          2.557,
          143,
          2.584,
          144,
          1.956,
          145,
          3.305,
          146,
          2.557,
          147,
          3.333,
          148,
          2.363,
          149,
          2.41,
          150,
          2.725,
          151,
          2.322,
          1038,
          4.449
        ]
      ],
      ['title/interfaces/ToolSettingsMap.html', [0, 0.076, 93, 2.493]],
      [
        'body/interfaces/ToolSettingsMap.html',
        [
          0,
          0.122,
          1,
          0.686,
          2,
          0.754,
          3,
          0.289,
          4,
          0.289,
          5,
          0.214,
          6,
          0.301,
          8,
          0.565,
          10,
          0.769,
          11,
          0.191,
          14,
          1.222,
          15,
          1.92,
          16,
          1.355,
          17,
          1.165,
          18,
          1.744,
          22,
          0.017,
          23,
          0.525,
          30,
          1.822,
          33,
          0.412,
          37,
          1.741,
          51,
          1.166,
          54,
          1.474,
          64,
          0.007,
          65,
          0.01,
          66,
          0.007,
          67,
          3.518,
          68,
          2.037,
          70,
          0.578,
          71,
          1.637,
          72,
          0.555,
          73,
          3.265,
          74,
          3.265,
          75,
          1.051,
          76,
          2.858,
          77,
          1.85,
          78,
          2.858,
          79,
          1.92,
          80,
          3.025,
          81,
          2.516,
          82,
          1.299,
          83,
          1.487,
          84,
          2.328,
          85,
          1.42,
          86,
          2.037,
          87,
          4.464,
          88,
          2.015,
          89,
          4.306,
          90,
          3.814,
          91,
          1.771,
          92,
          2.415,
          93,
          3.046,
          94,
          3.265,
          95,
          1.633,
          96,
          1.816,
          97,
          2.858,
          98,
          2.516,
          99,
          1.92,
          100,
          1.42,
          101,
          2.328,
          102,
          2.516,
          103,
          1.42,
          104,
          1.357,
          105,
          2.693,
          106,
          2.037,
          107,
          2.516,
          108,
          1.487,
          109,
          2.281,
          110,
          2.296,
          111,
          2.171,
          112,
          1.191,
          113,
          2.328,
          114,
          2.3,
          115,
          2.525,
          116,
          1.637,
          117,
          1.095,
          118,
          0.348,
          119,
          2.104,
          120,
          1.191,
          121,
          1.702,
          122,
          2.328,
          123,
          1.191,
          124,
          2.328,
          125,
          2.516,
          126,
          2.171,
          127,
          2.516,
          128,
          1.487,
          129,
          2.328,
          1039,
          3.545
        ]
      ],
      ['title/changelog.html', [1040, 2.109, 1041, 2.261, 1042, 1.764]],
      [
        'body/changelog.html',
        [
          0,
          0.074,
          1,
          0.39,
          11,
          0.187,
          22,
          0.011,
          31,
          1.97,
          33,
          0.462,
          36,
          1.279,
          37,
          1.193,
          44,
          1.834,
          64,
          0.008,
          65,
          0.011,
          66,
          0.008,
          77,
          2.319,
          79,
          2.151,
          88,
          1.393,
          91,
          1.129,
          95,
          1.129,
          118,
          0.599,
          121,
          2.086,
          136,
          1.529,
          141,
          1.746,
          148,
          1.97,
          155,
          1.665,
          168,
          1.665,
          170,
          1.47,
          195,
          2.151,
          203,
          1.227,
          223,
          3.317,
          235,
          2.282,
          246,
          3.734,
          248,
          1.084,
          251,
          1.52,
          257,
          2.432,
          263,
          1.129,
          271,
          2.432,
          312,
          3.531,
          331,
          2.151,
          348,
          2.612,
          363,
          2.608,
          380,
          3.435,
          382,
          2.034,
          391,
          1.227,
          405,
          1.59,
          421,
          2.818,
          422,
          2.151,
          441,
          2.818,
          445,
          3.294,
          452,
          3.435,
          472,
          1.834,
          483,
          3.531,
          487,
          3.082,
          528,
          2.818,
          537,
          4.732,
          538,
          3.435,
          544,
          2.282,
          562,
          2.608,
          591,
          4.651,
          628,
          2.034,
          640,
          4.045,
          645,
          2.912,
          675,
          1.929,
          679,
          3.082,
          680,
          3.09,
          721,
          2.818,
          753,
          2.432,
          772,
          4.651,
          776,
          3.082,
          796,
          3.435,
          823,
          3.435,
          951,
          1.746,
          1040,
          2.432,
          1042,
          2.754,
          1043,
          3.971,
          1044,
          4.732,
          1045,
          2.818,
          1046,
          3.971,
          1047,
          2.818,
          1048,
          3.971,
          1049,
          2.608,
          1050,
          2.608,
          1051,
          3.435,
          1052,
          6.534,
          1053,
          3.971,
          1054,
          5.906,
          1055,
          4.651,
          1056,
          3.971,
          1057,
          3.435,
          1058,
          3.971,
          1059,
          3.971,
          1060,
          3.971,
          1061,
          5.071,
          1062,
          2.818,
          1063,
          3.09,
          1064,
          5.377,
          1065,
          3.971,
          1066,
          5.377,
          1067,
          4.622,
          1068,
          3.971,
          1069,
          4.651,
          1070,
          5.377,
          1071,
          3.971,
          1072,
          4.637,
          1073,
          3.971,
          1074,
          3.435,
          1075,
          3.971,
          1076,
          4.651,
          1077,
          3.971,
          1078,
          3.971,
          1079,
          3.435,
          1080,
          3.971,
          1081,
          4.732,
          1082,
          3.971,
          1083,
          3.435,
          1084,
          4.651,
          1085,
          3.971,
          1086,
          3.082,
          1087,
          3.971,
          1088,
          3.971,
          1089,
          3.082,
          1090,
          3.971,
          1091,
          5.377,
          1092,
          3.971,
          1093,
          3.971,
          1094,
          3.971,
          1095,
          2.432,
          1096,
          3.971,
          1097,
          3.971,
          1098,
          3.971,
          1099,
          3.971,
          1100,
          2.818,
          1101,
          3.082,
          1102,
          3.971,
          1103,
          3.971,
          1104,
          3.971,
          1105,
          5.377,
          1106,
          5.377,
          1107,
          3.971,
          1108,
          4.651,
          1109,
          3.435,
          1110,
          3.082,
          1111,
          3.971,
          1112,
          3.971,
          1113,
          3.971,
          1114,
          3.971,
          1115,
          3.971,
          1116,
          3.971,
          1117,
          3.971,
          1118,
          3.971,
          1119,
          3.971,
          1120,
          3.971,
          1121,
          3.971,
          1122,
          3.971,
          1123,
          3.971,
          1124,
          3.435,
          1125,
          2.818,
          1126,
          3.435
        ]
      ],
      ['title/contributing.html', [1040, 2.109, 1041, 2.261, 1127, 2.978]],
      [
        'body/contributing.html',
        [
          0,
          0.063,
          5,
          0.204,
          18,
          1.186,
          22,
          0.01,
          24,
          1.186,
          44,
          1.561,
          64,
          0.01,
          65,
          0.01,
          66,
          0.007,
          83,
          2.016,
          100,
          1.926,
          121,
          1.425,
          141,
          2.114,
          148,
          1.761,
          149,
          1.831,
          161,
          3.216,
          168,
          2.347,
          173,
          1.731,
          175,
          1.943,
          179,
          1.294,
          206,
          2.763,
          269,
          2.604,
          283,
          2.763,
          335,
          2.623,
          386,
          1.731,
          395,
          2.623,
          396,
          2.07,
          409,
          1.841,
          422,
          1.831,
          496,
          4.159,
          534,
          2.623,
          540,
          2.924,
          544,
          1.943,
          624,
          1.418,
          680,
          2.763,
          719,
          2.924,
          725,
          2.22,
          726,
          2.924,
          742,
          2.623,
          744,
          2.924,
          747,
          2.924,
          776,
          2.623,
          777,
          2.924,
          783,
          2.623,
          801,
          2.623,
          876,
          5.273,
          923,
          2.924,
          1010,
          5.344,
          1063,
          4.301,
          1089,
          2.623,
          1100,
          2.399,
          1108,
          4.159,
          1109,
          2.924,
          1124,
          4.159,
          1126,
          2.924,
          1127,
          4.159,
          1128,
          4.159,
          1129,
          4.343,
          1130,
          3.38,
          1131,
          3.38,
          1132,
          2.623,
          1133,
          3.38,
          1134,
          3.38,
          1135,
          2.623,
          1136,
          6.886,
          1137,
          4.808,
          1138,
          3.38,
          1139,
          5.596,
          1140,
          2.399,
          1141,
          3.38,
          1142,
          3.38,
          1143,
          3.732,
          1144,
          2.924,
          1145,
          5.596,
          1146,
          2.623,
          1147,
          3.38,
          1148,
          3.38,
          1149,
          3.38,
          1150,
          3.38,
          1151,
          3.38,
          1152,
          6.096,
          1153,
          2.623,
          1154,
          3.38,
          1155,
          2.623,
          1156,
          3.38,
          1157,
          3.38,
          1158,
          4.159,
          1159,
          3.38,
          1160,
          3.38,
          1161,
          4.159,
          1162,
          3.38,
          1163,
          4.808,
          1164,
          3.38,
          1165,
          3.38,
          1166,
          3.38,
          1167,
          4.808,
          1168,
          3.38,
          1169,
          6.441,
          1170,
          3.38,
          1171,
          6.441,
          1172,
          4.808,
          1173,
          2.924,
          1174,
          4.808,
          1175,
          3.38,
          1176,
          3.38,
          1177,
          3.38,
          1178,
          3.38,
          1179,
          3.38,
          1180,
          3.38,
          1181,
          3.38,
          1182,
          3.38,
          1183,
          4.808,
          1184,
          3.38,
          1185,
          3.38,
          1186,
          4.808,
          1187,
          3.38,
          1188,
          3.38,
          1189,
          3.38,
          1190,
          4.808,
          1191,
          3.38,
          1192,
          4.808,
          1193,
          6.441,
          1194,
          3.38,
          1195,
          3.38,
          1196,
          3.38,
          1197,
          4.808,
          1198,
          3.38,
          1199,
          3.38,
          1200,
          3.38,
          1201,
          3.38,
          1202,
          3.38,
          1203,
          3.38,
          1204,
          3.38,
          1205,
          3.38,
          1206,
          3.38,
          1207,
          3.38,
          1208,
          2.924,
          1209,
          3.38,
          1210,
          3.38,
          1211,
          3.38,
          1212,
          4.808,
          1213,
          5.596,
          1214,
          3.38,
          1215,
          3.38,
          1216,
          3.38,
          1217,
          3.38,
          1218,
          3.38,
          1219,
          3.38,
          1220,
          3.38,
          1221,
          3.38,
          1222,
          4.808,
          1223,
          3.38,
          1224,
          3.38,
          1225,
          2.924,
          1226,
          3.38,
          1227,
          3.38,
          1228,
          3.38,
          1229,
          4.808,
          1230,
          3.38,
          1231,
          3.38,
          1232,
          3.38,
          1233,
          4.808,
          1234,
          3.38,
          1235,
          2.924,
          1236,
          3.38,
          1237,
          3.38,
          1238,
          3.38,
          1239,
          3.38,
          1240,
          3.38,
          1241,
          4.808,
          1242,
          3.38,
          1243,
          3.38,
          1244,
          2.623,
          1245,
          3.38,
          1246,
          2.924,
          1247,
          3.38,
          1248,
          3.38,
          1249,
          3.38,
          1250,
          3.38,
          1251,
          3.38,
          1252,
          3.38,
          1253,
          3.38,
          1254,
          3.38,
          1255,
          3.38,
          1256,
          3.38,
          1257,
          4.808,
          1258,
          3.38,
          1259,
          3.38,
          1260,
          3.38,
          1261,
          3.38,
          1262,
          3.38,
          1263,
          3.38,
          1264,
          3.38,
          1265,
          2.623,
          1266,
          4.808,
          1267,
          4.808,
          1268,
          4.808,
          1269,
          3.38,
          1270,
          3.38,
          1271,
          3.38,
          1272,
          3.38,
          1273,
          3.38,
          1274,
          3.38,
          1275,
          3.38,
          1276,
          3.38,
          1277,
          3.38,
          1278,
          3.38,
          1279,
          3.38,
          1280,
          3.38,
          1281,
          4.808,
          1282,
          3.38,
          1283,
          4.808,
          1284,
          3.38,
          1285,
          3.38,
          1286,
          3.38,
          1287,
          3.38,
          1288,
          4.808,
          1289,
          2.924,
          1290,
          3.38,
          1291,
          3.38,
          1292,
          3.38,
          1293,
          3.38,
          1294,
          3.38,
          1295,
          3.38,
          1296,
          3.38,
          1297,
          3.38,
          1298,
          3.38,
          1299,
          3.38,
          1300,
          3.38,
          1301,
          3.38,
          1302,
          2.924,
          1303,
          3.38,
          1304,
          3.38,
          1305,
          3.38,
          1306,
          3.38,
          1307,
          3.38,
          1308,
          3.38,
          1309,
          2.924,
          1310,
          3.38,
          1311,
          3.38,
          1312,
          3.38,
          1313,
          3.38,
          1314,
          3.38,
          1315,
          3.38,
          1316,
          3.38,
          1317,
          3.38,
          1318,
          3.38,
          1319,
          3.38,
          1320,
          3.38
        ]
      ],
      ['title/dependencies.html', [624, 2.043, 1101, 2.672]],
      [
        'body/dependencies.html',
        [
          22,
          0.016,
          43,
          2.032,
          64,
          0.011,
          65,
          0.013,
          66,
          0.011,
          72,
          0.831,
          117,
          2.003,
          139,
          2.718,
          233,
          3.485,
          624,
          2.225,
          654,
          3.485,
          701,
          4.118,
          753,
          3.25,
          958,
          3.766,
          964,
          3.766,
          996,
          4.59,
          1140,
          3.766,
          1321,
          5.306,
          1322,
          7.916,
          1323,
          5.306,
          1324,
          5.306,
          1325,
          5.306,
          1326,
          5.306,
          1327,
          5.306,
          1328,
          5.607,
          1329,
          5.03,
          1330,
          5.306,
          1331,
          5.306,
          1332,
          4.59,
          1333,
          6.482,
          1334,
          5.306,
          1335,
          5.306,
          1336,
          5.306,
          1337,
          5.306,
          1338,
          5.306,
          1339,
          5.306,
          1340,
          5.306,
          1341,
          5.306,
          1342,
          3.25,
          1343,
          5.306,
          1344,
          5.306,
          1345,
          5.306,
          1346,
          5.306
        ]
      ],
      ['title/miscellaneous/enumerations.html', [1347, 1.865, 1348, 4.214]],
      [
        'body/miscellaneous/enumerations.html',
        [
          1,
          0.723,
          6,
          0.36,
          11,
          0.163,
          12,
          1.268,
          22,
          0.015,
          64,
          0.012,
          65,
          0.014,
          66,
          0.012,
          68,
          3.424,
          76,
          3.424,
          77,
          1.919,
          78,
          3.424,
          79,
          3.227,
          80,
          3.571,
          82,
          2.544,
          275,
          3.557,
          1347,
          3.227,
          1348,
          5.153,
          1349,
          4.623
        ]
      ],
      ['title/miscellaneous/functions.html', [1347, 1.865, 1350, 4.214]],
      [
        'body/miscellaneous/functions.html',
        [
          6,
          0.429,
          8,
          0.665,
          9,
          3.012,
          10,
          0.542,
          11,
          0.2,
          12,
          1.046,
          22,
          0.015,
          37,
          1.501,
          51,
          1.397,
          64,
          0.01,
          65,
          0.012,
          66,
          0.01,
          77,
          2.179,
          91,
          1.398,
          95,
          1.923,
          100,
          1.969,
          103,
          2.842,
          109,
          2.477,
          118,
          0.608,
          143,
          1.969,
          158,
          2.855,
          160,
          2.27,
          165,
          0.843,
          166,
          2.265,
          169,
          2.519,
          174,
          2.718,
          179,
          1.882,
          276,
          3.348,
          386,
          3.635,
          435,
          3.348,
          437,
          3.012,
          442,
          4.346,
          472,
          2.27,
          500,
          4.798,
          501,
          3.816,
          525,
          4.388,
          529,
          3.229,
          558,
          4.798,
          638,
          4.253,
          639,
          5.348,
          660,
          5.348,
          667,
          4.253,
          670,
          5.348,
          691,
          3.229,
          942,
          3.348,
          1347,
          2.663,
          1350,
          4.253,
          1351,
          4.253,
          1352,
          6.138,
          1353,
          4.917,
          1354,
          4.917,
          1355,
          4.917,
          1356,
          4.253,
          1357,
          4.917,
          1358,
          4.917,
          1359,
          4.917,
          1360,
          4.917,
          1361,
          4.917,
          1362,
          4.917,
          1363,
          4.917,
          1364,
          4.917,
          1365,
          4.917
        ]
      ],
      ['title/index.html', [12, 0.733, 1040, 2.109, 1041, 2.261]],
      [
        'body/index.html',
        [
          0,
          0.082,
          1,
          0.434,
          11,
          0.21,
          13,
          1.205,
          22,
          0.012,
          33,
          0.514,
          37,
          0.98,
          64,
          0.009,
          65,
          0.012,
          66,
          0.009,
          77,
          2.071,
          83,
          1.852,
          100,
          2.575,
          110,
          2.04,
          117,
          1.783,
          118,
          0.632,
          121,
          1.309,
          136,
          1.641,
          141,
          1.942,
          158,
          2.665,
          164,
          1.852,
          170,
          1.644,
          173,
          2.263,
          177,
          2.538,
          203,
          1.783,
          223,
          2.804,
          235,
          2.538,
          239,
          2.263,
          242,
          2.263,
          244,
          2.392,
          246,
          2.705,
          248,
          1.205,
          254,
          3.428,
          255,
          3.135,
          257,
          2.705,
          283,
          3.317,
          311,
          3.428,
          312,
          2.9,
          331,
          3.482,
          345,
          2.392,
          348,
          3.524,
          360,
          3.135,
          361,
          3.135,
          362,
          3.428,
          405,
          2.575,
          448,
          2.392,
          454,
          2.9,
          455,
          3.428,
          472,
          2.665,
          483,
          2.9,
          562,
          3.79,
          564,
          2.705,
          624,
          1.852,
          628,
          2.263,
          637,
          2.146,
          640,
          3.695,
          641,
          4.993,
          642,
          3.821,
          645,
          3.126,
          675,
          2.804,
          680,
          3.317,
          715,
          3.428,
          725,
          3.79,
          737,
          3.821,
          919,
          3.821,
          951,
          1.942,
          1042,
          3.293,
          1044,
          4.479,
          1045,
          4.096,
          1047,
          4.096,
          1049,
          3.79,
          1050,
          2.9,
          1063,
          3.918,
          1067,
          4.222,
          1086,
          4.479,
          1095,
          4.333,
          1128,
          5.561,
          1342,
          2.705,
          1366,
          5.772,
          1367,
          4.417,
          1368,
          4.417,
          1369,
          4.417,
          1370,
          4.417,
          1371,
          4.417,
          1372,
          3.428,
          1373,
          2.538,
          1374,
          3.821,
          1375,
          3.428,
          1376,
          3.821,
          1377,
          3.821,
          1378,
          3.821,
          1379,
          3.821,
          1380,
          4.417,
          1381,
          5.772,
          1382,
          3.428,
          1383,
          3.428,
          1384,
          3.428,
          1385,
          4.417,
          1386,
          3.317,
          1387,
          5.772,
          1388,
          4.417,
          1389,
          3.135,
          1390,
          3.821,
          1391,
          3.821,
          1392,
          3.821,
          1393,
          3.428,
          1394,
          4.417
        ]
      ],
      ['title/license.html', [1040, 2.109, 1041, 2.261, 1395, 3.443]],
      [
        'body/license.html',
        [
          22,
          0.013,
          36,
          1.636,
          64,
          0.01,
          65,
          0.013,
          66,
          0.01,
          100,
          2.526,
          149,
          2.75,
          236,
          3.604,
          637,
          2.467,
          801,
          3.941,
          951,
          2.233,
          1072,
          3.604,
          1089,
          5.326,
          1095,
          3.11,
          1153,
          3.941,
          1158,
          4.393,
          1161,
          5.457,
          1173,
          4.393,
          1244,
          3.941,
          1289,
          4.393,
          1391,
          4.393,
          1392,
          4.393,
          1396,
          4.393,
          1397,
          5.078,
          1398,
          5.078,
          1399,
          6.862,
          1400,
          5.078,
          1401,
          5.078,
          1402,
          5.078,
          1403,
          5.078,
          1404,
          5.078,
          1405,
          6.308,
          1406,
          7.773,
          1407,
          5.078,
          1408,
          5.078,
          1409,
          5.078,
          1410,
          6.308,
          1411,
          5.078,
          1412,
          5.078,
          1413,
          5.078,
          1414,
          4.393,
          1415,
          5.078,
          1416,
          5.078,
          1417,
          5.078,
          1418,
          5.078,
          1419,
          6.308,
          1420,
          5.078,
          1421,
          5.078,
          1422,
          5.078,
          1423,
          5.078,
          1424,
          5.078,
          1425,
          5.078,
          1426,
          6.308,
          1427,
          6.308,
          1428,
          4.393,
          1429,
          5.078,
          1430,
          5.078,
          1431,
          5.078,
          1432,
          5.078,
          1433,
          5.078,
          1434,
          5.078,
          1435,
          5.078,
          1436,
          5.078,
          1437,
          5.078,
          1438,
          5.078,
          1439,
          5.078,
          1440,
          5.078,
          1441,
          5.078,
          1442,
          5.078,
          1443,
          5.078,
          1444,
          5.078,
          1445,
          5.078,
          1446,
          5.078,
          1447,
          5.078,
          1448,
          5.078,
          1449,
          5.078,
          1450,
          5.078,
          1451,
          5.078,
          1452,
          5.078,
          1453,
          5.078
        ]
      ],
      ['title/modules.html', [623, 1.621]],
      [
        'body/modules.html',
        [
          22,
          0.013,
          24,
          2.754,
          64,
          0.011,
          65,
          0.013,
          66,
          0.011,
          411,
          3.096,
          622,
          3.3,
          623,
          1.597,
          634,
          3.538,
          908,
          3.538,
          909,
          3.3,
          910,
          3.3,
          911,
          3.538,
          912,
          3.3,
          913,
          3.538,
          914,
          3.3,
          915,
          3.3,
          916,
          3.3,
          945,
          3.823,
          949,
          3.538,
          950,
          3.538,
          1329,
          5.923,
          1373,
          4.386,
          1454,
          7.632,
          1455,
          8.033,
          1456,
          7.85
        ]
      ],
      ['title/overview.html', [1457, 4.73]],
      [
        'body/overview.html',
        [
          2,
          0.781,
          22,
          0.016,
          45,
          2.475,
          64,
          0.007,
          65,
          0.01,
          66,
          0.007,
          118,
          0.361,
          165,
          0.629,
          239,
          3.61,
          242,
          2.998,
          244,
          3.818,
          250,
          4.317,
          263,
          1.044,
          331,
          1.988,
          411,
          4.051,
          448,
          1.988,
          622,
          4.702,
          623,
          1.088,
          624,
          1.539,
          625,
          1.988,
          626,
          1.988,
          627,
          1.988,
          628,
          1.88,
          629,
          3.175,
          630,
          3.175,
          631,
          3.175,
          632,
          3.175,
          633,
          3.175,
          634,
          5.265,
          635,
          2.928,
          636,
          2.11,
          637,
          1.783,
          675,
          2.843,
          676,
          2.849,
          905,
          3.175,
          906,
          3.175,
          907,
          3.175,
          908,
          4.792,
          909,
          4.317,
          910,
          4.317,
          911,
          4.628,
          912,
          4.317,
          913,
          4.628,
          914,
          4.317,
          915,
          4.317,
          916,
          4.317,
          939,
          3.175,
          940,
          3.175,
          945,
          5.1,
          946,
          3.175,
          947,
          3.175,
          948,
          3.175,
          949,
          4.852,
          950,
          4.852,
          965,
          5.002,
          986,
          5.298,
          988,
          3.175,
          989,
          3.175,
          990,
          3.175,
          997,
          3.175,
          998,
          3.175,
          999,
          3.175,
          1000,
          3.175,
          1001,
          4.542,
          1002,
          4.542,
          1457,
          3.175,
          1458,
          2.849,
          1459,
          3.671,
          1460,
          3.671,
          1461,
          3.671
        ]
      ],
      ['title/todo.html', [394, 2.444, 1040, 2.109, 1041, 2.261]],
      [
        'body/todo.html',
        [
          11,
          0.201,
          22,
          0.013,
          64,
          0.011,
          65,
          0.013,
          66,
          0.011,
          83,
          2.747,
          109,
          2.583,
          112,
          1.815,
          117,
          2.179,
          118,
          0.531,
          135,
          2.264,
          140,
          2.067,
          155,
          2.264,
          156,
          3.307,
          199,
          2.924,
          223,
          2.623,
          227,
          3.103,
          248,
          1.473,
          255,
          3.832,
          271,
          3.307,
          394,
          3.832,
          448,
          2.924,
          472,
          3.024,
          544,
          3.103,
          566,
          3.832,
          623,
          1.6,
          746,
          4.67,
          951,
          2.374,
          1009,
          2.623,
          1049,
          3.545,
          1062,
          3.832,
          1067,
          3.545,
          1225,
          4.67,
          1235,
          4.67,
          1332,
          4.67,
          1373,
          3.764,
          1389,
          5.484,
          1396,
          4.67,
          1414,
          4.67,
          1462,
          5.399,
          1463,
          5.399,
          1464,
          5.399,
          1465,
          4.67,
          1466,
          5.399,
          1467,
          5.399,
          1468,
          5.399,
          1469,
          5.399,
          1470,
          4.67,
          1471,
          5.399,
          1472,
          4.67,
          1473,
          5.399,
          1474,
          3.307,
          1475,
          5.399,
          1476,
          4.67
        ]
      ],
      ['title/miscellaneous/typealiases.html', [1347, 1.865, 1477, 4.872]],
      [
        'body/miscellaneous/typealiases.html',
        [
          1,
          0.638,
          6,
          0.392,
          7,
          2.583,
          10,
          0.804,
          11,
          0.178,
          12,
          1.132,
          17,
          1.25,
          22,
          0.016,
          24,
          1.865,
          25,
          1.948,
          26,
          2.583,
          27,
          2.455,
          28,
          3.153,
          29,
          3.153,
          30,
          1.948,
          31,
          1.948,
          32,
          3.153,
          37,
          1.554,
          38,
          2.455,
          42,
          2.455,
          48,
          2.455,
          54,
          1.924,
          61,
          2.455,
          62,
          2.583,
          63,
          3.153,
          64,
          0.011,
          65,
          0.013,
          66,
          0.011,
          68,
          3.056,
          73,
          3.492,
          74,
          3.492,
          76,
          3.056,
          77,
          1.713,
          78,
          3.056,
          83,
          2.23,
          84,
          4.262,
          85,
          2.13,
          86,
          3.056,
          87,
          4.262,
          88,
          1.865,
          89,
          3.492,
          90,
          3.975,
          1347,
          2.88,
          1349,
          5.436,
          1478,
          5.318,
          1479,
          6.49
        ]
      ],
      ['title/miscellaneous/variables.html', [1146, 3.781, 1347, 1.865]],
      [
        'body/miscellaneous/variables.html',
        [
          6,
          0.433,
          10,
          0.774,
          11,
          0.192,
          12,
          0.772,
          17,
          0.622,
          18,
          1.273,
          22,
          0.016,
          33,
          0.9,
          37,
          1.121,
          64,
          0.007,
          65,
          0.01,
          66,
          0.007,
          68,
          2.085,
          77,
          1.169,
          91,
          1.437,
          99,
          3.805,
          109,
          2.13,
          112,
          1.219,
          114,
          2.648,
          115,
          3.011,
          116,
          1.675,
          117,
          1.121,
          118,
          0.357,
          120,
          1.699,
          121,
          2.124,
          122,
          2.382,
          123,
          1.699,
          124,
          2.382,
          128,
          2.119,
          129,
          2.382,
          136,
          1.032,
          140,
          1.389,
          143,
          1.453,
          151,
          1.453,
          159,
          2.222,
          163,
          2.222,
          164,
          1.521,
          165,
          0.866,
          168,
          1.521,
          178,
          1.595,
          185,
          1.762,
          186,
          2.222,
          187,
          2.904,
          188,
          2.085,
          189,
          1.762,
          190,
          1.965,
          191,
          2.085,
          192,
          2.085,
          193,
          2.904,
          194,
          2.222,
          195,
          1.965,
          196,
          2.737,
          197,
          2.222,
          210,
          3.138,
          211,
          3.562,
          212,
          2.816,
          213,
          4.371,
          215,
          3.922,
          223,
          1.762,
          225,
          5.44,
          235,
          2.904,
          244,
          1.965,
          246,
          3.095,
          247,
          4.371,
          248,
          1.716,
          249,
          5.44,
          250,
          2.222,
          251,
          2.408,
          252,
          2.223,
          267,
          1.965,
          275,
          3.945,
          412,
          3.586,
          413,
          2.816,
          438,
          2.816,
          439,
          3.318,
          440,
          2.816,
          441,
          2.575,
          442,
          2.222,
          443,
          3.586,
          444,
          2.816,
          445,
          2.222,
          446,
          3.922,
          447,
          2.816,
          454,
          2.382,
          701,
          2.816,
          951,
          2.222,
          955,
          4.693,
          956,
          2.816,
          968,
          2.575,
          986,
          3.586,
          1001,
          3.922,
          1002,
          3.922,
          1146,
          2.816,
          1347,
          1.965,
          1349,
          4.513,
          1351,
          3.138,
          1352,
          4.371,
          1356,
          3.138,
          1373,
          2.085,
          1480,
          5.054,
          1481,
          5.054,
          1482,
          5.054,
          1483,
          5.815,
          1484,
          5.054,
          1485,
          3.628,
          1486,
          3.628,
          1487,
          5.815,
          1488,
          5.054,
          1489,
          5.054,
          1490,
          5.815,
          1491,
          3.628,
          1492,
          3.628,
          1493,
          3.628,
          1494,
          3.628,
          1495,
          5.815,
          1496,
          3.138,
          1497,
          3.628
        ]
      ],
      [
        'title/additional-documentation/tinynodes-library-docs.html',
        [20, 0.964, 951, 1.157, 1049, 1.728, 1050, 1.728, 1474, 1.612]
      ],
      [
        'body/additional-documentation/tinynodes-library-docs.html',
        [
          22,
          0.014,
          64,
          0.012,
          65,
          0.014,
          66,
          0.012,
          79,
          3.211,
          117,
          1.832,
          406,
          2.486,
          409,
          2.27,
          951,
          2.607,
          1042,
          3.037,
          1045,
          4.208,
          1047,
          4.208,
          1054,
          5.129,
          1076,
          5.129,
          1110,
          4.601,
          1129,
          4.601,
          1135,
          4.601,
          1143,
          4.601,
          1153,
          4.601,
          1342,
          4.242,
          1386,
          3.407,
          1393,
          4.601,
          1498,
          5.129,
          1499,
          5.929,
          1500,
          5.129,
          1501,
          6.926,
          1502,
          5.929
        ]
      ],
      [
        'title/additional-documentation/tinynodes-library-docs/ngx-editorjs-readme.html',
        [11, 0.072, 20, 0.964, 117, 0.813, 1386, 1.513, 1474, 1.612]
      ],
      [
        'body/additional-documentation/tinynodes-library-docs/ngx-editorjs-readme.html',
        [
          0,
          0.06,
          1,
          0.583,
          8,
          0.313,
          9,
          1.953,
          10,
          0.351,
          11,
          0.212,
          13,
          0.87,
          14,
          1.153,
          16,
          1.014,
          22,
          0.016,
          23,
          0.226,
          24,
          1.119,
          25,
          1.168,
          30,
          1.984,
          31,
          1.168,
          33,
          0.69,
          36,
          1.027,
          37,
          1.202,
          40,
          1.072,
          51,
          0.863,
          64,
          0.006,
          65,
          0.009,
          66,
          0.006,
          70,
          0.69,
          72,
          0.499,
          75,
          0.945,
          77,
          2.029,
          83,
          1.337,
          91,
          0.907,
          92,
          2.631,
          95,
          1.866,
          96,
          1.633,
          99,
          1.727,
          100,
          2.522,
          108,
          1.934,
          109,
          1.689,
          110,
          2.501,
          112,
          1.821,
          116,
          1.472,
          117,
          0.985,
          118,
          0.665,
          134,
          1.633,
          136,
          1.688,
          138,
          1.221,
          140,
          1.221,
          141,
          2.028,
          151,
          1.847,
          155,
          2.272,
          156,
          2.824,
          157,
          2.263,
          158,
          2.501,
          159,
          1.402,
          161,
          1.833,
          164,
          1.337,
          165,
          0.547,
          166,
          1.168,
          168,
          1.337,
          170,
          1.112,
          171,
          1.953,
          173,
          1.633,
          174,
          1.402,
          177,
          2.028,
          178,
          2.382,
          179,
          1.221,
          185,
          2.24,
          189,
          1.549,
          190,
          1.727,
          203,
          0.985,
          223,
          2.883,
          235,
          1.833,
          239,
          1.633,
          242,
          1.633,
          244,
          1.727,
          246,
          1.953,
          248,
          1.258,
          254,
          3.579,
          257,
          2.824,
          267,
          1.727,
          275,
          2.362,
          282,
          1.953,
          288,
          2.475,
          307,
          2.475,
          311,
          2.475,
          312,
          2.094,
          331,
          1.727,
          343,
          2.094,
          345,
          2.498,
          348,
          3.188,
          360,
          2.263,
          361,
          2.263,
          362,
          2.475,
          391,
          1.425,
          396,
          1.953,
          405,
          2.828,
          406,
          1.934,
          409,
          1.221,
          414,
          3.844,
          415,
          2.094,
          416,
          2.263,
          417,
          3.273,
          418,
          2.263,
          419,
          3.273,
          422,
          1.727,
          425,
          2.094,
          429,
          2.263,
          430,
          2.475,
          431,
          2.263,
          432,
          2.475,
          433,
          3.273,
          435,
          1.727,
          436,
          2.094,
          442,
          1.953,
          448,
          1.727,
          454,
          2.094,
          472,
          2.129,
          483,
          3.028,
          484,
          2.263,
          492,
          2.475,
          497,
          3.989,
          501,
          2.475,
          508,
          2.758,
          529,
          2.094,
          536,
          2.094,
          541,
          3.989,
          544,
          1.833,
          562,
          3.557,
          564,
          1.953,
          621,
          2.475,
          622,
          2.824,
          626,
          1.727,
          627,
          1.727,
          637,
          1.549,
          640,
          3.113,
          645,
          2.934,
          646,
          3.989,
          647,
          2.475,
          648,
          1.953,
          691,
          2.094,
          725,
          2.094,
          966,
          2.758,
          1029,
          2.263,
          1042,
          1.633,
          1045,
          2.263,
          1049,
          3.028,
          1050,
          3.897,
          1055,
          2.758,
          1062,
          2.263,
          1063,
          1.833,
          1067,
          3.897,
          1095,
          1.953,
          1125,
          3.273,
          1140,
          3.844,
          1244,
          2.475,
          1328,
          2.758,
          1329,
          2.475,
          1342,
          3.318,
          1372,
          2.475,
          1373,
          1.833,
          1374,
          2.758,
          1375,
          4.204,
          1376,
          2.758,
          1377,
          2.758,
          1378,
          3.989,
          1379,
          2.758,
          1383,
          2.475,
          1384,
          3.579,
          1389,
          2.263,
          1476,
          2.758,
          1496,
          2.758,
          1503,
          3.189,
          1504,
          3.189,
          1505,
          3.189,
          1506,
          3.189,
          1507,
          3.189,
          1508,
          2.758,
          1509,
          3.189,
          1510,
          2.758,
          1511,
          3.189,
          1512,
          3.189,
          1513,
          4.611,
          1514,
          5.417,
          1515,
          3.189,
          1516,
          3.189,
          1517,
          3.189,
          1518,
          3.189,
          1519,
          2.758,
          1520,
          3.189,
          1521,
          3.189,
          1522,
          4.611,
          1523,
          3.189,
          1524,
          3.189,
          1525,
          3.189
        ]
      ],
      [
        'title/additional-documentation/tinynodes-library-docs/ngx-editorjs-readme/ngx-editorjs-changelog.html',
        [11, 0.072, 20, 0.964, 117, 0.813, 1042, 1.348, 1474, 1.612]
      ],
      [
        'body/additional-documentation/tinynodes-library-docs/ngx-editorjs-readme/ngx-editorjs-changelog.html',
        [
          0,
          0.055,
          5,
          0.178,
          9,
          1.8,
          11,
          0.206,
          13,
          0.802,
          14,
          0.625,
          17,
          0.504,
          22,
          0.009,
          24,
          1.813,
          25,
          1.077,
          27,
          1.357,
          30,
          1.077,
          31,
          2.646,
          33,
          0.709,
          36,
          1.963,
          37,
          1.415,
          40,
          0.988,
          43,
          1.125,
          46,
          1.428,
          51,
          0.55,
          54,
          1.288,
          64,
          0.006,
          65,
          0.009,
          66,
          0.006,
          70,
          0.342,
          76,
          1.689,
          77,
          2.267,
          80,
          1.428,
          83,
          2.394,
          90,
          1.8,
          92,
          2.511,
          94,
          1.93,
          95,
          1.47,
          96,
          1.505,
          99,
          1.592,
          100,
          2.07,
          105,
          2.353,
          109,
          1.077,
          110,
          2.006,
          112,
          1.737,
          114,
          1.177,
          116,
          1.357,
          117,
          0.908,
          118,
          0.627,
          121,
          0.871,
          136,
          1.876,
          141,
          2.272,
          145,
          1.505,
          155,
          1.233,
          156,
          1.8,
          158,
          2.006,
          161,
          1.689,
          165,
          0.745,
          166,
          1.077,
          170,
          0.709,
          174,
          1.292,
          177,
          1.292,
          178,
          1.292,
          179,
          2.526,
          180,
          1.592,
          186,
          2.51,
          195,
          1.592,
          198,
          1.592,
          202,
          1.8,
          203,
          1.342,
          214,
          2.086,
          223,
          3.205,
          227,
          1.689,
          235,
          1.689,
          239,
          1.505,
          242,
          2.647,
          244,
          2.799,
          246,
          3.732,
          248,
          0.802,
          250,
          1.8,
          267,
          1.592,
          269,
          1.592,
          271,
          1.8,
          282,
          1.8,
          283,
          2.497,
          331,
          2.799,
          345,
          2.353,
          348,
          2.774,
          361,
          2.086,
          363,
          1.93,
          373,
          2.281,
          382,
          2.647,
          389,
          4.052,
          403,
          4.011,
          415,
          1.93,
          421,
          2.086,
          422,
          1.592,
          448,
          2.799,
          453,
          3.083,
          454,
          1.93,
          455,
          2.281,
          472,
          3.194,
          479,
          2.542,
          483,
          1.93,
          503,
          3.758,
          516,
          5.46,
          529,
          1.93,
          536,
          2.853,
          537,
          3.372,
          544,
          2.497,
          558,
          2.281,
          562,
          1.93,
          564,
          1.8,
          566,
          2.086,
          622,
          1.8,
          640,
          2.497,
          644,
          2.853,
          645,
          1.592,
          674,
          1.8,
          675,
          1.428,
          680,
          1.689,
          691,
          1.93,
          715,
          2.281,
          716,
          2.542,
          728,
          2.542,
          742,
          2.281,
          753,
          1.8,
          783,
          3.372,
          795,
          2.542,
          963,
          2.542,
          1042,
          2.647,
          1044,
          2.281,
          1050,
          4.001,
          1051,
          2.542,
          1057,
          2.542,
          1061,
          5.713,
          1062,
          3.083,
          1063,
          3.665,
          1067,
          2.853,
          1069,
          3.758,
          1072,
          5.065,
          1074,
          2.542,
          1079,
          3.758,
          1081,
          3.372,
          1083,
          2.542,
          1084,
          2.542,
          1086,
          2.281,
          1095,
          3.497,
          1100,
          4.993,
          1101,
          3.372,
          1110,
          3.372,
          1125,
          3.083,
          1132,
          3.372,
          1144,
          2.542,
          1155,
          2.281,
          1208,
          2.542,
          1246,
          2.542,
          1265,
          2.281,
          1342,
          2.661,
          1373,
          2.497,
          1375,
          2.281,
          1382,
          2.281,
          1386,
          1.689,
          1389,
          3.083,
          1393,
          4.431,
          1428,
          3.758,
          1458,
          3.372,
          1465,
          2.542,
          1500,
          2.542,
          1526,
          2.542,
          1527,
          2.542,
          1528,
          2.281,
          1529,
          2.542,
          1530,
          2.542,
          1531,
          2.542,
          1532,
          2.542,
          1533,
          2.939,
          1534,
          4.471,
          1535,
          2.939,
          1536,
          2.939,
          1537,
          2.281,
          1538,
          2.939,
          1539,
          6.086,
          1540,
          2.542,
          1541,
          4.344,
          1542,
          2.542,
          1543,
          2.939,
          1544,
          5.168,
          1545,
          2.939,
          1546,
          2.939,
          1547,
          2.939,
          1548,
          2.939,
          1549,
          2.939,
          1550,
          2.939,
          1551,
          4.344,
          1552,
          2.939,
          1553,
          2.939,
          1554,
          2.542,
          1555,
          2.939,
          1556,
          2.939,
          1557,
          2.939,
          1558,
          2.939,
          1559,
          4.344,
          1560,
          2.939,
          1561,
          2.939,
          1562,
          2.939,
          1563,
          2.939,
          1564,
          2.939,
          1565,
          2.939,
          1566,
          2.939,
          1567,
          2.939,
          1568,
          2.939,
          1569,
          4.344,
          1570,
          2.939,
          1571,
          2.542,
          1572,
          2.939,
          1573,
          2.939,
          1574,
          2.542,
          1575,
          2.542,
          1576,
          2.542,
          1577,
          2.939,
          1578,
          2.542,
          1579,
          2.939,
          1580,
          2.939,
          1581,
          2.939,
          1582,
          2.939,
          1583,
          2.939,
          1584,
          2.939,
          1585,
          2.939,
          1586,
          2.939,
          1587,
          2.939,
          1588,
          2.542,
          1589,
          2.939,
          1590,
          2.939
        ]
      ],
      [
        'title/additional-documentation/tinynodes-library-docs/ngx-editorjs-plugins-readme.html',
        [11, 0.065, 20, 0.863, 77, 0.759, 117, 0.728, 1386, 1.353, 1474, 1.442]
      ],
      [
        'body/additional-documentation/tinynodes-library-docs/ngx-editorjs-plugins-readme.html',
        [
          1,
          0.701,
          5,
          0.188,
          8,
          0.577,
          10,
          0.647,
          11,
          0.189,
          14,
          0.663,
          16,
          1.099,
          17,
          1.204,
          22,
          0.016,
          23,
          0.22,
          24,
          1.591,
          25,
          1.959,
          33,
          0.622,
          36,
          1.461,
          37,
          1.698,
          40,
          2.097,
          41,
          1.439,
          51,
          1.001,
          64,
          0.006,
          65,
          0.009,
          66,
          0.006,
          67,
          1.909,
          70,
          0.683,
          72,
          0.488,
          77,
          2.262,
          78,
          1.791,
          79,
          1.688,
          80,
          2.597,
          82,
          1.142,
          85,
          1.248,
          91,
          1.852,
          95,
          1.29,
          96,
          2.323,
          100,
          1.816,
          103,
          2.141,
          104,
          1.736,
          105,
          2.456,
          110,
          2.094,
          112,
          2.315,
          114,
          1.816,
          117,
          0.963,
          118,
          0.577,
          120,
          1.524,
          123,
          1.524,
          141,
          1.37,
          158,
          2.469,
          161,
          1.791,
          165,
          0.534,
          169,
          1.596,
          170,
          1.779,
          175,
          2.606,
          177,
          1.37,
          214,
          2.212,
          248,
          1.238,
          251,
          2.047,
          252,
          1.797,
          255,
          2.212,
          257,
          1.909,
          263,
          1.29,
          278,
          1.688,
          348,
          2.597,
          382,
          1.596,
          386,
          1.596,
          391,
          1.401,
          393,
          2.419,
          396,
          1.909,
          406,
          2.888,
          409,
          1.193,
          410,
          1.994,
          411,
          1.791,
          435,
          1.688,
          445,
          1.909,
          458,
          2.419,
          472,
          2.881,
          525,
          3.794,
          623,
          1.344,
          624,
          1.902,
          640,
          3.073,
          644,
          2.978,
          645,
          2.896,
          647,
          2.419,
          675,
          1.514,
          680,
          1.791,
          683,
          2.696,
          688,
          2.696,
          691,
          2.047,
          692,
          2.696,
          695,
          2.419,
          697,
          2.696,
          721,
          2.212,
          725,
          3.511,
          753,
          1.909,
          909,
          1.909,
          910,
          1.909,
          912,
          1.909,
          914,
          1.909,
          915,
          2.778,
          916,
          1.909,
          1029,
          3.219,
          1036,
          2.696,
          1047,
          2.212,
          1063,
          1.791,
          1129,
          2.419,
          1135,
          2.419,
          1140,
          3.219,
          1265,
          2.419,
          1302,
          2.696,
          1342,
          1.909,
          1372,
          2.419,
          1373,
          2.606,
          1382,
          2.419,
          1383,
          2.419,
          1384,
          2.419,
          1386,
          3.958,
          1390,
          3.923,
          1470,
          2.696,
          1472,
          2.696,
          1498,
          2.696,
          1508,
          2.696,
          1510,
          2.696,
          1519,
          2.696,
          1528,
          2.419,
          1537,
          2.419,
          1591,
          4.535,
          1592,
          3.117,
          1593,
          2.696,
          1594,
          2.696,
          1595,
          3.117,
          1596,
          3.117,
          1597,
          3.117,
          1598,
          3.117,
          1599,
          3.117,
          1600,
          3.117,
          1601,
          4.535,
          1602,
          4.535,
          1603,
          3.117,
          1604,
          3.117,
          1605,
          3.117,
          1606,
          3.117,
          1607,
          3.117,
          1608,
          3.117,
          1609,
          3.117,
          1610,
          3.117,
          1611,
          3.117
        ]
      ],
      [
        'title/additional-documentation/tinynodes-library-docs/ngx-editorjs-plugins-readme/ngx-editorjs-plugins-changelog.html',
        [11, 0.065, 20, 0.863, 77, 0.759, 117, 0.728, 1042, 1.206, 1474, 1.442]
      ],
      [
        'body/additional-documentation/tinynodes-library-docs/ngx-editorjs-plugins-readme/ngx-editorjs-plugins-changelog.html',
        [
          1,
          0.452,
          5,
          0.278,
          11,
          0.126,
          14,
          0.978,
          22,
          0.012,
          24,
          1.613,
          31,
          2.401,
          33,
          0.535,
          36,
          1.909,
          37,
          1.454,
          43,
          2.65,
          64,
          0.009,
          65,
          0.012,
          66,
          0.009,
          77,
          2.363,
          83,
          1.928,
          91,
          1.307,
          95,
          1.307,
          112,
          1.545,
          116,
          2.735,
          118,
          0.743,
          120,
          1.545,
          123,
          1.545,
          164,
          1.928,
          165,
          0.788,
          166,
          1.684,
          170,
          1.428,
          179,
          1.76,
          185,
          2.233,
          186,
          2.021,
          248,
          1.616,
          251,
          1.76,
          263,
          1.307,
          269,
          2.49,
          348,
          2.233,
          373,
          3.568,
          389,
          3.263,
          405,
          2.372,
          409,
          2.268,
          425,
          3.019,
          435,
          2.49,
          453,
          3.263,
          472,
          2.735,
          516,
          5.086,
          528,
          3.263,
          534,
          3.568,
          544,
          2.642,
          566,
          3.263,
          623,
          1.363,
          624,
          1.928,
          674,
          3.628,
          675,
          3.184,
          679,
          3.568,
          724,
          3.977,
          729,
          3.977,
          753,
          2.816,
          1042,
          3.034,
          1061,
          3.568,
          1063,
          3.404,
          1072,
          5.084,
          1081,
          3.568,
          1095,
          2.816,
          1100,
          4.204,
          1125,
          3.263,
          1132,
          3.568,
          1143,
          3.568,
          1155,
          3.568,
          1309,
          3.977,
          1386,
          2.642,
          1458,
          3.568,
          1526,
          3.977,
          1527,
          3.977,
          1528,
          3.568,
          1529,
          3.977,
          1530,
          3.977,
          1531,
          3.977,
          1532,
          3.977,
          1534,
          3.977,
          1537,
          3.568,
          1539,
          6.344,
          1540,
          3.977,
          1542,
          3.977,
          1554,
          3.977,
          1571,
          3.977,
          1574,
          3.977,
          1575,
          3.977,
          1576,
          3.977,
          1578,
          3.977,
          1588,
          3.977,
          1593,
          3.977,
          1594,
          3.977,
          1612,
          4.597,
          1613,
          4.597,
          1614,
          4.597,
          1615,
          4.597,
          1616,
          4.597,
          1617,
          4.597,
          1618,
          4.597,
          1619,
          4.597,
          1620,
          4.597,
          1621,
          4.597,
          1622,
          4.597,
          1623,
          4.597,
          1624,
          4.597,
          1625,
          4.597,
          1626,
          4.597,
          1627,
          4.597
        ]
      ]
    ],
    invertedIndex: [
      [
        '',
        {
          _index: 22,
          title: {},
          body: {
            'interfaces/Block.html': {},
            'interfaces/BlockData.html': {},
            'interfaces/ChangeMap.html': {},
            'interfaces/CreateEditorJSOptions.html': {},
            'interfaces/EditorJSChange.html': {},
            'interfaces/EditorJSClass.html': {},
            'interfaces/EditorJSInstanceConfig.html': {},
            'interfaces/EditorJSMaterialForm.html': {},
            'interfaces/EditorMap.html': {},
            'classes/FixedHeader.html': {},
            'interfaces/Header.html': {},
            'interfaces/HeaderBlock.html': {},
            'interfaces/Image.html': {},
            'interfaces/ImageBlock.html': {},
            'interfaces/InjectorApiCallOptions.html': {},
            'interfaces/InjectorApiCallResponse.html': {},
            'interfaces/InjectorMethodOption.html': {},
            'interfaces/List.html': {},
            'interfaces/ListBlock.html': {},
            'interfaces/NgxEditorJSConfig.html': {},
            'directives/NgxEditorJSDirective.html': {},
            'modules/NgxEditorJSModule.html': {},
            'interfaces/NgxEditorJSModuleConfig.html': {},
            'injectables/NgxEditorJSPluginService.html': {},
            'injectables/NgxEditorJSService.html': {},
            'modules/NgxEditorjsPluginsModule.html': {},
            'modules/NgxPluginServiceModule.html': {},
            'modules/NgxTinynodesComponentsModule.html': {},
            'interfaces/NgxTinynodesMatFieldComponent.html': {},
            'components/NgxTinynodesMatJsonOutputComponent.html': {},
            'modules/NgxTinynodesMatJsonOutputModule.html': {},
            'modules/NgxTinynodesMatTagInputModule.html': {},
            'interfaces/Paragraph.html': {},
            'interfaces/ParagraphBlock.html': {},
            'modules/PluginCodeModule.html': {},
            'interfaces/PluginConfig.html': {},
            'interfaces/PluginConfigMap.html': {},
            'modules/PluginHeaderModule.html': {},
            'modules/PluginImageModule.html': {},
            'modules/PluginInlineCodeModule.html': {},
            'modules/PluginLinkModule.html': {},
            'modules/PluginListModule.html': {},
            'modules/PluginMarkerModule.html': {},
            'modules/PluginParagraphModule.html': {},
            'modules/PluginSimpleImageModule.html': {},
            'interfaces/ReadyMap.html': {},
            'interfaces/SavedMap.html': {},
            'interfaces/ToolSettingsMap.html': {},
            'changelog.html': {},
            'contributing.html': {},
            'dependencies.html': {},
            'miscellaneous/enumerations.html': {},
            'miscellaneous/functions.html': {},
            'index.html': {},
            'license.html': {},
            'modules.html': {},
            'overview.html': {},
            'todo.html': {},
            'miscellaneous/typealiases.html': {},
            'miscellaneous/variables.html': {},
            'additional-documentation/tinynodes-library-docs.html': {},
            'additional-documentation/tinynodes-library-docs/ngx-editorjs-readme.html': {},
            'additional-documentation/tinynodes-library-docs/ngx-editorjs-readme/ngx-editorjs-changelog.html': {},
            'additional-documentation/tinynodes-library-docs/ngx-editorjs-plugins-readme.html': {},
            'additional-documentation/tinynodes-library-docs/ngx-editorjs-plugins-readme/ngx-editorjs-plugins-changelog.html': {}
          }
        }
      ],
      [
        '0',
        {
          _index: 189,
          title: {},
          body: {
            'interfaces/EditorJSClass.html': {},
            'interfaces/EditorJSInstanceConfig.html': {},
            'interfaces/EditorJSMaterialForm.html': {},
            'interfaces/InjectorApiCallOptions.html': {},
            'interfaces/InjectorApiCallResponse.html': {},
            'interfaces/InjectorMethodOption.html': {},
            'directives/NgxEditorJSDirective.html': {},
            'injectables/NgxEditorJSService.html': {},
            'miscellaneous/variables.html': {},
            'additional-documentation/tinynodes-library-docs/ngx-editorjs-readme.html': {}
          }
        }
      ],
      ['0.0.5', { _index: 1340, title: {}, body: { 'dependencies.html': {} } }],
      ['0.12.2', { _index: 1338, title: {}, body: { 'dependencies.html': {} } }],
      ['0.9.1', { _index: 1346, title: {}, body: { 'dependencies.html': {} } }],
      [
        '05',
        {
          _index: 1539,
          title: {},
          body: {
            'additional-documentation/tinynodes-library-docs/ngx-editorjs-readme/ngx-editorjs-changelog.html': {},
            'additional-documentation/tinynodes-library-docs/ngx-editorjs-plugins-readme/ngx-editorjs-plugins-changelog.html': {}
          }
        }
      ],
      [
        '06',
        {
          _index: 1534,
          title: {},
          body: {
            'additional-documentation/tinynodes-library-docs/ngx-editorjs-readme/ngx-editorjs-changelog.html': {},
            'additional-documentation/tinynodes-library-docs/ngx-editorjs-plugins-readme/ngx-editorjs-plugins-changelog.html': {}
          }
        }
      ],
      [
        '1',
        {
          _index: 45,
          title: {},
          body: {
            'interfaces/Block.html': {},
            'interfaces/Header.html': {},
            'interfaces/HeaderBlock.html': {},
            'interfaces/Image.html': {},
            'interfaces/ImageBlock.html': {},
            'interfaces/List.html': {},
            'interfaces/ListBlock.html': {},
            'interfaces/Paragraph.html': {},
            'interfaces/ParagraphBlock.html': {},
            'overview.html': {}
          }
        }
      ],
      [
        '1.0.0',
        {
          _index: 1588,
          title: {},
          body: {
            'additional-documentation/tinynodes-library-docs/ngx-editorjs-readme/ngx-editorjs-changelog.html': {},
            'additional-documentation/tinynodes-library-docs/ngx-editorjs-plugins-readme/ngx-editorjs-plugins-changelog.html': {}
          }
        }
      ],
      [
        '1.1.0',
        {
          _index: 1578,
          title: {},
          body: {
            'additional-documentation/tinynodes-library-docs/ngx-editorjs-readme/ngx-editorjs-changelog.html': {},
            'additional-documentation/tinynodes-library-docs/ngx-editorjs-plugins-readme/ngx-editorjs-plugins-changelog.html': {}
          }
        }
      ],
      [
        '1.1.1',
        {
          _index: 1576,
          title: {},
          body: {
            'additional-documentation/tinynodes-library-docs/ngx-editorjs-readme/ngx-editorjs-changelog.html': {},
            'additional-documentation/tinynodes-library-docs/ngx-editorjs-plugins-readme/ngx-editorjs-plugins-changelog.html': {}
          }
        }
      ],
      [
        '1.1.2',
        {
          _index: 1573,
          title: {},
          body: {
            'additional-documentation/tinynodes-library-docs/ngx-editorjs-readme/ngx-editorjs-changelog.html': {}
          }
        }
      ],
      ['1.2', { _index: 1106, title: {}, body: { 'changelog.html': {} } }],
      [
        '1.2.0',
        {
          _index: 1570,
          title: {},
          body: {
            'additional-documentation/tinynodes-library-docs/ngx-editorjs-readme/ngx-editorjs-changelog.html': {}
          }
        }
      ],
      [
        '1.3.0',
        {
          _index: 1564,
          title: {},
          body: {
            'additional-documentation/tinynodes-library-docs/ngx-editorjs-readme/ngx-editorjs-changelog.html': {}
          }
        }
      ],
      [
        '1.3.2',
        {
          _index: 1560,
          title: {},
          body: {
            'additional-documentation/tinynodes-library-docs/ngx-editorjs-readme/ngx-editorjs-changelog.html': {}
          }
        }
      ],
      ['1.4', { _index: 1318, title: {}, body: { 'contributing.html': {} } }],
      [
        '10',
        {
          _index: 403,
          title: {},
          body: {
            'classes/FixedHeader.html': {},
            'modules/PluginHeaderModule.html': {},
            'additional-documentation/tinynodes-library-docs/ngx-editorjs-readme/ngx-editorjs-changelog.html': {}
          }
        }
      ],
      [
        '11',
        {
          _index: 1574,
          title: {},
          body: {
            'additional-documentation/tinynodes-library-docs/ngx-editorjs-readme/ngx-editorjs-changelog.html': {},
            'additional-documentation/tinynodes-library-docs/ngx-editorjs-plugins-readme/ngx-editorjs-plugins-changelog.html': {}
          }
        }
      ],
      ['12th', { _index: 1103, title: {}, body: { 'changelog.html': {} } }],
      [
        '13',
        {
          _index: 1571,
          title: {},
          body: {
            'additional-documentation/tinynodes-library-docs/ngx-editorjs-readme/ngx-editorjs-changelog.html': {},
            'additional-documentation/tinynodes-library-docs/ngx-editorjs-plugins-readme/ngx-editorjs-plugins-changelog.html': {}
          }
        }
      ],
      ['13th', { _index: 1098, title: {}, body: { 'changelog.html': {} } }],
      [
        '15',
        {
          _index: 1458,
          title: {},
          body: {
            'overview.html': {},
            'additional-documentation/tinynodes-library-docs/ngx-editorjs-readme/ngx-editorjs-changelog.html': {},
            'additional-documentation/tinynodes-library-docs/ngx-editorjs-plugins-readme/ngx-editorjs-plugins-changelog.html': {}
          }
        }
      ],
      ['15th', { _index: 1087, title: {}, body: { 'changelog.html': {} } }],
      ['2', { _index: 1460, title: {}, body: { 'overview.html': {} } }],
      [
        '2.0.0',
        {
          _index: 1554,
          title: {},
          body: {
            'additional-documentation/tinynodes-library-docs/ngx-editorjs-readme/ngx-editorjs-changelog.html': {},
            'additional-documentation/tinynodes-library-docs/ngx-editorjs-plugins-readme/ngx-editorjs-plugins-changelog.html': {}
          }
        }
      ],
      [
        '2.0.1',
        {
          _index: 1612,
          title: {},
          body: {
            'additional-documentation/tinynodes-library-docs/ngx-editorjs-plugins-readme/ngx-editorjs-plugins-changelog.html': {}
          }
        }
      ],
      ['2.0.8', { _index: 1337, title: {}, body: { 'dependencies.html': {} } }],
      [
        '2.1.0',
        {
          _index: 1547,
          title: {},
          body: {
            'additional-documentation/tinynodes-library-docs/ngx-editorjs-readme/ngx-editorjs-changelog.html': {}
          }
        }
      ],
      ['2.4.0', { _index: 1341, title: {}, body: { 'dependencies.html': {} } }],
      [
        '2019',
        {
          _index: 1072,
          title: {},
          body: {
            'changelog.html': {},
            'license.html': {},
            'additional-documentation/tinynodes-library-docs/ngx-editorjs-readme/ngx-editorjs-changelog.html': {},
            'additional-documentation/tinynodes-library-docs/ngx-editorjs-plugins-readme/ngx-editorjs-plugins-changelog.html': {}
          }
        }
      ],
      [
        '22',
        {
          _index: 1555,
          title: {},
          body: {
            'additional-documentation/tinynodes-library-docs/ngx-editorjs-readme/ngx-editorjs-changelog.html': {}
          }
        }
      ],
      ['22nd', { _index: 1071, title: {}, body: { 'changelog.html': {} } }],
      [
        '23',
        {
          _index: 1548,
          title: {},
          body: {
            'additional-documentation/tinynodes-library-docs/ngx-editorjs-readme/ngx-editorjs-changelog.html': {}
          }
        }
      ],
      ['28', { _index: 1461, title: {}, body: { 'overview.html': {} } }],
      [
        '3.0.0',
        {
          _index: 1538,
          title: {},
          body: {
            'additional-documentation/tinynodes-library-docs/ngx-editorjs-readme/ngx-editorjs-changelog.html': {}
          }
        }
      ],
      [
        '3.0.1',
        {
          _index: 1533,
          title: {},
          body: {
            'additional-documentation/tinynodes-library-docs/ngx-editorjs-readme/ngx-editorjs-changelog.html': {}
          }
        }
      ],
      ['3.1.3', { _index: 1335, title: {}, body: { 'dependencies.html': {} } }],
      ['4', { _index: 1459, title: {}, body: { 'overview.html': {} } }],
      [
        '6',
        {
          _index: 46,
          title: {},
          body: {
            'interfaces/Block.html': {},
            'interfaces/Header.html': {},
            'interfaces/HeaderBlock.html': {},
            'interfaces/Image.html': {},
            'interfaces/ImageBlock.html': {},
            'interfaces/List.html': {},
            'interfaces/ListBlock.html': {},
            'interfaces/Paragraph.html': {},
            'interfaces/ParagraphBlock.html': {},
            'additional-documentation/tinynodes-library-docs/ngx-editorjs-readme/ngx-editorjs-changelog.html': {}
          }
        }
      ],
      ['6.5.2', { _index: 1344, title: {}, body: { 'dependencies.html': {} } }],
      ['6.9.0', { _index: 1343, title: {}, body: { 'dependencies.html': {} } }],
      ['7', { _index: 1385, title: {}, body: { 'index.html': {} } }],
      ['7.4.0', { _index: 1333, title: {}, body: { 'dependencies.html': {} } }],
      [
        '8',
        {
          _index: 1540,
          title: {},
          body: {
            'additional-documentation/tinynodes-library-docs/ngx-editorjs-readme/ngx-editorjs-changelog.html': {},
            'additional-documentation/tinynodes-library-docs/ngx-editorjs-plugins-readme/ngx-editorjs-plugins-changelog.html': {}
          }
        }
      ],
      ['8.0.0', { _index: 1322, title: {}, body: { 'dependencies.html': {} } }],
      ['_disabled', { _index: 302, title: {}, body: { 'interfaces/EditorJSMaterialForm.html': {} } }],
      ['_empty', { _index: 308, title: {}, body: { 'interfaces/EditorJSMaterialForm.html': {} } }],
      ['_focused', { _index: 289, title: {}, body: { 'interfaces/EditorJSMaterialForm.html': {} } }],
      ['_placeholder', { _index: 284, title: {}, body: { 'interfaces/EditorJSMaterialForm.html': {} } }],
      ['_required', { _index: 295, title: {}, body: { 'interfaces/EditorJSMaterialForm.html': {} } }],
      ['a.time', { _index: 863, title: {}, body: { 'injectables/NgxEditorJSService.html': {} } }],
      ['above', { _index: 1425, title: {}, body: { 'license.html': {} } }],
      ['abusive', { _index: 1284, title: {}, body: { 'contributing.html': {} } }],
      ['acceptable', { _index: 1239, title: {}, body: { 'contributing.html': {} } }],
      ['accepting', { _index: 1204, title: {}, body: { 'contributing.html': {} } }],
      [
        'access',
        {
          _index: 311,
          title: {},
          body: {
            'interfaces/EditorJSMaterialForm.html': {},
            'index.html': {},
            'additional-documentation/tinynodes-library-docs/ngx-editorjs-readme.html': {}
          }
        }
      ],
      ['accessor', { _index: 1497, title: {}, body: { 'miscellaneous/variables.html': {} } }],
      ['accessors', { _index: 471, title: {}, body: { 'directives/NgxEditorJSDirective.html': {} } }],
      ['account', { _index: 1274, title: {}, body: { 'contributing.html': {} } }],
      ['acting', { _index: 1275, title: {}, body: { 'contributing.html': {} } }],
      [
        'action',
        {
          _index: 1244,
          title: {},
          body: {
            'contributing.html': {},
            'license.html': {},
            'additional-documentation/tinynodes-library-docs/ngx-editorjs-readme.html': {}
          }
        }
      ],
      ['actions', { _index: 778, title: {}, body: { 'injectables/NgxEditorJSService.html': {} } }],
      ['active', { _index: 486, title: {}, body: { 'directives/NgxEditorJSDirective.html': {} } }],
      [
        'actual_component',
        { _index: 987, title: {}, body: { 'components/NgxTinynodesMatJsonOutputComponent.html': {} } }
      ],
      ['adapted', { _index: 1316, title: {}, body: { 'contributing.html': {} } }],
      [
        'add',
        {
          _index: 1389,
          title: {},
          body: {
            'index.html': {},
            'todo.html': {},
            'additional-documentation/tinynodes-library-docs/ngx-editorjs-readme.html': {},
            'additional-documentation/tinynodes-library-docs/ngx-editorjs-readme/ngx-editorjs-changelog.html': {}
          }
        }
      ],
      [
        'added',
        {
          _index: 31,
          title: {},
          body: {
            'interfaces/Block.html': {},
            'interfaces/Header.html': {},
            'interfaces/HeaderBlock.html': {},
            'interfaces/Image.html': {},
            'interfaces/ImageBlock.html': {},
            'interfaces/List.html': {},
            'interfaces/ListBlock.html': {},
            'directives/NgxEditorJSDirective.html': {},
            'injectables/NgxEditorJSService.html': {},
            'interfaces/Paragraph.html': {},
            'interfaces/ParagraphBlock.html': {},
            'changelog.html': {},
            'miscellaneous/typealiases.html': {},
            'additional-documentation/tinynodes-library-docs/ngx-editorjs-readme.html': {},
            'additional-documentation/tinynodes-library-docs/ngx-editorjs-readme/ngx-editorjs-changelog.html': {},
            'additional-documentation/tinynodes-library-docs/ngx-editorjs-plugins-readme/ngx-editorjs-plugins-changelog.html': {}
          }
        }
      ],
      [
        'adding',
        {
          _index: 1525,
          title: {},
          body: { 'additional-documentation/tinynodes-library-docs/ngx-editorjs-readme.html': {} }
        }
      ],
      [
        'additional',
        {
          _index: 20,
          title: {
            'additional-documentation/tinynodes-library-docs.html': {},
            'additional-documentation/tinynodes-library-docs/ngx-editorjs-readme.html': {},
            'additional-documentation/tinynodes-library-docs/ngx-editorjs-readme/ngx-editorjs-changelog.html': {},
            'additional-documentation/tinynodes-library-docs/ngx-editorjs-plugins-readme.html': {},
            'additional-documentation/tinynodes-library-docs/ngx-editorjs-plugins-readme/ngx-editorjs-plugins-changelog.html': {}
          },
          body: {
            'interfaces/Block.html': {},
            'interfaces/Header.html': {},
            'interfaces/HeaderBlock.html': {},
            'interfaces/Image.html': {},
            'interfaces/ImageBlock.html': {},
            'interfaces/List.html': {},
            'interfaces/ListBlock.html': {},
            'injectables/NgxEditorJSService.html': {},
            'modules/NgxEditorjsPluginsModule.html': {},
            'interfaces/Paragraph.html': {},
            'interfaces/ParagraphBlock.html': {}
          }
        }
      ],
      ['address', { _index: 1229, title: {}, body: { 'contributing.html': {} } }],
      ['adds', { _index: 756, title: {}, body: { 'injectables/NgxEditorJSService.html': {} } }],
      [
        'adheres',
        {
          _index: 1530,
          title: {},
          body: {
            'additional-documentation/tinynodes-library-docs/ngx-editorjs-readme/ngx-editorjs-changelog.html': {},
            'additional-documentation/tinynodes-library-docs/ngx-editorjs-plugins-readme/ngx-editorjs-plugins-changelog.html': {}
          }
        }
      ],
      ['advances', { _index: 1219, title: {}, body: { 'contributing.html': {} } }],
      [
        'aftercontentinit',
        {
          _index: 220,
          title: {},
          body: {
            'interfaces/EditorJSMaterialForm.html': {},
            'directives/NgxEditorJSDirective.html': {},
            'interfaces/NgxTinynodesMatFieldComponent.html': {}
          }
        }
      ],
      ['against', { _index: 752, title: {}, body: { 'injectables/NgxEditorJSService.html': {} } }],
      ['age', { _index: 1177, title: {}, body: { 'contributing.html': {} } }],
      ['aliases', { _index: 1478, title: {}, body: { 'miscellaneous/typealiases.html': {} } }],
      ['aligned', { _index: 1253, title: {}, body: { 'contributing.html': {} } }],
      ['allow', { _index: 643, title: {}, body: { 'modules/NgxEditorJSModule.html': {} } }],
      [
        'allows',
        {
          _index: 433,
          title: {},
          body: {
            'interfaces/NgxEditorJSConfig.html': {},
            'interfaces/NgxEditorJSModuleConfig.html': {},
            'injectables/NgxEditorJSService.html': {},
            'additional-documentation/tinynodes-library-docs/ngx-editorjs-readme.html': {}
          }
        }
      ],
      [
        'along',
        {
          _index: 1055,
          title: {},
          body: { 'changelog.html': {}, 'additional-documentation/tinynodes-library-docs/ngx-editorjs-readme.html': {} }
        }
      ],
      [
        'alongside',
        {
          _index: 1597,
          title: {},
          body: { 'additional-documentation/tinynodes-library-docs/ngx-editorjs-plugins-readme.html': {} }
        }
      ],
      ['and/or', { _index: 1417, title: {}, body: { 'license.html': {} } }],
      [
        'angular',
        {
          _index: 348,
          title: {},
          body: {
            'interfaces/EditorJSMaterialForm.html': {},
            'directives/NgxEditorJSDirective.html': {},
            'modules/NgxEditorJSModule.html': {},
            'injectables/NgxEditorJSService.html': {},
            'changelog.html': {},
            'index.html': {},
            'additional-documentation/tinynodes-library-docs/ngx-editorjs-readme.html': {},
            'additional-documentation/tinynodes-library-docs/ngx-editorjs-readme/ngx-editorjs-changelog.html': {},
            'additional-documentation/tinynodes-library-docs/ngx-editorjs-plugins-readme.html': {},
            'additional-documentation/tinynodes-library-docs/ngx-editorjs-plugins-readme/ngx-editorjs-plugins-changelog.html': {}
          }
        }
      ],
      [
        "angular's",
        {
          _index: 1546,
          title: {},
          body: {
            'additional-documentation/tinynodes-library-docs/ngx-editorjs-readme/ngx-editorjs-changelog.html': {}
          }
        }
      ],
      ['angular/animations', { _index: 1321, title: {}, body: { 'dependencies.html': {} } }],
      ['angular/cdk', { _index: 1323, title: {}, body: { 'dependencies.html': {} } }],
      ['angular/cdk/a11y', { _index: 217, title: {}, body: { 'interfaces/EditorJSMaterialForm.html': {} } }],
      ['angular/cdk/coercion', { _index: 219, title: {}, body: { 'interfaces/EditorJSMaterialForm.html': {} } }],
      [
        'angular/common',
        {
          _index: 654,
          title: {},
          body: {
            'modules/NgxEditorJSModule.html': {},
            'modules/NgxEditorjsPluginsModule.html': {},
            'modules/NgxTinynodesMatJsonOutputModule.html': {},
            'modules/NgxTinynodesMatTagInputModule.html': {},
            'dependencies.html': {}
          }
        }
      ],
      ['angular/compiler', { _index: 1324, title: {}, body: { 'dependencies.html': {} } }],
      [
        'angular/core',
        {
          _index: 72,
          title: {},
          body: {
            'interfaces/BlockData.html': {},
            'interfaces/EditorJSClass.html': {},
            'interfaces/EditorJSInstanceConfig.html': {},
            'interfaces/EditorJSMaterialForm.html': {},
            'classes/FixedHeader.html': {},
            'interfaces/InjectorApiCallOptions.html': {},
            'interfaces/InjectorApiCallResponse.html': {},
            'interfaces/InjectorMethodOption.html': {},
            'interfaces/NgxEditorJSConfig.html': {},
            'directives/NgxEditorJSDirective.html': {},
            'modules/NgxEditorJSModule.html': {},
            'interfaces/NgxEditorJSModuleConfig.html': {},
            'injectables/NgxEditorJSPluginService.html': {},
            'injectables/NgxEditorJSService.html': {},
            'modules/NgxEditorjsPluginsModule.html': {},
            'modules/NgxPluginServiceModule.html': {},
            'modules/NgxTinynodesComponentsModule.html': {},
            'interfaces/NgxTinynodesMatFieldComponent.html': {},
            'components/NgxTinynodesMatJsonOutputComponent.html': {},
            'modules/NgxTinynodesMatJsonOutputModule.html': {},
            'modules/NgxTinynodesMatTagInputModule.html': {},
            'modules/PluginCodeModule.html': {},
            'interfaces/PluginConfig.html': {},
            'interfaces/PluginConfigMap.html': {},
            'modules/PluginHeaderModule.html': {},
            'modules/PluginImageModule.html': {},
            'modules/PluginInlineCodeModule.html': {},
            'modules/PluginLinkModule.html': {},
            'modules/PluginListModule.html': {},
            'modules/PluginMarkerModule.html': {},
            'modules/PluginParagraphModule.html': {},
            'modules/PluginSimpleImageModule.html': {},
            'interfaces/ToolSettingsMap.html': {},
            'dependencies.html': {},
            'additional-documentation/tinynodes-library-docs/ngx-editorjs-readme.html': {},
            'additional-documentation/tinynodes-library-docs/ngx-editorjs-plugins-readme.html': {}
          }
        }
      ],
      ['angular/flex', { _index: 1325, title: {}, body: { 'dependencies.html': {} } }],
      [
        'angular/forms',
        {
          _index: 233,
          title: {},
          body: {
            'interfaces/EditorJSMaterialForm.html': {},
            'modules/NgxEditorJSModule.html': {},
            'interfaces/NgxTinynodesMatFieldComponent.html': {},
            'modules/NgxTinynodesMatTagInputModule.html': {},
            'dependencies.html': {}
          }
        }
      ],
      [
        'angular/material',
        {
          _index: 964,
          title: {},
          body: {
            'interfaces/NgxTinynodesMatFieldComponent.html': {},
            'modules/NgxTinynodesMatJsonOutputModule.html': {},
            'modules/NgxTinynodesMatTagInputModule.html': {},
            'dependencies.html': {}
          }
        }
      ],
      [
        'angular/material/form',
        {
          _index: 234,
          title: {},
          body: { 'interfaces/EditorJSMaterialForm.html': {}, 'modules/NgxEditorJSModule.html': {} }
        }
      ],
      ['angular/material/input', { _index: 659, title: {}, body: { 'modules/NgxEditorJSModule.html': {} } }],
      [
        'angular/platform',
        {
          _index: 1328,
          title: {},
          body: {
            'dependencies.html': {},
            'additional-documentation/tinynodes-library-docs/ngx-editorjs-readme.html': {}
          }
        }
      ],
      ['angular/router', { _index: 1331, title: {}, body: { 'dependencies.html': {} } }],
      [
        'any).defaultlevel.number',
        { _index: 404, title: {}, body: { 'classes/FixedHeader.html': {}, 'modules/PluginHeaderModule.html': {} } }
      ],
      [
        'aot',
        {
          _index: 1544,
          title: {},
          body: {
            'additional-documentation/tinynodes-library-docs/ngx-editorjs-readme/ngx-editorjs-changelog.html': {}
          }
        }
      ],
      [
        'api',
        {
          _index: 203,
          title: {},
          body: {
            'interfaces/EditorJSClass.html': {},
            'interfaces/EditorJSInstanceConfig.html': {},
            'classes/FixedHeader.html': {},
            'interfaces/InjectorApiCallOptions.html': {},
            'interfaces/InjectorApiCallResponse.html': {},
            'interfaces/InjectorMethodOption.html': {},
            'injectables/NgxEditorJSService.html': {},
            'modules/PluginCodeModule.html': {},
            'modules/PluginHeaderModule.html': {},
            'modules/PluginImageModule.html': {},
            'modules/PluginInlineCodeModule.html': {},
            'modules/PluginLinkModule.html': {},
            'modules/PluginListModule.html': {},
            'modules/PluginMarkerModule.html': {},
            'modules/PluginParagraphModule.html': {},
            'modules/PluginSimpleImageModule.html': {},
            'changelog.html': {},
            'index.html': {},
            'additional-documentation/tinynodes-library-docs/ngx-editorjs-readme.html': {},
            'additional-documentation/tinynodes-library-docs/ngx-editorjs-readme/ngx-editorjs-changelog.html': {}
          }
        }
      ],
      [
        'apicall',
        {
          _index: 728,
          title: {},
          body: {
            'injectables/NgxEditorJSService.html': {},
            'additional-documentation/tinynodes-library-docs/ngx-editorjs-readme/ngx-editorjs-changelog.html': {}
          }
        }
      ],
      ['apicall(options', { _index: 739, title: {}, body: { 'injectables/NgxEditorJSService.html': {} } }],
      [
        'app',
        {
          _index: 445,
          title: {},
          body: {
            'interfaces/NgxEditorJSConfig.html': {},
            'modules/NgxEditorJSModule.html': {},
            'interfaces/NgxEditorJSModuleConfig.html': {},
            'changelog.html': {},
            'miscellaneous/variables.html': {},
            'additional-documentation/tinynodes-library-docs/ngx-editorjs-plugins-readme.html': {}
          }
        }
      ],
      [
        'app.component',
        {
          _index: 1515,
          title: {},
          body: { 'additional-documentation/tinynodes-library-docs/ngx-editorjs-readme.html': {} }
        }
      ],
      [
        'appcomponent',
        {
          _index: 1514,
          title: {},
          body: { 'additional-documentation/tinynodes-library-docs/ngx-editorjs-readme.html': {} }
        }
      ],
      ['appearance', { _index: 1187, title: {}, body: { 'contributing.html': {} } }],
      [
        'application',
        {
          _index: 645,
          title: {},
          body: {
            'modules/NgxEditorJSModule.html': {},
            'injectables/NgxEditorJSPluginService.html': {},
            'injectables/NgxEditorJSService.html': {},
            'changelog.html': {},
            'index.html': {},
            'additional-documentation/tinynodes-library-docs/ngx-editorjs-readme.html': {},
            'additional-documentation/tinynodes-library-docs/ngx-editorjs-readme/ngx-editorjs-changelog.html': {},
            'additional-documentation/tinynodes-library-docs/ngx-editorjs-plugins-readme.html': {}
          }
        }
      ],
      ['applicationref', { _index: 735, title: {}, body: { 'injectables/NgxEditorJSService.html': {} } }],
      ['applies', { _index: 1264, title: {}, body: { 'contributing.html': {} } }],
      [
        'appmodule',
        {
          _index: 1516,
          title: {},
          body: { 'additional-documentation/tinynodes-library-docs/ngx-editorjs-readme.html': {} }
        }
      ],
      ['appointed', { _index: 1276, title: {}, body: { 'contributing.html': {} } }],
      ['appropriate', { _index: 1241, title: {}, body: { 'contributing.html': {} } }],
      [
        'architecture',
        {
          _index: 1057,
          title: {},
          body: {
            'changelog.html': {},
            'additional-documentation/tinynodes-library-docs/ngx-editorjs-readme/ngx-editorjs-changelog.html': {}
          }
        }
      ],
      [
        'area',
        {
          _index: 432,
          title: {},
          body: {
            'interfaces/NgxEditorJSConfig.html': {},
            'interfaces/NgxEditorJSModuleConfig.html': {},
            'additional-documentation/tinynodes-library-docs/ngx-editorjs-readme.html': {}
          }
        }
      ],
      [
        'args',
        {
          _index: 208,
          title: {},
          body: {
            'interfaces/EditorJSClass.html': {},
            'interfaces/EditorJSInstanceConfig.html': {},
            'interfaces/InjectorApiCallOptions.html': {},
            'interfaces/InjectorApiCallResponse.html': {},
            'interfaces/InjectorMethodOption.html': {},
            'injectables/NgxEditorJSService.html': {}
          }
        }
      ],
      ['argument', { _index: 743, title: {}, body: { 'injectables/NgxEditorJSService.html': {} } }],
      ['arguments', { _index: 748, title: {}, body: { 'injectables/NgxEditorJSService.html': {} } }],
      ['aria', { _index: 327, title: {}, body: { 'interfaces/EditorJSMaterialForm.html': {} } }],
      ['arising', { _index: 1451, title: {}, body: { 'license.html': {} } }],
      [
        'array',
        {
          _index: 500,
          title: {},
          body: {
            'directives/NgxEditorJSDirective.html': {},
            'injectables/NgxEditorJSService.html': {},
            'miscellaneous/functions.html': {}
          }
        }
      ],
      ['associated', { _index: 1407, title: {}, body: { 'license.html': {} } }],
      [
        'async',
        {
          _index: 459,
          title: {},
          body: { 'directives/NgxEditorJSDirective.html': {}, 'injectables/NgxEditorJSService.html': {} }
        }
      ],
      [
        'async/await',
        { _index: 796, title: {}, body: { 'injectables/NgxEditorJSService.html': {}, 'changelog.html': {} } }
      ],
      [
        'attach',
        {
          _index: 454,
          title: {},
          body: {
            'directives/NgxEditorJSDirective.html': {},
            'index.html': {},
            'miscellaneous/variables.html': {},
            'additional-documentation/tinynodes-library-docs/ngx-editorjs-readme.html': {},
            'additional-documentation/tinynodes-library-docs/ngx-editorjs-readme/ngx-editorjs-changelog.html': {}
          }
        }
      ],
      [
        'attached',
        {
          _index: 479,
          title: {},
          body: {
            'directives/NgxEditorJSDirective.html': {},
            'additional-documentation/tinynodes-library-docs/ngx-editorjs-readme/ngx-editorjs-changelog.html': {}
          }
        }
      ],
      ['attacks', { _index: 1224, title: {}, body: { 'contributing.html': {} } }],
      ['attention', { _index: 1218, title: {}, body: { 'contributing.html': {} } }],
      ['attribution', { _index: 1315, title: {}, body: { 'contributing.html': {} } }],
      ['authors', { _index: 1442, title: {}, body: { 'license.html': {} } }],
      [
        'autofocus',
        {
          _index: 414,
          title: {},
          body: {
            'interfaces/NgxEditorJSConfig.html': {},
            'directives/NgxEditorJSDirective.html': {},
            'interfaces/NgxEditorJSModuleConfig.html': {},
            'additional-documentation/tinynodes-library-docs/ngx-editorjs-readme.html': {}
          }
        }
      ],
      [
        'autofocused',
        {
          _index: 420,
          title: {},
          body: { 'interfaces/NgxEditorJSConfig.html': {}, 'interfaces/NgxEditorJSModuleConfig.html': {} }
        }
      ],
      [
        'autosave',
        {
          _index: 156,
          title: {},
          body: {
            'interfaces/CreateEditorJSOptions.html': {},
            'interfaces/EditorJSMaterialForm.html': {},
            'directives/NgxEditorJSDirective.html': {},
            'todo.html': {},
            'additional-documentation/tinynodes-library-docs/ngx-editorjs-readme.html': {},
            'additional-documentation/tinynodes-library-docs/ngx-editorjs-readme/ngx-editorjs-changelog.html': {}
          }
        }
      ],
      ['autosaves', { _index: 491, title: {}, body: { 'directives/NgxEditorJSDirective.html': {} } }],
      [
        'available',
        {
          _index: 24,
          title: {},
          body: {
            'interfaces/Block.html': {},
            'interfaces/Header.html': {},
            'interfaces/HeaderBlock.html': {},
            'interfaces/Image.html': {},
            'interfaces/ImageBlock.html': {},
            'interfaces/List.html': {},
            'interfaces/ListBlock.html': {},
            'directives/NgxEditorJSDirective.html': {},
            'interfaces/Paragraph.html': {},
            'interfaces/ParagraphBlock.html': {},
            'contributing.html': {},
            'modules.html': {},
            'miscellaneous/typealiases.html': {},
            'additional-documentation/tinynodes-library-docs/ngx-editorjs-readme.html': {},
            'additional-documentation/tinynodes-library-docs/ngx-editorjs-readme/ngx-editorjs-changelog.html': {},
            'additional-documentation/tinynodes-library-docs/ngx-editorjs-plugins-readme.html': {},
            'additional-documentation/tinynodes-library-docs/ngx-editorjs-plugins-readme/ngx-editorjs-plugins-changelog.html': {}
          }
        }
      ],
      [
        'avoid',
        {
          _index: 1593,
          title: {},
          body: {
            'additional-documentation/tinynodes-library-docs/ngx-editorjs-plugins-readme.html': {},
            'additional-documentation/tinynodes-library-docs/ngx-editorjs-plugins-readme/ngx-editorjs-plugins-changelog.html': {}
          }
        }
      ],
      [
        'await',
        {
          _index: 577,
          title: {},
          body: { 'directives/NgxEditorJSDirective.html': {}, 'injectables/NgxEditorJSService.html': {} }
        }
      ],
      ['b', { _index: 861, title: {}, body: { 'injectables/NgxEditorJSService.html': {} } }],
      ['b.time', { _index: 862, title: {}, body: { 'injectables/NgxEditorJSService.html': {} } }],
      [
        'back',
        {
          _index: 566,
          title: {},
          body: {
            'directives/NgxEditorJSDirective.html': {},
            'todo.html': {},
            'additional-documentation/tinynodes-library-docs/ngx-editorjs-readme/ngx-editorjs-changelog.html': {},
            'additional-documentation/tinynodes-library-docs/ngx-editorjs-plugins-readme/ngx-editorjs-plugins-changelog.html': {}
          }
        }
      ],
      [
        'background',
        {
          _index: 57,
          title: {},
          body: {
            'interfaces/Block.html': {},
            'interfaces/Header.html': {},
            'interfaces/HeaderBlock.html': {},
            'interfaces/Image.html': {},
            'interfaces/ImageBlock.html': {},
            'interfaces/List.html': {},
            'interfaces/ListBlock.html': {},
            'interfaces/Paragraph.html': {},
            'interfaces/ParagraphBlock.html': {}
          }
        }
      ],
      ['ban', { _index: 1254, title: {}, body: { 'contributing.html': {} } }],
      [
        'base',
        {
          _index: 9,
          title: {},
          body: {
            'interfaces/Block.html': {},
            'interfaces/EditorJSMaterialForm.html': {},
            'modules/NgxEditorJSModule.html': {},
            'miscellaneous/functions.html': {},
            'additional-documentation/tinynodes-library-docs/ngx-editorjs-readme.html': {},
            'additional-documentation/tinynodes-library-docs/ngx-editorjs-readme/ngx-editorjs-changelog.html': {}
          }
        }
      ],
      [
        'based',
        {
          _index: 373,
          title: {},
          body: {
            'interfaces/EditorJSMaterialForm.html': {},
            'additional-documentation/tinynodes-library-docs/ngx-editorjs-readme/ngx-editorjs-changelog.html': {},
            'additional-documentation/tinynodes-library-docs/ngx-editorjs-plugins-readme/ngx-editorjs-plugins-changelog.html': {}
          }
        }
      ],
      [
        'baseplugin',
        {
          _index: 1587,
          title: {},
          body: {
            'additional-documentation/tinynodes-library-docs/ngx-editorjs-readme/ngx-editorjs-changelog.html': {}
          }
        }
      ],
      [
        'bash',
        {
          _index: 1510,
          title: {},
          body: {
            'additional-documentation/tinynodes-library-docs/ngx-editorjs-readme.html': {},
            'additional-documentation/tinynodes-library-docs/ngx-editorjs-plugins-readme.html': {}
          }
        }
      ],
      [
        'basic',
        {
          _index: 62,
          title: {},
          body: {
            'interfaces/Block.html': {},
            'interfaces/Header.html': {},
            'interfaces/HeaderBlock.html': {},
            'interfaces/Image.html': {},
            'interfaces/ImageBlock.html': {},
            'interfaces/List.html': {},
            'interfaces/ListBlock.html': {},
            'interfaces/Paragraph.html': {},
            'interfaces/ParagraphBlock.html': {},
            'miscellaneous/typealiases.html': {}
          }
        }
      ],
      [
        'before',
        { _index: 496, title: {}, body: { 'directives/NgxEditorJSDirective.html': {}, 'contributing.html': {} } }
      ],
      ['behavior', { _index: 1193, title: {}, body: { 'contributing.html': {} } }],
      ['behaviors', { _index: 1258, title: {}, body: { 'contributing.html': {} } }],
      [
        'behaviorsubject',
        {
          _index: 133,
          title: {},
          body: {
            'interfaces/ChangeMap.html': {},
            'interfaces/EditorJSChange.html': {},
            'interfaces/EditorMap.html': {},
            'directives/NgxEditorJSDirective.html': {},
            'injectables/NgxEditorJSService.html': {},
            'interfaces/ReadyMap.html': {},
            'interfaces/SavedMap.html': {}
          }
        }
      ],
      ['behaviorsubject(editor', { _index: 818, title: {}, body: { 'injectables/NgxEditorJSService.html': {} } }],
      [
        'behaviorsubject(false',
        {
          _index: 563,
          title: {},
          body: { 'directives/NgxEditorJSDirective.html': {}, 'injectables/NgxEditorJSService.html': {} }
        }
      ],
      ['behaviorsubject(undefined', { _index: 854, title: {}, body: { 'injectables/NgxEditorJSService.html': {} } }],
      ['behaviorsubject(value', { _index: 886, title: {}, body: { 'injectables/NgxEditorJSService.html': {} } }],
      ['being', { _index: 1198, title: {}, body: { 'contributing.html': {} } }],
      [
        'below',
        {
          _index: 1384,
          title: {},
          body: {
            'index.html': {},
            'additional-documentation/tinynodes-library-docs/ngx-editorjs-readme.html': {},
            'additional-documentation/tinynodes-library-docs/ngx-editorjs-plugins-readme.html': {}
          }
        }
      ],
      [
        'best',
        {
          _index: 1208,
          title: {},
          body: {
            'contributing.html': {},
            'additional-documentation/tinynodes-library-docs/ngx-editorjs-readme/ngx-editorjs-changelog.html': {}
          }
        }
      ],
      ['beta.26', { _index: 1327, title: {}, body: { 'dependencies.html': {} } }],
      ['better', { _index: 1066, title: {}, body: { 'changelog.html': {} } }],
      [
        'big',
        {
          _index: 1556,
          title: {},
          body: {
            'additional-documentation/tinynodes-library-docs/ngx-editorjs-readme/ngx-editorjs-changelog.html': {}
          }
        }
      ],
      ['bind', { _index: 800, title: {}, body: { 'injectables/NgxEditorJSService.html': {} } }],
      ['binding', { _index: 318, title: {}, body: { 'interfaces/EditorJSMaterialForm.html': {} } }],
      [
        'block',
        {
          _index: 1,
          title: { 'interfaces/Block.html': {} },
          body: {
            'interfaces/Block.html': {},
            'interfaces/BlockData.html': {},
            'interfaces/ChangeMap.html': {},
            'interfaces/EditorJSChange.html': {},
            'interfaces/EditorJSClass.html': {},
            'interfaces/EditorJSInstanceConfig.html': {},
            'interfaces/EditorMap.html': {},
            'classes/FixedHeader.html': {},
            'interfaces/Header.html': {},
            'interfaces/HeaderBlock.html': {},
            'interfaces/Image.html': {},
            'interfaces/ImageBlock.html': {},
            'interfaces/InjectorApiCallOptions.html': {},
            'interfaces/InjectorApiCallResponse.html': {},
            'interfaces/InjectorMethodOption.html': {},
            'interfaces/List.html': {},
            'interfaces/ListBlock.html': {},
            'interfaces/NgxEditorJSConfig.html': {},
            'directives/NgxEditorJSDirective.html': {},
            'interfaces/NgxEditorJSModuleConfig.html': {},
            'modules/NgxEditorjsPluginsModule.html': {},
            'interfaces/Paragraph.html': {},
            'interfaces/ParagraphBlock.html': {},
            'modules/PluginCodeModule.html': {},
            'interfaces/PluginConfig.html': {},
            'interfaces/PluginConfigMap.html': {},
            'modules/PluginHeaderModule.html': {},
            'modules/PluginImageModule.html': {},
            'modules/PluginInlineCodeModule.html': {},
            'modules/PluginLinkModule.html': {},
            'modules/PluginListModule.html': {},
            'modules/PluginMarkerModule.html': {},
            'modules/PluginParagraphModule.html': {},
            'modules/PluginSimpleImageModule.html': {},
            'interfaces/ReadyMap.html': {},
            'interfaces/SavedMap.html': {},
            'interfaces/ToolSettingsMap.html': {},
            'changelog.html': {},
            'miscellaneous/enumerations.html': {},
            'index.html': {},
            'miscellaneous/typealiases.html': {},
            'additional-documentation/tinynodes-library-docs/ngx-editorjs-readme.html': {},
            'additional-documentation/tinynodes-library-docs/ngx-editorjs-plugins-readme.html': {},
            'additional-documentation/tinynodes-library-docs/ngx-editorjs-plugins-readme/ngx-editorjs-plugins-changelog.html': {}
          }
        }
      ],
      [
        'blockdata',
        {
          _index: 67,
          title: { 'interfaces/BlockData.html': {} },
          body: {
            'interfaces/BlockData.html': {},
            'interfaces/PluginConfig.html': {},
            'interfaces/PluginConfigMap.html': {},
            'interfaces/ToolSettingsMap.html': {},
            'additional-documentation/tinynodes-library-docs/ngx-editorjs-plugins-readme.html': {}
          }
        }
      ],
      [
        'blockplaceholder',
        {
          _index: 415,
          title: {},
          body: {
            'interfaces/NgxEditorJSConfig.html': {},
            'directives/NgxEditorJSDirective.html': {},
            'interfaces/NgxEditorJSModuleConfig.html': {},
            'additional-documentation/tinynodes-library-docs/ngx-editorjs-readme.html': {},
            'additional-documentation/tinynodes-library-docs/ngx-editorjs-readme/ngx-editorjs-changelog.html': {}
          }
        }
      ],
      [
        'blocks',
        {
          _index: 140,
          title: {},
          body: {
            'interfaces/ChangeMap.html': {},
            'interfaces/EditorJSChange.html': {},
            'interfaces/EditorJSClass.html': {},
            'interfaces/EditorJSInstanceConfig.html': {},
            'interfaces/EditorMap.html': {},
            'interfaces/InjectorApiCallOptions.html': {},
            'interfaces/InjectorApiCallResponse.html': {},
            'interfaces/InjectorMethodOption.html': {},
            'directives/NgxEditorJSDirective.html': {},
            'injectables/NgxEditorJSService.html': {},
            'interfaces/ReadyMap.html': {},
            'interfaces/SavedMap.html': {},
            'todo.html': {},
            'miscellaneous/variables.html': {},
            'additional-documentation/tinynodes-library-docs/ngx-editorjs-readme.html': {}
          }
        }
      ],
      [
        'blocktypes',
        {
          _index: 63,
          title: {},
          body: {
            'interfaces/Block.html': {},
            'interfaces/Header.html': {},
            'interfaces/HeaderBlock.html': {},
            'interfaces/Image.html': {},
            'interfaces/ImageBlock.html': {},
            'interfaces/List.html': {},
            'interfaces/ListBlock.html': {},
            'interfaces/Paragraph.html': {},
            'interfaces/ParagraphBlock.html': {},
            'miscellaneous/typealiases.html': {}
          }
        }
      ],
      ['blur', { _index: 490, title: {}, body: { 'directives/NgxEditorJSDirective.html': {} } }],
      ['body', { _index: 1178, title: {}, body: { 'contributing.html': {} } }],
      [
        'boolean',
        {
          _index: 56,
          title: {},
          body: {
            'interfaces/Block.html': {},
            'interfaces/EditorJSClass.html': {},
            'interfaces/EditorJSInstanceConfig.html': {},
            'interfaces/EditorJSMaterialForm.html': {},
            'interfaces/Header.html': {},
            'interfaces/HeaderBlock.html': {},
            'interfaces/Image.html': {},
            'interfaces/ImageBlock.html': {},
            'interfaces/InjectorApiCallOptions.html': {},
            'interfaces/InjectorApiCallResponse.html': {},
            'interfaces/InjectorMethodOption.html': {},
            'interfaces/List.html': {},
            'interfaces/ListBlock.html': {},
            'interfaces/NgxEditorJSConfig.html': {},
            'directives/NgxEditorJSDirective.html': {},
            'interfaces/NgxEditorJSModuleConfig.html': {},
            'interfaces/Paragraph.html': {},
            'interfaces/ParagraphBlock.html': {}
          }
        }
      ],
      [
        'bootstrap',
        {
          _index: 627,
          title: {},
          body: {
            'modules/NgxEditorJSModule.html': {},
            'modules/NgxEditorjsPluginsModule.html': {},
            'modules/NgxPluginServiceModule.html': {},
            'modules/NgxTinynodesComponentsModule.html': {},
            'modules/NgxTinynodesMatJsonOutputModule.html': {},
            'modules/NgxTinynodesMatTagInputModule.html': {},
            'overview.html': {},
            'additional-documentation/tinynodes-library-docs/ngx-editorjs-readme.html': {}
          }
        }
      ],
      [
        'border',
        {
          _index: 53,
          title: {},
          body: {
            'interfaces/Block.html': {},
            'interfaces/Header.html': {},
            'interfaces/HeaderBlock.html': {},
            'interfaces/Image.html': {},
            'interfaces/ImageBlock.html': {},
            'interfaces/List.html': {},
            'interfaces/ListBlock.html': {},
            'interfaces/Paragraph.html': {},
            'interfaces/ParagraphBlock.html': {}
          }
        }
      ],
      [
        'both',
        {
          _index: 1265,
          title: {},
          body: {
            'contributing.html': {},
            'additional-documentation/tinynodes-library-docs/ngx-editorjs-readme/ngx-editorjs-changelog.html': {},
            'additional-documentation/tinynodes-library-docs/ngx-editorjs-plugins-readme.html': {}
          }
        }
      ],
      [
        'bottom',
        {
          _index: 431,
          title: {},
          body: {
            'interfaces/NgxEditorJSConfig.html': {},
            'directives/NgxEditorJSDirective.html': {},
            'interfaces/NgxEditorJSModuleConfig.html': {},
            'additional-documentation/tinynodes-library-docs/ngx-editorjs-readme.html': {}
          }
        }
      ],
      [
        'box',
        {
          _index: 1374,
          title: {},
          body: { 'index.html': {}, 'additional-documentation/tinynodes-library-docs/ngx-editorjs-readme.html': {} }
        }
      ],
      ['break', { _index: 1118, title: {}, body: { 'changelog.html': {} } }],
      ['breaking', { _index: 1077, title: {}, body: { 'changelog.html': {} } }],
      ['browse', { _index: 1455, title: {}, body: { 'modules.html': {} } }],
      [
        'browser',
        {
          _index: 1329,
          title: {},
          body: {
            'dependencies.html': {},
            'modules.html': {},
            'additional-documentation/tinynodes-library-docs/ngx-editorjs-readme.html': {}
          }
        }
      ],
      [
        'browsermodule',
        {
          _index: 1513,
          title: {},
          body: { 'additional-documentation/tinynodes-library-docs/ngx-editorjs-readme.html': {} }
        }
      ],
      [
        'bug',
        {
          _index: 1110,
          title: {},
          body: {
            'changelog.html': {},
            'additional-documentation/tinynodes-library-docs.html': {},
            'additional-documentation/tinynodes-library-docs/ngx-editorjs-readme/ngx-editorjs-changelog.html': {}
          }
        }
      ],
      ['build', { _index: 1108, title: {}, body: { 'changelog.html': {}, 'contributing.html': {} } }],
      ['bump', { _index: 1075, title: {}, body: { 'changelog.html': {} } }],
      [
        'call',
        {
          _index: 180,
          title: {},
          body: {
            'interfaces/EditorJSClass.html': {},
            'interfaces/EditorJSInstanceConfig.html': {},
            'interfaces/EditorJSMaterialForm.html': {},
            'interfaces/InjectorApiCallOptions.html': {},
            'interfaces/InjectorApiCallResponse.html': {},
            'interfaces/InjectorMethodOption.html': {},
            'injectables/NgxEditorJSService.html': {},
            'additional-documentation/tinynodes-library-docs/ngx-editorjs-readme/ngx-editorjs-changelog.html': {}
          }
        }
      ],
      [
        'called',
        {
          _index: 351,
          title: {},
          body: {
            'interfaces/EditorJSMaterialForm.html': {},
            'directives/NgxEditorJSDirective.html': {},
            'injectables/NgxEditorJSService.html': {}
          }
        }
      ],
      [
        'calling',
        {
          _index: 202,
          title: {},
          body: {
            'interfaces/EditorJSClass.html': {},
            'interfaces/EditorJSInstanceConfig.html': {},
            'interfaces/InjectorApiCallOptions.html': {},
            'interfaces/InjectorApiCallResponse.html': {},
            'interfaces/InjectorMethodOption.html': {},
            'additional-documentation/tinynodes-library-docs/ngx-editorjs-readme/ngx-editorjs-changelog.html': {}
          }
        }
      ],
      [
        'calls',
        {
          _index: 487,
          title: {},
          body: {
            'directives/NgxEditorJSDirective.html': {},
            'injectables/NgxEditorJSService.html': {},
            'changelog.html': {}
          }
        }
      ],
      [
        'caption',
        {
          _index: 52,
          title: {},
          body: {
            'interfaces/Block.html': {},
            'interfaces/Header.html': {},
            'interfaces/HeaderBlock.html': {},
            'interfaces/Image.html': {},
            'interfaces/ImageBlock.html': {},
            'interfaces/List.html': {},
            'interfaces/ListBlock.html': {},
            'interfaces/Paragraph.html': {},
            'interfaces/ParagraphBlock.html': {}
          }
        }
      ],
      ['caret', { _index: 745, title: {}, body: { 'injectables/NgxEditorJSService.html': {} } }],
      [
        'causes',
        {
          _index: 1615,
          title: {},
          body: {
            'additional-documentation/tinynodes-library-docs/ngx-editorjs-plugins-readme/ngx-editorjs-plugins-changelog.html': {}
          }
        }
      ],
      [
        'cd',
        {
          _index: 476,
          title: {},
          body: { 'directives/NgxEditorJSDirective.html': {}, 'components/NgxTinynodesMatJsonOutputComponent.html': {} }
        }
      ],
      [
        'change',
        {
          _index: 148,
          title: {},
          body: {
            'interfaces/ChangeMap.html': {},
            'interfaces/CreateEditorJSOptions.html': {},
            'interfaces/EditorJSChange.html': {},
            'interfaces/EditorJSClass.html': {},
            'interfaces/EditorJSInstanceConfig.html': {},
            'interfaces/EditorJSMaterialForm.html': {},
            'interfaces/EditorMap.html': {},
            'interfaces/InjectorApiCallOptions.html': {},
            'interfaces/InjectorApiCallResponse.html': {},
            'interfaces/InjectorMethodOption.html': {},
            'directives/NgxEditorJSDirective.html': {},
            'injectables/NgxEditorJSService.html': {},
            'interfaces/ReadyMap.html': {},
            'interfaces/SavedMap.html': {},
            'changelog.html': {},
            'contributing.html': {}
          }
        }
      ],
      [
        'changed',
        {
          _index: 516,
          title: {},
          body: {
            'directives/NgxEditorJSDirective.html': {},
            'additional-documentation/tinynodes-library-docs/ngx-editorjs-readme/ngx-editorjs-changelog.html': {},
            'additional-documentation/tinynodes-library-docs/ngx-editorjs-plugins-readme/ngx-editorjs-plugins-changelog.html': {}
          }
        }
      ],
      [
        'changedetection',
        {
          _index: 264,
          title: {},
          body: { 'interfaces/EditorJSMaterialForm.html': {}, 'components/NgxTinynodesMatJsonOutputComponent.html': {} }
        }
      ],
      [
        'changedetectionstrategy',
        {
          _index: 221,
          title: {},
          body: { 'interfaces/EditorJSMaterialForm.html': {}, 'components/NgxTinynodesMatJsonOutputComponent.html': {} }
        }
      ],
      [
        'changedetectionstrategy.onpush',
        {
          _index: 265,
          title: {},
          body: { 'interfaces/EditorJSMaterialForm.html': {}, 'components/NgxTinynodesMatJsonOutputComponent.html': {} }
        }
      ],
      [
        'changedetectorref',
        {
          _index: 222,
          title: {},
          body: {
            'interfaces/EditorJSMaterialForm.html': {},
            'directives/NgxEditorJSDirective.html': {},
            'components/NgxTinynodesMatJsonOutputComponent.html': {}
          }
        }
      ],
      [
        'changelog',
        {
          _index: 1042,
          title: {
            'changelog.html': {},
            'additional-documentation/tinynodes-library-docs/ngx-editorjs-readme/ngx-editorjs-changelog.html': {},
            'additional-documentation/tinynodes-library-docs/ngx-editorjs-plugins-readme/ngx-editorjs-plugins-changelog.html': {}
          },
          body: {
            'changelog.html': {},
            'index.html': {},
            'additional-documentation/tinynodes-library-docs.html': {},
            'additional-documentation/tinynodes-library-docs/ngx-editorjs-readme.html': {},
            'additional-documentation/tinynodes-library-docs/ngx-editorjs-readme/ngx-editorjs-changelog.html': {},
            'additional-documentation/tinynodes-library-docs/ngx-editorjs-plugins-readme/ngx-editorjs-plugins-changelog.html': {}
          }
        }
      ],
      [
        'changelog.md',
        {
          _index: 1577,
          title: {},
          body: {
            'additional-documentation/tinynodes-library-docs/ngx-editorjs-readme/ngx-editorjs-changelog.html': {}
          }
        }
      ],
      ['changelogs', { _index: 1046, title: {}, body: { 'changelog.html': {} } }],
      [
        'changemap',
        {
          _index: 130,
          title: { 'interfaces/ChangeMap.html': {} },
          body: {
            'interfaces/ChangeMap.html': {},
            'interfaces/EditorJSChange.html': {},
            'interfaces/EditorMap.html': {},
            'injectables/NgxEditorJSService.html': {},
            'interfaces/ReadyMap.html': {},
            'interfaces/SavedMap.html': {}
          }
        }
      ],
      [
        'changes',
        {
          _index: 544,
          title: {},
          body: {
            'directives/NgxEditorJSDirective.html': {},
            'changelog.html': {},
            'contributing.html': {},
            'todo.html': {},
            'additional-documentation/tinynodes-library-docs/ngx-editorjs-readme.html': {},
            'additional-documentation/tinynodes-library-docs/ngx-editorjs-readme/ngx-editorjs-changelog.html': {},
            'additional-documentation/tinynodes-library-docs/ngx-editorjs-plugins-readme/ngx-editorjs-plugins-changelog.html': {}
          }
        }
      ],
      ['changes.blocks', { _index: 581, title: {}, body: { 'directives/NgxEditorJSDirective.html': {} } }],
      ['changes.blocks.firstchange', { _index: 583, title: {}, body: { 'directives/NgxEditorJSDirective.html': {} } }],
      [
        'changes.blocks.previousvalue',
        { _index: 582, title: {}, body: { 'directives/NgxEditorJSDirective.html': {} } }
      ],
      ['changeskeys', { _index: 588, title: {}, body: { 'directives/NgxEditorJSDirective.html': {} } }],
      ['changeskeys.includes(key', { _index: 594, title: {}, body: { 'directives/NgxEditorJSDirective.html': {} } }],
      ['charge', { _index: 1402, title: {}, body: { 'license.html': {} } }],
      ['ci', { _index: 1463, title: {}, body: { 'todo.html': {} } }],
      [
        'circular',
        {
          _index: 1594,
          title: {},
          body: {
            'additional-documentation/tinynodes-library-docs/ngx-editorjs-plugins-readme.html': {},
            'additional-documentation/tinynodes-library-docs/ngx-editorjs-plugins-readme/ngx-editorjs-plugins-changelog.html': {}
          }
        }
      ],
      ['circumstances', { _index: 1295, title: {}, body: { 'contributing.html': {} } }],
      ['claim', { _index: 1445, title: {}, body: { 'license.html': {} } }],
      ['clarified', { _index: 1282, title: {}, body: { 'contributing.html': {} } }],
      ['clarifying', { _index: 1238, title: {}, body: { 'contributing.html': {} } }],
      [
        'clash',
        {
          _index: 1557,
          title: {},
          body: {
            'additional-documentation/tinynodes-library-docs/ngx-editorjs-readme/ngx-editorjs-changelog.html': {}
          }
        }
      ],
      [
        'class',
        {
          _index: 165,
          title: { 'classes/FixedHeader.html': {} },
          body: {
            'interfaces/EditorJSClass.html': {},
            'interfaces/EditorJSInstanceConfig.html': {},
            'interfaces/EditorJSMaterialForm.html': {},
            'classes/FixedHeader.html': {},
            'interfaces/InjectorApiCallOptions.html': {},
            'interfaces/InjectorApiCallResponse.html': {},
            'interfaces/InjectorMethodOption.html': {},
            'directives/NgxEditorJSDirective.html': {},
            'modules/NgxEditorJSModule.html': {},
            'injectables/NgxEditorJSPluginService.html': {},
            'injectables/NgxEditorJSService.html': {},
            'modules/NgxEditorjsPluginsModule.html': {},
            'modules/NgxPluginServiceModule.html': {},
            'modules/NgxTinynodesComponentsModule.html': {},
            'components/NgxTinynodesMatJsonOutputComponent.html': {},
            'modules/NgxTinynodesMatJsonOutputModule.html': {},
            'modules/NgxTinynodesMatTagInputModule.html': {},
            'modules/PluginCodeModule.html': {},
            'modules/PluginHeaderModule.html': {},
            'modules/PluginImageModule.html': {},
            'modules/PluginInlineCodeModule.html': {},
            'modules/PluginLinkModule.html': {},
            'modules/PluginListModule.html': {},
            'modules/PluginMarkerModule.html': {},
            'modules/PluginParagraphModule.html': {},
            'modules/PluginSimpleImageModule.html': {},
            'miscellaneous/functions.html': {},
            'overview.html': {},
            'miscellaneous/variables.html': {},
            'additional-documentation/tinynodes-library-docs/ngx-editorjs-readme.html': {},
            'additional-documentation/tinynodes-library-docs/ngx-editorjs-readme/ngx-editorjs-changelog.html': {},
            'additional-documentation/tinynodes-library-docs/ngx-editorjs-plugins-readme.html': {},
            'additional-documentation/tinynodes-library-docs/ngx-editorjs-plugins-readme/ngx-editorjs-plugins-changelog.html': {}
          }
        }
      ],
      ['classes', { _index: 380, title: {}, body: { 'classes/FixedHeader.html': {}, 'changelog.html': {} } }],
      ['clean', { _index: 889, title: {}, body: { 'injectables/NgxEditorJSService.html': {} } }],
      ['cleaning', { _index: 888, title: {}, body: { 'injectables/NgxEditorJSService.html': {} } }],
      ['cleanupsubjects(options', { _index: 890, title: {}, body: { 'injectables/NgxEditorJSService.html': {} } }],
      ['clear', { _index: 727, title: {}, body: { 'injectables/NgxEditorJSService.html': {} } }],
      ['clear(options', { _index: 749, title: {}, body: { 'injectables/NgxEditorJSService.html': {} } }],
      [
        'click',
        {
          _index: 336,
          title: {},
          body: { 'interfaces/EditorJSMaterialForm.html': {}, 'directives/NgxEditorJSDirective.html': {} }
        }
      ],
      [
        'cluster_ngxeditorjsmodule',
        { _index: 629, title: {}, body: { 'modules/NgxEditorJSModule.html': {}, 'overview.html': {} } }
      ],
      [
        'cluster_ngxeditorjsmodule_declarations',
        { _index: 630, title: {}, body: { 'modules/NgxEditorJSModule.html': {}, 'overview.html': {} } }
      ],
      [
        'cluster_ngxeditorjsmodule_exports',
        { _index: 632, title: {}, body: { 'modules/NgxEditorJSModule.html': {}, 'overview.html': {} } }
      ],
      [
        'cluster_ngxeditorjsmodule_imports',
        { _index: 631, title: {}, body: { 'modules/NgxEditorJSModule.html': {}, 'overview.html': {} } }
      ],
      [
        'cluster_ngxeditorjsmodule_providers',
        { _index: 633, title: {}, body: { 'modules/NgxEditorJSModule.html': {}, 'overview.html': {} } }
      ],
      [
        'cluster_ngxeditorjspluginsmodule',
        { _index: 905, title: {}, body: { 'modules/NgxEditorjsPluginsModule.html': {}, 'overview.html': {} } }
      ],
      [
        'cluster_ngxeditorjspluginsmodule_exports',
        { _index: 907, title: {}, body: { 'modules/NgxEditorjsPluginsModule.html': {}, 'overview.html': {} } }
      ],
      [
        'cluster_ngxeditorjspluginsmodule_imports',
        { _index: 906, title: {}, body: { 'modules/NgxEditorjsPluginsModule.html': {}, 'overview.html': {} } }
      ],
      [
        'cluster_ngxpluginservicemodule',
        { _index: 939, title: {}, body: { 'modules/NgxPluginServiceModule.html': {}, 'overview.html': {} } }
      ],
      [
        'cluster_ngxpluginservicemodule_providers',
        { _index: 940, title: {}, body: { 'modules/NgxPluginServiceModule.html': {}, 'overview.html': {} } }
      ],
      [
        'cluster_ngxtinynodescomponentsmodule',
        { _index: 946, title: {}, body: { 'modules/NgxTinynodesComponentsModule.html': {}, 'overview.html': {} } }
      ],
      [
        'cluster_ngxtinynodescomponentsmodule_exports',
        { _index: 948, title: {}, body: { 'modules/NgxTinynodesComponentsModule.html': {}, 'overview.html': {} } }
      ],
      [
        'cluster_ngxtinynodescomponentsmodule_imports',
        { _index: 947, title: {}, body: { 'modules/NgxTinynodesComponentsModule.html': {}, 'overview.html': {} } }
      ],
      [
        'cluster_ngxtinynodesmatjsonoutputmodule',
        { _index: 988, title: {}, body: { 'modules/NgxTinynodesMatJsonOutputModule.html': {}, 'overview.html': {} } }
      ],
      [
        'cluster_ngxtinynodesmatjsonoutputmodule_declarations',
        { _index: 989, title: {}, body: { 'modules/NgxTinynodesMatJsonOutputModule.html': {}, 'overview.html': {} } }
      ],
      [
        'cluster_ngxtinynodesmatjsonoutputmodule_exports',
        { _index: 990, title: {}, body: { 'modules/NgxTinynodesMatJsonOutputModule.html': {}, 'overview.html': {} } }
      ],
      [
        'cluster_ngxtinynodesmattaginputmodule',
        { _index: 997, title: {}, body: { 'modules/NgxTinynodesMatTagInputModule.html': {}, 'overview.html': {} } }
      ],
      [
        'cluster_ngxtinynodesmattaginputmodule_declarations',
        { _index: 998, title: {}, body: { 'modules/NgxTinynodesMatTagInputModule.html': {}, 'overview.html': {} } }
      ],
      [
        'cluster_ngxtinynodesmattaginputmodule_exports',
        { _index: 1000, title: {}, body: { 'modules/NgxTinynodesMatTagInputModule.html': {}, 'overview.html': {} } }
      ],
      [
        'cluster_ngxtinynodesmattaginputmodule_ngxtinynodesmattaginputcomponent_providers',
        { _index: 999, title: {}, body: { 'modules/NgxTinynodesMatTagInputModule.html': {}, 'overview.html': {} } }
      ],
      [
        'code',
        {
          _index: 1010,
          title: {},
          body: {
            'modules/PluginCodeModule.html': {},
            'modules/PluginInlineCodeModule.html': {},
            'contributing.html': {}
          }
        }
      ],
      ['code.module', { _index: 938, title: {}, body: { 'modules/NgxEditorjsPluginsModule.html': {} } }],
      ['code.module.ts', { _index: 1018, title: {}, body: { 'modules/PluginInlineCodeModule.html': {} } }],
      [
        'code/inline',
        {
          _index: 937,
          title: {},
          body: { 'modules/NgxEditorjsPluginsModule.html': {}, 'modules/PluginInlineCodeModule.html': {} }
        }
      ],
      ['coercebooleanproperty', { _index: 218, title: {}, body: { 'interfaces/EditorJSMaterialForm.html': {} } }],
      [
        'coercebooleanproperty(disabled',
        { _index: 306, title: {}, body: { 'interfaces/EditorJSMaterialForm.html': {} } }
      ],
      [
        'coercebooleanproperty(focused',
        { _index: 293, title: {}, body: { 'interfaces/EditorJSMaterialForm.html': {} } }
      ],
      [
        'coercebooleanproperty(required',
        { _index: 300, title: {}, body: { 'interfaces/EditorJSMaterialForm.html': {} } }
      ],
      ['collapse', { _index: 980, title: {}, body: { 'components/NgxTinynodesMatJsonOutputComponent.html': {} } }],
      ['collection', { _index: 641, title: {}, body: { 'modules/NgxEditorJSModule.html': {}, 'index.html': {} } }],
      ['comments', { _index: 1222, title: {}, body: { 'contributing.html': {} } }],
      ['commits', { _index: 1249, title: {}, body: { 'contributing.html': {} } }],
      ['common', { _index: 1113, title: {}, body: { 'changelog.html': {} } }],
      [
        'commonmodule',
        {
          _index: 653,
          title: {},
          body: {
            'modules/NgxEditorJSModule.html': {},
            'modules/NgxEditorjsPluginsModule.html': {},
            'modules/NgxTinynodesMatJsonOutputModule.html': {},
            'modules/NgxTinynodesMatTagInputModule.html': {}
          }
        }
      ],
      ['community', { _index: 1171, title: {}, body: { 'contributing.html': {} } }],
      [
        'compatible',
        {
          _index: 254,
          title: {},
          body: {
            'interfaces/EditorJSMaterialForm.html': {},
            'index.html': {},
            'additional-documentation/tinynodes-library-docs/ngx-editorjs-readme.html': {}
          }
        }
      ],
      ['complaints', { _index: 1290, title: {}, body: { 'contributing.html': {} } }],
      ['completly', { _index: 1096, title: {}, body: { 'changelog.html': {} } }],
      [
        'compodoc',
        {
          _index: 1500,
          title: {},
          body: {
            'additional-documentation/tinynodes-library-docs.html': {},
            'additional-documentation/tinynodes-library-docs/ngx-editorjs-readme/ngx-editorjs-changelog.html': {}
          }
        }
      ],
      [
        'component',
        {
          _index: 223,
          title: { 'components/NgxTinynodesMatJsonOutputComponent.html': {} },
          body: {
            'interfaces/EditorJSMaterialForm.html': {},
            'directives/NgxEditorJSDirective.html': {},
            'components/NgxTinynodesMatJsonOutputComponent.html': {},
            'changelog.html': {},
            'index.html': {},
            'todo.html': {},
            'miscellaneous/variables.html': {},
            'additional-documentation/tinynodes-library-docs/ngx-editorjs-readme.html': {},
            'additional-documentation/tinynodes-library-docs/ngx-editorjs-readme/ngx-editorjs-changelog.html': {}
          }
        }
      ],
      [
        'component_template',
        { _index: 982, title: {}, body: { 'components/NgxTinynodesMatJsonOutputComponent.html': {} } }
      ],
      [
        'components',
        {
          _index: 331,
          title: {},
          body: {
            'interfaces/EditorJSMaterialForm.html': {},
            'directives/NgxEditorJSDirective.html': {},
            'components/NgxTinynodesMatJsonOutputComponent.html': {},
            'changelog.html': {},
            'index.html': {},
            'overview.html': {},
            'additional-documentation/tinynodes-library-docs/ngx-editorjs-readme.html': {},
            'additional-documentation/tinynodes-library-docs/ngx-editorjs-readme/ngx-editorjs-changelog.html': {}
          }
        }
      ],
      ['components.module.ts', { _index: 953, title: {}, body: { 'modules/NgxTinynodesComponentsModule.html': {} } }],
      ['components/mat', { _index: 954, title: {}, body: { 'modules/NgxTinynodesComponentsModule.html': {} } }],
      [
        'components/src/lib/components/mat',
        {
          _index: 968,
          title: {},
          body: {
            'components/NgxTinynodesMatJsonOutputComponent.html': {},
            'modules/NgxTinynodesMatJsonOutputModule.html': {},
            'modules/NgxTinynodesMatTagInputModule.html': {},
            'miscellaneous/variables.html': {}
          }
        }
      ],
      ['components/src/lib/ngx', { _index: 952, title: {}, body: { 'modules/NgxTinynodesComponentsModule.html': {} } }],
      [
        'components/src/lib/types/components.ts',
        { _index: 962, title: {}, body: { 'interfaces/NgxTinynodesMatFieldComponent.html': {} } }
      ],
      ['components/src/test.ts', { _index: 1491, title: {}, body: { 'miscellaneous/variables.html': {} } }],
      ['conditions', { _index: 1424, title: {}, body: { 'license.html': {} } }],
      ['conduct', { _index: 1136, title: {}, body: { 'contributing.html': {} } }],
      ['confidentiality', { _index: 1298, title: {}, body: { 'contributing.html': {} } }],
      [
        'config',
        {
          _index: 109,
          title: {},
          body: {
            'interfaces/BlockData.html': {},
            'interfaces/CreateEditorJSOptions.html': {},
            'classes/FixedHeader.html': {},
            'interfaces/NgxEditorJSConfig.html': {},
            'directives/NgxEditorJSDirective.html': {},
            'modules/NgxEditorJSModule.html': {},
            'interfaces/NgxEditorJSModuleConfig.html': {},
            'injectables/NgxEditorJSService.html': {},
            'interfaces/PluginConfig.html': {},
            'interfaces/PluginConfigMap.html': {},
            'interfaces/ToolSettingsMap.html': {},
            'miscellaneous/functions.html': {},
            'todo.html': {},
            'miscellaneous/variables.html': {},
            'additional-documentation/tinynodes-library-docs/ngx-editorjs-readme.html': {},
            'additional-documentation/tinynodes-library-docs/ngx-editorjs-readme/ngx-editorjs-changelog.html': {}
          }
        }
      ],
      ['config.data', { _index: 620, title: {}, body: { 'directives/NgxEditorJSDirective.html': {} } }],
      [
        'config.ts',
        { _index: 1352, title: {}, body: { 'miscellaneous/functions.html': {}, 'miscellaneous/variables.html': {} } }
      ],
      ['config/editor', { _index: 559, title: {}, body: { 'directives/NgxEditorJSDirective.html': {} } }],
      ['config/module', { _index: 661, title: {}, body: { 'modules/NgxEditorJSModule.html': {} } }],
      [
        'configs',
        {
          _index: 125,
          title: {},
          body: {
            'interfaces/BlockData.html': {},
            'interfaces/PluginConfig.html': {},
            'interfaces/PluginConfigMap.html': {},
            'interfaces/ToolSettingsMap.html': {}
          }
        }
      ],
      [
        'configuration',
        {
          _index: 95,
          title: {},
          body: {
            'interfaces/BlockData.html': {},
            'interfaces/CreateEditorJSOptions.html': {},
            'interfaces/EditorJSClass.html': {},
            'interfaces/EditorJSInstanceConfig.html': {},
            'interfaces/InjectorApiCallOptions.html': {},
            'interfaces/InjectorApiCallResponse.html': {},
            'interfaces/InjectorMethodOption.html': {},
            'interfaces/NgxEditorJSConfig.html': {},
            'directives/NgxEditorJSDirective.html': {},
            'modules/NgxEditorJSModule.html': {},
            'interfaces/NgxEditorJSModuleConfig.html': {},
            'injectables/NgxEditorJSPluginService.html': {},
            'injectables/NgxEditorJSService.html': {},
            'interfaces/PluginConfig.html': {},
            'interfaces/PluginConfigMap.html': {},
            'interfaces/ToolSettingsMap.html': {},
            'changelog.html': {},
            'miscellaneous/functions.html': {},
            'additional-documentation/tinynodes-library-docs/ngx-editorjs-readme.html': {},
            'additional-documentation/tinynodes-library-docs/ngx-editorjs-readme/ngx-editorjs-changelog.html': {},
            'additional-documentation/tinynodes-library-docs/ngx-editorjs-plugins-readme.html': {},
            'additional-documentation/tinynodes-library-docs/ngx-editorjs-plugins-readme/ngx-editorjs-plugins-changelog.html': {}
          }
        }
      ],
      [
        'configurations',
        {
          _index: 691,
          title: {},
          body: {
            'injectables/NgxEditorJSPluginService.html': {},
            'miscellaneous/functions.html': {},
            'additional-documentation/tinynodes-library-docs/ngx-editorjs-readme.html': {},
            'additional-documentation/tinynodes-library-docs/ngx-editorjs-readme/ngx-editorjs-changelog.html': {},
            'additional-documentation/tinynodes-library-docs/ngx-editorjs-plugins-readme.html': {}
          }
        }
      ],
      ['configure', { _index: 751, title: {}, body: { 'injectables/NgxEditorJSService.html': {} } }],
      [
        'configured',
        {
          _index: 1590,
          title: {},
          body: {
            'additional-documentation/tinynodes-library-docs/ngx-editorjs-readme/ngx-editorjs-changelog.html': {}
          }
        }
      ],
      [
        'configuring',
        {
          _index: 1521,
          title: {},
          body: { 'additional-documentation/tinynodes-library-docs/ngx-editorjs-readme.html': {} }
        }
      ],
      [
        'conform',
        {
          _index: 1596,
          title: {},
          body: { 'additional-documentation/tinynodes-library-docs/ngx-editorjs-plugins-readme.html': {} }
        }
      ],
      ['connection', { _index: 1452, title: {}, body: { 'license.html': {} } }],
      ['considered', { _index: 1232, title: {}, body: { 'contributing.html': {} } }],
      [
        'console.log',
        {
          _index: 1563,
          title: {},
          body: {
            'additional-documentation/tinynodes-library-docs/ngx-editorjs-readme/ngx-editorjs-changelog.html': {}
          }
        }
      ],
      [
        'const',
        {
          _index: 119,
          title: {},
          body: {
            'interfaces/BlockData.html': {},
            'interfaces/EditorJSClass.html': {},
            'interfaces/EditorJSInstanceConfig.html': {},
            'interfaces/EditorJSMaterialForm.html': {},
            'classes/FixedHeader.html': {},
            'interfaces/InjectorApiCallOptions.html': {},
            'interfaces/InjectorApiCallResponse.html': {},
            'interfaces/InjectorMethodOption.html': {},
            'interfaces/NgxEditorJSConfig.html': {},
            'directives/NgxEditorJSDirective.html': {},
            'interfaces/NgxEditorJSModuleConfig.html': {},
            'injectables/NgxEditorJSService.html': {},
            'interfaces/PluginConfig.html': {},
            'interfaces/PluginConfigMap.html': {},
            'modules/PluginHeaderModule.html': {},
            'interfaces/ToolSettingsMap.html': {}
          }
        }
      ],
      ['constructive', { _index: 1205, title: {}, body: { 'contributing.html': {} } }],
      [
        'constructor',
        {
          _index: 340,
          title: {},
          body: {
            'interfaces/EditorJSMaterialForm.html': {},
            'classes/FixedHeader.html': {},
            'directives/NgxEditorJSDirective.html': {},
            'modules/NgxEditorJSModule.html': {},
            'injectables/NgxEditorJSPluginService.html': {},
            'injectables/NgxEditorJSService.html': {},
            'components/NgxTinynodesMatJsonOutputComponent.html': {}
          }
        }
      ],
      [
        'constructor(@inject(pluginclasses',
        { _index: 705, title: {}, body: { 'injectables/NgxEditorJSPluginService.html': {} } }
      ],
      [
        'constructor(cd',
        { _index: 973, title: {}, body: { 'components/NgxTinynodesMatJsonOutputComponent.html': {} } }
      ],
      [
        'constructor(config',
        { _index: 384, title: {}, body: { 'classes/FixedHeader.html': {}, 'modules/PluginHeaderModule.html': {} } }
      ],
      ['constructor(editorjs', { _index: 733, title: {}, body: { 'injectables/NgxEditorJSService.html': {} } }],
      ['constructor(el', { _index: 474, title: {}, body: { 'directives/NgxEditorJSDirective.html': {} } }],
      [
        'constructor(pluginconfigmap',
        { _index: 686, title: {}, body: { 'injectables/NgxEditorJSPluginService.html': {} } }
      ],
      [
        'constructor(private',
        { _index: 978, title: {}, body: { 'components/NgxTinynodesMatJsonOutputComponent.html': {} } }
      ],
      ['contacting', { _index: 1287, title: {}, body: { 'contributing.html': {} } }],
      [
        'container',
        {
          _index: 335,
          title: {},
          body: {
            'interfaces/EditorJSMaterialForm.html': {},
            'injectables/NgxEditorJSService.html': {},
            'contributing.html': {}
          }
        }
      ],
      [
        'containers',
        {
          _index: 1505,
          title: {},
          body: { 'additional-documentation/tinynodes-library-docs/ngx-editorjs-readme.html': {} }
        }
      ],
      ['containers/editorjs', { _index: 662, title: {}, body: { 'modules/NgxEditorJSModule.html': {} } }],
      [
        'containers/editorjs/editorjs.component',
        { _index: 664, title: {}, body: { 'modules/NgxEditorJSModule.html': {} } }
      ],
      [
        'containing',
        {
          _index: 132,
          title: {},
          body: {
            'interfaces/ChangeMap.html': {},
            'interfaces/EditorJSChange.html': {},
            'interfaces/EditorMap.html': {},
            'interfaces/ReadyMap.html': {},
            'interfaces/SavedMap.html': {}
          }
        }
      ],
      ['contains', { _index: 723, title: {}, body: { 'injectables/NgxEditorJSService.html': {} } }],
      [
        'content',
        {
          _index: 497,
          title: {},
          body: {
            'directives/NgxEditorJSDirective.html': {},
            'additional-documentation/tinynodes-library-docs/ngx-editorjs-readme.html': {}
          }
        }
      ],
      ['context', { _index: 1480, title: {}, body: { 'miscellaneous/variables.html': {} } }],
      ['continue', { _index: 1122, title: {}, body: { 'changelog.html': {} } }],
      ['contract', { _index: 1449, title: {}, body: { 'license.html': {} } }],
      ['contributes', { _index: 1194, title: {}, body: { 'contributing.html': {} } }],
      ['contributing', { _index: 1127, title: { 'contributing.html': {} }, body: { 'contributing.html': {} } }],
      ['contributions', { _index: 1252, title: {}, body: { 'contributing.html': {} } }],
      ['contributor', { _index: 1257, title: {}, body: { 'contributing.html': {} } }],
      ['contributors', { _index: 1168, title: {}, body: { 'contributing.html': {} } }],
      [
        'control',
        {
          _index: 271,
          title: {},
          body: {
            'interfaces/EditorJSMaterialForm.html': {},
            'directives/NgxEditorJSDirective.html': {},
            'modules/NgxEditorJSModule.html': {},
            'changelog.html': {},
            'todo.html': {},
            'additional-documentation/tinynodes-library-docs/ngx-editorjs-readme/ngx-editorjs-changelog.html': {}
          }
        }
      ],
      [
        'controlling',
        {
          _index: 1569,
          title: {},
          body: {
            'additional-documentation/tinynodes-library-docs/ngx-editorjs-readme/ngx-editorjs-changelog.html': {}
          }
        }
      ],
      ['controls', { _index: 1475, title: {}, body: { 'todo.html': {} } }],
      ['controltype', { _index: 272, title: {}, body: { 'interfaces/EditorJSMaterialForm.html': {} } }],
      [
        'controlvalueaccessor',
        {
          _index: 963,
          title: {},
          body: {
            'interfaces/NgxTinynodesMatFieldComponent.html': {},
            'additional-documentation/tinynodes-library-docs/ngx-editorjs-readme/ngx-editorjs-changelog.html': {}
          }
        }
      ],
      ['copies', { _index: 1419, title: {}, body: { 'license.html': {} } }],
      ['copy', { _index: 1405, title: {}, body: { 'license.html': {} } }],
      ['copyright', { _index: 1399, title: {}, body: { 'license.html': {} } }],
      [
        'core',
        {
          _index: 753,
          title: {},
          body: {
            'injectables/NgxEditorJSService.html': {},
            'changelog.html': {},
            'dependencies.html': {},
            'additional-documentation/tinynodes-library-docs/ngx-editorjs-readme/ngx-editorjs-changelog.html': {},
            'additional-documentation/tinynodes-library-docs/ngx-editorjs-plugins-readme.html': {},
            'additional-documentation/tinynodes-library-docs/ngx-editorjs-plugins-readme/ngx-editorjs-plugins-changelog.html': {}
          }
        }
      ],
      ['coreapi', { _index: 1468, title: {}, body: { 'todo.html': {} } }],
      ['corrective', { _index: 1243, title: {}, body: { 'contributing.html': {} } }],
      ['correctly', { _index: 1501, title: {}, body: { 'additional-documentation/tinynodes-library-docs.html': {} } }],
      ['covenant', { _index: 1317, title: {}, body: { 'contributing.html': {} } }],
      ['covenant.org/version/1/4', { _index: 1320, title: {}, body: { 'contributing.html': {} } }],
      ['cover', { _index: 1115, title: {}, body: { 'changelog.html': {} } }],
      [
        'create',
        {
          _index: 529,
          title: {},
          body: {
            'directives/NgxEditorJSDirective.html': {},
            'injectables/NgxEditorJSService.html': {},
            'miscellaneous/functions.html': {},
            'additional-documentation/tinynodes-library-docs/ngx-editorjs-readme.html': {},
            'additional-documentation/tinynodes-library-docs/ngx-editorjs-readme/ngx-editorjs-changelog.html': {}
          }
        }
      ],
      ['createconfig', { _index: 611, title: {}, body: { 'directives/NgxEditorJSDirective.html': {} } }],
      [
        'created',
        {
          _index: 528,
          title: {},
          body: {
            'directives/NgxEditorJSDirective.html': {},
            'injectables/NgxEditorJSService.html': {},
            'changelog.html': {},
            'additional-documentation/tinynodes-library-docs/ngx-editorjs-plugins-readme/ngx-editorjs-plugins-changelog.html': {}
          }
        }
      ],
      ['createeditor', { _index: 460, title: {}, body: { 'directives/NgxEditorJSDirective.html': {} } }],
      ['createeditor(config', { _index: 523, title: {}, body: { 'directives/NgxEditorJSDirective.html': {} } }],
      [
        'createeditorjsconfig',
        {
          _index: 558,
          title: {},
          body: {
            'directives/NgxEditorJSDirective.html': {},
            'miscellaneous/functions.html': {},
            'additional-documentation/tinynodes-library-docs/ngx-editorjs-readme/ngx-editorjs-changelog.html': {}
          }
        }
      ],
      ['createeditorjsconfig(inputconfig', { _index: 1357, title: {}, body: { 'miscellaneous/functions.html': {} } }],
      [
        'createeditorjsinstance',
        { _index: 670, title: {}, body: { 'modules/NgxEditorJSModule.html': {}, 'miscellaneous/functions.html': {} } }
      ],
      [
        'createeditorjsinstance(editorjs',
        { _index: 667, title: {}, body: { 'modules/NgxEditorJSModule.html': {}, 'miscellaneous/functions.html': {} } }
      ],
      [
        'createeditorjsoptions',
        {
          _index: 152,
          title: { 'interfaces/CreateEditorJSOptions.html': {} },
          body: { 'interfaces/CreateEditorJSOptions.html': {}, 'injectables/NgxEditorJSService.html': {} }
        }
      ],
      ['createinstance', { _index: 731, title: {}, body: { 'injectables/NgxEditorJSService.html': {} } }],
      ['createinstance(options', { _index: 754, title: {}, body: { 'injectables/NgxEditorJSService.html': {} } }],
      [
        'createmoduleconfig',
        { _index: 660, title: {}, body: { 'modules/NgxEditorJSModule.html': {}, 'miscellaneous/functions.html': {} } }
      ],
      ['createmoduleconfig(config', { _index: 1361, title: {}, body: { 'miscellaneous/functions.html': {} } }],
      ['createonchange', { _index: 803, title: {}, body: { 'injectables/NgxEditorJSService.html': {} } }],
      ['createonchange(options', { _index: 877, title: {}, body: { 'injectables/NgxEditorJSService.html': {} } }],
      ['createonready', { _index: 808, title: {}, body: { 'injectables/NgxEditorJSService.html': {} } }],
      ['createonready(options', { _index: 879, title: {}, body: { 'injectables/NgxEditorJSService.html': {} } }],
      [
        'createpluginconfig',
        {
          _index: 942,
          title: {},
          body: {
            'modules/NgxPluginServiceModule.html': {},
            'modules/PluginCodeModule.html': {},
            'modules/PluginImageModule.html': {},
            'modules/PluginLinkModule.html': {},
            'modules/PluginListModule.html': {},
            'modules/PluginMarkerModule.html': {},
            'modules/PluginSimpleImageModule.html': {},
            'miscellaneous/functions.html': {}
          }
        }
      ],
      ['createpluginconfig(pluginconfigs', { _index: 1363, title: {}, body: { 'miscellaneous/functions.html': {} } }],
      [
        'creates',
        {
          _index: 169,
          title: {},
          body: {
            'interfaces/EditorJSClass.html': {},
            'interfaces/EditorJSInstanceConfig.html': {},
            'interfaces/InjectorApiCallOptions.html': {},
            'interfaces/InjectorApiCallResponse.html': {},
            'interfaces/InjectorMethodOption.html': {},
            'directives/NgxEditorJSDirective.html': {},
            'injectables/NgxEditorJSService.html': {},
            'miscellaneous/functions.html': {},
            'additional-documentation/tinynodes-library-docs/ngx-editorjs-plugins-readme.html': {}
          }
        }
      ],
      [
        'creating',
        {
          _index: 175,
          title: {},
          body: {
            'interfaces/EditorJSClass.html': {},
            'interfaces/EditorJSInstanceConfig.html': {},
            'interfaces/InjectorApiCallOptions.html': {},
            'interfaces/InjectorApiCallResponse.html': {},
            'interfaces/InjectorMethodOption.html': {},
            'contributing.html': {},
            'additional-documentation/tinynodes-library-docs/ngx-editorjs-plugins-readme.html': {}
          }
        }
      ],
      [
        'creation',
        {
          _index: 421,
          title: {},
          body: {
            'interfaces/NgxEditorJSConfig.html': {},
            'interfaces/NgxEditorJSModuleConfig.html': {},
            'changelog.html': {},
            'additional-documentation/tinynodes-library-docs/ngx-editorjs-readme/ngx-editorjs-changelog.html': {}
          }
        }
      ],
      ['criticism', { _index: 1206, title: {}, body: { 'contributing.html': {} } }],
      ['ctrl+shift+c', { _index: 1022, title: {}, body: { 'modules/PluginInlineCodeModule.html': {} } }],
      ['ctrl+shift+m', { _index: 1030, title: {}, body: { 'modules/PluginMarkerModule.html': {} } }],
      [
        'current',
        { _index: 772, title: {}, body: { 'injectables/NgxEditorJSService.html': {}, 'changelog.html': {} } }
      ],
      [
        'currently',
        {
          _index: 79,
          title: {},
          body: {
            'interfaces/BlockData.html': {},
            'interfaces/PluginConfig.html': {},
            'interfaces/PluginConfigMap.html': {},
            'interfaces/ToolSettingsMap.html': {},
            'changelog.html': {},
            'miscellaneous/enumerations.html': {},
            'additional-documentation/tinynodes-library-docs.html': {},
            'additional-documentation/tinynodes-library-docs/ngx-editorjs-plugins-readme.html': {}
          }
        }
      ],
      [
        'custom',
        {
          _index: 30,
          title: {},
          body: {
            'interfaces/Block.html': {},
            'interfaces/BlockData.html': {},
            'interfaces/Header.html': {},
            'interfaces/HeaderBlock.html': {},
            'interfaces/Image.html': {},
            'interfaces/ImageBlock.html': {},
            'interfaces/List.html': {},
            'interfaces/ListBlock.html': {},
            'interfaces/Paragraph.html': {},
            'interfaces/ParagraphBlock.html': {},
            'interfaces/PluginConfig.html': {},
            'interfaces/PluginConfigMap.html': {},
            'interfaces/ToolSettingsMap.html': {},
            'miscellaneous/typealiases.html': {},
            'additional-documentation/tinynodes-library-docs/ngx-editorjs-readme.html': {},
            'additional-documentation/tinynodes-library-docs/ngx-editorjs-readme/ngx-editorjs-changelog.html': {}
          }
        }
      ],
      [
        'cycle',
        {
          _index: 362,
          title: {},
          body: {
            'interfaces/EditorJSMaterialForm.html': {},
            'index.html': {},
            'additional-documentation/tinynodes-library-docs/ngx-editorjs-readme.html': {}
          }
        }
      ],
      [
        'cycles',
        {
          _index: 1550,
          title: {},
          body: {
            'additional-documentation/tinynodes-library-docs/ngx-editorjs-readme/ngx-editorjs-changelog.html': {}
          }
        }
      ],
      ['damages', { _index: 1446, title: {}, body: { 'license.html': {} } }],
      [
        'data',
        {
          _index: 14,
          title: {},
          body: {
            'interfaces/Block.html': {},
            'interfaces/BlockData.html': {},
            'interfaces/EditorJSClass.html': {},
            'interfaces/EditorJSInstanceConfig.html': {},
            'classes/FixedHeader.html': {},
            'interfaces/Header.html': {},
            'interfaces/HeaderBlock.html': {},
            'interfaces/Image.html': {},
            'interfaces/ImageBlock.html': {},
            'interfaces/InjectorApiCallOptions.html': {},
            'interfaces/InjectorApiCallResponse.html': {},
            'interfaces/InjectorMethodOption.html': {},
            'interfaces/List.html': {},
            'interfaces/ListBlock.html': {},
            'interfaces/NgxEditorJSConfig.html': {},
            'directives/NgxEditorJSDirective.html': {},
            'interfaces/NgxEditorJSModuleConfig.html': {},
            'injectables/NgxEditorJSService.html': {},
            'components/NgxTinynodesMatJsonOutputComponent.html': {},
            'interfaces/Paragraph.html': {},
            'interfaces/ParagraphBlock.html': {},
            'interfaces/PluginConfig.html': {},
            'interfaces/PluginConfigMap.html': {},
            'modules/PluginHeaderModule.html': {},
            'interfaces/ToolSettingsMap.html': {},
            'additional-documentation/tinynodes-library-docs/ngx-editorjs-readme.html': {},
            'additional-documentation/tinynodes-library-docs/ngx-editorjs-readme/ngx-editorjs-changelog.html': {},
            'additional-documentation/tinynodes-library-docs/ngx-editorjs-plugins-readme.html': {},
            'additional-documentation/tinynodes-library-docs/ngx-editorjs-plugins-readme/ngx-editorjs-plugins-changelog.html': {}
          }
        }
      ],
      ['data).pipe', { _index: 852, title: {}, body: { 'injectables/NgxEditorJSService.html': {} } }],
      [
        'data.text',
        { _index: 400, title: {}, body: { 'classes/FixedHeader.html': {}, 'modules/PluginHeaderModule.html': {} } }
      ],
      [
        'date.now',
        {
          _index: 621,
          title: {},
          body: {
            'directives/NgxEditorJSDirective.html': {},
            'injectables/NgxEditorJSService.html': {},
            'additional-documentation/tinynodes-library-docs/ngx-editorjs-readme.html': {}
          }
        }
      ],
      ['deal', { _index: 1408, title: {}, body: { 'license.html': {} } }],
      ['dealings', { _index: 1453, title: {}, body: { 'license.html': {} } }],
      [
        'declarations',
        {
          _index: 626,
          title: {},
          body: {
            'modules/NgxEditorJSModule.html': {},
            'modules/NgxEditorjsPluginsModule.html': {},
            'modules/NgxPluginServiceModule.html': {},
            'modules/NgxTinynodesComponentsModule.html': {},
            'modules/NgxTinynodesMatJsonOutputModule.html': {},
            'modules/NgxTinynodesMatTagInputModule.html': {},
            'overview.html': {},
            'additional-documentation/tinynodes-library-docs/ngx-editorjs-readme.html': {}
          }
        }
      ],
      ['deem', { _index: 1259, title: {}, body: { 'contributing.html': {} } }],
      ['deemed', { _index: 1293, title: {}, body: { 'contributing.html': {} } }],
      [
        'default',
        {
          _index: 33,
          title: {},
          body: {
            'interfaces/Block.html': {},
            'interfaces/BlockData.html': {},
            'interfaces/EditorJSClass.html': {},
            'interfaces/EditorJSInstanceConfig.html': {},
            'classes/FixedHeader.html': {},
            'interfaces/Header.html': {},
            'interfaces/HeaderBlock.html': {},
            'interfaces/Image.html': {},
            'interfaces/ImageBlock.html': {},
            'interfaces/InjectorApiCallOptions.html': {},
            'interfaces/InjectorApiCallResponse.html': {},
            'interfaces/InjectorMethodOption.html': {},
            'interfaces/List.html': {},
            'interfaces/ListBlock.html': {},
            'interfaces/NgxEditorJSConfig.html': {},
            'directives/NgxEditorJSDirective.html': {},
            'modules/NgxEditorJSModule.html': {},
            'interfaces/NgxEditorJSModuleConfig.html': {},
            'injectables/NgxEditorJSPluginService.html': {},
            'injectables/NgxEditorJSService.html': {},
            'components/NgxTinynodesMatJsonOutputComponent.html': {},
            'interfaces/Paragraph.html': {},
            'interfaces/ParagraphBlock.html': {},
            'modules/PluginCodeModule.html': {},
            'interfaces/PluginConfig.html': {},
            'interfaces/PluginConfigMap.html': {},
            'modules/PluginHeaderModule.html': {},
            'modules/PluginImageModule.html': {},
            'modules/PluginInlineCodeModule.html': {},
            'modules/PluginLinkModule.html': {},
            'modules/PluginListModule.html': {},
            'modules/PluginMarkerModule.html': {},
            'modules/PluginParagraphModule.html': {},
            'modules/PluginSimpleImageModule.html': {},
            'interfaces/ToolSettingsMap.html': {},
            'changelog.html': {},
            'index.html': {},
            'miscellaneous/variables.html': {},
            'additional-documentation/tinynodes-library-docs/ngx-editorjs-readme.html': {},
            'additional-documentation/tinynodes-library-docs/ngx-editorjs-readme/ngx-editorjs-changelog.html': {},
            'additional-documentation/tinynodes-library-docs/ngx-editorjs-plugins-readme.html': {},
            'additional-documentation/tinynodes-library-docs/ngx-editorjs-plugins-readme/ngx-editorjs-plugins-changelog.html': {}
          }
        }
      ],
      ['default_holder_id', { _index: 1482, title: {}, body: { 'miscellaneous/variables.html': {} } }],
      ['defaults', { _index: 651, title: {}, body: { 'modules/NgxEditorJSModule.html': {} } }],
      [
        'define',
        {
          _index: 111,
          title: {},
          body: {
            'interfaces/BlockData.html': {},
            'interfaces/NgxEditorJSConfig.html': {},
            'interfaces/NgxEditorJSModuleConfig.html': {},
            'interfaces/PluginConfig.html': {},
            'interfaces/PluginConfigMap.html': {},
            'interfaces/ToolSettingsMap.html': {}
          }
        }
      ],
      [
        'defined',
        {
          _index: 18,
          title: {},
          body: {
            'interfaces/Block.html': {},
            'interfaces/BlockData.html': {},
            'interfaces/ChangeMap.html': {},
            'interfaces/EditorMap.html': {},
            'classes/FixedHeader.html': {},
            'directives/NgxEditorJSDirective.html': {},
            'modules/NgxEditorJSModule.html': {},
            'injectables/NgxEditorJSPluginService.html': {},
            'injectables/NgxEditorJSService.html': {},
            'components/NgxTinynodesMatJsonOutputComponent.html': {},
            'interfaces/PluginConfig.html': {},
            'interfaces/PluginConfigMap.html': {},
            'interfaces/ReadyMap.html': {},
            'interfaces/SavedMap.html': {},
            'interfaces/ToolSettingsMap.html': {},
            'contributing.html': {},
            'miscellaneous/variables.html': {}
          }
        }
      ],
      [
        'deigned',
        {
          _index: 1517,
          title: {},
          body: { 'additional-documentation/tinynodes-library-docs/ngx-editorjs-readme.html': {} }
        }
      ],
      ['delayed', { _index: 1107, title: {}, body: { 'changelog.html': {} } }],
      ['delete', { _index: 892, title: {}, body: { 'injectables/NgxEditorJSService.html': {} } }],
      [
        'demo',
        {
          _index: 1067,
          title: {},
          body: {
            'changelog.html': {},
            'index.html': {},
            'todo.html': {},
            'additional-documentation/tinynodes-library-docs/ngx-editorjs-readme.html': {},
            'additional-documentation/tinynodes-library-docs/ngx-editorjs-readme/ngx-editorjs-changelog.html': {}
          }
        }
      ],
      ['demos', { _index: 642, title: {}, body: { 'modules/NgxEditorJSModule.html': {}, 'index.html': {} } }],
      [
        'dependencies',
        {
          _index: 624,
          title: { 'dependencies.html': {} },
          body: {
            'modules/NgxEditorJSModule.html': {},
            'modules/NgxEditorjsPluginsModule.html': {},
            'modules/NgxPluginServiceModule.html': {},
            'modules/NgxTinynodesComponentsModule.html': {},
            'modules/NgxTinynodesMatJsonOutputModule.html': {},
            'modules/NgxTinynodesMatTagInputModule.html': {},
            'contributing.html': {},
            'dependencies.html': {},
            'index.html': {},
            'overview.html': {},
            'additional-documentation/tinynodes-library-docs/ngx-editorjs-plugins-readme.html': {},
            'additional-documentation/tinynodes-library-docs/ngx-editorjs-plugins-readme/ngx-editorjs-plugins-changelog.html': {}
          }
        }
      ],
      [
        'dependency',
        {
          _index: 1062,
          title: {},
          body: {
            'changelog.html': {},
            'todo.html': {},
            'additional-documentation/tinynodes-library-docs/ngx-editorjs-readme.html': {},
            'additional-documentation/tinynodes-library-docs/ngx-editorjs-readme/ngx-editorjs-changelog.html': {}
          }
        }
      ],
      [
        'deps',
        {
          _index: 671,
          title: {},
          body: { 'modules/NgxEditorJSModule.html': {}, 'modules/NgxPluginServiceModule.html': {} }
        }
      ],
      ['describedby', { _index: 329, title: {}, body: { 'interfaces/EditorJSMaterialForm.html': {} } }],
      [
        'description',
        {
          _index: 8,
          title: {},
          body: {
            'interfaces/Block.html': {},
            'interfaces/BlockData.html': {},
            'interfaces/ChangeMap.html': {},
            'interfaces/CreateEditorJSOptions.html': {},
            'interfaces/EditorJSChange.html': {},
            'interfaces/EditorJSClass.html': {},
            'interfaces/EditorJSInstanceConfig.html': {},
            'interfaces/EditorJSMaterialForm.html': {},
            'interfaces/EditorMap.html': {},
            'classes/FixedHeader.html': {},
            'interfaces/Header.html': {},
            'interfaces/HeaderBlock.html': {},
            'interfaces/Image.html': {},
            'interfaces/ImageBlock.html': {},
            'interfaces/InjectorApiCallOptions.html': {},
            'interfaces/InjectorApiCallResponse.html': {},
            'interfaces/InjectorMethodOption.html': {},
            'interfaces/List.html': {},
            'interfaces/ListBlock.html': {},
            'interfaces/NgxEditorJSConfig.html': {},
            'directives/NgxEditorJSDirective.html': {},
            'modules/NgxEditorJSModule.html': {},
            'interfaces/NgxEditorJSModuleConfig.html': {},
            'injectables/NgxEditorJSPluginService.html': {},
            'injectables/NgxEditorJSService.html': {},
            'modules/NgxEditorjsPluginsModule.html': {},
            'interfaces/Paragraph.html': {},
            'interfaces/ParagraphBlock.html': {},
            'modules/PluginCodeModule.html': {},
            'interfaces/PluginConfig.html': {},
            'interfaces/PluginConfigMap.html': {},
            'modules/PluginHeaderModule.html': {},
            'modules/PluginImageModule.html': {},
            'modules/PluginInlineCodeModule.html': {},
            'modules/PluginLinkModule.html': {},
            'modules/PluginListModule.html': {},
            'modules/PluginMarkerModule.html': {},
            'modules/PluginParagraphModule.html': {},
            'modules/PluginSimpleImageModule.html': {},
            'interfaces/ReadyMap.html': {},
            'interfaces/SavedMap.html': {},
            'interfaces/ToolSettingsMap.html': {},
            'miscellaneous/functions.html': {},
            'additional-documentation/tinynodes-library-docs/ngx-editorjs-readme.html': {},
            'additional-documentation/tinynodes-library-docs/ngx-editorjs-plugins-readme.html': {}
          }
        }
      ],
      [
        'descriptive',
        {
          _index: 1604,
          title: {},
          body: { 'additional-documentation/tinynodes-library-docs/ngx-editorjs-plugins-readme.html': {} }
        }
      ],
      [
        'destroy',
        {
          _index: 546,
          title: {},
          body: { 'directives/NgxEditorJSDirective.html': {}, 'injectables/NgxEditorJSService.html': {} }
        }
      ],
      [
        'destroyed',
        {
          _index: 561,
          title: {},
          body: { 'directives/NgxEditorJSDirective.html': {}, 'injectables/NgxEditorJSService.html': {} }
        }
      ],
      ['destroyinstance', { _index: 732, title: {}, body: { 'injectables/NgxEditorJSService.html': {} } }],
      ['destroyinstance(options', { _index: 759, title: {}, body: { 'injectables/NgxEditorJSService.html': {} } }],
      ['destroys', { _index: 761, title: {}, body: { 'injectables/NgxEditorJSService.html': {} } }],
      ['destructive', { _index: 539, title: {}, body: { 'directives/NgxEditorJSDirective.html': {} } }],
      [
        'details',
        {
          _index: 409,
          title: {},
          body: {
            'classes/FixedHeader.html': {},
            'modules/PluginCodeModule.html': {},
            'modules/PluginHeaderModule.html': {},
            'modules/PluginImageModule.html': {},
            'modules/PluginInlineCodeModule.html': {},
            'modules/PluginLinkModule.html': {},
            'modules/PluginListModule.html': {},
            'modules/PluginMarkerModule.html': {},
            'modules/PluginParagraphModule.html': {},
            'modules/PluginSimpleImageModule.html': {},
            'contributing.html': {},
            'additional-documentation/tinynodes-library-docs.html': {},
            'additional-documentation/tinynodes-library-docs/ngx-editorjs-readme.html': {},
            'additional-documentation/tinynodes-library-docs/ngx-editorjs-plugins-readme.html': {},
            'additional-documentation/tinynodes-library-docs/ngx-editorjs-plugins-readme/ngx-editorjs-plugins-changelog.html': {}
          }
        }
      ],
      [
        'detection',
        {
          _index: 346,
          title: {},
          body: { 'interfaces/EditorJSMaterialForm.html': {}, 'injectables/NgxEditorJSService.html': {} }
        }
      ],
      ['determined', { _index: 1312, title: {}, body: { 'contributing.html': {} } }],
      ['developers', { _index: 1160, title: {}, body: { 'contributing.html': {} } }],
      ['development', { _index: 1366, title: {}, body: { 'index.html': {} } }],
      ['devlog', { _index: 1104, title: {}, body: { 'changelog.html': {} } }],
      ['diary', { _index: 1367, title: {}, body: { 'index.html': {} } }],
      ['differing', { _index: 1200, title: {}, body: { 'contributing.html': {} } }],
      [
        'directive',
        {
          _index: 448,
          title: { 'directives/NgxEditorJSDirective.html': {} },
          body: {
            'directives/NgxEditorJSDirective.html': {},
            'components/NgxTinynodesMatJsonOutputComponent.html': {},
            'index.html': {},
            'overview.html': {},
            'todo.html': {},
            'additional-documentation/tinynodes-library-docs/ngx-editorjs-readme.html': {},
            'additional-documentation/tinynodes-library-docs/ngx-editorjs-readme/ngx-editorjs-changelog.html': {}
          }
        }
      ],
      [
        'directives',
        {
          _index: 449,
          title: {},
          body: { 'directives/NgxEditorJSDirective.html': {}, 'components/NgxTinynodesMatJsonOutputComponent.html': {} }
        }
      ],
      [
        'directives/ngx',
        {
          _index: 240,
          title: {},
          body: { 'interfaces/EditorJSMaterialForm.html': {}, 'modules/NgxEditorJSModule.html': {} }
        }
      ],
      ['disability', { _index: 1180, title: {}, body: { 'contributing.html': {} } }],
      [
        'disable',
        {
          _index: 492,
          title: {},
          body: {
            'directives/NgxEditorJSDirective.html': {},
            'injectables/NgxEditorJSService.html': {},
            'additional-documentation/tinynodes-library-docs/ngx-editorjs-readme.html': {}
          }
        }
      ],
      ['disabled', { _index: 301, title: {}, body: { 'interfaces/EditorJSMaterialForm.html': {} } }],
      ['disabled(disabled', { _index: 305, title: {}, body: { 'interfaces/EditorJSMaterialForm.html': {} } }],
      ['discuss', { _index: 1130, title: {}, body: { 'contributing.html': {} } }],
      ['display', { _index: 495, title: {}, body: { 'directives/NgxEditorJSDirective.html': {} } }],
      [
        'displaying',
        {
          _index: 102,
          title: {},
          body: {
            'interfaces/BlockData.html': {},
            'interfaces/PluginConfig.html': {},
            'interfaces/PluginConfigMap.html': {},
            'interfaces/ToolSettingsMap.html': {}
          }
        }
      ],
      ['distinctuntilchanged', { _index: 780, title: {}, body: { 'injectables/NgxEditorJSService.html': {} } }],
      ['distinctuntilchanged((a', { _index: 860, title: {}, body: { 'injectables/NgxEditorJSService.html': {} } }],
      ['distribute', { _index: 1415, title: {}, body: { 'license.html': {} } }],
      [
        'doc',
        {
          _index: 1465,
          title: {},
          body: {
            'todo.html': {},
            'additional-documentation/tinynodes-library-docs/ngx-editorjs-readme/ngx-editorjs-changelog.html': {}
          }
        }
      ],
      [
        'docheck',
        {
          _index: 224,
          title: {},
          body: { 'interfaces/EditorJSMaterialForm.html': {}, 'interfaces/NgxTinynodesMatFieldComponent.html': {} }
        }
      ],
      [
        'docs',
        {
          _index: 1050,
          title: { 'additional-documentation/tinynodes-library-docs.html': {} },
          body: {
            'changelog.html': {},
            'index.html': {},
            'additional-documentation/tinynodes-library-docs/ngx-editorjs-readme.html': {},
            'additional-documentation/tinynodes-library-docs/ngx-editorjs-readme/ngx-editorjs-changelog.html': {}
          }
        }
      ],
      [
        'documentation',
        {
          _index: 1095,
          title: {},
          body: {
            'changelog.html': {},
            'index.html': {},
            'license.html': {},
            'additional-documentation/tinynodes-library-docs/ngx-editorjs-readme.html': {},
            'additional-documentation/tinynodes-library-docs/ngx-editorjs-readme/ngx-editorjs-changelog.html': {},
            'additional-documentation/tinynodes-library-docs/ngx-editorjs-plugins-readme/ngx-editorjs-plugins-changelog.html': {}
          }
        }
      ],
      [
        'documented',
        {
          _index: 1527,
          title: {},
          body: {
            'additional-documentation/tinynodes-library-docs/ngx-editorjs-readme/ngx-editorjs-changelog.html': {},
            'additional-documentation/tinynodes-library-docs/ngx-editorjs-plugins-readme/ngx-editorjs-plugins-changelog.html': {}
          }
        }
      ],
      [
        'doing',
        { _index: 777, title: {}, body: { 'injectables/NgxEditorJSService.html': {}, 'contributing.html': {} } }
      ],
      [
        'dom',
        {
          _index: 564,
          title: {},
          body: {
            'directives/NgxEditorJSDirective.html': {},
            'injectables/NgxEditorJSService.html': {},
            'components/NgxTinynodesMatJsonOutputComponent.html': {},
            'index.html': {},
            'additional-documentation/tinynodes-library-docs/ngx-editorjs-readme.html': {},
            'additional-documentation/tinynodes-library-docs/ngx-editorjs-readme/ngx-editorjs-changelog.html': {}
          }
        }
      ],
      [
        "don't",
        {
          _index: 200,
          title: {},
          body: {
            'interfaces/EditorJSClass.html': {},
            'interfaces/EditorJSInstanceConfig.html': {},
            'interfaces/InjectorApiCallOptions.html': {},
            'interfaces/InjectorApiCallResponse.html': {},
            'interfaces/InjectorMethodOption.html': {}
          }
        }
      ],
      [
        'download',
        {
          _index: 1507,
          title: {},
          body: { 'additional-documentation/tinynodes-library-docs/ngx-editorjs-readme.html': {} }
        }
      ],
      [
        'due',
        {
          _index: 1076,
          title: {},
          body: { 'changelog.html': {}, 'additional-documentation/tinynodes-library-docs.html': {} }
        }
      ],
      ['dynamic', { _index: 1330, title: {}, body: { 'dependencies.html': {} } }],
      ['e', { _index: 1269, title: {}, body: { 'contributing.html': {} } }],
      [
        'e.g',
        {
          _index: 1470,
          title: {},
          body: {
            'todo.html': {},
            'additional-documentation/tinynodes-library-docs/ngx-editorjs-plugins-readme.html': {}
          }
        }
      ],
      [
        'each',
        {
          _index: 185,
          title: {},
          body: {
            'interfaces/EditorJSClass.html': {},
            'interfaces/EditorJSInstanceConfig.html': {},
            'interfaces/EditorJSMaterialForm.html': {},
            'interfaces/InjectorApiCallOptions.html': {},
            'interfaces/InjectorApiCallResponse.html': {},
            'interfaces/InjectorMethodOption.html': {},
            'modules/NgxEditorjsPluginsModule.html': {},
            'miscellaneous/variables.html': {},
            'additional-documentation/tinynodes-library-docs/ngx-editorjs-readme.html': {},
            'additional-documentation/tinynodes-library-docs/ngx-editorjs-plugins-readme/ngx-editorjs-plugins-changelog.html': {}
          }
        }
      ],
      ['easily', { _index: 919, title: {}, body: { 'modules/NgxEditorjsPluginsModule.html': {}, 'index.html': {} } }],
      [
        'easy',
        {
          _index: 1543,
          title: {},
          body: {
            'additional-documentation/tinynodes-library-docs/ngx-editorjs-readme/ngx-editorjs-changelog.html': {}
          }
        }
      ],
      ['edit', { _index: 1247, title: {}, body: { 'contributing.html': {} } }],
      [
        'editior_js_instance',
        {
          _index: 446,
          title: {},
          body: {
            'interfaces/NgxEditorJSConfig.html': {},
            'interfaces/NgxEditorJSModuleConfig.html': {},
            'miscellaneous/variables.html': {}
          }
        }
      ],
      [
        'editor',
        {
          _index: 112,
          title: {},
          body: {
            'interfaces/BlockData.html': {},
            'interfaces/EditorJSClass.html': {},
            'interfaces/EditorJSInstanceConfig.html': {},
            'interfaces/EditorJSMaterialForm.html': {},
            'interfaces/InjectorApiCallOptions.html': {},
            'interfaces/InjectorApiCallResponse.html': {},
            'interfaces/InjectorMethodOption.html': {},
            'directives/NgxEditorJSDirective.html': {},
            'injectables/NgxEditorJSService.html': {},
            'interfaces/PluginConfig.html': {},
            'interfaces/PluginConfigMap.html': {},
            'interfaces/ToolSettingsMap.html': {},
            'todo.html': {},
            'miscellaneous/variables.html': {},
            'additional-documentation/tinynodes-library-docs/ngx-editorjs-readme.html': {},
            'additional-documentation/tinynodes-library-docs/ngx-editorjs-readme/ngx-editorjs-changelog.html': {},
            'additional-documentation/tinynodes-library-docs/ngx-editorjs-plugins-readme.html': {},
            'additional-documentation/tinynodes-library-docs/ngx-editorjs-plugins-readme/ngx-editorjs-plugins-changelog.html': {}
          }
        }
      ],
      [
        "editor's",
        {
          _index: 430,
          title: {},
          body: {
            'interfaces/NgxEditorJSConfig.html': {},
            'interfaces/NgxEditorJSModuleConfig.html': {},
            'additional-documentation/tinynodes-library-docs/ngx-editorjs-readme.html': {}
          }
        }
      ],
      ['editor.destroy', { _index: 871, title: {}, body: { 'injectables/NgxEditorJSService.html': {} } }],
      ['editor.isready', { _index: 813, title: {}, body: { 'injectables/NgxEditorJSService.html': {} } }],
      ['editor[options.method', { _index: 828, title: {}, body: { 'injectables/NgxEditorJSService.html': {} } }],
      [
        'editor[options.namespace][options.method',
        { _index: 829, title: {}, body: { 'injectables/NgxEditorJSService.html': {} } }
      ],
      [
        'editor_js_tool_injector',
        {
          _index: 120,
          title: {},
          body: {
            'interfaces/BlockData.html': {},
            'classes/FixedHeader.html': {},
            'modules/NgxPluginServiceModule.html': {},
            'modules/PluginCodeModule.html': {},
            'interfaces/PluginConfig.html': {},
            'interfaces/PluginConfigMap.html': {},
            'modules/PluginHeaderModule.html': {},
            'modules/PluginImageModule.html': {},
            'modules/PluginInlineCodeModule.html': {},
            'modules/PluginLinkModule.html': {},
            'modules/PluginListModule.html': {},
            'modules/PluginMarkerModule.html': {},
            'modules/PluginParagraphModule.html': {},
            'modules/PluginSimpleImageModule.html': {},
            'interfaces/ToolSettingsMap.html': {},
            'miscellaneous/variables.html': {},
            'additional-documentation/tinynodes-library-docs/ngx-editorjs-plugins-readme.html': {},
            'additional-documentation/tinynodes-library-docs/ngx-editorjs-plugins-readme/ngx-editorjs-plugins-changelog.html': {}
          }
        }
      ],
      [
        'editorconfig',
        {
          _index: 160,
          title: {},
          body: {
            'interfaces/CreateEditorJSOptions.html': {},
            'interfaces/EditorJSClass.html': {},
            'interfaces/EditorJSInstanceConfig.html': {},
            'interfaces/InjectorApiCallOptions.html': {},
            'interfaces/InjectorApiCallResponse.html': {},
            'interfaces/InjectorMethodOption.html': {},
            'interfaces/NgxEditorJSConfig.html': {},
            'directives/NgxEditorJSDirective.html': {},
            'interfaces/NgxEditorJSModuleConfig.html': {},
            'injectables/NgxEditorJSService.html': {},
            'miscellaneous/functions.html': {}
          }
        }
      ],
      ['editorconfig.holder', { _index: 807, title: {}, body: { 'injectables/NgxEditorJSService.html': {} } }],
      ['editorconfig.onchange', { _index: 804, title: {}, body: { 'injectables/NgxEditorJSService.html': {} } }],
      ['editorconfig.onready', { _index: 809, title: {}, body: { 'injectables/NgxEditorJSService.html': {} } }],
      ['editorinstance', { _index: 316, title: {}, body: { 'interfaces/EditorJSMaterialForm.html': {} } }],
      [
        'editorjs',
        {
          _index: 11,
          title: {
            'additional-documentation/tinynodes-library-docs/ngx-editorjs-readme.html': {},
            'additional-documentation/tinynodes-library-docs/ngx-editorjs-readme/ngx-editorjs-changelog.html': {},
            'additional-documentation/tinynodes-library-docs/ngx-editorjs-plugins-readme.html': {},
            'additional-documentation/tinynodes-library-docs/ngx-editorjs-plugins-readme/ngx-editorjs-plugins-changelog.html': {}
          },
          body: {
            'interfaces/Block.html': {},
            'interfaces/BlockData.html': {},
            'interfaces/ChangeMap.html': {},
            'interfaces/CreateEditorJSOptions.html': {},
            'interfaces/EditorJSChange.html': {},
            'interfaces/EditorJSClass.html': {},
            'interfaces/EditorJSInstanceConfig.html': {},
            'interfaces/EditorJSMaterialForm.html': {},
            'interfaces/EditorMap.html': {},
            'classes/FixedHeader.html': {},
            'interfaces/Header.html': {},
            'interfaces/HeaderBlock.html': {},
            'interfaces/Image.html': {},
            'interfaces/ImageBlock.html': {},
            'interfaces/InjectorApiCallOptions.html': {},
            'interfaces/InjectorApiCallResponse.html': {},
            'interfaces/InjectorMethodOption.html': {},
            'interfaces/List.html': {},
            'interfaces/ListBlock.html': {},
            'interfaces/NgxEditorJSConfig.html': {},
            'directives/NgxEditorJSDirective.html': {},
            'modules/NgxEditorJSModule.html': {},
            'interfaces/NgxEditorJSModuleConfig.html': {},
            'injectables/NgxEditorJSPluginService.html': {},
            'injectables/NgxEditorJSService.html': {},
            'modules/NgxEditorjsPluginsModule.html': {},
            'modules/NgxPluginServiceModule.html': {},
            'components/NgxTinynodesMatJsonOutputComponent.html': {},
            'interfaces/Paragraph.html': {},
            'interfaces/ParagraphBlock.html': {},
            'modules/PluginCodeModule.html': {},
            'interfaces/PluginConfig.html': {},
            'interfaces/PluginConfigMap.html': {},
            'modules/PluginHeaderModule.html': {},
            'modules/PluginImageModule.html': {},
            'modules/PluginInlineCodeModule.html': {},
            'modules/PluginLinkModule.html': {},
            'modules/PluginListModule.html': {},
            'modules/PluginMarkerModule.html': {},
            'modules/PluginParagraphModule.html': {},
            'modules/PluginSimpleImageModule.html': {},
            'interfaces/ReadyMap.html': {},
            'interfaces/SavedMap.html': {},
            'interfaces/ToolSettingsMap.html': {},
            'changelog.html': {},
            'miscellaneous/enumerations.html': {},
            'miscellaneous/functions.html': {},
            'index.html': {},
            'todo.html': {},
            'miscellaneous/typealiases.html': {},
            'miscellaneous/variables.html': {},
            'additional-documentation/tinynodes-library-docs/ngx-editorjs-readme.html': {},
            'additional-documentation/tinynodes-library-docs/ngx-editorjs-readme/ngx-editorjs-changelog.html': {},
            'additional-documentation/tinynodes-library-docs/ngx-editorjs-plugins-readme.html': {},
            'additional-documentation/tinynodes-library-docs/ngx-editorjs-plugins-readme/ngx-editorjs-plugins-changelog.html': {}
          }
        }
      ],
      [
        "editorjs'},{'name",
        { _index: 983, title: {}, body: { 'components/NgxTinynodesMatJsonOutputComponent.html': {} } }
      ],
      [
        'editorjs.directive',
        {
          _index: 241,
          title: {},
          body: { 'interfaces/EditorJSMaterialForm.html': {}, 'modules/NgxEditorJSModule.html': {} }
        }
      ],
      ['editorjs.directive.ts', { _index: 451, title: {}, body: { 'directives/NgxEditorJSDirective.html': {} } }],
      ['editorjs.directive.ts:106', { _index: 482, title: {}, body: { 'directives/NgxEditorJSDirective.html': {} } }],
      ['editorjs.directive.ts:112', { _index: 498, title: {}, body: { 'directives/NgxEditorJSDirective.html': {} } }],
      ['editorjs.directive.ts:118', { _index: 517, title: {}, body: { 'directives/NgxEditorJSDirective.html': {} } }],
      ['editorjs.directive.ts:124', { _index: 521, title: {}, body: { 'directives/NgxEditorJSDirective.html': {} } }],
      ['editorjs.directive.ts:130', { _index: 519, title: {}, body: { 'directives/NgxEditorJSDirective.html': {} } }],
      ['editorjs.directive.ts:136', { _index: 514, title: {}, body: { 'directives/NgxEditorJSDirective.html': {} } }],
      ['editorjs.directive.ts:142', { _index: 520, title: {}, body: { 'directives/NgxEditorJSDirective.html': {} } }],
      ['editorjs.directive.ts:148', { _index: 522, title: {}, body: { 'directives/NgxEditorJSDirective.html': {} } }],
      ['editorjs.directive.ts:152', { _index: 477, title: {}, body: { 'directives/NgxEditorJSDirective.html': {} } }],
      ['editorjs.directive.ts:168', { _index: 549, title: {}, body: { 'directives/NgxEditorJSDirective.html': {} } }],
      ['editorjs.directive.ts:175', { _index: 552, title: {}, body: { 'directives/NgxEditorJSDirective.html': {} } }],
      ['editorjs.directive.ts:182', { _index: 554, title: {}, body: { 'directives/NgxEditorJSDirective.html': {} } }],
      ['editorjs.directive.ts:189', { _index: 556, title: {}, body: { 'directives/NgxEditorJSDirective.html': {} } }],
      ['editorjs.directive.ts:198', { _index: 524, title: {}, body: { 'directives/NgxEditorJSDirective.html': {} } }],
      ['editorjs.directive.ts:215', { _index: 533, title: {}, body: { 'directives/NgxEditorJSDirective.html': {} } }],
      ['editorjs.directive.ts:252', { _index: 527, title: {}, body: { 'directives/NgxEditorJSDirective.html': {} } }],
      ['editorjs.directive.ts:285', { _index: 545, title: {}, body: { 'directives/NgxEditorJSDirective.html': {} } }],
      ['editorjs.directive.ts:53', { _index: 480, title: {}, body: { 'directives/NgxEditorJSDirective.html': {} } }],
      ['editorjs.directive.ts:59', { _index: 502, title: {}, body: { 'directives/NgxEditorJSDirective.html': {} } }],
      ['editorjs.directive.ts:65', { _index: 504, title: {}, body: { 'directives/NgxEditorJSDirective.html': {} } }],
      ['editorjs.directive.ts:72', { _index: 505, title: {}, body: { 'directives/NgxEditorJSDirective.html': {} } }],
      ['editorjs.directive.ts:78', { _index: 509, title: {}, body: { 'directives/NgxEditorJSDirective.html': {} } }],
      ['editorjs.directive.ts:84', { _index: 494, title: {}, body: { 'directives/NgxEditorJSDirective.html': {} } }],
      ['editorjs.directive.ts:90', { _index: 511, title: {}, body: { 'directives/NgxEditorJSDirective.html': {} } }],
      ['editorjs.directive.ts:97', { _index: 499, title: {}, body: { 'directives/NgxEditorJSDirective.html': {} } }],
      [
        'editorjs.module.ts',
        { _index: 639, title: {}, body: { 'modules/NgxEditorJSModule.html': {}, 'miscellaneous/functions.html': {} } }
      ],
      ['editorjs.module.ts:60', { _index: 650, title: {}, body: { 'modules/NgxEditorJSModule.html': {} } }],
      [
        'editorjs.version',
        {
          _index: 190,
          title: {},
          body: {
            'interfaces/EditorJSClass.html': {},
            'interfaces/EditorJSInstanceConfig.html': {},
            'interfaces/InjectorApiCallOptions.html': {},
            'interfaces/InjectorApiCallResponse.html': {},
            'interfaces/InjectorMethodOption.html': {},
            'directives/NgxEditorJSDirective.html': {},
            'miscellaneous/variables.html': {},
            'additional-documentation/tinynodes-library-docs/ngx-editorjs-readme.html': {}
          }
        }
      ],
      ['editorjs/code', { _index: 1011, title: {}, body: { 'modules/PluginCodeModule.html': {} } }],
      [
        'editorjs/editorjs',
        {
          _index: 75,
          title: {},
          body: {
            'interfaces/BlockData.html': {},
            'interfaces/ChangeMap.html': {},
            'interfaces/CreateEditorJSOptions.html': {},
            'interfaces/EditorJSChange.html': {},
            'interfaces/EditorJSClass.html': {},
            'interfaces/EditorJSInstanceConfig.html': {},
            'interfaces/EditorMap.html': {},
            'interfaces/InjectorApiCallOptions.html': {},
            'interfaces/InjectorApiCallResponse.html': {},
            'interfaces/InjectorMethodOption.html': {},
            'interfaces/NgxEditorJSConfig.html': {},
            'directives/NgxEditorJSDirective.html': {},
            'modules/NgxEditorJSModule.html': {},
            'interfaces/NgxEditorJSModuleConfig.html': {},
            'injectables/NgxEditorJSService.html': {},
            'interfaces/PluginConfig.html': {},
            'interfaces/PluginConfigMap.html': {},
            'interfaces/ReadyMap.html': {},
            'interfaces/SavedMap.html': {},
            'interfaces/ToolSettingsMap.html': {},
            'additional-documentation/tinynodes-library-docs/ngx-editorjs-readme.html': {}
          }
        }
      ],
      ['editorjs/editorjs.component', { _index: 245, title: {}, body: { 'interfaces/EditorJSMaterialForm.html': {} } }],
      [
        'editorjs/header',
        {
          _index: 393,
          title: {},
          body: {
            'classes/FixedHeader.html': {},
            'modules/PluginHeaderModule.html': {},
            'additional-documentation/tinynodes-library-docs/ngx-editorjs-plugins-readme.html': {}
          }
        }
      ],
      ['editorjs/image', { _index: 1015, title: {}, body: { 'modules/PluginImageModule.html': {} } }],
      ['editorjs/inline', { _index: 1020, title: {}, body: { 'modules/PluginInlineCodeModule.html': {} } }],
      ['editorjs/link', { _index: 1024, title: {}, body: { 'modules/PluginLinkModule.html': {} } }],
      ['editorjs/list', { _index: 1026, title: {}, body: { 'modules/PluginListModule.html': {} } }],
      [
        'editorjs/paragraph',
        {
          _index: 1029,
          title: {},
          body: {
            'modules/PluginMarkerModule.html': {},
            'modules/PluginParagraphModule.html': {},
            'additional-documentation/tinynodes-library-docs/ngx-editorjs-readme.html': {},
            'additional-documentation/tinynodes-library-docs/ngx-editorjs-plugins-readme.html': {}
          }
        }
      ],
      ['editorjs/simple', { _index: 1035, title: {}, body: { 'modules/PluginSimpleImageModule.html': {} } }],
      [
        'editorjs/src/lib/config/editor',
        { _index: 1356, title: {}, body: { 'miscellaneous/functions.html': {}, 'miscellaneous/variables.html': {} } }
      ],
      ['editorjs/src/lib/config/module', { _index: 1360, title: {}, body: { 'miscellaneous/functions.html': {} } }],
      [
        'editorjs/src/lib/containers/editorjs',
        {
          _index: 210,
          title: {},
          body: { 'interfaces/EditorJSMaterialForm.html': {}, 'miscellaneous/variables.html': {} }
        }
      ],
      [
        'editorjs/src/lib/containers/editorjs/editorjs.component.ts',
        { _index: 1494, title: {}, body: { 'miscellaneous/variables.html': {} } }
      ],
      [
        'editorjs/src/lib/directives/ngx',
        { _index: 450, title: {}, body: { 'directives/NgxEditorJSDirective.html': {} } }
      ],
      [
        'editorjs/src/lib/ngx',
        { _index: 638, title: {}, body: { 'modules/NgxEditorJSModule.html': {}, 'miscellaneous/functions.html': {} } }
      ],
      [
        'editorjs/src/lib/services/editorjs.service.ts',
        { _index: 714, title: {}, body: { 'injectables/NgxEditorJSService.html': {} } }
      ],
      [
        'editorjs/src/lib/services/editorjs.service.ts:139',
        { _index: 740, title: {}, body: { 'injectables/NgxEditorJSService.html': {} } }
      ],
      [
        'editorjs/src/lib/services/editorjs.service.ts:178',
        { _index: 771, title: {}, body: { 'injectables/NgxEditorJSService.html': {} } }
      ],
      [
        'editorjs/src/lib/services/editorjs.service.ts:192',
        { _index: 750, title: {}, body: { 'injectables/NgxEditorJSService.html': {} } }
      ],
      [
        'editorjs/src/lib/services/editorjs.service.ts:205',
        { _index: 774, title: {}, body: { 'injectables/NgxEditorJSService.html': {} } }
      ],
      [
        'editorjs/src/lib/services/editorjs.service.ts:221',
        { _index: 763, title: {}, body: { 'injectables/NgxEditorJSService.html': {} } }
      ],
      [
        'editorjs/src/lib/services/editorjs.service.ts:232',
        { _index: 767, title: {}, body: { 'injectables/NgxEditorJSService.html': {} } }
      ],
      [
        'editorjs/src/lib/services/editorjs.service.ts:243',
        { _index: 769, title: {}, body: { 'injectables/NgxEditorJSService.html': {} } }
      ],
      [
        'editorjs/src/lib/services/editorjs.service.ts:261',
        { _index: 765, title: {}, body: { 'injectables/NgxEditorJSService.html': {} } }
      ],
      [
        'editorjs/src/lib/services/editorjs.service.ts:272',
        { _index: 760, title: {}, body: { 'injectables/NgxEditorJSService.html': {} } }
      ],
      [
        'editorjs/src/lib/services/editorjs.service.ts:289',
        { _index: 757, title: {}, body: { 'injectables/NgxEditorJSService.html': {} } }
      ],
      [
        'editorjs/src/lib/services/editorjs.service.ts:61',
        { _index: 736, title: {}, body: { 'injectables/NgxEditorJSService.html': {} } }
      ],
      [
        'editorjs/src/lib/services/editorjs.service.ts:88',
        { _index: 755, title: {}, body: { 'injectables/NgxEditorJSService.html': {} } }
      ],
      [
        'editorjs/src/lib/types/blocks.ts',
        {
          _index: 7,
          title: {},
          body: {
            'interfaces/Block.html': {},
            'interfaces/Header.html': {},
            'interfaces/HeaderBlock.html': {},
            'interfaces/Image.html': {},
            'interfaces/ImageBlock.html': {},
            'interfaces/List.html': {},
            'interfaces/ListBlock.html': {},
            'interfaces/Paragraph.html': {},
            'interfaces/ParagraphBlock.html': {},
            'miscellaneous/typealiases.html': {}
          }
        }
      ],
      ['editorjs/src/lib/types/blocks.ts:13', { _index: 19, title: {}, body: { 'interfaces/Block.html': {} } }],
      [
        'editorjs/src/lib/types/config.ts',
        {
          _index: 413,
          title: {},
          body: {
            'interfaces/NgxEditorJSConfig.html': {},
            'interfaces/NgxEditorJSModuleConfig.html': {},
            'miscellaneous/variables.html': {}
          }
        }
      ],
      [
        'editorjs/src/lib/types/editorjs',
        { _index: 153, title: {}, body: { 'interfaces/CreateEditorJSOptions.html': {} } }
      ],
      [
        'editorjs/src/lib/types/injector.ts',
        {
          _index: 163,
          title: {},
          body: {
            'interfaces/EditorJSClass.html': {},
            'interfaces/EditorJSInstanceConfig.html': {},
            'interfaces/InjectorApiCallOptions.html': {},
            'interfaces/InjectorApiCallResponse.html': {},
            'interfaces/InjectorMethodOption.html': {},
            'miscellaneous/variables.html': {}
          }
        }
      ],
      [
        'editorjs/src/lib/types/maps.ts',
        {
          _index: 131,
          title: {},
          body: {
            'interfaces/ChangeMap.html': {},
            'interfaces/EditorJSChange.html': {},
            'interfaces/EditorMap.html': {},
            'interfaces/ReadyMap.html': {},
            'interfaces/SavedMap.html': {}
          }
        }
      ],
      ['editorjs/src/lib/types/maps.ts:18', { _index: 1037, title: {}, body: { 'interfaces/ReadyMap.html': {} } }],
      ['editorjs/src/lib/types/maps.ts:28', { _index: 1038, title: {}, body: { 'interfaces/SavedMap.html': {} } }],
      ['editorjs/src/lib/types/maps.ts:52', { _index: 137, title: {}, body: { 'interfaces/ChangeMap.html': {} } }],
      ['editorjs/src/lib/types/maps.ts:8', { _index: 378, title: {}, body: { 'interfaces/EditorMap.html': {} } }],
      ['editorjs@1.2.0', { _index: 1099, title: {}, body: { 'changelog.html': {} } }],
      ['editorjs@1.3.2', { _index: 1088, title: {}, body: { 'changelog.html': {} } }],
      ['editorjs@2.0.0', { _index: 1073, title: {}, body: { 'changelog.html': {} } }],
      ['editorjs@3.0.0', { _index: 1053, title: {}, body: { 'changelog.html': {} } }],
      ['editorjs](http://editorjs.io', { _index: 668, title: {}, body: { 'modules/NgxEditorJSModule.html': {} } }],
      ['editorjs_form_value_accessor', { _index: 1484, title: {}, body: { 'miscellaneous/variables.html': {} } }],
      [
        'editorjs_material_field_control',
        {
          _index: 247,
          title: {},
          body: { 'interfaces/EditorJSMaterialForm.html': {}, 'miscellaneous/variables.html': {} }
        }
      ],
      [
        'editorjs_module_import',
        {
          _index: 193,
          title: {},
          body: {
            'interfaces/EditorJSClass.html': {},
            'interfaces/EditorJSInstanceConfig.html': {},
            'interfaces/InjectorApiCallOptions.html': {},
            'interfaces/InjectorApiCallResponse.html': {},
            'interfaces/InjectorMethodOption.html': {},
            'modules/NgxEditorJSModule.html': {},
            'miscellaneous/variables.html': {}
          }
        }
      ],
      [
        'editorjsbasecomponent',
        {
          _index: 1551,
          title: {},
          body: {
            'additional-documentation/tinynodes-library-docs/ngx-editorjs-readme/ngx-editorjs-changelog.html': {}
          }
        }
      ],
      [
        'editorjschange',
        {
          _index: 150,
          title: { 'interfaces/EditorJSChange.html': {} },
          body: {
            'interfaces/ChangeMap.html': {},
            'interfaces/EditorJSChange.html': {},
            'interfaces/EditorMap.html': {},
            'interfaces/ReadyMap.html': {},
            'interfaces/SavedMap.html': {}
          }
        }
      ],
      [
        'editorjsclass',
        {
          _index: 162,
          title: { 'interfaces/EditorJSClass.html': {} },
          body: {
            'interfaces/EditorJSClass.html': {},
            'interfaces/EditorJSInstanceConfig.html': {},
            'interfaces/InjectorApiCallOptions.html': {},
            'interfaces/InjectorApiCallResponse.html': {},
            'interfaces/InjectorMethodOption.html': {},
            'injectables/NgxEditorJSService.html': {}
          }
        }
      ],
      [
        'editorjsinstance',
        {
          _index: 196,
          title: {},
          body: {
            'interfaces/EditorJSClass.html': {},
            'interfaces/EditorJSInstanceConfig.html': {},
            'interfaces/InjectorApiCallOptions.html': {},
            'interfaces/InjectorApiCallResponse.html': {},
            'interfaces/InjectorMethodOption.html': {},
            'modules/NgxEditorJSModule.html': {},
            'injectables/NgxEditorJSService.html': {},
            'miscellaneous/variables.html': {}
          }
        }
      ],
      [
        'editorjsinstanceconfig',
        {
          _index: 176,
          title: { 'interfaces/EditorJSInstanceConfig.html': {} },
          body: {
            'interfaces/EditorJSClass.html': {},
            'interfaces/EditorJSInstanceConfig.html': {},
            'interfaces/InjectorApiCallOptions.html': {},
            'interfaces/InjectorApiCallResponse.html': {},
            'interfaces/InjectorMethodOption.html': {}
          }
        }
      ],
      [
        'editorjsmaterialform',
        {
          _index: 209,
          title: { 'interfaces/EditorJSMaterialForm.html': {} },
          body: { 'interfaces/EditorJSMaterialForm.html': {} }
        }
      ],
      [
        'editorjsplugin',
        {
          _index: 90,
          title: {},
          body: {
            'interfaces/BlockData.html': {},
            'interfaces/PluginConfig.html': {},
            'interfaces/PluginConfigMap.html': {},
            'interfaces/ToolSettingsMap.html': {},
            'miscellaneous/typealiases.html': {},
            'additional-documentation/tinynodes-library-docs/ngx-editorjs-readme/ngx-editorjs-changelog.html': {}
          }
        }
      ],
      [
        'editormap',
        {
          _index: 142,
          title: { 'interfaces/EditorMap.html': {} },
          body: {
            'interfaces/ChangeMap.html': {},
            'interfaces/EditorJSChange.html': {},
            'interfaces/EditorMap.html': {},
            'injectables/NgxEditorJSService.html': {},
            'interfaces/ReadyMap.html': {},
            'interfaces/SavedMap.html': {}
          }
        }
      ],
      [
        'editorservice',
        {
          _index: 342,
          title: {},
          body: { 'interfaces/EditorJSMaterialForm.html': {}, 'directives/NgxEditorJSDirective.html': {} }
        }
      ],
      ['edits', { _index: 1251, title: {}, body: { 'contributing.html': {} } }],
      ['el', { _index: 478, title: {}, body: { 'directives/NgxEditorJSDirective.html': {} } }],
      ['electronic', { _index: 1228, title: {}, body: { 'contributing.html': {} } }],
      [
        'element',
        {
          _index: 345,
          title: {},
          body: {
            'interfaces/EditorJSMaterialForm.html': {},
            'interfaces/NgxEditorJSConfig.html': {},
            'directives/NgxEditorJSDirective.html': {},
            'interfaces/NgxEditorJSModuleConfig.html': {},
            'components/NgxTinynodesMatJsonOutputComponent.html': {},
            'index.html': {},
            'additional-documentation/tinynodes-library-docs/ngx-editorjs-readme.html': {},
            'additional-documentation/tinynodes-library-docs/ngx-editorjs-readme/ngx-editorjs-changelog.html': {}
          }
        }
      ],
      ['elementref', { _index: 475, title: {}, body: { 'directives/NgxEditorJSDirective.html': {} } }],
      ['email', { _index: 1133, title: {}, body: { 'contributing.html': {} } }],
      ['emits', { _index: 515, title: {}, body: { 'directives/NgxEditorJSDirective.html': {} } }],
      ['empathy', { _index: 1210, title: {}, body: { 'contributing.html': {} } }],
      [
        'empty',
        {
          _index: 307,
          title: {},
          body: {
            'interfaces/EditorJSMaterialForm.html': {},
            'directives/NgxEditorJSDirective.html': {},
            'additional-documentation/tinynodes-library-docs/ngx-editorjs-readme.html': {}
          }
        }
      ],
      ['empty(empty', { _index: 310, title: {}, body: { 'interfaces/EditorJSMaterialForm.html': {} } }],
      ['end', { _index: 1141, title: {}, body: { 'contributing.html': {} } }],
      ['enforce', { _index: 1306, title: {}, body: { 'contributing.html': {} } }],
      ['enforcement', { _index: 1283, title: {}, body: { 'contributing.html': {} } }],
      [
        'ensure',
        { _index: 719, title: {}, body: { 'injectables/NgxEditorJSService.html': {}, 'contributing.html': {} } }
      ],
      ['entire', { _index: 1078, title: {}, body: { 'changelog.html': {} } }],
      [
        'enum',
        {
          _index: 81,
          title: {},
          body: {
            'interfaces/BlockData.html': {},
            'interfaces/PluginConfig.html': {},
            'interfaces/PluginConfigMap.html': {},
            'interfaces/ToolSettingsMap.html': {}
          }
        }
      ],
      [
        'enumerations',
        {
          _index: 1348,
          title: { 'miscellaneous/enumerations.html': {} },
          body: { 'miscellaneous/enumerations.html': {} }
        }
      ],
      ['environment', { _index: 1145, title: {}, body: { 'contributing.html': {} } }],
      ['error', { _index: 273, title: {}, body: { 'interfaces/EditorJSMaterialForm.html': {} } }],
      ["error('error", { _index: 598, title: {}, body: { 'directives/NgxEditorJSDirective.html': {} } }],
      ['error(`no', { _index: 830, title: {}, body: { 'injectables/NgxEditorJSService.html': {} } }],
      ['errorstate', { _index: 274, title: {}, body: { 'interfaces/EditorJSMaterialForm.html': {} } }],
      ['etc', { _index: 746, title: {}, body: { 'injectables/NgxEditorJSService.html': {}, 'todo.html': {} } }],
      ['ethnicity', { _index: 1181, title: {}, body: { 'contributing.html': {} } }],
      [
        'event',
        {
          _index: 149,
          title: {},
          body: {
            'interfaces/ChangeMap.html': {},
            'interfaces/EditorJSChange.html': {},
            'interfaces/EditorJSMaterialForm.html': {},
            'interfaces/EditorMap.html': {},
            'interfaces/ReadyMap.html': {},
            'interfaces/SavedMap.html': {},
            'contributing.html': {},
            'license.html': {}
          }
        }
      ],
      ['eventemitter', { _index: 513, title: {}, body: { 'directives/NgxEditorJSDirective.html': {} } }],
      [
        'events',
        {
          _index: 1377,
          title: {},
          body: { 'index.html': {}, 'additional-documentation/tinynodes-library-docs/ngx-editorjs-readme.html': {} }
        }
      ],
      ['everyone', { _index: 1175, title: {}, body: { 'contributing.html': {} } }],
      [
        'example',
        {
          _index: 257,
          title: {},
          body: {
            'interfaces/EditorJSMaterialForm.html': {},
            'directives/NgxEditorJSDirective.html': {},
            'changelog.html': {},
            'index.html': {},
            'additional-documentation/tinynodes-library-docs/ngx-editorjs-readme.html': {},
            'additional-documentation/tinynodes-library-docs/ngx-editorjs-plugins-readme.html': {}
          }
        }
      ],
      ['examples', { _index: 1152, title: {}, body: { 'contributing.html': {} } }],
      [
        'exclude',
        {
          _index: 695,
          title: {},
          body: {
            'injectables/NgxEditorJSPluginService.html': {},
            'injectables/NgxEditorJSService.html': {},
            'additional-documentation/tinynodes-library-docs/ngx-editorjs-plugins-readme.html': {}
          }
        }
      ],
      ['excludelist', { _index: 696, title: {}, body: { 'injectables/NgxEditorJSPluginService.html': {} } }],
      [
        'excludelist.includes(key',
        { _index: 710, title: {}, body: { 'injectables/NgxEditorJSPluginService.html': {} } }
      ],
      [
        'excludes',
        {
          _index: 1524,
          title: {},
          body: { 'additional-documentation/tinynodes-library-docs/ngx-editorjs-readme.html': {} }
        }
      ],
      [
        'excludetools',
        {
          _index: 157,
          title: {},
          body: {
            'interfaces/CreateEditorJSOptions.html': {},
            'directives/NgxEditorJSDirective.html': {},
            'injectables/NgxEditorJSService.html': {},
            'additional-documentation/tinynodes-library-docs/ngx-editorjs-readme.html': {}
          }
        }
      ],
      ['existing', { _index: 543, title: {}, body: { 'directives/NgxEditorJSDirective.html': {} } }],
      ['exiting', { _index: 1082, title: {}, body: { 'changelog.html': {} } }],
      ['expand', { _index: 972, title: {}, body: { 'components/NgxTinynodesMatJsonOutputComponent.html': {} } }],
      ['expanded', { _index: 1114, title: {}, body: { 'changelog.html': {} } }],
      ['expected', { _index: 1240, title: {}, body: { 'contributing.html': {} } }],
      ['experience', { _index: 1174, title: {}, body: { 'contributing.html': {} } }],
      ['experiences', { _index: 1202, title: {}, body: { 'contributing.html': {} } }],
      ['explicit', { _index: 1230, title: {}, body: { 'contributing.html': {} } }],
      [
        'export',
        {
          _index: 23,
          title: {},
          body: {
            'interfaces/Block.html': {},
            'interfaces/BlockData.html': {},
            'interfaces/ChangeMap.html': {},
            'interfaces/CreateEditorJSOptions.html': {},
            'interfaces/EditorJSChange.html': {},
            'interfaces/EditorJSClass.html': {},
            'interfaces/EditorJSInstanceConfig.html': {},
            'interfaces/EditorJSMaterialForm.html': {},
            'interfaces/EditorMap.html': {},
            'classes/FixedHeader.html': {},
            'interfaces/Header.html': {},
            'interfaces/HeaderBlock.html': {},
            'interfaces/Image.html': {},
            'interfaces/ImageBlock.html': {},
            'interfaces/InjectorApiCallOptions.html': {},
            'interfaces/InjectorApiCallResponse.html': {},
            'interfaces/InjectorMethodOption.html': {},
            'interfaces/List.html': {},
            'interfaces/ListBlock.html': {},
            'interfaces/NgxEditorJSConfig.html': {},
            'directives/NgxEditorJSDirective.html': {},
            'modules/NgxEditorJSModule.html': {},
            'interfaces/NgxEditorJSModuleConfig.html': {},
            'injectables/NgxEditorJSPluginService.html': {},
            'injectables/NgxEditorJSService.html': {},
            'modules/NgxEditorjsPluginsModule.html': {},
            'modules/NgxPluginServiceModule.html': {},
            'modules/NgxTinynodesComponentsModule.html': {},
            'interfaces/NgxTinynodesMatFieldComponent.html': {},
            'components/NgxTinynodesMatJsonOutputComponent.html': {},
            'modules/NgxTinynodesMatJsonOutputModule.html': {},
            'modules/NgxTinynodesMatTagInputModule.html': {},
            'interfaces/Paragraph.html': {},
            'interfaces/ParagraphBlock.html': {},
            'modules/PluginCodeModule.html': {},
            'interfaces/PluginConfig.html': {},
            'interfaces/PluginConfigMap.html': {},
            'modules/PluginHeaderModule.html': {},
            'modules/PluginImageModule.html': {},
            'modules/PluginInlineCodeModule.html': {},
            'modules/PluginLinkModule.html': {},
            'modules/PluginListModule.html': {},
            'modules/PluginMarkerModule.html': {},
            'modules/PluginParagraphModule.html': {},
            'modules/PluginSimpleImageModule.html': {},
            'interfaces/ReadyMap.html': {},
            'interfaces/SavedMap.html': {},
            'interfaces/ToolSettingsMap.html': {},
            'additional-documentation/tinynodes-library-docs/ngx-editorjs-readme.html': {},
            'additional-documentation/tinynodes-library-docs/ngx-editorjs-plugins-readme.html': {}
          }
        }
      ],
      [
        'exported',
        {
          _index: 94,
          title: {},
          body: {
            'interfaces/BlockData.html': {},
            'interfaces/PluginConfig.html': {},
            'interfaces/PluginConfigMap.html': {},
            'interfaces/ToolSettingsMap.html': {},
            'additional-documentation/tinynodes-library-docs/ngx-editorjs-readme/ngx-editorjs-changelog.html': {}
          }
        }
      ],
      [
        'exports',
        {
          _index: 628,
          title: {},
          body: {
            'modules/NgxEditorJSModule.html': {},
            'modules/NgxEditorjsPluginsModule.html': {},
            'modules/NgxPluginServiceModule.html': {},
            'modules/NgxTinynodesComponentsModule.html': {},
            'modules/NgxTinynodesMatJsonOutputModule.html': {},
            'modules/NgxTinynodesMatTagInputModule.html': {},
            'changelog.html': {},
            'index.html': {},
            'overview.html': {}
          }
        }
      ],
      ['expose', { _index: 1467, title: {}, body: { 'todo.html': {} } }],
      ['exposed', { _index: 1147, title: {}, body: { 'contributing.html': {} } }],
      ['express', { _index: 1433, title: {}, body: { 'license.html': {} } }],
      ['expression', { _index: 1184, title: {}, body: { 'contributing.html': {} } }],
      [
        'extendable',
        {
          _index: 1518,
          title: {},
          body: { 'additional-documentation/tinynodes-library-docs/ngx-editorjs-readme.html': {} }
        }
      ],
      [
        'extending',
        {
          _index: 1622,
          title: {},
          body: {
            'additional-documentation/tinynodes-library-docs/ngx-editorjs-plugins-readme/ngx-editorjs-plugins-changelog.html': {}
          }
        }
      ],
      [
        'extends',
        {
          _index: 39,
          title: {},
          body: {
            'interfaces/Block.html': {},
            'interfaces/EditorJSClass.html': {},
            'interfaces/EditorJSInstanceConfig.html': {},
            'interfaces/EditorJSMaterialForm.html': {},
            'classes/FixedHeader.html': {},
            'interfaces/Header.html': {},
            'interfaces/HeaderBlock.html': {},
            'interfaces/Image.html': {},
            'interfaces/ImageBlock.html': {},
            'interfaces/InjectorApiCallOptions.html': {},
            'interfaces/InjectorApiCallResponse.html': {},
            'interfaces/InjectorMethodOption.html': {},
            'interfaces/List.html': {},
            'interfaces/ListBlock.html': {},
            'interfaces/NgxTinynodesMatFieldComponent.html': {},
            'interfaces/Paragraph.html': {},
            'interfaces/ParagraphBlock.html': {},
            'modules/PluginHeaderModule.html': {}
          }
        }
      ],
      ['face', { _index: 1308, title: {}, body: { 'contributing.html': {} } }],
      [
        'factory',
        {
          _index: 442,
          title: {},
          body: {
            'interfaces/NgxEditorJSConfig.html': {},
            'modules/NgxEditorJSModule.html': {},
            'interfaces/NgxEditorJSModuleConfig.html': {},
            'miscellaneous/functions.html': {},
            'miscellaneous/variables.html': {},
            'additional-documentation/tinynodes-library-docs/ngx-editorjs-readme.html': {}
          }
        }
      ],
      [
        'fail',
        {
          _index: 1616,
          title: {},
          body: {
            'additional-documentation/tinynodes-library-docs/ngx-editorjs-plugins-readme/ngx-editorjs-plugins-changelog.html': {}
          }
        }
      ],
      [
        'failed',
        {
          _index: 1581,
          title: {},
          body: {
            'additional-documentation/tinynodes-library-docs/ngx-editorjs-readme/ngx-editorjs-changelog.html': {}
          }
        }
      ],
      ['fair', { _index: 1242, title: {}, body: { 'contributing.html': {} } }],
      ['faith', { _index: 1307, title: {}, body: { 'contributing.html': {} } }],
      ['falls', { _index: 565, title: {}, body: { 'directives/NgxEditorJSDirective.html': {} } }],
      [
        'false',
        {
          _index: 159,
          title: {},
          body: {
            'interfaces/CreateEditorJSOptions.html': {},
            'interfaces/EditorJSClass.html': {},
            'interfaces/EditorJSInstanceConfig.html': {},
            'interfaces/EditorJSMaterialForm.html': {},
            'interfaces/InjectorApiCallOptions.html': {},
            'interfaces/InjectorApiCallResponse.html': {},
            'interfaces/InjectorMethodOption.html': {},
            'interfaces/NgxEditorJSConfig.html': {},
            'interfaces/NgxEditorJSModuleConfig.html': {},
            'injectables/NgxEditorJSService.html': {},
            'miscellaneous/variables.html': {},
            'additional-documentation/tinynodes-library-docs/ngx-editorjs-readme.html': {}
          }
        }
      ],
      [
        'feature',
        {
          _index: 1476,
          title: {},
          body: { 'todo.html': {}, 'additional-documentation/tinynodes-library-docs/ngx-editorjs-readme.html': {} }
        }
      ],
      [
        'features',
        {
          _index: 1086,
          title: {},
          body: {
            'changelog.html': {},
            'index.html': {},
            'additional-documentation/tinynodes-library-docs/ngx-editorjs-readme/ngx-editorjs-changelog.html': {}
          }
        }
      ],
      [
        'field',
        {
          _index: 235,
          title: {},
          body: {
            'interfaces/EditorJSMaterialForm.html': {},
            'modules/NgxEditorJSModule.html': {},
            'changelog.html': {},
            'index.html': {},
            'miscellaneous/variables.html': {},
            'additional-documentation/tinynodes-library-docs/ngx-editorjs-readme.html': {},
            'additional-documentation/tinynodes-library-docs/ngx-editorjs-readme/ngx-editorjs-changelog.html': {}
          }
        }
      ],
      [
        "field'},{'name",
        { _index: 984, title: {}, body: { 'components/NgxTinynodesMatJsonOutputComponent.html': {} } }
      ],
      ['field.component', { _index: 663, title: {}, body: { 'modules/NgxEditorJSModule.html': {} } }],
      ['field.component.html', { _index: 260, title: {}, body: { 'interfaces/EditorJSMaterialForm.html': {} } }],
      ['field.component.scss', { _index: 262, title: {}, body: { 'interfaces/EditorJSMaterialForm.html': {} } }],
      [
        'field.component.ts',
        {
          _index: 213,
          title: {},
          body: { 'interfaces/EditorJSMaterialForm.html': {}, 'miscellaneous/variables.html': {} }
        }
      ],
      [
        'field/editorjs',
        {
          _index: 212,
          title: {},
          body: {
            'interfaces/EditorJSMaterialForm.html': {},
            'modules/NgxEditorJSModule.html': {},
            'miscellaneous/variables.html': {}
          }
        }
      ],
      [
        'file',
        {
          _index: 5,
          title: {},
          body: {
            'interfaces/Block.html': {},
            'interfaces/BlockData.html': {},
            'interfaces/ChangeMap.html': {},
            'interfaces/CreateEditorJSOptions.html': {},
            'interfaces/EditorJSChange.html': {},
            'interfaces/EditorJSClass.html': {},
            'interfaces/EditorJSInstanceConfig.html': {},
            'interfaces/EditorJSMaterialForm.html': {},
            'interfaces/EditorMap.html': {},
            'classes/FixedHeader.html': {},
            'interfaces/Header.html': {},
            'interfaces/HeaderBlock.html': {},
            'interfaces/Image.html': {},
            'interfaces/ImageBlock.html': {},
            'interfaces/InjectorApiCallOptions.html': {},
            'interfaces/InjectorApiCallResponse.html': {},
            'interfaces/InjectorMethodOption.html': {},
            'interfaces/List.html': {},
            'interfaces/ListBlock.html': {},
            'interfaces/NgxEditorJSConfig.html': {},
            'directives/NgxEditorJSDirective.html': {},
            'modules/NgxEditorJSModule.html': {},
            'interfaces/NgxEditorJSModuleConfig.html': {},
            'injectables/NgxEditorJSPluginService.html': {},
            'injectables/NgxEditorJSService.html': {},
            'modules/NgxEditorjsPluginsModule.html': {},
            'modules/NgxPluginServiceModule.html': {},
            'modules/NgxTinynodesComponentsModule.html': {},
            'interfaces/NgxTinynodesMatFieldComponent.html': {},
            'components/NgxTinynodesMatJsonOutputComponent.html': {},
            'modules/NgxTinynodesMatJsonOutputModule.html': {},
            'modules/NgxTinynodesMatTagInputModule.html': {},
            'interfaces/Paragraph.html': {},
            'interfaces/ParagraphBlock.html': {},
            'modules/PluginCodeModule.html': {},
            'interfaces/PluginConfig.html': {},
            'interfaces/PluginConfigMap.html': {},
            'modules/PluginHeaderModule.html': {},
            'modules/PluginImageModule.html': {},
            'modules/PluginInlineCodeModule.html': {},
            'modules/PluginLinkModule.html': {},
            'modules/PluginListModule.html': {},
            'modules/PluginMarkerModule.html': {},
            'modules/PluginParagraphModule.html': {},
            'modules/PluginSimpleImageModule.html': {},
            'interfaces/ReadyMap.html': {},
            'interfaces/SavedMap.html': {},
            'interfaces/ToolSettingsMap.html': {},
            'contributing.html': {},
            'additional-documentation/tinynodes-library-docs/ngx-editorjs-readme/ngx-editorjs-changelog.html': {},
            'additional-documentation/tinynodes-library-docs/ngx-editorjs-plugins-readme.html': {},
            'additional-documentation/tinynodes-library-docs/ngx-editorjs-plugins-readme/ngx-editorjs-plugins-changelog.html': {}
          }
        }
      ],
      ['filed', { _index: 1111, title: {}, body: { 'changelog.html': {} } }],
      [
        'files',
        {
          _index: 1153,
          title: {},
          body: {
            'contributing.html': {},
            'license.html': {},
            'additional-documentation/tinynodes-library-docs.html': {}
          }
        }
      ],
      ['filter', { _index: 781, title: {}, body: { 'injectables/NgxEditorJSService.html': {} } }],
      ['filter(([key', { _index: 709, title: {}, body: { 'injectables/NgxEditorJSPluginService.html': {} } }],
      ['filter(haschanged', { _index: 864, title: {}, body: { 'injectables/NgxEditorJSService.html': {} } }],
      ['filtering', { _index: 694, title: {}, body: { 'injectables/NgxEditorJSPluginService.html': {} } }],
      ['finaltools', { _index: 897, title: {}, body: { 'injectables/NgxEditorJSService.html': {} } }],
      [
        'find',
        {
          _index: 1045,
          title: {},
          body: {
            'changelog.html': {},
            'index.html': {},
            'additional-documentation/tinynodes-library-docs.html': {},
            'additional-documentation/tinynodes-library-docs/ngx-editorjs-readme.html': {}
          }
        }
      ],
      ['find(key', { _index: 593, title: {}, body: { 'directives/NgxEditorJSDirective.html': {} } }],
      [
        'first',
        {
          _index: 422,
          title: {},
          body: {
            'interfaces/NgxEditorJSConfig.html': {},
            'directives/NgxEditorJSDirective.html': {},
            'interfaces/NgxEditorJSModuleConfig.html': {},
            'injectables/NgxEditorJSService.html': {},
            'changelog.html': {},
            'contributing.html': {},
            'additional-documentation/tinynodes-library-docs/ngx-editorjs-readme.html': {},
            'additional-documentation/tinynodes-library-docs/ngx-editorjs-readme/ngx-editorjs-changelog.html': {}
          }
        }
      ],
      ['fitness', { _index: 1438, title: {}, body: { 'license.html': {} } }],
      [
        'fix',
        {
          _index: 1621,
          title: {},
          body: {
            'additional-documentation/tinynodes-library-docs/ngx-editorjs-plugins-readme/ngx-editorjs-plugins-changelog.html': {}
          }
        }
      ],
      [
        'fixed',
        {
          _index: 389,
          title: {},
          body: {
            'classes/FixedHeader.html': {},
            'modules/PluginHeaderModule.html': {},
            'additional-documentation/tinynodes-library-docs/ngx-editorjs-readme/ngx-editorjs-changelog.html': {},
            'additional-documentation/tinynodes-library-docs/ngx-editorjs-plugins-readme/ngx-editorjs-plugins-changelog.html': {}
          }
        }
      ],
      [
        'fixedheader',
        {
          _index: 379,
          title: { 'classes/FixedHeader.html': {} },
          body: { 'classes/FixedHeader.html': {}, 'modules/PluginHeaderModule.html': {} }
        }
      ],
      [
        'fixes',
        {
          _index: 1579,
          title: {},
          body: {
            'additional-documentation/tinynodes-library-docs/ngx-editorjs-readme/ngx-editorjs-changelog.html': {}
          }
        }
      ],
      [
        'fixing',
        {
          _index: 1623,
          title: {},
          body: {
            'additional-documentation/tinynodes-library-docs/ngx-editorjs-plugins-readme/ngx-editorjs-plugins-changelog.html': {}
          }
        }
      ],
      ['float', { _index: 322, title: {}, body: { 'interfaces/EditorJSMaterialForm.html': {} } }],
      [
        'focus',
        {
          _index: 343,
          title: {},
          body: {
            'interfaces/EditorJSMaterialForm.html': {},
            'interfaces/NgxEditorJSConfig.html': {},
            'directives/NgxEditorJSDirective.html': {},
            'interfaces/NgxEditorJSModuleConfig.html': {},
            'additional-documentation/tinynodes-library-docs/ngx-editorjs-readme.html': {}
          }
        }
      ],
      [
        'focused',
        {
          _index: 288,
          title: {},
          body: {
            'interfaces/EditorJSMaterialForm.html': {},
            'directives/NgxEditorJSDirective.html': {},
            'additional-documentation/tinynodes-library-docs/ngx-editorjs-readme.html': {}
          }
        }
      ],
      ['focused(focused', { _index: 292, title: {}, body: { 'interfaces/EditorJSMaterialForm.html': {} } }],
      ['focusing', { _index: 1207, title: {}, body: { 'contributing.html': {} } }],
      ['focusmonitor', { _index: 216, title: {}, body: { 'interfaces/EditorJSMaterialForm.html': {} } }],
      ['folder', { _index: 1387, title: {}, body: { 'index.html': {} } }],
      ['follow', { _index: 1137, title: {}, body: { 'contributing.html': {} } }],
      ['following', { _index: 1423, title: {}, body: { 'license.html': {} } }],
      [
        'for_root_options_token',
        {
          _index: 443,
          title: {},
          body: {
            'interfaces/NgxEditorJSConfig.html': {},
            'modules/NgxEditorJSModule.html': {},
            'interfaces/NgxEditorJSModuleConfig.html': {},
            'miscellaneous/variables.html': {}
          }
        }
      ],
      [
        'form',
        {
          _index: 562,
          title: {},
          body: {
            'directives/NgxEditorJSDirective.html': {},
            'changelog.html': {},
            'index.html': {},
            'additional-documentation/tinynodes-library-docs/ngx-editorjs-readme.html': {},
            'additional-documentation/tinynodes-library-docs/ngx-editorjs-readme/ngx-editorjs-changelog.html': {}
          }
        }
      ],
      [
        'format',
        {
          _index: 1528,
          title: {},
          body: {
            'additional-documentation/tinynodes-library-docs/ngx-editorjs-readme/ngx-editorjs-changelog.html': {},
            'additional-documentation/tinynodes-library-docs/ngx-editorjs-plugins-readme.html': {},
            'additional-documentation/tinynodes-library-docs/ngx-editorjs-plugins-readme/ngx-editorjs-plugins-changelog.html': {}
          }
        }
      ],
      ['formcontrol', { _index: 489, title: {}, body: { 'directives/NgxEditorJSDirective.html': {} } }],
      [
        'forms',
        {
          _index: 483,
          title: {},
          body: {
            'directives/NgxEditorJSDirective.html': {},
            'changelog.html': {},
            'index.html': {},
            'additional-documentation/tinynodes-library-docs/ngx-editorjs-readme.html': {},
            'additional-documentation/tinynodes-library-docs/ngx-editorjs-readme/ngx-editorjs-changelog.html': {}
          }
        }
      ],
      [
        'formsmodule',
        {
          _index: 656,
          title: {},
          body: { 'modules/NgxEditorJSModule.html': {}, 'modules/NgxTinynodesMatTagInputModule.html': {} }
        }
      ],
      [
        'formsmodule,commonmodule',
        { _index: 1007, title: {}, body: { 'modules/NgxTinynodesMatTagInputModule.html': {} } }
      ],
      [
        'forroot',
        {
          _index: 646,
          title: {},
          body: {
            'modules/NgxEditorJSModule.html': {},
            'additional-documentation/tinynodes-library-docs/ngx-editorjs-readme.html': {}
          }
        }
      ],
      ['forroot(@optional', { _index: 673, title: {}, body: { 'modules/NgxEditorJSModule.html': {} } }],
      ['forroot(config', { _index: 649, title: {}, body: { 'modules/NgxEditorJSModule.html': {} } }],
      [
        'forwardref',
        {
          _index: 225,
          title: {},
          body: { 'interfaces/EditorJSMaterialForm.html': {}, 'miscellaneous/variables.html': {} }
        }
      ],
      ['fostering', { _index: 1165, title: {}, body: { 'contributing.html': {} } }],
      [
        'framework',
        {
          _index: 1504,
          title: {},
          body: { 'additional-documentation/tinynodes-library-docs/ngx-editorjs-readme.html': {} }
        }
      ],
      ['free', { _index: 1173, title: {}, body: { 'contributing.html': {}, 'license.html': {} } }],
      [
        'friendly',
        {
          _index: 1545,
          title: {},
          body: {
            'additional-documentation/tinynodes-library-docs/ngx-editorjs-readme/ngx-editorjs-changelog.html': {}
          }
        }
      ],
      [
        'full',
        {
          _index: 255,
          title: {},
          body: {
            'interfaces/EditorJSMaterialForm.html': {},
            'index.html': {},
            'todo.html': {},
            'additional-documentation/tinynodes-library-docs/ngx-editorjs-plugins-readme.html': {}
          }
        }
      ],
      ['fully', { _index: 1369, title: {}, body: { 'index.html': {} } }],
      [
        'function',
        {
          _index: 174,
          title: {},
          body: {
            'interfaces/EditorJSClass.html': {},
            'interfaces/EditorJSInstanceConfig.html': {},
            'classes/FixedHeader.html': {},
            'interfaces/InjectorApiCallOptions.html': {},
            'interfaces/InjectorApiCallResponse.html': {},
            'interfaces/InjectorMethodOption.html': {},
            'modules/NgxEditorJSModule.html': {},
            'injectables/NgxEditorJSService.html': {},
            'modules/PluginHeaderModule.html': {},
            'miscellaneous/functions.html': {},
            'additional-documentation/tinynodes-library-docs/ngx-editorjs-readme.html': {},
            'additional-documentation/tinynodes-library-docs/ngx-editorjs-readme/ngx-editorjs-changelog.html': {}
          }
        }
      ],
      [
        'functions',
        { _index: 1350, title: { 'miscellaneous/functions.html': {} }, body: { 'miscellaneous/functions.html': {} } }
      ],
      ['furnished', { _index: 1422, title: {}, body: { 'license.html': {} } }],
      ['further', { _index: 1281, title: {}, body: { 'contributing.html': {} } }],
      [
        'future',
        {
          _index: 1519,
          title: {},
          body: {
            'additional-documentation/tinynodes-library-docs/ngx-editorjs-readme.html': {},
            'additional-documentation/tinynodes-library-docs/ngx-editorjs-plugins-readme.html': {}
          }
        }
      ],
      ['gender', { _index: 1182, title: {}, body: { 'contributing.html': {} } }],
      ['general', { _index: 1396, title: {}, body: { 'license.html': {}, 'todo.html': {} } }],
      [
        'generate',
        {
          _index: 1566,
          title: {},
          body: {
            'additional-documentation/tinynodes-library-docs/ngx-editorjs-readme/ngx-editorjs-changelog.html': {}
          }
        }
      ],
      [
        'generated',
        {
          _index: 1393,
          title: {},
          body: {
            'index.html': {},
            'additional-documentation/tinynodes-library-docs.html': {},
            'additional-documentation/tinynodes-library-docs/ngx-editorjs-readme/ngx-editorjs-changelog.html': {}
          }
        }
      ],
      [
        'geteditor',
        {
          _index: 548,
          title: {},
          body: { 'directives/NgxEditorJSDirective.html': {}, 'injectables/NgxEditorJSService.html': {} }
        }
      ],
      ['geteditor(options', { _index: 762, title: {}, body: { 'injectables/NgxEditorJSService.html': {} } }],
      ['getelement', { _index: 551, title: {}, body: { 'directives/NgxEditorJSDirective.html': {} } }],
      ['getplugin', { _index: 682, title: {}, body: { 'injectables/NgxEditorJSPluginService.html': {} } }],
      [
        'getplugin(key',
        {
          _index: 688,
          title: {},
          body: {
            'injectables/NgxEditorJSPluginService.html': {},
            'additional-documentation/tinynodes-library-docs/ngx-editorjs-plugins-readme.html': {}
          }
        }
      ],
      [
        'getplugins',
        {
          _index: 683,
          title: {},
          body: {
            'injectables/NgxEditorJSPluginService.html': {},
            'additional-documentation/tinynodes-library-docs/ngx-editorjs-plugins-readme.html': {}
          }
        }
      ],
      ['getpluginswithexclude', { _index: 684, title: {}, body: { 'injectables/NgxEditorJSPluginService.html': {} } }],
      [
        'getpluginswithexclude(excludelist',
        {
          _index: 692,
          title: {},
          body: {
            'injectables/NgxEditorJSPluginService.html': {},
            'additional-documentation/tinynodes-library-docs/ngx-editorjs-plugins-readme.html': {}
          }
        }
      ],
      ['getpluginswithinclude', { _index: 685, title: {}, body: { 'injectables/NgxEditorJSPluginService.html': {} } }],
      [
        'getpluginswithinclude(includelist',
        {
          _index: 697,
          title: {},
          body: {
            'injectables/NgxEditorJSPluginService.html': {},
            'additional-documentation/tinynodes-library-docs/ngx-editorjs-plugins-readme.html': {}
          }
        }
      ],
      [
        'gets',
        {
          _index: 321,
          title: {},
          body: {
            'interfaces/EditorJSMaterialForm.html': {},
            'directives/NgxEditorJSDirective.html': {},
            'injectables/NgxEditorJSService.html': {}
          }
        }
      ],
      ['getservice', { _index: 553, title: {}, body: { 'directives/NgxEditorJSDirective.html': {} } }],
      [
        'getters',
        {
          _index: 1584,
          title: {},
          body: {
            'additional-documentation/tinynodes-library-docs/ngx-editorjs-readme/ngx-editorjs-changelog.html': {}
          }
        }
      ],
      [
        'getting',
        {
          _index: 1040,
          title: {
            'changelog.html': {},
            'contributing.html': {},
            'index.html': {},
            'license.html': {},
            'todo.html': {}
          },
          body: { 'changelog.html': {} }
        }
      ],
      ['gettools(excludetools', { _index: 894, title: {}, body: { 'injectables/NgxEditorJSService.html': {} } }],
      ['gettouched', { _index: 555, title: {}, body: { 'directives/NgxEditorJSDirective.html': {} } }],
      [
        'github',
        {
          _index: 406,
          title: {},
          body: {
            'classes/FixedHeader.html': {},
            'modules/PluginCodeModule.html': {},
            'modules/PluginHeaderModule.html': {},
            'modules/PluginImageModule.html': {},
            'modules/PluginInlineCodeModule.html': {},
            'modules/PluginLinkModule.html': {},
            'modules/PluginListModule.html': {},
            'modules/PluginMarkerModule.html': {},
            'modules/PluginParagraphModule.html': {},
            'modules/PluginSimpleImageModule.html': {},
            'additional-documentation/tinynodes-library-docs.html': {},
            'additional-documentation/tinynodes-library-docs/ngx-editorjs-readme.html': {},
            'additional-documentation/tinynodes-library-docs/ngx-editorjs-plugins-readme.html': {}
          }
        }
      ],
      ['good', { _index: 1126, title: {}, body: { 'changelog.html': {}, 'contributing.html': {} } }],
      ['gracefully', { _index: 1203, title: {}, body: { 'contributing.html': {} } }],
      ['granted', { _index: 1401, title: {}, body: { 'license.html': {} } }],
      ['graph', { _index: 1456, title: {}, body: { 'modules.html': {} } }],
      ['hammerjs', { _index: 1336, title: {}, body: { 'dependencies.html': {} } }],
      ['handle', { _index: 1092, title: {}, body: { 'changelog.html': {} } }],
      [
        'handles',
        {
          _index: 715,
          title: {},
          body: {
            'injectables/NgxEditorJSService.html': {},
            'index.html': {},
            'additional-documentation/tinynodes-library-docs/ngx-editorjs-readme/ngx-editorjs-changelog.html': {}
          }
        }
      ],
      [
        'handling',
        {
          _index: 679,
          title: {},
          body: {
            'injectables/NgxEditorJSPluginService.html': {},
            'changelog.html': {},
            'additional-documentation/tinynodes-library-docs/ngx-editorjs-plugins-readme/ngx-editorjs-plugins-changelog.html': {}
          }
        }
      ],
      ['happens', { _index: 722, title: {}, body: { 'injectables/NgxEditorJSService.html': {} } }],
      ['harassing', { _index: 1285, title: {}, body: { 'contributing.html': {} } }],
      ['harassment', { _index: 1172, title: {}, body: { 'contributing.html': {} } }],
      ['harmful', { _index: 1262, title: {}, body: { 'contributing.html': {} } }],
      [
        'haschanged',
        {
          _index: 465,
          title: {},
          body: { 'directives/NgxEditorJSDirective.html': {}, 'injectables/NgxEditorJSService.html': {} }
        }
      ],
      [
        'hassaved',
        {
          _index: 466,
          title: {},
          body: { 'directives/NgxEditorJSDirective.html': {}, 'injectables/NgxEditorJSService.html': {} }
        }
      ],
      ['hassaved(options', { _index: 764, title: {}, body: { 'injectables/NgxEditorJSService.html': {} } }],
      [
        'hassavedmap',
        {
          _index: 192,
          title: {},
          body: {
            'interfaces/EditorJSClass.html': {},
            'interfaces/EditorJSInstanceConfig.html': {},
            'interfaces/InjectorApiCallOptions.html': {},
            'interfaces/InjectorApiCallResponse.html': {},
            'interfaces/InjectorMethodOption.html': {},
            'injectables/NgxEditorJSService.html': {},
            'miscellaneous/variables.html': {}
          }
        }
      ],
      [
        'header',
        {
          _index: 43,
          title: { 'interfaces/Header.html': {} },
          body: {
            'interfaces/Block.html': {},
            'classes/FixedHeader.html': {},
            'interfaces/Header.html': {},
            'interfaces/HeaderBlock.html': {},
            'interfaces/Image.html': {},
            'interfaces/ImageBlock.html': {},
            'interfaces/List.html': {},
            'interfaces/ListBlock.html': {},
            'interfaces/Paragraph.html': {},
            'interfaces/ParagraphBlock.html': {},
            'modules/PluginHeaderModule.html': {},
            'dependencies.html': {},
            'additional-documentation/tinynodes-library-docs/ngx-editorjs-readme/ngx-editorjs-changelog.html': {},
            'additional-documentation/tinynodes-library-docs/ngx-editorjs-plugins-readme/ngx-editorjs-plugins-changelog.html': {}
          }
        }
      ],
      [
        'headerblock',
        {
          _index: 48,
          title: { 'interfaces/HeaderBlock.html': {} },
          body: {
            'interfaces/Block.html': {},
            'interfaces/Header.html': {},
            'interfaces/HeaderBlock.html': {},
            'interfaces/Image.html': {},
            'interfaces/ImageBlock.html': {},
            'interfaces/List.html': {},
            'interfaces/ListBlock.html': {},
            'interfaces/Paragraph.html': {},
            'interfaces/ParagraphBlock.html': {},
            'miscellaneous/typealiases.html': {}
          }
        }
      ],
      [
        'height',
        {
          _index: 429,
          title: {},
          body: {
            'interfaces/NgxEditorJSConfig.html': {},
            'directives/NgxEditorJSDirective.html': {},
            'interfaces/NgxEditorJSModuleConfig.html': {},
            'additional-documentation/tinynodes-library-docs/ngx-editorjs-readme.html': {}
          }
        }
      ],
      ['helper', { _index: 741, title: {}, body: { 'injectables/NgxEditorJSService.html': {} } }],
      ['helpers', { _index: 1469, title: {}, body: { 'todo.html': {} } }],
      [
        'here',
        {
          _index: 1498,
          title: {},
          body: {
            'additional-documentation/tinynodes-library-docs.html': {},
            'additional-documentation/tinynodes-library-docs/ngx-editorjs-plugins-readme.html': {}
          }
        }
      ],
      ['hereby', { _index: 1400, title: {}, body: { 'license.html': {} } }],
      ['hideable', { _index: 1339, title: {}, body: { 'dependencies.html': {} } }],
      [
        'hides',
        {
          _index: 1523,
          title: {},
          body: { 'additional-documentation/tinynodes-library-docs/ngx-editorjs-readme.html': {} }
        }
      ],
      [
        'hidetoolbar',
        {
          _index: 416,
          title: {},
          body: {
            'interfaces/NgxEditorJSConfig.html': {},
            'directives/NgxEditorJSDirective.html': {},
            'interfaces/NgxEditorJSModuleConfig.html': {},
            'additional-documentation/tinynodes-library-docs/ngx-editorjs-readme.html': {}
          }
        }
      ],
      [
        'hold',
        {
          _index: 428,
          title: {},
          body: { 'interfaces/NgxEditorJSConfig.html': {}, 'interfaces/NgxEditorJSModuleConfig.html': {} }
        }
      ],
      [
        'holder',
        {
          _index: 178,
          title: {},
          body: {
            'interfaces/EditorJSClass.html': {},
            'interfaces/EditorJSInstanceConfig.html': {},
            'interfaces/InjectorApiCallOptions.html': {},
            'interfaces/InjectorApiCallResponse.html': {},
            'interfaces/InjectorMethodOption.html': {},
            'interfaces/NgxEditorJSConfig.html': {},
            'directives/NgxEditorJSDirective.html': {},
            'interfaces/NgxEditorJSModuleConfig.html': {},
            'injectables/NgxEditorJSService.html': {},
            'miscellaneous/variables.html': {},
            'additional-documentation/tinynodes-library-docs/ngx-editorjs-readme.html': {},
            'additional-documentation/tinynodes-library-docs/ngx-editorjs-readme/ngx-editorjs-changelog.html': {}
          }
        }
      ],
      ['holders', { _index: 1443, title: {}, body: { 'license.html': {} } }],
      [
        'host',
        {
          _index: 317,
          title: {},
          body: { 'interfaces/EditorJSMaterialForm.html': {}, 'directives/NgxEditorJSDirective.html': {} }
        }
      ],
      ['hostbinding', { _index: 226, title: {}, body: { 'interfaces/EditorJSMaterialForm.html': {} } }],
      ["hostbinding('attr.aria", { _index: 328, title: {}, body: { 'interfaces/EditorJSMaterialForm.html': {} } }],
      ["hostbinding('class.floating", { _index: 323, title: {}, body: { 'interfaces/EditorJSMaterialForm.html': {} } }],
      ['hostlistener', { _index: 557, title: {}, body: { 'directives/NgxEditorJSDirective.html': {} } }],
      ["hostlistener('click", { _index: 567, title: {}, body: { 'directives/NgxEditorJSDirective.html': {} } }],
      ['hostlisteners', { _index: 470, title: {}, body: { 'directives/NgxEditorJSDirective.html': {} } }],
      [
        'html',
        {
          _index: 512,
          title: {},
          body: { 'directives/NgxEditorJSDirective.html': {}, 'components/NgxTinynodesMatJsonOutputComponent.html': {} }
        }
      ],
      ['http://contributor', { _index: 1319, title: {}, body: { 'contributing.html': {} } }],
      [
        'https://angular.io/api/core/ngmodule',
        { _index: 702, title: {}, body: { 'injectables/NgxEditorJSPluginService.html': {} } }
      ],
      [
        'https://angular.io/api/core/ngzone',
        { _index: 788, title: {}, body: { 'injectables/NgxEditorJSService.html': {} } }
      ],
      [
        'https://angular.io/guide/observables',
        { _index: 789, title: {}, body: { 'injectables/NgxEditorJSService.html': {} } }
      ],
      ['https://editorjs.io/api', { _index: 787, title: {}, body: { 'injectables/NgxEditorJSService.html': {} } }],
      [
        'https://editorjs.io/provide',
        {
          _index: 107,
          title: {},
          body: {
            'interfaces/BlockData.html': {},
            'interfaces/PluginConfig.html': {},
            'interfaces/PluginConfigMap.html': {},
            'interfaces/ToolSettingsMap.html': {}
          }
        }
      ],
      [
        'https://github.com/editor',
        { _index: 700, title: {}, body: { 'injectables/NgxEditorJSPluginService.html': {} } }
      ],
      ["i'll", { _index: 1121, title: {}, body: { 'changelog.html': {} } }],
      ["i'm", { _index: 1090, title: {}, body: { 'changelog.html': {} } }],
      ["i've", { _index: 1091, title: {}, body: { 'changelog.html': {} } }],
      [
        'id',
        {
          _index: 267,
          title: {},
          body: {
            'interfaces/EditorJSMaterialForm.html': {},
            'interfaces/NgxEditorJSConfig.html': {},
            'directives/NgxEditorJSDirective.html': {},
            'interfaces/NgxEditorJSModuleConfig.html': {},
            'injectables/NgxEditorJSService.html': {},
            'miscellaneous/variables.html': {},
            'additional-documentation/tinynodes-library-docs/ngx-editorjs-readme.html': {},
            'additional-documentation/tinynodes-library-docs/ngx-editorjs-readme/ngx-editorjs-changelog.html': {}
          }
        }
      ],
      ['identity', { _index: 1183, title: {}, body: { 'contributing.html': {} } }],
      ['ids', { _index: 330, title: {}, body: { 'interfaces/EditorJSMaterialForm.html': {} } }],
      ['ids.join', { _index: 334, title: {}, body: { 'interfaces/EditorJSMaterialForm.html': {} } }],
      ['ignore', { _index: 590, title: {}, body: { 'directives/NgxEditorJSDirective.html': {} } }],
      [
        'image',
        {
          _index: 49,
          title: { 'interfaces/Image.html': {} },
          body: {
            'interfaces/Block.html': {},
            'interfaces/Header.html': {},
            'interfaces/HeaderBlock.html': {},
            'interfaces/Image.html': {},
            'interfaces/ImageBlock.html': {},
            'interfaces/List.html': {},
            'interfaces/ListBlock.html': {},
            'interfaces/Paragraph.html': {},
            'interfaces/ParagraphBlock.html': {},
            'modules/PluginImageModule.html': {},
            'modules/PluginSimpleImageModule.html': {}
          }
        }
      ],
      ['image.module', { _index: 933, title: {}, body: { 'modules/NgxEditorjsPluginsModule.html': {} } }],
      ['image.module.ts', { _index: 1033, title: {}, body: { 'modules/PluginSimpleImageModule.html': {} } }],
      [
        'image/simple',
        {
          _index: 932,
          title: {},
          body: { 'modules/NgxEditorjsPluginsModule.html': {}, 'modules/PluginSimpleImageModule.html': {} }
        }
      ],
      [
        'imageblock',
        {
          _index: 61,
          title: { 'interfaces/ImageBlock.html': {} },
          body: {
            'interfaces/Block.html': {},
            'interfaces/Header.html': {},
            'interfaces/HeaderBlock.html': {},
            'interfaces/Image.html': {},
            'interfaces/ImageBlock.html': {},
            'interfaces/List.html': {},
            'interfaces/ListBlock.html': {},
            'interfaces/Paragraph.html': {},
            'interfaces/ParagraphBlock.html': {},
            'miscellaneous/typealiases.html': {}
          }
        }
      ],
      ['imagery', { _index: 1216, title: {}, body: { 'contributing.html': {} } }],
      ['implementation', { _index: 256, title: {}, body: { 'interfaces/EditorJSMaterialForm.html': {} } }],
      [
        'implemented',
        {
          _index: 1508,
          title: {},
          body: {
            'additional-documentation/tinynodes-library-docs/ngx-editorjs-readme.html': {},
            'additional-documentation/tinynodes-library-docs/ngx-editorjs-plugins-readme.html': {}
          }
        }
      ],
      [
        'implements',
        {
          _index: 266,
          title: {},
          body: {
            'interfaces/EditorJSMaterialForm.html': {},
            'directives/NgxEditorJSDirective.html': {},
            'components/NgxTinynodesMatJsonOutputComponent.html': {}
          }
        }
      ],
      ['implied', { _index: 1434, title: {}, body: { 'license.html': {} } }],
      [
        'import',
        {
          _index: 70,
          title: {},
          body: {
            'interfaces/BlockData.html': {},
            'interfaces/ChangeMap.html': {},
            'interfaces/CreateEditorJSOptions.html': {},
            'interfaces/EditorJSChange.html': {},
            'interfaces/EditorJSClass.html': {},
            'interfaces/EditorJSInstanceConfig.html': {},
            'interfaces/EditorJSMaterialForm.html': {},
            'interfaces/EditorMap.html': {},
            'classes/FixedHeader.html': {},
            'interfaces/InjectorApiCallOptions.html': {},
            'interfaces/InjectorApiCallResponse.html': {},
            'interfaces/InjectorMethodOption.html': {},
            'interfaces/NgxEditorJSConfig.html': {},
            'directives/NgxEditorJSDirective.html': {},
            'modules/NgxEditorJSModule.html': {},
            'interfaces/NgxEditorJSModuleConfig.html': {},
            'injectables/NgxEditorJSPluginService.html': {},
            'injectables/NgxEditorJSService.html': {},
            'modules/NgxEditorjsPluginsModule.html': {},
            'modules/NgxPluginServiceModule.html': {},
            'modules/NgxTinynodesComponentsModule.html': {},
            'interfaces/NgxTinynodesMatFieldComponent.html': {},
            'components/NgxTinynodesMatJsonOutputComponent.html': {},
            'modules/NgxTinynodesMatJsonOutputModule.html': {},
            'modules/NgxTinynodesMatTagInputModule.html': {},
            'modules/PluginCodeModule.html': {},
            'interfaces/PluginConfig.html': {},
            'interfaces/PluginConfigMap.html': {},
            'modules/PluginHeaderModule.html': {},
            'modules/PluginImageModule.html': {},
            'modules/PluginInlineCodeModule.html': {},
            'modules/PluginLinkModule.html': {},
            'modules/PluginListModule.html': {},
            'modules/PluginMarkerModule.html': {},
            'modules/PluginParagraphModule.html': {},
            'modules/PluginSimpleImageModule.html': {},
            'interfaces/ReadyMap.html': {},
            'interfaces/SavedMap.html': {},
            'interfaces/ToolSettingsMap.html': {},
            'additional-documentation/tinynodes-library-docs/ngx-editorjs-readme.html': {},
            'additional-documentation/tinynodes-library-docs/ngx-editorjs-readme/ngx-editorjs-changelog.html': {},
            'additional-documentation/tinynodes-library-docs/ngx-editorjs-plugins-readme.html': {}
          }
        }
      ],
      [
        'important',
        {
          _index: 1601,
          title: {},
          body: { 'additional-documentation/tinynodes-library-docs/ngx-editorjs-plugins-readme.html': {} }
        }
      ],
      [
        'imported',
        {
          _index: 1382,
          title: {},
          body: {
            'index.html': {},
            'additional-documentation/tinynodes-library-docs/ngx-editorjs-readme/ngx-editorjs-changelog.html': {},
            'additional-documentation/tinynodes-library-docs/ngx-editorjs-plugins-readme.html': {}
          }
        }
      ],
      ['importing', { _index: 921, title: {}, body: { 'modules/NgxEditorjsPluginsModule.html': {} } }],
      [
        'imports',
        {
          _index: 648,
          title: {},
          body: {
            'modules/NgxEditorJSModule.html': {},
            'modules/NgxEditorjsPluginsModule.html': {},
            'modules/NgxTinynodesComponentsModule.html': {},
            'modules/NgxTinynodesMatJsonOutputModule.html': {},
            'modules/NgxTinynodesMatTagInputModule.html': {},
            'additional-documentation/tinynodes-library-docs/ngx-editorjs-readme.html': {}
          }
        }
      ],
      [
        'improved',
        {
          _index: 1079,
          title: {},
          body: {
            'changelog.html': {},
            'additional-documentation/tinynodes-library-docs/ngx-editorjs-readme/ngx-editorjs-changelog.html': {}
          }
        }
      ],
      [
        'improvements',
        {
          _index: 1069,
          title: {},
          body: {
            'changelog.html': {},
            'additional-documentation/tinynodes-library-docs/ngx-editorjs-readme/ngx-editorjs-changelog.html': {}
          }
        }
      ],
      ['inappropriate', { _index: 1233, title: {}, body: { 'contributing.html': {} } }],
      ['incident', { _index: 1301, title: {}, body: { 'contributing.html': {} } }],
      [
        'include',
        {
          _index: 161,
          title: {},
          body: {
            'interfaces/CreateEditorJSOptions.html': {},
            'injectables/NgxEditorJSPluginService.html': {},
            'modules/NgxEditorjsPluginsModule.html': {},
            'contributing.html': {},
            'additional-documentation/tinynodes-library-docs/ngx-editorjs-readme.html': {},
            'additional-documentation/tinynodes-library-docs/ngx-editorjs-readme/ngx-editorjs-changelog.html': {},
            'additional-documentation/tinynodes-library-docs/ngx-editorjs-plugins-readme.html': {}
          }
        }
      ],
      [
        'included',
        {
          _index: 1428,
          title: {},
          body: {
            'license.html': {},
            'additional-documentation/tinynodes-library-docs/ngx-editorjs-readme/ngx-editorjs-changelog.html': {}
          }
        }
      ],
      ['includelist', { _index: 699, title: {}, body: { 'injectables/NgxEditorJSPluginService.html': {} } }],
      [
        'includelist.includes(key',
        { _index: 713, title: {}, body: { 'injectables/NgxEditorJSPluginService.html': {} } }
      ],
      [
        'includes',
        {
          _index: 1144,
          title: {},
          body: {
            'contributing.html': {},
            'additional-documentation/tinynodes-library-docs/ngx-editorjs-readme/ngx-editorjs-changelog.html': {}
          }
        }
      ],
      ['includetools', { _index: 592, title: {}, body: { 'directives/NgxEditorJSDirective.html': {} } }],
      ['including', { _index: 1410, title: {}, body: { 'license.html': {} } }],
      ['inclusive', { _index: 1196, title: {}, body: { 'contributing.html': {} } }],
      ['increase', { _index: 1150, title: {}, body: { 'contributing.html': {} } }],
      [
        'index',
        {
          _index: 12,
          title: { 'index.html': {} },
          body: {
            'interfaces/Block.html': {},
            'interfaces/CreateEditorJSOptions.html': {},
            'interfaces/EditorJSChange.html': {},
            'interfaces/EditorJSClass.html': {},
            'interfaces/EditorJSInstanceConfig.html': {},
            'classes/FixedHeader.html': {},
            'interfaces/Header.html': {},
            'interfaces/HeaderBlock.html': {},
            'interfaces/Image.html': {},
            'interfaces/ImageBlock.html': {},
            'interfaces/InjectorApiCallOptions.html': {},
            'interfaces/InjectorApiCallResponse.html': {},
            'interfaces/InjectorMethodOption.html': {},
            'interfaces/List.html': {},
            'interfaces/ListBlock.html': {},
            'interfaces/NgxEditorJSConfig.html': {},
            'directives/NgxEditorJSDirective.html': {},
            'interfaces/NgxEditorJSModuleConfig.html': {},
            'injectables/NgxEditorJSPluginService.html': {},
            'injectables/NgxEditorJSService.html': {},
            'components/NgxTinynodesMatJsonOutputComponent.html': {},
            'interfaces/Paragraph.html': {},
            'interfaces/ParagraphBlock.html': {},
            'interfaces/PluginConfig.html': {},
            'miscellaneous/enumerations.html': {},
            'miscellaneous/functions.html': {},
            'miscellaneous/typealiases.html': {},
            'miscellaneous/variables.html': {}
          }
        }
      ],
      [
        'indexable',
        {
          _index: 15,
          title: {},
          body: {
            'interfaces/Block.html': {},
            'interfaces/BlockData.html': {},
            'interfaces/ChangeMap.html': {},
            'interfaces/EditorMap.html': {},
            'interfaces/PluginConfigMap.html': {},
            'interfaces/ReadyMap.html': {},
            'interfaces/SavedMap.html': {},
            'interfaces/ToolSettingsMap.html': {}
          }
        }
      ],
      [
        'individual',
        { _index: 923, title: {}, body: { 'modules/NgxEditorjsPluginsModule.html': {}, 'contributing.html': {} } }
      ],
      [
        'info',
        {
          _index: 3,
          title: {},
          body: {
            'interfaces/Block.html': {},
            'interfaces/BlockData.html': {},
            'interfaces/ChangeMap.html': {},
            'interfaces/CreateEditorJSOptions.html': {},
            'interfaces/EditorJSChange.html': {},
            'interfaces/EditorJSClass.html': {},
            'interfaces/EditorJSInstanceConfig.html': {},
            'interfaces/EditorJSMaterialForm.html': {},
            'interfaces/EditorMap.html': {},
            'classes/FixedHeader.html': {},
            'interfaces/Header.html': {},
            'interfaces/HeaderBlock.html': {},
            'interfaces/Image.html': {},
            'interfaces/ImageBlock.html': {},
            'interfaces/InjectorApiCallOptions.html': {},
            'interfaces/InjectorApiCallResponse.html': {},
            'interfaces/InjectorMethodOption.html': {},
            'interfaces/List.html': {},
            'interfaces/ListBlock.html': {},
            'interfaces/NgxEditorJSConfig.html': {},
            'directives/NgxEditorJSDirective.html': {},
            'modules/NgxEditorJSModule.html': {},
            'interfaces/NgxEditorJSModuleConfig.html': {},
            'injectables/NgxEditorJSPluginService.html': {},
            'injectables/NgxEditorJSService.html': {},
            'modules/NgxEditorjsPluginsModule.html': {},
            'modules/NgxPluginServiceModule.html': {},
            'modules/NgxTinynodesComponentsModule.html': {},
            'interfaces/NgxTinynodesMatFieldComponent.html': {},
            'components/NgxTinynodesMatJsonOutputComponent.html': {},
            'modules/NgxTinynodesMatJsonOutputModule.html': {},
            'modules/NgxTinynodesMatTagInputModule.html': {},
            'interfaces/Paragraph.html': {},
            'interfaces/ParagraphBlock.html': {},
            'modules/PluginCodeModule.html': {},
            'interfaces/PluginConfig.html': {},
            'interfaces/PluginConfigMap.html': {},
            'modules/PluginHeaderModule.html': {},
            'modules/PluginImageModule.html': {},
            'modules/PluginInlineCodeModule.html': {},
            'modules/PluginLinkModule.html': {},
            'modules/PluginListModule.html': {},
            'modules/PluginMarkerModule.html': {},
            'modules/PluginParagraphModule.html': {},
            'modules/PluginSimpleImageModule.html': {},
            'interfaces/ReadyMap.html': {},
            'interfaces/SavedMap.html': {},
            'interfaces/ToolSettingsMap.html': {}
          }
        }
      ],
      [
        'information',
        {
          _index: 173,
          title: {},
          body: {
            'interfaces/EditorJSClass.html': {},
            'interfaces/EditorJSInstanceConfig.html': {},
            'interfaces/InjectorApiCallOptions.html': {},
            'interfaces/InjectorApiCallResponse.html': {},
            'interfaces/InjectorMethodOption.html': {},
            'injectables/NgxEditorJSService.html': {},
            'contributing.html': {},
            'index.html': {},
            'additional-documentation/tinynodes-library-docs/ngx-editorjs-readme.html': {}
          }
        }
      ],
      [
        'initial',
        {
          _index: 116,
          title: {},
          body: {
            'interfaces/BlockData.html': {},
            'interfaces/NgxEditorJSConfig.html': {},
            'directives/NgxEditorJSDirective.html': {},
            'interfaces/NgxEditorJSModuleConfig.html': {},
            'interfaces/PluginConfig.html': {},
            'interfaces/PluginConfigMap.html': {},
            'interfaces/ToolSettingsMap.html': {},
            'miscellaneous/variables.html': {},
            'additional-documentation/tinynodes-library-docs/ngx-editorjs-readme.html': {},
            'additional-documentation/tinynodes-library-docs/ngx-editorjs-readme/ngx-editorjs-changelog.html': {},
            'additional-documentation/tinynodes-library-docs/ngx-editorjs-plugins-readme/ngx-editorjs-plugins-changelog.html': {}
          }
        }
      ],
      [
        'initialblock',
        {
          _index: 417,
          title: {},
          body: {
            'interfaces/NgxEditorJSConfig.html': {},
            'directives/NgxEditorJSDirective.html': {},
            'interfaces/NgxEditorJSModuleConfig.html': {},
            'additional-documentation/tinynodes-library-docs/ngx-editorjs-readme.html': {}
          }
        }
      ],
      [
        'initialised',
        {
          _index: 1598,
          title: {},
          body: { 'additional-documentation/tinynodes-library-docs/ngx-editorjs-plugins-readme.html': {} }
        }
      ],
      [
        'initialized',
        {
          _index: 481,
          title: {},
          body: { 'directives/NgxEditorJSDirective.html': {}, 'injectables/NgxEditorJSService.html': {} }
        }
      ],
      [
        'inject',
        {
          _index: 681,
          title: {},
          body: { 'injectables/NgxEditorJSPluginService.html': {}, 'injectables/NgxEditorJSService.html': {} }
        }
      ],
      ['inject(editorjsinstance', { _index: 792, title: {}, body: { 'injectables/NgxEditorJSService.html': {} } }],
      ['inject(ngx_editorjs_config', { _index: 793, title: {}, body: { 'injectables/NgxEditorJSService.html': {} } }],
      [
        'injectable',
        {
          _index: 674,
          title: { 'injectables/NgxEditorJSPluginService.html': {}, 'injectables/NgxEditorJSService.html': {} },
          body: {
            'injectables/NgxEditorJSPluginService.html': {},
            'injectables/NgxEditorJSService.html': {},
            'additional-documentation/tinynodes-library-docs/ngx-editorjs-readme/ngx-editorjs-changelog.html': {},
            'additional-documentation/tinynodes-library-docs/ngx-editorjs-plugins-readme/ngx-editorjs-plugins-changelog.html': {}
          }
        }
      ],
      [
        'injectables',
        {
          _index: 676,
          title: {},
          body: {
            'injectables/NgxEditorJSPluginService.html': {},
            'injectables/NgxEditorJSService.html': {},
            'overview.html': {}
          }
        }
      ],
      [
        'injected',
        {
          _index: 164,
          title: {},
          body: {
            'interfaces/EditorJSClass.html': {},
            'interfaces/EditorJSInstanceConfig.html': {},
            'interfaces/InjectorApiCallOptions.html': {},
            'interfaces/InjectorApiCallResponse.html': {},
            'interfaces/InjectorMethodOption.html': {},
            'interfaces/NgxEditorJSConfig.html': {},
            'interfaces/NgxEditorJSModuleConfig.html': {},
            'injectables/NgxEditorJSPluginService.html': {},
            'injectables/NgxEditorJSService.html': {},
            'index.html': {},
            'miscellaneous/variables.html': {},
            'additional-documentation/tinynodes-library-docs/ngx-editorjs-readme.html': {},
            'additional-documentation/tinynodes-library-docs/ngx-editorjs-plugins-readme/ngx-editorjs-plugins-changelog.html': {}
          }
        }
      ],
      [
        'injecting',
        {
          _index: 441,
          title: {},
          body: {
            'interfaces/NgxEditorJSConfig.html': {},
            'interfaces/NgxEditorJSModuleConfig.html': {},
            'changelog.html': {},
            'miscellaneous/variables.html': {}
          }
        }
      ],
      [
        'injection',
        {
          _index: 114,
          title: {},
          body: {
            'interfaces/BlockData.html': {},
            'interfaces/EditorJSClass.html': {},
            'interfaces/EditorJSInstanceConfig.html': {},
            'interfaces/InjectorApiCallOptions.html': {},
            'interfaces/InjectorApiCallResponse.html': {},
            'interfaces/InjectorMethodOption.html': {},
            'interfaces/NgxEditorJSConfig.html': {},
            'interfaces/NgxEditorJSModuleConfig.html': {},
            'interfaces/PluginConfig.html': {},
            'interfaces/PluginConfigMap.html': {},
            'interfaces/ToolSettingsMap.html': {},
            'miscellaneous/variables.html': {},
            'additional-documentation/tinynodes-library-docs/ngx-editorjs-readme/ngx-editorjs-changelog.html': {},
            'additional-documentation/tinynodes-library-docs/ngx-editorjs-plugins-readme.html': {}
          }
        }
      ],
      [
        'injectiontoken',
        {
          _index: 71,
          title: {},
          body: {
            'interfaces/BlockData.html': {},
            'interfaces/EditorJSClass.html': {},
            'interfaces/EditorJSInstanceConfig.html': {},
            'interfaces/InjectorApiCallOptions.html': {},
            'interfaces/InjectorApiCallResponse.html': {},
            'interfaces/InjectorMethodOption.html': {},
            'interfaces/NgxEditorJSConfig.html': {},
            'interfaces/NgxEditorJSModuleConfig.html': {},
            'interfaces/PluginConfig.html': {},
            'interfaces/PluginConfigMap.html': {},
            'interfaces/ToolSettingsMap.html': {}
          }
        }
      ],
      [
        "injectiontoken('editior_js_instance",
        {
          _index: 447,
          title: {},
          body: {
            'interfaces/NgxEditorJSConfig.html': {},
            'interfaces/NgxEditorJSModuleConfig.html': {},
            'miscellaneous/variables.html': {}
          }
        }
      ],
      [
        "injectiontoken('editor_js_tool_injector",
        {
          _index: 122,
          title: {},
          body: {
            'interfaces/BlockData.html': {},
            'interfaces/PluginConfig.html': {},
            'interfaces/PluginConfigMap.html': {},
            'interfaces/ToolSettingsMap.html': {},
            'miscellaneous/variables.html': {}
          }
        }
      ],
      [
        "injectiontoken('editorjs_module_import",
        {
          _index: 194,
          title: {},
          body: {
            'interfaces/EditorJSClass.html': {},
            'interfaces/EditorJSInstanceConfig.html': {},
            'interfaces/InjectorApiCallOptions.html': {},
            'interfaces/InjectorApiCallResponse.html': {},
            'interfaces/InjectorMethodOption.html': {},
            'miscellaneous/variables.html': {}
          }
        }
      ],
      [
        "injectiontoken('editorjsinstance",
        {
          _index: 197,
          title: {},
          body: {
            'interfaces/EditorJSClass.html': {},
            'interfaces/EditorJSInstanceConfig.html': {},
            'interfaces/InjectorApiCallOptions.html': {},
            'interfaces/InjectorApiCallResponse.html': {},
            'interfaces/InjectorMethodOption.html': {},
            'miscellaneous/variables.html': {}
          }
        }
      ],
      [
        "injectiontoken('for_root_options_token",
        {
          _index: 444,
          title: {},
          body: {
            'interfaces/NgxEditorJSConfig.html': {},
            'interfaces/NgxEditorJSModuleConfig.html': {},
            'miscellaneous/variables.html': {}
          }
        }
      ],
      [
        "injectiontoken('ngx_editorjs_config",
        {
          _index: 440,
          title: {},
          body: {
            'interfaces/NgxEditorJSConfig.html': {},
            'interfaces/NgxEditorJSModuleConfig.html': {},
            'miscellaneous/variables.html': {}
          }
        }
      ],
      [
        "injectiontoken('plugin_config",
        {
          _index: 124,
          title: {},
          body: {
            'interfaces/BlockData.html': {},
            'interfaces/PluginConfig.html': {},
            'interfaces/PluginConfigMap.html': {},
            'interfaces/ToolSettingsMap.html': {},
            'miscellaneous/variables.html': {}
          }
        }
      ],
      [
        "injectiontoken('pluginclasses",
        {
          _index: 129,
          title: {},
          body: {
            'interfaces/BlockData.html': {},
            'interfaces/PluginConfig.html': {},
            'interfaces/PluginConfigMap.html': {},
            'interfaces/ToolSettingsMap.html': {},
            'miscellaneous/variables.html': {}
          }
        }
      ],
      [
        'injector',
        {
          _index: 195,
          title: {},
          body: {
            'interfaces/EditorJSClass.html': {},
            'interfaces/EditorJSInstanceConfig.html': {},
            'interfaces/InjectorApiCallOptions.html': {},
            'interfaces/InjectorApiCallResponse.html': {},
            'interfaces/InjectorMethodOption.html': {},
            'changelog.html': {},
            'miscellaneous/variables.html': {},
            'additional-documentation/tinynodes-library-docs/ngx-editorjs-readme/ngx-editorjs-changelog.html': {}
          }
        }
      ],
      [
        'injectorapicalloptions',
        {
          _index: 204,
          title: { 'interfaces/InjectorApiCallOptions.html': {} },
          body: {
            'interfaces/EditorJSClass.html': {},
            'interfaces/EditorJSInstanceConfig.html': {},
            'interfaces/InjectorApiCallOptions.html': {},
            'interfaces/InjectorApiCallResponse.html': {},
            'interfaces/InjectorMethodOption.html': {},
            'injectables/NgxEditorJSService.html': {}
          }
        }
      ],
      [
        'injectorapicallresponse',
        {
          _index: 207,
          title: { 'interfaces/InjectorApiCallResponse.html': {} },
          body: {
            'interfaces/EditorJSClass.html': {},
            'interfaces/EditorJSInstanceConfig.html': {},
            'interfaces/InjectorApiCallOptions.html': {},
            'interfaces/InjectorApiCallResponse.html': {},
            'interfaces/InjectorMethodOption.html': {},
            'injectables/NgxEditorJSService.html': {}
          }
        }
      ],
      [
        'injectormethodoption',
        {
          _index: 198,
          title: { 'interfaces/InjectorMethodOption.html': {} },
          body: {
            'interfaces/EditorJSClass.html': {},
            'interfaces/EditorJSInstanceConfig.html': {},
            'interfaces/InjectorApiCallOptions.html': {},
            'interfaces/InjectorApiCallResponse.html': {},
            'interfaces/InjectorMethodOption.html': {},
            'injectables/NgxEditorJSService.html': {},
            'additional-documentation/tinynodes-library-docs/ngx-editorjs-readme/ngx-editorjs-changelog.html': {}
          }
        }
      ],
      [
        'inline',
        {
          _index: 80,
          title: {},
          body: {
            'interfaces/BlockData.html': {},
            'injectables/NgxEditorJSService.html': {},
            'modules/NgxEditorjsPluginsModule.html': {},
            'interfaces/PluginConfig.html': {},
            'interfaces/PluginConfigMap.html': {},
            'modules/PluginInlineCodeModule.html': {},
            'interfaces/ToolSettingsMap.html': {},
            'miscellaneous/enumerations.html': {},
            'additional-documentation/tinynodes-library-docs/ngx-editorjs-readme/ngx-editorjs-changelog.html': {},
            'additional-documentation/tinynodes-library-docs/ngx-editorjs-plugins-readme.html': {}
          }
        }
      ],
      ['inlinecode', { _index: 1019, title: {}, body: { 'modules/PluginInlineCodeModule.html': {} } }],
      [
        'input',
        {
          _index: 227,
          title: {},
          body: {
            'interfaces/EditorJSMaterialForm.html': {},
            'classes/FixedHeader.html': {},
            'directives/NgxEditorJSDirective.html': {},
            'components/NgxTinynodesMatJsonOutputComponent.html': {},
            'modules/PluginHeaderModule.html': {},
            'todo.html': {},
            'additional-documentation/tinynodes-library-docs/ngx-editorjs-readme/ngx-editorjs-changelog.html': {}
          }
        }
      ],
      ["input('disabled", { _index: 304, title: {}, body: { 'interfaces/EditorJSMaterialForm.html': {} } }],
      ["input('focused", { _index: 291, title: {}, body: { 'interfaces/EditorJSMaterialForm.html': {} } }],
      ["input('placeholder", { _index: 286, title: {}, body: { 'interfaces/EditorJSMaterialForm.html': {} } }],
      ["input('required", { _index: 298, title: {}, body: { 'interfaces/EditorJSMaterialForm.html': {} } }],
      ["input('value", { _index: 279, title: {}, body: { 'interfaces/EditorJSMaterialForm.html': {} } }],
      ['input.component', { _index: 1004, title: {}, body: { 'modules/NgxTinynodesMatTagInputModule.html': {} } }],
      ['input.component.ts', { _index: 1490, title: {}, body: { 'miscellaneous/variables.html': {} } }],
      ['input.module', { _index: 957, title: {}, body: { 'modules/NgxTinynodesComponentsModule.html': {} } }],
      ['input.module.ts', { _index: 1003, title: {}, body: { 'modules/NgxTinynodesMatTagInputModule.html': {} } }],
      [
        'input/mat',
        {
          _index: 956,
          title: {},
          body: {
            'modules/NgxTinynodesComponentsModule.html': {},
            'modules/NgxTinynodesMatTagInputModule.html': {},
            'miscellaneous/variables.html': {}
          }
        }
      ],
      ['inputconfig', { _index: 1359, title: {}, body: { 'miscellaneous/functions.html': {} } }],
      [
        'inputs',
        {
          _index: 463,
          title: {},
          body: { 'directives/NgxEditorJSDirective.html': {}, 'components/NgxTinynodesMatJsonOutputComponent.html': {} }
        }
      ],
      [
        'inside',
        {
          _index: 360,
          title: {},
          body: {
            'interfaces/EditorJSMaterialForm.html': {},
            'directives/NgxEditorJSDirective.html': {},
            'index.html': {},
            'additional-documentation/tinynodes-library-docs/ngx-editorjs-readme.html': {}
          }
        }
      ],
      [
        'install',
        {
          _index: 1140,
          title: {},
          body: {
            'contributing.html': {},
            'dependencies.html': {},
            'additional-documentation/tinynodes-library-docs/ngx-editorjs-readme.html': {},
            'additional-documentation/tinynodes-library-docs/ngx-editorjs-plugins-readme.html': {}
          }
        }
      ],
      [
        'installed',
        {
          _index: 1511,
          title: {},
          body: { 'additional-documentation/tinynodes-library-docs/ngx-editorjs-readme.html': {} }
        }
      ],
      [
        'installing',
        {
          _index: 1509,
          title: {},
          body: { 'additional-documentation/tinynodes-library-docs/ngx-editorjs-readme.html': {} }
        }
      ],
      [
        'instance',
        {
          _index: 136,
          title: {},
          body: {
            'interfaces/ChangeMap.html': {},
            'interfaces/EditorJSChange.html': {},
            'interfaces/EditorJSClass.html': {},
            'interfaces/EditorJSInstanceConfig.html': {},
            'interfaces/EditorJSMaterialForm.html': {},
            'interfaces/EditorMap.html': {},
            'interfaces/InjectorApiCallOptions.html': {},
            'interfaces/InjectorApiCallResponse.html': {},
            'interfaces/InjectorMethodOption.html': {},
            'interfaces/NgxEditorJSConfig.html': {},
            'directives/NgxEditorJSDirective.html': {},
            'modules/NgxEditorJSModule.html': {},
            'interfaces/NgxEditorJSModuleConfig.html': {},
            'injectables/NgxEditorJSService.html': {},
            'components/NgxTinynodesMatJsonOutputComponent.html': {},
            'interfaces/ReadyMap.html': {},
            'interfaces/SavedMap.html': {},
            'changelog.html': {},
            'index.html': {},
            'miscellaneous/variables.html': {},
            'additional-documentation/tinynodes-library-docs/ngx-editorjs-readme.html': {},
            'additional-documentation/tinynodes-library-docs/ngx-editorjs-readme/ngx-editorjs-changelog.html': {}
          }
        }
      ],
      [
        'instances',
        {
          _index: 141,
          title: {},
          body: {
            'interfaces/ChangeMap.html': {},
            'interfaces/EditorJSChange.html': {},
            'interfaces/EditorMap.html': {},
            'injectables/NgxEditorJSService.html': {},
            'interfaces/ReadyMap.html': {},
            'interfaces/SavedMap.html': {},
            'changelog.html': {},
            'contributing.html': {},
            'index.html': {},
            'additional-documentation/tinynodes-library-docs/ngx-editorjs-readme.html': {},
            'additional-documentation/tinynodes-library-docs/ngx-editorjs-readme/ngx-editorjs-changelog.html': {},
            'additional-documentation/tinynodes-library-docs/ngx-editorjs-plugins-readme.html': {}
          }
        }
      ],
      ['insulting/derogatory', { _index: 1221, title: {}, body: { 'contributing.html': {} } }],
      [
        'interact',
        {
          _index: 1379,
          title: {},
          body: { 'index.html': {}, 'additional-documentation/tinynodes-library-docs/ngx-editorjs-readme.html': {} }
        }
      ],
      ['interactions', { _index: 1138, title: {}, body: { 'contributing.html': {} } }],
      ['interest', { _index: 1164, title: {}, body: { 'contributing.html': {} } }],
      [
        'interface',
        {
          _index: 0,
          title: {
            'interfaces/Block.html': {},
            'interfaces/BlockData.html': {},
            'interfaces/ChangeMap.html': {},
            'interfaces/CreateEditorJSOptions.html': {},
            'interfaces/EditorJSChange.html': {},
            'interfaces/EditorJSClass.html': {},
            'interfaces/EditorJSInstanceConfig.html': {},
            'interfaces/EditorJSMaterialForm.html': {},
            'interfaces/EditorMap.html': {},
            'interfaces/Header.html': {},
            'interfaces/HeaderBlock.html': {},
            'interfaces/Image.html': {},
            'interfaces/ImageBlock.html': {},
            'interfaces/InjectorApiCallOptions.html': {},
            'interfaces/InjectorApiCallResponse.html': {},
            'interfaces/InjectorMethodOption.html': {},
            'interfaces/List.html': {},
            'interfaces/ListBlock.html': {},
            'interfaces/NgxEditorJSConfig.html': {},
            'interfaces/NgxEditorJSModuleConfig.html': {},
            'interfaces/NgxTinynodesMatFieldComponent.html': {},
            'interfaces/Paragraph.html': {},
            'interfaces/ParagraphBlock.html': {},
            'interfaces/PluginConfig.html': {},
            'interfaces/PluginConfigMap.html': {},
            'interfaces/ReadyMap.html': {},
            'interfaces/SavedMap.html': {},
            'interfaces/ToolSettingsMap.html': {}
          },
          body: {
            'interfaces/Block.html': {},
            'interfaces/BlockData.html': {},
            'interfaces/ChangeMap.html': {},
            'interfaces/CreateEditorJSOptions.html': {},
            'interfaces/EditorJSChange.html': {},
            'interfaces/EditorJSClass.html': {},
            'interfaces/EditorJSInstanceConfig.html': {},
            'interfaces/EditorJSMaterialForm.html': {},
            'interfaces/EditorMap.html': {},
            'interfaces/Header.html': {},
            'interfaces/HeaderBlock.html': {},
            'interfaces/Image.html': {},
            'interfaces/ImageBlock.html': {},
            'interfaces/InjectorApiCallOptions.html': {},
            'interfaces/InjectorApiCallResponse.html': {},
            'interfaces/InjectorMethodOption.html': {},
            'interfaces/List.html': {},
            'interfaces/ListBlock.html': {},
            'interfaces/NgxEditorJSConfig.html': {},
            'interfaces/NgxEditorJSModuleConfig.html': {},
            'interfaces/NgxTinynodesMatFieldComponent.html': {},
            'interfaces/Paragraph.html': {},
            'interfaces/ParagraphBlock.html': {},
            'interfaces/PluginConfig.html': {},
            'interfaces/PluginConfigMap.html': {},
            'interfaces/ReadyMap.html': {},
            'interfaces/SavedMap.html': {},
            'interfaces/ToolSettingsMap.html': {},
            'changelog.html': {},
            'contributing.html': {},
            'index.html': {},
            'additional-documentation/tinynodes-library-docs/ngx-editorjs-readme.html': {},
            'additional-documentation/tinynodes-library-docs/ngx-editorjs-readme/ngx-editorjs-changelog.html': {}
          }
        }
      ],
      [
        'interfaces',
        {
          _index: 2,
          title: {},
          body: {
            'interfaces/Block.html': {},
            'interfaces/BlockData.html': {},
            'interfaces/ChangeMap.html': {},
            'interfaces/CreateEditorJSOptions.html': {},
            'interfaces/EditorJSChange.html': {},
            'interfaces/EditorJSClass.html': {},
            'interfaces/EditorJSInstanceConfig.html': {},
            'interfaces/EditorJSMaterialForm.html': {},
            'interfaces/EditorMap.html': {},
            'interfaces/Header.html': {},
            'interfaces/HeaderBlock.html': {},
            'interfaces/Image.html': {},
            'interfaces/ImageBlock.html': {},
            'interfaces/InjectorApiCallOptions.html': {},
            'interfaces/InjectorApiCallResponse.html': {},
            'interfaces/InjectorMethodOption.html': {},
            'interfaces/List.html': {},
            'interfaces/ListBlock.html': {},
            'interfaces/NgxEditorJSConfig.html': {},
            'interfaces/NgxEditorJSModuleConfig.html': {},
            'interfaces/NgxTinynodesMatFieldComponent.html': {},
            'interfaces/Paragraph.html': {},
            'interfaces/ParagraphBlock.html': {},
            'interfaces/PluginConfig.html': {},
            'interfaces/PluginConfigMap.html': {},
            'interfaces/ReadyMap.html': {},
            'interfaces/SavedMap.html': {},
            'interfaces/ToolSettingsMap.html': {},
            'overview.html': {}
          }
        }
      ],
      [
        'interfaces/pluginconfig.html',
        { _index: 703, title: {}, body: { 'injectables/NgxEditorJSPluginService.html': {} } }
      ],
      [
        'internal',
        {
          _index: 186,
          title: {},
          body: {
            'interfaces/EditorJSClass.html': {},
            'interfaces/EditorJSInstanceConfig.html': {},
            'interfaces/EditorJSMaterialForm.html': {},
            'interfaces/InjectorApiCallOptions.html': {},
            'interfaces/InjectorApiCallResponse.html': {},
            'interfaces/InjectorMethodOption.html': {},
            'interfaces/NgxEditorJSConfig.html': {},
            'interfaces/NgxEditorJSModuleConfig.html': {},
            'injectables/NgxEditorJSService.html': {},
            'miscellaneous/variables.html': {},
            'additional-documentation/tinynodes-library-docs/ngx-editorjs-readme/ngx-editorjs-changelog.html': {},
            'additional-documentation/tinynodes-library-docs/ngx-editorjs-plugins-readme/ngx-editorjs-plugins-changelog.html': {}
          }
        }
      ],
      ['internally', { _index: 1064, title: {}, body: { 'changelog.html': {} } }],
      ['investigated', { _index: 1292, title: {}, body: { 'contributing.html': {} } }],
      ['isfocused', { _index: 467, title: {}, body: { 'directives/NgxEditorJSDirective.html': {} } }],
      [
        'isready',
        {
          _index: 468,
          title: {},
          body: { 'directives/NgxEditorJSDirective.html': {}, 'injectables/NgxEditorJSService.html': {} }
        }
      ],
      ['isready(options', { _index: 766, title: {}, body: { 'injectables/NgxEditorJSService.html': {} } }],
      [
        'isreadymap',
        {
          _index: 191,
          title: {},
          body: {
            'interfaces/EditorJSClass.html': {},
            'interfaces/EditorJSInstanceConfig.html': {},
            'interfaces/InjectorApiCallOptions.html': {},
            'interfaces/InjectorApiCallResponse.html': {},
            'interfaces/InjectorMethodOption.html': {},
            'injectables/NgxEditorJSService.html': {},
            'miscellaneous/variables.html': {}
          }
        }
      ],
      [
        'issue',
        {
          _index: 1132,
          title: {},
          body: {
            'contributing.html': {},
            'additional-documentation/tinynodes-library-docs/ngx-editorjs-readme/ngx-editorjs-changelog.html': {},
            'additional-documentation/tinynodes-library-docs/ngx-editorjs-plugins-readme/ngx-editorjs-plugins-changelog.html': {}
          }
        }
      ],
      ['issues', { _index: 1109, title: {}, body: { 'changelog.html': {}, 'contributing.html': {} } }],
      ['istouched', { _index: 469, title: {}, body: { 'directives/NgxEditorJSDirective.html': {} } }],
      [
        "it's",
        {
          _index: 536,
          title: {},
          body: {
            'directives/NgxEditorJSDirective.html': {},
            'injectables/NgxEditorJSPluginService.html': {},
            'injectables/NgxEditorJSService.html': {},
            'additional-documentation/tinynodes-library-docs/ngx-editorjs-readme.html': {},
            'additional-documentation/tinynodes-library-docs/ngx-editorjs-readme/ngx-editorjs-changelog.html': {}
          }
        }
      ],
      [
        'items',
        {
          _index: 35,
          title: {},
          body: {
            'interfaces/Block.html': {},
            'interfaces/Header.html': {},
            'interfaces/HeaderBlock.html': {},
            'interfaces/Image.html': {},
            'interfaces/ImageBlock.html': {},
            'interfaces/List.html': {},
            'interfaces/ListBlock.html': {},
            'interfaces/Paragraph.html': {},
            'interfaces/ParagraphBlock.html': {}
          }
        }
      ],
      [
        'itself',
        {
          _index: 1618,
          title: {},
          body: {
            'additional-documentation/tinynodes-library-docs/ngx-editorjs-plugins-readme/ngx-editorjs-plugins-changelog.html': {}
          }
        }
      ],
      [
        'js',
        {
          _index: 701,
          title: {},
          body: {
            'injectables/NgxEditorJSPluginService.html': {},
            'dependencies.html': {},
            'miscellaneous/variables.html': {}
          }
        }
      ],
      ['js/code', { _index: 1012, title: {}, body: { 'modules/PluginCodeModule.html': {} } }],
      [
        'js/header',
        { _index: 408, title: {}, body: { 'classes/FixedHeader.html': {}, 'modules/PluginHeaderModule.html': {} } }
      ],
      [
        'js/image',
        {
          _index: 1016,
          title: {},
          body: {
            'modules/PluginImageModule.html': {},
            'modules/PluginLinkModule.html': {},
            'modules/PluginListModule.html': {},
            'modules/PluginSimpleImageModule.html': {}
          }
        }
      ],
      [
        'js/paragraph',
        {
          _index: 1021,
          title: {},
          body: {
            'modules/PluginInlineCodeModule.html': {},
            'modules/PluginMarkerModule.html': {},
            'modules/PluginParagraphModule.html': {}
          }
        }
      ],
      [
        'json',
        {
          _index: 958,
          title: {},
          body: {
            'modules/NgxTinynodesComponentsModule.html': {},
            'components/NgxTinynodesMatJsonOutputComponent.html': {},
            'modules/NgxTinynodesMatJsonOutputModule.html': {},
            'dependencies.html': {}
          }
        }
      ],
      [
        'json.stringify(changes.blocks.currentvalue',
        { _index: 585, title: {}, body: { 'directives/NgxEditorJSDirective.html': {} } }
      ],
      [
        'json.stringify(changes.blocks.previousvalue',
        { _index: 584, title: {}, body: { 'directives/NgxEditorJSDirective.html': {} } }
      ],
      [
        'keep',
        {
          _index: 1529,
          title: {},
          body: {
            'additional-documentation/tinynodes-library-docs/ngx-editorjs-readme/ngx-editorjs-changelog.html': {},
            'additional-documentation/tinynodes-library-docs/ngx-editorjs-plugins-readme/ngx-editorjs-plugins-changelog.html': {}
          }
        }
      ],
      [
        'key',
        {
          _index: 16,
          title: {},
          body: {
            'interfaces/Block.html': {},
            'interfaces/BlockData.html': {},
            'interfaces/ChangeMap.html': {},
            'interfaces/EditorJSChange.html': {},
            'interfaces/EditorMap.html': {},
            'classes/FixedHeader.html': {},
            'interfaces/Header.html': {},
            'interfaces/HeaderBlock.html': {},
            'interfaces/Image.html': {},
            'interfaces/ImageBlock.html': {},
            'interfaces/List.html': {},
            'interfaces/ListBlock.html': {},
            'injectables/NgxEditorJSPluginService.html': {},
            'injectables/NgxEditorJSService.html': {},
            'interfaces/Paragraph.html': {},
            'interfaces/ParagraphBlock.html': {},
            'modules/PluginCodeModule.html': {},
            'interfaces/PluginConfig.html': {},
            'interfaces/PluginConfigMap.html': {},
            'modules/PluginHeaderModule.html': {},
            'modules/PluginImageModule.html': {},
            'modules/PluginInlineCodeModule.html': {},
            'modules/PluginLinkModule.html': {},
            'modules/PluginListModule.html': {},
            'modules/PluginMarkerModule.html': {},
            'modules/PluginParagraphModule.html': {},
            'modules/PluginSimpleImageModule.html': {},
            'interfaces/ReadyMap.html': {},
            'interfaces/SavedMap.html': {},
            'interfaces/ToolSettingsMap.html': {},
            'additional-documentation/tinynodes-library-docs/ngx-editorjs-readme.html': {},
            'additional-documentation/tinynodes-library-docs/ngx-editorjs-plugins-readme.html': {}
          }
        }
      ],
      [
        'keyboard',
        {
          _index: 1605,
          title: {},
          body: { 'additional-documentation/tinynodes-library-docs/ngx-editorjs-plugins-readme.html': {} }
        }
      ],
      [
        'keys',
        {
          _index: 501,
          title: {},
          body: {
            'directives/NgxEditorJSDirective.html': {},
            'miscellaneous/functions.html': {},
            'additional-documentation/tinynodes-library-docs/ngx-editorjs-readme.html': {}
          }
        }
      ],
      ['kind', { _index: 1432, title: {}, body: { 'license.html': {} } }],
      [
        'known',
        {
          _index: 1613,
          title: {},
          body: {
            'additional-documentation/tinynodes-library-docs/ngx-editorjs-plugins-readme/ngx-editorjs-plugins-changelog.html': {}
          }
        }
      ],
      [
        'label',
        {
          _index: 101,
          title: {},
          body: {
            'interfaces/BlockData.html': {},
            'interfaces/EditorJSMaterialForm.html': {},
            'interfaces/PluginConfig.html': {},
            'interfaces/PluginConfigMap.html': {},
            'interfaces/ToolSettingsMap.html': {}
          }
        }
      ],
      ['language', { _index: 1197, title: {}, body: { 'contributing.html': {} } }],
      [
        'last',
        {
          _index: 134,
          title: {},
          body: {
            'interfaces/ChangeMap.html': {},
            'interfaces/EditorJSChange.html': {},
            'interfaces/EditorMap.html': {},
            'interfaces/NgxEditorJSConfig.html': {},
            'directives/NgxEditorJSDirective.html': {},
            'interfaces/NgxEditorJSModuleConfig.html': {},
            'interfaces/ReadyMap.html': {},
            'interfaces/SavedMap.html': {},
            'additional-documentation/tinynodes-library-docs/ngx-editorjs-readme.html': {}
          }
        }
      ],
      [
        'lastchange',
        {
          _index: 603,
          title: {},
          body: { 'directives/NgxEditorJSDirective.html': {}, 'injectables/NgxEditorJSService.html': {} }
        }
      ],
      ['lastchange(options', { _index: 768, title: {}, body: { 'injectables/NgxEditorJSService.html': {} } }],
      [
        'lastchangemap',
        {
          _index: 188,
          title: {},
          body: {
            'interfaces/EditorJSClass.html': {},
            'interfaces/EditorJSInstanceConfig.html': {},
            'interfaces/InjectorApiCallOptions.html': {},
            'interfaces/InjectorApiCallResponse.html': {},
            'interfaces/InjectorMethodOption.html': {},
            'injectables/NgxEditorJSService.html': {},
            'miscellaneous/variables.html': {}
          }
        }
      ],
      ['layer', { _index: 1142, title: {}, body: { 'contributing.html': {} } }],
      ['layout', { _index: 1326, title: {}, body: { 'dependencies.html': {} } }],
      ['leadership', { _index: 1314, title: {}, body: { 'contributing.html': {} } }],
      [
        'legend',
        {
          _index: 625,
          title: {},
          body: {
            'modules/NgxEditorJSModule.html': {},
            'modules/NgxEditorjsPluginsModule.html': {},
            'modules/NgxPluginServiceModule.html': {},
            'modules/NgxTinynodesComponentsModule.html': {},
            'components/NgxTinynodesMatJsonOutputComponent.html': {},
            'modules/NgxTinynodesMatJsonOutputModule.html': {},
            'modules/NgxTinynodesMatTagInputModule.html': {},
            'overview.html': {}
          }
        }
      ],
      [
        'level',
        {
          _index: 44,
          title: {},
          body: {
            'interfaces/Block.html': {},
            'interfaces/Header.html': {},
            'interfaces/HeaderBlock.html': {},
            'interfaces/Image.html': {},
            'interfaces/ImageBlock.html': {},
            'interfaces/List.html': {},
            'interfaces/ListBlock.html': {},
            'interfaces/Paragraph.html': {},
            'interfaces/ParagraphBlock.html': {},
            'changelog.html': {},
            'contributing.html': {}
          }
        }
      ],
      ['liability', { _index: 1447, title: {}, body: { 'license.html': {} } }],
      ['liable', { _index: 1444, title: {}, body: { 'license.html': {} } }],
      [
        'libraries',
        {
          _index: 1047,
          title: {},
          body: {
            'changelog.html': {},
            'index.html': {},
            'additional-documentation/tinynodes-library-docs.html': {},
            'additional-documentation/tinynodes-library-docs/ngx-editorjs-plugins-readme.html': {}
          }
        }
      ],
      [
        'library',
        {
          _index: 1049,
          title: { 'additional-documentation/tinynodes-library-docs.html': {} },
          body: {
            'changelog.html': {},
            'index.html': {},
            'todo.html': {},
            'additional-documentation/tinynodes-library-docs/ngx-editorjs-readme.html': {}
          }
        }
      ],
      ['libs/.../blocks.ts', { _index: 1479, title: {}, body: { 'miscellaneous/typealiases.html': {} } }],
      ['libs/.../config.ts', { _index: 1483, title: {}, body: { 'miscellaneous/variables.html': {} } }],
      [
        'libs/.../editor',
        { _index: 1351, title: {}, body: { 'miscellaneous/functions.html': {}, 'miscellaneous/variables.html': {} } }
      ],
      ['libs/.../editorjs', { _index: 1486, title: {}, body: { 'miscellaneous/variables.html': {} } }],
      ['libs/.../editorjs.component.ts', { _index: 1485, title: {}, body: { 'miscellaneous/variables.html': {} } }],
      ['libs/.../injector.ts', { _index: 1487, title: {}, body: { 'miscellaneous/variables.html': {} } }],
      ['libs/.../mat', { _index: 1489, title: {}, body: { 'miscellaneous/variables.html': {} } }],
      ['libs/.../module', { _index: 1354, title: {}, body: { 'miscellaneous/functions.html': {} } }],
      ['libs/.../ngx', { _index: 1353, title: {}, body: { 'miscellaneous/functions.html': {} } }],
      ['libs/.../plugin.ts', { _index: 1355, title: {}, body: { 'miscellaneous/functions.html': {} } }],
      [
        'libs/.../plugins.ts',
        {
          _index: 1349,
          title: {},
          body: {
            'miscellaneous/enumerations.html': {},
            'miscellaneous/typealiases.html': {},
            'miscellaneous/variables.html': {}
          }
        }
      ],
      ['libs/.../test.ts', { _index: 1481, title: {}, body: { 'miscellaneous/variables.html': {} } }],
      [
        'libs/ngx',
        {
          _index: 6,
          title: {},
          body: {
            'interfaces/Block.html': {},
            'interfaces/BlockData.html': {},
            'interfaces/ChangeMap.html': {},
            'interfaces/CreateEditorJSOptions.html': {},
            'interfaces/EditorJSChange.html': {},
            'interfaces/EditorJSClass.html': {},
            'interfaces/EditorJSInstanceConfig.html': {},
            'interfaces/EditorJSMaterialForm.html': {},
            'interfaces/EditorMap.html': {},
            'classes/FixedHeader.html': {},
            'interfaces/Header.html': {},
            'interfaces/HeaderBlock.html': {},
            'interfaces/Image.html': {},
            'interfaces/ImageBlock.html': {},
            'interfaces/InjectorApiCallOptions.html': {},
            'interfaces/InjectorApiCallResponse.html': {},
            'interfaces/InjectorMethodOption.html': {},
            'interfaces/List.html': {},
            'interfaces/ListBlock.html': {},
            'interfaces/NgxEditorJSConfig.html': {},
            'directives/NgxEditorJSDirective.html': {},
            'modules/NgxEditorJSModule.html': {},
            'interfaces/NgxEditorJSModuleConfig.html': {},
            'injectables/NgxEditorJSPluginService.html': {},
            'injectables/NgxEditorJSService.html': {},
            'modules/NgxEditorjsPluginsModule.html': {},
            'modules/NgxPluginServiceModule.html': {},
            'modules/NgxTinynodesComponentsModule.html': {},
            'interfaces/NgxTinynodesMatFieldComponent.html': {},
            'components/NgxTinynodesMatJsonOutputComponent.html': {},
            'modules/NgxTinynodesMatJsonOutputModule.html': {},
            'modules/NgxTinynodesMatTagInputModule.html': {},
            'interfaces/Paragraph.html': {},
            'interfaces/ParagraphBlock.html': {},
            'modules/PluginCodeModule.html': {},
            'interfaces/PluginConfig.html': {},
            'interfaces/PluginConfigMap.html': {},
            'modules/PluginHeaderModule.html': {},
            'modules/PluginImageModule.html': {},
            'modules/PluginInlineCodeModule.html': {},
            'modules/PluginLinkModule.html': {},
            'modules/PluginListModule.html': {},
            'modules/PluginMarkerModule.html': {},
            'modules/PluginParagraphModule.html': {},
            'modules/PluginSimpleImageModule.html': {},
            'interfaces/ReadyMap.html': {},
            'interfaces/SavedMap.html': {},
            'interfaces/ToolSettingsMap.html': {},
            'miscellaneous/enumerations.html': {},
            'miscellaneous/functions.html': {},
            'miscellaneous/typealiases.html': {},
            'miscellaneous/variables.html': {}
          }
        }
      ],
      ['licence', { _index: 1398, title: {}, body: { 'license.html': {} } }],
      ['license', { _index: 1395, title: { 'license.html': {} }, body: {} }],
      [
        'life',
        {
          _index: 361,
          title: {},
          body: {
            'interfaces/EditorJSMaterialForm.html': {},
            'index.html': {},
            'additional-documentation/tinynodes-library-docs/ngx-editorjs-readme.html': {},
            'additional-documentation/tinynodes-library-docs/ngx-editorjs-readme/ngx-editorjs-changelog.html': {}
          }
        }
      ],
      [
        'lifecycle',
        {
          _index: 355,
          title: {},
          body: { 'interfaces/EditorJSMaterialForm.html': {}, 'injectables/NgxEditorJSService.html': {} }
        }
      ],
      ['limitation', { _index: 1411, title: {}, body: { 'license.html': {} } }],
      ['limited', { _index: 1435, title: {}, body: { 'license.html': {} } }],
      ['line:use', { _index: 354, title: {}, body: { 'interfaces/EditorJSMaterialForm.html': {} } }],
      [
        'link',
        {
          _index: 106,
          title: {},
          body: {
            'interfaces/BlockData.html': {},
            'injectables/NgxEditorJSPluginService.html': {},
            'injectables/NgxEditorJSService.html': {},
            'interfaces/PluginConfig.html': {},
            'interfaces/PluginConfigMap.html': {},
            'modules/PluginLinkModule.html': {},
            'interfaces/ToolSettingsMap.html': {}
          }
        }
      ],
      [
        'links',
        {
          _index: 1372,
          title: {},
          body: {
            'index.html': {},
            'additional-documentation/tinynodes-library-docs/ngx-editorjs-readme.html': {},
            'additional-documentation/tinynodes-library-docs/ngx-editorjs-plugins-readme.html': {}
          }
        }
      ],
      [
        'list',
        {
          _index: 25,
          title: { 'interfaces/List.html': {} },
          body: {
            'interfaces/Block.html': {},
            'interfaces/Header.html': {},
            'interfaces/HeaderBlock.html': {},
            'interfaces/Image.html': {},
            'interfaces/ImageBlock.html': {},
            'interfaces/List.html': {},
            'interfaces/ListBlock.html': {},
            'injectables/NgxEditorJSPluginService.html': {},
            'interfaces/Paragraph.html': {},
            'interfaces/ParagraphBlock.html': {},
            'modules/PluginListModule.html': {},
            'miscellaneous/typealiases.html': {},
            'additional-documentation/tinynodes-library-docs/ngx-editorjs-readme.html': {},
            'additional-documentation/tinynodes-library-docs/ngx-editorjs-readme/ngx-editorjs-changelog.html': {},
            'additional-documentation/tinynodes-library-docs/ngx-editorjs-plugins-readme.html': {}
          }
        }
      ],
      [
        'listblock',
        {
          _index: 38,
          title: { 'interfaces/ListBlock.html': {} },
          body: {
            'interfaces/Block.html': {},
            'interfaces/Header.html': {},
            'interfaces/HeaderBlock.html': {},
            'interfaces/Image.html': {},
            'interfaces/ImageBlock.html': {},
            'interfaces/List.html': {},
            'interfaces/ListBlock.html': {},
            'interfaces/Paragraph.html': {},
            'interfaces/ParagraphBlock.html': {},
            'miscellaneous/typealiases.html': {}
          }
        }
      ],
      [
        'listed',
        {
          _index: 1602,
          title: {},
          body: { 'additional-documentation/tinynodes-library-docs/ngx-editorjs-plugins-readme.html': {} }
        }
      ],
      [
        'listener',
        {
          _index: 364,
          title: {},
          body: { 'interfaces/EditorJSMaterialForm.html': {}, 'directives/NgxEditorJSDirective.html': {} }
        }
      ],
      ['listners', { _index: 530, title: {}, body: { 'directives/NgxEditorJSDirective.html': {} } }],
      [
        'liststyle',
        {
          _index: 32,
          title: {},
          body: {
            'interfaces/Block.html': {},
            'interfaces/Header.html': {},
            'interfaces/HeaderBlock.html': {},
            'interfaces/Image.html': {},
            'interfaces/ImageBlock.html': {},
            'interfaces/List.html': {},
            'interfaces/ListBlock.html': {},
            'interfaces/Paragraph.html': {},
            'interfaces/ParagraphBlock.html': {},
            'miscellaneous/typealiases.html': {}
          }
        }
      ],
      [
        'load',
        {
          _index: 1522,
          title: {},
          body: { 'additional-documentation/tinynodes-library-docs/ngx-editorjs-readme.html': {} }
        }
      ],
      ['local', { _index: 802, title: {}, body: { 'injectables/NgxEditorJSService.html': {} } }],
      ['locations', { _index: 1149, title: {}, body: { 'contributing.html': {} } }],
      [
        'longer',
        {
          _index: 1575,
          title: {},
          body: {
            'additional-documentation/tinynodes-library-docs/ngx-editorjs-readme/ngx-editorjs-changelog.html': {},
            'additional-documentation/tinynodes-library-docs/ngx-editorjs-plugins-readme/ngx-editorjs-plugins-changelog.html': {}
          }
        }
      ],
      ['lot', { _index: 1094, title: {}, body: { 'changelog.html': {} } }],
      [
        'lots',
        {
          _index: 1567,
          title: {},
          body: {
            'additional-documentation/tinynodes-library-docs/ngx-editorjs-readme/ngx-editorjs-changelog.html': {}
          }
        }
      ],
      [
        'made',
        {
          _index: 729,
          title: {},
          body: {
            'injectables/NgxEditorJSService.html': {},
            'additional-documentation/tinynodes-library-docs/ngx-editorjs-plugins-readme/ngx-editorjs-plugins-changelog.html': {}
          }
        }
      ],
      ['mail', { _index: 1270, title: {}, body: { 'contributing.html': {} } }],
      ['main', { _index: 452, title: {}, body: { 'directives/NgxEditorJSDirective.html': {}, 'changelog.html': {} } }],
      ['maintain', { _index: 1297, title: {}, body: { 'contributing.html': {} } }],
      ['maintainers', { _index: 1169, title: {}, body: { 'contributing.html': {} } }],
      [
        'major',
        {
          _index: 1074,
          title: {},
          body: {
            'changelog.html': {},
            'additional-documentation/tinynodes-library-docs/ngx-editorjs-readme/ngx-editorjs-changelog.html': {}
          }
        }
      ],
      [
        'make',
        {
          _index: 742,
          title: {},
          body: {
            'injectables/NgxEditorJSService.html': {},
            'contributing.html': {},
            'additional-documentation/tinynodes-library-docs/ngx-editorjs-readme/ngx-editorjs-changelog.html': {}
          }
        }
      ],
      [
        'makes',
        {
          _index: 181,
          title: {},
          body: {
            'interfaces/EditorJSClass.html': {},
            'interfaces/EditorJSInstanceConfig.html': {},
            'interfaces/InjectorApiCallOptions.html': {},
            'interfaces/InjectorApiCallResponse.html': {},
            'interfaces/InjectorMethodOption.html': {}
          }
        }
      ],
      ['making', { _index: 1124, title: {}, body: { 'changelog.html': {}, 'contributing.html': {} } }],
      [
        'manage',
        {
          _index: 1506,
          title: {},
          body: { 'additional-documentation/tinynodes-library-docs/ngx-editorjs-readme.html': {} }
        }
      ],
      [
        'management',
        {
          _index: 716,
          title: {},
          body: {
            'injectables/NgxEditorJSService.html': {},
            'additional-documentation/tinynodes-library-docs/ngx-editorjs-readme/ngx-editorjs-changelog.html': {}
          }
        }
      ],
      ['managing', { _index: 1093, title: {}, body: { 'changelog.html': {} } }],
      [
        'manually',
        {
          _index: 1607,
          title: {},
          body: { 'additional-documentation/tinynodes-library-docs/ngx-editorjs-plugins-readme.html': {} }
        }
      ],
      [
        'map',
        {
          _index: 91,
          title: {},
          body: {
            'interfaces/BlockData.html': {},
            'interfaces/ChangeMap.html': {},
            'interfaces/EditorJSChange.html': {},
            'interfaces/EditorJSClass.html': {},
            'interfaces/EditorJSInstanceConfig.html': {},
            'interfaces/EditorMap.html': {},
            'interfaces/InjectorApiCallOptions.html': {},
            'interfaces/InjectorApiCallResponse.html': {},
            'interfaces/InjectorMethodOption.html': {},
            'injectables/NgxEditorJSPluginService.html': {},
            'injectables/NgxEditorJSService.html': {},
            'interfaces/PluginConfig.html': {},
            'interfaces/PluginConfigMap.html': {},
            'interfaces/ReadyMap.html': {},
            'interfaces/SavedMap.html': {},
            'interfaces/ToolSettingsMap.html': {},
            'changelog.html': {},
            'miscellaneous/functions.html': {},
            'miscellaneous/variables.html': {},
            'additional-documentation/tinynodes-library-docs/ngx-editorjs-readme.html': {},
            'additional-documentation/tinynodes-library-docs/ngx-editorjs-plugins-readme.html': {},
            'additional-documentation/tinynodes-library-docs/ngx-editorjs-plugins-readme/ngx-editorjs-plugins-changelog.html': {}
          }
        }
      ],
      [
        'map_defaults',
        {
          _index: 187,
          title: {},
          body: {
            'interfaces/EditorJSClass.html': {},
            'interfaces/EditorJSInstanceConfig.html': {},
            'interfaces/InjectorApiCallOptions.html': {},
            'interfaces/InjectorApiCallResponse.html': {},
            'interfaces/InjectorMethodOption.html': {},
            'injectables/NgxEditorJSService.html': {},
            'miscellaneous/variables.html': {}
          }
        }
      ],
      ['map_defaults.foreach', { _index: 883, title: {}, body: { 'injectables/NgxEditorJSService.html': {} } }],
      ['mapkey', { _index: 884, title: {}, body: { 'injectables/NgxEditorJSService.html': {} } }],
      ['marker', { _index: 1028, title: {}, body: { 'modules/PluginMarkerModule.html': {} } }],
      [
        'marking',
        {
          _index: 1610,
          title: {},
          body: { 'additional-documentation/tinynodes-library-docs/ngx-editorjs-plugins-readme.html': {} }
        }
      ],
      [
        'mat',
        {
          _index: 211,
          title: {},
          body: {
            'interfaces/EditorJSMaterialForm.html': {},
            'modules/NgxEditorJSModule.html': {},
            'components/NgxTinynodesMatJsonOutputComponent.html': {},
            'modules/NgxTinynodesMatJsonOutputModule.html': {},
            'modules/NgxTinynodesMatTagInputModule.html': {},
            'miscellaneous/variables.html': {}
          }
        }
      ],
      ['matbuttonmodule', { _index: 993, title: {}, body: { 'modules/NgxTinynodesMatJsonOutputModule.html': {} } }],
      ['matcardmodule', { _index: 994, title: {}, body: { 'modules/NgxTinynodesMatJsonOutputModule.html': {} } }],
      ['match', { _index: 507, title: {}, body: { 'directives/NgxEditorJSDirective.html': {} } }],
      ['matches', { _index: 730, title: {}, body: { 'injectables/NgxEditorJSService.html': {} } }],
      [
        'matching',
        {
          _index: 65,
          title: {},
          body: {
            'interfaces/Block.html': {},
            'interfaces/BlockData.html': {},
            'interfaces/ChangeMap.html': {},
            'interfaces/CreateEditorJSOptions.html': {},
            'interfaces/EditorJSChange.html': {},
            'interfaces/EditorJSClass.html': {},
            'interfaces/EditorJSInstanceConfig.html': {},
            'interfaces/EditorJSMaterialForm.html': {},
            'interfaces/EditorMap.html': {},
            'classes/FixedHeader.html': {},
            'interfaces/Header.html': {},
            'interfaces/HeaderBlock.html': {},
            'interfaces/Image.html': {},
            'interfaces/ImageBlock.html': {},
            'interfaces/InjectorApiCallOptions.html': {},
            'interfaces/InjectorApiCallResponse.html': {},
            'interfaces/InjectorMethodOption.html': {},
            'interfaces/List.html': {},
            'interfaces/ListBlock.html': {},
            'interfaces/NgxEditorJSConfig.html': {},
            'directives/NgxEditorJSDirective.html': {},
            'modules/NgxEditorJSModule.html': {},
            'interfaces/NgxEditorJSModuleConfig.html': {},
            'injectables/NgxEditorJSPluginService.html': {},
            'injectables/NgxEditorJSService.html': {},
            'modules/NgxEditorjsPluginsModule.html': {},
            'modules/NgxPluginServiceModule.html': {},
            'modules/NgxTinynodesComponentsModule.html': {},
            'interfaces/NgxTinynodesMatFieldComponent.html': {},
            'components/NgxTinynodesMatJsonOutputComponent.html': {},
            'modules/NgxTinynodesMatJsonOutputModule.html': {},
            'modules/NgxTinynodesMatTagInputModule.html': {},
            'interfaces/Paragraph.html': {},
            'interfaces/ParagraphBlock.html': {},
            'modules/PluginCodeModule.html': {},
            'interfaces/PluginConfig.html': {},
            'interfaces/PluginConfigMap.html': {},
            'modules/PluginHeaderModule.html': {},
            'modules/PluginImageModule.html': {},
            'modules/PluginInlineCodeModule.html': {},
            'modules/PluginLinkModule.html': {},
            'modules/PluginListModule.html': {},
            'modules/PluginMarkerModule.html': {},
            'modules/PluginParagraphModule.html': {},
            'modules/PluginSimpleImageModule.html': {},
            'interfaces/ReadyMap.html': {},
            'interfaces/SavedMap.html': {},
            'interfaces/ToolSettingsMap.html': {},
            'changelog.html': {},
            'contributing.html': {},
            'dependencies.html': {},
            'miscellaneous/enumerations.html': {},
            'miscellaneous/functions.html': {},
            'index.html': {},
            'license.html': {},
            'modules.html': {},
            'overview.html': {},
            'todo.html': {},
            'miscellaneous/typealiases.html': {},
            'miscellaneous/variables.html': {},
            'additional-documentation/tinynodes-library-docs.html': {},
            'additional-documentation/tinynodes-library-docs/ngx-editorjs-readme.html': {},
            'additional-documentation/tinynodes-library-docs/ngx-editorjs-readme/ngx-editorjs-changelog.html': {},
            'additional-documentation/tinynodes-library-docs/ngx-editorjs-plugins-readme.html': {},
            'additional-documentation/tinynodes-library-docs/ngx-editorjs-plugins-readme/ngx-editorjs-plugins-changelog.html': {}
          }
        }
      ],
      ['matchipsmodule', { _index: 1005, title: {}, body: { 'modules/NgxTinynodesMatTagInputModule.html': {} } }],
      [
        'material',
        {
          _index: 246,
          title: {},
          body: {
            'interfaces/EditorJSMaterialForm.html': {},
            'changelog.html': {},
            'index.html': {},
            'miscellaneous/variables.html': {},
            'additional-documentation/tinynodes-library-docs/ngx-editorjs-readme.html': {},
            'additional-documentation/tinynodes-library-docs/ngx-editorjs-readme/ngx-editorjs-changelog.html': {}
          }
        }
      ],
      [
        'material](https://material.angular.io',
        { _index: 253, title: {}, body: { 'interfaces/EditorJSMaterialForm.html': {} } }
      ],
      [
        'matformfieldcontrol',
        {
          _index: 215,
          title: {},
          body: {
            'interfaces/EditorJSMaterialForm.html': {},
            'interfaces/NgxTinynodesMatFieldComponent.html': {},
            'miscellaneous/variables.html': {}
          }
        }
      ],
      ['matformfieldmodule', { _index: 657, title: {}, body: { 'modules/NgxEditorJSModule.html': {} } }],
      ['maticonmodule', { _index: 1006, title: {}, body: { 'modules/NgxTinynodesMatTagInputModule.html': {} } }],
      ['matinputmodule', { _index: 658, title: {}, body: { 'modules/NgxEditorJSModule.html': {} } }],
      ['me@tane.dev', { _index: 1289, title: {}, body: { 'contributing.html': {}, 'license.html': {} } }],
      ['means', { _index: 538, title: {}, body: { 'directives/NgxEditorJSDirective.html': {}, 'changelog.html': {} } }],
      ['meantime', { _index: 1120, title: {}, body: { 'changelog.html': {} } }],
      ['media', { _index: 1273, title: {}, body: { 'contributing.html': {} } }],
      ['members', { _index: 1212, title: {}, body: { 'contributing.html': {} } }],
      ['merchantability', { _index: 1437, title: {}, body: { 'license.html': {} } }],
      ['merge', { _index: 1158, title: {}, body: { 'contributing.html': {}, 'license.html': {} } }],
      ['merged', { _index: 1060, title: {}, body: { 'changelog.html': {} } }],
      [
        'metadata',
        {
          _index: 457,
          title: {},
          body: { 'directives/NgxEditorJSDirective.html': {}, 'components/NgxTinynodesMatJsonOutputComponent.html': {} }
        }
      ],
      [
        'method',
        {
          _index: 179,
          title: {},
          body: {
            'interfaces/EditorJSClass.html': {},
            'interfaces/EditorJSInstanceConfig.html': {},
            'interfaces/InjectorApiCallOptions.html': {},
            'interfaces/InjectorApiCallResponse.html': {},
            'interfaces/InjectorMethodOption.html': {},
            'interfaces/NgxEditorJSConfig.html': {},
            'directives/NgxEditorJSDirective.html': {},
            'modules/NgxEditorJSModule.html': {},
            'interfaces/NgxEditorJSModuleConfig.html': {},
            'injectables/NgxEditorJSService.html': {},
            'contributing.html': {},
            'miscellaneous/functions.html': {},
            'additional-documentation/tinynodes-library-docs/ngx-editorjs-readme.html': {},
            'additional-documentation/tinynodes-library-docs/ngx-editorjs-readme/ngx-editorjs-changelog.html': {},
            'additional-documentation/tinynodes-library-docs/ngx-editorjs-plugins-readme/ngx-editorjs-plugins-changelog.html': {}
          }
        }
      ],
      ['method.call(editor', { _index: 833, title: {}, body: { 'injectables/NgxEditorJSService.html': {} } }],
      ['methodcall', { _index: 832, title: {}, body: { 'injectables/NgxEditorJSService.html': {} } }],
      ['methodcall.then', { _index: 834, title: {}, body: { 'injectables/NgxEditorJSService.html': {} } }],
      [
        'methods',
        {
          _index: 382,
          title: {},
          body: {
            'classes/FixedHeader.html': {},
            'directives/NgxEditorJSDirective.html': {},
            'modules/NgxEditorJSModule.html': {},
            'injectables/NgxEditorJSPluginService.html': {},
            'injectables/NgxEditorJSService.html': {},
            'components/NgxTinynodesMatJsonOutputComponent.html': {},
            'changelog.html': {},
            'additional-documentation/tinynodes-library-docs/ngx-editorjs-readme/ngx-editorjs-changelog.html': {},
            'additional-documentation/tinynodes-library-docs/ngx-editorjs-plugins-readme.html': {}
          }
        }
      ],
      [
        'minheight',
        {
          _index: 418,
          title: {},
          body: {
            'interfaces/NgxEditorJSConfig.html': {},
            'directives/NgxEditorJSDirective.html': {},
            'interfaces/NgxEditorJSModuleConfig.html': {},
            'additional-documentation/tinynodes-library-docs/ngx-editorjs-readme.html': {}
          }
        }
      ],
      ['minimum', { _index: 510, title: {}, body: { 'directives/NgxEditorJSDirective.html': {} } }],
      [
        'miscellaneous',
        {
          _index: 1347,
          title: {
            'miscellaneous/enumerations.html': {},
            'miscellaneous/functions.html': {},
            'miscellaneous/typealiases.html': {},
            'miscellaneous/variables.html': {}
          },
          body: {
            'miscellaneous/enumerations.html': {},
            'miscellaneous/functions.html': {},
            'miscellaneous/typealiases.html': {},
            'miscellaneous/variables.html': {}
          }
        }
      ],
      ['mit', { _index: 1397, title: {}, body: { 'license.html': {} } }],
      ['modify', { _index: 1413, title: {}, body: { 'license.html': {} } }],
      [
        'module',
        {
          _index: 118,
          title: {
            'modules/NgxEditorJSModule.html': {},
            'modules/NgxEditorjsPluginsModule.html': {},
            'modules/NgxPluginServiceModule.html': {},
            'modules/NgxTinynodesComponentsModule.html': {},
            'modules/NgxTinynodesMatJsonOutputModule.html': {},
            'modules/NgxTinynodesMatTagInputModule.html': {},
            'modules/PluginCodeModule.html': {},
            'modules/PluginHeaderModule.html': {},
            'modules/PluginImageModule.html': {},
            'modules/PluginInlineCodeModule.html': {},
            'modules/PluginLinkModule.html': {},
            'modules/PluginListModule.html': {},
            'modules/PluginMarkerModule.html': {},
            'modules/PluginParagraphModule.html': {},
            'modules/PluginSimpleImageModule.html': {}
          },
          body: {
            'interfaces/BlockData.html': {},
            'classes/FixedHeader.html': {},
            'modules/NgxEditorJSModule.html': {},
            'modules/NgxEditorjsPluginsModule.html': {},
            'modules/NgxPluginServiceModule.html': {},
            'modules/NgxTinynodesComponentsModule.html': {},
            'modules/NgxTinynodesMatJsonOutputModule.html': {},
            'modules/NgxTinynodesMatTagInputModule.html': {},
            'modules/PluginCodeModule.html': {},
            'interfaces/PluginConfig.html': {},
            'interfaces/PluginConfigMap.html': {},
            'modules/PluginHeaderModule.html': {},
            'modules/PluginImageModule.html': {},
            'modules/PluginInlineCodeModule.html': {},
            'modules/PluginLinkModule.html': {},
            'modules/PluginListModule.html': {},
            'modules/PluginMarkerModule.html': {},
            'modules/PluginParagraphModule.html': {},
            'modules/PluginSimpleImageModule.html': {},
            'interfaces/ToolSettingsMap.html': {},
            'changelog.html': {},
            'miscellaneous/functions.html': {},
            'index.html': {},
            'overview.html': {},
            'todo.html': {},
            'miscellaneous/variables.html': {},
            'additional-documentation/tinynodes-library-docs/ngx-editorjs-readme.html': {},
            'additional-documentation/tinynodes-library-docs/ngx-editorjs-readme/ngx-editorjs-changelog.html': {},
            'additional-documentation/tinynodes-library-docs/ngx-editorjs-plugins-readme.html': {},
            'additional-documentation/tinynodes-library-docs/ngx-editorjs-plugins-readme/ngx-editorjs-plugins-changelog.html': {}
          }
        }
      ],
      [
        'modules',
        {
          _index: 623,
          title: { 'modules.html': {} },
          body: {
            'modules/NgxEditorJSModule.html': {},
            'modules/NgxEditorjsPluginsModule.html': {},
            'modules/NgxPluginServiceModule.html': {},
            'modules/NgxTinynodesComponentsModule.html': {},
            'modules/NgxTinynodesMatJsonOutputModule.html': {},
            'modules/NgxTinynodesMatTagInputModule.html': {},
            'modules/PluginCodeModule.html': {},
            'modules/PluginHeaderModule.html': {},
            'modules/PluginImageModule.html': {},
            'modules/PluginInlineCodeModule.html': {},
            'modules/PluginLinkModule.html': {},
            'modules/PluginListModule.html': {},
            'modules/PluginMarkerModule.html': {},
            'modules/PluginParagraphModule.html': {},
            'modules/PluginSimpleImageModule.html': {},
            'modules.html': {},
            'overview.html': {},
            'todo.html': {},
            'additional-documentation/tinynodes-library-docs/ngx-editorjs-plugins-readme.html': {},
            'additional-documentation/tinynodes-library-docs/ngx-editorjs-plugins-readme/ngx-editorjs-plugins-changelog.html': {}
          }
        }
      ],
      ['modulewithproviders', { _index: 652, title: {}, body: { 'modules/NgxEditorJSModule.html': {} } }],
      ['monday', { _index: 1097, title: {}, body: { 'changelog.html': {} } }],
      ['monitor', { _index: 344, title: {}, body: { 'interfaces/EditorJSMaterialForm.html': {} } }],
      [
        'more',
        {
          _index: 1125,
          title: {},
          body: {
            'changelog.html': {},
            'additional-documentation/tinynodes-library-docs/ngx-editorjs-readme.html': {},
            'additional-documentation/tinynodes-library-docs/ngx-editorjs-readme/ngx-editorjs-changelog.html': {},
            'additional-documentation/tinynodes-library-docs/ngx-editorjs-plugins-readme/ngx-editorjs-plugins-changelog.html': {}
          }
        }
      ],
      ['mouseevent', { _index: 337, title: {}, body: { 'interfaces/EditorJSMaterialForm.html': {} } }],
      [
        'moved',
        {
          _index: 1542,
          title: {},
          body: {
            'additional-documentation/tinynodes-library-docs/ngx-editorjs-readme/ngx-editorjs-changelog.html': {},
            'additional-documentation/tinynodes-library-docs/ngx-editorjs-plugins-readme/ngx-editorjs-plugins-changelog.html': {}
          }
        }
      ],
      ['ms', { _index: 493, title: {}, body: { 'directives/NgxEditorJSDirective.html': {} } }],
      [
        'multi',
        {
          _index: 251,
          title: {},
          body: {
            'interfaces/EditorJSMaterialForm.html': {},
            'classes/FixedHeader.html': {},
            'modules/PluginCodeModule.html': {},
            'modules/PluginHeaderModule.html': {},
            'modules/PluginImageModule.html': {},
            'modules/PluginInlineCodeModule.html': {},
            'modules/PluginLinkModule.html': {},
            'modules/PluginListModule.html': {},
            'modules/PluginMarkerModule.html': {},
            'modules/PluginParagraphModule.html': {},
            'modules/PluginSimpleImageModule.html': {},
            'changelog.html': {},
            'miscellaneous/variables.html': {},
            'additional-documentation/tinynodes-library-docs/ngx-editorjs-plugins-readme.html': {},
            'additional-documentation/tinynodes-library-docs/ngx-editorjs-plugins-readme/ngx-editorjs-plugins-changelog.html': {}
          }
        }
      ],
      [
        'multiple',
        {
          _index: 1583,
          title: {},
          body: {
            'additional-documentation/tinynodes-library-docs/ngx-editorjs-readme/ngx-editorjs-changelog.html': {}
          }
        }
      ],
      [
        'name',
        {
          _index: 103,
          title: {},
          body: {
            'interfaces/BlockData.html': {},
            'classes/FixedHeader.html': {},
            'interfaces/NgxEditorJSConfig.html': {},
            'directives/NgxEditorJSDirective.html': {},
            'modules/NgxEditorJSModule.html': {},
            'interfaces/NgxEditorJSModuleConfig.html': {},
            'injectables/NgxEditorJSPluginService.html': {},
            'injectables/NgxEditorJSService.html': {},
            'components/NgxTinynodesMatJsonOutputComponent.html': {},
            'interfaces/PluginConfig.html': {},
            'interfaces/PluginConfigMap.html': {},
            'interfaces/ToolSettingsMap.html': {},
            'miscellaneous/functions.html': {},
            'additional-documentation/tinynodes-library-docs/ngx-editorjs-plugins-readme.html': {}
          }
        }
      ],
      [
        'namespace',
        {
          _index: 205,
          title: {},
          body: {
            'interfaces/EditorJSClass.html': {},
            'interfaces/EditorJSInstanceConfig.html': {},
            'interfaces/InjectorApiCallOptions.html': {},
            'interfaces/InjectorApiCallResponse.html': {},
            'interfaces/InjectorMethodOption.html': {},
            'injectables/NgxEditorJSService.html': {}
          }
        }
      ],
      ['nationality', { _index: 1185, title: {}, body: { 'contributing.html': {} } }],
      ['necessary', { _index: 1294, title: {}, body: { 'contributing.html': {} } }],
      [
        'need',
        {
          _index: 541,
          title: {},
          body: {
            'directives/NgxEditorJSDirective.html': {},
            'additional-documentation/tinynodes-library-docs/ngx-editorjs-readme.html': {}
          }
        }
      ],
      ['needs', { _index: 506, title: {}, body: { 'directives/NgxEditorJSDirective.html': {} } }],
      [
        'new',
        {
          _index: 121,
          title: {},
          body: {
            'interfaces/BlockData.html': {},
            'interfaces/EditorJSClass.html': {},
            'interfaces/EditorJSInstanceConfig.html': {},
            'interfaces/EditorJSMaterialForm.html': {},
            'classes/FixedHeader.html': {},
            'interfaces/InjectorApiCallOptions.html': {},
            'interfaces/InjectorApiCallResponse.html': {},
            'interfaces/InjectorMethodOption.html': {},
            'interfaces/NgxEditorJSConfig.html': {},
            'directives/NgxEditorJSDirective.html': {},
            'interfaces/NgxEditorJSModuleConfig.html': {},
            'injectables/NgxEditorJSService.html': {},
            'interfaces/PluginConfig.html': {},
            'interfaces/PluginConfigMap.html': {},
            'modules/PluginHeaderModule.html': {},
            'interfaces/ToolSettingsMap.html': {},
            'changelog.html': {},
            'contributing.html': {},
            'index.html': {},
            'miscellaneous/variables.html': {},
            'additional-documentation/tinynodes-library-docs/ngx-editorjs-readme/ngx-editorjs-changelog.html': {}
          }
        }
      ],
      [
        'newdata',
        { _index: 398, title: {}, body: { 'classes/FixedHeader.html': {}, 'modules/PluginHeaderModule.html': {} } }
      ],
      [
        'newdata.level',
        { _index: 401, title: {}, body: { 'classes/FixedHeader.html': {}, 'modules/PluginHeaderModule.html': {} } }
      ],
      [
        'newdata.text',
        { _index: 399, title: {}, body: { 'classes/FixedHeader.html': {}, 'modules/PluginHeaderModule.html': {} } }
      ],
      ['next', { _index: 353, title: {}, body: { 'interfaces/EditorJSMaterialForm.html': {} } }],
      ['nextid', { _index: 268, title: {}, body: { 'interfaces/EditorJSMaterialForm.html': {} } }],
      ['ng_value_accessor', { _index: 1495, title: {}, body: { 'miscellaneous/variables.html': {} } }],
      [
        'ngaftercontentinit',
        {
          _index: 368,
          title: {},
          body: { 'interfaces/EditorJSMaterialForm.html': {}, 'directives/NgxEditorJSDirective.html': {} }
        }
      ],
      ['ngcontrol', { _index: 232, title: {}, body: { 'interfaces/EditorJSMaterialForm.html': {} } }],
      ['ngdocheck', { _index: 374, title: {}, body: { 'interfaces/EditorJSMaterialForm.html': {} } }],
      [
        'ngmodule',
        {
          _index: 391,
          title: {},
          body: {
            'classes/FixedHeader.html': {},
            'modules/NgxEditorJSModule.html': {},
            'injectables/NgxEditorJSPluginService.html': {},
            'modules/NgxEditorjsPluginsModule.html': {},
            'modules/NgxPluginServiceModule.html': {},
            'modules/NgxTinynodesComponentsModule.html': {},
            'modules/NgxTinynodesMatJsonOutputModule.html': {},
            'modules/NgxTinynodesMatTagInputModule.html': {},
            'modules/PluginCodeModule.html': {},
            'modules/PluginHeaderModule.html': {},
            'modules/PluginImageModule.html': {},
            'modules/PluginInlineCodeModule.html': {},
            'modules/PluginLinkModule.html': {},
            'modules/PluginListModule.html': {},
            'modules/PluginMarkerModule.html': {},
            'modules/PluginParagraphModule.html': {},
            'modules/PluginSimpleImageModule.html': {},
            'changelog.html': {},
            'additional-documentation/tinynodes-library-docs/ngx-editorjs-readme.html': {},
            'additional-documentation/tinynodes-library-docs/ngx-editorjs-plugins-readme.html': {}
          }
        }
      ],
      [
        'ngonchanges',
        {
          _index: 461,
          title: {},
          body: { 'directives/NgxEditorJSDirective.html': {}, 'components/NgxTinynodesMatJsonOutputComponent.html': {} }
        }
      ],
      ['ngonchanges(changes', { _index: 531, title: {}, body: { 'directives/NgxEditorJSDirective.html': {} } }],
      ['ngondestroy', { _index: 462, title: {}, body: { 'directives/NgxEditorJSDirective.html': {} } }],
      ['ngoninit', { _index: 356, title: {}, body: { 'interfaces/EditorJSMaterialForm.html': {} } }],
      ['ngrx/effects', { _index: 1332, title: {}, body: { 'dependencies.html': {}, 'todo.html': {} } }],
      ['ngrx/store', { _index: 1334, title: {}, body: { 'dependencies.html': {} } }],
      [
        'ngx',
        {
          _index: 117,
          title: {
            'additional-documentation/tinynodes-library-docs/ngx-editorjs-readme.html': {},
            'additional-documentation/tinynodes-library-docs/ngx-editorjs-readme/ngx-editorjs-changelog.html': {},
            'additional-documentation/tinynodes-library-docs/ngx-editorjs-plugins-readme.html': {},
            'additional-documentation/tinynodes-library-docs/ngx-editorjs-plugins-readme/ngx-editorjs-plugins-changelog.html': {}
          },
          body: {
            'interfaces/BlockData.html': {},
            'interfaces/EditorJSMaterialForm.html': {},
            'directives/NgxEditorJSDirective.html': {},
            'components/NgxTinynodesMatJsonOutputComponent.html': {},
            'modules/NgxTinynodesMatJsonOutputModule.html': {},
            'interfaces/PluginConfig.html': {},
            'interfaces/PluginConfigMap.html': {},
            'interfaces/ToolSettingsMap.html': {},
            'dependencies.html': {},
            'index.html': {},
            'todo.html': {},
            'miscellaneous/variables.html': {},
            'additional-documentation/tinynodes-library-docs.html': {},
            'additional-documentation/tinynodes-library-docs/ngx-editorjs-readme.html': {},
            'additional-documentation/tinynodes-library-docs/ngx-editorjs-readme/ngx-editorjs-changelog.html': {},
            'additional-documentation/tinynodes-library-docs/ngx-editorjs-plugins-readme.html': {}
          }
        }
      ],
      [
        'ngx_editorjs_config',
        {
          _index: 439,
          title: {},
          body: {
            'interfaces/NgxEditorJSConfig.html': {},
            'modules/NgxEditorJSModule.html': {},
            'interfaces/NgxEditorJSModuleConfig.html': {},
            'injectables/NgxEditorJSService.html': {},
            'miscellaneous/variables.html': {}
          }
        }
      ],
      [
        'ngxeditorjs',
        {
          _index: 458,
          title: {},
          body: {
            'directives/NgxEditorJSDirective.html': {},
            'components/NgxTinynodesMatJsonOutputComponent.html': {},
            'additional-documentation/tinynodes-library-docs/ngx-editorjs-plugins-readme.html': {}
          }
        }
      ],
      [
        'ngxeditorjsbasecomponent',
        {
          _index: 1496,
          title: {},
          body: {
            'miscellaneous/variables.html': {},
            'additional-documentation/tinynodes-library-docs/ngx-editorjs-readme.html': {}
          }
        }
      ],
      [
        'ngxeditorjscomponent',
        {
          _index: 244,
          title: {},
          body: {
            'interfaces/EditorJSMaterialForm.html': {},
            'modules/NgxEditorJSModule.html': {},
            'components/NgxTinynodesMatJsonOutputComponent.html': {},
            'index.html': {},
            'overview.html': {},
            'miscellaneous/variables.html': {},
            'additional-documentation/tinynodes-library-docs/ngx-editorjs-readme.html': {},
            'additional-documentation/tinynodes-library-docs/ngx-editorjs-readme/ngx-editorjs-changelog.html': {}
          }
        }
      ],
      [
        'ngxeditorjsconfig',
        {
          _index: 412,
          title: { 'interfaces/NgxEditorJSConfig.html': {} },
          body: {
            'interfaces/NgxEditorJSConfig.html': {},
            'interfaces/NgxEditorJSModuleConfig.html': {},
            'miscellaneous/variables.html': {}
          }
        }
      ],
      [
        'ngxeditorjsdirective',
        {
          _index: 239,
          title: { 'directives/NgxEditorJSDirective.html': {} },
          body: {
            'interfaces/EditorJSMaterialForm.html': {},
            'directives/NgxEditorJSDirective.html': {},
            'modules/NgxEditorJSModule.html': {},
            'components/NgxTinynodesMatJsonOutputComponent.html': {},
            'index.html': {},
            'overview.html': {},
            'additional-documentation/tinynodes-library-docs/ngx-editorjs-readme.html': {},
            'additional-documentation/tinynodes-library-docs/ngx-editorjs-readme/ngx-editorjs-changelog.html': {}
          }
        }
      ],
      [
        'ngxeditorjsdirective::ngaftercontentinit',
        { _index: 599, title: {}, body: { 'directives/NgxEditorJSDirective.html': {} } }
      ],
      ['ngxeditorjsinstanceservice', { _index: 1381, title: {}, body: { 'index.html': {} } }],
      [
        'ngxeditorjsmaterialfieldcomponent',
        {
          _index: 1376,
          title: {},
          body: { 'index.html': {}, 'additional-documentation/tinynodes-library-docs/ngx-editorjs-readme.html': {} }
        }
      ],
      [
        'ngxeditorjsmatfieldcomponent',
        {
          _index: 250,
          title: {},
          body: {
            'interfaces/EditorJSMaterialForm.html': {},
            'modules/NgxEditorJSModule.html': {},
            'components/NgxTinynodesMatJsonOutputComponent.html': {},
            'overview.html': {},
            'miscellaneous/variables.html': {},
            'additional-documentation/tinynodes-library-docs/ngx-editorjs-readme/ngx-editorjs-changelog.html': {}
          }
        }
      ],
      [
        'ngxeditorjsmatfieldcomponent.nextid',
        { _index: 320, title: {}, body: { 'interfaces/EditorJSMaterialForm.html': {} } }
      ],
      [
        'ngxeditorjsmodule',
        {
          _index: 622,
          title: { 'modules/NgxEditorJSModule.html': {} },
          body: {
            'modules/NgxEditorJSModule.html': {},
            'modules.html': {},
            'overview.html': {},
            'additional-documentation/tinynodes-library-docs/ngx-editorjs-readme.html': {},
            'additional-documentation/tinynodes-library-docs/ngx-editorjs-readme/ngx-editorjs-changelog.html': {}
          }
        }
      ],
      [
        'ngxeditorjsmodule.forroot',
        {
          _index: 436,
          title: {},
          body: {
            'interfaces/NgxEditorJSConfig.html': {},
            'modules/NgxEditorJSModule.html': {},
            'interfaces/NgxEditorJSModuleConfig.html': {},
            'injectables/NgxEditorJSService.html': {},
            'additional-documentation/tinynodes-library-docs/ngx-editorjs-readme.html': {}
          }
        }
      ],
      [
        'ngxeditorjsmoduleconfig',
        {
          _index: 437,
          title: { 'interfaces/NgxEditorJSModuleConfig.html': {} },
          body: {
            'interfaces/NgxEditorJSConfig.html': {},
            'modules/NgxEditorJSModule.html': {},
            'interfaces/NgxEditorJSModuleConfig.html': {},
            'injectables/NgxEditorJSService.html': {},
            'miscellaneous/functions.html': {}
          }
        }
      ],
      [
        'ngxeditorjspluginservice',
        {
          _index: 675,
          title: { 'injectables/NgxEditorJSPluginService.html': {} },
          body: {
            'injectables/NgxEditorJSPluginService.html': {},
            'injectables/NgxEditorJSService.html': {},
            'modules/NgxPluginServiceModule.html': {},
            'changelog.html': {},
            'index.html': {},
            'overview.html': {},
            'additional-documentation/tinynodes-library-docs/ngx-editorjs-readme/ngx-editorjs-changelog.html': {},
            'additional-documentation/tinynodes-library-docs/ngx-editorjs-plugins-readme.html': {},
            'additional-documentation/tinynodes-library-docs/ngx-editorjs-plugins-readme/ngx-editorjs-plugins-changelog.html': {}
          }
        }
      ],
      [
        'ngxeditorjspluginsmodule',
        {
          _index: 634,
          title: { 'modules/NgxEditorjsPluginsModule.html': {} },
          body: {
            'modules/NgxEditorJSModule.html': {},
            'modules/NgxEditorjsPluginsModule.html': {},
            'modules.html': {},
            'overview.html': {}
          }
        }
      ],
      [
        'ngxeditorjsservice',
        {
          _index: 242,
          title: { 'injectables/NgxEditorJSService.html': {} },
          body: {
            'interfaces/EditorJSMaterialForm.html': {},
            'directives/NgxEditorJSDirective.html': {},
            'modules/NgxEditorJSModule.html': {},
            'injectables/NgxEditorJSService.html': {},
            'index.html': {},
            'overview.html': {},
            'additional-documentation/tinynodes-library-docs/ngx-editorjs-readme.html': {},
            'additional-documentation/tinynodes-library-docs/ngx-editorjs-readme/ngx-editorjs-changelog.html': {}
          }
        }
      ],
      [
        'ngxeditorjsservice.apicall',
        {
          _index: 1549,
          title: {},
          body: {
            'additional-documentation/tinynodes-library-docs/ngx-editorjs-readme/ngx-editorjs-changelog.html': {}
          }
        }
      ],
      ['ngxjsonviewermodule', { _index: 995, title: {}, body: { 'modules/NgxTinynodesMatJsonOutputModule.html': {} } }],
      [
        'ngxpluginservicemodule',
        {
          _index: 908,
          title: { 'modules/NgxPluginServiceModule.html': {} },
          body: {
            'modules/NgxEditorjsPluginsModule.html': {},
            'modules/NgxPluginServiceModule.html': {},
            'modules.html': {},
            'overview.html': {}
          }
        }
      ],
      [
        'ngxtinynodescomponentsmodule',
        {
          _index: 945,
          title: { 'modules/NgxTinynodesComponentsModule.html': {} },
          body: { 'modules/NgxTinynodesComponentsModule.html': {}, 'modules.html': {}, 'overview.html': {} }
        }
      ],
      [
        'ngxtinynodesmatfieldcomponent',
        {
          _index: 961,
          title: { 'interfaces/NgxTinynodesMatFieldComponent.html': {} },
          body: { 'interfaces/NgxTinynodesMatFieldComponent.html': {} }
        }
      ],
      [
        'ngxtinynodesmatjsonoutputcomponent',
        {
          _index: 965,
          title: { 'components/NgxTinynodesMatJsonOutputComponent.html': {} },
          body: {
            'components/NgxTinynodesMatJsonOutputComponent.html': {},
            'modules/NgxTinynodesMatJsonOutputModule.html': {},
            'overview.html': {}
          }
        }
      ],
      [
        'ngxtinynodesmatjsonoutputmodule',
        {
          _index: 949,
          title: { 'modules/NgxTinynodesMatJsonOutputModule.html': {} },
          body: {
            'modules/NgxTinynodesComponentsModule.html': {},
            'modules/NgxTinynodesMatJsonOutputModule.html': {},
            'modules.html': {},
            'overview.html': {}
          }
        }
      ],
      [
        'ngxtinynodesmattaginputcomponent',
        {
          _index: 986,
          title: {},
          body: {
            'components/NgxTinynodesMatJsonOutputComponent.html': {},
            'modules/NgxTinynodesMatTagInputModule.html': {},
            'overview.html': {},
            'miscellaneous/variables.html': {}
          }
        }
      ],
      [
        'ngxtinynodesmattaginputmodule',
        {
          _index: 950,
          title: { 'modules/NgxTinynodesMatTagInputModule.html': {} },
          body: {
            'modules/NgxTinynodesComponentsModule.html': {},
            'modules/NgxTinynodesMatTagInputModule.html': {},
            'modules.html': {},
            'overview.html': {}
          }
        }
      ],
      ['ngzone', { _index: 718, title: {}, body: { 'injectables/NgxEditorJSService.html': {} } }],
      ['noninfringement', { _index: 1441, title: {}, body: { 'license.html': {} } }],
      [
        'normalize',
        { _index: 390, title: {}, body: { 'classes/FixedHeader.html': {}, 'modules/PluginHeaderModule.html': {} } }
      ],
      ['normalizedata', { _index: 383, title: {}, body: { 'classes/FixedHeader.html': {} } }],
      [
        'normalizedata(data',
        { _index: 387, title: {}, body: { 'classes/FixedHeader.html': {}, 'modules/PluginHeaderModule.html': {} } }
      ],
      [
        'notable',
        {
          _index: 1526,
          title: {},
          body: {
            'additional-documentation/tinynodes-library-docs/ngx-editorjs-readme/ngx-editorjs-changelog.html': {},
            'additional-documentation/tinynodes-library-docs/ngx-editorjs-plugins-readme/ngx-editorjs-plugins-changelog.html': {}
          }
        }
      ],
      [
        'note',
        {
          _index: 1135,
          title: {},
          body: {
            'contributing.html': {},
            'additional-documentation/tinynodes-library-docs.html': {},
            'additional-documentation/tinynodes-library-docs/ngx-editorjs-plugins-readme.html': {}
          }
        }
      ],
      ['notice', { _index: 1426, title: {}, body: { 'license.html': {} } }],
      [
        'now',
        {
          _index: 1061,
          title: {},
          body: {
            'changelog.html': {},
            'additional-documentation/tinynodes-library-docs/ngx-editorjs-readme/ngx-editorjs-changelog.html': {},
            'additional-documentation/tinynodes-library-docs/ngx-editorjs-plugins-readme/ngx-editorjs-plugins-changelog.html': {}
          }
        }
      ],
      [
        'npm',
        {
          _index: 1342,
          title: {},
          body: {
            'dependencies.html': {},
            'index.html': {},
            'additional-documentation/tinynodes-library-docs.html': {},
            'additional-documentation/tinynodes-library-docs/ngx-editorjs-readme.html': {},
            'additional-documentation/tinynodes-library-docs/ngx-editorjs-readme/ngx-editorjs-changelog.html': {},
            'additional-documentation/tinynodes-library-docs/ngx-editorjs-plugins-readme.html': {}
          }
        }
      ],
      ['nrwl/nx', { _index: 1112, title: {}, body: { 'changelog.html': {} } }],
      [
        'null',
        {
          _index: 358,
          title: {},
          body: {
            'interfaces/EditorJSMaterialForm.html': {},
            'directives/NgxEditorJSDirective.html': {},
            'injectables/NgxEditorJSService.html': {}
          }
        }
      ],
      [
        'number',
        {
          _index: 47,
          title: {},
          body: {
            'interfaces/Block.html': {},
            'interfaces/ChangeMap.html': {},
            'interfaces/CreateEditorJSOptions.html': {},
            'interfaces/EditorJSChange.html': {},
            'interfaces/EditorMap.html': {},
            'interfaces/Header.html': {},
            'interfaces/HeaderBlock.html': {},
            'interfaces/Image.html': {},
            'interfaces/ImageBlock.html': {},
            'interfaces/List.html': {},
            'interfaces/ListBlock.html': {},
            'interfaces/NgxEditorJSConfig.html': {},
            'directives/NgxEditorJSDirective.html': {},
            'interfaces/NgxEditorJSModuleConfig.html': {},
            'interfaces/Paragraph.html': {},
            'interfaces/ParagraphBlock.html': {},
            'interfaces/ReadyMap.html': {},
            'interfaces/SavedMap.html': {}
          }
        }
      ],
      ['numbers', { _index: 1151, title: {}, body: { 'contributing.html': {} } }],
      ['nx', { _index: 1394, title: {}, body: { 'index.html': {} } }],
      [
        'object',
        {
          _index: 96,
          title: {},
          body: {
            'interfaces/BlockData.html': {},
            'directives/NgxEditorJSDirective.html': {},
            'injectables/NgxEditorJSService.html': {},
            'interfaces/PluginConfig.html': {},
            'interfaces/PluginConfigMap.html': {},
            'interfaces/ToolSettingsMap.html': {},
            'additional-documentation/tinynodes-library-docs/ngx-editorjs-readme.html': {},
            'additional-documentation/tinynodes-library-docs/ngx-editorjs-readme/ngx-editorjs-changelog.html': {},
            'additional-documentation/tinynodes-library-docs/ngx-editorjs-plugins-readme.html': {}
          }
        }
      ],
      [
        'object.entries(this.pluginconfigmap',
        { _index: 708, title: {}, body: { 'injectables/NgxEditorJSPluginService.html': {} } }
      ],
      [
        'object.entries(this.plugins.getpluginswithexclude(excludetools',
        { _index: 895, title: {}, body: { 'injectables/NgxEditorJSService.html': {} } }
      ],
      ['object.keys(changes', { _index: 589, title: {}, body: { 'directives/NgxEditorJSDirective.html': {} } }],
      [
        'object.keys(this.editormap).foreach(holder',
        { _index: 874, title: {}, body: { 'injectables/NgxEditorJSService.html': {} } }
      ],
      ['objects', { _index: 1365, title: {}, body: { 'miscellaneous/functions.html': {} } }],
      ['obligated', { _index: 1296, title: {}, body: { 'contributing.html': {} } }],
      [
        'observable',
        {
          _index: 550,
          title: {},
          body: { 'directives/NgxEditorJSDirective.html': {}, 'injectables/NgxEditorJSService.html': {} }
        }
      ],
      ['obtaining', { _index: 1404, title: {}, body: { 'license.html': {} } }],
      ['of(response', { _index: 845, title: {}, body: { 'injectables/NgxEditorJSService.html': {} } }],
      ['offensive', { _index: 1261, title: {}, body: { 'contributing.html': {} } }],
      ['official', { _index: 1268, title: {}, body: { 'contributing.html': {} } }],
      ['officially', { _index: 1116, title: {}, body: { 'changelog.html': {} } }],
      ['offline', { _index: 1279, title: {}, body: { 'contributing.html': {} } }],
      [
        'once',
        {
          _index: 396,
          title: {},
          body: {
            'classes/FixedHeader.html': {},
            'injectables/NgxEditorJSService.html': {},
            'modules/PluginHeaderModule.html': {},
            'contributing.html': {},
            'additional-documentation/tinynodes-library-docs/ngx-editorjs-readme.html': {},
            'additional-documentation/tinynodes-library-docs/ngx-editorjs-plugins-readme.html': {}
          }
        }
      ],
      [
        'onchange',
        {
          _index: 182,
          title: {},
          body: {
            'interfaces/EditorJSClass.html': {},
            'interfaces/EditorJSInstanceConfig.html': {},
            'interfaces/InjectorApiCallOptions.html': {},
            'interfaces/InjectorApiCallResponse.html': {},
            'interfaces/InjectorMethodOption.html': {},
            'injectables/NgxEditorJSService.html': {}
          }
        }
      ],
      [
        'onchanges',
        {
          _index: 456,
          title: {},
          body: { 'directives/NgxEditorJSDirective.html': {}, 'components/NgxTinynodesMatJsonOutputComponent.html': {} }
        }
      ],
      ['onclick', { _index: 568, title: {}, body: { 'directives/NgxEditorJSDirective.html': {} } }],
      ['oncontainerclick(event', { _index: 338, title: {}, body: { 'interfaces/EditorJSMaterialForm.html': {} } }],
      [
        'ondestroy',
        {
          _index: 228,
          title: {},
          body: {
            'interfaces/EditorJSMaterialForm.html': {},
            'directives/NgxEditorJSDirective.html': {},
            'injectables/NgxEditorJSService.html': {},
            'interfaces/NgxTinynodesMatFieldComponent.html': {}
          }
        }
      ],
      [
        'ones',
        {
          _index: 1390,
          title: {},
          body: {
            'index.html': {},
            'additional-documentation/tinynodes-library-docs/ngx-editorjs-plugins-readme.html': {}
          }
        }
      ],
      [
        'oninit',
        {
          _index: 229,
          title: {},
          body: { 'interfaces/EditorJSMaterialForm.html': {}, 'interfaces/NgxTinynodesMatFieldComponent.html': {} }
        }
      ],
      ['online', { _index: 1278, title: {}, body: { 'contributing.html': {} } }],
      [
        'onready',
        {
          _index: 184,
          title: {},
          body: {
            'interfaces/EditorJSClass.html': {},
            'interfaces/EditorJSInstanceConfig.html': {},
            'interfaces/InjectorApiCallOptions.html': {},
            'interfaces/InjectorApiCallResponse.html': {},
            'interfaces/InjectorMethodOption.html': {},
            'injectables/NgxEditorJSService.html': {}
          }
        }
      ],
      ['open', { _index: 1166, title: {}, body: { 'contributing.html': {} } }],
      [
        'optimised',
        {
          _index: 1536,
          title: {},
          body: {
            'additional-documentation/tinynodes-library-docs/ngx-editorjs-readme/ngx-editorjs-changelog.html': {}
          }
        }
      ],
      [
        'option',
        {
          _index: 199,
          title: {},
          body: {
            'interfaces/EditorJSClass.html': {},
            'interfaces/EditorJSInstanceConfig.html': {},
            'interfaces/InjectorApiCallOptions.html': {},
            'interfaces/InjectorApiCallResponse.html': {},
            'interfaces/InjectorMethodOption.html': {},
            'interfaces/NgxEditorJSConfig.html': {},
            'interfaces/NgxEditorJSModuleConfig.html': {},
            'todo.html': {}
          }
        }
      ],
      [
        'optional',
        {
          _index: 51,
          title: {},
          body: {
            'interfaces/Block.html': {},
            'interfaces/BlockData.html': {},
            'interfaces/CreateEditorJSOptions.html': {},
            'interfaces/EditorJSClass.html': {},
            'interfaces/EditorJSInstanceConfig.html': {},
            'interfaces/EditorJSMaterialForm.html': {},
            'classes/FixedHeader.html': {},
            'interfaces/Header.html': {},
            'interfaces/HeaderBlock.html': {},
            'interfaces/Image.html': {},
            'interfaces/ImageBlock.html': {},
            'interfaces/InjectorApiCallOptions.html': {},
            'interfaces/InjectorApiCallResponse.html': {},
            'interfaces/InjectorMethodOption.html': {},
            'interfaces/List.html': {},
            'interfaces/ListBlock.html': {},
            'interfaces/NgxEditorJSConfig.html': {},
            'directives/NgxEditorJSDirective.html': {},
            'modules/NgxEditorJSModule.html': {},
            'interfaces/NgxEditorJSModuleConfig.html': {},
            'injectables/NgxEditorJSPluginService.html': {},
            'injectables/NgxEditorJSService.html': {},
            'components/NgxTinynodesMatJsonOutputComponent.html': {},
            'interfaces/Paragraph.html': {},
            'interfaces/ParagraphBlock.html': {},
            'interfaces/PluginConfig.html': {},
            'interfaces/PluginConfigMap.html': {},
            'interfaces/ToolSettingsMap.html': {},
            'miscellaneous/functions.html': {},
            'additional-documentation/tinynodes-library-docs/ngx-editorjs-readme.html': {},
            'additional-documentation/tinynodes-library-docs/ngx-editorjs-readme/ngx-editorjs-changelog.html': {},
            'additional-documentation/tinynodes-library-docs/ngx-editorjs-plugins-readme.html': {}
          }
        }
      ],
      ['optionally', { _index: 775, title: {}, body: { 'injectables/NgxEditorJSService.html': {} } }],
      [
        'options',
        {
          _index: 155,
          title: {},
          body: {
            'interfaces/CreateEditorJSOptions.html': {},
            'interfaces/EditorJSClass.html': {},
            'interfaces/EditorJSInstanceConfig.html': {},
            'interfaces/InjectorApiCallOptions.html': {},
            'interfaces/InjectorApiCallResponse.html': {},
            'interfaces/InjectorMethodOption.html': {},
            'interfaces/NgxEditorJSConfig.html': {},
            'interfaces/NgxEditorJSModuleConfig.html': {},
            'injectables/NgxEditorJSService.html': {},
            'changelog.html': {},
            'todo.html': {},
            'additional-documentation/tinynodes-library-docs/ngx-editorjs-readme.html': {},
            'additional-documentation/tinynodes-library-docs/ngx-editorjs-readme/ngx-editorjs-changelog.html': {}
          }
        }
      ],
      ['options.config', { _index: 798, title: {}, body: { 'injectables/NgxEditorJSService.html': {} } }],
      ['options.data', { _index: 847, title: {}, body: { 'injectables/NgxEditorJSService.html': {} } }],
      ['options.data.blocks', { _index: 851, title: {}, body: { 'injectables/NgxEditorJSService.html': {} } }],
      ['options.data.time', { _index: 848, title: {}, body: { 'injectables/NgxEditorJSService.html': {} } }],
      ['options.data.version', { _index: 849, title: {}, body: { 'injectables/NgxEditorJSService.html': {} } }],
      ['options.holder', { _index: 837, title: {}, body: { 'injectables/NgxEditorJSService.html': {} } }],
      ['options.method', { _index: 831, title: {}, body: { 'injectables/NgxEditorJSService.html': {} } }],
      ['options.namespace', { _index: 827, title: {}, body: { 'injectables/NgxEditorJSService.html': {} } }],
      ['options.skipsave', { _index: 844, title: {}, body: { 'injectables/NgxEditorJSService.html': {} } }],
      [
        'ordered',
        {
          _index: 28,
          title: {},
          body: {
            'interfaces/Block.html': {},
            'interfaces/Header.html': {},
            'interfaces/HeaderBlock.html': {},
            'interfaces/Image.html': {},
            'interfaces/ImageBlock.html': {},
            'interfaces/List.html': {},
            'interfaces/ListBlock.html': {},
            'interfaces/Paragraph.html': {},
            'interfaces/ParagraphBlock.html': {},
            'miscellaneous/typealiases.html': {}
          }
        }
      ],
      ['orientation', { _index: 1191, title: {}, body: { 'contributing.html': {} } }],
      ['others', { _index: 1226, title: {}, body: { 'contributing.html': {} } }],
      [
        'otherwise',
        {
          _index: 801,
          title: {},
          body: { 'injectables/NgxEditorJSService.html': {}, 'contributing.html': {}, 'license.html': {} }
        }
      ],
      [
        'out',
        {
          _index: 637,
          title: {},
          body: {
            'modules/NgxEditorJSModule.html': {},
            'modules/NgxEditorjsPluginsModule.html': {},
            'modules/NgxPluginServiceModule.html': {},
            'modules/NgxTinynodesComponentsModule.html': {},
            'modules/NgxTinynodesMatJsonOutputModule.html': {},
            'modules/NgxTinynodesMatTagInputModule.html': {},
            'index.html': {},
            'license.html': {},
            'overview.html': {},
            'additional-documentation/tinynodes-library-docs/ngx-editorjs-readme.html': {}
          }
        }
      ],
      [
        'output',
        {
          _index: 423,
          title: {},
          body: {
            'interfaces/NgxEditorJSConfig.html': {},
            'directives/NgxEditorJSDirective.html': {},
            'interfaces/NgxEditorJSModuleConfig.html': {},
            'components/NgxTinynodesMatJsonOutputComponent.html': {}
          }
        }
      ],
      [
        "output'},{'name",
        { _index: 985, title: {}, body: { 'components/NgxTinynodesMatJsonOutputComponent.html': {} } }
      ],
      ['output.component', { _index: 992, title: {}, body: { 'modules/NgxTinynodesMatJsonOutputModule.html': {} } }],
      [
        'output.component.html',
        { _index: 970, title: {}, body: { 'components/NgxTinynodesMatJsonOutputComponent.html': {} } }
      ],
      [
        'output.component.ts',
        { _index: 969, title: {}, body: { 'components/NgxTinynodesMatJsonOutputComponent.html': {} } }
      ],
      [
        'output.component.ts:11',
        { _index: 975, title: {}, body: { 'components/NgxTinynodesMatJsonOutputComponent.html': {} } }
      ],
      [
        'output.component.ts:14',
        { _index: 974, title: {}, body: { 'components/NgxTinynodesMatJsonOutputComponent.html': {} } }
      ],
      [
        'output.component.ts:19',
        { _index: 977, title: {}, body: { 'components/NgxTinynodesMatJsonOutputComponent.html': {} } }
      ],
      [
        'output.component.ts:23',
        { _index: 976, title: {}, body: { 'components/NgxTinynodesMatJsonOutputComponent.html': {} } }
      ],
      ['output.module', { _index: 960, title: {}, body: { 'modules/NgxTinynodesComponentsModule.html': {} } }],
      ['output.module.ts', { _index: 991, title: {}, body: { 'modules/NgxTinynodesMatJsonOutputModule.html': {} } }],
      [
        'output/mat',
        {
          _index: 959,
          title: {},
          body: {
            'modules/NgxTinynodesComponentsModule.html': {},
            'components/NgxTinynodesMatJsonOutputComponent.html': {},
            'modules/NgxTinynodesMatJsonOutputModule.html': {}
          }
        }
      ],
      [
        'outputdata',
        {
          _index: 138,
          title: {},
          body: {
            'interfaces/ChangeMap.html': {},
            'interfaces/EditorJSChange.html': {},
            'interfaces/EditorJSClass.html': {},
            'interfaces/EditorJSInstanceConfig.html': {},
            'interfaces/EditorMap.html': {},
            'interfaces/InjectorApiCallOptions.html': {},
            'interfaces/InjectorApiCallResponse.html': {},
            'interfaces/InjectorMethodOption.html': {},
            'interfaces/NgxEditorJSConfig.html': {},
            'directives/NgxEditorJSDirective.html': {},
            'interfaces/NgxEditorJSModuleConfig.html': {},
            'injectables/NgxEditorJSService.html': {},
            'interfaces/ReadyMap.html': {},
            'interfaces/SavedMap.html': {},
            'additional-documentation/tinynodes-library-docs/ngx-editorjs-readme.html': {}
          }
        }
      ],
      ['outputs', { _index: 464, title: {}, body: { 'directives/NgxEditorJSDirective.html': {} } }],
      ['outside', { _index: 717, title: {}, body: { 'injectables/NgxEditorJSService.html': {} } }],
      ['over', { _index: 1080, title: {}, body: { 'changelog.html': {} } }],
      ['overall', { _index: 1043, title: {}, body: { 'changelog.html': {} } }],
      ['overview', { _index: 1457, title: { 'overview.html': {} }, body: { 'overview.html': {} } }],
      ['owners', { _index: 1134, title: {}, body: { 'contributing.html': {} } }],
      [
        'package',
        {
          _index: 1101,
          title: { 'dependencies.html': {} },
          body: {
            'changelog.html': {},
            'additional-documentation/tinynodes-library-docs/ngx-editorjs-readme/ngx-editorjs-changelog.html': {}
          }
        }
      ],
      [
        'page',
        {
          _index: 1474,
          title: {
            'additional-documentation/tinynodes-library-docs.html': {},
            'additional-documentation/tinynodes-library-docs/ngx-editorjs-readme.html': {},
            'additional-documentation/tinynodes-library-docs/ngx-editorjs-readme/ngx-editorjs-changelog.html': {},
            'additional-documentation/tinynodes-library-docs/ngx-editorjs-plugins-readme.html': {},
            'additional-documentation/tinynodes-library-docs/ngx-editorjs-plugins-readme/ngx-editorjs-plugins-changelog.html': {}
          },
          body: { 'todo.html': {} }
        }
      ],
      [
        'paragraph',
        {
          _index: 40,
          title: { 'interfaces/Paragraph.html': {} },
          body: {
            'interfaces/Block.html': {},
            'interfaces/Header.html': {},
            'interfaces/HeaderBlock.html': {},
            'interfaces/Image.html': {},
            'interfaces/ImageBlock.html': {},
            'interfaces/List.html': {},
            'interfaces/ListBlock.html': {},
            'interfaces/NgxEditorJSConfig.html': {},
            'directives/NgxEditorJSDirective.html': {},
            'interfaces/NgxEditorJSModuleConfig.html': {},
            'interfaces/Paragraph.html': {},
            'interfaces/ParagraphBlock.html': {},
            'modules/PluginMarkerModule.html': {},
            'modules/PluginParagraphModule.html': {},
            'additional-documentation/tinynodes-library-docs/ngx-editorjs-readme.html': {},
            'additional-documentation/tinynodes-library-docs/ngx-editorjs-readme/ngx-editorjs-changelog.html': {},
            'additional-documentation/tinynodes-library-docs/ngx-editorjs-plugins-readme.html': {}
          }
        }
      ],
      [
        'paragraphblock',
        {
          _index: 42,
          title: { 'interfaces/ParagraphBlock.html': {} },
          body: {
            'interfaces/Block.html': {},
            'interfaces/Header.html': {},
            'interfaces/HeaderBlock.html': {},
            'interfaces/Image.html': {},
            'interfaces/ImageBlock.html': {},
            'interfaces/List.html': {},
            'interfaces/ListBlock.html': {},
            'interfaces/Paragraph.html': {},
            'interfaces/ParagraphBlock.html': {},
            'miscellaneous/typealiases.html': {}
          }
        }
      ],
      [
        'param',
        {
          _index: 278,
          title: {},
          body: {
            'interfaces/EditorJSMaterialForm.html': {},
            'classes/FixedHeader.html': {},
            'directives/NgxEditorJSDirective.html': {},
            'modules/NgxEditorJSModule.html': {},
            'injectables/NgxEditorJSPluginService.html': {},
            'injectables/NgxEditorJSService.html': {},
            'modules/PluginHeaderModule.html': {},
            'additional-documentation/tinynodes-library-docs/ngx-editorjs-plugins-readme.html': {}
          }
        }
      ],
      [
        'parameter',
        {
          _index: 1559,
          title: {},
          body: {
            'additional-documentation/tinynodes-library-docs/ngx-editorjs-readme/ngx-editorjs-changelog.html': {}
          }
        }
      ],
      [
        'parameters',
        {
          _index: 386,
          title: {},
          body: {
            'classes/FixedHeader.html': {},
            'directives/NgxEditorJSDirective.html': {},
            'modules/NgxEditorJSModule.html': {},
            'injectables/NgxEditorJSPluginService.html': {},
            'injectables/NgxEditorJSService.html': {},
            'components/NgxTinynodesMatJsonOutputComponent.html': {},
            'contributing.html': {},
            'miscellaneous/functions.html': {},
            'additional-documentation/tinynodes-library-docs/ngx-editorjs-plugins-readme.html': {}
          }
        }
      ],
      ['parentmodule', { _index: 672, title: {}, body: { 'modules/NgxEditorJSModule.html': {} } }],
      [
        'parse',
        {
          _index: 172,
          title: {},
          body: {
            'interfaces/EditorJSClass.html': {},
            'interfaces/EditorJSInstanceConfig.html': {},
            'interfaces/InjectorApiCallOptions.html': {},
            'interfaces/InjectorApiCallResponse.html': {},
            'interfaces/InjectorMethodOption.html': {}
          }
        }
      ],
      [
        'parseint(data.level',
        { _index: 402, title: {}, body: { 'classes/FixedHeader.html': {}, 'modules/PluginHeaderModule.html': {} } }
      ],
      ['participants', { _index: 1214, title: {}, body: { 'contributing.html': {} } }],
      ['participation', { _index: 1170, title: {}, body: { 'contributing.html': {} } }],
      ['particular', { _index: 1439, title: {}, body: { 'license.html': {} } }],
      [
        'pass',
        {
          _index: 108,
          title: {},
          body: {
            'interfaces/BlockData.html': {},
            'interfaces/EditorJSClass.html': {},
            'interfaces/EditorJSInstanceConfig.html': {},
            'interfaces/InjectorApiCallOptions.html': {},
            'interfaces/InjectorApiCallResponse.html': {},
            'interfaces/InjectorMethodOption.html': {},
            'directives/NgxEditorJSDirective.html': {},
            'modules/NgxEditorJSModule.html': {},
            'injectables/NgxEditorJSService.html': {},
            'interfaces/PluginConfig.html': {},
            'interfaces/PluginConfigMap.html': {},
            'interfaces/ToolSettingsMap.html': {},
            'additional-documentation/tinynodes-library-docs/ngx-editorjs-readme.html': {}
          }
        }
      ],
      [
        'passed',
        {
          _index: 435,
          title: {},
          body: {
            'interfaces/NgxEditorJSConfig.html': {},
            'interfaces/NgxEditorJSModuleConfig.html': {},
            'injectables/NgxEditorJSPluginService.html': {},
            'injectables/NgxEditorJSService.html': {},
            'miscellaneous/functions.html': {},
            'additional-documentation/tinynodes-library-docs/ngx-editorjs-readme.html': {},
            'additional-documentation/tinynodes-library-docs/ngx-editorjs-plugins-readme.html': {},
            'additional-documentation/tinynodes-library-docs/ngx-editorjs-plugins-readme/ngx-editorjs-plugins-changelog.html': {}
          }
        }
      ],
      [
        'passing',
        {
          _index: 1561,
          title: {},
          body: {
            'additional-documentation/tinynodes-library-docs/ngx-editorjs-readme/ngx-editorjs-changelog.html': {}
          }
        }
      ],
      [
        'paste',
        {
          _index: 1611,
          title: {},
          body: { 'additional-documentation/tinynodes-library-docs/ngx-editorjs-plugins-readme.html': {} }
        }
      ],
      ['patches', { _index: 488, title: {}, body: { 'directives/NgxEditorJSDirective.html': {} } }],
      ['paths', { _index: 535, title: {}, body: { 'directives/NgxEditorJSDirective.html': {} } }],
      [
        'peer',
        {
          _index: 1472,
          title: {},
          body: {
            'todo.html': {},
            'additional-documentation/tinynodes-library-docs/ngx-editorjs-plugins-readme.html': {}
          }
        }
      ],
      [
        'peerdependencies',
        {
          _index: 1537,
          title: {},
          body: {
            'additional-documentation/tinynodes-library-docs/ngx-editorjs-readme/ngx-editorjs-changelog.html': {},
            'additional-documentation/tinynodes-library-docs/ngx-editorjs-plugins-readme.html': {},
            'additional-documentation/tinynodes-library-docs/ngx-editorjs-plugins-readme/ngx-editorjs-plugins-changelog.html': {}
          }
        }
      ],
      [
        'per',
        {
          _index: 127,
          title: {},
          body: {
            'interfaces/BlockData.html': {},
            'interfaces/PluginConfig.html': {},
            'interfaces/PluginConfigMap.html': {},
            'interfaces/ToolSettingsMap.html': {}
          }
        }
      ],
      ['permanent', { _index: 1310, title: {}, body: { 'contributing.html': {} } }],
      ['permanently', { _index: 1256, title: {}, body: { 'contributing.html': {} } }],
      ['permission', { _index: 1161, title: {}, body: { 'contributing.html': {}, 'license.html': {} } }],
      ['permit', { _index: 1420, title: {}, body: { 'license.html': {} } }],
      ['person', { _index: 1403, title: {}, body: { 'license.html': {} } }],
      ['personal', { _index: 1186, title: {}, body: { 'contributing.html': {} } }],
      ['persons', { _index: 1421, title: {}, body: { 'license.html': {} } }],
      ['physical', { _index: 1227, title: {}, body: { 'contributing.html': {} } }],
      ['pipe', { _index: 839, title: {}, body: { 'injectables/NgxEditorJSService.html': {} } }],
      ['pipe(take(1', { _index: 868, title: {}, body: { 'injectables/NgxEditorJSService.html': {} } }],
      [
        'pipe(takeuntil(this.ondestroy',
        {
          _index: 371,
          title: {},
          body: { 'interfaces/EditorJSMaterialForm.html': {}, 'directives/NgxEditorJSDirective.html': {} }
        }
      ],
      ['pipeline', { _index: 1464, title: {}, body: { 'todo.html': {} } }],
      ['piper', { _index: 1392, title: {}, body: { 'index.html': {}, 'license.html': {} } }],
      [
        'placeholder',
        {
          _index: 282,
          title: {},
          body: {
            'interfaces/EditorJSMaterialForm.html': {},
            'interfaces/NgxEditorJSConfig.html': {},
            'directives/NgxEditorJSDirective.html': {},
            'interfaces/NgxEditorJSModuleConfig.html': {},
            'additional-documentation/tinynodes-library-docs/ngx-editorjs-readme.html': {},
            'additional-documentation/tinynodes-library-docs/ngx-editorjs-readme/ngx-editorjs-changelog.html': {}
          }
        }
      ],
      ['placeholder(placeholder', { _index: 287, title: {}, body: { 'interfaces/EditorJSMaterialForm.html': {} } }],
      [
        'please',
        {
          _index: 1129,
          title: {},
          body: {
            'contributing.html': {},
            'additional-documentation/tinynodes-library-docs.html': {},
            'additional-documentation/tinynodes-library-docs/ngx-editorjs-plugins-readme.html': {}
          }
        }
      ],
      ['pledge', { _index: 1163, title: {}, body: { 'contributing.html': {} } }],
      ['plug', { _index: 920, title: {}, body: { 'modules/NgxEditorjsPluginsModule.html': {} } }],
      [
        'plugin',
        {
          _index: 37,
          title: {},
          body: {
            'interfaces/Block.html': {},
            'interfaces/BlockData.html': {},
            'classes/FixedHeader.html': {},
            'interfaces/Header.html': {},
            'interfaces/HeaderBlock.html': {},
            'interfaces/Image.html': {},
            'interfaces/ImageBlock.html': {},
            'interfaces/List.html': {},
            'interfaces/ListBlock.html': {},
            'directives/NgxEditorJSDirective.html': {},
            'injectables/NgxEditorJSPluginService.html': {},
            'injectables/NgxEditorJSService.html': {},
            'modules/NgxPluginServiceModule.html': {},
            'interfaces/Paragraph.html': {},
            'interfaces/ParagraphBlock.html': {},
            'interfaces/PluginConfig.html': {},
            'interfaces/PluginConfigMap.html': {},
            'modules/PluginHeaderModule.html': {},
            'interfaces/ToolSettingsMap.html': {},
            'changelog.html': {},
            'miscellaneous/functions.html': {},
            'index.html': {},
            'miscellaneous/typealiases.html': {},
            'miscellaneous/variables.html': {},
            'additional-documentation/tinynodes-library-docs/ngx-editorjs-readme.html': {},
            'additional-documentation/tinynodes-library-docs/ngx-editorjs-readme/ngx-editorjs-changelog.html': {},
            'additional-documentation/tinynodes-library-docs/ngx-editorjs-plugins-readme.html': {},
            'additional-documentation/tinynodes-library-docs/ngx-editorjs-plugins-readme/ngx-editorjs-plugins-changelog.html': {}
          }
        }
      ],
      ['plugin.config', { _index: 903, title: {}, body: { 'injectables/NgxEditorJSService.html': {} } }],
      ['plugin.plugin', { _index: 898, title: {}, body: { 'injectables/NgxEditorJSService.html': {} } }],
      ['plugin.shortcut', { _index: 899, title: {}, body: { 'injectables/NgxEditorJSService.html': {} } }],
      ['plugin.type', { _index: 901, title: {}, body: { 'injectables/NgxEditorJSService.html': {} } }],
      [
        'plugin_config',
        {
          _index: 123,
          title: {},
          body: {
            'interfaces/BlockData.html': {},
            'classes/FixedHeader.html': {},
            'modules/NgxPluginServiceModule.html': {},
            'modules/PluginCodeModule.html': {},
            'interfaces/PluginConfig.html': {},
            'interfaces/PluginConfigMap.html': {},
            'modules/PluginHeaderModule.html': {},
            'modules/PluginImageModule.html': {},
            'modules/PluginInlineCodeModule.html': {},
            'modules/PluginLinkModule.html': {},
            'modules/PluginListModule.html': {},
            'modules/PluginMarkerModule.html': {},
            'modules/PluginParagraphModule.html': {},
            'modules/PluginSimpleImageModule.html': {},
            'interfaces/ToolSettingsMap.html': {},
            'miscellaneous/variables.html': {},
            'additional-documentation/tinynodes-library-docs/ngx-editorjs-plugins-readme.html': {},
            'additional-documentation/tinynodes-library-docs/ngx-editorjs-plugins-readme/ngx-editorjs-plugins-changelog.html': {}
          }
        }
      ],
      [
        'pluginclasses',
        {
          _index: 128,
          title: {},
          body: {
            'interfaces/BlockData.html': {},
            'injectables/NgxEditorJSPluginService.html': {},
            'modules/NgxPluginServiceModule.html': {},
            'modules/PluginCodeModule.html': {},
            'interfaces/PluginConfig.html': {},
            'interfaces/PluginConfigMap.html': {},
            'modules/PluginImageModule.html': {},
            'modules/PluginLinkModule.html': {},
            'modules/PluginListModule.html': {},
            'modules/PluginMarkerModule.html': {},
            'modules/PluginSimpleImageModule.html': {},
            'interfaces/ToolSettingsMap.html': {},
            'miscellaneous/variables.html': {}
          }
        }
      ],
      [
        'plugincodemodule',
        {
          _index: 909,
          title: { 'modules/PluginCodeModule.html': {} },
          body: {
            'modules/NgxEditorjsPluginsModule.html': {},
            'modules/PluginCodeModule.html': {},
            'modules.html': {},
            'overview.html': {},
            'additional-documentation/tinynodes-library-docs/ngx-editorjs-plugins-readme.html': {}
          }
        }
      ],
      [
        'pluginconfig',
        {
          _index: 97,
          title: { 'interfaces/PluginConfig.html': {} },
          body: {
            'interfaces/BlockData.html': {},
            'injectables/NgxEditorJSPluginService.html': {},
            'injectables/NgxEditorJSService.html': {},
            'interfaces/PluginConfig.html': {},
            'interfaces/PluginConfigMap.html': {},
            'interfaces/ToolSettingsMap.html': {}
          }
        }
      ],
      [
        'pluginconfigmap',
        {
          _index: 126,
          title: { 'interfaces/PluginConfigMap.html': {} },
          body: {
            'interfaces/BlockData.html': {},
            'injectables/NgxEditorJSPluginService.html': {},
            'interfaces/PluginConfig.html': {},
            'interfaces/PluginConfigMap.html': {},
            'interfaces/ToolSettingsMap.html': {}
          }
        }
      ],
      ['pluginconfigs', { _index: 1364, title: {}, body: { 'miscellaneous/functions.html': {} } }],
      [
        'pluginheadermodule',
        {
          _index: 411,
          title: { 'modules/PluginHeaderModule.html': {} },
          body: {
            'classes/FixedHeader.html': {},
            'modules/NgxEditorjsPluginsModule.html': {},
            'modules/PluginHeaderModule.html': {},
            'modules.html': {},
            'overview.html': {},
            'additional-documentation/tinynodes-library-docs/ngx-editorjs-plugins-readme.html': {}
          }
        }
      ],
      [
        'pluginilistmodule',
        {
          _index: 1609,
          title: {},
          body: { 'additional-documentation/tinynodes-library-docs/ngx-editorjs-plugins-readme.html': {} }
        }
      ],
      [
        'pluginimagemodule',
        {
          _index: 910,
          title: { 'modules/PluginImageModule.html': {} },
          body: {
            'modules/NgxEditorjsPluginsModule.html': {},
            'modules/PluginImageModule.html': {},
            'modules.html': {},
            'overview.html': {},
            'additional-documentation/tinynodes-library-docs/ngx-editorjs-plugins-readme.html': {}
          }
        }
      ],
      [
        'plugininlinecodemodule',
        {
          _index: 911,
          title: { 'modules/PluginInlineCodeModule.html': {} },
          body: {
            'modules/NgxEditorjsPluginsModule.html': {},
            'modules/PluginInlineCodeModule.html': {},
            'modules.html': {},
            'overview.html': {}
          }
        }
      ],
      [
        'pluginlinkmodule',
        {
          _index: 912,
          title: { 'modules/PluginLinkModule.html': {} },
          body: {
            'modules/NgxEditorjsPluginsModule.html': {},
            'modules/PluginLinkModule.html': {},
            'modules.html': {},
            'overview.html': {},
            'additional-documentation/tinynodes-library-docs/ngx-editorjs-plugins-readme.html': {}
          }
        }
      ],
      [
        'pluginlistmodule',
        {
          _index: 913,
          title: { 'modules/PluginListModule.html': {} },
          body: {
            'modules/NgxEditorjsPluginsModule.html': {},
            'modules/PluginListModule.html': {},
            'modules.html': {},
            'overview.html': {}
          }
        }
      ],
      ['pluginmap', { _index: 712, title: {}, body: { 'injectables/NgxEditorJSPluginService.html': {} } }],
      [
        'pluginmarkermodule',
        {
          _index: 914,
          title: { 'modules/PluginMarkerModule.html': {} },
          body: {
            'modules/NgxEditorjsPluginsModule.html': {},
            'modules/PluginMarkerModule.html': {},
            'modules.html': {},
            'overview.html': {},
            'additional-documentation/tinynodes-library-docs/ngx-editorjs-plugins-readme.html': {}
          }
        }
      ],
      [
        'pluginname',
        {
          _index: 104,
          title: {},
          body: {
            'interfaces/BlockData.html': {},
            'classes/FixedHeader.html': {},
            'modules/PluginCodeModule.html': {},
            'interfaces/PluginConfig.html': {},
            'interfaces/PluginConfigMap.html': {},
            'modules/PluginHeaderModule.html': {},
            'modules/PluginImageModule.html': {},
            'modules/PluginInlineCodeModule.html': {},
            'modules/PluginLinkModule.html': {},
            'modules/PluginListModule.html': {},
            'modules/PluginMarkerModule.html': {},
            'modules/PluginParagraphModule.html': {},
            'modules/PluginSimpleImageModule.html': {},
            'interfaces/ToolSettingsMap.html': {},
            'additional-documentation/tinynodes-library-docs/ngx-editorjs-plugins-readme.html': {}
          }
        }
      ],
      [
        'pluginparagraph',
        {
          _index: 1599,
          title: {},
          body: { 'additional-documentation/tinynodes-library-docs/ngx-editorjs-plugins-readme.html': {} }
        }
      ],
      [
        'pluginparagraphmodule',
        {
          _index: 915,
          title: { 'modules/PluginParagraphModule.html': {} },
          body: {
            'modules/NgxEditorjsPluginsModule.html': {},
            'modules/PluginParagraphModule.html': {},
            'modules.html': {},
            'overview.html': {},
            'additional-documentation/tinynodes-library-docs/ngx-editorjs-plugins-readme.html': {}
          }
        }
      ],
      [
        'pluginproperty',
        {
          _index: 87,
          title: {},
          body: {
            'interfaces/BlockData.html': {},
            'interfaces/PluginConfig.html': {},
            'interfaces/PluginConfigMap.html': {},
            'interfaces/ToolSettingsMap.html': {},
            'miscellaneous/typealiases.html': {}
          }
        }
      ],
      [
        'plugins',
        {
          _index: 77,
          title: {
            'additional-documentation/tinynodes-library-docs/ngx-editorjs-plugins-readme.html': {},
            'additional-documentation/tinynodes-library-docs/ngx-editorjs-plugins-readme/ngx-editorjs-plugins-changelog.html': {}
          },
          body: {
            'interfaces/BlockData.html': {},
            'modules/NgxEditorJSModule.html': {},
            'injectables/NgxEditorJSPluginService.html': {},
            'injectables/NgxEditorJSService.html': {},
            'interfaces/PluginConfig.html': {},
            'interfaces/PluginConfigMap.html': {},
            'interfaces/ToolSettingsMap.html': {},
            'changelog.html': {},
            'miscellaneous/enumerations.html': {},
            'miscellaneous/functions.html': {},
            'index.html': {},
            'miscellaneous/typealiases.html': {},
            'miscellaneous/variables.html': {},
            'additional-documentation/tinynodes-library-docs/ngx-editorjs-readme.html': {},
            'additional-documentation/tinynodes-library-docs/ngx-editorjs-readme/ngx-editorjs-changelog.html': {},
            'additional-documentation/tinynodes-library-docs/ngx-editorjs-plugins-readme.html': {},
            'additional-documentation/tinynodes-library-docs/ngx-editorjs-plugins-readme/ngx-editorjs-plugins-changelog.html': {}
          }
        }
      ],
      ['plugins.module.ts', { _index: 918, title: {}, body: { 'modules/NgxEditorjsPluginsModule.html': {} } }],
      ['plugins/code/code.module', { _index: 924, title: {}, body: { 'modules/NgxEditorjsPluginsModule.html': {} } }],
      [
        'plugins/header/header.module',
        { _index: 925, title: {}, body: { 'modules/NgxEditorjsPluginsModule.html': {} } }
      ],
      ['plugins/image/image.module', { _index: 926, title: {}, body: { 'modules/NgxEditorjsPluginsModule.html': {} } }],
      ['plugins/inline', { _index: 936, title: {}, body: { 'modules/NgxEditorjsPluginsModule.html': {} } }],
      ['plugins/link/link.module', { _index: 927, title: {}, body: { 'modules/NgxEditorjsPluginsModule.html': {} } }],
      ['plugins/list/list.module', { _index: 928, title: {}, body: { 'modules/NgxEditorjsPluginsModule.html': {} } }],
      [
        'plugins/marker/marker.module',
        { _index: 929, title: {}, body: { 'modules/NgxEditorjsPluginsModule.html': {} } }
      ],
      [
        'plugins/paragraph/paragraph.module',
        { _index: 930, title: {}, body: { 'modules/NgxEditorjsPluginsModule.html': {} } }
      ],
      ['plugins/simple', { _index: 931, title: {}, body: { 'modules/NgxEditorjsPluginsModule.html': {} } }],
      ['plugins/src/lib/ngx', { _index: 917, title: {}, body: { 'modules/NgxEditorjsPluginsModule.html': {} } }],
      [
        'plugins/src/lib/plugins/code/code.module.ts',
        { _index: 1008, title: {}, body: { 'modules/PluginCodeModule.html': {} } }
      ],
      [
        'plugins/src/lib/plugins/header/header.module.ts',
        { _index: 381, title: {}, body: { 'classes/FixedHeader.html': {}, 'modules/PluginHeaderModule.html': {} } }
      ],
      [
        'plugins/src/lib/plugins/header/header.module.ts:18',
        { _index: 388, title: {}, body: { 'classes/FixedHeader.html': {} } }
      ],
      [
        'plugins/src/lib/plugins/header/header.module.ts:8',
        { _index: 385, title: {}, body: { 'classes/FixedHeader.html': {} } }
      ],
      [
        'plugins/src/lib/plugins/image/image.module.ts',
        { _index: 1014, title: {}, body: { 'modules/PluginImageModule.html': {} } }
      ],
      [
        'plugins/src/lib/plugins/inline',
        { _index: 1017, title: {}, body: { 'modules/PluginInlineCodeModule.html': {} } }
      ],
      [
        'plugins/src/lib/plugins/link/link.module.ts',
        { _index: 1023, title: {}, body: { 'modules/PluginLinkModule.html': {} } }
      ],
      [
        'plugins/src/lib/plugins/list/list.module.ts',
        { _index: 1025, title: {}, body: { 'modules/PluginListModule.html': {} } }
      ],
      [
        'plugins/src/lib/plugins/marker/marker.module.ts',
        { _index: 1027, title: {}, body: { 'modules/PluginMarkerModule.html': {} } }
      ],
      [
        'plugins/src/lib/plugins/paragraph/paragraph.module.ts',
        { _index: 1031, title: {}, body: { 'modules/PluginParagraphModule.html': {} } }
      ],
      [
        'plugins/src/lib/plugins/simple',
        { _index: 1032, title: {}, body: { 'modules/PluginSimpleImageModule.html': {} } }
      ],
      [
        'plugins/src/lib/services/plugin',
        {
          _index: 677,
          title: {},
          body: { 'injectables/NgxEditorJSPluginService.html': {}, 'modules/NgxPluginServiceModule.html': {} }
        }
      ],
      [
        'plugins/src/lib/types/plugins.ts',
        {
          _index: 68,
          title: {},
          body: {
            'interfaces/BlockData.html': {},
            'interfaces/PluginConfig.html': {},
            'interfaces/PluginConfigMap.html': {},
            'interfaces/ToolSettingsMap.html': {},
            'miscellaneous/enumerations.html': {},
            'miscellaneous/typealiases.html': {},
            'miscellaneous/variables.html': {}
          }
        }
      ],
      [
        'plugins/src/lib/types/plugins.ts:102',
        { _index: 1013, title: {}, body: { 'interfaces/PluginConfigMap.html': {} } }
      ],
      [
        'plugins/src/lib/types/plugins.ts:43',
        { _index: 1039, title: {}, body: { 'interfaces/ToolSettingsMap.html': {} } }
      ],
      ['plugins/src/lib/types/plugins.ts:7', { _index: 69, title: {}, body: { 'interfaces/BlockData.html': {} } }],
      ['plugins/src/lib/util/plugin.ts', { _index: 1362, title: {}, body: { 'miscellaneous/functions.html': {} } }],
      ['plugins@2.0.0', { _index: 1056, title: {}, body: { 'changelog.html': {} } }],
      [
        'pluginservice',
        {
          _index: 1627,
          title: {},
          body: {
            'additional-documentation/tinynodes-library-docs/ngx-editorjs-plugins-readme/ngx-editorjs-plugins-changelog.html': {}
          }
        }
      ],
      [
        'pluginsimpleimagemodule',
        {
          _index: 916,
          title: { 'modules/PluginSimpleImageModule.html': {} },
          body: {
            'modules/NgxEditorjsPluginsModule.html': {},
            'modules/PluginSimpleImageModule.html': {},
            'modules.html': {},
            'overview.html': {},
            'additional-documentation/tinynodes-library-docs/ngx-editorjs-plugins-readme.html': {}
          }
        }
      ],
      [
        'plugintype',
        {
          _index: 84,
          title: {},
          body: {
            'interfaces/BlockData.html': {},
            'interfaces/PluginConfig.html': {},
            'interfaces/PluginConfigMap.html': {},
            'interfaces/ToolSettingsMap.html': {},
            'miscellaneous/typealiases.html': {}
          }
        }
      ],
      [
        'plugintypes',
        {
          _index: 82,
          title: {},
          body: {
            'interfaces/BlockData.html': {},
            'classes/FixedHeader.html': {},
            'modules/PluginCodeModule.html': {},
            'interfaces/PluginConfig.html': {},
            'interfaces/PluginConfigMap.html': {},
            'modules/PluginHeaderModule.html': {},
            'modules/PluginImageModule.html': {},
            'modules/PluginInlineCodeModule.html': {},
            'modules/PluginLinkModule.html': {},
            'modules/PluginListModule.html': {},
            'modules/PluginMarkerModule.html': {},
            'modules/PluginParagraphModule.html': {},
            'modules/PluginSimpleImageModule.html': {},
            'interfaces/ToolSettingsMap.html': {},
            'miscellaneous/enumerations.html': {},
            'additional-documentation/tinynodes-library-docs/ngx-editorjs-plugins-readme.html': {}
          }
        }
      ],
      [
        'plugintypes.block',
        {
          _index: 85,
          title: {},
          body: {
            'interfaces/BlockData.html': {},
            'classes/FixedHeader.html': {},
            'modules/PluginCodeModule.html': {},
            'interfaces/PluginConfig.html': {},
            'interfaces/PluginConfigMap.html': {},
            'modules/PluginHeaderModule.html': {},
            'modules/PluginImageModule.html': {},
            'modules/PluginLinkModule.html': {},
            'modules/PluginListModule.html': {},
            'modules/PluginParagraphModule.html': {},
            'modules/PluginSimpleImageModule.html': {},
            'interfaces/ToolSettingsMap.html': {},
            'miscellaneous/typealiases.html': {},
            'additional-documentation/tinynodes-library-docs/ngx-editorjs-plugins-readme.html': {}
          }
        }
      ],
      [
        'plugintypes.inline',
        {
          _index: 86,
          title: {},
          body: {
            'interfaces/BlockData.html': {},
            'interfaces/PluginConfig.html': {},
            'interfaces/PluginConfigMap.html': {},
            'modules/PluginInlineCodeModule.html': {},
            'modules/PluginMarkerModule.html': {},
            'interfaces/ToolSettingsMap.html': {},
            'miscellaneous/typealiases.html': {}
          }
        }
      ],
      ['policies', { _index: 1303, title: {}, body: { 'contributing.html': {} } }],
      ['political', { _index: 1223, title: {}, body: { 'contributing.html': {} } }],
      ['portions', { _index: 1430, title: {}, body: { 'license.html': {} } }],
      ['ports', { _index: 1148, title: {}, body: { 'contributing.html': {} } }],
      ['positive', { _index: 1195, title: {}, body: { 'contributing.html': {} } }],
      ['possible', { _index: 922, title: {}, body: { 'modules/NgxEditorjsPluginsModule.html': {} } }],
      ['posted', { _index: 1304, title: {}, body: { 'contributing.html': {} } }],
      ['posting', { _index: 1271, title: {}, body: { 'contributing.html': {} } }],
      [
        'potential',
        {
          _index: 1520,
          title: {},
          body: { 'additional-documentation/tinynodes-library-docs/ngx-editorjs-readme.html': {} }
        }
      ],
      [
        'pre',
        {
          _index: 1589,
          title: {},
          body: {
            'additional-documentation/tinynodes-library-docs/ngx-editorjs-readme/ngx-editorjs-changelog.html': {}
          }
        }
      ],
      [
        'private',
        {
          _index: 283,
          title: {},
          body: {
            'interfaces/EditorJSMaterialForm.html': {},
            'directives/NgxEditorJSDirective.html': {},
            'injectables/NgxEditorJSPluginService.html': {},
            'injectables/NgxEditorJSService.html': {},
            'contributing.html': {},
            'index.html': {},
            'additional-documentation/tinynodes-library-docs/ngx-editorjs-readme/ngx-editorjs-changelog.html': {}
          }
        }
      ],
      [
        'process',
        { _index: 540, title: {}, body: { 'directives/NgxEditorJSDirective.html': {}, 'contributing.html': {} } }
      ],
      ['professional', { _index: 1234, title: {}, body: { 'contributing.html': {} } }],
      [
        'project',
        {
          _index: 1063,
          title: {},
          body: {
            'changelog.html': {},
            'contributing.html': {},
            'index.html': {},
            'additional-documentation/tinynodes-library-docs/ngx-editorjs-readme.html': {},
            'additional-documentation/tinynodes-library-docs/ngx-editorjs-readme/ngx-editorjs-changelog.html': {},
            'additional-documentation/tinynodes-library-docs/ngx-editorjs-plugins-readme.html': {},
            'additional-documentation/tinynodes-library-docs/ngx-editorjs-plugins-readme/ngx-editorjs-plugins-changelog.html': {}
          }
        }
      ],
      ["project's", { _index: 1313, title: {}, body: { 'contributing.html': {} } }],
      ['projects', { _index: 1499, title: {}, body: { 'additional-documentation/tinynodes-library-docs.html': {} } }],
      [
        'promise',
        {
          _index: 526,
          title: {},
          body: { 'directives/NgxEditorJSDirective.html': {}, 'injectables/NgxEditorJSService.html': {} }
        }
      ],
      [
        'properties',
        {
          _index: 13,
          title: {},
          body: {
            'interfaces/Block.html': {},
            'interfaces/CreateEditorJSOptions.html': {},
            'interfaces/EditorJSChange.html': {},
            'interfaces/EditorJSClass.html': {},
            'interfaces/EditorJSInstanceConfig.html': {},
            'interfaces/EditorJSMaterialForm.html': {},
            'interfaces/Header.html': {},
            'interfaces/HeaderBlock.html': {},
            'interfaces/Image.html': {},
            'interfaces/ImageBlock.html': {},
            'interfaces/InjectorApiCallOptions.html': {},
            'interfaces/InjectorApiCallResponse.html': {},
            'interfaces/InjectorMethodOption.html': {},
            'interfaces/List.html': {},
            'interfaces/ListBlock.html': {},
            'interfaces/NgxEditorJSConfig.html': {},
            'interfaces/NgxEditorJSModuleConfig.html': {},
            'interfaces/Paragraph.html': {},
            'interfaces/ParagraphBlock.html': {},
            'interfaces/PluginConfig.html': {},
            'index.html': {},
            'additional-documentation/tinynodes-library-docs/ngx-editorjs-readme.html': {},
            'additional-documentation/tinynodes-library-docs/ngx-editorjs-readme/ngx-editorjs-changelog.html': {}
          }
        }
      ],
      [
        'property',
        {
          _index: 54,
          title: {},
          body: {
            'interfaces/Block.html': {},
            'interfaces/BlockData.html': {},
            'interfaces/EditorJSClass.html': {},
            'interfaces/EditorJSInstanceConfig.html': {},
            'interfaces/Header.html': {},
            'interfaces/HeaderBlock.html': {},
            'interfaces/Image.html': {},
            'interfaces/ImageBlock.html': {},
            'interfaces/InjectorApiCallOptions.html': {},
            'interfaces/InjectorApiCallResponse.html': {},
            'interfaces/InjectorMethodOption.html': {},
            'interfaces/List.html': {},
            'interfaces/ListBlock.html': {},
            'directives/NgxEditorJSDirective.html': {},
            'interfaces/Paragraph.html': {},
            'interfaces/ParagraphBlock.html': {},
            'interfaces/PluginConfig.html': {},
            'interfaces/PluginConfigMap.html': {},
            'interfaces/ToolSettingsMap.html': {},
            'miscellaneous/typealiases.html': {},
            'additional-documentation/tinynodes-library-docs/ngx-editorjs-readme/ngx-editorjs-changelog.html': {}
          }
        }
      ],
      [
        'protected',
        {
          _index: 349,
          title: {},
          body: { 'interfaces/EditorJSMaterialForm.html': {}, 'directives/NgxEditorJSDirective.html': {} }
        }
      ],
      [
        'provide',
        {
          _index: 248,
          title: {},
          body: {
            'interfaces/EditorJSMaterialForm.html': {},
            'classes/FixedHeader.html': {},
            'modules/NgxEditorJSModule.html': {},
            'injectables/NgxEditorJSService.html': {},
            'modules/NgxEditorjsPluginsModule.html': {},
            'modules/NgxPluginServiceModule.html': {},
            'modules/PluginCodeModule.html': {},
            'modules/PluginHeaderModule.html': {},
            'modules/PluginImageModule.html': {},
            'modules/PluginInlineCodeModule.html': {},
            'modules/PluginLinkModule.html': {},
            'modules/PluginListModule.html': {},
            'modules/PluginMarkerModule.html': {},
            'modules/PluginParagraphModule.html': {},
            'modules/PluginSimpleImageModule.html': {},
            'changelog.html': {},
            'index.html': {},
            'todo.html': {},
            'miscellaneous/variables.html': {},
            'additional-documentation/tinynodes-library-docs/ngx-editorjs-readme.html': {},
            'additional-documentation/tinynodes-library-docs/ngx-editorjs-readme/ngx-editorjs-changelog.html': {},
            'additional-documentation/tinynodes-library-docs/ngx-editorjs-plugins-readme.html': {},
            'additional-documentation/tinynodes-library-docs/ngx-editorjs-plugins-readme/ngx-editorjs-plugins-changelog.html': {}
          }
        }
      ],
      [
        'provided',
        {
          _index: 36,
          title: {},
          body: {
            'interfaces/Block.html': {},
            'interfaces/Header.html': {},
            'interfaces/HeaderBlock.html': {},
            'interfaces/Image.html': {},
            'interfaces/ImageBlock.html': {},
            'interfaces/List.html': {},
            'interfaces/ListBlock.html': {},
            'directives/NgxEditorJSDirective.html': {},
            'modules/NgxEditorJSModule.html': {},
            'injectables/NgxEditorJSPluginService.html': {},
            'injectables/NgxEditorJSService.html': {},
            'interfaces/Paragraph.html': {},
            'interfaces/ParagraphBlock.html': {},
            'changelog.html': {},
            'license.html': {},
            'additional-documentation/tinynodes-library-docs/ngx-editorjs-readme.html': {},
            'additional-documentation/tinynodes-library-docs/ngx-editorjs-readme/ngx-editorjs-changelog.html': {},
            'additional-documentation/tinynodes-library-docs/ngx-editorjs-plugins-readme.html': {},
            'additional-documentation/tinynodes-library-docs/ngx-editorjs-plugins-readme/ngx-editorjs-plugins-changelog.html': {}
          }
        }
      ],
      [
        'providedin',
        {
          _index: 704,
          title: {},
          body: { 'injectables/NgxEditorJSPluginService.html': {}, 'injectables/NgxEditorJSService.html': {} }
        }
      ],
      [
        'provider',
        {
          _index: 99,
          title: {},
          body: {
            'interfaces/BlockData.html': {},
            'interfaces/EditorJSMaterialForm.html': {},
            'interfaces/PluginConfig.html': {},
            'interfaces/PluginConfigMap.html': {},
            'interfaces/ToolSettingsMap.html': {},
            'miscellaneous/variables.html': {},
            'additional-documentation/tinynodes-library-docs/ngx-editorjs-readme.html': {},
            'additional-documentation/tinynodes-library-docs/ngx-editorjs-readme/ngx-editorjs-changelog.html': {}
          }
        }
      ],
      [
        'providers',
        {
          _index: 263,
          title: {},
          body: {
            'interfaces/EditorJSMaterialForm.html': {},
            'classes/FixedHeader.html': {},
            'modules/NgxEditorJSModule.html': {},
            'injectables/NgxEditorJSPluginService.html': {},
            'modules/NgxEditorjsPluginsModule.html': {},
            'modules/NgxPluginServiceModule.html': {},
            'modules/NgxTinynodesComponentsModule.html': {},
            'modules/NgxTinynodesMatJsonOutputModule.html': {},
            'modules/NgxTinynodesMatTagInputModule.html': {},
            'modules/PluginCodeModule.html': {},
            'modules/PluginHeaderModule.html': {},
            'modules/PluginImageModule.html': {},
            'modules/PluginInlineCodeModule.html': {},
            'modules/PluginLinkModule.html': {},
            'modules/PluginListModule.html': {},
            'modules/PluginMarkerModule.html': {},
            'modules/PluginParagraphModule.html': {},
            'modules/PluginSimpleImageModule.html': {},
            'changelog.html': {},
            'overview.html': {},
            'additional-documentation/tinynodes-library-docs/ngx-editorjs-plugins-readme.html': {},
            'additional-documentation/tinynodes-library-docs/ngx-editorjs-plugins-readme/ngx-editorjs-plugins-changelog.html': {}
          }
        }
      ],
      [
        'provides',
        {
          _index: 170,
          title: {},
          body: {
            'interfaces/EditorJSClass.html': {},
            'interfaces/EditorJSInstanceConfig.html': {},
            'interfaces/EditorJSMaterialForm.html': {},
            'classes/FixedHeader.html': {},
            'interfaces/InjectorApiCallOptions.html': {},
            'interfaces/InjectorApiCallResponse.html': {},
            'interfaces/InjectorMethodOption.html': {},
            'directives/NgxEditorJSDirective.html': {},
            'modules/NgxEditorJSModule.html': {},
            'injectables/NgxEditorJSService.html': {},
            'modules/NgxEditorjsPluginsModule.html': {},
            'modules/PluginCodeModule.html': {},
            'modules/PluginHeaderModule.html': {},
            'modules/PluginImageModule.html': {},
            'modules/PluginInlineCodeModule.html': {},
            'modules/PluginLinkModule.html': {},
            'modules/PluginListModule.html': {},
            'modules/PluginMarkerModule.html': {},
            'modules/PluginParagraphModule.html': {},
            'modules/PluginSimpleImageModule.html': {},
            'changelog.html': {},
            'index.html': {},
            'additional-documentation/tinynodes-library-docs/ngx-editorjs-readme.html': {},
            'additional-documentation/tinynodes-library-docs/ngx-editorjs-readme/ngx-editorjs-changelog.html': {},
            'additional-documentation/tinynodes-library-docs/ngx-editorjs-plugins-readme.html': {},
            'additional-documentation/tinynodes-library-docs/ngx-editorjs-plugins-readme/ngx-editorjs-plugins-changelog.html': {}
          }
        }
      ],
      [
        'providing',
        {
          _index: 1565,
          title: {},
          body: {
            'additional-documentation/tinynodes-library-docs/ngx-editorjs-readme/ngx-editorjs-changelog.html': {}
          }
        }
      ],
      [
        'provied',
        {
          _index: 438,
          title: {},
          body: {
            'interfaces/NgxEditorJSConfig.html': {},
            'interfaces/NgxEditorJSModuleConfig.html': {},
            'miscellaneous/variables.html': {}
          }
        }
      ],
      [
        'public',
        {
          _index: 269,
          title: {},
          body: {
            'interfaces/EditorJSMaterialForm.html': {},
            'directives/NgxEditorJSDirective.html': {},
            'injectables/NgxEditorJSPluginService.html': {},
            'injectables/NgxEditorJSService.html': {},
            'components/NgxTinynodesMatJsonOutputComponent.html': {},
            'contributing.html': {},
            'additional-documentation/tinynodes-library-docs/ngx-editorjs-readme/ngx-editorjs-changelog.html': {},
            'additional-documentation/tinynodes-library-docs/ngx-editorjs-plugins-readme/ngx-editorjs-plugins-changelog.html': {}
          }
        }
      ],
      ['publish', { _index: 1414, title: {}, body: { 'license.html': {}, 'todo.html': {} } }],
      ['publishing', { _index: 1225, title: {}, body: { 'contributing.html': {}, 'todo.html': {} } }],
      ['pull', { _index: 1139, title: {}, body: { 'contributing.html': {} } }],
      ['purpose', { _index: 1440, title: {}, body: { 'license.html': {} } }],
      ['r', { _index: 835, title: {}, body: { 'injectables/NgxEditorJSService.html': {} } }],
      ['race', { _index: 1188, title: {}, body: { 'contributing.html': {} } }],
      ['re', { _index: 1058, title: {}, body: { 'changelog.html': {} } }],
      [
        'reactive',
        {
          _index: 1375,
          title: {},
          body: {
            'index.html': {},
            'additional-documentation/tinynodes-library-docs/ngx-editorjs-readme.html': {},
            'additional-documentation/tinynodes-library-docs/ngx-editorjs-readme/ngx-editorjs-changelog.html': {}
          }
        }
      ],
      ['read', { _index: 314, title: {}, body: { 'interfaces/EditorJSMaterialForm.html': {} } }],
      [
        'readme',
        {
          _index: 1386,
          title: {
            'additional-documentation/tinynodes-library-docs/ngx-editorjs-readme.html': {},
            'additional-documentation/tinynodes-library-docs/ngx-editorjs-plugins-readme.html': {}
          },
          body: {
            'index.html': {},
            'additional-documentation/tinynodes-library-docs.html': {},
            'additional-documentation/tinynodes-library-docs/ngx-editorjs-readme/ngx-editorjs-changelog.html': {},
            'additional-documentation/tinynodes-library-docs/ngx-editorjs-plugins-readme.html': {},
            'additional-documentation/tinynodes-library-docs/ngx-editorjs-plugins-readme/ngx-editorjs-plugins-changelog.html': {}
          }
        }
      ],
      [
        'readme.md',
        {
          _index: 1143,
          title: {},
          body: {
            'contributing.html': {},
            'additional-documentation/tinynodes-library-docs.html': {},
            'additional-documentation/tinynodes-library-docs/ngx-editorjs-plugins-readme/ngx-editorjs-plugins-changelog.html': {}
          }
        }
      ],
      [
        'readonly',
        {
          _index: 315,
          title: {},
          body: {
            'interfaces/EditorJSMaterialForm.html': {},
            'directives/NgxEditorJSDirective.html': {},
            'injectables/NgxEditorJSPluginService.html': {},
            'injectables/NgxEditorJSService.html': {},
            'components/NgxTinynodesMatJsonOutputComponent.html': {}
          }
        }
      ],
      [
        'ready',
        {
          _index: 144,
          title: {},
          body: {
            'interfaces/ChangeMap.html': {},
            'interfaces/EditorJSChange.html': {},
            'interfaces/EditorJSClass.html': {},
            'interfaces/EditorJSInstanceConfig.html': {},
            'interfaces/EditorMap.html': {},
            'interfaces/InjectorApiCallOptions.html': {},
            'interfaces/InjectorApiCallResponse.html': {},
            'interfaces/InjectorMethodOption.html': {},
            'directives/NgxEditorJSDirective.html': {},
            'injectables/NgxEditorJSService.html': {},
            'interfaces/ReadyMap.html': {},
            'interfaces/SavedMap.html': {}
          }
        }
      ],
      [
        'readymap',
        {
          _index: 146,
          title: { 'interfaces/ReadyMap.html': {} },
          body: {
            'interfaces/ChangeMap.html': {},
            'interfaces/EditorJSChange.html': {},
            'interfaces/EditorMap.html': {},
            'injectables/NgxEditorJSService.html': {},
            'interfaces/ReadyMap.html': {},
            'interfaces/SavedMap.html': {}
          }
        }
      ],
      ['reasonably', { _index: 1231, title: {}, body: { 'contributing.html': {} } }],
      ['reduce', { _index: 896, title: {}, body: { 'injectables/NgxEditorJSService.html': {} } }],
      ['reduce((pluginmap', { _index: 711, title: {}, body: { 'injectables/NgxEditorJSPluginService.html': {} } }],
      [
        'ref',
        {
          _index: 347,
          title: {},
          body: { 'interfaces/EditorJSMaterialForm.html': {}, 'injectables/NgxEditorJSService.html': {} }
        }
      ],
      [
        'refactored',
        {
          _index: 1558,
          title: {},
          body: {
            'additional-documentation/tinynodes-library-docs/ngx-editorjs-readme/ngx-editorjs-changelog.html': {}
          }
        }
      ],
      ['reflect', { _index: 1085, title: {}, body: { 'changelog.html': {} } }],
      ['regard', { _index: 1299, title: {}, body: { 'contributing.html': {} } }],
      ['regardless', { _index: 1176, title: {}, body: { 'contributing.html': {} } }],
      [
        'regenerated',
        {
          _index: 1580,
          title: {},
          body: {
            'additional-documentation/tinynodes-library-docs/ngx-editorjs-readme/ngx-editorjs-changelog.html': {}
          }
        }
      ],
      ['reject', { _index: 1248, title: {}, body: { 'contributing.html': {} } }],
      [
        'related',
        { _index: 591, title: {}, body: { 'directives/NgxEditorJSDirective.html': {}, 'changelog.html': {} } }
      ],
      [
        'release',
        {
          _index: 1081,
          title: {},
          body: {
            'changelog.html': {},
            'additional-documentation/tinynodes-library-docs/ngx-editorjs-readme/ngx-editorjs-changelog.html': {},
            'additional-documentation/tinynodes-library-docs/ngx-editorjs-plugins-readme/ngx-editorjs-plugins-changelog.html': {}
          }
        }
      ],
      [
        'released',
        {
          _index: 1054,
          title: {},
          body: { 'changelog.html': {}, 'additional-documentation/tinynodes-library-docs.html': {} }
        }
      ],
      [
        'releases',
        {
          _index: 1603,
          title: {},
          body: { 'additional-documentation/tinynodes-library-docs/ngx-editorjs-plugins-readme.html': {} }
        }
      ],
      [
        'reliable',
        {
          _index: 1625,
          title: {},
          body: {
            'additional-documentation/tinynodes-library-docs/ngx-editorjs-plugins-readme/ngx-editorjs-plugins-changelog.html': {}
          }
        }
      ],
      ['religion', { _index: 1189, title: {}, body: { 'contributing.html': {} } }],
      ['remark', { _index: 794, title: {}, body: { 'injectables/NgxEditorJSService.html': {} } }],
      ['remarks', { _index: 821, title: {}, body: { 'injectables/NgxEditorJSService.html': {} } }],
      [
        'remove',
        {
          _index: 395,
          title: {},
          body: { 'classes/FixedHeader.html': {}, 'modules/PluginHeaderModule.html': {}, 'contributing.html': {} }
        }
      ],
      [
        'removed',
        {
          _index: 1100,
          title: {},
          body: {
            'changelog.html': {},
            'contributing.html': {},
            'additional-documentation/tinynodes-library-docs/ngx-editorjs-readme/ngx-editorjs-changelog.html': {},
            'additional-documentation/tinynodes-library-docs/ngx-editorjs-plugins-readme/ngx-editorjs-plugins-changelog.html': {}
          }
        }
      ],
      [
        'renamed',
        {
          _index: 1586,
          title: {},
          body: {
            'additional-documentation/tinynodes-library-docs/ngx-editorjs-readme/ngx-editorjs-changelog.html': {}
          }
        }
      ],
      [
        'render',
        {
          _index: 424,
          title: {},
          body: {
            'interfaces/NgxEditorJSConfig.html': {},
            'directives/NgxEditorJSDirective.html': {},
            'interfaces/NgxEditorJSModuleConfig.html': {},
            'injectables/NgxEditorJSService.html': {}
          }
        }
      ],
      ['rendered', { _index: 1502, title: {}, body: { 'additional-documentation/tinynodes-library-docs.html': {} } }],
      [
        'rendering',
        {
          _index: 1617,
          title: {},
          body: {
            'additional-documentation/tinynodes-library-docs/ngx-editorjs-plugins-readme/ngx-editorjs-plugins-changelog.html': {}
          }
        }
      ],
      ['repercussions', { _index: 1311, title: {}, body: { 'contributing.html': {} } }],
      [
        'replaced',
        {
          _index: 1585,
          title: {},
          body: {
            'additional-documentation/tinynodes-library-docs/ngx-editorjs-readme/ngx-editorjs-changelog.html': {}
          }
        }
      ],
      [
        'repo',
        {
          _index: 1009,
          title: {},
          body: {
            'modules/PluginCodeModule.html': {},
            'modules/PluginHeaderModule.html': {},
            'modules/PluginImageModule.html': {},
            'modules/PluginInlineCodeModule.html': {},
            'modules/PluginLinkModule.html': {},
            'modules/PluginListModule.html': {},
            'modules/PluginMarkerModule.html': {},
            'modules/PluginParagraphModule.html': {},
            'modules/PluginSimpleImageModule.html': {},
            'todo.html': {}
          }
        }
      ],
      [
        'repo](https://github.com/editor',
        {
          _index: 407,
          title: {},
          body: {
            'classes/FixedHeader.html': {},
            'modules/PluginCodeModule.html': {},
            'modules/PluginHeaderModule.html': {},
            'modules/PluginImageModule.html': {},
            'modules/PluginInlineCodeModule.html': {},
            'modules/PluginLinkModule.html': {},
            'modules/PluginListModule.html': {},
            'modules/PluginMarkerModule.html': {},
            'modules/PluginParagraphModule.html': {},
            'modules/PluginSimpleImageModule.html': {}
          }
        }
      ],
      ['report', { _index: 1105, title: {}, body: { 'changelog.html': {} } }],
      ['reported', { _index: 1286, title: {}, body: { 'contributing.html': {} } }],
      ['reporter', { _index: 1300, title: {}, body: { 'contributing.html': {} } }],
      ['repository', { _index: 1128, title: {}, body: { 'contributing.html': {}, 'index.html': {} } }],
      ['represent', { _index: 1154, title: {}, body: { 'contributing.html': {} } }],
      ['representation', { _index: 1280, title: {}, body: { 'contributing.html': {} } }],
      ['representative', { _index: 1277, title: {}, body: { 'contributing.html': {} } }],
      ['representing', { _index: 1267, title: {}, body: { 'contributing.html': {} } }],
      [
        'request',
        { _index: 876, title: {}, body: { 'injectables/NgxEditorJSService.html': {}, 'contributing.html': {} } }
      ],
      ['requied', { _index: 297, title: {}, body: { 'interfaces/EditorJSMaterialForm.html': {} } }],
      ['require', { _index: 1488, title: {}, body: { 'miscellaneous/variables.html': {} } }],
      ['require.context', { _index: 1492, title: {}, body: { 'miscellaneous/variables.html': {} } }],
      [
        'required',
        {
          _index: 177,
          title: {},
          body: {
            'interfaces/EditorJSClass.html': {},
            'interfaces/EditorJSInstanceConfig.html': {},
            'interfaces/EditorJSMaterialForm.html': {},
            'interfaces/InjectorApiCallOptions.html': {},
            'interfaces/InjectorApiCallResponse.html': {},
            'interfaces/InjectorMethodOption.html': {},
            'injectables/NgxEditorJSService.html': {},
            'modules/NgxEditorjsPluginsModule.html': {},
            'index.html': {},
            'additional-documentation/tinynodes-library-docs/ngx-editorjs-readme.html': {},
            'additional-documentation/tinynodes-library-docs/ngx-editorjs-readme/ngx-editorjs-changelog.html': {},
            'additional-documentation/tinynodes-library-docs/ngx-editorjs-plugins-readme.html': {}
          }
        }
      ],
      ['required(required', { _index: 299, title: {}, body: { 'interfaces/EditorJSMaterialForm.html': {} } }],
      [
        'requirement',
        {
          _index: 1624,
          title: {},
          body: {
            'additional-documentation/tinynodes-library-docs/ngx-editorjs-plugins-readme/ngx-editorjs-plugins-changelog.html': {}
          }
        }
      ],
      [
        'requires',
        {
          _index: 1606,
          title: {},
          body: { 'additional-documentation/tinynodes-library-docs/ngx-editorjs-plugins-readme.html': {} }
        }
      ],
      [
        'reset',
        {
          _index: 636,
          title: {},
          body: {
            'modules/NgxEditorJSModule.html': {},
            'modules/NgxEditorjsPluginsModule.html': {},
            'modules/NgxPluginServiceModule.html': {},
            'modules/NgxTinynodesComponentsModule.html': {},
            'modules/NgxTinynodesMatJsonOutputModule.html': {},
            'modules/NgxTinynodesMatTagInputModule.html': {},
            'overview.html': {}
          }
        }
      ],
      ['resetting', { _index: 779, title: {}, body: { 'injectables/NgxEditorJSService.html': {} } }],
      [
        'resolved',
        { _index: 823, title: {}, body: { 'injectables/NgxEditorJSService.html': {}, 'changelog.html': {} } }
      ],
      ['respectful', { _index: 1199, title: {}, body: { 'contributing.html': {} } }],
      [
        'response',
        {
          _index: 206,
          title: {},
          body: {
            'interfaces/EditorJSClass.html': {},
            'interfaces/EditorJSInstanceConfig.html': {},
            'interfaces/InjectorApiCallOptions.html': {},
            'interfaces/InjectorApiCallResponse.html': {},
            'interfaces/InjectorMethodOption.html': {},
            'injectables/NgxEditorJSService.html': {},
            'contributing.html': {}
          }
        }
      ],
      ['responsibilities', { _index: 1236, title: {}, body: { 'contributing.html': {} } }],
      [
        'responsibility',
        {
          _index: 1246,
          title: {},
          body: {
            'contributing.html': {},
            'additional-documentation/tinynodes-library-docs/ngx-editorjs-readme/ngx-editorjs-changelog.html': {}
          }
        }
      ],
      ['responsible', { _index: 1237, title: {}, body: { 'contributing.html': {} } }],
      ['restriction', { _index: 1409, title: {}, body: { 'license.html': {} } }],
      [
        'result',
        {
          _index: 64,
          title: {},
          body: {
            'interfaces/Block.html': {},
            'interfaces/BlockData.html': {},
            'interfaces/ChangeMap.html': {},
            'interfaces/CreateEditorJSOptions.html': {},
            'interfaces/EditorJSChange.html': {},
            'interfaces/EditorJSClass.html': {},
            'interfaces/EditorJSInstanceConfig.html': {},
            'interfaces/EditorJSMaterialForm.html': {},
            'interfaces/EditorMap.html': {},
            'classes/FixedHeader.html': {},
            'interfaces/Header.html': {},
            'interfaces/HeaderBlock.html': {},
            'interfaces/Image.html': {},
            'interfaces/ImageBlock.html': {},
            'interfaces/InjectorApiCallOptions.html': {},
            'interfaces/InjectorApiCallResponse.html': {},
            'interfaces/InjectorMethodOption.html': {},
            'interfaces/List.html': {},
            'interfaces/ListBlock.html': {},
            'interfaces/NgxEditorJSConfig.html': {},
            'directives/NgxEditorJSDirective.html': {},
            'modules/NgxEditorJSModule.html': {},
            'interfaces/NgxEditorJSModuleConfig.html': {},
            'injectables/NgxEditorJSPluginService.html': {},
            'injectables/NgxEditorJSService.html': {},
            'modules/NgxEditorjsPluginsModule.html': {},
            'modules/NgxPluginServiceModule.html': {},
            'modules/NgxTinynodesComponentsModule.html': {},
            'interfaces/NgxTinynodesMatFieldComponent.html': {},
            'components/NgxTinynodesMatJsonOutputComponent.html': {},
            'modules/NgxTinynodesMatJsonOutputModule.html': {},
            'modules/NgxTinynodesMatTagInputModule.html': {},
            'interfaces/Paragraph.html': {},
            'interfaces/ParagraphBlock.html': {},
            'modules/PluginCodeModule.html': {},
            'interfaces/PluginConfig.html': {},
            'interfaces/PluginConfigMap.html': {},
            'modules/PluginHeaderModule.html': {},
            'modules/PluginImageModule.html': {},
            'modules/PluginInlineCodeModule.html': {},
            'modules/PluginLinkModule.html': {},
            'modules/PluginListModule.html': {},
            'modules/PluginMarkerModule.html': {},
            'modules/PluginParagraphModule.html': {},
            'modules/PluginSimpleImageModule.html': {},
            'interfaces/ReadyMap.html': {},
            'interfaces/SavedMap.html': {},
            'interfaces/ToolSettingsMap.html': {},
            'changelog.html': {},
            'contributing.html': {},
            'dependencies.html': {},
            'miscellaneous/enumerations.html': {},
            'miscellaneous/functions.html': {},
            'index.html': {},
            'license.html': {},
            'modules.html': {},
            'overview.html': {},
            'todo.html': {},
            'miscellaneous/typealiases.html': {},
            'miscellaneous/variables.html': {},
            'additional-documentation/tinynodes-library-docs.html': {},
            'additional-documentation/tinynodes-library-docs/ngx-editorjs-readme.html': {},
            'additional-documentation/tinynodes-library-docs/ngx-editorjs-readme/ngx-editorjs-changelog.html': {},
            'additional-documentation/tinynodes-library-docs/ngx-editorjs-plugins-readme.html': {},
            'additional-documentation/tinynodes-library-docs/ngx-editorjs-plugins-readme/ngx-editorjs-plugins-changelog.html': {}
          }
        }
      ],
      [
        'results',
        {
          _index: 66,
          title: {},
          body: {
            'interfaces/Block.html': {},
            'interfaces/BlockData.html': {},
            'interfaces/ChangeMap.html': {},
            'interfaces/CreateEditorJSOptions.html': {},
            'interfaces/EditorJSChange.html': {},
            'interfaces/EditorJSClass.html': {},
            'interfaces/EditorJSInstanceConfig.html': {},
            'interfaces/EditorJSMaterialForm.html': {},
            'interfaces/EditorMap.html': {},
            'classes/FixedHeader.html': {},
            'interfaces/Header.html': {},
            'interfaces/HeaderBlock.html': {},
            'interfaces/Image.html': {},
            'interfaces/ImageBlock.html': {},
            'interfaces/InjectorApiCallOptions.html': {},
            'interfaces/InjectorApiCallResponse.html': {},
            'interfaces/InjectorMethodOption.html': {},
            'interfaces/List.html': {},
            'interfaces/ListBlock.html': {},
            'interfaces/NgxEditorJSConfig.html': {},
            'directives/NgxEditorJSDirective.html': {},
            'modules/NgxEditorJSModule.html': {},
            'interfaces/NgxEditorJSModuleConfig.html': {},
            'injectables/NgxEditorJSPluginService.html': {},
            'injectables/NgxEditorJSService.html': {},
            'modules/NgxEditorjsPluginsModule.html': {},
            'modules/NgxPluginServiceModule.html': {},
            'modules/NgxTinynodesComponentsModule.html': {},
            'interfaces/NgxTinynodesMatFieldComponent.html': {},
            'components/NgxTinynodesMatJsonOutputComponent.html': {},
            'modules/NgxTinynodesMatJsonOutputModule.html': {},
            'modules/NgxTinynodesMatTagInputModule.html': {},
            'interfaces/Paragraph.html': {},
            'interfaces/ParagraphBlock.html': {},
            'modules/PluginCodeModule.html': {},
            'interfaces/PluginConfig.html': {},
            'interfaces/PluginConfigMap.html': {},
            'modules/PluginHeaderModule.html': {},
            'modules/PluginImageModule.html': {},
            'modules/PluginInlineCodeModule.html': {},
            'modules/PluginLinkModule.html': {},
            'modules/PluginListModule.html': {},
            'modules/PluginMarkerModule.html': {},
            'modules/PluginParagraphModule.html': {},
            'modules/PluginSimpleImageModule.html': {},
            'interfaces/ReadyMap.html': {},
            'interfaces/SavedMap.html': {},
            'interfaces/ToolSettingsMap.html': {},
            'changelog.html': {},
            'contributing.html': {},
            'dependencies.html': {},
            'miscellaneous/enumerations.html': {},
            'miscellaneous/functions.html': {},
            'index.html': {},
            'license.html': {},
            'modules.html': {},
            'overview.html': {},
            'todo.html': {},
            'miscellaneous/typealiases.html': {},
            'miscellaneous/variables.html': {},
            'additional-documentation/tinynodes-library-docs.html': {},
            'additional-documentation/tinynodes-library-docs/ngx-editorjs-readme.html': {},
            'additional-documentation/tinynodes-library-docs/ngx-editorjs-readme/ngx-editorjs-changelog.html': {},
            'additional-documentation/tinynodes-library-docs/ngx-editorjs-plugins-readme.html': {},
            'additional-documentation/tinynodes-library-docs/ngx-editorjs-plugins-readme/ngx-editorjs-plugins-changelog.html': {}
          }
        }
      ],
      [
        'return',
        {
          _index: 276,
          title: {},
          body: {
            'interfaces/EditorJSMaterialForm.html': {},
            'classes/FixedHeader.html': {},
            'directives/NgxEditorJSDirective.html': {},
            'modules/NgxEditorJSModule.html': {},
            'injectables/NgxEditorJSPluginService.html': {},
            'injectables/NgxEditorJSService.html': {},
            'modules/PluginHeaderModule.html': {},
            'miscellaneous/functions.html': {}
          }
        }
      ],
      ['returning', { _index: 1358, title: {}, body: { 'miscellaneous/functions.html': {} } }],
      [
        'returns',
        {
          _index: 166,
          title: {},
          body: {
            'interfaces/EditorJSClass.html': {},
            'interfaces/EditorJSInstanceConfig.html': {},
            'classes/FixedHeader.html': {},
            'interfaces/InjectorApiCallOptions.html': {},
            'interfaces/InjectorApiCallResponse.html': {},
            'interfaces/InjectorMethodOption.html': {},
            'directives/NgxEditorJSDirective.html': {},
            'modules/NgxEditorJSModule.html': {},
            'injectables/NgxEditorJSPluginService.html': {},
            'injectables/NgxEditorJSService.html': {},
            'components/NgxTinynodesMatJsonOutputComponent.html': {},
            'modules/PluginHeaderModule.html': {},
            'miscellaneous/functions.html': {},
            'additional-documentation/tinynodes-library-docs/ngx-editorjs-readme.html': {},
            'additional-documentation/tinynodes-library-docs/ngx-editorjs-readme/ngx-editorjs-changelog.html': {},
            'additional-documentation/tinynodes-library-docs/ngx-editorjs-plugins-readme/ngx-editorjs-plugins-changelog.html': {}
          }
        }
      ],
      ['reviewed', { _index: 1291, title: {}, body: { 'contributing.html': {} } }],
      ['reviewer', { _index: 1162, title: {}, body: { 'contributing.html': {} } }],
      ['right', { _index: 1245, title: {}, body: { 'contributing.html': {} } }],
      ['rights', { _index: 1412, title: {}, body: { 'license.html': {} } }],
      [
        'robust',
        {
          _index: 1568,
          title: {},
          body: {
            'additional-documentation/tinynodes-library-docs/ngx-editorjs-readme/ngx-editorjs-changelog.html': {}
          }
        }
      ],
      [
        'rogue',
        {
          _index: 1562,
          title: {},
          body: {
            'additional-documentation/tinynodes-library-docs/ngx-editorjs-readme/ngx-editorjs-changelog.html': {}
          }
        }
      ],
      [
        'root',
        {
          _index: 644,
          title: {},
          body: {
            'modules/NgxEditorJSModule.html': {},
            'injectables/NgxEditorJSPluginService.html': {},
            'injectables/NgxEditorJSService.html': {},
            'additional-documentation/tinynodes-library-docs/ngx-editorjs-readme/ngx-editorjs-changelog.html': {},
            'additional-documentation/tinynodes-library-docs/ngx-editorjs-plugins-readme.html': {}
          }
        }
      ],
      ['run', { _index: 737, title: {}, body: { 'injectables/NgxEditorJSService.html': {}, 'index.html': {} } }],
      [
        'rxjs',
        {
          _index: 139,
          title: {},
          body: {
            'interfaces/ChangeMap.html': {},
            'interfaces/EditorJSChange.html': {},
            'interfaces/EditorJSMaterialForm.html': {},
            'interfaces/EditorMap.html': {},
            'directives/NgxEditorJSDirective.html': {},
            'injectables/NgxEditorJSService.html': {},
            'interfaces/ReadyMap.html': {},
            'interfaces/SavedMap.html': {},
            'dependencies.html': {}
          }
        }
      ],
      [
        'rxjs/operators',
        {
          _index: 238,
          title: {},
          body: {
            'interfaces/EditorJSMaterialForm.html': {},
            'directives/NgxEditorJSDirective.html': {},
            'injectables/NgxEditorJSService.html': {}
          }
        }
      ],
      [
        'sanitizer',
        {
          _index: 419,
          title: {},
          body: {
            'interfaces/NgxEditorJSConfig.html': {},
            'directives/NgxEditorJSDirective.html': {},
            'interfaces/NgxEditorJSModuleConfig.html': {},
            'additional-documentation/tinynodes-library-docs/ngx-editorjs-readme.html': {}
          }
        }
      ],
      [
        'sanitizerconfig',
        {
          _index: 434,
          title: {},
          body: {
            'interfaces/NgxEditorJSConfig.html': {},
            'directives/NgxEditorJSDirective.html': {},
            'interfaces/NgxEditorJSModuleConfig.html': {}
          }
        }
      ],
      [
        'save',
        {
          _index: 135,
          title: {},
          body: {
            'interfaces/ChangeMap.html': {},
            'interfaces/EditorJSChange.html': {},
            'interfaces/EditorJSClass.html': {},
            'interfaces/EditorJSInstanceConfig.html': {},
            'interfaces/EditorMap.html': {},
            'interfaces/InjectorApiCallOptions.html': {},
            'interfaces/InjectorApiCallResponse.html': {},
            'interfaces/InjectorMethodOption.html': {},
            'directives/NgxEditorJSDirective.html': {},
            'injectables/NgxEditorJSService.html': {},
            'interfaces/ReadyMap.html': {},
            'interfaces/SavedMap.html': {},
            'todo.html': {}
          }
        }
      ],
      ['save(options', { _index: 770, title: {}, body: { 'injectables/NgxEditorJSService.html': {} } }],
      ['saved', { _index: 518, title: {}, body: { 'directives/NgxEditorJSDirective.html': {} } }],
      [
        'savedmap',
        {
          _index: 147,
          title: { 'interfaces/SavedMap.html': {} },
          body: {
            'interfaces/ChangeMap.html': {},
            'interfaces/EditorJSChange.html': {},
            'interfaces/EditorMap.html': {},
            'injectables/NgxEditorJSService.html': {},
            'interfaces/ReadyMap.html': {},
            'interfaces/SavedMap.html': {}
          }
        }
      ],
      ['saver', { _index: 838, title: {}, body: { 'injectables/NgxEditorJSService.html': {} } }],
      [
        'saving',
        {
          _index: 1553,
          title: {},
          body: {
            'additional-documentation/tinynodes-library-docs/ngx-editorjs-readme/ngx-editorjs-changelog.html': {}
          }
        }
      ],
      ['scheme', { _index: 1156, title: {}, body: { 'contributing.html': {} } }],
      ['scope', { _index: 1263, title: {}, body: { 'contributing.html': {} } }],
      ['scripts', { _index: 1117, title: {}, body: { 'changelog.html': {} } }],
      ['searchable', { _index: 1370, title: {}, body: { 'index.html': {} } }],
      [
        'second',
        { _index: 747, title: {}, body: { 'injectables/NgxEditorJSService.html': {}, 'contributing.html': {} } }
      ],
      [
        'see',
        {
          _index: 405,
          title: {},
          body: {
            'classes/FixedHeader.html': {},
            'modules/PluginCodeModule.html': {},
            'modules/PluginHeaderModule.html': {},
            'modules/PluginImageModule.html': {},
            'modules/PluginInlineCodeModule.html': {},
            'modules/PluginLinkModule.html': {},
            'modules/PluginListModule.html': {},
            'modules/PluginMarkerModule.html': {},
            'modules/PluginParagraphModule.html': {},
            'modules/PluginSimpleImageModule.html': {},
            'changelog.html': {},
            'index.html': {},
            'additional-documentation/tinynodes-library-docs/ngx-editorjs-readme.html': {},
            'additional-documentation/tinynodes-library-docs/ngx-editorjs-plugins-readme/ngx-editorjs-plugins-changelog.html': {}
          }
        }
      ],
      ['selection', { _index: 1471, title: {}, body: { 'todo.html': {} } }],
      [
        'selector',
        {
          _index: 258,
          title: {},
          body: {
            'interfaces/EditorJSMaterialForm.html': {},
            'directives/NgxEditorJSDirective.html': {},
            'components/NgxTinynodesMatJsonOutputComponent.html': {}
          }
        }
      ],
      ['self', { _index: 230, title: {}, body: { 'interfaces/EditorJSMaterialForm.html': {} } }],
      ['sell', { _index: 1418, title: {}, body: { 'license.html': {} } }],
      [
        'semantic',
        {
          _index: 1531,
          title: {},
          body: {
            'additional-documentation/tinynodes-library-docs/ngx-editorjs-readme/ngx-editorjs-changelog.html': {},
            'additional-documentation/tinynodes-library-docs/ngx-editorjs-plugins-readme/ngx-editorjs-plugins-changelog.html': {}
          }
        }
      ],
      ['semver', { _index: 1157, title: {}, body: { 'contributing.html': {} } }],
      [
        'separably',
        {
          _index: 1592,
          title: {},
          body: { 'additional-documentation/tinynodes-library-docs/ngx-editorjs-plugins-readme.html': {} }
        }
      ],
      ['separately', { _index: 1305, title: {}, body: { 'contributing.html': {} } }],
      [
        'service',
        {
          _index: 472,
          title: {},
          body: {
            'directives/NgxEditorJSDirective.html': {},
            'injectables/NgxEditorJSPluginService.html': {},
            'injectables/NgxEditorJSService.html': {},
            'changelog.html': {},
            'miscellaneous/functions.html': {},
            'index.html': {},
            'todo.html': {},
            'additional-documentation/tinynodes-library-docs/ngx-editorjs-readme.html': {},
            'additional-documentation/tinynodes-library-docs/ngx-editorjs-readme/ngx-editorjs-changelog.html': {},
            'additional-documentation/tinynodes-library-docs/ngx-editorjs-plugins-readme.html': {},
            'additional-documentation/tinynodes-library-docs/ngx-editorjs-plugins-readme/ngx-editorjs-plugins-changelog.html': {}
          }
        }
      ],
      ['service.module', { _index: 935, title: {}, body: { 'modules/NgxEditorjsPluginsModule.html': {} } }],
      ['service.module.ts', { _index: 941, title: {}, body: { 'modules/NgxPluginServiceModule.html': {} } }],
      ['service.service', { _index: 944, title: {}, body: { 'modules/NgxPluginServiceModule.html': {} } }],
      ['service.service.ts', { _index: 678, title: {}, body: { 'injectables/NgxEditorJSPluginService.html': {} } }],
      ['service.service.ts:13', { _index: 687, title: {}, body: { 'injectables/NgxEditorJSPluginService.html': {} } }],
      ['service.service.ts:23', { _index: 690, title: {}, body: { 'injectables/NgxEditorJSPluginService.html': {} } }],
      ['service.service.ts:32', { _index: 689, title: {}, body: { 'injectables/NgxEditorJSPluginService.html': {} } }],
      ['service.service.ts:40', { _index: 693, title: {}, body: { 'injectables/NgxEditorJSPluginService.html': {} } }],
      ['service.service.ts:54', { _index: 698, title: {}, body: { 'injectables/NgxEditorJSPluginService.html': {} } }],
      ['service.ts', { _index: 154, title: {}, body: { 'interfaces/CreateEditorJSOptions.html': {} } }],
      [
        'services',
        {
          _index: 455,
          title: {},
          body: {
            'directives/NgxEditorJSDirective.html': {},
            'index.html': {},
            'additional-documentation/tinynodes-library-docs/ngx-editorjs-readme/ngx-editorjs-changelog.html': {}
          }
        }
      ],
      [
        'services/editorjs.service',
        {
          _index: 243,
          title: {},
          body: {
            'interfaces/EditorJSMaterialForm.html': {},
            'directives/NgxEditorJSDirective.html': {},
            'modules/NgxEditorJSModule.html': {}
          }
        }
      ],
      ['services/plugin', { _index: 934, title: {}, body: { 'modules/NgxEditorjsPluginsModule.html': {} } }],
      [
        'set',
        {
          _index: 158,
          title: {},
          body: {
            'interfaces/CreateEditorJSOptions.html': {},
            'interfaces/EditorJSMaterialForm.html': {},
            'interfaces/NgxEditorJSConfig.html': {},
            'directives/NgxEditorJSDirective.html': {},
            'interfaces/NgxEditorJSModuleConfig.html': {},
            'injectables/NgxEditorJSService.html': {},
            'miscellaneous/functions.html': {},
            'index.html': {},
            'additional-documentation/tinynodes-library-docs/ngx-editorjs-readme.html': {},
            'additional-documentation/tinynodes-library-docs/ngx-editorjs-readme/ngx-editorjs-changelog.html': {},
            'additional-documentation/tinynodes-library-docs/ngx-editorjs-plugins-readme.html': {}
          }
        }
      ],
      ['setdescribedbyids(ids', { _index: 332, title: {}, body: { 'interfaces/EditorJSMaterialForm.html': {} } }],
      [
        'sets',
        {
          _index: 484,
          title: {},
          body: {
            'directives/NgxEditorJSDirective.html': {},
            'modules/NgxEditorJSModule.html': {},
            'injectables/NgxEditorJSService.html': {},
            'additional-documentation/tinynodes-library-docs/ngx-editorjs-readme.html': {}
          }
        }
      ],
      ['setting', { _index: 1235, title: {}, body: { 'contributing.html': {}, 'todo.html': {} } }],
      [
        'settings',
        {
          _index: 89,
          title: {},
          body: {
            'interfaces/BlockData.html': {},
            'interfaces/PluginConfig.html': {},
            'interfaces/PluginConfigMap.html': {},
            'interfaces/ToolSettingsMap.html': {},
            'miscellaneous/typealiases.html': {}
          }
        }
      ],
      [
        'setup',
        {
          _index: 724,
          title: {},
          body: {
            'injectables/NgxEditorJSService.html': {},
            'additional-documentation/tinynodes-library-docs/ngx-editorjs-plugins-readme/ngx-editorjs-plugins-changelog.html': {}
          }
        }
      ],
      ['setupsubjects(options', { _index: 882, title: {}, body: { 'injectables/NgxEditorJSService.html': {} } }],
      [
        'several',
        {
          _index: 721,
          title: {},
          body: {
            'injectables/NgxEditorJSService.html': {},
            'modules/NgxEditorjsPluginsModule.html': {},
            'changelog.html': {},
            'additional-documentation/tinynodes-library-docs/ngx-editorjs-plugins-readme.html': {}
          }
        }
      ],
      ['sexual', { _index: 1190, title: {}, body: { 'contributing.html': {} } }],
      ['sexualized', { _index: 1215, title: {}, body: { 'contributing.html': {} } }],
      ['shall', { _index: 1427, title: {}, body: { 'license.html': {} } }],
      ['ships', { _index: 1388, title: {}, body: { 'index.html': {} } }],
      [
        'shortcut',
        {
          _index: 105,
          title: {},
          body: {
            'interfaces/BlockData.html': {},
            'interfaces/PluginConfig.html': {},
            'interfaces/PluginConfigMap.html': {},
            'modules/PluginInlineCodeModule.html': {},
            'modules/PluginMarkerModule.html': {},
            'interfaces/ToolSettingsMap.html': {},
            'additional-documentation/tinynodes-library-docs/ngx-editorjs-readme/ngx-editorjs-changelog.html': {},
            'additional-documentation/tinynodes-library-docs/ngx-editorjs-plugins-readme.html': {}
          }
        }
      ],
      ['shouldlabelfloat', { _index: 324, title: {}, body: { 'interfaces/EditorJSMaterialForm.html': {} } }],
      [
        'show',
        {
          _index: 503,
          title: {},
          body: {
            'directives/NgxEditorJSDirective.html': {},
            'additional-documentation/tinynodes-library-docs/ngx-editorjs-readme/ngx-editorjs-changelog.html': {}
          }
        }
      ],
      ['showing', { _index: 1209, title: {}, body: { 'contributing.html': {} } }],
      [
        'shown',
        {
          _index: 427,
          title: {},
          body: { 'interfaces/NgxEditorJSConfig.html': {}, 'interfaces/NgxEditorJSModuleConfig.html': {} }
        }
      ],
      [
        'shows',
        {
          _index: 1512,
          title: {},
          body: { 'additional-documentation/tinynodes-library-docs/ngx-editorjs-readme.html': {} }
        }
      ],
      ['sign', { _index: 1159, title: {}, body: { 'contributing.html': {} } }],
      [
        'simple',
        {
          _index: 1036,
          title: {},
          body: {
            'modules/PluginSimpleImageModule.html': {},
            'additional-documentation/tinynodes-library-docs/ngx-editorjs-plugins-readme.html': {}
          }
        }
      ],
      ['simplechanges', { _index: 532, title: {}, body: { 'directives/NgxEditorJSDirective.html': {} } }],
      ['simpleimage', { _index: 1034, title: {}, body: { 'modules/PluginSimpleImageModule.html': {} } }],
      [
        'simplified',
        {
          _index: 1541,
          title: {},
          body: {
            'additional-documentation/tinynodes-library-docs/ngx-editorjs-readme/ngx-editorjs-changelog.html': {}
          }
        }
      ],
      [
        'single',
        {
          _index: 214,
          title: {},
          body: {
            'interfaces/EditorJSMaterialForm.html': {},
            'injectables/NgxEditorJSService.html': {},
            'additional-documentation/tinynodes-library-docs/ngx-editorjs-readme/ngx-editorjs-changelog.html': {},
            'additional-documentation/tinynodes-library-docs/ngx-editorjs-plugins-readme.html': {}
          }
        }
      ],
      [
        'site',
        {
          _index: 1044,
          title: {},
          body: {
            'changelog.html': {},
            'index.html': {},
            'additional-documentation/tinynodes-library-docs/ngx-editorjs-readme/ngx-editorjs-changelog.html': {}
          }
        }
      ],
      ['size', { _index: 1179, title: {}, body: { 'contributing.html': {} } }],
      [
        'skipsave',
        {
          _index: 201,
          title: {},
          body: {
            'interfaces/EditorJSClass.html': {},
            'interfaces/EditorJSInstanceConfig.html': {},
            'interfaces/InjectorApiCallOptions.html': {},
            'interfaces/InjectorApiCallResponse.html': {},
            'interfaces/InjectorMethodOption.html': {}
          }
        }
      ],
      ['skipself', { _index: 655, title: {}, body: { 'modules/NgxEditorJSModule.html': {} } }],
      ['small', { _index: 1123, title: {}, body: { 'changelog.html': {} } }],
      ['social', { _index: 1272, title: {}, body: { 'contributing.html': {} } }],
      ['software', { _index: 1406, title: {}, body: { 'license.html': {} } }],
      [
        'source',
        {
          _index: 4,
          title: {},
          body: {
            'interfaces/Block.html': {},
            'interfaces/BlockData.html': {},
            'interfaces/ChangeMap.html': {},
            'interfaces/CreateEditorJSOptions.html': {},
            'interfaces/EditorJSChange.html': {},
            'interfaces/EditorJSClass.html': {},
            'interfaces/EditorJSInstanceConfig.html': {},
            'interfaces/EditorJSMaterialForm.html': {},
            'interfaces/EditorMap.html': {},
            'classes/FixedHeader.html': {},
            'interfaces/Header.html': {},
            'interfaces/HeaderBlock.html': {},
            'interfaces/Image.html': {},
            'interfaces/ImageBlock.html': {},
            'interfaces/InjectorApiCallOptions.html': {},
            'interfaces/InjectorApiCallResponse.html': {},
            'interfaces/InjectorMethodOption.html': {},
            'interfaces/List.html': {},
            'interfaces/ListBlock.html': {},
            'interfaces/NgxEditorJSConfig.html': {},
            'directives/NgxEditorJSDirective.html': {},
            'modules/NgxEditorJSModule.html': {},
            'interfaces/NgxEditorJSModuleConfig.html': {},
            'injectables/NgxEditorJSPluginService.html': {},
            'injectables/NgxEditorJSService.html': {},
            'modules/NgxEditorjsPluginsModule.html': {},
            'modules/NgxPluginServiceModule.html': {},
            'modules/NgxTinynodesComponentsModule.html': {},
            'interfaces/NgxTinynodesMatFieldComponent.html': {},
            'components/NgxTinynodesMatJsonOutputComponent.html': {},
            'modules/NgxTinynodesMatJsonOutputModule.html': {},
            'modules/NgxTinynodesMatTagInputModule.html': {},
            'interfaces/Paragraph.html': {},
            'interfaces/ParagraphBlock.html': {},
            'modules/PluginCodeModule.html': {},
            'interfaces/PluginConfig.html': {},
            'interfaces/PluginConfigMap.html': {},
            'modules/PluginHeaderModule.html': {},
            'modules/PluginImageModule.html': {},
            'modules/PluginInlineCodeModule.html': {},
            'modules/PluginLinkModule.html': {},
            'modules/PluginListModule.html': {},
            'modules/PluginMarkerModule.html': {},
            'modules/PluginParagraphModule.html': {},
            'modules/PluginSimpleImageModule.html': {},
            'interfaces/ReadyMap.html': {},
            'interfaces/SavedMap.html': {},
            'interfaces/ToolSettingsMap.html': {}
          }
        }
      ],
      ['spaces', { _index: 1266, title: {}, body: { 'contributing.html': {} } }],
      ['spec\\.ts', { _index: 1493, title: {}, body: { 'miscellaneous/variables.html': {} } }],
      [
        'specific',
        {
          _index: 1302,
          title: {},
          body: {
            'contributing.html': {},
            'additional-documentation/tinynodes-library-docs/ngx-editorjs-plugins-readme.html': {}
          }
        }
      ],
      [
        'specifies',
        {
          _index: 98,
          title: {},
          body: {
            'interfaces/BlockData.html': {},
            'interfaces/PluginConfig.html': {},
            'interfaces/PluginConfigMap.html': {},
            'interfaces/ToolSettingsMap.html': {}
          }
        }
      ],
      ['standards', { _index: 1192, title: {}, body: { 'contributing.html': {} } }],
      [
        'started',
        {
          _index: 1041,
          title: {
            'changelog.html': {},
            'contributing.html': {},
            'index.html': {},
            'license.html': {},
            'todo.html': {}
          },
          body: {}
        }
      ],
      [
        'state',
        {
          _index: 145,
          title: {},
          body: {
            'interfaces/ChangeMap.html': {},
            'interfaces/EditorJSChange.html': {},
            'interfaces/EditorJSMaterialForm.html': {},
            'interfaces/EditorMap.html': {},
            'directives/NgxEditorJSDirective.html': {},
            'injectables/NgxEditorJSService.html': {},
            'interfaces/ReadyMap.html': {},
            'interfaces/SavedMap.html': {},
            'additional-documentation/tinynodes-library-docs/ngx-editorjs-readme/ngx-editorjs-changelog.html': {}
          }
        }
      ],
      ['statechanges', { _index: 270, title: {}, body: { 'interfaces/EditorJSMaterialForm.html': {} } }],
      ['states', { _index: 790, title: {}, body: { 'injectables/NgxEditorJSService.html': {} } }],
      [
        'static',
        {
          _index: 167,
          title: {},
          body: {
            'interfaces/EditorJSClass.html': {},
            'interfaces/EditorJSInstanceConfig.html': {},
            'interfaces/EditorJSMaterialForm.html': {},
            'interfaces/InjectorApiCallOptions.html': {},
            'interfaces/InjectorApiCallResponse.html': {},
            'interfaces/InjectorMethodOption.html': {},
            'modules/NgxEditorJSModule.html': {}
          }
        }
      ],
      [
        'still',
        {
          _index: 1619,
          title: {},
          body: {
            'additional-documentation/tinynodes-library-docs/ngx-editorjs-plugins-readme/ngx-editorjs-plugins-changelog.html': {}
          }
        }
      ],
      ['store', { _index: 1473, title: {}, body: { 'todo.html': {} } }],
      [
        'stores',
        {
          _index: 1582,
          title: {},
          body: {
            'additional-documentation/tinynodes-library-docs/ngx-editorjs-readme/ngx-editorjs-changelog.html': {}
          }
        }
      ],
      [
        'stretch',
        {
          _index: 59,
          title: {},
          body: {
            'interfaces/Block.html': {},
            'interfaces/Header.html': {},
            'interfaces/HeaderBlock.html': {},
            'interfaces/Image.html': {},
            'interfaces/ImageBlock.html': {},
            'interfaces/List.html': {},
            'interfaces/ListBlock.html': {},
            'interfaces/Paragraph.html': {},
            'interfaces/ParagraphBlock.html': {}
          }
        }
      ],
      [
        'stretched',
        {
          _index: 60,
          title: {},
          body: {
            'interfaces/Block.html': {},
            'interfaces/Header.html': {},
            'interfaces/HeaderBlock.html': {},
            'interfaces/Image.html': {},
            'interfaces/ImageBlock.html': {},
            'interfaces/List.html': {},
            'interfaces/ListBlock.html': {},
            'interfaces/Paragraph.html': {},
            'interfaces/ParagraphBlock.html': {}
          }
        }
      ],
      [
        'string',
        {
          _index: 17,
          title: {},
          body: {
            'interfaces/Block.html': {},
            'interfaces/BlockData.html': {},
            'interfaces/ChangeMap.html': {},
            'interfaces/CreateEditorJSOptions.html': {},
            'interfaces/EditorJSChange.html': {},
            'interfaces/EditorJSClass.html': {},
            'interfaces/EditorJSInstanceConfig.html': {},
            'interfaces/EditorJSMaterialForm.html': {},
            'interfaces/EditorMap.html': {},
            'interfaces/Header.html': {},
            'interfaces/HeaderBlock.html': {},
            'interfaces/Image.html': {},
            'interfaces/ImageBlock.html': {},
            'interfaces/InjectorApiCallOptions.html': {},
            'interfaces/InjectorApiCallResponse.html': {},
            'interfaces/InjectorMethodOption.html': {},
            'interfaces/List.html': {},
            'interfaces/ListBlock.html': {},
            'interfaces/NgxEditorJSConfig.html': {},
            'directives/NgxEditorJSDirective.html': {},
            'interfaces/NgxEditorJSModuleConfig.html': {},
            'injectables/NgxEditorJSPluginService.html': {},
            'injectables/NgxEditorJSService.html': {},
            'interfaces/Paragraph.html': {},
            'interfaces/ParagraphBlock.html': {},
            'interfaces/PluginConfig.html': {},
            'interfaces/PluginConfigMap.html': {},
            'interfaces/ReadyMap.html': {},
            'interfaces/SavedMap.html': {},
            'interfaces/ToolSettingsMap.html': {},
            'miscellaneous/typealiases.html': {},
            'miscellaneous/variables.html': {},
            'additional-documentation/tinynodes-library-docs/ngx-editorjs-readme/ngx-editorjs-changelog.html': {},
            'additional-documentation/tinynodes-library-docs/ngx-editorjs-plugins-readme.html': {}
          }
        }
      ],
      [
        'style',
        {
          _index: 34,
          title: {},
          body: {
            'interfaces/Block.html': {},
            'interfaces/Header.html': {},
            'interfaces/HeaderBlock.html': {},
            'interfaces/Image.html': {},
            'interfaces/ImageBlock.html': {},
            'interfaces/List.html': {},
            'interfaces/ListBlock.html': {},
            'interfaces/Paragraph.html': {},
            'interfaces/ParagraphBlock.html': {}
          }
        }
      ],
      [
        'styles',
        {
          _index: 26,
          title: {},
          body: {
            'interfaces/Block.html': {},
            'interfaces/Header.html': {},
            'interfaces/HeaderBlock.html': {},
            'interfaces/Image.html': {},
            'interfaces/ImageBlock.html': {},
            'interfaces/List.html': {},
            'interfaces/ListBlock.html': {},
            'interfaces/Paragraph.html': {},
            'interfaces/ParagraphBlock.html': {},
            'miscellaneous/typealiases.html': {}
          }
        }
      ],
      ['styleurls', { _index: 261, title: {}, body: { 'interfaces/EditorJSMaterialForm.html': {} } }],
      [
        'subject',
        {
          _index: 236,
          title: {},
          body: {
            'interfaces/EditorJSMaterialForm.html': {},
            'directives/NgxEditorJSDirective.html': {},
            'injectables/NgxEditorJSService.html': {},
            'license.html': {}
          }
        }
      ],
      [
        'subjects',
        {
          _index: 547,
          title: {},
          body: { 'directives/NgxEditorJSDirective.html': {}, 'injectables/NgxEditorJSService.html': {} }
        }
      ],
      ['sublicense', { _index: 1416, title: {}, body: { 'license.html': {} } }],
      [
        'subscribe',
        {
          _index: 366,
          title: {},
          body: {
            'interfaces/EditorJSMaterialForm.html': {},
            'directives/NgxEditorJSDirective.html': {},
            'injectables/NgxEditorJSService.html': {}
          }
        }
      ],
      ['subscribe(change', { _index: 604, title: {}, body: { 'directives/NgxEditorJSDirective.html': {} } }],
      ['subscribe(editor', { _index: 869, title: {}, body: { 'injectables/NgxEditorJSService.html': {} } }],
      ['subscribe(focused', { _index: 372, title: {}, body: { 'interfaces/EditorJSMaterialForm.html': {} } }],
      ['subscribe(isready', { _index: 601, title: {}, body: { 'directives/NgxEditorJSDirective.html': {} } }],
      ['subscribe(saved', { _index: 606, title: {}, body: { 'directives/NgxEditorJSDirective.html': {} } }],
      ['subscriptions', { _index: 758, title: {}, body: { 'injectables/NgxEditorJSService.html': {} } }],
      ['substantial', { _index: 1429, title: {}, body: { 'license.html': {} } }],
      [
        'such',
        { _index: 744, title: {}, body: { 'injectables/NgxEditorJSService.html': {}, 'contributing.html': {} } }
      ],
      ['sunday', { _index: 1102, title: {}, body: { 'changelog.html': {} } }],
      ['super', { _index: 341, title: {}, body: { 'interfaces/EditorJSMaterialForm.html': {} } }],
      [
        'super(config',
        { _index: 397, title: {}, body: { 'classes/FixedHeader.html': {}, 'modules/PluginHeaderModule.html': {} } }
      ],
      ['super(editorservice', { _index: 350, title: {}, body: { 'interfaces/EditorJSMaterialForm.html': {} } }],
      [
        'support',
        {
          _index: 1373,
          title: {},
          body: {
            'index.html': {},
            'modules.html': {},
            'todo.html': {},
            'miscellaneous/variables.html': {},
            'additional-documentation/tinynodes-library-docs/ngx-editorjs-readme.html': {},
            'additional-documentation/tinynodes-library-docs/ngx-editorjs-readme/ngx-editorjs-changelog.html': {},
            'additional-documentation/tinynodes-library-docs/ngx-editorjs-plugins-readme.html': {}
          }
        }
      ],
      [
        'supported',
        {
          _index: 78,
          title: {},
          body: {
            'interfaces/BlockData.html': {},
            'interfaces/PluginConfig.html': {},
            'interfaces/PluginConfigMap.html': {},
            'interfaces/ToolSettingsMap.html': {},
            'miscellaneous/enumerations.html': {},
            'miscellaneous/typealiases.html': {},
            'additional-documentation/tinynodes-library-docs/ngx-editorjs-plugins-readme.html': {}
          }
        }
      ],
      [
        'supports',
        {
          _index: 27,
          title: {},
          body: {
            'interfaces/Block.html': {},
            'interfaces/Header.html': {},
            'interfaces/HeaderBlock.html': {},
            'interfaces/Image.html': {},
            'interfaces/ImageBlock.html': {},
            'interfaces/List.html': {},
            'interfaces/ListBlock.html': {},
            'interfaces/Paragraph.html': {},
            'interfaces/ParagraphBlock.html': {},
            'miscellaneous/typealiases.html': {},
            'additional-documentation/tinynodes-library-docs/ngx-editorjs-readme/ngx-editorjs-changelog.html': {}
          }
        }
      ],
      ['svg', { _index: 1454, title: {}, body: { 'modules.html': {} } }],
      ['switchmap', { _index: 782, title: {}, body: { 'injectables/NgxEditorJSService.html': {} } }],
      ['switchmap((response', { _index: 843, title: {}, body: { 'injectables/NgxEditorJSService.html': {} } }],
      ['switchmap(async', { _index: 826, title: {}, body: { 'injectables/NgxEditorJSService.html': {} } }],
      [
        't',
        {
          _index: 21,
          title: {},
          body: {
            'interfaces/Block.html': {},
            'interfaces/EditorJSClass.html': {},
            'interfaces/EditorJSInstanceConfig.html': {},
            'interfaces/Header.html': {},
            'interfaces/HeaderBlock.html': {},
            'interfaces/Image.html': {},
            'interfaces/ImageBlock.html': {},
            'interfaces/InjectorApiCallOptions.html': {},
            'interfaces/InjectorApiCallResponse.html': {},
            'interfaces/InjectorMethodOption.html': {},
            'interfaces/List.html': {},
            'interfaces/ListBlock.html': {},
            'injectables/NgxEditorJSService.html': {},
            'interfaces/Paragraph.html': {},
            'interfaces/ParagraphBlock.html': {}
          }
        }
      ],
      [
        'tag',
        {
          _index: 955,
          title: {},
          body: {
            'modules/NgxTinynodesComponentsModule.html': {},
            'components/NgxTinynodesMatJsonOutputComponent.html': {},
            'modules/NgxTinynodesMatTagInputModule.html': {},
            'miscellaneous/variables.html': {}
          }
        }
      ],
      [
        'tag_component_field_control',
        {
          _index: 1002,
          title: {},
          body: {
            'modules/NgxTinynodesMatTagInputModule.html': {},
            'overview.html': {},
            'miscellaneous/variables.html': {}
          }
        }
      ],
      [
        'tag_component_value_accessor',
        {
          _index: 1001,
          title: {},
          body: {
            'modules/NgxTinynodesMatTagInputModule.html': {},
            'overview.html': {},
            'miscellaneous/variables.html': {}
          }
        }
      ],
      ['tags', { _index: 1466, title: {}, body: { 'todo.html': {} } }],
      [
        'take',
        {
          _index: 783,
          title: {},
          body: {
            'injectables/NgxEditorJSService.html': {},
            'contributing.html': {},
            'additional-documentation/tinynodes-library-docs/ngx-editorjs-readme/ngx-editorjs-changelog.html': {}
          }
        }
      ],
      ['take(1', { _index: 825, title: {}, body: { 'injectables/NgxEditorJSService.html': {} } }],
      [
        'takes',
        {
          _index: 647,
          title: {},
          body: {
            'modules/NgxEditorJSModule.html': {},
            'additional-documentation/tinynodes-library-docs/ngx-editorjs-readme.html': {},
            'additional-documentation/tinynodes-library-docs/ngx-editorjs-plugins-readme.html': {}
          }
        }
      ],
      [
        'takeuntil',
        {
          _index: 237,
          title: {},
          body: { 'interfaces/EditorJSMaterialForm.html': {}, 'directives/NgxEditorJSDirective.html': {} }
        }
      ],
      ['tane', { _index: 1391, title: {}, body: { 'index.html': {}, 'license.html': {} } }],
      ['tap', { _index: 784, title: {}, body: { 'injectables/NgxEditorJSService.html': {} } }],
      ['tap((response', { _index: 840, title: {}, body: { 'injectables/NgxEditorJSService.html': {} } }],
      ['team', { _index: 1288, title: {}, body: { 'contributing.html': {} } }],
      [
        'template',
        {
          _index: 966,
          title: {},
          body: {
            'components/NgxTinynodesMatJsonOutputComponent.html': {},
            'additional-documentation/tinynodes-library-docs/ngx-editorjs-readme.html': {}
          }
        }
      ],
      [
        'templateurl',
        {
          _index: 259,
          title: {},
          body: { 'interfaces/EditorJSMaterialForm.html': {}, 'components/NgxTinynodesMatJsonOutputComponent.html': {} }
        }
      ],
      ['temporarily', { _index: 1255, title: {}, body: { 'contributing.html': {} } }],
      [
        'temporary',
        {
          _index: 1309,
          title: {},
          body: {
            'contributing.html': {},
            'additional-documentation/tinynodes-library-docs/ngx-editorjs-plugins-readme/ngx-editorjs-plugins-changelog.html': {}
          }
        }
      ],
      [
        'text',
        {
          _index: 41,
          title: {},
          body: {
            'interfaces/Block.html': {},
            'interfaces/Header.html': {},
            'interfaces/HeaderBlock.html': {},
            'interfaces/Image.html': {},
            'interfaces/ImageBlock.html': {},
            'interfaces/List.html': {},
            'interfaces/ListBlock.html': {},
            'directives/NgxEditorJSDirective.html': {},
            'interfaces/Paragraph.html': {},
            'interfaces/ParagraphBlock.html': {},
            'additional-documentation/tinynodes-library-docs/ngx-editorjs-plugins-readme.html': {}
          }
        }
      ],
      ['this._disabled', { _index: 303, title: {}, body: { 'interfaces/EditorJSMaterialForm.html': {} } }],
      ['this._empty', { _index: 309, title: {}, body: { 'interfaces/EditorJSMaterialForm.html': {} } }],
      ['this._focused', { _index: 290, title: {}, body: { 'interfaces/EditorJSMaterialForm.html': {} } }],
      ['this._placeholder', { _index: 285, title: {}, body: { 'interfaces/EditorJSMaterialForm.html': {} } }],
      ['this._required', { _index: 296, title: {}, body: { 'interfaces/EditorJSMaterialForm.html': {} } }],
      ['this._value', { _index: 277, title: {}, body: { 'interfaces/EditorJSMaterialForm.html': {} } }],
      ['this.apicall', { _index: 836, title: {}, body: { 'injectables/NgxEditorJSService.html': {} } }],
      ['this.autofocus', { _index: 612, title: {}, body: { 'directives/NgxEditorJSDirective.html': {} } }],
      ['this.autosave', { _index: 580, title: {}, body: { 'directives/NgxEditorJSDirective.html': {} } }],
      ['this.blockplaceholder', { _index: 615, title: {}, body: { 'directives/NgxEditorJSDirective.html': {} } }],
      ['this.blocks', { _index: 618, title: {}, body: { 'directives/NgxEditorJSDirective.html': {} } }],
      ['this.blocks.length', { _index: 619, title: {}, body: { 'directives/NgxEditorJSDirective.html': {} } }],
      [
        'this.cd.markforcheck',
        {
          _index: 571,
          title: {},
          body: { 'directives/NgxEditorJSDirective.html': {}, 'components/NgxTinynodesMatJsonOutputComponent.html': {} }
        }
      ],
      ['this.cleanupsubjects', { _index: 873, title: {}, body: { 'injectables/NgxEditorJSService.html': {} } }],
      ['this.config.editorjs', { _index: 797, title: {}, body: { 'injectables/NgxEditorJSService.html': {} } }],
      [
        'this.createeditor(this.createconfig',
        { _index: 595, title: {}, body: { 'directives/NgxEditorJSDirective.html': {} } }
      ],
      [
        'this.createonchange.call(this',
        { _index: 806, title: {}, body: { 'injectables/NgxEditorJSService.html': {} } }
      ],
      ['this.createonready.call(this', { _index: 810, title: {}, body: { 'injectables/NgxEditorJSService.html': {} } }],
      ['this.describedby', { _index: 333, title: {}, body: { 'interfaces/EditorJSMaterialForm.html': {} } }],
      ['this.destroyinstance', { _index: 875, title: {}, body: { 'injectables/NgxEditorJSService.html': {} } }],
      ['this.editorjs(editorconfig', { _index: 812, title: {}, body: { 'injectables/NgxEditorJSService.html': {} } }],
      ['this.editorjs.version', { _index: 850, title: {}, body: { 'injectables/NgxEditorJSService.html': {} } }],
      ['this.editormap[holder', { _index: 816, title: {}, body: { 'injectables/NgxEditorJSService.html': {} } }],
      [
        'this.editormap[holder].next(editor',
        { _index: 817, title: {}, body: { 'injectables/NgxEditorJSService.html': {} } }
      ],
      [
        'this.editormap[options.holder',
        { _index: 853, title: {}, body: { 'injectables/NgxEditorJSService.html': {} } }
      ],
      [
        'this.editormap[options.holder].complete',
        { _index: 893, title: {}, body: { 'injectables/NgxEditorJSService.html': {} } }
      ],
      [
        'this.editormap[options.holder].pipe(filter(editor',
        { _index: 855, title: {}, body: { 'injectables/NgxEditorJSService.html': {} } }
      ],
      ['this.editorservice', { _index: 575, title: {}, body: { 'directives/NgxEditorJSDirective.html': {} } }],
      ['this.el.nativeelement', { _index: 574, title: {}, body: { 'directives/NgxEditorJSDirective.html': {} } }],
      ['this.el.nativeelement.id', { _index: 596, title: {}, body: { 'directives/NgxEditorJSDirective.html': {} } }],
      ['this.empty', { _index: 326, title: {}, body: { 'interfaces/EditorJSMaterialForm.html': {} } }],
      ['this.errorstate', { _index: 375, title: {}, body: { 'interfaces/EditorJSMaterialForm.html': {} } }],
      ['this.excludetools', { _index: 579, title: {}, body: { 'directives/NgxEditorJSDirective.html': {} } }],
      ['this.expand', { _index: 979, title: {}, body: { 'components/NgxTinynodesMatJsonOutputComponent.html': {} } }],
      ['this.focused', { _index: 325, title: {}, body: { 'interfaces/EditorJSMaterialForm.html': {} } }],
      ['this.geteditor(options', { _index: 867, title: {}, body: { 'injectables/NgxEditorJSService.html': {} } }],
      ['this.geteditor(options).pipe', { _index: 824, title: {}, body: { 'injectables/NgxEditorJSService.html': {} } }],
      [
        'this.getfocusmonitor(this.editorinstance.element',
        { _index: 370, title: {}, body: { 'interfaces/EditorJSMaterialForm.html': {} } }
      ],
      [
        'this.gettools(options.excludetools',
        { _index: 799, title: {}, body: { 'injectables/NgxEditorJSService.html': {} } }
      ],
      ['this.haschanged.emit(change', { _index: 605, title: {}, body: { 'directives/NgxEditorJSDirective.html': {} } }],
      ['this.hassaved.next(saved', { _index: 607, title: {}, body: { 'directives/NgxEditorJSDirective.html': {} } }],
      [
        'this.hassavedmap[options.holder',
        { _index: 865, title: {}, body: { 'injectables/NgxEditorJSService.html': {} } }
      ],
      [
        'this.hassavedmap[options.holder].asobservable',
        { _index: 866, title: {}, body: { 'injectables/NgxEditorJSService.html': {} } }
      ],
      [
        'this.hassavedmap[options.holder].next(true',
        { _index: 841, title: {}, body: { 'injectables/NgxEditorJSService.html': {} } }
      ],
      ['this.hidetoolbar', { _index: 613, title: {}, body: { 'directives/NgxEditorJSDirective.html': {} } }],
      ['this.holder', { _index: 587, title: {}, body: { 'directives/NgxEditorJSDirective.html': {} } }],
      ['this.id', { _index: 573, title: {}, body: { 'directives/NgxEditorJSDirective.html': {} } }],
      ['this.initialblock', { _index: 614, title: {}, body: { 'directives/NgxEditorJSDirective.html': {} } }],
      ['this.isready.emit(isready', { _index: 602, title: {}, body: { 'directives/NgxEditorJSDirective.html': {} } }],
      [
        'this.isreadymap[holder].next(true',
        { _index: 819, title: {}, body: { 'injectables/NgxEditorJSService.html': {} } }
      ],
      [
        'this.isreadymap[options.holder',
        { _index: 856, title: {}, body: { 'injectables/NgxEditorJSService.html': {} } }
      ],
      [
        'this.isreadymap[options.holder].asobservable',
        { _index: 857, title: {}, body: { 'injectables/NgxEditorJSService.html': {} } }
      ],
      [
        'this.isreadymap[options.holder].next(true',
        { _index: 881, title: {}, body: { 'injectables/NgxEditorJSService.html': {} } }
      ],
      [
        'this.isreadymap[options.holder].value',
        { _index: 880, title: {}, body: { 'injectables/NgxEditorJSService.html': {} } }
      ],
      ['this.istouched.emit(true', { _index: 570, title: {}, body: { 'directives/NgxEditorJSDirective.html': {} } }],
      [
        'this.lastchangemap[options.holder',
        { _index: 858, title: {}, body: { 'injectables/NgxEditorJSService.html': {} } }
      ],
      [
        'this.lastchangemap[options.holder].next(change',
        { _index: 878, title: {}, body: { 'injectables/NgxEditorJSService.html': {} } }
      ],
      [
        'this.lastchangemap[options.holder].next(response.result',
        { _index: 842, title: {}, body: { 'injectables/NgxEditorJSService.html': {} } }
      ],
      [
        'this.lastchangemap[options.holder].pipe',
        { _index: 859, title: {}, body: { 'injectables/NgxEditorJSService.html': {} } }
      ],
      ['this.minheight', { _index: 616, title: {}, body: { 'directives/NgxEditorJSDirective.html': {} } }],
      ['this.ngcontrol', { _index: 357, title: {}, body: { 'interfaces/EditorJSMaterialForm.html': {} } }],
      ['this.ngcontrol.invalid', { _index: 376, title: {}, body: { 'interfaces/EditorJSMaterialForm.html': {} } }],
      ['this.ngcontrol.touched', { _index: 377, title: {}, body: { 'interfaces/EditorJSMaterialForm.html': {} } }],
      [
        'this.ngcontrol.valueaccessor',
        { _index: 359, title: {}, body: { 'interfaces/EditorJSMaterialForm.html': {} } }
      ],
      [
        'this.ondestroy$.complete',
        {
          _index: 609,
          title: {},
          body: { 'directives/NgxEditorJSDirective.html': {}, 'injectables/NgxEditorJSService.html': {} }
        }
      ],
      [
        'this.ondestroy$.next(true',
        {
          _index: 608,
          title: {},
          body: { 'directives/NgxEditorJSDirective.html': {}, 'injectables/NgxEditorJSService.html': {} }
        }
      ],
      ['this.ontouch', { _index: 294, title: {}, body: { 'interfaces/EditorJSMaterialForm.html': {} } }],
      ['this.ontouch(event', { _index: 339, title: {}, body: { 'interfaces/EditorJSMaterialForm.html': {} } }],
      ['this.pluginconfigmap', { _index: 706, title: {}, body: { 'injectables/NgxEditorJSPluginService.html': {} } }],
      [
        'this.pluginconfigmap[key',
        { _index: 707, title: {}, body: { 'injectables/NgxEditorJSPluginService.html': {} } }
      ],
      ['this.ref.tick', { _index: 820, title: {}, body: { 'injectables/NgxEditorJSService.html': {} } }],
      ['this.sanitizer', { _index: 617, title: {}, body: { 'directives/NgxEditorJSDirective.html': {} } }],
      ['this.save(options', { _index: 846, title: {}, body: { 'injectables/NgxEditorJSService.html': {} } }],
      ['this.service', { _index: 600, title: {}, body: { 'directives/NgxEditorJSDirective.html': {} } }],
      ['this.service.createinstance', { _index: 578, title: {}, body: { 'directives/NgxEditorJSDirective.html': {} } }],
      [
        'this.service.destroyinstance',
        { _index: 610, title: {}, body: { 'directives/NgxEditorJSDirective.html': {} } }
      ],
      ['this.service.geteditor', { _index: 572, title: {}, body: { 'directives/NgxEditorJSDirective.html': {} } }],
      ['this.service.update', { _index: 586, title: {}, body: { 'directives/NgxEditorJSDirective.html': {} } }],
      [
        'this.setupservicesubscriptions',
        { _index: 369, title: {}, body: { 'interfaces/EditorJSMaterialForm.html': {} } }
      ],
      ['this.setupsubjects', { _index: 815, title: {}, body: { 'injectables/NgxEditorJSService.html': {} } }],
      ['this.statechanges.next', { _index: 281, title: {}, body: { 'interfaces/EditorJSMaterialForm.html': {} } }],
      ['this.touched$.asobservable', { _index: 576, title: {}, body: { 'directives/NgxEditorJSDirective.html': {} } }],
      ['this.touched$.next(true', { _index: 569, title: {}, body: { 'directives/NgxEditorJSDirective.html': {} } }],
      ['this.zone.run', { _index: 872, title: {}, body: { 'injectables/NgxEditorJSService.html': {} } }],
      ['this.zone.run(async', { _index: 814, title: {}, body: { 'injectables/NgxEditorJSService.html': {} } }],
      ['this.zone.runoutsideangular', { _index: 870, title: {}, body: { 'injectables/NgxEditorJSService.html': {} } }],
      [
        'this.zone.runoutsideangular(async',
        { _index: 811, title: {}, body: { 'injectables/NgxEditorJSService.html': {} } }
      ],
      ['this[mapkey][options.holder', { _index: 885, title: {}, body: { 'injectables/NgxEditorJSService.html': {} } }],
      [
        'this[mapkey][options.holder].complete',
        { _index: 891, title: {}, body: { 'injectables/NgxEditorJSService.html': {} } }
      ],
      [
        'this[mapkey][options.holder].next(value',
        { _index: 887, title: {}, body: { 'injectables/NgxEditorJSService.html': {} } }
      ],
      ['threatening', { _index: 1260, title: {}, body: { 'contributing.html': {} } }],
      [
        'throw',
        {
          _index: 597,
          title: {},
          body: { 'directives/NgxEditorJSDirective.html': {}, 'injectables/NgxEditorJSService.html': {} }
        }
      ],
      ['tick', { _index: 738, title: {}, body: { 'injectables/NgxEditorJSService.html': {} } }],
      ['tidy', { _index: 1065, title: {}, body: { 'changelog.html': {} } }],
      [
        'time',
        {
          _index: 151,
          title: {},
          body: {
            'interfaces/ChangeMap.html': {},
            'interfaces/EditorJSChange.html': {},
            'interfaces/EditorJSClass.html': {},
            'interfaces/EditorJSInstanceConfig.html': {},
            'interfaces/EditorMap.html': {},
            'interfaces/InjectorApiCallOptions.html': {},
            'interfaces/InjectorApiCallResponse.html': {},
            'interfaces/InjectorMethodOption.html': {},
            'directives/NgxEditorJSDirective.html': {},
            'injectables/NgxEditorJSService.html': {},
            'interfaces/ReadyMap.html': {},
            'interfaces/SavedMap.html': {},
            'miscellaneous/variables.html': {},
            'additional-documentation/tinynodes-library-docs/ngx-editorjs-readme.html': {}
          }
        }
      ],
      ['timer', { _index: 485, title: {}, body: { 'directives/NgxEditorJSDirective.html': {} } }],
      ['tinynode', { _index: 1371, title: {}, body: { 'index.html': {} } }],
      [
        'tinynodes',
        {
          _index: 951,
          title: { 'additional-documentation/tinynodes-library-docs.html': {} },
          body: {
            'modules/NgxTinynodesComponentsModule.html': {},
            'interfaces/NgxTinynodesMatFieldComponent.html': {},
            'components/NgxTinynodesMatJsonOutputComponent.html': {},
            'modules/NgxTinynodesMatJsonOutputModule.html': {},
            'modules/NgxTinynodesMatTagInputModule.html': {},
            'changelog.html': {},
            'index.html': {},
            'license.html': {},
            'todo.html': {},
            'miscellaneous/variables.html': {},
            'additional-documentation/tinynodes-library-docs.html': {}
          }
        }
      ],
      [
        'tinynodes/ngx',
        {
          _index: 640,
          title: {},
          body: {
            'modules/NgxEditorJSModule.html': {},
            'injectables/NgxEditorJSService.html': {},
            'changelog.html': {},
            'index.html': {},
            'additional-documentation/tinynodes-library-docs/ngx-editorjs-readme.html': {},
            'additional-documentation/tinynodes-library-docs/ngx-editorjs-readme/ngx-editorjs-changelog.html': {},
            'additional-documentation/tinynodes-library-docs/ngx-editorjs-plugins-readme.html': {}
          }
        }
      ],
      ['today', { _index: 1052, title: {}, body: { 'changelog.html': {} } }],
      [
        'todo',
        {
          _index: 394,
          title: { 'todo.html': {} },
          body: { 'classes/FixedHeader.html': {}, 'modules/PluginHeaderModule.html': {}, 'todo.html': {} }
        }
      ],
      ['todos', { _index: 1462, title: {}, body: { 'todo.html': {} } }],
      [
        'toggle',
        {
          _index: 1535,
          title: {},
          body: {
            'additional-documentation/tinynodes-library-docs/ngx-editorjs-readme/ngx-editorjs-changelog.html': {}
          }
        }
      ],
      ['toggleexpand', { _index: 971, title: {}, body: { 'components/NgxTinynodesMatJsonOutputComponent.html': {} } }],
      [
        'token',
        {
          _index: 115,
          title: {},
          body: {
            'interfaces/BlockData.html': {},
            'interfaces/EditorJSClass.html': {},
            'interfaces/EditorJSInstanceConfig.html': {},
            'interfaces/InjectorApiCallOptions.html': {},
            'interfaces/InjectorApiCallResponse.html': {},
            'interfaces/InjectorMethodOption.html': {},
            'interfaces/NgxEditorJSConfig.html': {},
            'interfaces/NgxEditorJSModuleConfig.html': {},
            'interfaces/PluginConfig.html': {},
            'interfaces/PluginConfigMap.html': {},
            'interfaces/ToolSettingsMap.html': {},
            'miscellaneous/variables.html': {}
          }
        }
      ],
      [
        'tokens',
        {
          _index: 1591,
          title: {},
          body: { 'additional-documentation/tinynodes-library-docs/ngx-editorjs-plugins-readme.html': {} }
        }
      ],
      [
        'tool',
        {
          _index: 88,
          title: {},
          body: {
            'interfaces/BlockData.html': {},
            'classes/FixedHeader.html': {},
            'injectables/NgxEditorJSService.html': {},
            'modules/PluginCodeModule.html': {},
            'interfaces/PluginConfig.html': {},
            'interfaces/PluginConfigMap.html': {},
            'modules/PluginHeaderModule.html': {},
            'modules/PluginImageModule.html': {},
            'modules/PluginInlineCodeModule.html': {},
            'modules/PluginLinkModule.html': {},
            'modules/PluginListModule.html': {},
            'modules/PluginMarkerModule.html': {},
            'modules/PluginParagraphModule.html': {},
            'modules/PluginSimpleImageModule.html': {},
            'interfaces/ToolSettingsMap.html': {},
            'changelog.html': {},
            'miscellaneous/typealiases.html': {}
          }
        }
      ],
      ['tool.config', { _index: 904, title: {}, body: { 'injectables/NgxEditorJSService.html': {} } }],
      ['tool.inlinetoolbar', { _index: 902, title: {}, body: { 'injectables/NgxEditorJSService.html': {} } }],
      ['tool.shortcut', { _index: 900, title: {}, body: { 'injectables/NgxEditorJSService.html': {} } }],
      [
        'toolbar',
        {
          _index: 425,
          title: {},
          body: {
            'interfaces/NgxEditorJSConfig.html': {},
            'directives/NgxEditorJSDirective.html': {},
            'interfaces/NgxEditorJSModuleConfig.html': {},
            'additional-documentation/tinynodes-library-docs/ngx-editorjs-readme.html': {},
            'additional-documentation/tinynodes-library-docs/ngx-editorjs-plugins-readme/ngx-editorjs-plugins-changelog.html': {}
          }
        }
      ],
      ['toolbaropen', { _index: 791, title: {}, body: { 'injectables/NgxEditorJSService.html': {} } }],
      [
        'toolconstructable',
        {
          _index: 74,
          title: {},
          body: {
            'interfaces/BlockData.html': {},
            'interfaces/PluginConfig.html': {},
            'interfaces/PluginConfigMap.html': {},
            'interfaces/ToolSettingsMap.html': {},
            'miscellaneous/typealiases.html': {}
          }
        }
      ],
      [
        'tools',
        {
          _index: 92,
          title: {},
          body: {
            'interfaces/BlockData.html': {},
            'interfaces/CreateEditorJSOptions.html': {},
            'directives/NgxEditorJSDirective.html': {},
            'injectables/NgxEditorJSService.html': {},
            'modules/NgxEditorjsPluginsModule.html': {},
            'interfaces/PluginConfig.html': {},
            'interfaces/PluginConfigMap.html': {},
            'interfaces/ToolSettingsMap.html': {},
            'additional-documentation/tinynodes-library-docs/ngx-editorjs-readme.html': {},
            'additional-documentation/tinynodes-library-docs/ngx-editorjs-readme/ngx-editorjs-changelog.html': {}
          }
        }
      ],
      [
        'toolsettings',
        {
          _index: 73,
          title: {},
          body: {
            'interfaces/BlockData.html': {},
            'interfaces/PluginConfig.html': {},
            'interfaces/PluginConfigMap.html': {},
            'interfaces/ToolSettingsMap.html': {},
            'miscellaneous/typealiases.html': {}
          }
        }
      ],
      [
        'toolsettingsmap',
        {
          _index: 93,
          title: { 'interfaces/ToolSettingsMap.html': {} },
          body: {
            'interfaces/BlockData.html': {},
            'injectables/NgxEditorJSService.html': {},
            'interfaces/PluginConfig.html': {},
            'interfaces/PluginConfigMap.html': {},
            'interfaces/ToolSettingsMap.html': {}
          }
        }
      ],
      ['tort', { _index: 1450, title: {}, body: { 'license.html': {} } }],
      ['touched', { _index: 473, title: {}, body: { 'directives/NgxEditorJSDirective.html': {} } }],
      ['towards', { _index: 1211, title: {}, body: { 'contributing.html': {} } }],
      ['tree', { _index: 967, title: {}, body: { 'components/NgxTinynodesMatJsonOutputComponent.html': {} } }],
      [
        'trigger',
        {
          _index: 365,
          title: {},
          body: { 'interfaces/EditorJSMaterialForm.html': {}, 'injectables/NgxEditorJSService.html': {} }
        }
      ],
      ['triggered', { _index: 720, title: {}, body: { 'injectables/NgxEditorJSService.html': {} } }],
      ['trolling', { _index: 1220, title: {}, body: { 'contributing.html': {} } }],
      [
        'true',
        {
          _index: 252,
          title: {},
          body: {
            'interfaces/EditorJSMaterialForm.html': {},
            'classes/FixedHeader.html': {},
            'interfaces/NgxEditorJSConfig.html': {},
            'directives/NgxEditorJSDirective.html': {},
            'interfaces/NgxEditorJSModuleConfig.html': {},
            'injectables/NgxEditorJSService.html': {},
            'components/NgxTinynodesMatJsonOutputComponent.html': {},
            'modules/PluginCodeModule.html': {},
            'modules/PluginHeaderModule.html': {},
            'modules/PluginImageModule.html': {},
            'modules/PluginInlineCodeModule.html': {},
            'modules/PluginLinkModule.html': {},
            'modules/PluginListModule.html': {},
            'modules/PluginMarkerModule.html': {},
            'modules/PluginParagraphModule.html': {},
            'modules/PluginSimpleImageModule.html': {},
            'miscellaneous/variables.html': {},
            'additional-documentation/tinynodes-library-docs/ngx-editorjs-plugins-readme.html': {}
          }
        }
      ],
      [
        'ts',
        {
          _index: 1600,
          title: {},
          body: { 'additional-documentation/tinynodes-library-docs/ngx-editorjs-plugins-readme.html': {} }
        }
      ],
      ['tslint:disable', { _index: 352, title: {}, body: { 'interfaces/EditorJSMaterialForm.html': {} } }],
      [
        'turned',
        {
          _index: 1626,
          title: {},
          body: {
            'additional-documentation/tinynodes-library-docs/ngx-editorjs-plugins-readme/ngx-editorjs-plugins-changelog.html': {}
          }
        }
      ],
      [
        'two',
        {
          _index: 534,
          title: {},
          body: {
            'directives/NgxEditorJSDirective.html': {},
            'contributing.html': {},
            'additional-documentation/tinynodes-library-docs/ngx-editorjs-plugins-readme/ngx-editorjs-plugins-changelog.html': {}
          }
        }
      ],
      [
        'type',
        {
          _index: 10,
          title: {},
          body: {
            'interfaces/Block.html': {},
            'interfaces/BlockData.html': {},
            'interfaces/CreateEditorJSOptions.html': {},
            'interfaces/EditorJSChange.html': {},
            'interfaces/EditorJSClass.html': {},
            'interfaces/EditorJSInstanceConfig.html': {},
            'interfaces/EditorJSMaterialForm.html': {},
            'classes/FixedHeader.html': {},
            'interfaces/Header.html': {},
            'interfaces/HeaderBlock.html': {},
            'interfaces/Image.html': {},
            'interfaces/ImageBlock.html': {},
            'interfaces/InjectorApiCallOptions.html': {},
            'interfaces/InjectorApiCallResponse.html': {},
            'interfaces/InjectorMethodOption.html': {},
            'interfaces/List.html': {},
            'interfaces/ListBlock.html': {},
            'interfaces/NgxEditorJSConfig.html': {},
            'directives/NgxEditorJSDirective.html': {},
            'modules/NgxEditorJSModule.html': {},
            'interfaces/NgxEditorJSModuleConfig.html': {},
            'injectables/NgxEditorJSPluginService.html': {},
            'injectables/NgxEditorJSService.html': {},
            'components/NgxTinynodesMatJsonOutputComponent.html': {},
            'interfaces/Paragraph.html': {},
            'interfaces/ParagraphBlock.html': {},
            'modules/PluginCodeModule.html': {},
            'interfaces/PluginConfig.html': {},
            'interfaces/PluginConfigMap.html': {},
            'modules/PluginHeaderModule.html': {},
            'modules/PluginImageModule.html': {},
            'modules/PluginInlineCodeModule.html': {},
            'modules/PluginLinkModule.html': {},
            'modules/PluginListModule.html': {},
            'modules/PluginMarkerModule.html': {},
            'modules/PluginParagraphModule.html': {},
            'modules/PluginSimpleImageModule.html': {},
            'interfaces/ToolSettingsMap.html': {},
            'miscellaneous/functions.html': {},
            'miscellaneous/typealiases.html': {},
            'miscellaneous/variables.html': {},
            'additional-documentation/tinynodes-library-docs/ngx-editorjs-readme.html': {},
            'additional-documentation/tinynodes-library-docs/ngx-editorjs-plugins-readme.html': {}
          }
        }
      ],
      ['typealiases', { _index: 1477, title: { 'miscellaneous/typealiases.html': {} }, body: {} }],
      ['typeof', { _index: 805, title: {}, body: { 'injectables/NgxEditorJSService.html': {} } }],
      [
        'types',
        {
          _index: 76,
          title: {},
          body: {
            'interfaces/BlockData.html': {},
            'interfaces/PluginConfig.html': {},
            'interfaces/PluginConfigMap.html': {},
            'interfaces/ToolSettingsMap.html': {},
            'miscellaneous/enumerations.html': {},
            'miscellaneous/typealiases.html': {},
            'additional-documentation/tinynodes-library-docs/ngx-editorjs-readme/ngx-editorjs-changelog.html': {}
          }
        }
      ],
      ['types/blocks', { _index: 560, title: {}, body: { 'directives/NgxEditorJSDirective.html': {} } }],
      [
        'types/config',
        {
          _index: 665,
          title: {},
          body: { 'modules/NgxEditorJSModule.html': {}, 'injectables/NgxEditorJSService.html': {} }
        }
      ],
      ['types/editorjs', { _index: 785, title: {}, body: { 'injectables/NgxEditorJSService.html': {} } }],
      [
        'types/injector',
        {
          _index: 666,
          title: {},
          body: { 'modules/NgxEditorJSModule.html': {}, 'injectables/NgxEditorJSService.html': {} }
        }
      ],
      ['types/maps', { _index: 786, title: {}, body: { 'injectables/NgxEditorJSService.html': {} } }],
      [
        'types/plugins',
        {
          _index: 392,
          title: {},
          body: {
            'classes/FixedHeader.html': {},
            'injectables/NgxEditorJSPluginService.html': {},
            'modules/NgxPluginServiceModule.html': {},
            'modules/PluginCodeModule.html': {},
            'modules/PluginHeaderModule.html': {},
            'modules/PluginImageModule.html': {},
            'modules/PluginInlineCodeModule.html': {},
            'modules/PluginLinkModule.html': {},
            'modules/PluginListModule.html': {},
            'modules/PluginMarkerModule.html': {},
            'modules/PluginParagraphModule.html': {},
            'modules/PluginSimpleImageModule.html': {}
          }
        }
      ],
      [
        'typescript',
        {
          _index: 171,
          title: {},
          body: {
            'interfaces/EditorJSClass.html': {},
            'interfaces/EditorJSInstanceConfig.html': {},
            'interfaces/InjectorApiCallOptions.html': {},
            'interfaces/InjectorApiCallResponse.html': {},
            'interfaces/InjectorMethodOption.html': {},
            'additional-documentation/tinynodes-library-docs/ngx-editorjs-readme.html': {}
          }
        }
      ],
      [
        'ui',
        {
          _index: 1503,
          title: {},
          body: { 'additional-documentation/tinynodes-library-docs/ngx-editorjs-readme.html': {} }
        }
      ],
      ['unacceptable', { _index: 1213, title: {}, body: { 'contributing.html': {} } }],
      [
        'undefined',
        {
          _index: 113,
          title: {},
          body: {
            'interfaces/BlockData.html': {},
            'injectables/NgxEditorJSService.html': {},
            'interfaces/PluginConfig.html': {},
            'interfaces/PluginConfigMap.html': {},
            'interfaces/ToolSettingsMap.html': {}
          }
        }
      ],
      ['under', { _index: 1048, title: {}, body: { 'changelog.html': {} } }],
      [
        'underlying',
        {
          _index: 312,
          title: {},
          body: {
            'interfaces/EditorJSMaterialForm.html': {},
            'injectables/NgxEditorJSService.html': {},
            'changelog.html': {},
            'index.html': {},
            'additional-documentation/tinynodes-library-docs/ngx-editorjs-readme.html': {}
          }
        }
      ],
      ['underneath', { _index: 1380, title: {}, body: { 'index.html': {} } }],
      ['unique', { _index: 319, title: {}, body: { 'interfaces/EditorJSMaterialForm.html': {} } }],
      ['unlike', { _index: 822, title: {}, body: { 'injectables/NgxEditorJSService.html': {} } }],
      [
        'unordered',
        {
          _index: 29,
          title: {},
          body: {
            'interfaces/Block.html': {},
            'interfaces/Header.html': {},
            'interfaces/HeaderBlock.html': {},
            'interfaces/Image.html': {},
            'interfaces/ImageBlock.html': {},
            'interfaces/List.html': {},
            'interfaces/ListBlock.html': {},
            'interfaces/Paragraph.html': {},
            'interfaces/ParagraphBlock.html': {},
            'miscellaneous/typealiases.html': {}
          }
        }
      ],
      [
        'unreleased',
        {
          _index: 1051,
          title: {},
          body: {
            'changelog.html': {},
            'additional-documentation/tinynodes-library-docs/ngx-editorjs-readme/ngx-editorjs-changelog.html': {}
          }
        }
      ],
      ['unsubscribe', { _index: 367, title: {}, body: { 'interfaces/EditorJSMaterialForm.html': {} } }],
      ['until', { _index: 1119, title: {}, body: { 'changelog.html': {} } }],
      ['unwelcome', { _index: 1217, title: {}, body: { 'contributing.html': {} } }],
      [
        'up',
        {
          _index: 363,
          title: {},
          body: {
            'interfaces/EditorJSMaterialForm.html': {},
            'directives/NgxEditorJSDirective.html': {},
            'injectables/NgxEditorJSService.html': {},
            'changelog.html': {},
            'additional-documentation/tinynodes-library-docs/ngx-editorjs-readme/ngx-editorjs-changelog.html': {}
          }
        }
      ],
      [
        'update',
        { _index: 726, title: {}, body: { 'injectables/NgxEditorJSService.html': {}, 'contributing.html': {} } }
      ],
      ['update(options', { _index: 773, title: {}, body: { 'injectables/NgxEditorJSService.html': {} } }],
      [
        'updated',
        {
          _index: 537,
          title: {},
          body: {
            'directives/NgxEditorJSDirective.html': {},
            'changelog.html': {},
            'additional-documentation/tinynodes-library-docs/ngx-editorjs-readme/ngx-editorjs-changelog.html': {}
          }
        }
      ],
      [
        'updates',
        {
          _index: 1532,
          title: {},
          body: {
            'additional-documentation/tinynodes-library-docs/ngx-editorjs-readme/ngx-editorjs-changelog.html': {},
            'additional-documentation/tinynodes-library-docs/ngx-editorjs-plugins-readme/ngx-editorjs-plugins-changelog.html': {}
          }
        }
      ],
      [
        'upgraded',
        {
          _index: 1083,
          title: {},
          body: {
            'changelog.html': {},
            'additional-documentation/tinynodes-library-docs/ngx-editorjs-readme/ngx-editorjs-changelog.html': {}
          }
        }
      ],
      [
        'upgrading',
        {
          _index: 1614,
          title: {},
          body: {
            'additional-documentation/tinynodes-library-docs/ngx-editorjs-plugins-readme/ngx-editorjs-plugins-changelog.html': {}
          }
        }
      ],
      [
        'upload',
        {
          _index: 1608,
          title: {},
          body: { 'additional-documentation/tinynodes-library-docs/ngx-editorjs-plugins-readme.html': {} }
        }
      ],
      [
        'url',
        {
          _index: 50,
          title: {},
          body: {
            'interfaces/Block.html': {},
            'interfaces/Header.html': {},
            'interfaces/HeaderBlock.html': {},
            'interfaces/Image.html': {},
            'interfaces/ImageBlock.html': {},
            'interfaces/List.html': {},
            'interfaces/ListBlock.html': {},
            'interfaces/Paragraph.html': {},
            'interfaces/ParagraphBlock.html': {}
          }
        }
      ],
      [
        'usage',
        {
          _index: 1378,
          title: {},
          body: { 'index.html': {}, 'additional-documentation/tinynodes-library-docs/ngx-editorjs-readme.html': {} }
        }
      ],
      [
        'use',
        {
          _index: 100,
          title: {},
          body: {
            'interfaces/BlockData.html': {},
            'directives/NgxEditorJSDirective.html': {},
            'modules/NgxEditorJSModule.html': {},
            'injectables/NgxEditorJSService.html': {},
            'interfaces/PluginConfig.html': {},
            'interfaces/PluginConfigMap.html': {},
            'interfaces/ToolSettingsMap.html': {},
            'contributing.html': {},
            'miscellaneous/functions.html': {},
            'index.html': {},
            'license.html': {},
            'additional-documentation/tinynodes-library-docs/ngx-editorjs-readme.html': {},
            'additional-documentation/tinynodes-library-docs/ngx-editorjs-readme/ngx-editorjs-changelog.html': {},
            'additional-documentation/tinynodes-library-docs/ngx-editorjs-plugins-readme.html': {}
          }
        }
      ],
      [
        'used',
        {
          _index: 110,
          title: {},
          body: {
            'interfaces/BlockData.html': {},
            'interfaces/CreateEditorJSOptions.html': {},
            'directives/NgxEditorJSDirective.html': {},
            'injectables/NgxEditorJSService.html': {},
            'interfaces/PluginConfig.html': {},
            'interfaces/PluginConfigMap.html': {},
            'interfaces/ToolSettingsMap.html': {},
            'index.html': {},
            'additional-documentation/tinynodes-library-docs/ngx-editorjs-readme.html': {},
            'additional-documentation/tinynodes-library-docs/ngx-editorjs-readme/ngx-editorjs-changelog.html': {},
            'additional-documentation/tinynodes-library-docs/ngx-editorjs-plugins-readme.html': {}
          }
        }
      ],
      [
        'useexisting',
        {
          _index: 249,
          title: {},
          body: { 'interfaces/EditorJSMaterialForm.html': {}, 'miscellaneous/variables.html': {} }
        }
      ],
      [
        'usefactory',
        {
          _index: 669,
          title: {},
          body: { 'modules/NgxEditorJSModule.html': {}, 'modules/NgxPluginServiceModule.html': {} }
        }
      ],
      [
        'useful',
        {
          _index: 776,
          title: {},
          body: { 'injectables/NgxEditorJSService.html': {}, 'changelog.html': {}, 'contributing.html': {} }
        }
      ],
      [
        'userplugin',
        {
          _index: 1572,
          title: {},
          body: {
            'additional-documentation/tinynodes-library-docs/ngx-editorjs-readme/ngx-editorjs-changelog.html': {}
          }
        }
      ],
      [
        'userplugins',
        {
          _index: 508,
          title: {},
          body: {
            'directives/NgxEditorJSDirective.html': {},
            'additional-documentation/tinynodes-library-docs/ngx-editorjs-readme.html': {}
          }
        }
      ],
      [
        'uses',
        {
          _index: 795,
          title: {},
          body: {
            'injectables/NgxEditorJSService.html': {},
            'additional-documentation/tinynodes-library-docs/ngx-editorjs-readme/ngx-editorjs-changelog.html': {}
          }
        }
      ],
      [
        'usevalue',
        {
          _index: 410,
          title: {},
          body: {
            'classes/FixedHeader.html': {},
            'modules/NgxEditorJSModule.html': {},
            'modules/PluginCodeModule.html': {},
            'modules/PluginHeaderModule.html': {},
            'modules/PluginImageModule.html': {},
            'modules/PluginInlineCodeModule.html': {},
            'modules/PluginLinkModule.html': {},
            'modules/PluginListModule.html': {},
            'modules/PluginMarkerModule.html': {},
            'modules/PluginParagraphModule.html': {},
            'modules/PluginSimpleImageModule.html': {},
            'additional-documentation/tinynodes-library-docs/ngx-editorjs-plugins-readme.html': {}
          }
        }
      ],
      [
        'using',
        {
          _index: 680,
          title: {},
          body: {
            'injectables/NgxEditorJSPluginService.html': {},
            'injectables/NgxEditorJSService.html': {},
            'changelog.html': {},
            'contributing.html': {},
            'index.html': {},
            'additional-documentation/tinynodes-library-docs/ngx-editorjs-readme/ngx-editorjs-changelog.html': {},
            'additional-documentation/tinynodes-library-docs/ngx-editorjs-plugins-readme.html': {}
          }
        }
      ],
      [
        'util/plugin',
        {
          _index: 943,
          title: {},
          body: {
            'modules/NgxPluginServiceModule.html': {},
            'modules/PluginCodeModule.html': {},
            'modules/PluginImageModule.html': {},
            'modules/PluginLinkModule.html': {},
            'modules/PluginListModule.html': {},
            'modules/PluginMarkerModule.html': {},
            'modules/PluginSimpleImageModule.html': {}
          }
        }
      ],
      [
        'value',
        {
          _index: 275,
          title: {},
          body: {
            'interfaces/EditorJSMaterialForm.html': {},
            'classes/FixedHeader.html': {},
            'directives/NgxEditorJSDirective.html': {},
            'injectables/NgxEditorJSPluginService.html': {},
            'injectables/NgxEditorJSService.html': {},
            'components/NgxTinynodesMatJsonOutputComponent.html': {},
            'miscellaneous/enumerations.html': {},
            'miscellaneous/variables.html': {},
            'additional-documentation/tinynodes-library-docs/ngx-editorjs-readme.html': {}
          }
        }
      ],
      ['value(value', { _index: 280, title: {}, body: { 'interfaces/EditorJSMaterialForm.html': {} } }],
      [
        'values',
        {
          _index: 143,
          title: {},
          body: {
            'interfaces/ChangeMap.html': {},
            'interfaces/EditorJSChange.html': {},
            'interfaces/EditorJSClass.html': {},
            'interfaces/EditorJSInstanceConfig.html': {},
            'interfaces/EditorMap.html': {},
            'interfaces/InjectorApiCallOptions.html': {},
            'interfaces/InjectorApiCallResponse.html': {},
            'interfaces/InjectorMethodOption.html': {},
            'directives/NgxEditorJSDirective.html': {},
            'injectables/NgxEditorJSService.html': {},
            'interfaces/ReadyMap.html': {},
            'interfaces/SavedMap.html': {},
            'miscellaneous/functions.html': {},
            'miscellaneous/variables.html': {}
          }
        }
      ],
      ['var', { _index: 981, title: {}, body: { 'components/NgxTinynodesMatJsonOutputComponent.html': {} } }],
      [
        'variables',
        {
          _index: 1146,
          title: { 'miscellaneous/variables.html': {} },
          body: { 'contributing.html': {}, 'miscellaneous/variables.html': {} }
        }
      ],
      [
        'various',
        {
          _index: 1552,
          title: {},
          body: {
            'additional-documentation/tinynodes-library-docs/ngx-editorjs-readme/ngx-editorjs-changelog.html': {}
          }
        }
      ],
      [
        'version',
        {
          _index: 168,
          title: {},
          body: {
            'interfaces/EditorJSClass.html': {},
            'interfaces/EditorJSInstanceConfig.html': {},
            'classes/FixedHeader.html': {},
            'interfaces/InjectorApiCallOptions.html': {},
            'interfaces/InjectorApiCallResponse.html': {},
            'interfaces/InjectorMethodOption.html': {},
            'directives/NgxEditorJSDirective.html': {},
            'injectables/NgxEditorJSService.html': {},
            'modules/PluginHeaderModule.html': {},
            'changelog.html': {},
            'contributing.html': {},
            'miscellaneous/variables.html': {},
            'additional-documentation/tinynodes-library-docs/ngx-editorjs-readme.html': {}
          }
        }
      ],
      [
        'versioning',
        {
          _index: 1155,
          title: {},
          body: {
            'contributing.html': {},
            'additional-documentation/tinynodes-library-docs/ngx-editorjs-readme/ngx-editorjs-changelog.html': {},
            'additional-documentation/tinynodes-library-docs/ngx-editorjs-plugins-readme/ngx-editorjs-plugins-changelog.html': {}
          }
        }
      ],
      [
        'very',
        {
          _index: 1595,
          title: {},
          body: { 'additional-documentation/tinynodes-library-docs/ngx-editorjs-plugins-readme.html': {} }
        }
      ],
      [
        'via',
        {
          _index: 83,
          title: {},
          body: {
            'interfaces/BlockData.html': {},
            'directives/NgxEditorJSDirective.html': {},
            'injectables/NgxEditorJSPluginService.html': {},
            'interfaces/PluginConfig.html': {},
            'interfaces/PluginConfigMap.html': {},
            'interfaces/ToolSettingsMap.html': {},
            'contributing.html': {},
            'index.html': {},
            'todo.html': {},
            'miscellaneous/typealiases.html': {},
            'additional-documentation/tinynodes-library-docs/ngx-editorjs-readme.html': {},
            'additional-documentation/tinynodes-library-docs/ngx-editorjs-readme/ngx-editorjs-changelog.html': {},
            'additional-documentation/tinynodes-library-docs/ngx-editorjs-plugins-readme/ngx-editorjs-plugins-changelog.html': {}
          }
        }
      ],
      ['viewchild', { _index: 231, title: {}, body: { 'interfaces/EditorJSMaterialForm.html': {} } }],
      ["viewchild('editorinstance", { _index: 313, title: {}, body: { 'interfaces/EditorJSMaterialForm.html': {} } }],
      [
        'viewer',
        {
          _index: 996,
          title: {},
          body: { 'modules/NgxTinynodesMatJsonOutputModule.html': {}, 'dependencies.html': {} }
        }
      ],
      ['viewpoints', { _index: 1201, title: {}, body: { 'contributing.html': {} } }],
      ['visit', { _index: 1368, title: {}, body: { 'index.html': {} } }],
      [
        'void',
        {
          _index: 183,
          title: {},
          body: {
            'interfaces/EditorJSClass.html': {},
            'interfaces/EditorJSInstanceConfig.html': {},
            'interfaces/EditorJSMaterialForm.html': {},
            'interfaces/InjectorApiCallOptions.html': {},
            'interfaces/InjectorApiCallResponse.html': {},
            'interfaces/InjectorMethodOption.html': {},
            'directives/NgxEditorJSDirective.html': {},
            'injectables/NgxEditorJSService.html': {},
            'components/NgxTinynodesMatJsonOutputComponent.html': {}
          }
        }
      ],
      ['wait', { _index: 542, title: {}, body: { 'directives/NgxEditorJSDirective.html': {} } }],
      [
        'want',
        {
          _index: 1383,
          title: {},
          body: {
            'index.html': {},
            'additional-documentation/tinynodes-library-docs/ngx-editorjs-readme.html': {},
            'additional-documentation/tinynodes-library-docs/ngx-editorjs-plugins-readme.html': {}
          }
        }
      ],
      ['warranties', { _index: 1436, title: {}, body: { 'license.html': {} } }],
      ['warranty', { _index: 1431, title: {}, body: { 'license.html': {} } }],
      [
        'way',
        {
          _index: 453,
          title: {},
          body: {
            'directives/NgxEditorJSDirective.html': {},
            'modules/NgxEditorjsPluginsModule.html': {},
            'additional-documentation/tinynodes-library-docs/ngx-editorjs-readme/ngx-editorjs-changelog.html': {},
            'additional-documentation/tinynodes-library-docs/ngx-editorjs-plugins-readme/ngx-editorjs-plugins-changelog.html': {}
          }
        }
      ],
      ['wednesday', { _index: 1070, title: {}, body: { 'changelog.html': {} } }],
      ['welcoming', { _index: 1167, title: {}, body: { 'contributing.html': {} } }],
      ['well', { _index: 1068, title: {}, body: { 'changelog.html': {} } }],
      ['whether', { _index: 1448, title: {}, body: { 'license.html': {} } }],
      ['wiki', { _index: 1250, title: {}, body: { 'contributing.html': {} } }],
      ['wish', { _index: 1131, title: {}, body: { 'contributing.html': {} } }],
      [
        'withbackground',
        {
          _index: 58,
          title: {},
          body: {
            'interfaces/Block.html': {},
            'interfaces/Header.html': {},
            'interfaces/HeaderBlock.html': {},
            'interfaces/Image.html': {},
            'interfaces/ImageBlock.html': {},
            'interfaces/List.html': {},
            'interfaces/ListBlock.html': {},
            'interfaces/Paragraph.html': {},
            'interfaces/ParagraphBlock.html': {}
          }
        }
      ],
      [
        'withborder',
        {
          _index: 55,
          title: {},
          body: {
            'interfaces/Block.html': {},
            'interfaces/Header.html': {},
            'interfaces/HeaderBlock.html': {},
            'interfaces/Image.html': {},
            'interfaces/ImageBlock.html': {},
            'interfaces/List.html': {},
            'interfaces/ListBlock.html': {},
            'interfaces/Paragraph.html': {},
            'interfaces/ParagraphBlock.html': {}
          }
        }
      ],
      [
        'within',
        {
          _index: 725,
          title: {},
          body: {
            'injectables/NgxEditorJSService.html': {},
            'contributing.html': {},
            'index.html': {},
            'additional-documentation/tinynodes-library-docs/ngx-editorjs-readme.html': {},
            'additional-documentation/tinynodes-library-docs/ngx-editorjs-plugins-readme.html': {}
          }
        }
      ],
      [
        'without',
        { _index: 1089, title: {}, body: { 'changelog.html': {}, 'contributing.html': {}, 'license.html': {} } }
      ],
      [
        "won't",
        {
          _index: 426,
          title: {},
          body: { 'interfaces/NgxEditorJSConfig.html': {}, 'interfaces/NgxEditorJSModuleConfig.html': {} }
        }
      ],
      [
        'work',
        {
          _index: 1084,
          title: {},
          body: {
            'changelog.html': {},
            'additional-documentation/tinynodes-library-docs/ngx-editorjs-readme/ngx-editorjs-changelog.html': {}
          }
        }
      ],
      [
        'works',
        {
          _index: 1620,
          title: {},
          body: {
            'additional-documentation/tinynodes-library-docs/ngx-editorjs-plugins-readme/ngx-editorjs-plugins-changelog.html': {}
          }
        }
      ],
      ['written', { _index: 1059, title: {}, body: { 'changelog.html': {} } }],
      [
        'yes',
        {
          _index: 525,
          title: {},
          body: {
            'directives/NgxEditorJSDirective.html': {},
            'modules/NgxEditorJSModule.html': {},
            'miscellaneous/functions.html': {},
            'additional-documentation/tinynodes-library-docs/ngx-editorjs-plugins-readme.html': {}
          }
        }
      ],
      ['zone', { _index: 734, title: {}, body: { 'injectables/NgxEditorJSService.html': {} } }],
      ['zone.js', { _index: 1345, title: {}, body: { 'dependencies.html': {} } }],
      [
        'zoom',
        {
          _index: 635,
          title: {},
          body: {
            'modules/NgxEditorJSModule.html': {},
            'modules/NgxEditorjsPluginsModule.html': {},
            'modules/NgxPluginServiceModule.html': {},
            'modules/NgxTinynodesComponentsModule.html': {},
            'modules/NgxTinynodesMatJsonOutputModule.html': {},
            'modules/NgxTinynodesMatTagInputModule.html': {},
            'overview.html': {}
          }
        }
      ]
    ],
    pipeline: ['stemmer']
  },
  store: {
    'interfaces/Block.html': {
      url: 'interfaces/Block.html',
      title: 'interface - Block',
      body:
        "\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  Block\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            libs/ngx-editorjs/src/lib/types/blocks.ts\n        \n\n            \n                Description\n            \n            \n                Base block type for EditorJS\n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        data\n                                \n                                \n                                        type\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n            \n    Indexable\n        \n            \n                \n                    \n                        [key: string]:        any\n\n                    \n                \n                        \n                            \n                                Defined in libs/ngx-editorjs/src/lib/types/blocks.ts:13\n                            \n                        \n                \n                    \n                        Additional properties on the type\n\n                    \n                \n            \n        \n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        data\n                                    \n                                \n                                \n                                    \n                                        data:     T\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     T\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    The data interface for the block type\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        type\n                                    \n                                \n                                \n                                    \n                                        type:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    The EditorJS block type\n\n                                \n                            \n                        \n                    \n            \n    \n\n\n    \n        export interface Block {\n  /**\n   * The EditorJS block type\n   */\n  type: string;\n\n  /**\n   * The data interface for the block type\n   */\n  data: T;\n\n  /**\n   * Additional properties on the type\n   */\n  [key: string]: any;\n}\n\n/**\n * Available list styles, supports `ordered` and `unordered`.\n * A custom string can also be added\n */\nexport type ListStyle = 'ordered' | 'unordered' | string;\n\n/**\n * Default data type for a list block\n */\nexport interface List {\n  /**\n   * The list style\n   */\n  style: ListStyle;\n  /**\n   * List items of type T\n   */\n  items: T[];\n}\n\n/**\n * The default list block is provided by the EditorJS list plugin\n */\nexport interface ListBlock extends Block> {\n  /**\n   * The EditorJS block type\n   */\n  type: 'list';\n}\n\n/**\n * Default data type for a paragraph block\n */\ninterface Paragraph {\n  /**\n   * The paragraph text\n   */\n  text: string;\n}\n\n/**\n * Interface for a paragraph block\n */\nexport interface ParagraphBlock extends Block {\n  /**\n   * The EditorJS block type\n   */\n  type: 'paragraph';\n}\n\n/**\n * Default data type for a header block\n */\ninterface Header {\n  /**\n   * The header text\n   */\n  text: string;\n  /**\n   * The header level from 1-6\n   */\n  level: number;\n}\n\n/**\n * Interface for a header block\n */\nexport interface HeaderBlock extends Block {\n  /**\n   * The EditorJS block type\n   */\n  type: 'header';\n}\n\n/**\n * Default data type for a header block\n */\nexport interface Image {\n  /**\n   * The image URL\n   */\n  url: string;\n  /**\n   * Optional image caption\n   */\n  caption?: string;\n  /**\n   * Optional border property\n   */\n  withBorder?: boolean;\n\n  /**\n   * Optional background property\n   */\n  withBackground?: boolean;\n\n  /**\n   * Optional stretch property\n   */\n  stretched?: boolean;\n}\n\n/**\n * Interface for a image block\n */\nexport interface ImageBlock extends Block {\n  /**\n   * The EditorJS block type\n   */\n  type: 'image';\n}\n\n/**\n * Type of all the basic block type\n */\nexport type BlockTypes = ParagraphBlock | HeaderBlock | ImageBlock | ListBlock | Block;\n\n    \n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"
    },
    'interfaces/BlockData.html': {
      url: 'interfaces/BlockData.html',
      title: 'interface - BlockData',
      body:
        "\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  BlockData\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            libs/ngx-editorjs-plugins/src/lib/types/plugins.ts\n        \n\n            \n                Description\n            \n            \n                Block Data interface\n\n            \n\n\n\n\n            \n    Indexable\n        \n            \n                \n                    \n                        [key: string]:        any\n\n                    \n                \n                        \n                            \n                                Defined in libs/ngx-editorjs-plugins/src/lib/types/plugins.ts:7\n                            \n                        \n            \n        \n\n\n    \n\n\n    \n        import { InjectionToken } from '@angular/core';\nimport { ToolSettings, ToolConstructable } from '@editorjs/editorjs';\n\n/**\n * Block Data interface\n */\nexport interface BlockData {\n  [key: string]: any;\n}\n\n/**\n * The types of plugins supported, currently block and inline\n */\nexport enum PluginTypes {\n  /**\n   * A EditorJS block plugin\n   */\n  Block = 'block',\n  /**\n   * A EditorJS inline plugin\n   */\n  Inline = 'inline'\n}\n\n/**\n * The types of plugins supported via the plugin `type` property\n */\nexport type PluginType = PluginTypes.Block | PluginTypes.Inline | string;\n\n/**\n * A plugin property\n */\nexport type PluginProperty = string;\n\n/**\n * The EditorJS tool settings for this plugin\n */\nexport type EditorJSPlugin = ToolConstructable | ToolSettings;\n\n/**\n * A map of all the tools settings\n */\nexport interface ToolSettingsMap {\n  /**\n   * The key of the plugin and the plugin exported tool settings\n   */\n  [key: string]: EditorJSPlugin;\n}\n\n/**\n * A plugin configuration object\n */\nexport interface PluginConfig {\n  /**\n   * Specifies the type of plugin for the plugin provider\n   */\n  type: PluginProperty;\n  /**\n   * The key to use for the plugin\n   */\n  key: PluginProperty;\n  /**\n   * Label for displaying the plugin name\n   */\n  pluginName: PluginProperty;\n  /**\n   * Optional description for the plugin\n   */\n  description?: PluginProperty;\n  /**\n   * Optional shortcut for the plugin\n   */\n  shortcut?: PluginProperty;\n  /**\n   * Optional {@link https://editorjs.io/provide-custom-configuration | custom configuration} to pass to EditorJS\n   */\n  config?: any;\n  /**\n   * Optional block data, used to define the block data for this type\n   * and used as a default\n   */\n  blockData?: BlockData;\n  /**\n   * The plugin for the editor\n   */\n  plugin: EditorJSPlugin | undefined;\n}\n\n/**\n * The Injection token for initial plugins as defined in the ngx-editorjs module\n */\nexport const EDITOR_JS_TOOL_INJECTOR = new InjectionToken('EDITOR_JS_TOOL_INJECTOR');\n\n/**\n * Injection token for a plugin config\n */\nexport const PLUGIN_CONFIG = new InjectionToken('PLUGIN_CONFIG');\n\n/**\n * A map of plugin configs\n */\nexport interface PluginConfigMap {\n  /**\n   * A plugin config per key\n   */\n  [key: string]: PluginConfig;\n}\n\n/**\n * Injection token for the plugin config map\n */\nexport const PluginClasses = new InjectionToken('PluginClasses');\n\n    \n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"
    },
    'interfaces/ChangeMap.html': {
      url: 'interfaces/ChangeMap.html',
      title: 'interface - ChangeMap',
      body:
        "\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  ChangeMap\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            libs/ngx-editorjs/src/lib/types/maps.ts\n        \n\n            \n                Description\n            \n            \n                A map containing BehaviorSubject which is the last save from the EditorJS instance\n\n            \n\n\n\n\n            \n    Indexable\n        \n            \n                \n                    \n                        [key: string]:    BehaviorSubject\n\n                    \n                \n                        \n                            \n                                Defined in libs/ngx-editorjs/src/lib/types/maps.ts:52\n                            \n                        \n                \n                    \n                        A map key containing a BehaviorSubject\n\n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import EditorJS, { OutputData } from '@editorjs/editorjs';\nimport { BehaviorSubject } from 'rxjs';\nimport { Block } from './blocks';\n\n/**\n * A map containing instances of `BehaviorSubject`\n */\nexport interface EditorMap {\n  /**\n   * A map key containing `BehaviorSubject`\n   */\n  [key: string]: BehaviorSubject;\n}\n\n/**\n * A map containing `BehaviorSubject` values of the ready state of EditorJS\n */\nexport interface ReadyMap {\n  /**\n   * A map key containing a `BehaviorSubject`\n   */\n  [key: string]: BehaviorSubject;\n}\n\n/**\n * A map containing `BehaviorSubject` values of the save state of EditorJS\n */\nexport interface SavedMap {\n  /**\n   * A map key containing a `BehaviorSubject`\n   */\n  [key: string]: BehaviorSubject;\n}\n\n/**\n * An EditorJS change event\n */\nexport interface EditorJSChange {\n  /**\n   * Time of the change\n   */\n  time: number;\n  /**\n   * Blocks in the change\n   */\n  blocks: Block[];\n}\n\n/**\n * A map containing `BehaviorSubject` which is the last save from the EditorJS instance\n */\nexport interface ChangeMap {\n  /**\n   * A map key containing a `BehaviorSubject`\n   */\n  [key: string]: BehaviorSubject;\n}\n\n    \n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"
    },
    'interfaces/CreateEditorJSOptions.html': {
      url: 'interfaces/CreateEditorJSOptions.html',
      title: 'interface - CreateEditorJSOptions',
      body:
        '\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  CreateEditorJSOptions\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            libs/ngx-editorjs/src/lib/types/editorjs-service.ts\n        \n\n            \n                Description\n            \n            \n                EditorJS options\n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                            Optional\n                                        autoSave\n                                \n                                \n                                        config\n                                \n                                \n                                            Optional\n                                        excludeTools\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        autoSave\n                                    \n                                \n                                \n                                    \n                                        autoSave:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    Autosave on change, is set to false\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        config\n                                    \n                                \n                                \n                                    \n                                        config:     EditorConfig\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     EditorConfig\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Configuration\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        excludeTools\n                                    \n                                \n                                \n                                    \n                                        excludeTools:     string[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string[]\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    Tools to include, Optional - if not set all tools will be used\n\n                                \n                            \n                        \n                    \n            \n    \n\n\n    \n        import { EditorConfig } from \'@editorjs/editorjs\';\n\n/**\n * EditorJS options\n */\nexport interface CreateEditorJSOptions {\n  /**\n   * Configuration\n   */\n  config: EditorConfig;\n  /**\n   * Tools to include, Optional - if not set all tools will be used\n   */\n  excludeTools?: string[];\n  /**\n   * Autosave on change, is set to false\n   */\n  autoSave?: number;\n}\n\n    \n\n\n\n\n\n\n\n                   \n    \n         result-matching ""\n        \n    \n    \n        No results matching ""\n    \n\n'
    },
    'interfaces/EditorJSChange.html': {
      url: 'interfaces/EditorJSChange.html',
      title: 'interface - EditorJSChange',
      body:
        "\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  EditorJSChange\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            libs/ngx-editorjs/src/lib/types/maps.ts\n        \n\n            \n                Description\n            \n            \n                An EditorJS change event\n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        blocks\n                                \n                                \n                                        time\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        blocks\n                                    \n                                \n                                \n                                    \n                                        blocks:         Block[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         Block[]\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Blocks in the change\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        time\n                                    \n                                \n                                \n                                    \n                                        time:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Time of the change\n\n                                \n                            \n                        \n                    \n            \n    \n\n\n    \n        import EditorJS, { OutputData } from '@editorjs/editorjs';\nimport { BehaviorSubject } from 'rxjs';\nimport { Block } from './blocks';\n\n/**\n * A map containing instances of `BehaviorSubject`\n */\nexport interface EditorMap {\n  /**\n   * A map key containing `BehaviorSubject`\n   */\n  [key: string]: BehaviorSubject;\n}\n\n/**\n * A map containing `BehaviorSubject` values of the ready state of EditorJS\n */\nexport interface ReadyMap {\n  /**\n   * A map key containing a `BehaviorSubject`\n   */\n  [key: string]: BehaviorSubject;\n}\n\n/**\n * A map containing `BehaviorSubject` values of the save state of EditorJS\n */\nexport interface SavedMap {\n  /**\n   * A map key containing a `BehaviorSubject`\n   */\n  [key: string]: BehaviorSubject;\n}\n\n/**\n * An EditorJS change event\n */\nexport interface EditorJSChange {\n  /**\n   * Time of the change\n   */\n  time: number;\n  /**\n   * Blocks in the change\n   */\n  blocks: Block[];\n}\n\n/**\n * A map containing `BehaviorSubject` which is the last save from the EditorJS instance\n */\nexport interface ChangeMap {\n  /**\n   * A map key containing a `BehaviorSubject`\n   */\n  [key: string]: BehaviorSubject;\n}\n\n    \n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"
    },
    'interfaces/EditorJSClass.html': {
      url: 'interfaces/EditorJSClass.html',
      title: 'interface - EditorJSClass',
      body:
        "\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  EditorJSClass\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            libs/ngx-editorjs/src/lib/types/injector.ts\n        \n\n            \n                Description\n            \n            \n                Interface for the injected EditorJS class, returns the static\nclass of EditorJS with the version and that creates the instance and provides\nthe Typescript parse with type information\n\n            \n\n            \n                Extends\n            \n            \n                        Function\n            \n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        version\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        version\n                                    \n                                \n                                \n                                    \n                                        version:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    EditorJS version\n\n                                \n                            \n                        \n                    \n            \n    \n\n\n    \n        import { InjectionToken } from '@angular/core';\nimport EditorJS, { EditorConfig, OutputData } from '@editorjs/editorjs';\nimport { Block } from './blocks';\n\n/**\n * Configuration for creating an EditorJS instance\n */\nexport interface EditorJSInstanceConfig {\n  /**\n   * The editor configuration, this is required with at least the `holder` property\n   */\n  editorConfig: EditorConfig;\n  /**\n   * The method to call when the editor makes a change\n   */\n  onChange?: (holder?: string) => void;\n\n  /**\n   * The method to call with an editor is ready\n   */\n  onReady?: (holder?: string) => void;\n}\n\n/**\n * Default values for each internal map\n */\nexport const MAP_DEFAULTS = [\n  ['lastChangeMap', { time: 0, blocks: [], version: EditorJS.version }],\n  ['isReadyMap', false],\n  ['hasSavedMap', false]\n];\n\n/**\n * Injection token for the EditorJS class\n */\nexport const EDITORJS_MODULE_IMPORT = new InjectionToken('EDITORJS_MODULE_IMPORT');\n\n/**\n * The EditorJS class injector\n */\nexport const EditorJSInstance = new InjectionToken('EditorJSInstance');\n\n/**\n * Options for a Injector method\n */\nexport interface InjectorMethodOption {\n  /**\n   * The holder for the option\n   */\n  holder: string;\n  /**\n   * Optional blocks\n   */\n  data?: OutputData;\n  /**\n   * Optional editor\n   */\n  editor?: EditorJS;\n  /**\n   * Don't call save\n   */\n  skipSave?: boolean;\n}\n\n/**\n * Options to pass when calling the EditorJS instance API\n */\nexport interface InjectorApiCallOptions {\n  /**\n   * Holder for the EditorJS instance\n   */\n  holder: string;\n\n  /**\n   * The method to call\n   */\n  method: string;\n  /**\n   * The optional namespace for the API call\n   */\n  namespace?: string;\n}\n\n/**\n * A response from the EditorJS api\n */\nexport interface InjectorApiCallResponse extends InjectorApiCallOptions {\n  result: T;\n}\n\n/**\n * Interface for the injected EditorJS class, returns the static\n * class of EditorJS with the version and that creates the instance and provides\n * the Typescript parse with type information\n */\nexport interface EditorJSClass extends Function {\n  new (...args: any[]): T;\n  /**\n   * EditorJS version\n   */\n  version: string;\n}\n\n    \n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"
    },
    'interfaces/EditorJSInstanceConfig.html': {
      url: 'interfaces/EditorJSInstanceConfig.html',
      title: 'interface - EditorJSInstanceConfig',
      body:
        "\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  EditorJSInstanceConfig\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            libs/ngx-editorjs/src/lib/types/injector.ts\n        \n\n            \n                Description\n            \n            \n                Configuration for creating an EditorJS instance\n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        editorConfig\n                                \n                                \n                                            Optional\n                                        onChange\n                                \n                                \n                                            Optional\n                                        onReady\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        editorConfig\n                                    \n                                \n                                \n                                    \n                                        editorConfig:     EditorConfig\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     EditorConfig\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    The editor configuration, this is required with at least the holder property\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        onChange\n                                    \n                                \n                                \n                                    \n                                        onChange:         function\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         function\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    The method to call when the editor makes a change\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        onReady\n                                    \n                                \n                                \n                                    \n                                        onReady:         function\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         function\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    The method to call with an editor is ready\n\n                                \n                            \n                        \n                    \n            \n    \n\n\n    \n        import { InjectionToken } from '@angular/core';\nimport EditorJS, { EditorConfig, OutputData } from '@editorjs/editorjs';\nimport { Block } from './blocks';\n\n/**\n * Configuration for creating an EditorJS instance\n */\nexport interface EditorJSInstanceConfig {\n  /**\n   * The editor configuration, this is required with at least the `holder` property\n   */\n  editorConfig: EditorConfig;\n  /**\n   * The method to call when the editor makes a change\n   */\n  onChange?: (holder?: string) => void;\n\n  /**\n   * The method to call with an editor is ready\n   */\n  onReady?: (holder?: string) => void;\n}\n\n/**\n * Default values for each internal map\n */\nexport const MAP_DEFAULTS = [\n  ['lastChangeMap', { time: 0, blocks: [], version: EditorJS.version }],\n  ['isReadyMap', false],\n  ['hasSavedMap', false]\n];\n\n/**\n * Injection token for the EditorJS class\n */\nexport const EDITORJS_MODULE_IMPORT = new InjectionToken('EDITORJS_MODULE_IMPORT');\n\n/**\n * The EditorJS class injector\n */\nexport const EditorJSInstance = new InjectionToken('EditorJSInstance');\n\n/**\n * Options for a Injector method\n */\nexport interface InjectorMethodOption {\n  /**\n   * The holder for the option\n   */\n  holder: string;\n  /**\n   * Optional blocks\n   */\n  data?: OutputData;\n  /**\n   * Optional editor\n   */\n  editor?: EditorJS;\n  /**\n   * Don't call save\n   */\n  skipSave?: boolean;\n}\n\n/**\n * Options to pass when calling the EditorJS instance API\n */\nexport interface InjectorApiCallOptions {\n  /**\n   * Holder for the EditorJS instance\n   */\n  holder: string;\n\n  /**\n   * The method to call\n   */\n  method: string;\n  /**\n   * The optional namespace for the API call\n   */\n  namespace?: string;\n}\n\n/**\n * A response from the EditorJS api\n */\nexport interface InjectorApiCallResponse extends InjectorApiCallOptions {\n  result: T;\n}\n\n/**\n * Interface for the injected EditorJS class, returns the static\n * class of EditorJS with the version and that creates the instance and provides\n * the Typescript parse with type information\n */\nexport interface EditorJSClass extends Function {\n  new (...args: any[]): T;\n  /**\n   * EditorJS version\n   */\n  version: string;\n}\n\n    \n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"
    },
    'interfaces/EditorJSMaterialForm.html': {
      url: 'interfaces/EditorJSMaterialForm.html',
      title: 'interface - EditorJSMaterialForm',
      body:
        "\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  EditorJSMaterialForm\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            libs/ngx-editorjs/src/lib/containers/editorjs-mat-field/editorjs-mat-field.component.ts\n        \n\n            \n                Description\n            \n            \n                Single interface for EditorJSMaterialForm\n\n            \n\n            \n                Extends\n            \n            \n                    MatFormFieldControl\n            \n\n\n\n\n    \n\n\n    \n        import { FocusMonitor } from '@angular/cdk/a11y';\nimport { coerceBooleanProperty } from '@angular/cdk/coercion';\nimport {\n  AfterContentInit,\n  ChangeDetectionStrategy,\n  ChangeDetectorRef,\n  Component,\n  DoCheck,\n  forwardRef,\n  HostBinding,\n  Input,\n  OnDestroy,\n  OnInit,\n  Optional,\n  Provider,\n  Self,\n  ViewChild\n} from '@angular/core';\nimport { NgControl } from '@angular/forms';\nimport { MatFormFieldControl } from '@angular/material/form-field';\nimport { Subject } from 'rxjs';\nimport { takeUntil } from 'rxjs/operators';\nimport { NgxEditorJSDirective } from '../../directives/ngx-editorjs.directive';\nimport { NgxEditorJSService } from '../../services/editorjs.service';\nimport { NgxEditorJSComponent } from '../editorjs/editorjs.component';\n\n/**\n * Provider for the EditorJS Material Field Component\n */\nexport const EDITORJS_MATERIAL_FIELD_CONTROL: Provider = {\n  provide: MatFormFieldControl,\n  useExisting: forwardRef(() => NgxEditorJSMatFieldComponent),\n  multi: true\n};\n\n/**\n * Single interface for EditorJSMaterialForm\n */\nexport interface EditorJSMaterialForm\n  extends MatFormFieldControl,\n    OnInit,\n    AfterContentInit,\n    OnDestroy,\n    DoCheck {\n}\n\n/**\n * This component provides a [Material](https://material.angular.io) compatible `` component.\n * It provides a full implementation of all the required properties of a Material component\n *\n * @example\n * \n *  \n * \n */\n@Component({\n  selector: 'ngx-editorjs-mat-field',\n  templateUrl: 'editorjs-mat-field.component.html',\n  styleUrls: [ 'editorjs-mat-field.component.scss' ],\n  providers: [ EDITORJS_MATERIAL_FIELD_CONTROL ],\n  changeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class NgxEditorJSMatFieldComponent extends NgxEditorJSComponent implements EditorJSMaterialForm {\n  /**\n   * Internal Static ID for Material for each editor instance\n   */\n  static nextId = 0;\n  /**\n   * Material state change subject\n   */\n  public stateChanges = new Subject();\n\n  /**\n   * Material control type\n   */\n  public controlType = 'ngx-editorjs-mat-field';\n\n  /**\n   * Material error state\n   */\n  public errorState = false;\n\n  /**\n   * Get the component value\n   */\n  get value(): any {\n    return this._value;\n  }\n\n  /**\n   * Set the component value\n   * @param value The value to set\n   */\n  @Input('value')\n  set value(value: any) {\n    this._value = value;\n    this.stateChanges.next();\n  }\n\n  /**\n   * Material placeholder value\n   */\n  private _placeholder: string;\n\n  /**\n   * Get the Material placeholder value\n   */\n  get placeholder() {\n    return this._placeholder;\n  }\n\n  /**\n   * Set the material Placeholder value\n   * @input placeholder The placeholder state to set\n   */\n  @Input('placeholder')\n  set placeholder(placeholder: string) {\n    this._placeholder = placeholder;\n    this.stateChanges.next();\n  }\n\n  /**\n   * Material focused state\n   */\n  private _focused: boolean;\n  /**\n   * Get the Material focused state\n   */\n  get focused() {\n    return this._focused;\n  }\n\n  /**\n   * Set the Material focused state\n   * @param focused The focused state to set\n   */\n  @Input('focused')\n  set focused(focused: boolean) {\n    this._focused = coerceBooleanProperty(focused);\n    if (this._focused) {\n      this.onTouch();\n    }\n    this.stateChanges.next();\n  }\n\n  /**\n   * Material Required Value\n   */\n  private _required = false;\n\n  /**\n   * Get the Material required state\n   */\n  get required() {\n    return this._required;\n  }\n\n  /**\n   * Set the Material requied state\n   * @param required The required state to set\n   */\n  @Input('required')\n  set required(required: boolean) {\n    this._required = coerceBooleanProperty(required);\n    this.stateChanges.next();\n  }\n\n  /**\n   * Material disabled state\n   */\n  private _disabled = false;\n\n  /**\n   * Get the Material disabled state\n   */\n  get disabled() {\n    return this._disabled;\n  }\n\n  /**\n   * Set the Material disabled state\n   * @param disabled The disabled state to set\n   */\n  @Input('disabled')\n  set disabled(disabled: boolean) {\n    this._disabled = coerceBooleanProperty(disabled);\n    this.stateChanges.next();\n  }\n\n  /**\n   * Material empty state\n   */\n  private _empty: boolean;\n  /**\n   * Get the Material empty state\n   */\n  public get empty() {\n    return this._empty;\n  }\n\n  /**\n   * Set the Material empty state\n   * @param empty The empty value\n   */\n  public set empty(empty: boolean) {\n    this._empty = empty;\n  }\n\n  /**\n   * Access to the underlying {NgxEditorJSDirective}\n   */\n  @ViewChild('editorInstance', { read: NgxEditorJSDirective, static: true })\n  public readonly editorInstance: NgxEditorJSDirective;\n\n  /**\n   * Host binding to the unique ID for this editor for material\n   */\n  @HostBinding()\n  id = `ngx-editorjs-mat-field-${ NgxEditorJSMatFieldComponent.nextId++ }`;\n\n  /**\n   * Gets if the Material label should float\n   */\n  @HostBinding('class.floating')\n  get shouldLabelFloat() {\n    return this.focused || !this.empty;\n  }\n\n  /**\n   * Host binding for ARIA label\n   */\n  @HostBinding('attr.aria-describedby') describedBy = '';\n\n  /**\n   *\n   * @param ids The IDs of the Material components\n   */\n  public setDescribedByIds(ids: string[]) {\n    this.describedBy = ids.join(' ');\n  }\n\n  /**\n   * Material on container click\n   * @param event The {MouseEvent} for the container click\n   */\n  public onContainerClick(event: MouseEvent) {\n    this.onTouch(event);\n    this.stateChanges.next();\n  }\n\n  /**\n   * Constructor for the Material field, as this extends the `NgxEditorJSComponent` component\n   * we call `super()` to get all the properties of that component\n   * @param editorService The NgxEditorJSService instance\n   * @param focusMonitor Focus monitor for the Material element\n   * @param changeDetection The Change detection ref\n   * @param ngControl The Angular control base class\n   */\n  constructor(\n    protected readonly editorService: NgxEditorJSService,\n    protected focusMonitor: FocusMonitor,\n    protected readonly changeDetection: ChangeDetectorRef,\n    @Optional() @Self() public ngControl: NgControl\n  ) {\n    super(editorService, focusMonitor, changeDetection);\n  }\n\n  /**\n   * Called on OnInit\n   */\n  // tslint:disable-next-line:use-lifecycle-interface\n  public ngOnInit(): void {\n    if (this.ngControl !== null) {\n      this.ngControl.valueAccessor = this;\n    }\n  }\n\n  /**\n   * Inside the AfterContentInit life-cycle we set up a listener for focus\n   * and trigger focus autosave subscribe and unsubscribe\n   */\n  // tslint:disable-next-line:use-lifecycle-interface\n  public ngAfterContentInit(): void {\n    this.setupServiceSubscriptions();\n    this.getFocusMonitor(this.editorInstance.element)\n      .pipe(takeUntil(this.onDestroy$))\n      .subscribe(focused => {\n        this.onTouch();\n        this.focused = focused;\n        this.stateChanges.next();\n      });\n  }\n\n  /**\n   * Set the error state based on the underlying control state\n   */\n  // tslint:disable-next-line:use-lifecycle-interface\n  ngDoCheck(): void {\n    if (this.ngControl) {\n      this.errorState = this.ngControl.invalid && this.ngControl.touched;\n      this.stateChanges.next();\n    }\n  }\n}\n\n    \n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"
    },
    'interfaces/EditorMap.html': {
      url: 'interfaces/EditorMap.html',
      title: 'interface - EditorMap',
      body:
        "\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  EditorMap\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            libs/ngx-editorjs/src/lib/types/maps.ts\n        \n\n            \n                Description\n            \n            \n                A map containing instances of BehaviorSubject\n\n            \n\n\n\n\n            \n    Indexable\n        \n            \n                \n                    \n                        [key: string]:    BehaviorSubject\n\n                    \n                \n                        \n                            \n                                Defined in libs/ngx-editorjs/src/lib/types/maps.ts:8\n                            \n                        \n                \n                    \n                        A map key containing BehaviorSubject\n\n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import EditorJS, { OutputData } from '@editorjs/editorjs';\nimport { BehaviorSubject } from 'rxjs';\nimport { Block } from './blocks';\n\n/**\n * A map containing instances of `BehaviorSubject`\n */\nexport interface EditorMap {\n  /**\n   * A map key containing `BehaviorSubject`\n   */\n  [key: string]: BehaviorSubject;\n}\n\n/**\n * A map containing `BehaviorSubject` values of the ready state of EditorJS\n */\nexport interface ReadyMap {\n  /**\n   * A map key containing a `BehaviorSubject`\n   */\n  [key: string]: BehaviorSubject;\n}\n\n/**\n * A map containing `BehaviorSubject` values of the save state of EditorJS\n */\nexport interface SavedMap {\n  /**\n   * A map key containing a `BehaviorSubject`\n   */\n  [key: string]: BehaviorSubject;\n}\n\n/**\n * An EditorJS change event\n */\nexport interface EditorJSChange {\n  /**\n   * Time of the change\n   */\n  time: number;\n  /**\n   * Blocks in the change\n   */\n  blocks: Block[];\n}\n\n/**\n * A map containing `BehaviorSubject` which is the last save from the EditorJS instance\n */\nexport interface ChangeMap {\n  /**\n   * A map key containing a `BehaviorSubject`\n   */\n  [key: string]: BehaviorSubject;\n}\n\n    \n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"
    },
    'classes/FixedHeader.html': {
      url: 'classes/FixedHeader.html',
      title: 'class - FixedHeader',
      body:
        "\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  FixedHeader\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            libs/ngx-editorjs-plugins/src/lib/plugins/header/header.module.ts\n        \n\n\n            \n                Extends\n            \n            \n                        Header\n            \n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                normalizeData\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(config: any)\n                    \n                \n                        \n                            \n                                Defined in libs/ngx-editorjs-plugins/src/lib/plugins/header/header.module.ts:8\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        config\n                                                  \n                                                        \n                                                                        any\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            normalizeData\n                        \n                        \n                    \n                \n            \n            \n                \nnormalizeData(data: any)\n                \n            \n\n\n            \n                \n                    Defined in libs/ngx-editorjs-plugins/src/lib/plugins/header/header.module.ts:18\n                \n            \n\n\n            \n                \n                    Fixed version of the function to normalize input data\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Default value\n                                    Description\n                                \n                            \n                            \n                                \n                                    data\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n                                    \n                                        {}\n                                    \n\n                                    \n                                        The data for the header\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        The new header data\n\n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { NgModule } from '@angular/core';\nimport { EDITOR_JS_TOOL_INJECTOR, PLUGIN_CONFIG, PluginTypes } from '../../types/plugins';\nimport Header from '@editorjs/header';\n\n\n//TODO: Remove once Header plugin has been fixed\n\nexport class FixedHeader extends Header {\n  constructor(config: any) {\n    super(config);\n  }\n\n  /**\n   * Fixed version of the function to normalize input data\n   * @param data The data for the header\n   * @returns The new header data\n   */\n  normalizeData(data: any = {}) {\n    const newData: any = {};\n    newData.text = data.text || '';\n    newData.level = parseInt(data.level, 10) || (this as any).defaultLevel.number;\n    return newData;\n  }\n}\n\n/**\n * A module that provides the default EditorJS header block tool.\n * See [the GitHub repo](https://github.com/editor-js/header) for API details\n */\n@NgModule({\n  providers: [\n    {\n      provide: EDITOR_JS_TOOL_INJECTOR,\n      useValue: FixedHeader,\n      multi: true\n    },\n    {\n      provide: PLUGIN_CONFIG,\n      useValue: {\n        key: 'header',\n        type: PluginTypes.Block,\n        pluginName: 'EditorJS Header'\n      },\n      multi: true\n    }\n  ]\n})\nexport class PluginHeaderModule {\n}\n\n    \n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"
    },
    'interfaces/Header.html': {
      url: 'interfaces/Header.html',
      title: 'interface - Header',
      body:
        "\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  Header\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            libs/ngx-editorjs/src/lib/types/blocks.ts\n        \n\n            \n                Description\n            \n            \n                Default data type for a header block\n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        level\n                                \n                                \n                                        text\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        level\n                                    \n                                \n                                \n                                    \n                                        level:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    The header level from 1-6\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        text\n                                    \n                                \n                                \n                                    \n                                        text:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    The header text\n\n                                \n                            \n                        \n                    \n            \n    \n\n\n    \n        export interface Block {\n  /**\n   * The EditorJS block type\n   */\n  type: string;\n\n  /**\n   * The data interface for the block type\n   */\n  data: T;\n\n  /**\n   * Additional properties on the type\n   */\n  [key: string]: any;\n}\n\n/**\n * Available list styles, supports `ordered` and `unordered`.\n * A custom string can also be added\n */\nexport type ListStyle = 'ordered' | 'unordered' | string;\n\n/**\n * Default data type for a list block\n */\nexport interface List {\n  /**\n   * The list style\n   */\n  style: ListStyle;\n  /**\n   * List items of type T\n   */\n  items: T[];\n}\n\n/**\n * The default list block is provided by the EditorJS list plugin\n */\nexport interface ListBlock extends Block> {\n  /**\n   * The EditorJS block type\n   */\n  type: 'list';\n}\n\n/**\n * Default data type for a paragraph block\n */\ninterface Paragraph {\n  /**\n   * The paragraph text\n   */\n  text: string;\n}\n\n/**\n * Interface for a paragraph block\n */\nexport interface ParagraphBlock extends Block {\n  /**\n   * The EditorJS block type\n   */\n  type: 'paragraph';\n}\n\n/**\n * Default data type for a header block\n */\ninterface Header {\n  /**\n   * The header text\n   */\n  text: string;\n  /**\n   * The header level from 1-6\n   */\n  level: number;\n}\n\n/**\n * Interface for a header block\n */\nexport interface HeaderBlock extends Block {\n  /**\n   * The EditorJS block type\n   */\n  type: 'header';\n}\n\n/**\n * Default data type for a header block\n */\nexport interface Image {\n  /**\n   * The image URL\n   */\n  url: string;\n  /**\n   * Optional image caption\n   */\n  caption?: string;\n  /**\n   * Optional border property\n   */\n  withBorder?: boolean;\n\n  /**\n   * Optional background property\n   */\n  withBackground?: boolean;\n\n  /**\n   * Optional stretch property\n   */\n  stretched?: boolean;\n}\n\n/**\n * Interface for a image block\n */\nexport interface ImageBlock extends Block {\n  /**\n   * The EditorJS block type\n   */\n  type: 'image';\n}\n\n/**\n * Type of all the basic block type\n */\nexport type BlockTypes = ParagraphBlock | HeaderBlock | ImageBlock | ListBlock | Block;\n\n    \n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"
    },
    'interfaces/HeaderBlock.html': {
      url: 'interfaces/HeaderBlock.html',
      title: 'interface - HeaderBlock',
      body:
        "\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  HeaderBlock\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            libs/ngx-editorjs/src/lib/types/blocks.ts\n        \n\n            \n                Description\n            \n            \n                Interface for a header block\n\n            \n\n            \n                Extends\n            \n            \n                        Block\n            \n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        type\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        type\n                                    \n                                \n                                \n                                    \n                                        type:     \n\n                                    \n                                \n\n\n\n\n\n\n\n                            \n                                \n                                    The EditorJS block type\n\n                                \n                            \n                        \n                    \n            \n    \n\n\n    \n        export interface Block {\n  /**\n   * The EditorJS block type\n   */\n  type: string;\n\n  /**\n   * The data interface for the block type\n   */\n  data: T;\n\n  /**\n   * Additional properties on the type\n   */\n  [key: string]: any;\n}\n\n/**\n * Available list styles, supports `ordered` and `unordered`.\n * A custom string can also be added\n */\nexport type ListStyle = 'ordered' | 'unordered' | string;\n\n/**\n * Default data type for a list block\n */\nexport interface List {\n  /**\n   * The list style\n   */\n  style: ListStyle;\n  /**\n   * List items of type T\n   */\n  items: T[];\n}\n\n/**\n * The default list block is provided by the EditorJS list plugin\n */\nexport interface ListBlock extends Block> {\n  /**\n   * The EditorJS block type\n   */\n  type: 'list';\n}\n\n/**\n * Default data type for a paragraph block\n */\ninterface Paragraph {\n  /**\n   * The paragraph text\n   */\n  text: string;\n}\n\n/**\n * Interface for a paragraph block\n */\nexport interface ParagraphBlock extends Block {\n  /**\n   * The EditorJS block type\n   */\n  type: 'paragraph';\n}\n\n/**\n * Default data type for a header block\n */\ninterface Header {\n  /**\n   * The header text\n   */\n  text: string;\n  /**\n   * The header level from 1-6\n   */\n  level: number;\n}\n\n/**\n * Interface for a header block\n */\nexport interface HeaderBlock extends Block {\n  /**\n   * The EditorJS block type\n   */\n  type: 'header';\n}\n\n/**\n * Default data type for a header block\n */\nexport interface Image {\n  /**\n   * The image URL\n   */\n  url: string;\n  /**\n   * Optional image caption\n   */\n  caption?: string;\n  /**\n   * Optional border property\n   */\n  withBorder?: boolean;\n\n  /**\n   * Optional background property\n   */\n  withBackground?: boolean;\n\n  /**\n   * Optional stretch property\n   */\n  stretched?: boolean;\n}\n\n/**\n * Interface for a image block\n */\nexport interface ImageBlock extends Block {\n  /**\n   * The EditorJS block type\n   */\n  type: 'image';\n}\n\n/**\n * Type of all the basic block type\n */\nexport type BlockTypes = ParagraphBlock | HeaderBlock | ImageBlock | ListBlock | Block;\n\n    \n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"
    },
    'interfaces/Image.html': {
      url: 'interfaces/Image.html',
      title: 'interface - Image',
      body:
        "\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  Image\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            libs/ngx-editorjs/src/lib/types/blocks.ts\n        \n\n            \n                Description\n            \n            \n                Default data type for a header block\n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                            Optional\n                                        caption\n                                \n                                \n                                            Optional\n                                        stretched\n                                \n                                \n                                        url\n                                \n                                \n                                            Optional\n                                        withBackground\n                                \n                                \n                                            Optional\n                                        withBorder\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        caption\n                                    \n                                \n                                \n                                    \n                                        caption:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    Optional image caption\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        stretched\n                                    \n                                \n                                \n                                    \n                                        stretched:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    Optional stretch property\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        url\n                                    \n                                \n                                \n                                    \n                                        url:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    The image URL\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        withBackground\n                                    \n                                \n                                \n                                    \n                                        withBackground:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    Optional background property\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        withBorder\n                                    \n                                \n                                \n                                    \n                                        withBorder:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    Optional border property\n\n                                \n                            \n                        \n                    \n            \n    \n\n\n    \n        export interface Block {\n  /**\n   * The EditorJS block type\n   */\n  type: string;\n\n  /**\n   * The data interface for the block type\n   */\n  data: T;\n\n  /**\n   * Additional properties on the type\n   */\n  [key: string]: any;\n}\n\n/**\n * Available list styles, supports `ordered` and `unordered`.\n * A custom string can also be added\n */\nexport type ListStyle = 'ordered' | 'unordered' | string;\n\n/**\n * Default data type for a list block\n */\nexport interface List {\n  /**\n   * The list style\n   */\n  style: ListStyle;\n  /**\n   * List items of type T\n   */\n  items: T[];\n}\n\n/**\n * The default list block is provided by the EditorJS list plugin\n */\nexport interface ListBlock extends Block> {\n  /**\n   * The EditorJS block type\n   */\n  type: 'list';\n}\n\n/**\n * Default data type for a paragraph block\n */\ninterface Paragraph {\n  /**\n   * The paragraph text\n   */\n  text: string;\n}\n\n/**\n * Interface for a paragraph block\n */\nexport interface ParagraphBlock extends Block {\n  /**\n   * The EditorJS block type\n   */\n  type: 'paragraph';\n}\n\n/**\n * Default data type for a header block\n */\ninterface Header {\n  /**\n   * The header text\n   */\n  text: string;\n  /**\n   * The header level from 1-6\n   */\n  level: number;\n}\n\n/**\n * Interface for a header block\n */\nexport interface HeaderBlock extends Block {\n  /**\n   * The EditorJS block type\n   */\n  type: 'header';\n}\n\n/**\n * Default data type for a header block\n */\nexport interface Image {\n  /**\n   * The image URL\n   */\n  url: string;\n  /**\n   * Optional image caption\n   */\n  caption?: string;\n  /**\n   * Optional border property\n   */\n  withBorder?: boolean;\n\n  /**\n   * Optional background property\n   */\n  withBackground?: boolean;\n\n  /**\n   * Optional stretch property\n   */\n  stretched?: boolean;\n}\n\n/**\n * Interface for a image block\n */\nexport interface ImageBlock extends Block {\n  /**\n   * The EditorJS block type\n   */\n  type: 'image';\n}\n\n/**\n * Type of all the basic block type\n */\nexport type BlockTypes = ParagraphBlock | HeaderBlock | ImageBlock | ListBlock | Block;\n\n    \n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"
    },
    'interfaces/ImageBlock.html': {
      url: 'interfaces/ImageBlock.html',
      title: 'interface - ImageBlock',
      body:
        "\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  ImageBlock\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            libs/ngx-editorjs/src/lib/types/blocks.ts\n        \n\n            \n                Description\n            \n            \n                Interface for a image block\n\n            \n\n            \n                Extends\n            \n            \n                        Block\n            \n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        type\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        type\n                                    \n                                \n                                \n                                    \n                                        type:     \n\n                                    \n                                \n\n\n\n\n\n\n\n                            \n                                \n                                    The EditorJS block type\n\n                                \n                            \n                        \n                    \n            \n    \n\n\n    \n        export interface Block {\n  /**\n   * The EditorJS block type\n   */\n  type: string;\n\n  /**\n   * The data interface for the block type\n   */\n  data: T;\n\n  /**\n   * Additional properties on the type\n   */\n  [key: string]: any;\n}\n\n/**\n * Available list styles, supports `ordered` and `unordered`.\n * A custom string can also be added\n */\nexport type ListStyle = 'ordered' | 'unordered' | string;\n\n/**\n * Default data type for a list block\n */\nexport interface List {\n  /**\n   * The list style\n   */\n  style: ListStyle;\n  /**\n   * List items of type T\n   */\n  items: T[];\n}\n\n/**\n * The default list block is provided by the EditorJS list plugin\n */\nexport interface ListBlock extends Block> {\n  /**\n   * The EditorJS block type\n   */\n  type: 'list';\n}\n\n/**\n * Default data type for a paragraph block\n */\ninterface Paragraph {\n  /**\n   * The paragraph text\n   */\n  text: string;\n}\n\n/**\n * Interface for a paragraph block\n */\nexport interface ParagraphBlock extends Block {\n  /**\n   * The EditorJS block type\n   */\n  type: 'paragraph';\n}\n\n/**\n * Default data type for a header block\n */\ninterface Header {\n  /**\n   * The header text\n   */\n  text: string;\n  /**\n   * The header level from 1-6\n   */\n  level: number;\n}\n\n/**\n * Interface for a header block\n */\nexport interface HeaderBlock extends Block {\n  /**\n   * The EditorJS block type\n   */\n  type: 'header';\n}\n\n/**\n * Default data type for a header block\n */\nexport interface Image {\n  /**\n   * The image URL\n   */\n  url: string;\n  /**\n   * Optional image caption\n   */\n  caption?: string;\n  /**\n   * Optional border property\n   */\n  withBorder?: boolean;\n\n  /**\n   * Optional background property\n   */\n  withBackground?: boolean;\n\n  /**\n   * Optional stretch property\n   */\n  stretched?: boolean;\n}\n\n/**\n * Interface for a image block\n */\nexport interface ImageBlock extends Block {\n  /**\n   * The EditorJS block type\n   */\n  type: 'image';\n}\n\n/**\n * Type of all the basic block type\n */\nexport type BlockTypes = ParagraphBlock | HeaderBlock | ImageBlock | ListBlock | Block;\n\n    \n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"
    },
    'interfaces/InjectorApiCallOptions.html': {
      url: 'interfaces/InjectorApiCallOptions.html',
      title: 'interface - InjectorApiCallOptions',
      body:
        "\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  InjectorApiCallOptions\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            libs/ngx-editorjs/src/lib/types/injector.ts\n        \n\n            \n                Description\n            \n            \n                Options to pass when calling the EditorJS instance API\n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        holder\n                                \n                                \n                                        method\n                                \n                                \n                                            Optional\n                                        namespace\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        holder\n                                    \n                                \n                                \n                                    \n                                        holder:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Holder for the EditorJS instance\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        method\n                                    \n                                \n                                \n                                    \n                                        method:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    The method to call\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        namespace\n                                    \n                                \n                                \n                                    \n                                        namespace:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    The optional namespace for the API call\n\n                                \n                            \n                        \n                    \n            \n    \n\n\n    \n        import { InjectionToken } from '@angular/core';\nimport EditorJS, { EditorConfig, OutputData } from '@editorjs/editorjs';\nimport { Block } from './blocks';\n\n/**\n * Configuration for creating an EditorJS instance\n */\nexport interface EditorJSInstanceConfig {\n  /**\n   * The editor configuration, this is required with at least the `holder` property\n   */\n  editorConfig: EditorConfig;\n  /**\n   * The method to call when the editor makes a change\n   */\n  onChange?: (holder?: string) => void;\n\n  /**\n   * The method to call with an editor is ready\n   */\n  onReady?: (holder?: string) => void;\n}\n\n/**\n * Default values for each internal map\n */\nexport const MAP_DEFAULTS = [\n  ['lastChangeMap', { time: 0, blocks: [], version: EditorJS.version }],\n  ['isReadyMap', false],\n  ['hasSavedMap', false]\n];\n\n/**\n * Injection token for the EditorJS class\n */\nexport const EDITORJS_MODULE_IMPORT = new InjectionToken('EDITORJS_MODULE_IMPORT');\n\n/**\n * The EditorJS class injector\n */\nexport const EditorJSInstance = new InjectionToken('EditorJSInstance');\n\n/**\n * Options for a Injector method\n */\nexport interface InjectorMethodOption {\n  /**\n   * The holder for the option\n   */\n  holder: string;\n  /**\n   * Optional blocks\n   */\n  data?: OutputData;\n  /**\n   * Optional editor\n   */\n  editor?: EditorJS;\n  /**\n   * Don't call save\n   */\n  skipSave?: boolean;\n}\n\n/**\n * Options to pass when calling the EditorJS instance API\n */\nexport interface InjectorApiCallOptions {\n  /**\n   * Holder for the EditorJS instance\n   */\n  holder: string;\n\n  /**\n   * The method to call\n   */\n  method: string;\n  /**\n   * The optional namespace for the API call\n   */\n  namespace?: string;\n}\n\n/**\n * A response from the EditorJS api\n */\nexport interface InjectorApiCallResponse extends InjectorApiCallOptions {\n  result: T;\n}\n\n/**\n * Interface for the injected EditorJS class, returns the static\n * class of EditorJS with the version and that creates the instance and provides\n * the Typescript parse with type information\n */\nexport interface EditorJSClass extends Function {\n  new (...args: any[]): T;\n  /**\n   * EditorJS version\n   */\n  version: string;\n}\n\n    \n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"
    },
    'interfaces/InjectorApiCallResponse.html': {
      url: 'interfaces/InjectorApiCallResponse.html',
      title: 'interface - InjectorApiCallResponse',
      body:
        "\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  InjectorApiCallResponse\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            libs/ngx-editorjs/src/lib/types/injector.ts\n        \n\n            \n                Description\n            \n            \n                A response from the EditorJS api\n\n            \n\n            \n                Extends\n            \n            \n                        InjectorApiCallOptions\n            \n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        result\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        result\n                                    \n                                \n                                \n                                    \n                                        result:     T\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     T\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { InjectionToken } from '@angular/core';\nimport EditorJS, { EditorConfig, OutputData } from '@editorjs/editorjs';\nimport { Block } from './blocks';\n\n/**\n * Configuration for creating an EditorJS instance\n */\nexport interface EditorJSInstanceConfig {\n  /**\n   * The editor configuration, this is required with at least the `holder` property\n   */\n  editorConfig: EditorConfig;\n  /**\n   * The method to call when the editor makes a change\n   */\n  onChange?: (holder?: string) => void;\n\n  /**\n   * The method to call with an editor is ready\n   */\n  onReady?: (holder?: string) => void;\n}\n\n/**\n * Default values for each internal map\n */\nexport const MAP_DEFAULTS = [\n  ['lastChangeMap', { time: 0, blocks: [], version: EditorJS.version }],\n  ['isReadyMap', false],\n  ['hasSavedMap', false]\n];\n\n/**\n * Injection token for the EditorJS class\n */\nexport const EDITORJS_MODULE_IMPORT = new InjectionToken('EDITORJS_MODULE_IMPORT');\n\n/**\n * The EditorJS class injector\n */\nexport const EditorJSInstance = new InjectionToken('EditorJSInstance');\n\n/**\n * Options for a Injector method\n */\nexport interface InjectorMethodOption {\n  /**\n   * The holder for the option\n   */\n  holder: string;\n  /**\n   * Optional blocks\n   */\n  data?: OutputData;\n  /**\n   * Optional editor\n   */\n  editor?: EditorJS;\n  /**\n   * Don't call save\n   */\n  skipSave?: boolean;\n}\n\n/**\n * Options to pass when calling the EditorJS instance API\n */\nexport interface InjectorApiCallOptions {\n  /**\n   * Holder for the EditorJS instance\n   */\n  holder: string;\n\n  /**\n   * The method to call\n   */\n  method: string;\n  /**\n   * The optional namespace for the API call\n   */\n  namespace?: string;\n}\n\n/**\n * A response from the EditorJS api\n */\nexport interface InjectorApiCallResponse extends InjectorApiCallOptions {\n  result: T;\n}\n\n/**\n * Interface for the injected EditorJS class, returns the static\n * class of EditorJS with the version and that creates the instance and provides\n * the Typescript parse with type information\n */\nexport interface EditorJSClass extends Function {\n  new (...args: any[]): T;\n  /**\n   * EditorJS version\n   */\n  version: string;\n}\n\n    \n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"
    },
    'interfaces/InjectorMethodOption.html': {
      url: 'interfaces/InjectorMethodOption.html',
      title: 'interface - InjectorMethodOption',
      body:
        "\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  InjectorMethodOption\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            libs/ngx-editorjs/src/lib/types/injector.ts\n        \n\n            \n                Description\n            \n            \n                Options for a Injector method\n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                            Optional\n                                        data\n                                \n                                \n                                            Optional\n                                        editor\n                                \n                                \n                                        holder\n                                \n                                \n                                            Optional\n                                        skipSave\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        data\n                                    \n                                \n                                \n                                    \n                                        data:     OutputData\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     OutputData\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    Optional blocks\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        editor\n                                    \n                                \n                                \n                                    \n                                        editor:     EditorJS\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     EditorJS\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    Optional editor\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        holder\n                                    \n                                \n                                \n                                    \n                                        holder:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    The holder for the option\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        skipSave\n                                    \n                                \n                                \n                                    \n                                        skipSave:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    Don't call save\n\n                                \n                            \n                        \n                    \n            \n    \n\n\n    \n        import { InjectionToken } from '@angular/core';\nimport EditorJS, { EditorConfig, OutputData } from '@editorjs/editorjs';\nimport { Block } from './blocks';\n\n/**\n * Configuration for creating an EditorJS instance\n */\nexport interface EditorJSInstanceConfig {\n  /**\n   * The editor configuration, this is required with at least the `holder` property\n   */\n  editorConfig: EditorConfig;\n  /**\n   * The method to call when the editor makes a change\n   */\n  onChange?: (holder?: string) => void;\n\n  /**\n   * The method to call with an editor is ready\n   */\n  onReady?: (holder?: string) => void;\n}\n\n/**\n * Default values for each internal map\n */\nexport const MAP_DEFAULTS = [\n  ['lastChangeMap', { time: 0, blocks: [], version: EditorJS.version }],\n  ['isReadyMap', false],\n  ['hasSavedMap', false]\n];\n\n/**\n * Injection token for the EditorJS class\n */\nexport const EDITORJS_MODULE_IMPORT = new InjectionToken('EDITORJS_MODULE_IMPORT');\n\n/**\n * The EditorJS class injector\n */\nexport const EditorJSInstance = new InjectionToken('EditorJSInstance');\n\n/**\n * Options for a Injector method\n */\nexport interface InjectorMethodOption {\n  /**\n   * The holder for the option\n   */\n  holder: string;\n  /**\n   * Optional blocks\n   */\n  data?: OutputData;\n  /**\n   * Optional editor\n   */\n  editor?: EditorJS;\n  /**\n   * Don't call save\n   */\n  skipSave?: boolean;\n}\n\n/**\n * Options to pass when calling the EditorJS instance API\n */\nexport interface InjectorApiCallOptions {\n  /**\n   * Holder for the EditorJS instance\n   */\n  holder: string;\n\n  /**\n   * The method to call\n   */\n  method: string;\n  /**\n   * The optional namespace for the API call\n   */\n  namespace?: string;\n}\n\n/**\n * A response from the EditorJS api\n */\nexport interface InjectorApiCallResponse extends InjectorApiCallOptions {\n  result: T;\n}\n\n/**\n * Interface for the injected EditorJS class, returns the static\n * class of EditorJS with the version and that creates the instance and provides\n * the Typescript parse with type information\n */\nexport interface EditorJSClass extends Function {\n  new (...args: any[]): T;\n  /**\n   * EditorJS version\n   */\n  version: string;\n}\n\n    \n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"
    },
    'interfaces/List.html': {
      url: 'interfaces/List.html',
      title: 'interface - List',
      body:
        "\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  List\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            libs/ngx-editorjs/src/lib/types/blocks.ts\n        \n\n            \n                Description\n            \n            \n                Default data type for a list block\n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        items\n                                \n                                \n                                        style\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        items\n                                    \n                                \n                                \n                                    \n                                        items:     T[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     T[]\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    List items of type T\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        style\n                                    \n                                \n                                \n                                    \n                                        style:         ListStyle\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         ListStyle\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    The list style\n\n                                \n                            \n                        \n                    \n            \n    \n\n\n    \n        export interface Block {\n  /**\n   * The EditorJS block type\n   */\n  type: string;\n\n  /**\n   * The data interface for the block type\n   */\n  data: T;\n\n  /**\n   * Additional properties on the type\n   */\n  [key: string]: any;\n}\n\n/**\n * Available list styles, supports `ordered` and `unordered`.\n * A custom string can also be added\n */\nexport type ListStyle = 'ordered' | 'unordered' | string;\n\n/**\n * Default data type for a list block\n */\nexport interface List {\n  /**\n   * The list style\n   */\n  style: ListStyle;\n  /**\n   * List items of type T\n   */\n  items: T[];\n}\n\n/**\n * The default list block is provided by the EditorJS list plugin\n */\nexport interface ListBlock extends Block> {\n  /**\n   * The EditorJS block type\n   */\n  type: 'list';\n}\n\n/**\n * Default data type for a paragraph block\n */\ninterface Paragraph {\n  /**\n   * The paragraph text\n   */\n  text: string;\n}\n\n/**\n * Interface for a paragraph block\n */\nexport interface ParagraphBlock extends Block {\n  /**\n   * The EditorJS block type\n   */\n  type: 'paragraph';\n}\n\n/**\n * Default data type for a header block\n */\ninterface Header {\n  /**\n   * The header text\n   */\n  text: string;\n  /**\n   * The header level from 1-6\n   */\n  level: number;\n}\n\n/**\n * Interface for a header block\n */\nexport interface HeaderBlock extends Block {\n  /**\n   * The EditorJS block type\n   */\n  type: 'header';\n}\n\n/**\n * Default data type for a header block\n */\nexport interface Image {\n  /**\n   * The image URL\n   */\n  url: string;\n  /**\n   * Optional image caption\n   */\n  caption?: string;\n  /**\n   * Optional border property\n   */\n  withBorder?: boolean;\n\n  /**\n   * Optional background property\n   */\n  withBackground?: boolean;\n\n  /**\n   * Optional stretch property\n   */\n  stretched?: boolean;\n}\n\n/**\n * Interface for a image block\n */\nexport interface ImageBlock extends Block {\n  /**\n   * The EditorJS block type\n   */\n  type: 'image';\n}\n\n/**\n * Type of all the basic block type\n */\nexport type BlockTypes = ParagraphBlock | HeaderBlock | ImageBlock | ListBlock | Block;\n\n    \n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"
    },
    'interfaces/ListBlock.html': {
      url: 'interfaces/ListBlock.html',
      title: 'interface - ListBlock',
      body:
        "\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  ListBlock\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            libs/ngx-editorjs/src/lib/types/blocks.ts\n        \n\n            \n                Description\n            \n            \n                The default list block is provided by the EditorJS list plugin\n\n            \n\n            \n                Extends\n            \n            \n                        Block\n            \n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        type\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        type\n                                    \n                                \n                                \n                                    \n                                        type:     \n\n                                    \n                                \n\n\n\n\n\n\n\n                            \n                                \n                                    The EditorJS block type\n\n                                \n                            \n                        \n                    \n            \n    \n\n\n    \n        export interface Block {\n  /**\n   * The EditorJS block type\n   */\n  type: string;\n\n  /**\n   * The data interface for the block type\n   */\n  data: T;\n\n  /**\n   * Additional properties on the type\n   */\n  [key: string]: any;\n}\n\n/**\n * Available list styles, supports `ordered` and `unordered`.\n * A custom string can also be added\n */\nexport type ListStyle = 'ordered' | 'unordered' | string;\n\n/**\n * Default data type for a list block\n */\nexport interface List {\n  /**\n   * The list style\n   */\n  style: ListStyle;\n  /**\n   * List items of type T\n   */\n  items: T[];\n}\n\n/**\n * The default list block is provided by the EditorJS list plugin\n */\nexport interface ListBlock extends Block> {\n  /**\n   * The EditorJS block type\n   */\n  type: 'list';\n}\n\n/**\n * Default data type for a paragraph block\n */\ninterface Paragraph {\n  /**\n   * The paragraph text\n   */\n  text: string;\n}\n\n/**\n * Interface for a paragraph block\n */\nexport interface ParagraphBlock extends Block {\n  /**\n   * The EditorJS block type\n   */\n  type: 'paragraph';\n}\n\n/**\n * Default data type for a header block\n */\ninterface Header {\n  /**\n   * The header text\n   */\n  text: string;\n  /**\n   * The header level from 1-6\n   */\n  level: number;\n}\n\n/**\n * Interface for a header block\n */\nexport interface HeaderBlock extends Block {\n  /**\n   * The EditorJS block type\n   */\n  type: 'header';\n}\n\n/**\n * Default data type for a header block\n */\nexport interface Image {\n  /**\n   * The image URL\n   */\n  url: string;\n  /**\n   * Optional image caption\n   */\n  caption?: string;\n  /**\n   * Optional border property\n   */\n  withBorder?: boolean;\n\n  /**\n   * Optional background property\n   */\n  withBackground?: boolean;\n\n  /**\n   * Optional stretch property\n   */\n  stretched?: boolean;\n}\n\n/**\n * Interface for a image block\n */\nexport interface ImageBlock extends Block {\n  /**\n   * The EditorJS block type\n   */\n  type: 'image';\n}\n\n/**\n * Type of all the basic block type\n */\nexport type BlockTypes = ParagraphBlock | HeaderBlock | ImageBlock | ListBlock | Block;\n\n    \n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"
    },
    'interfaces/NgxEditorJSConfig.html': {
      url: 'interfaces/NgxEditorJSConfig.html',
      title: 'interface - NgxEditorJSConfig',
      body:
        "\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  NgxEditorJSConfig\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            libs/ngx-editorjs/src/lib/types/config.ts\n        \n\n            \n                Description\n            \n            \n                Configuration for the EditorJS instance\n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                            Optional\n                                        autofocus\n                                \n                                \n                                            Optional\n                                        blockPlaceholder\n                                \n                                \n                                            Optional\n                                        data\n                                \n                                \n                                            Optional\n                                        hideToolbar\n                                \n                                \n                                            Optional\n                                        holder\n                                \n                                \n                                            Optional\n                                        initialBlock\n                                \n                                \n                                            Optional\n                                        minHeight\n                                \n                                \n                                            Optional\n                                        sanitizer\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        autofocus\n                                    \n                                \n                                \n                                    \n                                        autofocus:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    If the EditorJS is autofocused on creation (default: false)\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        blockPlaceholder\n                                    \n                                \n                                \n                                    \n                                        blockPlaceholder:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    First Block placeholder\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        data\n                                    \n                                \n                                \n                                    \n                                        data:     OutputData\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     OutputData\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    Any initial output data to render\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        hideToolbar\n                                    \n                                \n                                \n                                    \n                                        hideToolbar:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    If true, toolbar won't be shown\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        holder\n                                    \n                                \n                                \n                                    \n                                        holder:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    ID of the element to hold the config\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        initialBlock\n                                    \n                                \n                                \n                                    \n                                        initialBlock:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    The name of the initial block (default \"paragraph\")\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        minHeight\n                                    \n                                \n                                \n                                    \n                                        minHeight:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    Height of Editor's bottom area that allows to set focus on the last Block\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        sanitizer\n                                    \n                                \n                                \n                                    \n                                        sanitizer:     SanitizerConfig\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     SanitizerConfig\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    Define default sanitizer configuration\n\n                                \n                            \n                        \n                    \n            \n    \n\n\n    \n        import { InjectionToken } from '@angular/core';\nimport EditorJS, { OutputData, SanitizerConfig, EditorConfig } from '@editorjs/editorjs';\n\n/**\n * Configuration for the EditorJS instance\n */\nexport interface NgxEditorJSConfig {\n  /**\n   * If the EditorJS is autofocused on creation (default: false)\n   */\n  autofocus?: boolean;\n\n  /**\n   * Any initial output data to render\n   */\n  data?: OutputData;\n\n  /**\n   * If true, toolbar won't be shown\n   */\n  hideToolbar?: boolean;\n\n  /**\n   * ID of the element to hold the config\n   */\n  holder?: string;\n\n  /**\n   * The name of the initial block (default \"paragraph\")\n   */\n  initialBlock?: string;\n\n  /**\n   * Height of Editor's bottom area that allows to set focus on the last Block\n   */\n  minHeight?: number;\n\n  /**\n   * First Block placeholder\n   */\n  blockPlaceholder?: string;\n\n  /**\n   * Define default sanitizer configuration\n   */\n  sanitizer?: SanitizerConfig;\n}\n\n/**\n * The configuration option that can be passed to the `NgxEditorJSModule.forRoot` method\n */\nexport interface NgxEditorJSModuleConfig {\n  /**\n   * Configuration options for EditorJS\n   */\n  editorjs?: EditorConfig;\n}\n\n/**\n * Injection token provied for `NgxEditorJSConfig`\n */\nexport const NGX_EDITORJS_CONFIG = new InjectionToken('NGX_EDITORJS_CONFIG');\n\n/**\n * Internal token for injecting the `NgxEditorJSConfig` into the config factory\n */\nexport const FOR_ROOT_OPTIONS_TOKEN = new InjectionToken('FOR_ROOT_OPTIONS_TOKEN');\n\n/**\n * Get the EditorJS instance injected into the app\n */\nexport const EDITIOR_JS_INSTANCE = new InjectionToken('EDITIOR_JS_INSTANCE');\n\n    \n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"
    },
    'directives/NgxEditorJSDirective.html': {
      url: 'directives/NgxEditorJSDirective.html',
      title: 'directive - NgxEditorJSDirective',
      body:
        "\n                   \n\n\n\n\n\n\n\n  Directives\n  NgxEditorJSDirective\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            libs/ngx-editorjs/src/lib/directives/ngx-editorjs.directive.ts\n        \n\n            \n                Description\n            \n            \n                The main directive of ngx-editorjs provides a way to attach\nan EditorJS instance to any element and control it via\nAngular services and components\nTo use attach to any element with an id property\n\n            \n\n            \n                Implements\n            \n            \n                            OnDestroy\n                            OnChanges\n                            AfterContentInit\n            \n\n            \n                Example\n            \n            \n                        \n                            \n                        \n            \n\n        \n            Metadata\n            \n                \n\n                    \n                        Selector\n                        [ngxEditorJS]\n                    \n\n                \n            \n        \n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                    Async\n                                createEditor\n                            \n                            \n                                    Async\n                                ngAfterContentInit\n                            \n                            \n                                    Async\n                                ngOnChanges\n                            \n                            \n                                ngOnDestroy\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                autofocus\n                            \n                            \n                                autosave\n                            \n                            \n                                blockPlaceholder\n                            \n                            \n                                blocks\n                            \n                            \n                                excludeTools\n                            \n                            \n                                hideToolbar\n                            \n                            \n                                holder\n                            \n                            \n                                initialBlock\n                            \n                            \n                                minHeight\n                            \n                            \n                                sanitizer\n                            \n                        \n                    \n                \n\n                \n                    \n                        Outputs\n                    \n                \n                \n                    \n                        \n                            \n                                hasChanged\n                            \n                            \n                                hasSaved\n                            \n                            \n                                isFocused\n                            \n                            \n                                isReady\n                            \n                            \n                                isTouched\n                            \n                        \n                    \n                \n\n\n                \n                    \n                        HostListeners\n                    \n                \n                \n                    \n                        \n                            \n                                click\n                            \n                        \n                    \n                \n\n                    \n                        \n                            Accessors\n                        \n                    \n                    \n                        \n                            \n                                \n                                    editor\n                                \n                                \n                                    element\n                                \n                                \n                                    service\n                                \n                                \n                                    touched\n                                \n                            \n                        \n                    \n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(el: ElementRef, editorService: NgxEditorJSService, cd: ChangeDetectorRef)\n                    \n                \n                        \n                            \n                                Defined in libs/ngx-editorjs/src/lib/directives/ngx-editorjs.directive.ts:152\n                            \n                        \n\n                \n                    \n                            Creates the directive instance\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        el\n                                                  \n                                                        \n                                                                        ElementRef\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                The element the directive is attached to\n\n                                                        \n                                                \n                                                \n                                                        editorService\n                                                  \n                                                        \n                                                                        NgxEditorJSService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                The editor service\n\n                                                        \n                                                \n                                                \n                                                        cd\n                                                  \n                                                        \n                                                                        ChangeDetectorRef\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    Inputs\n        \n            \n                \n                    \n                        \n                        autofocus\n                    \n                \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                        \n                            \n                                    Defined in libs/ngx-editorjs/src/lib/directives/ngx-editorjs.directive.ts:53\n                            \n                        \n                \n                    \n                        Boolean, If set to true the EditorJS instance gets autofocus when initialized\n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        autosave\n                    \n                \n                \n                    \n                        Type :         number\n\n                    \n                \n                        \n                            \n                                    Defined in libs/ngx-editorjs/src/lib/directives/ngx-editorjs.directive.ts:106\n                            \n                        \n                \n                    \n                        Number, Used with Angular Forms this sets an autosave timer active that calls the EditorJS save\nmethod. This patches the FormControl value with every block change and focus and blur, it also autosaves after\na set time\nSet to 0 to disable or pass a value in ms of the autosave time\n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        blockPlaceholder\n                    \n                \n                \n                    \n                        Type :         string\n\n                    \n                \n                        \n                            \n                                    Defined in libs/ngx-editorjs/src/lib/directives/ngx-editorjs.directive.ts:84\n                            \n                        \n                \n                    \n                        String, The text to display as the placeholder text in the first block before content is added\n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        blocks\n                    \n                \n                \n                    \n                        Type :         Block[]\n\n                    \n                \n                        \n                            \n                                    Defined in libs/ngx-editorjs/src/lib/directives/ngx-editorjs.directive.ts:112\n                            \n                        \n                \n                    \n                        Blocks, An initial set of block data to render inside the component\n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        excludeTools\n                    \n                \n                \n                    \n                        Type :     string[]\n\n                    \n                \n                \n                    \n                        Default value : []\n                    \n                \n                        \n                            \n                                    Defined in libs/ngx-editorjs/src/lib/directives/ngx-editorjs.directive.ts:97\n                            \n                        \n                \n                    \n                        String Array, If empty all tools available via the plugin service will be added.  If a string\narray is set only the tools with the provided keys will be added\n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        hideToolbar\n                    \n                \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                        \n                            \n                                    Defined in libs/ngx-editorjs/src/lib/directives/ngx-editorjs.directive.ts:59\n                            \n                        \n                \n                    \n                        Boolean, If set to true the toolbar will not show in the EditorJS instance\n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        holder\n                    \n                \n                \n                    \n                        Type :         string\n\n                    \n                \n                        \n                            \n                                    Defined in libs/ngx-editorjs/src/lib/directives/ngx-editorjs.directive.ts:65\n                            \n                        \n                \n                    \n                        String, the ID property of the element that the EditorJS instance will be attached to\n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        initialBlock\n                    \n                \n                \n                    \n                        Type :         string\n\n                    \n                \n                        \n                            \n                                    Defined in libs/ngx-editorjs/src/lib/directives/ngx-editorjs.directive.ts:72\n                            \n                        \n                \n                    \n                        String, The type of block to set as the initial block type. This needs to match a name in the UserPlugins object.\nThe default value is \"paragraph\"\n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        minHeight\n                    \n                \n                \n                    \n                        Type :         number\n\n                    \n                \n                        \n                            \n                                    Defined in libs/ngx-editorjs/src/lib/directives/ngx-editorjs.directive.ts:78\n                            \n                        \n                \n                    \n                        Number, The minimum height of the EditorJS instance bottom after the last block\n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        sanitizer\n                    \n                \n                \n                    \n                        Type :     SanitizerConfig\n\n                    \n                \n                        \n                            \n                                    Defined in libs/ngx-editorjs/src/lib/directives/ngx-editorjs.directive.ts:90\n                            \n                        \n                \n                    \n                        SanitizerConfig, The configuration for the HTML sanitizer\n\n                    \n                \n            \n        \n\n            \n    Outputs\n        \n            \n                \n                    \n                        \n                        hasChanged\n                    \n                \n                \n                    \n                        Type :         EventEmitter\n\n                    \n                \n                        \n                            \n                                    Defined in libs/ngx-editorjs/src/lib/directives/ngx-editorjs.directive.ts:136\n                            \n                        \n                \n                    \n                        Emits if the EditorJS content has changed when save is called\n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        hasSaved\n                    \n                \n                \n                    \n                        Type :         EventEmitter\n\n                    \n                \n                        \n                            \n                                    Defined in libs/ngx-editorjs/src/lib/directives/ngx-editorjs.directive.ts:118\n                            \n                        \n                \n                    \n                        Emits if the content from the EditorJS instance has been saved to the component value\n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        isFocused\n                    \n                \n                \n                    \n                        Type :         EventEmitter\n\n                    \n                \n                        \n                            \n                                    Defined in libs/ngx-editorjs/src/lib/directives/ngx-editorjs.directive.ts:130\n                            \n                        \n                \n                    \n                        Emits if the component is focused\n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        isReady\n                    \n                \n                \n                    \n                        Type :         EventEmitter\n\n                    \n                \n                        \n                            \n                                    Defined in libs/ngx-editorjs/src/lib/directives/ngx-editorjs.directive.ts:142\n                            \n                        \n                \n                    \n                        Emits if the EditorJS component is ready\n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        isTouched\n                    \n                \n                \n                    \n                        Type :         EventEmitter\n\n                    \n                \n                        \n                            \n                                    Defined in libs/ngx-editorjs/src/lib/directives/ngx-editorjs.directive.ts:124\n                            \n                        \n                \n                    \n                        Emits if the component has been touched\n\n                    \n                \n            \n        \n\n\n            \n    HostListeners    \n        \n            \n                \n                    \n                    \n                        \n                            click\n                        \n                        \n                    \n                \n            \n            \n                \nclick()\n                \n            \n\n\n            \n                \n                    Defined in libs/ngx-editorjs/src/lib/directives/ngx-editorjs.directive.ts:148\n                \n            \n\n\n            \n                \n                    Host click listener\n\n\n                \n            \n        \n    \n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            Async\n                            createEditor\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    createEditor(config?: EditorConfig, excludeTools: [])\n                \n            \n\n\n            \n                \n                    Defined in libs/ngx-editorjs/src/lib/directives/ngx-editorjs.directive.ts:198\n                \n            \n\n\n            \n                \n                    Creates an EditorJS instance for this directive\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Default value\n                                    Description\n                                \n                            \n                            \n                                \n                                    config\n                                    \n                                            EditorConfig\n                                    \n\n                                    \n                                        Yes\n                                    \n\n                                    \n                                    \n\n                                    \n                                        Configuration for this instance\n\n                                    \n                                \n                                \n                                    excludeTools\n                                    \n                                            []\n                                    \n\n                                    \n                                        No\n                                    \n\n                                    \n                                        []\n                                    \n\n                                    \n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            ngAfterContentInit\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    ngAfterContentInit()\n                \n            \n\n\n            \n                \n                    Defined in libs/ngx-editorjs/src/lib/directives/ngx-editorjs.directive.ts:252\n                \n            \n\n\n            \n                \n                    After content is created, we create the editor instance and set up listners\n\n\n                    \n                        Returns :         any\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            ngOnChanges\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    ngOnChanges(changes: SimpleChanges)\n                \n            \n\n\n            \n                \n                    Defined in libs/ngx-editorjs/src/lib/directives/ngx-editorjs.directive.ts:215\n                \n            \n\n\n            \n                \n                    When ngOnChanges are called, there are two paths\nIf it's just blocks, then the service is updated with the blocks\nIf it's any other property it means we create a new editor, as this\nis a destructive process we also need to wait for an existing editor\nto be ready\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    changes\n                                    \n                                                SimpleChanges\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        Changes on the component\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngOnDestroy\n                        \n                        \n                    \n                \n            \n            \n                \nngOnDestroy()\n                \n            \n\n\n            \n                \n                    Defined in libs/ngx-editorjs/src/lib/directives/ngx-editorjs.directive.ts:285\n                \n            \n\n\n            \n                \n                    Destroy the editor and subjects for this service\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n\n            \n    \n        Accessors\n    \n        \n            \n                \n                    \n                        \n                        editor\n                    \n                \n\n                \n                    \n                        geteditor()\n                    \n                \n                            \n                                \n                                    Defined in libs/ngx-editorjs/src/lib/directives/ngx-editorjs.directive.ts:168\n                                \n                            \n                    \n                        \n                                Get the EditorJS instance for this directive\n\n\n                                \n                                    Returns :     Observable\n\n                                \n                        \n                    \n\n            \n        \n        \n            \n                \n                    \n                        \n                        element\n                    \n                \n\n                \n                    \n                        getelement()\n                    \n                \n                            \n                                \n                                    Defined in libs/ngx-editorjs/src/lib/directives/ngx-editorjs.directive.ts:175\n                                \n                            \n                    \n                        \n                                Get the element for the directive\n\n\n                        \n                    \n\n            \n        \n        \n            \n                \n                    \n                        \n                        service\n                    \n                \n\n                \n                    \n                        getservice()\n                    \n                \n                            \n                                \n                                    Defined in libs/ngx-editorjs/src/lib/directives/ngx-editorjs.directive.ts:182\n                                \n                            \n                    \n                        \n                                Get the NgxEditorJSService for this directive\n\n\n                                \n                                    Returns :         NgxEditorJSService\n\n                                \n                        \n                    \n\n            \n        \n        \n            \n                \n                    \n                        \n                        touched\n                    \n                \n\n                \n                    \n                        gettouched()\n                    \n                \n                            \n                                \n                                    Defined in libs/ngx-editorjs/src/lib/directives/ngx-editorjs.directive.ts:189\n                                \n                            \n                    \n                        \n                                Get the touched state\n\n\n                        \n                    \n\n            \n        \n\n\n    \n\n\n    \n        import {\n  AfterContentInit,\n  ChangeDetectorRef,\n  Directive,\n  ElementRef,\n  EventEmitter,\n  HostListener,\n  Input,\n  OnChanges,\n  OnDestroy,\n  Output,\n  SimpleChanges\n} from '@angular/core';\nimport EditorJS, { EditorConfig, OutputData, SanitizerConfig } from '@editorjs/editorjs';\nimport { BehaviorSubject, Observable, Subject } from 'rxjs';\nimport { takeUntil } from 'rxjs/operators';\nimport { createEditorJSConfig } from '../config/editor-config';\nimport { NgxEditorJSService } from '../services/editorjs.service';\nimport { Block } from '../types/blocks';\n\n/**\n * The main directive of `ngx-editorjs` provides a way to attach\n * an EditorJS instance to any element and control it via\n * Angular services and components\n *\n * To use attach to any element with an `id` property\n *\n * @example\n * \n */\n@Directive({\n  selector: '[ngxEditorJS]'\n})\nexport class NgxEditorJSDirective implements OnDestroy, OnChanges, AfterContentInit {\n  /**\n   * On Destroyed subject\n   */\n  private readonly onDestroy$ = new Subject();\n  /**\n   * Form touched state\n   */\n  private touched$ = new BehaviorSubject(false);\n\n  /**\n   * The DOM element ID, it will use the Directive DOM element ID or falls back to the provided `holder` property\n   */\n  private id: string;\n\n  /**\n   * Boolean, If set to true the EditorJS instance gets autofocus when initialized\n   */\n  @Input()\n  public autofocus: boolean;\n\n  /**\n   * Boolean, If set to true the toolbar will not show in the EditorJS instance\n   */\n  @Input()\n  public hideToolbar: boolean;\n\n  /**\n   * String, the ID property of the element that the EditorJS instance will be attached to\n   */\n  @Input()\n  public holder: string;\n\n  /**\n   * String, The type of block to set as the initial block type. This needs to match a name in the `UserPlugins` object.\n   * The default value is \"paragraph\"\n   */\n  @Input()\n  public initialBlock?: string;\n\n  /**\n   * Number, The minimum height of the EditorJS instance bottom after the last block\n   */\n  @Input()\n  public minHeight: number;\n\n  /**\n   * String, The text to display as the placeholder text in the first block before content is added\n   */\n  @Input()\n  public blockPlaceholder: string;\n\n  /**\n   * SanitizerConfig, The configuration for the HTML sanitizer\n   */\n  @Input()\n  public sanitizer: SanitizerConfig;\n\n  /**\n   * String Array, If empty all tools available via the plugin service will be added.  If a string\n   * array is set only the tools with the provided keys will be added\n   */\n  @Input()\n  public excludeTools: string[] = [];\n\n  /**\n   * Number, Used with Angular Forms this sets an autosave timer active that calls the EditorJS save\n   * method. This patches the `FormControl` value with every block change and focus and blur, it also autosaves after\n   * a set time\n   * Set to 0 to disable or pass a value in `ms` of the autosave time\n   */\n  @Input()\n  public autosave: number;\n\n  /**\n   * Blocks, An initial set of block data to render inside the component\n   */\n  @Input()\n  public blocks: Block[];\n\n  /**\n   * Emits if the content from the EditorJS instance has been saved to the component value\n   */\n  @Output()\n  public hasSaved = new EventEmitter();\n\n  /**\n   * Emits if the component has been touched\n   */\n  @Output()\n  public isTouched = new EventEmitter();\n\n  /**\n   * Emits if the component is focused\n   */\n  @Output()\n  public isFocused = new EventEmitter();\n\n  /**\n   * Emits if the EditorJS content has changed when `save` is called\n   */\n  @Output()\n  public hasChanged = new EventEmitter();\n\n  /**\n   * Emits if the EditorJS component is ready\n   */\n  @Output()\n  public isReady = new EventEmitter();\n\n  /**\n   * Host click listener\n   */\n  @HostListener('click')\n  onclick() {\n    this.touched$.next(true);\n    this.isTouched.emit(true);\n    this.cd.markForCheck();\n  }\n\n  /**\n   * Creates the directive instance\n   * @param el The element the directive is attached to\n   * @param editorService The editor service\n   */\n  constructor(\n    protected readonly el: ElementRef,\n    protected readonly editorService: NgxEditorJSService,\n    protected readonly cd: ChangeDetectorRef\n  ) {}\n\n  /**\n   * Get the EditorJS instance for this directive\n   */\n  public get editor(): Observable {\n    return this.service.getEditor({ holder: this.id });\n  }\n\n  /**\n   * Get the element for the directive\n   */\n  public get element() {\n    return this.el.nativeElement;\n  }\n\n  /**\n   * Get the `NgxEditorJSService` for this directive\n   */\n  public get service(): NgxEditorJSService {\n    return this.editorService;\n  }\n\n  /**\n   * Get the touched state\n   */\n  public get touched() {\n    return this.touched$.asObservable();\n  }\n\n  /**\n   * Creates an EditorJS instance for this directive\n   * @param config Configuration for this instance\n   * @param excludeTools\n   */\n  public async createEditor(config?: EditorConfig, excludeTools = []): Promise {\n    await this.service.createInstance({\n      config,\n      excludeTools: this.excludeTools || excludeTools,\n      autoSave: this.autosave || 0\n    });\n    this.cd.markForCheck();\n  }\n\n  /**\n   * When ngOnChanges are called, there are two paths\n   * If it's just blocks, then the service is updated with the blocks\n   * If it's any other property it means we create a new editor, as this\n   * is a destructive process we also need to wait for an existing editor\n   * to be ready\n   * @param changes Changes on the component\n   */\n  async ngOnChanges(changes: SimpleChanges): Promise {\n    if (\n      changes.blocks &&\n      changes.blocks.previousValue !== null &&\n      !changes.blocks.firstChange &&\n      JSON.stringify(changes.blocks.previousValue) !== JSON.stringify(changes.blocks.currentValue)\n    ) {\n      this.service.update({ holder: this.holder }).subscribe();\n      this.cd.markForCheck();\n    } else {\n      const changesKeys = Object.keys(changes);\n      if (\n        this.id &&\n        // Ignore changes for values not related to EditorJS\n        [\n          'autofocus',\n          'holder',\n          'hideToolbar',\n          'initialBlock',\n          'minHeight',\n          'blockPlaceholder',\n          'sanitizer',\n          'includeTools'\n        ].find(key => {\n          return changesKeys.includes(key);\n        })\n      ) {\n        await this.createEditor(this.createConfig());\n        this.cd.markForCheck();\n      }\n    }\n\n  }\n\n  /**\n   * After content is created, we create the editor instance and set up listners\n   */\n  async ngAfterContentInit() {\n    this.id = this.el.nativeElement.id || this.holder;\n\n    if (!this.id) {\n      throw new Error('Error in NgxEditorJSDirective::ngAfterContentInit - Directive element has no ID');\n    }\n    await this.createEditor(this.createConfig());\n\n    this.service\n      .isReady({ holder: this.holder })\n      .pipe(takeUntil(this.onDestroy$))\n      .subscribe(isReady => {\n        this.isReady.emit(isReady);\n      });\n\n    this.service\n      .lastChange({ holder: this.holder })\n      .pipe(takeUntil(this.onDestroy$))\n      .subscribe(change => {\n        this.hasChanged.emit(change);\n      });\n\n    this.service\n      .hasSaved({ holder: this.holder })\n      .pipe(takeUntil(this.onDestroy$))\n      .subscribe(saved => {\n        this.hasSaved.next(saved);\n      });\n  }\n\n  /**\n   * Destroy the editor and subjects for this service\n   */\n  ngOnDestroy() {\n    this.onDestroy$.next(true);\n    this.onDestroy$.complete();\n    this.service.destroyInstance({ holder: this.id });\n  }\n\n  /**\n   * Create a configuration for EditorJS\n   */\n  private createConfig(): EditorConfig {\n    const config: EditorConfig = createEditorJSConfig({\n      holder: this.id,\n      autofocus: this.autofocus,\n      hideToolbar: this.hideToolbar,\n      initialBlock: this.initialBlock,\n      placeholder: this.blockPlaceholder,\n      minHeight: this.minHeight,\n      sanitizer: this.sanitizer\n    });\n    if (this.blocks && this.blocks.length > 0) {\n      config.data = {\n        time: Date.now(),\n        version: EditorJS.version,\n        blocks: this.blocks\n      };\n    }\n    return config;\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"
    },
    'modules/NgxEditorJSModule.html': {
      url: 'modules/NgxEditorJSModule.html',
      title: 'module - NgxEditorJSModule',
      body:
        "\n                   \n\n\n\n\n    Modules\n    NgxEditorJSModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_NgxEditorJSModule\n\n\n\ncluster_NgxEditorJSModule_declarations\n\n\n\ncluster_NgxEditorJSModule_imports\n\n\n\ncluster_NgxEditorJSModule_exports\n\n\n\ncluster_NgxEditorJSModule_providers\n\n\n\n\nNgxEditorJSComponent\n\nNgxEditorJSComponent\n\n\n\nNgxEditorJSModule\n\nNgxEditorJSModule\n\nNgxEditorJSModule -->\n\nNgxEditorJSComponent->NgxEditorJSModule\n\n\n\n\n\nNgxEditorJSDirective\n\nNgxEditorJSDirective\n\nNgxEditorJSModule -->\n\nNgxEditorJSDirective->NgxEditorJSModule\n\n\n\n\n\nNgxEditorJSMatFieldComponent\n\nNgxEditorJSMatFieldComponent\n\nNgxEditorJSModule -->\n\nNgxEditorJSMatFieldComponent->NgxEditorJSModule\n\n\n\n\n\nNgxEditorJSComponent \n\nNgxEditorJSComponent \n\nNgxEditorJSComponent  -->\n\nNgxEditorJSModule->NgxEditorJSComponent \n\n\n\n\n\nNgxEditorJSDirective \n\nNgxEditorJSDirective \n\nNgxEditorJSDirective  -->\n\nNgxEditorJSModule->NgxEditorJSDirective \n\n\n\n\n\nNgxEditorJSMatFieldComponent \n\nNgxEditorJSMatFieldComponent \n\nNgxEditorJSMatFieldComponent  -->\n\nNgxEditorJSModule->NgxEditorJSMatFieldComponent \n\n\n\n\n\nNgxEditorjsPluginsModule\n\nNgxEditorjsPluginsModule\n\nNgxEditorJSModule -->\n\nNgxEditorjsPluginsModule->NgxEditorJSModule\n\n\n\n\n\nNgxEditorJSService\n\nNgxEditorJSService\n\nNgxEditorJSModule -->\n\nNgxEditorJSService->NgxEditorJSModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            libs/ngx-editorjs/src/lib/ngx-editorjs.module.ts\n        \n\n\n        \n            Description\n        \n        \n            The @tinynodes/ngx-editorjs module provides a collection of demos to allow\nany Angular app to use and control an EditorJS instance\nTo use import the module NgxEditorJSModule.forRoot() into the root of your application.\nThe forRoot method takes an optional NgxEditorJSModuleConfig config, this will provide a\ndefault instance.\n\n        \n\n\n        \n            \n                \n                    Declarations\n                    \n                        \n                            NgxEditorJSComponent\n                        \n                        \n                            NgxEditorJSDirective\n                        \n                        \n                            NgxEditorJSMatFieldComponent\n                        \n                    \n                \n                \n                    Providers\n                    \n                        \n                            NgxEditorJSService\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            NgxEditorjsPluginsModule\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            NgxEditorJSComponent\n                        \n                        \n                            NgxEditorJSDirective\n                        \n                        \n                            NgxEditorJSMatFieldComponent\n                        \n                    \n                \n            \n        \n\n        \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Static\n                            forRoot\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    forRoot(config?: NgxEditorJSModuleConfig)\n                \n            \n\n\n            \n                \n                    Defined in libs/ngx-editorjs/src/lib/ngx-editorjs.module.ts:60\n                \n            \n\n\n            \n                \n                    Use this method in the root of the application.  You can pass an optional configuration\nwhich sets some defaults, or use the provided defaults.\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    config\n                                    \n                                                NgxEditorJSModuleConfig\n                                    \n\n                                    \n                                        Yes\n                                    \n\n\n                                    \n                                        The optional configuration to pass\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         ModuleWithProviders\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n    \n\n\n    \n        import { CommonModule } from '@angular/common';\nimport { ModuleWithProviders, NgModule, Optional, SkipSelf } from '@angular/core';\nimport { FormsModule } from '@angular/forms';\nimport { MatFormFieldModule } from '@angular/material/form-field';\nimport { MatInputModule } from '@angular/material/input';\nimport EditorJS from '@editorjs/editorjs';\nimport { createModuleConfig } from './config/module-config';\nimport { NgxEditorJSMatFieldComponent } from './containers/editorjs-mat-field/editorjs-mat-field.component';\nimport { NgxEditorJSComponent } from './containers/editorjs/editorjs.component';\nimport { NgxEditorJSDirective } from './directives/ngx-editorjs.directive';\nimport { NgxEditorJSService } from './services/editorjs.service';\nimport { FOR_ROOT_OPTIONS_TOKEN, NgxEditorJSModuleConfig, NGX_EDITORJS_CONFIG } from './types/config';\nimport { EditorJSInstance, EDITORJS_MODULE_IMPORT } from './types/injector';\nimport { NgxEditorjsPluginsModule } from '@tinynodes/ngx-editorjs-plugins';\n\n/**\n * Factory function to return the EditorJS base class\n */\nexport function createEditorJSInstance(editorjs: any) {\n  return editorjs;\n}\n\n/**\n * The `@tinynodes/ngx-editorjs` module provides a collection of demos to allow\n * any Angular app to use and control an [EditorJS](http://editorjs.io) instance\n *\n * To use import the module `NgxEditorJSModule.forRoot()` into the root of your application.\n * The `forRoot` method takes an optional `NgxEditorJSModuleConfig` config, this will provide a\n * default instance.\n */\n@NgModule({\n  imports: [CommonModule, FormsModule, NgxEditorjsPluginsModule, MatInputModule, MatFormFieldModule],\n  declarations: [NgxEditorJSComponent, NgxEditorJSMatFieldComponent, NgxEditorJSDirective],\n  exports: [NgxEditorJSComponent, NgxEditorJSMatFieldComponent, NgxEditorJSDirective],\n  providers: [\n    NgxEditorJSService,\n    {\n      provide: EDITORJS_MODULE_IMPORT,\n      useValue: EditorJS\n    },\n    {\n      provide: EditorJSInstance,\n      useFactory: createEditorJSInstance,\n      deps: [EDITORJS_MODULE_IMPORT]\n    }\n  ]\n})\nexport class NgxEditorJSModule {\n  constructor(\n    @Optional()\n    @SkipSelf()\n    parentModule: NgxEditorJSModule\n  ) {}\n\n  /**\n   * Use this method in the root of the application.  You can pass an optional configuration\n   * which sets some defaults, or use the provided defaults.\n   * @param config The optional configuration to pass\n   */\n  static forRoot(@Optional() config?: NgxEditorJSModuleConfig): ModuleWithProviders {\n    return {\n      ngModule: NgxEditorJSModule,\n      providers: [\n        {\n          provide: FOR_ROOT_OPTIONS_TOKEN,\n          useValue: config\n        },\n        {\n          provide: NGX_EDITORJS_CONFIG,\n          useFactory: createModuleConfig,\n          deps: [FOR_ROOT_OPTIONS_TOKEN]\n        }\n      ]\n    };\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"
    },
    'interfaces/NgxEditorJSModuleConfig.html': {
      url: 'interfaces/NgxEditorJSModuleConfig.html',
      title: 'interface - NgxEditorJSModuleConfig',
      body:
        "\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  NgxEditorJSModuleConfig\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            libs/ngx-editorjs/src/lib/types/config.ts\n        \n\n            \n                Description\n            \n            \n                The configuration option that can be passed to the NgxEditorJSModule.forRoot method\n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                            Optional\n                                        editorjs\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        editorjs\n                                    \n                                \n                                \n                                    \n                                        editorjs:     EditorConfig\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     EditorConfig\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    Configuration options for EditorJS\n\n                                \n                            \n                        \n                    \n            \n    \n\n\n    \n        import { InjectionToken } from '@angular/core';\nimport EditorJS, { OutputData, SanitizerConfig, EditorConfig } from '@editorjs/editorjs';\n\n/**\n * Configuration for the EditorJS instance\n */\nexport interface NgxEditorJSConfig {\n  /**\n   * If the EditorJS is autofocused on creation (default: false)\n   */\n  autofocus?: boolean;\n\n  /**\n   * Any initial output data to render\n   */\n  data?: OutputData;\n\n  /**\n   * If true, toolbar won't be shown\n   */\n  hideToolbar?: boolean;\n\n  /**\n   * ID of the element to hold the config\n   */\n  holder?: string;\n\n  /**\n   * The name of the initial block (default \"paragraph\")\n   */\n  initialBlock?: string;\n\n  /**\n   * Height of Editor's bottom area that allows to set focus on the last Block\n   */\n  minHeight?: number;\n\n  /**\n   * First Block placeholder\n   */\n  blockPlaceholder?: string;\n\n  /**\n   * Define default sanitizer configuration\n   */\n  sanitizer?: SanitizerConfig;\n}\n\n/**\n * The configuration option that can be passed to the `NgxEditorJSModule.forRoot` method\n */\nexport interface NgxEditorJSModuleConfig {\n  /**\n   * Configuration options for EditorJS\n   */\n  editorjs?: EditorConfig;\n}\n\n/**\n * Injection token provied for `NgxEditorJSConfig`\n */\nexport const NGX_EDITORJS_CONFIG = new InjectionToken('NGX_EDITORJS_CONFIG');\n\n/**\n * Internal token for injecting the `NgxEditorJSConfig` into the config factory\n */\nexport const FOR_ROOT_OPTIONS_TOKEN = new InjectionToken('FOR_ROOT_OPTIONS_TOKEN');\n\n/**\n * Get the EditorJS instance injected into the app\n */\nexport const EDITIOR_JS_INSTANCE = new InjectionToken('EDITIOR_JS_INSTANCE');\n\n    \n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"
    },
    'injectables/NgxEditorJSPluginService.html': {
      url: 'injectables/NgxEditorJSPluginService.html',
      title: 'injectable - NgxEditorJSPluginService',
      body:
        "\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  NgxEditorJSPluginService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            libs/ngx-editorjs-plugins/src/lib/services/plugin-service.service.ts\n        \n\n            \n                Description\n            \n            \n                The NgxEditorJSPluginService is provided as a root service for handling  EditorJS plugins.\nPlugins are provided by using  NgModule to inject the plugin with a\n PluginConfig using providers.\n\n            \n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                getPlugin\n                            \n                            \n                                    Public\n                                getPlugins\n                            \n                            \n                                    Public\n                                getPluginsWithExclude\n                            \n                            \n                                    Public\n                                getPluginsWithInclude\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(pluginConfigMap: PluginConfigMap)\n                    \n                \n                        \n                            \n                                Defined in libs/ngx-editorjs-plugins/src/lib/services/plugin-service.service.ts:13\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        pluginConfigMap\n                                                  \n                                                        \n                                                                        PluginConfigMap\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                The plugin configuration map injected into the application\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            getPlugin\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    getPlugin(key: string)\n                \n            \n\n\n            \n                \n                    Defined in libs/ngx-editorjs-plugins/src/lib/services/plugin-service.service.ts:32\n                \n            \n\n\n            \n                \n                    Get a plugin configuration via it's key\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    key\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        The key of the plugin to get\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         PluginConfig\n\n                    \n                    \n                        The plugin configuration for the passed key\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            getPlugins\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    getPlugins()\n                \n            \n\n\n            \n                \n                    Defined in libs/ngx-editorjs-plugins/src/lib/services/plugin-service.service.ts:23\n                \n            \n\n\n            \n                \n                    Get a map of all plugin configurations\n\n\n                    \n                    \n                    \n                        Returns :         PluginConfigMap\n\n                    \n                    \n                        The map of plugins injected into this plugin\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            getPluginsWithExclude\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    getPluginsWithExclude(excludeList: string[])\n                \n            \n\n\n            \n                \n                    Defined in libs/ngx-editorjs-plugins/src/lib/services/plugin-service.service.ts:40\n                \n            \n\n\n            \n                \n                    Get a list of plugins, filtering with an exclude list of plugins\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Default value\n                                \n                            \n                            \n                                \n                                    excludeList\n                                    \n                                            string[]\n                                    \n\n                                    \n                                        No\n                                    \n\n                                    \n                                        []\n                                    \n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         PluginConfigMap\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            getPluginsWithInclude\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    getPluginsWithInclude(includeList: string[])\n                \n            \n\n\n            \n                \n                    Defined in libs/ngx-editorjs-plugins/src/lib/services/plugin-service.service.ts:54\n                \n            \n\n\n            \n                \n                    Get a list of plugins, filtering with an include list of plugins\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Default value\n                                \n                            \n                            \n                                \n                                    includeList\n                                    \n                                            string[]\n                                    \n\n                                    \n                                        No\n                                    \n\n                                    \n                                        []\n                                    \n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         PluginConfigMap\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Inject, Injectable } from '@angular/core';\nimport { PluginClasses, PluginConfig, PluginConfigMap } from '../types/plugins';\n\n/**\n * The `NgxEditorJSPluginService` is provided as a root service for handling {@link https://github.com/editor-js | EditorJS plugins}.\n *\n * Plugins are provided by using {@link https://angular.io/api/core/NgModule | NgModule} to inject the plugin with a\n * {@link ../interfaces/PluginConfig.html | PluginConfig} using providers.\n */\n@Injectable({\n  providedIn: 'root'\n})\nexport class NgxEditorJSPluginService {\n  /**\n   * @param pluginConfigMap The plugin configuration map injected into the application\n   */\n  constructor(@Inject(PluginClasses) private readonly pluginConfigMap: PluginConfigMap) {}\n\n  /**\n   * Get a map of all plugin configurations\n   * @returns The map of plugins injected into this plugin\n   */\n  public getPlugins(): PluginConfigMap {\n    return this.pluginConfigMap;\n  }\n\n  /**\n   * Get a plugin configuration via it's key\n   * @param key The key of the plugin to get\n   * @returns The plugin configuration for the passed key\n   */\n  public getPlugin(key: string): PluginConfig {\n    return this.pluginConfigMap[key];\n  }\n\n  /**\n   * Get a list of plugins, filtering with an exclude list of plugins\n   * @param excludeList\n   */\n  public getPluginsWithExclude(excludeList: string[] = []): PluginConfigMap {\n    return Object.entries(this.pluginConfigMap)\n      .filter(([key]) => {\n        return !excludeList.includes(key);\n      })\n      .reduce((pluginMap, [key, plugin]) => {\n        return { ...pluginMap, [key]: plugin };\n      }, {});\n  }\n\n  /**\n   * Get a list of plugins, filtering with an include list of plugins\n   * @param includeList\n   */\n  public getPluginsWithInclude(includeList: string[] = []): PluginConfigMap {\n    return Object.entries(this.pluginConfigMap)\n      .filter(([key]) => {\n        return includeList.includes(key);\n      })\n      .reduce((pluginMap, [key, plugin]) => {\n        return { ...pluginMap, [key]: plugin };\n      }, {});\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"
    },
    'injectables/NgxEditorJSService.html': {
      url: 'injectables/NgxEditorJSService.html',
      title: 'injectable - NgxEditorJSService',
      body:
        "\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  NgxEditorJSService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            libs/ngx-editorjs/src/lib/services/editorjs.service.ts\n        \n\n            \n                Description\n            \n            \n                This handles the management of  EditorJS instances and their lifecycle.\nAll EditorJS instances are created outside of Angular using  NgZone  to ensure change detection is not triggered.\nOnce an instance is created, several  Observable values are also set up:\n\n isReady  Set when the editor instance is ready in the DOM\n hasSaved  Set when the editor .save() method has been called.\n lastChange  Set when a change happens, contains the OutputData from the Editor.\n\nAfter setup,  isReady  is set to true and the editor can be used within Angular.  There are some methods provided\nfor  save ,  update  and  clear  - and an  apiCall  method which allows\nfor any call to be made to EditorJS that matches it's API.\n\n            \n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                apiCall\n                            \n                            \n                                    Public\n                                clear\n                            \n                            \n                                    Public\n                                    Async\n                                createInstance\n                            \n                            \n                                    Public\n                                destroy\n                            \n                            \n                                    Public\n                                destroyInstance\n                            \n                            \n                                    Public\n                                getEditor\n                            \n                            \n                                    Public\n                                hasSaved\n                            \n                            \n                                    Public\n                                isReady\n                            \n                            \n                                    Public\n                                lastChange\n                            \n                            \n                                    Public\n                                save\n                            \n                            \n                                    Public\n                                update\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(editorJs: EditorJSClass, config: NgxEditorJSModuleConfig, plugins: NgxEditorJSPluginService, zone: NgZone, ref: ApplicationRef)\n                    \n                \n                        \n                            \n                                Defined in libs/ngx-editorjs/src/lib/services/editorjs.service.ts:61\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        editorJs\n                                                  \n                                                        \n                                                                        EditorJSClass\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                The EditorJS class injected into the application and used to create new editor instances\n\n                                                        \n                                                \n                                                \n                                                        config\n                                                  \n                                                        \n                                                                        NgxEditorJSModuleConfig\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                The configuration provided from the NgxEditorJSModule.forRoot method\n\n                                                        \n                                                \n                                                \n                                                        plugins\n                                                  \n                                                        \n                                                                        NgxEditorJSPluginService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                The plugin service which provides all plugins injected into the application\n\n                                                        \n                                                \n                                                \n                                                        zone\n                                                  \n                                                        \n                                                                        NgZone\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                The Angular Zone service that allows the EditorJS methods to be run outside of Angular\n\n                                                        \n                                                \n                                                \n                                                        ref\n                                                  \n                                                        \n                                                                        ApplicationRef\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                The ApplicationRef provided by Angular, used to trigger an application tick\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            apiCall\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    apiCall(options: InjectorApiCallOptions, ...args: any[])\n                \n            \n\n\n            \n                \n                    Defined in libs/ngx-editorjs/src/lib/services/editorjs.service.ts:139\n                \n            \n\n            \n                \n                    Type parameters :\n                    \n                        T\n                    \n                \n            \n\n            \n                \n                    A helper method to make calls to the  EditorJS API  of any instance.\nThe first argument is an object that you must pass the method name, and the holder ID of the container.\nAn optional namespace can be added for API calls such as blocks, caret, etc.\nThe second argument is any additional arguments as required by the API.\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    options\n                                    \n                                                InjectorApiCallOptions\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        The options for the API call to be made\n\n                                    \n                                \n                                \n                                    args\n                                    \n                                            any[]\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        Any arguments to be passed to the API call\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Observable>\n\n                    \n                    \n                        An Observable of the API response\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            clear\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    clear(options: InjectorMethodOption)\n                \n            \n\n\n            \n                \n                    Defined in libs/ngx-editorjs/src/lib/services/editorjs.service.ts:192\n                \n            \n\n\n            \n                \n                    Gets the  EditorJS instance for the passed holder and calls the clear method.\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    options\n                                    \n                                                InjectorMethodOption\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        Options to configure a method call against the EditorJS core API\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Observable>\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            Async\n                            createInstance\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    createInstance(options: CreateEditorJSOptions)\n                \n            \n\n\n            \n                \n                    Defined in libs/ngx-editorjs/src/lib/services/editorjs.service.ts:88\n                \n            \n\n\n            \n                \n                    Creates a new  EditorJS instance outside of the Angular zone and then adds it to the editor instances\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    options\n                                    \n                                                CreateEditorJSOptions\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        A configuration passed to create an EditorJS instance\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        A Promise when the editor has been created\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            destroy\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    destroy()\n                \n            \n\n\n            \n                \n                    Defined in libs/ngx-editorjs/src/lib/services/editorjs.service.ts:289\n                \n            \n\n\n            \n                \n                    Call this to destroy all subscriptions within the service\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            destroyInstance\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    destroyInstance(options: InjectorMethodOption)\n                \n            \n\n\n            \n                \n                    Defined in libs/ngx-editorjs/src/lib/services/editorjs.service.ts:272\n                \n            \n\n\n            \n                \n                    Destroys a single instance of  EditorJS and all the subject values created for it\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    options\n                                    \n                                                InjectorMethodOption\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        Options to configure a method call against the EditorJS core API\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            getEditor\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    getEditor(options: InjectorMethodOption)\n                \n            \n\n\n            \n                \n                    Defined in libs/ngx-editorjs/src/lib/services/editorjs.service.ts:221\n                \n            \n\n\n            \n                \n                    Returns the underlying  EditorJS instance\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    options\n                                    \n                                                InjectorMethodOption\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        Options to configure a method call against the EditorJS core API\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Observable\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            hasSaved\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    hasSaved(options: InjectorMethodOption)\n                \n            \n\n\n            \n                \n                    Defined in libs/ngx-editorjs/src/lib/services/editorjs.service.ts:261\n                \n            \n\n\n            \n                \n                    Subscribe to the hasSaved state change for the editor passed in the options\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    options\n                                    \n                                                InjectorMethodOption\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        Options to configure a method call against the EditorJS core API\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Observable\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            isReady\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    isReady(options: InjectorMethodOption)\n                \n            \n\n\n            \n                \n                    Defined in libs/ngx-editorjs/src/lib/services/editorjs.service.ts:232\n                \n            \n\n\n            \n                \n                    Subscribe to the isReady state change for the editor passed in the options\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    options\n                                    \n                                                InjectorMethodOption\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        Options to configure a method call against the EditorJS core API\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Observable\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            lastChange\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    lastChange(options: InjectorMethodOption)\n                \n            \n\n\n            \n                \n                    Defined in libs/ngx-editorjs/src/lib/services/editorjs.service.ts:243\n                \n            \n\n\n            \n                \n                    Subscribe to the lastChange state change for the editor passed in the options\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    options\n                                    \n                                                InjectorMethodOption\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        Options to configure a method call against the EditorJS core API\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Observable\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            save\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    save(options: InjectorMethodOption)\n                \n            \n\n\n            \n                \n                    Defined in libs/ngx-editorjs/src/lib/services/editorjs.service.ts:178\n                \n            \n\n\n            \n                \n                    Call the save method of an  EditorJS instance and sets the current value of the service to the result\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    options\n                                    \n                                                InjectorMethodOption\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        Options for the method call\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Observable>\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            update\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    update(options: InjectorMethodOption)\n                \n            \n\n\n            \n                \n                    Defined in libs/ngx-editorjs/src/lib/services/editorjs.service.ts:205\n                \n            \n\n\n            \n                \n                    Gets the  EditorJS instance for the passed holder and calls the render method if blocks\nare passed. Optionally can disable the lastChange update - useful if doing actions\nsuch as resetting data.\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    options\n                                    \n                                                InjectorMethodOption\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        Options to configure a method call against the EditorJS core API\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Observable>\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { ApplicationRef, Inject, Injectable, NgZone } from '@angular/core';\nimport EditorJS, { EditorConfig, OutputData } from '@editorjs/editorjs';\nimport { BehaviorSubject, Observable, of, Subject } from 'rxjs';\nimport { distinctUntilChanged, filter, switchMap, take, tap } from 'rxjs/operators';\nimport { NGX_EDITORJS_CONFIG, NgxEditorJSModuleConfig } from '../types/config';\nimport { CreateEditorJSOptions } from '../types/editorjs-service';\nimport {\n  EditorJSClass,\n  EditorJSInstance,\n  InjectorApiCallOptions,\n  InjectorApiCallResponse,\n  InjectorMethodOption,\n  MAP_DEFAULTS\n} from '../types/injector';\nimport { ChangeMap, EditorMap, ReadyMap, SavedMap } from '../types/maps';\nimport { NgxEditorJSPluginService, ToolSettingsMap, PluginConfig } from '@tinynodes/ngx-editorjs-plugins';\n\n/**\n * This handles the management of {@link https://editorjs.io/api | EditorJS} instances and their lifecycle.\n *\n * All `EditorJS` instances are created outside of Angular using {@link https://angular.io/api/core/NgZone | NgZone } to ensure change detection is not triggered.\n * Once an instance is created, several {@link https://angular.io/guide/observables | Observable} values are also set up:\n *\n *  - {@link #isReady | isReady } Set when the editor instance is ready in the DOM\n *  - {@link #hasSaved | hasSaved } Set when the editor `.save()` method has been called.\n *  - {@link #lastChange | lastChange } Set when a change happens, contains the `OutputData` from the Editor.\n *\n * After setup, {@link #isReady | isReady } is set to true and the editor can be used within Angular.  There are some methods provided\n * for {@link #save | save }, {@link #update | update } and {@link #clear | clear } - and an {@link #apiCall | apiCall } method which allows\n * for any call to be made to EditorJS that matches it's API.\n */\n@Injectable({\n  providedIn: 'root'\n})\nexport class NgxEditorJSService {\n  /**\n   * Internal destroy subject for the service\n   */\n  private readonly onDestroy$ = new Subject();\n\n  /**\n   * Internal map of all {@link https://editorjs.io/api | EditorJS} instances\n   */\n  private readonly editorMap: EditorMap = {};\n\n  /**\n   * Internal map of all {@link https://editorjs.io/api | EditorJS} ready states\n   */\n  private readonly isReadyMap: ReadyMap = {};\n\n  /**\n   * Internal map of when {@link https://editorjs.io/api | EditorJS} save is called\n   */\n  private readonly hasSavedMap: SavedMap = {};\n\n  /**\n   * Internal map of all {@link https://editorjs.io/api | EditorJS} change states\n   */\n  private readonly lastChangeMap: ChangeMap = {};\n\n  private toolbarOpen = false;\n\n  /**\n   * @param editorJs The EditorJS class injected into the application and used to create new editor instances\n   * @param config The configuration provided from the NgxEditorJSModule.forRoot method\n   * @param plugins The plugin service which provides all plugins injected into the application\n   * @param zone The Angular Zone service that allows the EditorJS methods to be run outside of Angular\n   * @param ref The ApplicationRef provided by Angular, used to trigger an application tick\n   */\n  constructor(\n    @Inject(EditorJSInstance) private readonly editorJs: EditorJSClass,\n    @Inject(NGX_EDITORJS_CONFIG) private readonly config: NgxEditorJSModuleConfig,\n    private readonly plugins: NgxEditorJSPluginService,\n    private readonly zone: NgZone,\n    private readonly ref: ApplicationRef\n  ) {\n  }\n\n  /**\n   * Creates a new {@link https://editorjs.io/api | EditorJS} instance outside of the Angular zone and then adds it to the editor instances\n   *\n   * @remark\n   * This method uses `async/await`\n   *\n   * @param options A configuration passed to create an EditorJS instance\n   * @returns A Promise when the editor has been created\n   */\n  public async createInstance(options: CreateEditorJSOptions): Promise {\n    const editorConfig: EditorConfig = {\n      ...this.config.editorjs,\n      ...options.config,\n      tools: this.getTools(options.excludeTools)\n    };\n\n    // Bind the editor onChange method from the config, otherwise use the local createOnChange method\n    editorConfig.onChange =\n      editorConfig.onChange && typeof editorConfig.onChange === 'function'\n        ? editorConfig.onChange\n        : this.createOnChange.call(this, { holder: editorConfig.holder as string });\n\n    // Bind the editor onReady method from the config, otherwise use the local createOnReady method\n    editorConfig.onReady =\n      editorConfig.onReady && typeof editorConfig.onReady === 'function'\n        ? editorConfig.onReady\n        : this.createOnReady.call(this, { holder: editorConfig.holder as string });\n\n    await this.zone.runOutsideAngular(async () => {\n      const editor = new this.editorJs(editorConfig);\n      const holder = editorConfig.holder as string;\n      await editor.isReady;\n      await this.zone.run(async () => {\n        await this.setupSubjects({ holder });\n        if (this.editorMap[holder]) {\n          this.editorMap[holder].next(editor);\n        } else {\n          this.editorMap[holder] = new BehaviorSubject(editor);\n        }\n        this.isReadyMap[holder].next(true);\n        this.ref.tick();\n      });\n    });\n  }\n\n  /**\n   * A helper method to make calls to the {@link https://editorjs.io/api | EditorJS API } of any instance.\n   * The first argument is an object that you must pass the `method` name, and the `holder` ID of the container.\n   * An optional `namespace` can be added for API calls such as `blocks`, `caret`, etc.\n   *\n   * The second argument is any additional arguments as required by the API.\n   *\n   * @remarks\n   * Unlike other methods an API call be made with a `.subscribe`, the result will be an observable value.\n   * If the value is a Promise it will be resolved first\n   *\n   * @param options The options for the API call to be made\n   * @param args Any arguments to be passed to the API call\n   * @returns An Observable of the API response\n   */\n  public apiCall(options: InjectorApiCallOptions, ...args: any[]): Observable> {\n    return this.getEditor(options).pipe(\n      take(1),\n      switchMap(async editor => {\n        let result: InjectorApiCallResponse = { ...options, result: undefined };\n\n        await this.zone.runOutsideAngular(async () => {\n          let method: any;\n          if (!options.namespace) {\n            method = editor[options.method];\n          } else {\n            method = editor[options.namespace][options.method];\n          }\n          if (!method) {\n            throw new Error(`No method ${ options.method } ${ options.namespace ? 'in ' + options.namespace : '' }`);\n          }\n          const methodCall = method.call(editor, ...args);\n          await this.zone.run(async () => {\n            if (!methodCall || (methodCall && !methodCall.then)) {\n              result = {\n                ...result,\n                result: typeof methodCall === 'undefined' ? {} : methodCall\n              };\n            } else {\n              const r = await methodCall;\n              result = { ...result, result: r };\n            }\n          });\n        });\n\n        return result;\n      })\n    );\n  }\n\n  /**\n   * Call the `save` method of an {@link https://editorjs.io/api | EditorJS} instance and sets the current value of the service to the result\n   * @param options Options for the method call\n   */\n  public save(options: InjectorMethodOption): Observable> {\n    return this.apiCall({ holder: options.holder, namespace: 'saver', method: 'save' }).pipe(\n      take(1),\n      tap((response: InjectorApiCallResponse) => {\n        this.hasSavedMap[options.holder].next(true);\n        this.lastChangeMap[options.holder].next(response.result);\n      })\n    );\n  }\n\n  /**\n   * Gets the {@link https://editorjs.io/api | EditorJS} instance for the passed holder and calls the `clear` method.\n   * @param options Options to configure a method call against the EditorJS core API\n   */\n  public clear(options: InjectorMethodOption): Observable> {\n    return this.apiCall({ holder: options.holder, namespace: 'blocks', method: 'clear' }).pipe(\n      take(1),\n      switchMap((response) => options.skipSave ? of(response) : this.save(options))\n    );\n  }\n\n  /**\n   * Gets the {@link https://editorjs.io/api | EditorJS} instance for the passed holder and calls the render method if blocks\n   * are passed. Optionally can disable the `lastChange` update - useful if doing actions\n   * such as resetting data.\n   * @param options Options to configure a method call against the EditorJS core API\n   */\n  public update(options: InjectorMethodOption): Observable> {\n    const data = {\n      time: options.data && options.data.time || Date.now(),\n      version: options.data && options.data.version || this.editorJs.version,\n      blocks: [...options.data.blocks],\n    };\n    return this.apiCall({ holder: options.holder, namespace: 'blocks', method: 'render' }, data).pipe(\n      take(1),\n      switchMap((response) => options.skipSave ? of(response) : this.save(options))\n    );\n  }\n\n  /**\n   * Returns the underlying {@link https://editorjs.io/api | EditorJS} instance\n   * @param options Options to configure a method call against the EditorJS core API\n   */\n  public getEditor(options: InjectorMethodOption): Observable {\n    if (!this.editorMap[options.holder]) {\n      this.editorMap[options.holder] = new BehaviorSubject(undefined);\n    }\n    return this.editorMap[options.holder].pipe(filter(editor => typeof editor !== 'undefined'));\n  }\n\n  /**\n   * Subscribe to the `isReady` state change for the editor passed in the options\n   * @param options Options to configure a method call against the EditorJS core API\n   */\n  public isReady(options: InjectorMethodOption): Observable {\n    if (!this.isReadyMap[options.holder]) {\n      this.isReadyMap[options.holder] = new BehaviorSubject(false);\n    }\n    return this.isReadyMap[options.holder].asObservable();\n  }\n\n  /**\n   * Subscribe to the `lastChange` state change for the editor passed in the options\n   * @param options Options to configure a method call against the EditorJS core API\n   */\n  public lastChange(options: InjectorMethodOption): Observable {\n    if (!this.lastChangeMap[options.holder]) {\n      this.lastChangeMap[options.holder] = new BehaviorSubject({\n        time: 0,\n        blocks: [],\n        version: this.editorJs.version\n      });\n    }\n    return this.lastChangeMap[options.holder].pipe(\n      distinctUntilChanged((a, b) => (b && b.time && b.time === 0) || (a && b && (a.time && a.time === b.time))),\n      filter(hasChanged => typeof hasChanged !== 'undefined')\n    );\n  }\n\n  /**\n   * Subscribe to the `hasSaved` state change for the editor passed in the options\n   * @param options Options to configure a method call against the EditorJS core API\n   */\n  public hasSaved(options: InjectorMethodOption): Observable {\n    if (!this.hasSavedMap[options.holder]) {\n      this.hasSavedMap[options.holder] = new BehaviorSubject(false);\n    }\n    return this.hasSavedMap[options.holder].asObservable();\n  }\n\n  /**\n   * Destroys a single instance of {@link https://editorjs.io/api | EditorJS} and all the subject values created for it\n   * @param options Options to configure a method call against the EditorJS core API\n   */\n  public destroyInstance(options: InjectorMethodOption): void {\n    this.getEditor(options)\n      .pipe(take(1))\n      .subscribe(editor => {\n        this.zone.runOutsideAngular(() => {\n          editor.destroy();\n          this.zone.run(() => {\n            this.cleanupSubjects({ holder: options.holder });\n            this.ref.tick();\n          });\n        });\n      });\n  }\n\n  /**\n   * Call this to destroy all subscriptions within the service\n   */\n  public destroy() {\n    Object.keys(this.editorMap).forEach(holder => this.destroyInstance({ holder }));\n    this.onDestroy$.next(true);\n    this.onDestroy$.complete();\n  }\n\n  /**\n   * Internal method to create an default onChange method for {@link https://editorjs.io/api | EditorJS}\n   * @param options The InjectorMethodOption for this request\n   */\n  private createOnChange(options: InjectorMethodOption): (change: OutputData) => void {\n    if (!this.lastChangeMap[options.holder]) {\n      this.lastChangeMap[options.holder] = new BehaviorSubject({ blocks: [] });\n    }\n    return (change: OutputData) => {\n      if (change) {\n        this.lastChangeMap[options.holder].next(change);\n      }\n    };\n  }\n\n  /**\n   * Internal method to create an default onReady method for {@link https://editorjs.io/api | EditorJS}\n   * @param options The InjectorMethodOption for this request\n   */\n  private createOnReady(options: InjectorMethodOption): () => void {\n    if (!this.isReadyMap[options.holder]) {\n      this.isReadyMap[options.holder] = new BehaviorSubject(false);\n    }\n\n    return () => {\n      if (!this.isReadyMap[options.holder].value) {\n        this.isReadyMap[options.holder].next(true);\n      }\n    };\n  }\n\n  /**\n   * Sets up the `BehaviorSubject` values when an {@link https://editorjs.io/api | EditorJS} instance is created.  All the subjects are first created and set\n   * to default values.\n   * Once an EditorJS instance is ready these values can provide change and save state information\n   * @param options Options to configure a method call against the EditorJS core API\n   */\n  private async setupSubjects(options: InjectorMethodOption): Promise {\n    MAP_DEFAULTS.forEach(([ mapKey, value ]: [ string, typeof value ]) => {\n      if (!this[mapKey][options.holder]) {\n        this[mapKey][options.holder] = new BehaviorSubject(value);\n      }\n      this[mapKey][options.holder].next(value);\n    });\n  }\n\n  /**\n   * Handles cleaning up all the `BehaviorSubject` values once an {@link https://editorjs.io/api | EditorJS} instance has been destroyed\n   * @param options The options to pass to clean up the subjects\n   */\n  private cleanupSubjects(options: InjectorMethodOption) {\n    MAP_DEFAULTS.forEach(([ mapKey ]: [ string ]) => {\n      if (this[mapKey][options.holder]) {\n        this[mapKey][options.holder].complete();\n        this[mapKey][options.holder] = null;\n        delete this[mapKey][options.holder];\n      }\n    });\n    this.editorMap[options.holder].complete();\n    this.editorMap[options.holder] = null;\n    delete this.editorMap[options.holder];\n  }\n\n  /**\n   * Returns a map of {@link https://editorjs.io/api | EditorJS} tools to be initialized by the editor\n   * @param excludeTools Optional array of tools to exclude, if not passed all tools\n   */\n  private getTools(excludeTools: string[] = []): ToolSettingsMap {\n    return Object.entries(this.plugins.getPluginsWithExclude(excludeTools))\n      .reduce(\n        (finalTools, [ key, plugin ]: [string, PluginConfig]) => {\n          const tool: any = {\n            class: plugin.plugin\n          };\n          if (plugin.shortcut) tool.shortcut = plugin.shortcut;\n          if (plugin.type === 'inline') tool.inlineToolbar = true;\n          if (plugin.config) tool.config = plugin.config;\n\n          return { ...finalTools, [key]: tool };\n        },\n        {}\n      );\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"
    },
    'modules/NgxEditorjsPluginsModule.html': {
      url: 'modules/NgxEditorjsPluginsModule.html',
      title: 'module - NgxEditorjsPluginsModule',
      body:
        "\n                   \n\n\n\n\n    Modules\n    NgxEditorjsPluginsModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_NgxEditorjsPluginsModule\n\n\n\ncluster_NgxEditorjsPluginsModule_imports\n\n\n\ncluster_NgxEditorjsPluginsModule_exports\n\n\n\n\nNgxEditorJSPluginServiceModule\n\nNgxEditorJSPluginServiceModule\n\n\n\nNgxEditorjsPluginsModule\n\nNgxEditorjsPluginsModule\n\nNgxEditorjsPluginsModule -->\n\nNgxEditorJSPluginServiceModule->NgxEditorjsPluginsModule\n\n\n\n\n\nPluginCodeModule\n\nPluginCodeModule\n\nNgxEditorjsPluginsModule -->\n\nPluginCodeModule->NgxEditorjsPluginsModule\n\n\n\n\n\nPluginHeaderModule\n\nPluginHeaderModule\n\nNgxEditorjsPluginsModule -->\n\nPluginHeaderModule->NgxEditorjsPluginsModule\n\n\n\n\n\nPluginImageModule\n\nPluginImageModule\n\nNgxEditorjsPluginsModule -->\n\nPluginImageModule->NgxEditorjsPluginsModule\n\n\n\n\n\nPluginInlineCodeModule\n\nPluginInlineCodeModule\n\nNgxEditorjsPluginsModule -->\n\nPluginInlineCodeModule->NgxEditorjsPluginsModule\n\n\n\n\n\nPluginLinkModule\n\nPluginLinkModule\n\nNgxEditorjsPluginsModule -->\n\nPluginLinkModule->NgxEditorjsPluginsModule\n\n\n\n\n\nPluginListModule\n\nPluginListModule\n\nNgxEditorjsPluginsModule -->\n\nPluginListModule->NgxEditorjsPluginsModule\n\n\n\n\n\nPluginMarkerModule\n\nPluginMarkerModule\n\nNgxEditorjsPluginsModule -->\n\nPluginMarkerModule->NgxEditorjsPluginsModule\n\n\n\n\n\nPluginParagraphModule\n\nPluginParagraphModule\n\nNgxEditorjsPluginsModule -->\n\nPluginParagraphModule->NgxEditorjsPluginsModule\n\n\n\n\n\nPluginSimpleImageModule\n\nPluginSimpleImageModule\n\nNgxEditorjsPluginsModule -->\n\nPluginSimpleImageModule->NgxEditorjsPluginsModule\n\n\n\n\n\nNgxEditorJSPluginServiceModule \n\nNgxEditorJSPluginServiceModule \n\nNgxEditorJSPluginServiceModule  -->\n\nNgxEditorjsPluginsModule->NgxEditorJSPluginServiceModule \n\n\n\n\n\nPluginCodeModule \n\nPluginCodeModule \n\nPluginCodeModule  -->\n\nNgxEditorjsPluginsModule->PluginCodeModule \n\n\n\n\n\nPluginHeaderModule \n\nPluginHeaderModule \n\nPluginHeaderModule  -->\n\nNgxEditorjsPluginsModule->PluginHeaderModule \n\n\n\n\n\nPluginImageModule \n\nPluginImageModule \n\nPluginImageModule  -->\n\nNgxEditorjsPluginsModule->PluginImageModule \n\n\n\n\n\nPluginInlineCodeModule \n\nPluginInlineCodeModule \n\nPluginInlineCodeModule  -->\n\nNgxEditorjsPluginsModule->PluginInlineCodeModule \n\n\n\n\n\nPluginLinkModule \n\nPluginLinkModule \n\nPluginLinkModule  -->\n\nNgxEditorjsPluginsModule->PluginLinkModule \n\n\n\n\n\nPluginListModule \n\nPluginListModule \n\nPluginListModule  -->\n\nNgxEditorjsPluginsModule->PluginListModule \n\n\n\n\n\nPluginMarkerModule \n\nPluginMarkerModule \n\nPluginMarkerModule  -->\n\nNgxEditorjsPluginsModule->PluginMarkerModule \n\n\n\n\n\nPluginParagraphModule \n\nPluginParagraphModule \n\nPluginParagraphModule  -->\n\nNgxEditorjsPluginsModule->PluginParagraphModule \n\n\n\n\n\nPluginSimpleImageModule \n\nPluginSimpleImageModule \n\nPluginSimpleImageModule  -->\n\nNgxEditorjsPluginsModule->PluginSimpleImageModule \n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            libs/ngx-editorjs-plugins/src/lib/ngx-editorjs-plugins.module.ts\n        \n\n\n        \n            Description\n        \n        \n            The NgxEditorjsPluginsModule provides several additional modules\nthat provide a way to easily plug in block and inline tools for EditorJS.\nImporting NgxEditorjsPluginsModule will include all modules, while it\nis also possible to import each individual module as required.\n\n        \n\n\n        \n            \n                \n                    Imports\n                    \n                        \n                            NgxEditorJSPluginServiceModule\n                        \n                        \n                            PluginCodeModule\n                        \n                        \n                            PluginHeaderModule\n                        \n                        \n                            PluginImageModule\n                        \n                        \n                            PluginInlineCodeModule\n                        \n                        \n                            PluginLinkModule\n                        \n                        \n                            PluginListModule\n                        \n                        \n                            PluginMarkerModule\n                        \n                        \n                            PluginParagraphModule\n                        \n                        \n                            PluginSimpleImageModule\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            NgxEditorJSPluginServiceModule\n                        \n                        \n                            PluginCodeModule\n                        \n                        \n                            PluginHeaderModule\n                        \n                        \n                            PluginImageModule\n                        \n                        \n                            PluginInlineCodeModule\n                        \n                        \n                            PluginLinkModule\n                        \n                        \n                            PluginListModule\n                        \n                        \n                            PluginMarkerModule\n                        \n                        \n                            PluginParagraphModule\n                        \n                        \n                            PluginSimpleImageModule\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\nimport { PluginCodeModule } from './plugins/code/code.module';\nimport { PluginHeaderModule } from './plugins/header/header.module';\nimport { PluginImageModule } from './plugins/image/image.module';\nimport { PluginLinkModule } from './plugins/link/link.module';\nimport { PluginListModule } from './plugins/list/list.module';\nimport { PluginMarkerModule } from './plugins/marker/marker.module';\nimport { PluginParagraphModule } from './plugins/paragraph/paragraph.module';\nimport { PluginSimpleImageModule } from './plugins/simple-image/simple-image.module';\nimport { NgxEditorJSPluginServiceModule } from './services/plugin-service.module';\nimport { PluginInlineCodeModule } from './plugins/inline-code/inline-code.module';\n\n/**\n * The `NgxEditorjsPluginsModule` provides several additional modules\n * that provide a way to easily plug in block and inline tools for EditorJS.\n *\n * Importing `NgxEditorjsPluginsModule` will include all modules, while it\n * is also possible to import each individual module as required.\n */\n@NgModule({\n  imports: [\n    CommonModule,\n    NgxEditorJSPluginServiceModule,\n    PluginCodeModule,\n    PluginHeaderModule,\n    PluginImageModule,\n    PluginLinkModule,\n    PluginListModule,\n    PluginMarkerModule,\n    PluginParagraphModule,\n    PluginSimpleImageModule,\n    PluginInlineCodeModule\n  ],\n  exports: [\n    NgxEditorJSPluginServiceModule,\n    PluginCodeModule,\n    PluginHeaderModule,\n    PluginImageModule,\n    PluginLinkModule,\n    PluginListModule,\n    PluginMarkerModule,\n    PluginParagraphModule,\n    PluginSimpleImageModule,\n    PluginInlineCodeModule\n  ]\n})\nexport class NgxEditorjsPluginsModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"
    },
    'modules/NgxPluginServiceModule.html': {
      url: 'modules/NgxEditorJSPluginServiceModule.html',
      title: 'module - NgxEditorJSPluginServiceModule',
      body:
        "\n                   \n\n\n\n\n    Modules\n    NgxEditorJSPluginServiceModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_NgxPluginServiceModule\n\n\n\ncluster_NgxPluginServiceModule_providers\n\n\n\n\nNgxEditorJSPluginService\n\nNgxEditorJSPluginService\n\n\n\nNgxEditorJSPluginServiceModule\n\nNgxEditorJSPluginServiceModule\n\nNgxEditorJSPluginServiceModule -->\n\nNgxEditorJSPluginService->NgxEditorJSPluginServiceModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            libs/ngx-editorjs-plugins/src/lib/services/plugin-service.module.ts\n        \n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            NgxEditorJSPluginService\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { NgModule } from '@angular/core';\nimport { EDITOR_JS_TOOL_INJECTOR, PLUGIN_CONFIG, PluginClasses } from '../types/plugins';\nimport { createPluginConfig } from '../util/plugin';\n\nimport { NgxEditorJSPluginService } from './plugin-service.service';\n\n@NgModule({\n  providers: [\n    {\n      provide: PluginClasses,\n      useFactory: createPluginConfig,\n      deps: [PLUGIN_CONFIG, EDITOR_JS_TOOL_INJECTOR]\n    },\n    NgxEditorJSPluginService\n  ]\n})\nexport class NgxEditorJSPluginServiceModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"
    },
    'modules/NgxTinynodesComponentsModule.html': {
      url: 'modules/NgxTinynodesComponentsModule.html',
      title: 'module - NgxTinynodesComponentsModule',
      body:
        "\n                   \n\n\n\n\n    Modules\n    NgxTinynodesComponentsModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_NgxTinynodesComponentsModule\n\n\n\ncluster_NgxTinynodesComponentsModule_imports\n\n\n\ncluster_NgxTinynodesComponentsModule_exports\n\n\n\n\nNgxTinynodesMatJsonOutputModule\n\nNgxTinynodesMatJsonOutputModule\n\n\n\nNgxTinynodesComponentsModule\n\nNgxTinynodesComponentsModule\n\nNgxTinynodesComponentsModule -->\n\nNgxTinynodesMatJsonOutputModule->NgxTinynodesComponentsModule\n\n\n\n\n\nNgxTinynodesMatTagInputModule\n\nNgxTinynodesMatTagInputModule\n\nNgxTinynodesComponentsModule -->\n\nNgxTinynodesMatTagInputModule->NgxTinynodesComponentsModule\n\n\n\n\n\nNgxTinynodesMatJsonOutputModule \n\nNgxTinynodesMatJsonOutputModule \n\nNgxTinynodesMatJsonOutputModule  -->\n\nNgxTinynodesComponentsModule->NgxTinynodesMatJsonOutputModule \n\n\n\n\n\nNgxTinynodesMatTagInputModule \n\nNgxTinynodesMatTagInputModule \n\nNgxTinynodesMatTagInputModule  -->\n\nNgxTinynodesComponentsModule->NgxTinynodesMatTagInputModule \n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            libs/ngx-tinynodes-components/src/lib/ngx-tinynodes-components.module.ts\n        \n\n\n\n\n        \n            \n                \n                    Imports\n                    \n                        \n                            NgxTinynodesMatJsonOutputModule\n                        \n                        \n                            NgxTinynodesMatTagInputModule\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            NgxTinynodesMatJsonOutputModule\n                        \n                        \n                            NgxTinynodesMatTagInputModule\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { NgModule } from '@angular/core';\nimport { NgxTinynodesMatTagInputModule } from './components/mat-tag-input/mat-tag-input.module';\nimport { NgxTinynodesMatJsonOutputModule } from './components/mat-json-output/mat-json-output.module';\n\n@NgModule({\n  imports: [ NgxTinynodesMatTagInputModule, NgxTinynodesMatJsonOutputModule ],\n  exports: [ NgxTinynodesMatTagInputModule, NgxTinynodesMatJsonOutputModule ]\n})\nexport class NgxTinynodesComponentsModule {\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"
    },
    'interfaces/NgxTinynodesMatFieldComponent.html': {
      url: 'interfaces/NgxTinynodesMatFieldComponent.html',
      title: 'interface - NgxTinynodesMatFieldComponent',
      body:
        "\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  NgxTinynodesMatFieldComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            libs/ngx-tinynodes-components/src/lib/types/components.ts\n        \n\n\n            \n                Extends\n            \n            \n                        ControlValueAccessor\n            \n\n\n\n\n    \n\n\n    \n        import { ControlValueAccessor } from '@angular/forms';\nimport { MatFormFieldControl } from '@angular/material';\nimport { AfterContentInit, DoCheck, OnDestroy, OnInit } from '@angular/core';\n\nexport interface NgxTinynodesMatFieldComponent extends ControlValueAccessor,\n  MatFormFieldControl,\n  OnInit,\n  OnDestroy,\n  DoCheck,\n  AfterContentInit {\n}\n\n    \n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"
    },
    'components/NgxTinynodesMatJsonOutputComponent.html': {
      url: 'components/NgxTinynodesMatJsonOutputComponent.html',
      title: 'component - NgxTinynodesMatJsonOutputComponent',
      body:
        "\n                   \n\n\n\n\n\n  Components\n  NgxTinynodesMatJsonOutputComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    libs/ngx-tinynodes-components/src/lib/components/mat-json-output/mat-json-output.component.ts\n\n\n\n\n    \n        Implements\n    \n    \n                    OnChanges\n    \n\n\n\n    Metadata\n    \n        \n\n            \n                changeDetection\n                ChangeDetectionStrategy.OnPush\n            \n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                ngx-tinynodes-mat-json-output\n            \n\n\n\n\n            \n                templateUrl\n                mat-json-output.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngOnChanges\n                            \n                            \n                                    Public\n                                toggleExpand\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                expand\n                            \n                            \n                                json\n                            \n                        \n                    \n                \n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(cd: ChangeDetectorRef)\n                    \n                \n                        \n                            \n                                Defined in libs/ngx-tinynodes-components/src/lib/components/mat-json-output/mat-json-output.component.ts:14\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        cd\n                                                  \n                                                        \n                                                                        ChangeDetectorRef\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        expand\n                    \n                \n                \n                    \n                        Default value : true\n                    \n                \n                        \n                            \n                                    Defined in libs/ngx-tinynodes-components/src/lib/components/mat-json-output/mat-json-output.component.ts:14\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        json\n                    \n                \n                \n                    \n                        Type :         any\n\n                    \n                \n                        \n                            \n                                    Defined in libs/ngx-tinynodes-components/src/lib/components/mat-json-output/mat-json-output.component.ts:11\n                            \n                        \n            \n        \n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngOnChanges\n                        \n                        \n                    \n                \n            \n            \n                \nngOnChanges()\n                \n            \n\n\n            \n                \n                    Defined in libs/ngx-tinynodes-components/src/lib/components/mat-json-output/mat-json-output.component.ts:23\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            toggleExpand\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    toggleExpand()\n                \n            \n\n\n            \n                \n                    Defined in libs/ngx-tinynodes-components/src/lib/components/mat-json-output/mat-json-output.component.ts:19\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n\n\n\n\n    \n        import { ChangeDetectionStrategy, ChangeDetectorRef, Component, Input, OnChanges } from '@angular/core';\n\n@Component({\n  selector: 'ngx-tinynodes-mat-json-output',\n  templateUrl: 'mat-json-output.component.html',\n  changeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class NgxTinynodesMatJsonOutputComponent implements OnChanges {\n\n  @Input()\n  json: any;\n\n  @Input()\n  expand = true;\n\n  constructor(private readonly cd: ChangeDetectorRef) {\n  }\n\n  public toggleExpand() {\n    this.expand = !this.expand;\n  }\n\n  ngOnChanges(): void {\n    this.cd.markForCheck();\n  }\n}\n\n    \n\n    \n        \n  \n    Output\n    Data from the EditorJS instance\n  \n  \n    {{expand ? 'Collapse JSON' : 'Expand JSON'}}\n  \n  \n    \n  \n\n\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '      Output    Data from the EditorJS instance        {{expand ? \\'Collapse JSON\\' : \\'Expand JSON\\'}}          '\n    var COMPONENTS = [{'name': 'NgxEditorJSComponent', 'selector': 'ngx-editorjs'},{'name': 'NgxEditorJSMatFieldComponent', 'selector': 'ngx-editorjs-mat-field'},{'name': 'NgxTinynodesMatJsonOutputComponent', 'selector': 'ngx-tinynodes-mat-json-output'},{'name': 'NgxTinynodesMatTagInputComponent', 'selector': 'ngx-tinynodes-mat-tag-input'}];\n    var DIRECTIVES = [{'name': 'NgxEditorJSDirective', 'selector': '[ngxEditorJS]'}];\n    var ACTUAL_COMPONENT = {'name': 'NgxTinynodesMatJsonOutputComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"
    },
    'modules/NgxTinynodesMatJsonOutputModule.html': {
      url: 'modules/NgxTinynodesMatJsonOutputModule.html',
      title: 'module - NgxTinynodesMatJsonOutputModule',
      body:
        "\n                   \n\n\n\n\n    Modules\n    NgxTinynodesMatJsonOutputModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_NgxTinynodesMatJsonOutputModule\n\n\n\ncluster_NgxTinynodesMatJsonOutputModule_declarations\n\n\n\ncluster_NgxTinynodesMatJsonOutputModule_exports\n\n\n\n\nNgxTinynodesMatJsonOutputComponent\n\nNgxTinynodesMatJsonOutputComponent\n\n\n\nNgxTinynodesMatJsonOutputModule\n\nNgxTinynodesMatJsonOutputModule\n\nNgxTinynodesMatJsonOutputModule -->\n\nNgxTinynodesMatJsonOutputComponent->NgxTinynodesMatJsonOutputModule\n\n\n\n\n\nNgxTinynodesMatJsonOutputComponent \n\nNgxTinynodesMatJsonOutputComponent \n\nNgxTinynodesMatJsonOutputComponent  -->\n\nNgxTinynodesMatJsonOutputModule->NgxTinynodesMatJsonOutputComponent \n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            libs/ngx-tinynodes-components/src/lib/components/mat-json-output/mat-json-output.module.ts\n        \n\n\n\n\n        \n            \n                \n                    Declarations\n                    \n                        \n                            NgxTinynodesMatJsonOutputComponent\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            NgxTinynodesMatJsonOutputComponent\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { NgModule } from '@angular/core';\nimport { NgxTinynodesMatJsonOutputComponent } from './mat-json-output.component';\nimport { CommonModule } from '@angular/common';\nimport { MatButtonModule, MatCardModule } from '@angular/material';\nimport { NgxJsonViewerModule } from 'ngx-json-viewer';\n\n@NgModule({\n  imports: [CommonModule, MatCardModule, MatButtonModule, NgxJsonViewerModule],\n  declarations: [ NgxTinynodesMatJsonOutputComponent ],\n  exports: [ NgxTinynodesMatJsonOutputComponent ]\n})\nexport class NgxTinynodesMatJsonOutputModule {\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"
    },
    'modules/NgxTinynodesMatTagInputModule.html': {
      url: 'modules/NgxTinynodesMatTagInputModule.html',
      title: 'module - NgxTinynodesMatTagInputModule',
      body:
        "\n                   \n\n\n\n\n    Modules\n    NgxTinynodesMatTagInputModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_NgxTinynodesMatTagInputModule\n\n\n\ncluster_NgxTinynodesMatTagInputModule_declarations\n\n\n\ncluster_NgxTinynodesMatTagInputModule_NgxTinynodesMatTagInputComponent_providers\n\n\n\ncluster_NgxTinynodesMatTagInputModule_exports\n\n\n\n\nNgxTinynodesMatTagInputComponent\n\nNgxTinynodesMatTagInputComponent\n\n\n\nNgxTinynodesMatTagInputModule\n\nNgxTinynodesMatTagInputModule\n\nNgxTinynodesMatTagInputModule -->\n\nNgxTinynodesMatTagInputComponent->NgxTinynodesMatTagInputModule\n\n\n\n\n\nNgxTinynodesMatTagInputComponent \n\nNgxTinynodesMatTagInputComponent \n\nNgxTinynodesMatTagInputComponent  -->\n\nNgxTinynodesMatTagInputModule->NgxTinynodesMatTagInputComponent \n\n\n\n\n\nTAG_COMPONENT_VALUE_ACCESSOR\n\nTAG_COMPONENT_VALUE_ACCESSOR\n\nNgxTinynodesMatTagInputComponent -->\n\nTAG_COMPONENT_VALUE_ACCESSOR->NgxTinynodesMatTagInputComponent\n\n\n\n\n\nTAG_COMPONENT_FIELD_CONTROL\n\nTAG_COMPONENT_FIELD_CONTROL\n\nNgxTinynodesMatTagInputComponent -->\n\nTAG_COMPONENT_FIELD_CONTROL->NgxTinynodesMatTagInputComponent\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            libs/ngx-tinynodes-components/src/lib/components/mat-tag-input/mat-tag-input.module.ts\n        \n\n\n\n\n        \n            \n                \n                    Declarations\n                    \n                        \n                            NgxTinynodesMatTagInputComponent\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            NgxTinynodesMatTagInputComponent\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { NgModule } from '@angular/core';\nimport { NgxTinynodesMatTagInputComponent } from './mat-tag-input.component';\nimport { MatChipsModule, MatIconModule } from '@angular/material';\nimport { FormsModule } from '@angular/forms';\nimport { CommonModule } from '@angular/common';\n\n@NgModule({\n  imports: [FormsModule,CommonModule, MatChipsModule, MatIconModule],\n  declarations: [ NgxTinynodesMatTagInputComponent ],\n  exports: [ NgxTinynodesMatTagInputComponent ]\n})\nexport class NgxTinynodesMatTagInputModule {\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"
    },
    'interfaces/Paragraph.html': {
      url: 'interfaces/Paragraph.html',
      title: 'interface - Paragraph',
      body:
        "\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  Paragraph\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            libs/ngx-editorjs/src/lib/types/blocks.ts\n        \n\n            \n                Description\n            \n            \n                Default data type for a paragraph block\n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        text\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        text\n                                    \n                                \n                                \n                                    \n                                        text:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    The paragraph text\n\n                                \n                            \n                        \n                    \n            \n    \n\n\n    \n        export interface Block {\n  /**\n   * The EditorJS block type\n   */\n  type: string;\n\n  /**\n   * The data interface for the block type\n   */\n  data: T;\n\n  /**\n   * Additional properties on the type\n   */\n  [key: string]: any;\n}\n\n/**\n * Available list styles, supports `ordered` and `unordered`.\n * A custom string can also be added\n */\nexport type ListStyle = 'ordered' | 'unordered' | string;\n\n/**\n * Default data type for a list block\n */\nexport interface List {\n  /**\n   * The list style\n   */\n  style: ListStyle;\n  /**\n   * List items of type T\n   */\n  items: T[];\n}\n\n/**\n * The default list block is provided by the EditorJS list plugin\n */\nexport interface ListBlock extends Block> {\n  /**\n   * The EditorJS block type\n   */\n  type: 'list';\n}\n\n/**\n * Default data type for a paragraph block\n */\ninterface Paragraph {\n  /**\n   * The paragraph text\n   */\n  text: string;\n}\n\n/**\n * Interface for a paragraph block\n */\nexport interface ParagraphBlock extends Block {\n  /**\n   * The EditorJS block type\n   */\n  type: 'paragraph';\n}\n\n/**\n * Default data type for a header block\n */\ninterface Header {\n  /**\n   * The header text\n   */\n  text: string;\n  /**\n   * The header level from 1-6\n   */\n  level: number;\n}\n\n/**\n * Interface for a header block\n */\nexport interface HeaderBlock extends Block {\n  /**\n   * The EditorJS block type\n   */\n  type: 'header';\n}\n\n/**\n * Default data type for a header block\n */\nexport interface Image {\n  /**\n   * The image URL\n   */\n  url: string;\n  /**\n   * Optional image caption\n   */\n  caption?: string;\n  /**\n   * Optional border property\n   */\n  withBorder?: boolean;\n\n  /**\n   * Optional background property\n   */\n  withBackground?: boolean;\n\n  /**\n   * Optional stretch property\n   */\n  stretched?: boolean;\n}\n\n/**\n * Interface for a image block\n */\nexport interface ImageBlock extends Block {\n  /**\n   * The EditorJS block type\n   */\n  type: 'image';\n}\n\n/**\n * Type of all the basic block type\n */\nexport type BlockTypes = ParagraphBlock | HeaderBlock | ImageBlock | ListBlock | Block;\n\n    \n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"
    },
    'interfaces/ParagraphBlock.html': {
      url: 'interfaces/ParagraphBlock.html',
      title: 'interface - ParagraphBlock',
      body:
        "\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  ParagraphBlock\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            libs/ngx-editorjs/src/lib/types/blocks.ts\n        \n\n            \n                Description\n            \n            \n                Interface for a paragraph block\n\n            \n\n            \n                Extends\n            \n            \n                        Block\n            \n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        type\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        type\n                                    \n                                \n                                \n                                    \n                                        type:     \n\n                                    \n                                \n\n\n\n\n\n\n\n                            \n                                \n                                    The EditorJS block type\n\n                                \n                            \n                        \n                    \n            \n    \n\n\n    \n        export interface Block {\n  /**\n   * The EditorJS block type\n   */\n  type: string;\n\n  /**\n   * The data interface for the block type\n   */\n  data: T;\n\n  /**\n   * Additional properties on the type\n   */\n  [key: string]: any;\n}\n\n/**\n * Available list styles, supports `ordered` and `unordered`.\n * A custom string can also be added\n */\nexport type ListStyle = 'ordered' | 'unordered' | string;\n\n/**\n * Default data type for a list block\n */\nexport interface List {\n  /**\n   * The list style\n   */\n  style: ListStyle;\n  /**\n   * List items of type T\n   */\n  items: T[];\n}\n\n/**\n * The default list block is provided by the EditorJS list plugin\n */\nexport interface ListBlock extends Block> {\n  /**\n   * The EditorJS block type\n   */\n  type: 'list';\n}\n\n/**\n * Default data type for a paragraph block\n */\ninterface Paragraph {\n  /**\n   * The paragraph text\n   */\n  text: string;\n}\n\n/**\n * Interface for a paragraph block\n */\nexport interface ParagraphBlock extends Block {\n  /**\n   * The EditorJS block type\n   */\n  type: 'paragraph';\n}\n\n/**\n * Default data type for a header block\n */\ninterface Header {\n  /**\n   * The header text\n   */\n  text: string;\n  /**\n   * The header level from 1-6\n   */\n  level: number;\n}\n\n/**\n * Interface for a header block\n */\nexport interface HeaderBlock extends Block {\n  /**\n   * The EditorJS block type\n   */\n  type: 'header';\n}\n\n/**\n * Default data type for a header block\n */\nexport interface Image {\n  /**\n   * The image URL\n   */\n  url: string;\n  /**\n   * Optional image caption\n   */\n  caption?: string;\n  /**\n   * Optional border property\n   */\n  withBorder?: boolean;\n\n  /**\n   * Optional background property\n   */\n  withBackground?: boolean;\n\n  /**\n   * Optional stretch property\n   */\n  stretched?: boolean;\n}\n\n/**\n * Interface for a image block\n */\nexport interface ImageBlock extends Block {\n  /**\n   * The EditorJS block type\n   */\n  type: 'image';\n}\n\n/**\n * Type of all the basic block type\n */\nexport type BlockTypes = ParagraphBlock | HeaderBlock | ImageBlock | ListBlock | Block;\n\n    \n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"
    },
    'modules/PluginCodeModule.html': {
      url: 'modules/PluginCodeModule.html',
      title: 'module - PluginCodeModule',
      body:
        "\n                   \n\n\n\n\n    Modules\n    PluginCodeModule\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            libs/ngx-editorjs-plugins/src/lib/plugins/code/code.module.ts\n        \n\n\n        \n            Description\n        \n        \n            A module that provides the default EditorJS  block tool.\nSee the GitHub repo for API details\n\n        \n\n\n        \n            \n            \n        \n\n\n    \n\n\n    \n        import { NgModule } from '@angular/core';\nimport { EDITOR_JS_TOOL_INJECTOR, PLUGIN_CONFIG, PluginClasses, PluginTypes } from '../../types/plugins';\nimport Code from '@editorjs/code';\nimport { createPluginConfig } from '../../util/plugin';\n\n/**\n * A module that provides the default EditorJS `` block tool.\n * See [the GitHub repo](https://github.com/editor-js/code) for API details\n */\n@NgModule({\n  providers: [\n    {\n      provide: EDITOR_JS_TOOL_INJECTOR,\n      useValue: Code,\n      multi: true\n    },\n    {\n      provide: PLUGIN_CONFIG,\n      useValue: {\n        key: 'code',\n        type: PluginTypes.Block,\n        pluginName: 'EditorJS Code'\n      },\n      multi: true\n    }\n  ]\n})\nexport class PluginCodeModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"
    },
    'interfaces/PluginConfig.html': {
      url: 'interfaces/PluginConfig.html',
      title: 'interface - PluginConfig',
      body:
        "\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  PluginConfig\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            libs/ngx-editorjs-plugins/src/lib/types/plugins.ts\n        \n\n            \n                Description\n            \n            \n                A plugin configuration object\n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                            Optional\n                                        blockData\n                                \n                                \n                                            Optional\n                                        config\n                                \n                                \n                                            Optional\n                                        description\n                                \n                                \n                                        key\n                                \n                                \n                                        plugin\n                                \n                                \n                                        pluginName\n                                \n                                \n                                            Optional\n                                        shortcut\n                                \n                                \n                                        type\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        blockData\n                                    \n                                \n                                \n                                    \n                                        blockData:         BlockData\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         BlockData\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    Optional block data, used to define the block data for this type\nand used as a default\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        config\n                                    \n                                \n                                \n                                    \n                                        config:         any\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         any\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    Optional  custom configuration to pass to EditorJS\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        description\n                                    \n                                \n                                \n                                    \n                                        description:         PluginProperty\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         PluginProperty\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    Optional description for the plugin\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        key\n                                    \n                                \n                                \n                                    \n                                        key:         PluginProperty\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         PluginProperty\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    The key to use for the plugin\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        plugin\n                                    \n                                \n                                \n                                    \n                                        plugin:         EditorJSPlugin | undefined\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         EditorJSPlugin | undefined\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    The plugin for the editor\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        pluginName\n                                    \n                                \n                                \n                                    \n                                        pluginName:         PluginProperty\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         PluginProperty\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Label for displaying the plugin name\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        shortcut\n                                    \n                                \n                                \n                                    \n                                        shortcut:         PluginProperty\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         PluginProperty\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    Optional shortcut for the plugin\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        type\n                                    \n                                \n                                \n                                    \n                                        type:         PluginProperty\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         PluginProperty\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Specifies the type of plugin for the plugin provider\n\n                                \n                            \n                        \n                    \n            \n    \n\n\n    \n        import { InjectionToken } from '@angular/core';\nimport { ToolSettings, ToolConstructable } from '@editorjs/editorjs';\n\n/**\n * Block Data interface\n */\nexport interface BlockData {\n  [key: string]: any;\n}\n\n/**\n * The types of plugins supported, currently block and inline\n */\nexport enum PluginTypes {\n  /**\n   * A EditorJS block plugin\n   */\n  Block = 'block',\n  /**\n   * A EditorJS inline plugin\n   */\n  Inline = 'inline'\n}\n\n/**\n * The types of plugins supported via the plugin `type` property\n */\nexport type PluginType = PluginTypes.Block | PluginTypes.Inline | string;\n\n/**\n * A plugin property\n */\nexport type PluginProperty = string;\n\n/**\n * The EditorJS tool settings for this plugin\n */\nexport type EditorJSPlugin = ToolConstructable | ToolSettings;\n\n/**\n * A map of all the tools settings\n */\nexport interface ToolSettingsMap {\n  /**\n   * The key of the plugin and the plugin exported tool settings\n   */\n  [key: string]: EditorJSPlugin;\n}\n\n/**\n * A plugin configuration object\n */\nexport interface PluginConfig {\n  /**\n   * Specifies the type of plugin for the plugin provider\n   */\n  type: PluginProperty;\n  /**\n   * The key to use for the plugin\n   */\n  key: PluginProperty;\n  /**\n   * Label for displaying the plugin name\n   */\n  pluginName: PluginProperty;\n  /**\n   * Optional description for the plugin\n   */\n  description?: PluginProperty;\n  /**\n   * Optional shortcut for the plugin\n   */\n  shortcut?: PluginProperty;\n  /**\n   * Optional {@link https://editorjs.io/provide-custom-configuration | custom configuration} to pass to EditorJS\n   */\n  config?: any;\n  /**\n   * Optional block data, used to define the block data for this type\n   * and used as a default\n   */\n  blockData?: BlockData;\n  /**\n   * The plugin for the editor\n   */\n  plugin: EditorJSPlugin | undefined;\n}\n\n/**\n * The Injection token for initial plugins as defined in the ngx-editorjs module\n */\nexport const EDITOR_JS_TOOL_INJECTOR = new InjectionToken('EDITOR_JS_TOOL_INJECTOR');\n\n/**\n * Injection token for a plugin config\n */\nexport const PLUGIN_CONFIG = new InjectionToken('PLUGIN_CONFIG');\n\n/**\n * A map of plugin configs\n */\nexport interface PluginConfigMap {\n  /**\n   * A plugin config per key\n   */\n  [key: string]: PluginConfig;\n}\n\n/**\n * Injection token for the plugin config map\n */\nexport const PluginClasses = new InjectionToken('PluginClasses');\n\n    \n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"
    },
    'interfaces/PluginConfigMap.html': {
      url: 'interfaces/PluginConfigMap.html',
      title: 'interface - PluginConfigMap',
      body:
        "\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  PluginConfigMap\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            libs/ngx-editorjs-plugins/src/lib/types/plugins.ts\n        \n\n            \n                Description\n            \n            \n                A map of plugin configs\n\n            \n\n\n\n\n            \n    Indexable\n        \n            \n                \n                    \n                        [key: string]:        PluginConfig\n\n                    \n                \n                        \n                            \n                                Defined in libs/ngx-editorjs-plugins/src/lib/types/plugins.ts:102\n                            \n                        \n                \n                    \n                        A plugin config per key\n\n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { InjectionToken } from '@angular/core';\nimport { ToolSettings, ToolConstructable } from '@editorjs/editorjs';\n\n/**\n * Block Data interface\n */\nexport interface BlockData {\n  [key: string]: any;\n}\n\n/**\n * The types of plugins supported, currently block and inline\n */\nexport enum PluginTypes {\n  /**\n   * A EditorJS block plugin\n   */\n  Block = 'block',\n  /**\n   * A EditorJS inline plugin\n   */\n  Inline = 'inline'\n}\n\n/**\n * The types of plugins supported via the plugin `type` property\n */\nexport type PluginType = PluginTypes.Block | PluginTypes.Inline | string;\n\n/**\n * A plugin property\n */\nexport type PluginProperty = string;\n\n/**\n * The EditorJS tool settings for this plugin\n */\nexport type EditorJSPlugin = ToolConstructable | ToolSettings;\n\n/**\n * A map of all the tools settings\n */\nexport interface ToolSettingsMap {\n  /**\n   * The key of the plugin and the plugin exported tool settings\n   */\n  [key: string]: EditorJSPlugin;\n}\n\n/**\n * A plugin configuration object\n */\nexport interface PluginConfig {\n  /**\n   * Specifies the type of plugin for the plugin provider\n   */\n  type: PluginProperty;\n  /**\n   * The key to use for the plugin\n   */\n  key: PluginProperty;\n  /**\n   * Label for displaying the plugin name\n   */\n  pluginName: PluginProperty;\n  /**\n   * Optional description for the plugin\n   */\n  description?: PluginProperty;\n  /**\n   * Optional shortcut for the plugin\n   */\n  shortcut?: PluginProperty;\n  /**\n   * Optional {@link https://editorjs.io/provide-custom-configuration | custom configuration} to pass to EditorJS\n   */\n  config?: any;\n  /**\n   * Optional block data, used to define the block data for this type\n   * and used as a default\n   */\n  blockData?: BlockData;\n  /**\n   * The plugin for the editor\n   */\n  plugin: EditorJSPlugin | undefined;\n}\n\n/**\n * The Injection token for initial plugins as defined in the ngx-editorjs module\n */\nexport const EDITOR_JS_TOOL_INJECTOR = new InjectionToken('EDITOR_JS_TOOL_INJECTOR');\n\n/**\n * Injection token for a plugin config\n */\nexport const PLUGIN_CONFIG = new InjectionToken('PLUGIN_CONFIG');\n\n/**\n * A map of plugin configs\n */\nexport interface PluginConfigMap {\n  /**\n   * A plugin config per key\n   */\n  [key: string]: PluginConfig;\n}\n\n/**\n * Injection token for the plugin config map\n */\nexport const PluginClasses = new InjectionToken('PluginClasses');\n\n    \n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"
    },
    'modules/PluginHeaderModule.html': {
      url: 'modules/PluginHeaderModule.html',
      title: 'module - PluginHeaderModule',
      body:
        "\n                   \n\n\n\n\n    Modules\n    PluginHeaderModule\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            libs/ngx-editorjs-plugins/src/lib/plugins/header/header.module.ts\n        \n\n\n        \n            Description\n        \n        \n            A module that provides the default EditorJS header block tool.\nSee the GitHub repo for API details\n\n        \n\n\n        \n            \n            \n        \n\n\n    \n\n\n    \n        import { NgModule } from '@angular/core';\nimport { EDITOR_JS_TOOL_INJECTOR, PLUGIN_CONFIG, PluginTypes } from '../../types/plugins';\nimport Header from '@editorjs/header';\n\n\n//TODO: Remove once Header plugin has been fixed\n\nexport class FixedHeader extends Header {\n  constructor(config: any) {\n    super(config);\n  }\n\n  /**\n   * Fixed version of the function to normalize input data\n   * @param data The data for the header\n   * @returns The new header data\n   */\n  normalizeData(data: any = {}) {\n    const newData: any = {};\n    newData.text = data.text || '';\n    newData.level = parseInt(data.level, 10) || (this as any).defaultLevel.number;\n    return newData;\n  }\n}\n\n/**\n * A module that provides the default EditorJS header block tool.\n * See [the GitHub repo](https://github.com/editor-js/header) for API details\n */\n@NgModule({\n  providers: [\n    {\n      provide: EDITOR_JS_TOOL_INJECTOR,\n      useValue: FixedHeader,\n      multi: true\n    },\n    {\n      provide: PLUGIN_CONFIG,\n      useValue: {\n        key: 'header',\n        type: PluginTypes.Block,\n        pluginName: 'EditorJS Header'\n      },\n      multi: true\n    }\n  ]\n})\nexport class PluginHeaderModule {\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"
    },
    'modules/PluginImageModule.html': {
      url: 'modules/PluginImageModule.html',
      title: 'module - PluginImageModule',
      body:
        "\n                   \n\n\n\n\n    Modules\n    PluginImageModule\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            libs/ngx-editorjs-plugins/src/lib/plugins/image/image.module.ts\n        \n\n\n        \n            Description\n        \n        \n            A module that provides the default EditorJS  block tool.\nSee the GitHub repo for API details\n\n        \n\n\n        \n            \n            \n        \n\n\n    \n\n\n    \n        import { NgModule } from '@angular/core';\nimport { EDITOR_JS_TOOL_INJECTOR, PLUGIN_CONFIG, PluginClasses, PluginTypes } from '../../types/plugins';\n\nimport Image from '@editorjs/image';\nimport { createPluginConfig } from '../../util/plugin';\n\n/**\n * A module that provides the default EditorJS `` block tool.\n * See [the GitHub repo](https://github.com/editor-js/image) for API details\n */\n@NgModule({\n  providers: [\n    {\n      provide: EDITOR_JS_TOOL_INJECTOR,\n      useValue: Image,\n      multi: true\n    },\n    {\n      provide: PLUGIN_CONFIG,\n      useValue: {\n        key: 'image',\n        type: PluginTypes.Block,\n        pluginName: 'EditorJS Image'\n      },\n      multi: true\n    }\n  ]\n})\nexport class PluginImageModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"
    },
    'modules/PluginInlineCodeModule.html': {
      url: 'modules/PluginInlineCodeModule.html',
      title: 'module - PluginInlineCodeModule',
      body:
        "\n                   \n\n\n\n\n    Modules\n    PluginInlineCodeModule\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            libs/ngx-editorjs-plugins/src/lib/plugins/inline-code/inline-code.module.ts\n        \n\n\n        \n            Description\n        \n        \n            A module that provides the default EditorJS  block tool.\nSee the GitHub repo for API details\n\n        \n\n\n        \n            \n            \n        \n\n\n    \n\n\n    \n        import { NgModule } from '@angular/core';\nimport { EDITOR_JS_TOOL_INJECTOR, PLUGIN_CONFIG, PluginTypes } from '../../types/plugins';\nimport InlineCode from '@editorjs/inline-code';\n\n/**\n * A module that provides the default EditorJS `` block tool.\n * See [the GitHub repo](https://github.com/editor-js/paragraph) for API details\n */\n@NgModule({\n  providers: [\n    {\n      provide: EDITOR_JS_TOOL_INJECTOR,\n      useValue: InlineCode,\n      multi: true\n    },\n    {\n      provide: PLUGIN_CONFIG,\n      useValue: {\n        key: 'inline-code',\n        type: PluginTypes.Inline,\n        pluginName: 'EditorJS Inline Code',\n        shortcut: 'CTRL+SHIFT+C'\n      },\n      multi: true\n    }\n  ]\n})\nexport class PluginInlineCodeModule {\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"
    },
    'modules/PluginLinkModule.html': {
      url: 'modules/PluginLinkModule.html',
      title: 'module - PluginLinkModule',
      body:
        "\n                   \n\n\n\n\n    Modules\n    PluginLinkModule\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            libs/ngx-editorjs-plugins/src/lib/plugins/link/link.module.ts\n        \n\n\n        \n            Description\n        \n        \n            A module that provides the default EditorJS  block tool.\nSee the GitHub repo for API details\n\n        \n\n\n        \n            \n            \n        \n\n\n    \n\n\n    \n        import { NgModule } from '@angular/core';\nimport { EDITOR_JS_TOOL_INJECTOR, PLUGIN_CONFIG, PluginClasses, PluginTypes } from '../../types/plugins';\n\nimport Link from '@editorjs/link';\nimport { createPluginConfig } from '../../util/plugin';\n\n/**\n * A module that provides the default EditorJS `` block tool.\n * See [the GitHub repo](https://github.com/editor-js/image) for API details\n */\n@NgModule({\n  providers: [\n    {\n      provide: EDITOR_JS_TOOL_INJECTOR,\n      useValue: Link,\n      multi: true\n    },\n    {\n      provide: PLUGIN_CONFIG,\n      useValue: {\n        key: 'link',\n        type: PluginTypes.Block,\n        pluginName: 'EditorJS Link'\n      },\n      multi: true\n    }\n  ]\n})\nexport class PluginLinkModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"
    },
    'modules/PluginListModule.html': {
      url: 'modules/PluginListModule.html',
      title: 'module - PluginListModule',
      body:
        "\n                   \n\n\n\n\n    Modules\n    PluginListModule\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            libs/ngx-editorjs-plugins/src/lib/plugins/list/list.module.ts\n        \n\n\n        \n            Description\n        \n        \n            A module that provides the default EditorJS  block tool.\nSee the GitHub repo for API details\n\n        \n\n\n        \n            \n            \n        \n\n\n    \n\n\n    \n        import { NgModule } from '@angular/core';\nimport { EDITOR_JS_TOOL_INJECTOR, PLUGIN_CONFIG, PluginClasses, PluginTypes } from '../../types/plugins';\n\nimport List from '@editorjs/list';\nimport { createPluginConfig } from '../../util/plugin';\n\n/**\n * A module that provides the default EditorJS `` block tool.\n * See [the GitHub repo](https://github.com/editor-js/image) for API details\n */\n@NgModule({\n  providers: [\n    {\n      provide: EDITOR_JS_TOOL_INJECTOR,\n      useValue: List,\n      multi: true\n    },\n    {\n      provide: PLUGIN_CONFIG,\n      useValue: {\n        key: 'list',\n        type: PluginTypes.Block,\n        pluginName: 'EditorJS List'\n      },\n      multi: true\n    }\n  ]\n})\nexport class PluginListModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"
    },
    'modules/PluginMarkerModule.html': {
      url: 'modules/PluginMarkerModule.html',
      title: 'module - PluginMarkerModule',
      body:
        "\n                   \n\n\n\n\n    Modules\n    PluginMarkerModule\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            libs/ngx-editorjs-plugins/src/lib/plugins/marker/marker.module.ts\n        \n\n\n        \n            Description\n        \n        \n            A module that provides the default EditorJS  block tool.\nSee the GitHub repo for API details\n\n        \n\n\n        \n            \n            \n        \n\n\n    \n\n\n    \n        import { NgModule } from '@angular/core';\nimport { EDITOR_JS_TOOL_INJECTOR, PLUGIN_CONFIG, PluginClasses, PluginTypes } from '../../types/plugins';\nimport Marker from '@editorjs/paragraph';\nimport { createPluginConfig } from '../../util/plugin';\n\n/**\n * A module that provides the default EditorJS `` block tool.\n * See [the GitHub repo](https://github.com/editor-js/paragraph) for API details\n */\n@NgModule({\n  providers: [\n    {\n      provide: EDITOR_JS_TOOL_INJECTOR,\n      useValue: Marker,\n      multi: true\n    },\n    {\n      provide: PLUGIN_CONFIG,\n      useValue: {\n        key: 'paragraph',\n        type: PluginTypes.Inline,\n        pluginName: 'EditorJS Marker',\n        shortcut: 'CTRL+SHIFT+M'\n      },\n      multi: true\n    }\n  ]\n})\nexport class PluginMarkerModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"
    },
    'modules/PluginParagraphModule.html': {
      url: 'modules/PluginParagraphModule.html',
      title: 'module - PluginParagraphModule',
      body:
        "\n                   \n\n\n\n\n    Modules\n    PluginParagraphModule\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            libs/ngx-editorjs-plugins/src/lib/plugins/paragraph/paragraph.module.ts\n        \n\n\n        \n            Description\n        \n        \n            A module that provides the default EditorJS  block tool.\nSee the GitHub repo for API details\n\n        \n\n\n        \n            \n            \n        \n\n\n    \n\n\n    \n        import { NgModule } from '@angular/core';\nimport { EDITOR_JS_TOOL_INJECTOR, PLUGIN_CONFIG, PluginTypes } from '../../types/plugins';\nimport Paragraph from '@editorjs/paragraph';\n\n/**\n * A module that provides the default EditorJS `` block tool.\n * See [the GitHub repo](https://github.com/editor-js/paragraph) for API details\n */\n@NgModule({\n  providers: [\n    {\n      provide: EDITOR_JS_TOOL_INJECTOR,\n      useValue: Paragraph,\n      multi: true\n    },\n    {\n      provide: PLUGIN_CONFIG,\n      useValue: {\n        key: 'paragraph',\n        type: PluginTypes.Block,\n        pluginName: 'EditorJS Paragraph'\n      },\n      multi: true\n    }\n  ]\n})\nexport class PluginParagraphModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"
    },
    'modules/PluginSimpleImageModule.html': {
      url: 'modules/PluginSimpleImageModule.html',
      title: 'module - PluginSimpleImageModule',
      body:
        "\n                   \n\n\n\n\n    Modules\n    PluginSimpleImageModule\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            libs/ngx-editorjs-plugins/src/lib/plugins/simple-image/simple-image.module.ts\n        \n\n\n        \n            Description\n        \n        \n            A module that provides the default EditorJS  block tool.\nSee the GitHub repo for API details\n\n        \n\n\n        \n            \n            \n        \n\n\n    \n\n\n    \n        import { NgModule } from '@angular/core';\nimport { EDITOR_JS_TOOL_INJECTOR, PLUGIN_CONFIG, PluginClasses, PluginTypes } from '../../types/plugins';\n\nimport SimpleImage from '@editorjs/simple-image';\nimport { createPluginConfig } from '../../util/plugin';\n\n/**\n * A module that provides the default EditorJS `` block tool.\n * See [the GitHub repo](https://github.com/editor-js/image) for API details\n */\n@NgModule({\n  providers: [\n    {\n      provide: EDITOR_JS_TOOL_INJECTOR,\n      useValue: SimpleImage,\n      multi: true\n    },\n    {\n      provide: PLUGIN_CONFIG,\n      useValue: {\n        key: 'simpleimage',\n        type: PluginTypes.Block,\n        pluginName: 'EditorJS Simple Image'\n      },\n      multi: true\n    }\n  ]\n})\nexport class PluginSimpleImageModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"
    },
    'interfaces/ReadyMap.html': {
      url: 'interfaces/ReadyMap.html',
      title: 'interface - ReadyMap',
      body:
        "\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  ReadyMap\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            libs/ngx-editorjs/src/lib/types/maps.ts\n        \n\n            \n                Description\n            \n            \n                A map containing BehaviorSubject values of the ready state of EditorJS\n\n            \n\n\n\n\n            \n    Indexable\n        \n            \n                \n                    \n                        [key: string]:    BehaviorSubject\n\n                    \n                \n                        \n                            \n                                Defined in libs/ngx-editorjs/src/lib/types/maps.ts:18\n                            \n                        \n                \n                    \n                        A map key containing a BehaviorSubject\n\n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import EditorJS, { OutputData } from '@editorjs/editorjs';\nimport { BehaviorSubject } from 'rxjs';\nimport { Block } from './blocks';\n\n/**\n * A map containing instances of `BehaviorSubject`\n */\nexport interface EditorMap {\n  /**\n   * A map key containing `BehaviorSubject`\n   */\n  [key: string]: BehaviorSubject;\n}\n\n/**\n * A map containing `BehaviorSubject` values of the ready state of EditorJS\n */\nexport interface ReadyMap {\n  /**\n   * A map key containing a `BehaviorSubject`\n   */\n  [key: string]: BehaviorSubject;\n}\n\n/**\n * A map containing `BehaviorSubject` values of the save state of EditorJS\n */\nexport interface SavedMap {\n  /**\n   * A map key containing a `BehaviorSubject`\n   */\n  [key: string]: BehaviorSubject;\n}\n\n/**\n * An EditorJS change event\n */\nexport interface EditorJSChange {\n  /**\n   * Time of the change\n   */\n  time: number;\n  /**\n   * Blocks in the change\n   */\n  blocks: Block[];\n}\n\n/**\n * A map containing `BehaviorSubject` which is the last save from the EditorJS instance\n */\nexport interface ChangeMap {\n  /**\n   * A map key containing a `BehaviorSubject`\n   */\n  [key: string]: BehaviorSubject;\n}\n\n    \n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"
    },
    'interfaces/SavedMap.html': {
      url: 'interfaces/SavedMap.html',
      title: 'interface - SavedMap',
      body:
        "\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  SavedMap\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            libs/ngx-editorjs/src/lib/types/maps.ts\n        \n\n            \n                Description\n            \n            \n                A map containing BehaviorSubject values of the save state of EditorJS\n\n            \n\n\n\n\n            \n    Indexable\n        \n            \n                \n                    \n                        [key: string]:    BehaviorSubject\n\n                    \n                \n                        \n                            \n                                Defined in libs/ngx-editorjs/src/lib/types/maps.ts:28\n                            \n                        \n                \n                    \n                        A map key containing a BehaviorSubject\n\n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import EditorJS, { OutputData } from '@editorjs/editorjs';\nimport { BehaviorSubject } from 'rxjs';\nimport { Block } from './blocks';\n\n/**\n * A map containing instances of `BehaviorSubject`\n */\nexport interface EditorMap {\n  /**\n   * A map key containing `BehaviorSubject`\n   */\n  [key: string]: BehaviorSubject;\n}\n\n/**\n * A map containing `BehaviorSubject` values of the ready state of EditorJS\n */\nexport interface ReadyMap {\n  /**\n   * A map key containing a `BehaviorSubject`\n   */\n  [key: string]: BehaviorSubject;\n}\n\n/**\n * A map containing `BehaviorSubject` values of the save state of EditorJS\n */\nexport interface SavedMap {\n  /**\n   * A map key containing a `BehaviorSubject`\n   */\n  [key: string]: BehaviorSubject;\n}\n\n/**\n * An EditorJS change event\n */\nexport interface EditorJSChange {\n  /**\n   * Time of the change\n   */\n  time: number;\n  /**\n   * Blocks in the change\n   */\n  blocks: Block[];\n}\n\n/**\n * A map containing `BehaviorSubject` which is the last save from the EditorJS instance\n */\nexport interface ChangeMap {\n  /**\n   * A map key containing a `BehaviorSubject`\n   */\n  [key: string]: BehaviorSubject;\n}\n\n    \n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"
    },
    'interfaces/ToolSettingsMap.html': {
      url: 'interfaces/ToolSettingsMap.html',
      title: 'interface - ToolSettingsMap',
      body:
        "\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  ToolSettingsMap\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            libs/ngx-editorjs-plugins/src/lib/types/plugins.ts\n        \n\n            \n                Description\n            \n            \n                A map of all the tools settings\n\n            \n\n\n\n\n            \n    Indexable\n        \n            \n                \n                    \n                        [key: string]:        EditorJSPlugin\n\n                    \n                \n                        \n                            \n                                Defined in libs/ngx-editorjs-plugins/src/lib/types/plugins.ts:43\n                            \n                        \n                \n                    \n                        The key of the plugin and the plugin exported tool settings\n\n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { InjectionToken } from '@angular/core';\nimport { ToolSettings, ToolConstructable } from '@editorjs/editorjs';\n\n/**\n * Block Data interface\n */\nexport interface BlockData {\n  [key: string]: any;\n}\n\n/**\n * The types of plugins supported, currently block and inline\n */\nexport enum PluginTypes {\n  /**\n   * A EditorJS block plugin\n   */\n  Block = 'block',\n  /**\n   * A EditorJS inline plugin\n   */\n  Inline = 'inline'\n}\n\n/**\n * The types of plugins supported via the plugin `type` property\n */\nexport type PluginType = PluginTypes.Block | PluginTypes.Inline | string;\n\n/**\n * A plugin property\n */\nexport type PluginProperty = string;\n\n/**\n * The EditorJS tool settings for this plugin\n */\nexport type EditorJSPlugin = ToolConstructable | ToolSettings;\n\n/**\n * A map of all the tools settings\n */\nexport interface ToolSettingsMap {\n  /**\n   * The key of the plugin and the plugin exported tool settings\n   */\n  [key: string]: EditorJSPlugin;\n}\n\n/**\n * A plugin configuration object\n */\nexport interface PluginConfig {\n  /**\n   * Specifies the type of plugin for the plugin provider\n   */\n  type: PluginProperty;\n  /**\n   * The key to use for the plugin\n   */\n  key: PluginProperty;\n  /**\n   * Label for displaying the plugin name\n   */\n  pluginName: PluginProperty;\n  /**\n   * Optional description for the plugin\n   */\n  description?: PluginProperty;\n  /**\n   * Optional shortcut for the plugin\n   */\n  shortcut?: PluginProperty;\n  /**\n   * Optional {@link https://editorjs.io/provide-custom-configuration | custom configuration} to pass to EditorJS\n   */\n  config?: any;\n  /**\n   * Optional block data, used to define the block data for this type\n   * and used as a default\n   */\n  blockData?: BlockData;\n  /**\n   * The plugin for the editor\n   */\n  plugin: EditorJSPlugin | undefined;\n}\n\n/**\n * The Injection token for initial plugins as defined in the ngx-editorjs module\n */\nexport const EDITOR_JS_TOOL_INJECTOR = new InjectionToken('EDITOR_JS_TOOL_INJECTOR');\n\n/**\n * Injection token for a plugin config\n */\nexport const PLUGIN_CONFIG = new InjectionToken('PLUGIN_CONFIG');\n\n/**\n * A map of plugin configs\n */\nexport interface PluginConfigMap {\n  /**\n   * A plugin config per key\n   */\n  [key: string]: PluginConfig;\n}\n\n/**\n * Injection token for the plugin config map\n */\nexport const PluginClasses = new InjectionToken('PluginClasses');\n\n    \n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"
    },
    'changelog.html': {
      url: 'changelog.html',
      title: 'getting-started - changelog',
      body:
        '\n                   \n\nTinynodes Changelog\n\nThis changelog is related to the overall site. You can also find changelogs for libraries under the library docs\n\n\nUNRELEASED\nToday @tinynodes/ngx-editorjs@3.0.0 has been released, along with @tinynodes/ngx-editorjs-plugins@2.0.0\nThe plugin architecture of the components has been re-written so that plugins are just NgModule classes\nthat provide multi providers for injecting plugins and their configuration.  These are merged into a map\nthat the NgxEditorJSPluginService now provides, and provides methods to getting tool options for instances.\nThis means the plugin module is now a dependency of the project.\nInternally there is some tidy-up related to this, and better async/await handling of the instance creation\nalong with API calls.  The Material demo \nhas been updated as well with improvements on using the component in an application.\nWednesday, 22nd May 2019\nToday @tinynodes/ngx-editorjs@2.0.0 has been released. The major bump is due to underlying changes that may be breaking - the entire service has been improved with better control over the EditorJS interface. Also in this release the exiting component has been upgraded to work with Angular Forms, and there is a new Material Form Field component provided too.\nThe demo has also been updated to reflect the new features of this, and a new demo added for the Material component.\nWednesday, 15th May 2019\nToday I have released @tinynodes/ngx-editorjs@1.3.2. This will be without a Forms component. In this release the main change is internally I\'m using a new EditorJS Injector module I\'ve created to handle managing the underlying instance. There are also a lot of documentation improvements and a completly new updated demo site.\nMonday, 13th May 2019\nToday I have released @tinynodes/ngx-editorjs@1.2.0. For now I\'ve removed any default plugins from core package, now all plugins must be added at the application level - this can be see in the demo app.\nSunday, 12th May 2019\nThe first devlog is to report that currently version 1.2 has been delayed due to current build issues.\nA bug report has been filed on @nrwl/nx project.\nIn 1.2 there is a new @tinynodes/ngx-editorjs-plugins module that provides exports for several common EditorJS plugins and will be expanded to cover all the officially released plugins.\nWith this change the current build scripts break, and until it is resolved this will block the release.\nIn the meantime I\'ll continue to work on this small demo site, making it more useful as a good example of an Angular app.\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching ""\n        \n    \n    \n        No results matching ""\n    \n\n'
    },
    'contributing.html': {
      url: 'contributing.html',
      title: 'getting-started - contributing',
      body:
        '\n                   \n\nContributing\nWhen contributing to this repository, please first discuss the change you wish to make via issue,\nemail, or any other method with the owners of this repository before making a change.\nPlease note we have a code of conduct, please follow it in all your interactions with the project.\nPull Request Process\n\nEnsure any install or build dependencies are removed before the end of the layer when doing a\nbuild.\nUpdate the README.md with details of changes to the interface, this includes new environment\nvariables, exposed ports, useful file locations and container parameters.\nIncrease the version numbers in any examples files and the README.md to the new version that this\nPull Request would represent. The versioning scheme we use is SemVer.\nYou may merge the Pull Request in once you have the sign-off of two other developers, or if you\ndo not have permission to do that, you may request the second reviewer to merge it for you.\n\nCode of Conduct\nOur Pledge\nIn the interest of fostering an open and welcoming environment, we as\ncontributors and maintainers pledge to making participation in our project and\nour community a harassment-free experience for everyone, regardless of age, body\nsize, disability, ethnicity, gender identity and expression, level of experience,\nnationality, personal appearance, race, religion, or sexual identity and\norientation.\nOur Standards\nExamples of behavior that contributes to creating a positive environment\ninclude:\n\nUsing welcoming and inclusive language\nBeing respectful of differing viewpoints and experiences\nGracefully accepting constructive criticism\nFocusing on what is best for the community\nShowing empathy towards other community members\n\nExamples of unacceptable behavior by participants include:\n\nThe use of sexualized language or imagery and unwelcome sexual attention or\nadvances\nTrolling, insulting/derogatory comments, and personal or political attacks\nPublic or private harassment\nPublishing others\' private information, such as a physical or electronic\naddress, without explicit permission\nOther conduct which could reasonably be considered inappropriate in a\nprofessional setting\n\nOur Responsibilities\nProject maintainers are responsible for clarifying the standards of acceptable\nbehavior and are expected to take appropriate and fair corrective action in\nresponse to any instances of unacceptable behavior.\nProject maintainers have the right and responsibility to remove, edit, or\nreject comments, commits, code, wiki edits, issues, and other contributions\nthat are not aligned to this Code of Conduct, or to ban temporarily or\npermanently any contributor for other behaviors that they deem inappropriate,\nthreatening, offensive, or harmful.\nScope\nThis Code of Conduct applies both within project spaces and in public spaces\nwhen an individual is representing the project or its community. Examples of\nrepresenting a project or community include using an official project e-mail\naddress, posting via an official social media account, or acting as an appointed\nrepresentative at an online or offline event. Representation of a project may be\nfurther defined and clarified by project maintainers.\nEnforcement\nInstances of abusive, harassing, or otherwise unacceptable behavior may be\nreported by contacting the project team at me@tane.dev. All\ncomplaints will be reviewed and investigated and will result in a response that\nis deemed necessary and appropriate to the circumstances. The project team is\nobligated to maintain confidentiality with regard to the reporter of an incident.\nFurther details of specific enforcement policies may be posted separately.\nProject maintainers who do not follow or enforce the Code of Conduct in good\nfaith may face temporary or permanent repercussions as determined by other\nmembers of the project\'s leadership.\nAttribution\nThis Code of Conduct is adapted from the Contributor Covenant, version 1.4,\navailable at http://contributor-covenant.org/version/1/4\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching ""\n        \n    \n    \n        No results matching ""\n    \n\n'
    },
    'dependencies.html': {
      url: 'dependencies.html',
      title: 'package-dependencies - dependencies',
      body:
        '\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        Dependencies\n    \n    \n        \n            @angular/animations : ~8.0.0\n        \n            @angular/cdk : ~8.0.0\n        \n            @angular/common : ~8.0.0\n        \n            @angular/compiler : ~8.0.0\n        \n            @angular/core : ~8.0.0\n        \n            @angular/flex-layout : ~8.0.0-beta.26\n        \n            @angular/forms : ~8.0.0\n        \n            @angular/material : ~8.0.0\n        \n            @angular/platform-browser : ~8.0.0\n        \n            @angular/platform-browser-dynamic : ~8.0.0\n        \n            @angular/router : ~8.0.0\n        \n            @ngrx/effects : ~7.4.0\n        \n            @ngrx/store : ~7.4.0\n        \n            core-js : ~3.1.3\n        \n            hammerjs : ~2.0.8\n        \n            install : ~0.12.2\n        \n            ngx-hideable-header : 0.0.5\n        \n            ngx-json-viewer : ~2.4.0\n        \n            npm : ~6.9.0\n        \n            rxjs : ~6.5.2\n        \n            zone.js : ~0.9.1\n    \n\n\n\n\n\n                   \n    \n         result-matching ""\n        \n    \n    \n        No results matching ""\n    \n\n'
    },
    'miscellaneous/enumerations.html': {
      url: 'miscellaneous/enumerations.html',
      title: 'miscellaneous-enumerations - enumerations',
      body:
        '\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous\n  Enumerations\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            PluginTypes   (libs/.../plugins.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    libs/ngx-editorjs-plugins/src/lib/types/plugins.ts\n    \n        \n            \n                \n                    \n                        \n                        PluginTypes\n                    \n                \n                    \n                        \n                            The types of plugins supported, currently block and inline\n\n                        \n                    \n                        \n                            \n                                 Block\n                            \n                        \n                        \n                            \n                                Value : block\n                            \n                        \n                        \n                            \n                                 Inline\n                            \n                        \n                        \n                            \n                                Value : inline\n                            \n                        \n            \n        \n\n\n\n\n                   \n    \n         result-matching ""\n        \n    \n    \n        No results matching ""\n    \n\n'
    },
    'miscellaneous/functions.html': {
      url: 'miscellaneous/functions.html',
      title: 'miscellaneous-functions - functions',
      body:
        '\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous\n  Functions\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            createEditorJSConfig   (libs/.../editor-config.ts)\n                        \n                        \n                            createEditorJSInstance   (libs/.../ngx-editorjs.module.ts)\n                        \n                        \n                            createModuleConfig   (libs/.../module-config.ts)\n                        \n                        \n                            createPluginConfig   (libs/.../plugin.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    libs/ngx-editorjs/src/lib/config/editor-config.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        \n                            createEditorJSConfig\n                        \n                        \n                    \n                \n            \n            \n                \ncreateEditorJSConfig(inputConfig?)\n                \n            \n\n\n\n\n            \n                \n                    Creates an EditorJS configuration, only returning keys that are set\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    inputConfig\n\n                                    \n                                        Yes\n                                    \n\n\n                                    \n                                        Optional config to use to set values\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     EditorConfig\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    libs/ngx-editorjs/src/lib/ngx-editorjs.module.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        \n                            createEditorJSInstance\n                        \n                        \n                    \n                \n            \n            \n                \ncreateEditorJSInstance(editorjs: any)\n                \n            \n\n\n\n\n            \n                \n                    Factory function to return the EditorJS base class\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    editorjs\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                \n            \n        \n    \n    libs/ngx-editorjs/src/lib/config/module-config.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        \n                            createModuleConfig\n                        \n                        \n                    \n                \n            \n            \n                \ncreateModuleConfig(config?)\n                \n            \n\n\n\n\n            \n                \n                    Method to return an module configuration\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    config\n\n                                    \n                                        Yes\n                                    \n\n\n                                    \n                                        Optional module configurations\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         NgxEditorJSModuleConfig\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    libs/ngx-editorjs-plugins/src/lib/util/plugin.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        \n                            createPluginConfig\n                        \n                        \n                    \n                \n            \n            \n                \ncreatePluginConfig(pluginConfigs, plugins)\n                \n            \n\n\n\n\n            \n                \n                    Factory function to create the plugin config map for the plugin service\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    pluginConfigs\n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        The array of plugin configuration objects passed to this factory\n\n                                    \n                                \n                                \n                                    plugins\n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        The array of EditorJS plugins that are passed to this factory\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                \n            \n        \n    \n\n\n\n                   \n    \n         result-matching ""\n        \n    \n    \n        No results matching ""\n    \n\n'
    },
    'index.html': {
      url: 'index.html',
      title: 'getting-started - index',
      body:
        '\n                   \n\nNgx-Tinynodes\nThis repository is a collection of Angular components and demos with full documentation.\nSee the Changelog for the\ndevelopment diary of this site, or visit the documentation of libraries.\nYou can also find a fully searchable API documentation for all @tinynode components.\nLinks\n\nRepository\nDocumentation\nDemo Application Site\nNPM Collection\n\nLibraries\nngx-editorjs\nThis library provides Angular support for EditorJS. Inside the module you will find:\n\nNgxEditorJSDirective - An Angular Directive used to attach an EditorJS instance to any block DOM element\nNgxEditorJSComponent - An out-of-the-box Angular component that is Reactive Forms compatible\nNgxEditorJSMaterialFieldComponent An Angular Material Form Field component that provides all the required properties and life-cycle events required. See the Form Demo on an example usage\nNgxEditorJSService - A Service that can be injected into an application to provide a interface to interact with EditorJS instances. Underneath are the private NgxEditorJSPluginService and NgxEditorJSInstanceService services. These are private but can be imported via ɵNgxEditorJSPluginService and ɵNgxEditorJSInstanceService from the library if you want to use them.\n\nWithin these components you will be able to access the underlying EditorJS instance, for use see the EditorJS API Docs\nBelow are the dependencies to use the features.\n@tinynodes/ngx-editorjs\nThis project provides a set of features for using EditorJS within Angular 7+\n\nReadme\nChangelog\nDemo\nProject Folder\n\n@tinynodes/ngx-editorjs-plugins\nThis project provides the plugin service module that exports handles\n plugins for @tinynodes/ngx-editorjs. The module also ships a set of default\n plugins and documentation on how to add new ones easily.\n\nReadme\nChangelog\nProject Folder\n\nDevelopment Information\nThis repository is run by Tane Piper and was generated using Nx.\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching ""\n        \n    \n    \n        No results matching ""\n    \n\n'
    },
    'license.html': {
      url: 'license.html',
      title: 'getting-started - license',
      body:
        '\n                   \n\nTinynodes General MIT Licence\nCopyright 2019 Tane Piper me@tane.dev\nPermission is hereby granted, free of charge, to any person obtaining a copy of this software and associated documentation files (the "Software"), to deal in the Software without restriction, including without limitation the rights to use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of the Software, and to permit persons to whom the Software is furnished to do so, subject to the following conditions:\nThe above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software.\nTHE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching ""\n        \n    \n    \n        No results matching ""\n    \n\n'
    },
    'modules.html': {
      url: 'modules.html',
      title: 'modules - modules',
      body:
        '\n                   \n\n\n\n\n    Modules\n\n\n    \n            \n                \n                    \n                        NgxEditorJSModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        NgxEditorjsPluginsModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        NgxEditorJSPluginServiceModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        NgxTinynodesComponentsModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        NgxTinynodesMatJsonOutputModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        NgxTinynodesMatTagInputModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        PluginCodeModule\n                    \n                    \n                                \n                                    No graph available.\n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        PluginHeaderModule\n                    \n                    \n                                \n                                    No graph available.\n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        PluginImageModule\n                    \n                    \n                                \n                                    No graph available.\n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        PluginInlineCodeModule\n                    \n                    \n                                \n                                    No graph available.\n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        PluginLinkModule\n                    \n                    \n                                \n                                    No graph available.\n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        PluginListModule\n                    \n                    \n                                \n                                    No graph available.\n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        PluginMarkerModule\n                    \n                    \n                                \n                                    No graph available.\n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        PluginParagraphModule\n                    \n                    \n                                \n                                    No graph available.\n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        PluginSimpleImageModule\n                    \n                    \n                                \n                                    No graph available.\n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching ""\n        \n    \n    \n        No results matching ""\n    \n\n'
    },
    'overview.html': {
      url: 'overview.html',
      title: 'overview - overview',
      body:
        '\n                   \n\n\n\n    Overview\n\n  \n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_NgxEditorJSModule\n\n\n\ncluster_NgxEditorJSModule_declarations\n\n\n\ncluster_NgxEditorJSModule_imports\n\n\n\ncluster_NgxEditorJSModule_exports\n\n\n\ncluster_NgxEditorJSModule_providers\n\n\n\ncluster_NgxEditorjsPluginsModule\n\n\n\ncluster_NgxEditorjsPluginsModule_imports\n\n\n\ncluster_NgxEditorjsPluginsModule_exports\n\n\n\ncluster_NgxPluginServiceModule\n\n\n\ncluster_NgxPluginServiceModule_providers\n\n\n\ncluster_NgxTinynodesComponentsModule\n\n\n\ncluster_NgxTinynodesComponentsModule_imports\n\n\n\ncluster_NgxTinynodesComponentsModule_exports\n\n\n\ncluster_NgxTinynodesMatJsonOutputModule\n\n\n\ncluster_NgxTinynodesMatJsonOutputModule_declarations\n\n\n\ncluster_NgxTinynodesMatJsonOutputModule_exports\n\n\n\ncluster_NgxTinynodesMatTagInputModule\n\n\n\ncluster_NgxTinynodesMatTagInputModule_declarations\n\n\n\ncluster_NgxTinynodesMatTagInputModule_NgxTinynodesMatTagInputComponent_providers\n\n\n\ncluster_NgxTinynodesMatTagInputModule_exports\n\n\n\n\nNgxEditorJSComponent\n\nNgxEditorJSComponent\n\n\n\nNgxEditorJSModule\n\nNgxEditorJSModule\n\nNgxEditorJSModule -->\n\nNgxEditorJSComponent->NgxEditorJSModule\n\n\n\n\n\nNgxEditorJSDirective\n\nNgxEditorJSDirective\n\nNgxEditorJSModule -->\n\nNgxEditorJSDirective->NgxEditorJSModule\n\n\n\n\n\nNgxEditorJSMatFieldComponent\n\nNgxEditorJSMatFieldComponent\n\nNgxEditorJSModule -->\n\nNgxEditorJSMatFieldComponent->NgxEditorJSModule\n\n\n\n\n\nNgxEditorJSComponent \n\nNgxEditorJSComponent \n\nNgxEditorJSComponent  -->\n\nNgxEditorJSModule->NgxEditorJSComponent \n\n\n\n\n\nNgxEditorJSDirective \n\nNgxEditorJSDirective \n\nNgxEditorJSDirective  -->\n\nNgxEditorJSModule->NgxEditorJSDirective \n\n\n\n\n\nNgxEditorJSMatFieldComponent \n\nNgxEditorJSMatFieldComponent \n\nNgxEditorJSMatFieldComponent  -->\n\nNgxEditorJSModule->NgxEditorJSMatFieldComponent \n\n\n\n\n\nNgxEditorjsPluginsModule\n\nNgxEditorjsPluginsModule\n\nNgxEditorJSModule -->\n\nNgxEditorjsPluginsModule->NgxEditorJSModule\n\n\n\n\n\nNgxEditorJSPluginServiceModule \n\nNgxEditorJSPluginServiceModule \n\nNgxEditorJSPluginServiceModule  -->\n\nNgxEditorjsPluginsModule->NgxEditorJSPluginServiceModule \n\n\n\n\n\nPluginCodeModule \n\nPluginCodeModule \n\nPluginCodeModule  -->\n\nNgxEditorjsPluginsModule->PluginCodeModule \n\n\n\n\n\nPluginHeaderModule \n\nPluginHeaderModule \n\nPluginHeaderModule  -->\n\nNgxEditorjsPluginsModule->PluginHeaderModule \n\n\n\n\n\nPluginImageModule \n\nPluginImageModule \n\nPluginImageModule  -->\n\nNgxEditorjsPluginsModule->PluginImageModule \n\n\n\n\n\nPluginInlineCodeModule \n\nPluginInlineCodeModule \n\nPluginInlineCodeModule  -->\n\nNgxEditorjsPluginsModule->PluginInlineCodeModule \n\n\n\n\n\nPluginLinkModule \n\nPluginLinkModule \n\nPluginLinkModule  -->\n\nNgxEditorjsPluginsModule->PluginLinkModule \n\n\n\n\n\nPluginListModule \n\nPluginListModule \n\nPluginListModule  -->\n\nNgxEditorjsPluginsModule->PluginListModule \n\n\n\n\n\nPluginMarkerModule \n\nPluginMarkerModule \n\nPluginMarkerModule  -->\n\nNgxEditorjsPluginsModule->PluginMarkerModule \n\n\n\n\n\nPluginParagraphModule \n\nPluginParagraphModule \n\nPluginParagraphModule  -->\n\nNgxEditorjsPluginsModule->PluginParagraphModule \n\n\n\n\n\nPluginSimpleImageModule \n\nPluginSimpleImageModule \n\nPluginSimpleImageModule  -->\n\nNgxEditorjsPluginsModule->PluginSimpleImageModule \n\n\n\n\n\nNgxEditorJSService\n\nNgxEditorJSService\n\nNgxEditorJSModule -->\n\nNgxEditorJSService->NgxEditorJSModule\n\n\n\n\n\nNgxEditorJSPluginServiceModule\n\nNgxEditorJSPluginServiceModule\n\nNgxEditorjsPluginsModule -->\n\nNgxEditorJSPluginServiceModule->NgxEditorjsPluginsModule\n\n\n\n\n\nPluginCodeModule\n\nPluginCodeModule\n\nNgxEditorjsPluginsModule -->\n\nPluginCodeModule->NgxEditorjsPluginsModule\n\n\n\n\n\nPluginHeaderModule\n\nPluginHeaderModule\n\nNgxEditorjsPluginsModule -->\n\nPluginHeaderModule->NgxEditorjsPluginsModule\n\n\n\n\n\nPluginImageModule\n\nPluginImageModule\n\nNgxEditorjsPluginsModule -->\n\nPluginImageModule->NgxEditorjsPluginsModule\n\n\n\n\n\nPluginInlineCodeModule\n\nPluginInlineCodeModule\n\nNgxEditorjsPluginsModule -->\n\nPluginInlineCodeModule->NgxEditorjsPluginsModule\n\n\n\n\n\nPluginLinkModule\n\nPluginLinkModule\n\nNgxEditorjsPluginsModule -->\n\nPluginLinkModule->NgxEditorjsPluginsModule\n\n\n\n\n\nPluginListModule\n\nPluginListModule\n\nNgxEditorjsPluginsModule -->\n\nPluginListModule->NgxEditorjsPluginsModule\n\n\n\n\n\nPluginMarkerModule\n\nPluginMarkerModule\n\nNgxEditorjsPluginsModule -->\n\nPluginMarkerModule->NgxEditorjsPluginsModule\n\n\n\n\n\nPluginParagraphModule\n\nPluginParagraphModule\n\nNgxEditorjsPluginsModule -->\n\nPluginParagraphModule->NgxEditorjsPluginsModule\n\n\n\n\n\nPluginSimpleImageModule\n\nPluginSimpleImageModule\n\nNgxEditorjsPluginsModule -->\n\nPluginSimpleImageModule->NgxEditorjsPluginsModule\n\n\n\n\n\nNgxEditorJSPluginService\n\nNgxEditorJSPluginService\n\nNgxEditorJSPluginServiceModule -->\n\nNgxEditorJSPluginService->NgxEditorJSPluginServiceModule\n\n\n\n\n\nNgxTinynodesMatJsonOutputModule\n\nNgxTinynodesMatJsonOutputModule\n\n\n\nNgxTinynodesComponentsModule\n\nNgxTinynodesComponentsModule\n\nNgxTinynodesComponentsModule -->\n\nNgxTinynodesMatJsonOutputModule->NgxTinynodesComponentsModule\n\n\n\n\n\nNgxTinynodesMatJsonOutputComponent \n\nNgxTinynodesMatJsonOutputComponent \n\nNgxTinynodesMatJsonOutputComponent  -->\n\nNgxTinynodesMatJsonOutputModule->NgxTinynodesMatJsonOutputComponent \n\n\n\n\n\nNgxTinynodesMatTagInputModule\n\nNgxTinynodesMatTagInputModule\n\nNgxTinynodesComponentsModule -->\n\nNgxTinynodesMatTagInputModule->NgxTinynodesComponentsModule\n\n\n\n\n\nNgxTinynodesMatTagInputComponent \n\nNgxTinynodesMatTagInputComponent \n\nNgxTinynodesMatTagInputComponent  -->\n\nNgxTinynodesMatTagInputModule->NgxTinynodesMatTagInputComponent \n\n\n\n\n\nNgxTinynodesMatJsonOutputModule \n\nNgxTinynodesMatJsonOutputModule \n\nNgxTinynodesMatJsonOutputModule  -->\n\nNgxTinynodesComponentsModule->NgxTinynodesMatJsonOutputModule \n\n\n\n\n\nNgxTinynodesMatTagInputModule \n\nNgxTinynodesMatTagInputModule \n\nNgxTinynodesMatTagInputModule  -->\n\nNgxTinynodesComponentsModule->NgxTinynodesMatTagInputModule \n\n\n\n\n\nNgxTinynodesMatJsonOutputComponent\n\nNgxTinynodesMatJsonOutputComponent\n\nNgxTinynodesMatJsonOutputModule -->\n\nNgxTinynodesMatJsonOutputComponent->NgxTinynodesMatJsonOutputModule\n\n\n\n\n\nNgxTinynodesMatTagInputComponent\n\nNgxTinynodesMatTagInputComponent\n\nNgxTinynodesMatTagInputModule -->\n\nNgxTinynodesMatTagInputComponent->NgxTinynodesMatTagInputModule\n\n\n\n\n\nTAG_COMPONENT_VALUE_ACCESSOR\n\nTAG_COMPONENT_VALUE_ACCESSOR\n\nNgxTinynodesMatTagInputComponent -->\n\nTAG_COMPONENT_VALUE_ACCESSOR->NgxTinynodesMatTagInputComponent\n\n\n\n\n\nTAG_COMPONENT_FIELD_CONTROL\n\nTAG_COMPONENT_FIELD_CONTROL\n\nNgxTinynodesMatTagInputComponent -->\n\nTAG_COMPONENT_FIELD_CONTROL->NgxTinynodesMatTagInputComponent\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n  \n\n    \n        \n            \n                \n                    \n                    \n                        15 Modules\n                    \n                \n            \n        \n        \n            \n                \n                    \n                    4 Components\n                \n            \n        \n        \n            \n                \n                    \n                    1 Directive\n                \n            \n        \n        \n            \n                \n                    \n                    2 Injectables\n                \n            \n        \n        \n            \n                \n                    \n                    1 Class\n                \n            \n        \n        \n            \n                \n                    \n                    28 Interfaces\n                \n            \n        \n    \n\n\n \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching ""\n        \n    \n    \n        No results matching ""\n    \n\n'
    },
    'todo.html': {
      url: 'todo.html',
      title: 'getting-started - todo',
      body:
        '\n                   \n\nngx-tinynodes Todo\nGeneral Todos\n\n Add CI pipeline for publishing modules\n Publish doc changes and tags back to repo\n\nngx-editorjs\n\n Add full EditorJS config support\n Add config options as @Input on component and directive\n Add autosave option support to module config\n Expose EditorJS CoreAPI via service helpers (e.g. blocks, selection, etc)\n ~~Provide peer-dependency ngrx/effects via library to control service~~\n\nngx-editorjs-demo\n\n Add store for page\n Add controls for setting editor\n Add Save feature\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching ""\n        \n    \n    \n        No results matching ""\n    \n\n'
    },
    'miscellaneous/typealiases.html': {
      url: 'miscellaneous/typealiases.html',
      title: 'miscellaneous-typealiases - typealiases',
      body:
        '\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous\n  Type aliases\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            BlockTypes   (libs/.../blocks.ts)\n                        \n                        \n                            EditorJSPlugin   (libs/.../plugins.ts)\n                        \n                        \n                            ListStyle   (libs/.../blocks.ts)\n                        \n                        \n                            PluginProperty   (libs/.../plugins.ts)\n                        \n                        \n                            PluginType   (libs/.../plugins.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    libs/ngx-editorjs/src/lib/types/blocks.ts\n    \n    \n        \n            \n                \n                    \n                    BlockTypes\n                \n            \n            \n                \n                    Type of all the basic block type\n\n                \n            \n            \n                \n                        ParagraphBlock | HeaderBlock | ImageBlock | ListBlock | Block\n\n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    ListStyle\n                \n            \n            \n                \n                    Available list styles, supports ordered and unordered.\nA custom string can also be added\n\n                \n            \n            \n                \n                        "ordered" | "unordered" | string\n\n                \n            \n        \n    \n    libs/ngx-editorjs-plugins/src/lib/types/plugins.ts\n    \n    \n        \n            \n                \n                    \n                    EditorJSPlugin\n                \n            \n            \n                \n                    The EditorJS tool settings for this plugin\n\n                \n            \n            \n                \n                        ToolConstructable | ToolSettings\n\n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    PluginProperty\n                \n            \n            \n                \n                    A plugin property\n\n                \n            \n            \n                \n                            string\n\n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    PluginType\n                \n            \n            \n                \n                    The types of plugins supported via the plugin type property\n\n                \n            \n            \n                \n                            PluginTypes.Block | PluginTypes.Inline | string\n\n                \n            \n        \n    \n\n\n\n                   \n    \n         result-matching ""\n        \n    \n    \n        No results matching ""\n    \n\n'
    },
    'miscellaneous/variables.html': {
      url: 'miscellaneous/variables.html',
      title: 'miscellaneous-variables - variables',
      body:
        "\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous\n  Variables\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            context   (libs/.../test.ts)\n                        \n                        \n                            DEFAULT_HOLDER_ID   (libs/.../editor-config.ts)\n                        \n                        \n                            EDITIOR_JS_INSTANCE   (libs/.../config.ts)\n                        \n                        \n                            EDITOR_JS_TOOL_INJECTOR   (libs/.../plugins.ts)\n                        \n                        \n                            EDITORJS_FORM_VALUE_ACCESSOR   (libs/.../editorjs.component.ts)\n                        \n                        \n                            EDITORJS_MATERIAL_FIELD_CONTROL   (libs/.../editorjs-mat-field.component.ts)\n                        \n                        \n                            EDITORJS_MODULE_IMPORT   (libs/.../injector.ts)\n                        \n                        \n                            EditorJSInstance   (libs/.../injector.ts)\n                        \n                        \n                            FOR_ROOT_OPTIONS_TOKEN   (libs/.../config.ts)\n                        \n                        \n                            MAP_DEFAULTS   (libs/.../injector.ts)\n                        \n                        \n                            NGX_EDITORJS_CONFIG   (libs/.../config.ts)\n                        \n                        \n                            PLUGIN_CONFIG   (libs/.../plugins.ts)\n                        \n                        \n                            PluginClasses   (libs/.../plugins.ts)\n                        \n                        \n                            require   (libs/.../test.ts)\n                        \n                        \n                            TAG_COMPONENT_FIELD_CONTROL   (libs/.../mat-tag-input.component.ts)\n                        \n                        \n                            TAG_COMPONENT_VALUE_ACCESSOR   (libs/.../mat-tag-input.component.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    libs/ngx-tinynodes-components/src/test.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            context\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : require.context('./', true, /\\.spec\\.ts$/)\n                        \n                    \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            require\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         any\n\n                        \n                    \n\n\n            \n        \n\n    libs/ngx-editorjs/src/lib/config/editor-config.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            DEFAULT_HOLDER_ID\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Default value : 'editor-js'\n                        \n                    \n\n                \n                    \n                        The default holder ID to attach EditorJS to\n\n                    \n                \n\n            \n        \n\n    libs/ngx-editorjs/src/lib/types/config.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            EDITIOR_JS_INSTANCE\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : new InjectionToken('EDITIOR_JS_INSTANCE')\n                        \n                    \n\n                \n                    \n                        Get the EditorJS instance injected into the app\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            FOR_ROOT_OPTIONS_TOKEN\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : new InjectionToken('FOR_ROOT_OPTIONS_TOKEN')\n                        \n                    \n\n                \n                    \n                        Internal token for injecting the NgxEditorJSConfig into the config factory\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            NGX_EDITORJS_CONFIG\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : new InjectionToken('NGX_EDITORJS_CONFIG')\n                        \n                    \n\n                \n                    \n                        Injection token provied for NgxEditorJSConfig\n\n                    \n                \n\n            \n        \n\n    libs/ngx-editorjs-plugins/src/lib/types/plugins.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            EDITOR_JS_TOOL_INJECTOR\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : new InjectionToken('EDITOR_JS_TOOL_INJECTOR')\n                        \n                    \n\n                \n                    \n                        The Injection token for initial plugins as defined in the ngx-editorjs module\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            PLUGIN_CONFIG\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : new InjectionToken('PLUGIN_CONFIG')\n                        \n                    \n\n                \n                    \n                        Injection token for a plugin config\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            PluginClasses\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : new InjectionToken('PluginClasses')\n                        \n                    \n\n                \n                    \n                        Injection token for the plugin config map\n\n                    \n                \n\n            \n        \n\n    libs/ngx-editorjs/src/lib/containers/editorjs/editorjs.component.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            EDITORJS_FORM_VALUE_ACCESSOR\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Provider\n\n                        \n                    \n                    \n                        \n                            Default value : {\n  provide: NG_VALUE_ACCESSOR,\n  useExisting: forwardRef(() => NgxEditorJSComponent),\n  multi: true\n}\n                        \n                    \n\n                \n                    \n                        The NgxEditorJSBaseComponent Provider for NG_VALUE_ACCESSOR\n\n                    \n                \n\n            \n        \n\n    libs/ngx-editorjs/src/lib/containers/editorjs-mat-field/editorjs-mat-field.component.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            EDITORJS_MATERIAL_FIELD_CONTROL\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Provider\n\n                        \n                    \n                    \n                        \n                            Default value : {\n  provide: MatFormFieldControl,\n  useExisting: forwardRef(() => NgxEditorJSMatFieldComponent),\n  multi: true\n}\n                        \n                    \n\n                \n                    \n                        Provider for the EditorJS Material Field Component\n\n                    \n                \n\n            \n        \n\n    libs/ngx-editorjs/src/lib/types/injector.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            EDITORJS_MODULE_IMPORT\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : new InjectionToken('EDITORJS_MODULE_IMPORT')\n                        \n                    \n\n                \n                    \n                        Injection token for the EditorJS class\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            EditorJSInstance\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : new InjectionToken('EditorJSInstance')\n                        \n                    \n\n                \n                    \n                        The EditorJS class injector\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            MAP_DEFAULTS\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     []\n\n                        \n                    \n                    \n                        \n                            Default value : [\n  ['lastChangeMap', { time: 0, blocks: [], version: EditorJS.version }],\n  ['isReadyMap', false],\n  ['hasSavedMap', false]\n]\n                        \n                    \n\n                \n                    \n                        Default values for each internal map\n\n                    \n                \n\n            \n        \n\n    libs/ngx-tinynodes-components/src/lib/components/mat-tag-input/mat-tag-input.component.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            TAG_COMPONENT_FIELD_CONTROL\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Provider\n\n                        \n                    \n                    \n                        \n                            Default value : {\n  provide: MatFormFieldControl,\n  useExisting: forwardRef(() => NgxTinynodesMatTagInputComponent),\n  multi: true\n}\n                        \n                    \n\n                \n                    \n                        Provider for Material field support\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            TAG_COMPONENT_VALUE_ACCESSOR\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Provider\n\n                        \n                    \n                    \n                        \n                            Default value : {\n  provide: NG_VALUE_ACCESSOR,\n  useExisting: forwardRef(() => NgxTinynodesMatTagInputComponent),\n  multi: true\n}\n                        \n                    \n\n                \n                    \n                        Tag Value Accessor\n\n                    \n                \n\n            \n        \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"
    },
    'additional-documentation/tinynodes-library-docs.html': {
      url: 'additional-documentation/tinynodes-library-docs.html',
      title: 'additional-page - Tinynodes Library Docs',
      body:
        '\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nNgx-Tinynodes Libraries\nHere you can find all the README and CHANGELOG details of all projects released to NPM\n\nPlease note due to a bug in CompoDoc the `README.md` files are currently not generated correctly - these are rendered correctly on GitHub and NPM.\n\n\n                   \n    \n         result-matching ""\n        \n    \n    \n        No results matching ""\n    \n\n'
    },
    'additional-documentation/tinynodes-library-docs/ngx-editorjs-readme.html': {
      url: 'additional-documentation/tinynodes-library-docs/ngx-editorjs-readme.html',
      title: 'additional-page - ngx-editorjs Readme',
      body:
        "\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nNgx-EditorJS\nThis library provides Angular support for EditorJS.\n\nInside the module you will find:\n\nNgxEditorJSDirective - An Angular Directive used to attach an EditorJS instance to any block DOM element\nNgxEditorJSComponent - An out-of-the-box Angular component that is Reactive Forms compatible\nNgxEditorJSMaterialFieldComponent An Angular Material Form Field component that provides all the required properties and life-cycle events required. See the Form Demo on an example usage\nNgxEditorJSBaseComponent - A base Angular component that is Reactive form compatible but with no template, can be used to create custom UI framework containers\nNgxEditorJSService - A Service that can be injected into an application to provide a interface to interact with EditorJS instances and manage plugins.\n\nWithin these components you will be able to access the underlying EditorJS instance, for use see the EditorJS API Docs\nYou can see a demo in action or download it\non GitHub to see how it was implemented.\nFor changes see the CHANGELOG\nInstalling and usage\nInstall the library via npm along with the plugins module and EditorJS module. For each plugin you want to use you also need to install it's dependency - see the Plugin Docs for more information.\n```bash\n\nnpm install @tinynodes/ngx-editorjs @tinynodes/ngx-editorjs-plugins @editorjs/editorjs @editorjs/paragraph....\n```\n\nOnce installed, include the NgxEditorJSModule module in your project with the forRoot method. The forRoot takes an optional configuration.\nYou also need to pass a provider for UserPlugins with a factory function that returns an options map tools to provide to the EditorJS instance. An example of this is shows in the demo application\n```typescript\nimport { NgModule } from '@angular/core';\nimport { BrowserModule } from '@angular/platform-browser';\nimport { NgxEditorJSModule } from '@tinynodes/ngx-editorjs';\nimport { AppComponent } from './app.component';\n@NgModule({\n  declarations: [AppComponent],\n  imports: [\n    BrowserModule,\n    NgxEditorJSModule.forRoot({\n      // Optional Configuration, see all keys below\n      editorjs: {\n        autofocus: false,\n        holder: 'editor',\n        initialBlock: 'paragraph',\n        data: {\n          time: Date.now(),\n          version: EditorJS.version,\n          blocks: []\n        }\n      }\n    }),\n  ],\n  bootstrap: [AppComponent]\n})\nexport class AppModule {}\n```\nConfiguration\nEditorJS Config\nThe configuration is deigned to be extendable in the future, so each potential feature has a key. For configuring EditorJS pass the options below into a editorjs key in the config.\nThe module configuration allows EditorJS to be provided with a set of options for use. See the EditorJS docs for more details.\n| Configuration Key  | Description                                                                                                                                                     |\n| ------------------ | --------------------------------------------------------------------------------------------------------------------------------------------------------------- |\n| autofocus        | Sets the EditorJS instance to autofocus on load                                                                                                                 |\n| autosave         | Value of time for the the autosave of EditorJS content to the service when the component when focused, this is used for Reactive forms. Default is 0 to disable |\n| data             | Initial data to load into the editor, this is an OutputData object from EditorJS                                                                              |\n| hideToolbar      | Hides the toolbar by default                                                                                                                                    |\n| holder           | The element ID of the holder, this will set all instances in this module to use this as a default                                                               |\n| initialBlock     | The default block type to use in the editor                                                                                                                     |\n| minHeight        | Height of Editor's bottom area that allows to set focus on the last Block                                                                                       |\n| blockPlaceholder | Placeholder of the first block                                                                                                                                  |\n| sanitizer        | Content sanitizer configurations                                                                                                                                |\n| excludeTools     | Excludes tools from the application, if no value or empty list passed all plugins available are added|\nAdding custom tools\nSee the plugin module\nfor docs on how to add custom plugins for EditorJS.\nLinks\n\nDocumentation\nGitHub\nNPM\nAngular Demo\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"
    },
    'additional-documentation/tinynodes-library-docs/ngx-editorjs-readme/ngx-editorjs-changelog.html': {
      url: 'additional-documentation/tinynodes-library-docs/ngx-editorjs-readme/ngx-editorjs-changelog.html',
      title: 'additional-page - ngx-editorjs Changelog',
      body:
        '\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nChangelog\nAll notable changes to this project will be documented in this file.\nThe format is based on Keep a Changelog,\nand this project adheres to Semantic Versioning.\n[Unreleased]\nChanged\n\nDocumentation updates\n\n[3.0.1] 2019-06-06\nRemoved\n\nToggle method that did not work has been removed\n\nChanged\n\nOptimised some internal methods\nFixed peerDependencies\n\n[3.0.0] - 2019-06-05\nChanged\n\nUpgraded to Angular and Material 8.\nSimplified API on service and components, Material demo updated to show best\nuse of component in a reactive form.\n\nFixed\n\nFixed major bug where inline tools did not show [Issue 6]\n\nRemoved\n\nPlugin responsibility of service and types moved to @tinynodes/ngx-editorjs-plugins module\nand is now a required dependency of the project, plugin architecture has been simplified to make it\neasy to add features in an AOT friendly way via Angular\'s dependency injection\n\n[2.1.0] - 2019-05-23\nAdded\n\nNgxEditorJSService.apiCall method added to service to provide a way to call any method in EditorJS\n\nRemoved\n\nPrivate services for EditorJS instance and plugins removed, NgxEditorJSService is now a single service that handles all the Editor and plugin life-cycles\nEditorJSBaseComponent removed and using NgxEditorJSComponent as base component\n\nChanged\n\nVarious internal improvements to state management and saving\n\n[2.0.0] - 2019-05-22\nThis release is the first big changes to the module and also includes new Material component.\nAdded\n\nNgxEditorJSComponent can be used in Angular Forms via it\'s ControlValueAccessor\nEditorJSBaseComponent exported and can be used to create custom components\nNgxEditorJSMatFieldComponent provided as a Material field component.\nautosave support now added to both components\napiCall method for calling any EditorJS API method\n\nChanged\n\nplaceholder property of EditorJS config is now blockPlaceholder so it does not clash with the Material property\nEditorJS instance service refactored, available as a private import\nAll public methods now take a InjectorMethodOption object as it\'s parameter\n\n[1.3.2] - 2019-05-15\nChanged\n\nFixed bug with passing data to EditorJS instance service.\nRemoved rogue console.log\n\n[1.3.0] - 2019-05-15\nAdded\n\n@Input properties on the component and directive for providing EditorJS instance configuration\ncreateEditorJSConfig function available to generate EditorJS configurations\nLots more doc improvements and updated demo\n\nChanged\n\nInternal service now uses an EditorJS injector module and service, provides more robust control and creation of EditorJS instances and controlling them.\n\n[1.2.0] - 2019-05-13\nAdded\n\nAdded all configuration options for EditorJS to the module configuration\n\nChanged\n\nRemoved all plugins from the ngx-editorjs project. All plugins are now provided by the @tinynodes/ngx-editorjs-plugins module and a default set of tools must be provided in an application.\nAdded NgxEditorJSPluginService back to core, all plugins must now be provided with a UserPlugin provider.\n\n[1.1.2] - 2019-05-11\nAdded\n\nImproved internal documentation for generated docs.\n\nRemoved\n\nGenerated docs no longer included in this module - all docs are now available via the generated docs site\n\n[1.1.1] - 2019-05-10\nAdded\n\nGenerated docs via CompoDoc in npm package\nInclude CHANGELOG.md in npm package\n\n[1.1.0] - 2019-05-10\nAdded\n\nEditorJS default paragraph plugin is now included in the default tools, fixes issue where the regenerated component failed to use the default plugin.\n\nChanged\n\nNgxEditorJSService is now provided in the root and now stores multiple editor instances. Getters removed and replaced with methods that take the holder parameter which is the ID of the DOM element the editor should be attached to.\nPlugins are now instances of an Injectable class for AOT and have an instance method of plugin. Also supports shortcut as an optional method that returns the string to set up as the shortcut.\nEditorJSPlugin now renamed BasePlugin and changed from class to interface.\nImproved documentation\n\n[1.0.0] - 2019-05-10\nAdded\n\nInitial release\nReadme, Changelog\nNgxEditorJSModule: That can be imported into the root of a project\nNgxEditorJSDirective: A directive that can attach an EditorJS instance to an element\nNgxEditorJSComponent: A component that is pre-configured to use the directive in any Angular project\nNgxEditorJSService: An Angular service for controlling an EditorJS instance\nDefault plugins for Header and List plugins, documentation on how to add plugins with AOT support\n\n\n                   \n    \n         result-matching ""\n        \n    \n    \n        No results matching ""\n    \n\n'
    },
    'additional-documentation/tinynodes-library-docs/ngx-editorjs-plugins-readme.html': {
      url: 'additional-documentation/tinynodes-library-docs/ngx-editorjs-plugins-readme.html',
      title: 'additional-page - ngx-editorjs-plugins Readme',
      body:
        "\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nNgx-EditorJS Plugins\n\nThis module provides the core Plugin service for @tinynodes/ngx-editorjs, and also provides a default set of EditorJS plugins\nfor using Angular modules and Injection Tokens.\nPlugin Service\nThe NgxEditorJSPluginService takes all the Plugin provides and creates a single map of the configurations and instances. These are used within NgxEditorJS to set the plugins\navailable within the editor. The plugin service is provided separably to avoid circular dependencies\nwithin the libraries and is required by @tinynodes/ngx-editorjs\nCreating a Plugin.\nCreating a plugin is very simple, the module provides some Injection Tokens for use with the module.\nThe plugin you want to import should conform to the Block or Inline format of EditorJS, alongside a configuration object that provides details about the plugin.\nBoth these providers must be set to multi: true - when the plugin service is initialised it will be provided a map of these.\nHere is an example of the PluginParagraph:\n```ts\nimport { NgModule } from '@angular/core';\nimport { EDITOR_JS_TOOL_INJECTOR, PLUGIN_CONFIG, PluginTypes from '@tinynodes/ngx-editorjs-plugins';\nimport Paragraph from '@editorjs/paragraph';\n@NgModule({\n  providers: [{\n    provide: EDITOR_JS_TOOL_INJECTOR,\n    useValue: Paragraph,\n    multi: true // IMPORTANT!\n  }, {\n    provide: PLUGIN_CONFIG,\n    useValue: {\n      key: 'paragraph',\n      type: PluginTypes.Block,\n      pluginName: 'EditorJS Paragraph',\n    },\n    multi: true // IMPORTANT!\n  }]\n})\nexport class PluginParagraphModule {}\n```\nThe full configuration object parameters are listed below, please note some are not yet implemented in the application\nbut will be used in future releases.\n| Param Name    | Type     | Optional | Description                                                      |\n| ------------- | -------- | -------- | ---------------------------------------------------------------- |\n| key         | string | No       | The default key of the plugin (e.g. paragraph)                 |\n| type        | string | No       | The type of plugin, currently block and inline are supported |\n| pluginName  | string | No       | The descriptive name of the plugin                               |\n| shortcut    | string | Yes      | An optional keyboard shortcut for the plugin                     |\n| description | string | Yes      | A description of the plugin                                      |\n| blockData   | string | Yes      | Optional default block data to use for the plugin                |\nOnce imported into an application or module the plugin is available in the app with several methods to get plugins on the service.\n\ngetPlugins - Get a map of all plugins\ngetPlugin(key: string) - Get a specific plugin by map key\ngetPluginsWithExclude(excludeList: string[]) - Get a map of plugins but exclude ones in the passed list\ngetPluginsWithInclude(includeList: string[]) - Get a map of plugins but only the ones in the include list\n\nPeer Dependencies\nAll EditorJS plugins are listed as peerDependencies of the project - this is because Angular requires these modules to be in the root. You must manually install these are the root of your Angular application.\n```bash\n\nnpm install @editorjs/paragraph @editorjs/header ....\n```\n\nPlugin List\n| Plugin Name             | Description                                            | Links                                                                                               |\n| ----------------------- | ------------------------------------------------------ | --------------------------------------------------------------------------------------------------- |\n| PluginCodeModule        | Provides a  block editor                       | README GitHub              |\n| PluginHeaderModule      | Provides a  -  block editor                  | README GitHub          |\n| PluginImageModule       | Provides an  block editor + file upload support | README GitHub            |\n| PluginLinkModule        | Provides an  block editor                         | README GitHub              |\n| PluginIListModule       | Provides an / block editor                   | README GitHub              |\n| PluginMarkerModule      | Provides inline text marking                           | README GitHub          |\n| PluginParagraphModule   | Provides an  block editor                         | README GitHub    |\n| PluginSimpleImageModule | Provides an  block editor with paste support    | README GitHub |\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"
    },
    'additional-documentation/tinynodes-library-docs/ngx-editorjs-plugins-readme/ngx-editorjs-plugins-changelog.html': {
      url:
        'additional-documentation/tinynodes-library-docs/ngx-editorjs-plugins-readme/ngx-editorjs-plugins-changelog.html',
      title: 'additional-page - ngx-editorjs-plugins Changelog',
      body:
        '\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nChangelog\nAll notable changes to this project will be documented in this file.\nThe format is based on Keep a Changelog,\nand this project adheres to Semantic Versioning.\n[2.0.1] 2019-05-06\nChanged\n\nThere is a known issue since upgrading to Angular 8 with the EditorJS Header Module.\nThis causes the Header module to fail rendering when data is passed to it on initial setup.  The Header itself still works\nwhen added via the block toolbar. A temporary fix has been provided in the module by extending the Header\nand fixing the method.\nFixed peerDependencies\n\n[2.0.0] 2019-05-05\nAdded\n\nNgxEditorJSPluginService returns to the plugin module as a requirement to avoid circular dependencies.\nThis service now provides a more reliable way of handling plugins, each plugin is a module with two multi providers\nwhich are turned into a configuration map of plugins.\n\nChanged\n\nPlugins no longer provide an injectable class, all plugins are modules that provide\ninjectable EDITOR_JS_TOOL_INJECTOR and PLUGIN_CONFIG. These provides are injected in the\nplugin service and made available in the editor. See the README for details on how\nplugins are created\n\n[1.1.1] - 2019-05-15\nChanged\n\nDocumentation updates\n\n[1.1.0] - 2019-05-13\nRemoved\n\nRemoved the NgxEditorJSPluginService from this module back to core\n\n[1.0.0] - 2019-05-11\nAdded\n\nInitial release of module with default plugins - see README.md for details.\nMoved the internal PluginService to public NgxEditorJSPluginService provided by this module\n\n\n                   \n    \n         result-matching ""\n        \n    \n    \n        No results matching ""\n    \n\n'
    }
  }
};
