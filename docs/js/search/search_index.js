var COMPODOC_SEARCH_INDEX = {
    "index": {"version":"2.3.6","fields":["title","body"],"fieldVectors":[["title/interfaces/Block.html",[0,0.172,1,0.464]],["body/interfaces/Block.html",[0,0.334,1,0.941,2,0.79,3,0.15,4,0.15,5,0.137,6,0.141,7,0.232,8,1.827,9,0.405,10,2.585,11,0.87,12,0.312,13,0.665,14,1.628,15,2.074,16,2.016,17,1.049,18,1.445,19,1.034,20,3.567,21,2.278,22,2.816,23,0.013,24,0.317,25,1.538,26,2.96,27,1.602,28,1.827,29,2.598,30,2.598,31,1.538,32,1.538,33,2.598,34,1.02,35,2.725,36,2.725,37,1.423,38,0.999,39,2.482,40,1.863,41,2.609,42,3.293,43,2.482,44,3.01,45,2.482,46,1.671,47,1.827,48,1.273,49,2.482,50,2.929,51,2.482,52,1.33,53,2.725,54,1.917,55,2.033,56,1.917,57,1.896,58,1.917,59,1.917,60,1.917,61,1.917,62,2.482,63,1.671,64,1.827,65,0.006,66,0.008,67,0.006]],["title/interfaces/BlockData.html",[0,0.172,68,2.756]],["body/interfaces/BlockData.html",[0,0.299,1,0.863,2,0.813,3,0.154,4,0.154,5,0.141,6,0.144,7,0.237,9,0.681,11,0.761,12,0.308,15,1.764,16,2.076,17,1.546,18,1.329,19,1.501,23,0.013,24,0.327,31,2.234,34,0.552,38,2.298,52,1.347,55,1.784,57,1.18,65,0.006,66,0.008,67,0.006,68,4.392,69,2.192,70,3.674,71,0.401,72,1.798,73,0.454,74,3.492,75,3.492,76,1.18,77,3.276,78,2.587,79,3.276,80,2.192,81,3.882,82,2.662,83,1.36,84,1.798,85,2.477,86,1.465,87,2.192,88,4.805,89,2.092,90,4.045,91,4.045,92,2.066,93,1.974,94,2.192,95,2.662,96,2.221,97,2.323,98,3.276,99,2.662,100,2.323,101,1.721,102,2.477,103,2.662,104,1.18,105,1.411,106,3.276,107,2.076,108,2.662,109,1.721,110,2.598,111,1.65,112,0.962,113,2.477,114,1.974,115,2.192,116,2.783,117,2.323,118,1.36,119,2.323,120,2.81,121,2.81,122,1.882,123,1.36,124,0.348,125,2.142,126,1.312,127,1.798,128,2.477,129,1.312,130,2.477,131,2.662,132,2.323,133,2.662,134,1.65,135,2.477]],["title/interfaces/ChangeMap.html",[0,0.172,136,2.438]],["body/interfaces/ChangeMap.html",[0,0.313,1,0.691,2,1.03,3,0.196,4,0.196,5,0.179,6,0.169,7,0.278,9,0.529,12,0.321,16,2.631,17,1.667,18,1.39,19,1.349,23,0.013,24,0.313,48,1.662,65,0.007,66,0.009,67,0.007,71,0.524,76,1.495,92,2.777,136,3.629,137,3.139,138,5.436,139,4.468,140,3.268,141,2.509,142,1.887,143,4.655,144,1.857,145,2.181,146,2.176,147,2.501,148,2.777,149,2.624,150,2.091,151,3.268,152,2.777,153,2.777,154,2.509,155,2.631,156,2.944,157,2.426]],["title/interfaces/CreateEditorJSOptions.html",[0,0.172,158,3.219]],["body/interfaces/CreateEditorJSOptions.html",[0,0.226,2,1.189,3,0.226,4,0.226,5,0.206,6,0.149,7,0.246,9,0.61,11,0.753,12,0.28,13,1.002,14,1.688,18,1.351,23,0.013,24,0.226,48,2.587,52,1.642,65,0.008,66,0.01,67,0.008,71,0.415,76,1.725,93,4.07,96,2.467,110,3.022,111,3.403,116,3.581,154,2.467,158,5.249,159,5.373,160,5.373,161,3.262,162,5.352,163,5.49,164,2.994,165,3.708,166,4.829]],["title/interfaces/EditorJSChange.html",[0,0.172,156,2.585]],["body/interfaces/EditorJSChange.html",[0,0.312,1,0.813,2,1.021,3,0.194,4,0.194,5,0.177,6,0.128,7,0.211,9,0.524,11,0.629,12,0.321,13,0.86,14,1.531,17,1.631,18,1.335,23,0.013,24,0.312,48,2.409,65,0.007,66,0.009,67,0.007,71,0.522,76,1.482,92,2.717,136,2.752,137,3.111,138,5.318,139,4.409,140,2.479,141,2.239,142,1.431,144,1.84,145,2.161,146,2.496,147,2.479,148,2.752,149,2.608,150,2.072,151,3.249,152,2.752,153,2.752,154,2.824,155,3.418,156,3.825,157,3.043]],["title/interfaces/EditorJSClass.html",[0,0.172,167,2.438]],["body/interfaces/EditorJSClass.html",[0,0.311,1,0.434,2,0.847,3,0.161,4,0.161,5,0.147,6,0.106,7,0.175,9,0.434,11,0.638,12,0.338,13,0.714,14,1.349,15,1.036,18,1.431,22,2.209,23,0.013,24,0.317,34,0.575,40,1.777,52,1.268,55,1.318,57,1.229,65,0.008,66,0.008,67,0.006,71,0.474,72,1.873,73,0.472,76,1.229,92,1.318,96,1.973,109,1.793,118,2.581,120,1.793,121,1.793,125,2.189,127,1.838,141,1.417,142,2.163,144,2.126,146,1.969,149,1.65,150,1.719,154,1.417,157,1.526,161,2.608,164,2.394,165,3.001,167,3.179,168,2.42,169,2.608,170,0.928,171,1.973,172,3.012,173,3.309,174,2.863,175,1.349,176,3.37,177,3.593,178,3.012,179,2.497,180,2.42,181,2.42,182,2.056,183,3.47,184,3.007,185,3.746,186,2.58,187,2.42,188,2.209,189,2.42,190,2.056,191,1.719,192,2.283,193,2.283,194,1.873,195,2.283,196,2.283,197,2.283,198,2.283,199,2.42,200,3.179,201,2.163,202,2.42,203,2.283,204,2.163,205,2.58,206,2.42,207,2.58,208,1.969,209,3.179,210,3.37,211,2.283,212,2.283,213,2.42]],["title/interfaces/EditorJSInstanceConfig.html",[0,0.172,181,2.585]],["body/interfaces/EditorJSInstanceConfig.html",[0,0.301,1,0.424,2,0.827,3,0.157,4,0.157,5,0.143,6,0.104,7,0.171,9,0.424,11,0.683,12,0.332,13,0.697,14,1.328,15,1.012,18,1.372,22,2.173,23,0.013,24,0.316,34,0.561,40,1.519,52,1.522,55,1.806,57,1.2,65,0.008,66,0.008,67,0.006,71,0.468,72,1.829,73,0.461,76,1.2,92,1.288,96,2.43,109,1.751,118,2.78,120,1.751,121,1.751,125,2.162,127,1.815,141,1.384,142,2.144,144,2.091,146,1.944,149,1.612,150,2.355,154,1.941,157,1.491,161,2.566,164,2.355,165,3.675,167,2.23,168,2.364,169,1.829,170,0.844,171,1.384,172,2.112,173,2.831,174,2.008,175,0.946,176,2.364,177,2.52,178,2.112,179,3.238,180,3.315,181,3.315,182,2.817,183,3.518,184,3.174,185,3.954,186,3.535,187,4.151,188,2.173,189,4.151,190,2.008,191,1.679,192,2.23,193,2.23,194,1.829,195,2.23,196,2.23,197,2.23,198,2.23,199,2.364,200,3.127,201,2.112,202,2.364,203,2.23,204,2.112,205,2.52,206,2.364,207,2.52,208,1.944,209,3.127,210,3.315,211,2.23,212,2.23,213,2.364]],["title/interfaces/EditorJSMaterialForm.html",[0,0.172,214,3.564]],["body/interfaces/EditorJSMaterialForm.html",[0,0.252,2,0.513,3,0.097,4,0.097,5,0.089,6,0.064,7,0.106,9,0.263,10,1.681,11,0.241,12,0.252,14,0.929,18,0.849,23,0.013,24,0.191,40,1.499,52,0.759,57,1.925,65,0.004,66,0.006,67,0.004,71,0.531,73,0.286,100,2.879,102,2.474,111,3.438,112,0.961,118,1.358,123,1.685,125,0.828,127,0.695,142,1.138,145,1.087,151,4.112,154,1.358,155,1.311,162,1.564,164,2.045,170,0.472,172,2.573,175,0.929,182,3.221,185,1.246,188,1.887,190,1.246,191,1.042,194,1.135,214,4.916,215,2.022,216,3.374,217,1.827,218,1.827,219,2.659,220,4.076,221,5.637,222,2.32,223,2.32,224,2.32,225,3.069,226,1.681,227,2.474,228,2.846,229,3.199,230,3.199,231,3.669,232,2.189,233,2.32,234,3.969,235,3.669,236,2.022,237,5.175,238,1.311,239,1.827,240,3.07,241,2.879,242,1.681,243,1.564,244,2.65,245,2.022,246,2.022,247,2.446,248,1.827,249,2.446,250,2.32,251,5.031,252,3.199,253,0.745,254,2.022,255,2.074,256,0.891,257,2.32,258,2.022,259,1.827,260,2.022,261,1.564,262,1.467,263,1.564,264,2.022,265,1.681,266,2.022,267,0.65,268,3.75,269,1.681,270,1.564,271,2.133,272,2.32,273,3.763,274,2.32,275,3.069,276,2.32,277,3.669,278,2.32,279,3.427,280,2.708,281,3.669,282,3.587,283,2.32,284,2.32,285,6.511,286,4.55,287,3.029,288,2.32,289,3.669,290,2.32,291,2.32,292,4.945,293,2.32,294,4.552,295,2.32,296,2.32,297,2.32,298,3.669,299,2.32,300,3.669,301,2.32,302,2.32,303,2.32,304,2.32,305,5.995,306,2.32,307,3.669,308,2.32,309,2.32,310,2.32,311,5.475,312,2.32,313,3.669,314,2.32,315,2.022,316,2.659,317,2.32,318,2.022,319,2.573,320,2.32,321,2.659,322,3.669,323,2.32,324,2.32,325,1.827,326,2.32,327,2.32,328,2.32,329,3.669,330,2.32,331,2.32,332,2.32,333,3.669,334,3.669,335,1.188,336,2.32,337,2.32,338,2.32,339,2.189,340,2.659,341,3.669,342,2.32,343,2.32,344,1.464,345,1.681,346,2.659,347,3.069,348,2.32,349,1.246,350,1.681,351,1.681,352,1.311,353,3.969,354,2.32,355,1.681,356,4.552,357,4.552,358,4.552,359,3.969,360,2.32,361,3.669,362,1.681,363,2.32,364,1.827,365,2.022,366,2.022,367,1.467,368,2.022,369,2.022,370,1.564,371,2.32,372,1.681,373,2.32,374,2.32,375,2.022,376,2.32,377,2.32,378,2.32,379,2.32,380,2.32,381,2.32]],["title/interfaces/EditorMap.html",[0,0.172,148,2.438]],["body/interfaces/EditorMap.html",[0,0.314,1,0.693,2,1.036,3,0.197,4,0.197,5,0.18,6,0.17,7,0.279,9,0.531,12,0.314,16,2.645,17,1.669,18,1.393,19,1.356,23,0.013,24,0.314,48,1.671,65,0.007,66,0.009,67,0.007,71,0.525,76,1.503,92,2.78,136,2.792,137,3.156,138,5.441,139,4.47,140,2.515,141,2.26,142,1.452,144,1.867,145,2.193,146,2.182,147,3.28,148,3.642,149,2.633,150,2.102,151,3.28,152,2.792,153,2.792,154,2.515,155,2.645,156,2.96,157,2.435,382,4.681]],["title/classes/FixedHeader.html",[170,0.526,383,3.219]],["body/classes/FixedHeader.html",[1,0.514,3,0.19,4,0.19,5,0.174,6,0.186,7,0.305,9,0.514,11,0.695,12,0.31,13,0.844,15,2.127,17,0.936,19,1.73,23,0.013,24,0.251,34,0.897,38,1.267,40,1.73,44,3.352,52,1.235,65,0.007,66,0.009,67,0.007,71,0.517,73,0.559,83,1.675,86,1.805,89,1.453,104,1.917,105,1.738,110,1.805,112,1.563,124,0.429,125,1.615,126,2.132,127,1.79,129,2.132,170,0.768,171,2.21,173,2.575,175,1.146,179,2.797,208,1.453,232,3.562,253,1.917,256,2.293,267,1.267,279,2.214,280,1.951,282,2.317,344,1.805,383,5.263,384,3.051,385,3.945,386,2.797,387,5.971,388,4.703,389,4.525,390,2.575,391,5.206,392,4.525,393,5.827,394,5.206,395,1.73,396,1.876,397,3.945,398,3.278,399,3.564,400,3.278,401,3.945,402,5.206,403,3.945,404,3.945,405,3.945,406,3.945,407,3.945,408,3.945,409,1.738,410,2.032,411,2.032,412,3.945,413,1.951,414,2.475,415,2.699]],["title/interfaces/Header.html",[0,0.172,44,1.694]],["body/interfaces/Header.html",[0,0.332,1,0.936,2,0.801,3,0.152,4,0.152,5,0.139,6,0.101,7,0.165,8,1.853,9,0.411,11,0.861,12,0.298,13,0.674,14,1.506,15,1.974,17,0.748,18,1.432,21,1.625,22,2.466,23,0.013,24,0.318,25,1.56,26,2.971,27,1.625,28,1.853,29,2.624,30,2.624,31,1.56,32,1.56,33,2.624,34,1.065,35,2.752,36,2.752,37,1.443,38,1.013,39,2.507,40,1.874,41,2.623,42,3.815,43,2.507,44,3.22,45,3.47,46,2.4,47,2.624,48,2.123,49,2.507,50,2.945,51,2.507,52,1.338,53,2.752,54,1.943,55,2.049,56,1.943,57,1.91,58,1.943,59,1.943,60,1.943,61,1.943,62,2.507,63,1.695,64,1.853,65,0.006,66,0.008,67,0.006]],["title/interfaces/HeaderBlock.html",[0,0.172,49,2]],["body/interfaces/HeaderBlock.html",[0,0.336,1,0.942,2,0.817,3,0.155,4,0.155,5,0.142,6,0.103,7,0.169,8,1.89,9,0.419,11,0.865,12,0.308,13,0.688,14,1.523,15,1.933,17,0.763,18,1.396,21,1.657,22,2.493,23,0.013,24,0.32,25,1.591,26,2.986,27,1.657,28,1.89,29,2.661,30,2.661,31,1.591,32,1.591,33,2.661,34,1.033,35,2.791,36,2.791,37,1.472,38,1.033,39,2.542,40,1.993,41,2.642,42,3.343,43,2.542,44,3.103,45,2.542,46,1.729,47,1.89,48,1.317,49,2.943,50,2.967,51,2.542,52,1.35,53,2.791,54,1.982,55,2.071,56,1.982,57,1.931,58,1.982,59,1.982,60,1.982,61,1.982,62,2.542,63,1.729,64,1.89,65,0.006,66,0.008,67,0.006]],["title/interfaces/Image.html",[0,0.172,50,1.763]],["body/interfaces/Image.html",[0,0.329,1,0.931,2,0.761,3,0.144,4,0.144,5,0.132,6,0.096,7,0.157,8,1.761,9,0.39,11,0.863,12,0.293,13,0.641,14,1.465,15,1.945,17,0.711,18,1.449,21,1.545,22,2.398,23,0.013,24,0.315,25,1.483,26,2.932,27,1.545,28,1.761,29,2.531,30,2.531,31,1.483,32,1.483,33,2.531,34,1.047,35,2.655,36,2.655,37,1.372,38,0.963,39,2.418,40,1.832,41,2.572,42,3.238,43,2.418,44,3.047,45,2.418,46,1.611,47,1.761,48,1.228,49,2.418,50,3.17,51,3.412,52,1.654,53,3.746,54,2.655,55,2.402,56,3.397,57,2.404,58,2.655,59,3.397,60,2.655,61,3.397,62,2.418,63,1.611,64,1.761,65,0.005,66,0.008,67,0.005]],["title/interfaces/ImageBlock.html",[0,0.172,62,2]],["body/interfaces/ImageBlock.html",[0,0.336,1,0.942,2,0.817,3,0.155,4,0.155,5,0.142,6,0.103,7,0.169,8,1.89,9,0.419,11,0.865,12,0.308,13,0.688,14,1.523,15,1.933,17,0.763,18,1.396,21,1.657,22,2.493,23,0.013,24,0.32,25,1.591,26,2.986,27,1.657,28,1.89,29,2.661,30,2.661,31,1.591,32,1.591,33,2.661,34,1.033,35,2.791,36,2.791,37,1.472,38,1.033,39,2.542,40,1.993,41,2.642,42,3.343,43,2.542,44,3.039,45,2.542,46,1.729,47,1.89,48,1.317,49,2.542,50,3.078,51,2.542,52,1.35,53,2.791,54,1.982,55,2.071,56,1.982,57,1.931,58,1.982,59,1.982,60,1.982,61,1.982,62,2.943,63,1.729,64,1.89,65,0.006,66,0.008,67,0.006]],["title/interfaces/InjectorApiCallOptions.html",[0,0.172,209,2.438]],["body/interfaces/InjectorApiCallOptions.html",[0,0.302,1,0.427,2,0.833,3,0.158,4,0.158,5,0.145,6,0.105,7,0.172,9,0.427,11,0.685,12,0.335,13,0.702,14,1.334,15,1.02,18,1.484,22,2.184,23,0.013,24,0.316,34,0.565,40,1.527,52,1.485,55,1.297,57,1.209,65,0.008,66,0.008,67,0.006,71,0.47,72,1.843,73,0.465,76,1.209,92,1.297,96,1.951,109,2.469,118,2.566,120,1.764,121,1.764,125,2.17,127,1.822,141,1.394,142,2.228,144,2.102,146,1.952,149,1.624,150,1.691,154,1.394,157,1.502,161,2.975,164,2.367,165,2.975,167,2.246,168,2.381,169,1.843,170,0.847,171,1.394,172,2.128,173,2.84,174,2.023,175,0.953,176,2.381,177,2.539,178,2.128,179,1.764,180,2.381,181,2.381,182,2.023,183,3.667,184,3.297,185,3.962,186,2.539,187,2.381,188,2.184,189,2.381,190,2.023,191,1.691,192,2.246,193,2.246,194,1.843,195,2.246,196,2.246,197,2.246,198,2.246,199,2.381,200,3.143,201,2.128,202,2.381,203,2.246,204,2.128,205,2.539,206,2.381,207,3.553,208,2.226,209,3.626,210,4.542,211,2.246,212,2.246,213,2.381]],["title/interfaces/InjectorApiCallResponse.html",[0,0.172,212,2.438]],["body/interfaces/InjectorApiCallResponse.html",[0,0.305,1,0.444,2,0.866,3,0.164,4,0.164,5,0.15,6,0.109,7,0.179,9,0.444,11,0.563,12,0.334,13,0.73,14,1.371,15,1.06,18,1.39,22,2.776,23,0.013,24,0.319,34,0.588,40,1.798,52,1.283,55,1.348,57,1.257,65,0.011,66,0.008,67,0.006,71,0.48,72,1.915,73,0.483,76,1.257,92,1.348,96,2.004,109,1.833,118,2.602,120,1.833,121,1.833,125,2.215,127,1.86,141,1.449,142,2.077,144,2.159,146,1.993,149,1.688,150,1.758,154,1.449,157,1.561,161,2.649,164,2.431,165,3.037,167,2.335,168,2.475,169,1.915,170,0.861,171,1.449,172,2.212,173,2.888,174,2.103,175,0.991,176,2.475,177,2.639,178,2.212,179,1.833,180,2.475,181,2.475,182,2.103,183,3.492,184,3.031,185,3.777,186,2.639,187,2.475,188,2.244,189,2.475,190,2.103,191,1.758,192,2.335,193,2.335,194,1.915,195,2.335,196,2.335,197,2.335,198,2.335,199,2.475,200,3.229,201,2.212,202,2.475,203,2.335,204,2.212,205,2.639,206,2.475,207,2.639,208,2.15,209,3.702,210,3.423,211,3.229,212,3.229,213,2.475]],["title/interfaces/InjectorMethodOption.html",[0,0.172,203,2.438]],["body/interfaces/InjectorMethodOption.html",[0,0.301,1,0.423,2,0.824,3,0.156,4,0.156,5,0.143,6,0.103,7,0.17,9,0.423,11,0.718,12,0.334,13,0.694,14,1.323,15,1.774,18,1.422,22,2.167,23,0.013,24,0.315,34,0.559,40,1.514,52,1.615,55,1.282,57,1.94,65,0.008,66,0.008,67,0.006,71,0.467,72,1.821,73,0.459,76,1.195,92,1.282,96,1.935,109,1.743,118,2.823,120,1.743,121,1.743,125,2.157,127,1.811,141,1.935,142,2.032,144,2.613,146,2.104,149,1.605,150,1.672,154,1.378,157,1.484,161,2.956,164,2.348,165,2.956,167,2.22,168,2.354,169,1.821,170,0.842,171,1.378,172,2.103,173,2.825,174,2,175,0.942,176,2.354,177,2.509,178,2.103,179,1.743,180,2.354,181,2.354,182,2,183,3.659,184,3.086,185,3.845,186,2.509,187,2.354,188,2.167,189,2.354,190,2,191,1.672,192,2.22,193,2.22,194,1.821,195,2.22,196,2.22,197,2.22,198,2.22,199,2.354,200,3.604,201,2.103,202,2.354,203,3.118,204,2.954,205,3.524,206,4.143,207,2.509,208,1.94,209,3.118,210,3.305,211,2.22,212,2.22,213,2.354]],["title/interfaces/List.html",[0,0.172,26,1.63]],["body/interfaces/List.html",[0,0.332,1,0.936,2,0.801,3,0.152,4,0.152,5,0.139,6,0.101,7,0.165,8,1.853,9,0.411,11,0.863,12,0.298,13,0.674,14,1.506,15,1.974,17,0.748,18,1.389,21,1.625,22,2.939,23,0.013,24,0.318,25,1.56,26,3.129,27,1.625,28,1.853,29,2.624,30,2.624,31,1.56,32,1.56,33,3.313,34,1.065,35,3.81,36,3.81,37,1.443,38,1.013,39,2.507,40,1.874,41,2.623,42,3.313,43,2.507,44,3.022,45,2.507,46,1.695,47,1.853,48,1.291,49,2.507,50,2.945,51,2.507,52,1.338,53,2.752,54,1.943,55,2.049,56,1.943,57,1.91,58,1.943,59,1.943,60,1.943,61,1.943,62,2.507,63,1.695,64,1.853,65,0.006,66,0.008,67,0.006]],["title/interfaces/ListBlock.html",[0,0.172,39,2]],["body/interfaces/ListBlock.html",[0,0.333,1,0.942,2,0.812,3,0.154,4,0.154,5,0.141,6,0.102,7,0.168,8,1.879,9,0.417,11,0.864,12,0.314,13,0.684,14,1.518,15,1.929,17,0.759,18,1.394,21,1.648,22,2.485,23,0.013,24,0.319,25,1.582,26,3.073,27,1.648,28,1.879,29,2.65,30,2.65,31,1.582,32,1.582,33,2.65,34,1.07,35,2.78,36,2.78,37,2.064,38,1.449,39,2.933,40,1.989,41,2.637,42,3.334,43,2.532,44,3.034,45,2.532,46,1.719,47,1.879,48,1.31,49,2.532,50,2.96,51,2.532,52,1.346,53,2.78,54,1.971,55,2.065,56,1.971,57,1.925,58,1.971,59,1.971,60,1.971,61,1.971,62,2.532,63,1.719,64,1.879,65,0.006,66,0.008,67,0.006]],["title/classes/MockEditorJS.html",[170,0.526,416,3.219]],["body/classes/MockEditorJS.html",[3,0.202,4,0.202,5,0.184,6,0.218,7,0.359,11,0.802,13,0.895,14,1.572,18,1.158,19,2.235,23,0.013,24,0.261,52,0.993,65,0.007,66,0.01,67,0.007,71,0.371,104,1.542,110,2.744,141,1.778,146,2.335,157,1.916,170,0.798,173,3.136,179,2.25,188,1.991,280,2.677,344,2.476,384,3.238,388,3.782,390,2.071,416,4.889,417,4.188,418,4.984,419,4.984,420,5.418,421,4.11,422,6.208,423,4.803,424,4.803,425,4.984,426,4.803,427,4.803,428,4.188,429,3.782,430,3.508,431,4.188,432,3.782,433,4.188,434,4.889,435,4.188,436,5.413,437,4.188,438,3.782,439,3.238,440,4.188,441,3.238,442,4.188]],["title/injectables/MockNgZone.html",[443,1.836,444,3.564]],["body/injectables/MockNgZone.html",[3,0.203,4,0.203,5,0.185,6,0.215,7,0.353,9,0.548,11,0.717,13,0.901,14,1.578,19,2.186,23,0.013,24,0.203,34,0.725,40,1.805,52,1.288,65,0.007,66,0.01,67,0.007,71,0.373,73,0.596,104,2.001,107,2.729,127,1.868,164,2.169,170,0.621,171,2.553,179,3.618,188,2.583,260,5.432,279,2.363,280,2.687,344,2.751,345,3.499,386,2.919,390,2.687,443,2.799,444,5.432,445,2.881,446,7.724,447,6.735,448,4.83,449,6.23,450,6.577,451,6.897,452,4.907,453,6.23,454,7.287,455,6.23,456,6.23,457,4.83,458,7.287,459,6.23,460,4.83,461,4.83,462,6.014,463,6.23,464,4.83,465,4.83]],["title/classes/MockPlugin.html",[170,0.526,429,3.219]],["body/classes/MockPlugin.html",[3,0.219,4,0.219,5,0.2,6,0.199,7,0.327,13,0.971,18,0.971,19,1.894,23,0.013,24,0.275,65,0.008,66,0.01,67,0.008,71,0.403,110,2.608,141,1.929,146,2.1,157,2.078,170,0.841,171,1.929,173,2.82,188,2.16,280,2.82,344,2.85,384,3.513,386,3.063,416,4.103,417,4.543,418,3.775,419,3.775,420,4.103,421,3.695,425,4.738,428,4.543,429,5.149,430,4.362,431,4.543,432,4.103,433,4.543,434,5.149,435,4.543,436,5.701,437,4.543,438,4.103,439,3.513,440,4.543,441,3.513,442,4.543,466,5.21,467,5.21]],["title/interfaces/NgxEditorJSConfig.html",[0,0.172,468,2.962]],["body/interfaces/NgxEditorJSConfig.html",[0,0.223,1,0.818,2,0.843,3,0.16,4,0.16,5,0.146,6,0.106,7,0.174,9,0.433,11,0.785,12,0.317,13,0.71,14,1.345,15,1.952,18,1.429,23,0.013,24,0.292,34,1.083,41,2.041,48,2.184,52,1.678,57,2.315,65,0.006,66,0.008,67,0.006,71,0.411,72,1.864,73,0.47,76,1.223,96,2.669,104,1.706,110,2.44,111,2.386,112,1.391,117,3.36,120,1.785,121,2.489,122,3.39,125,2.184,127,1.834,140,2.854,142,1.898,144,2.64,161,1.864,164,2.386,165,2.6,169,1.864,183,3.101,184,1.643,191,1.711,204,2.153,271,2.489,286,3.85,347,3.582,349,2.854,421,2.153,430,3.003,468,4.796,469,3,470,5.213,471,5.213,472,5.213,473,5.213,474,5.213,475,5.678,476,4.633,477,3.85,478,3.36,479,3.36,480,4.184,481,4.184,482,4.633,483,4.633,484,3.582,485,4.633,486,3.85,487,3.85,488,4.184,489,5.213,490,2.569,491,2.76,492,3,493,2.569,494,3,495,2.76,496,2.569,497,2.76,498,3,499,2.273,500,3,501,3]],["title/components/NgxEditorJSDemoHomeComponent.html",[228,1.694,502,2.31]],["body/components/NgxEditorJSDemoHomeComponent.html",[3,0.178,4,0.178,5,0.163,6,0.118,7,0.194,12,0.33,23,0.013,24,0.178,27,1.905,63,2.679,65,0.007,66,0.009,67,0.007,71,0.328,73,0.524,101,2.679,104,2.078,116,3.721,118,2.564,123,2.904,124,0.656,142,1.774,170,0.545,175,1.448,190,3.721,208,1.837,216,3.721,228,3.252,240,2.173,244,2.173,249,2.279,251,4.38,255,2.397,261,3.856,262,5.014,263,3.856,265,4.144,335,3.547,339,2.53,349,3.073,352,4.375,502,3.914,503,3.074,504,2.53,505,3.074,506,4.242,507,3.699,508,3.699,509,2.86,510,4.357,511,7.613,512,5.642,513,4.987,514,3.346,515,4.504,516,5.454,517,4.144,518,4.144,519,4.504,520,5.719,521,4.144,522,3.232,523,3.885,524,5.018,525,5.719,526,5.719,527,1.829,528,3.856,529,2.279,530,5.018,531,3.074,532,3.074,533,3.074,534,3.074,535,2.53,536,2.682,537,3.074,538,2.53,539,2.279,540,3.074,541,2.53,542,2.076,543,3.074,544,2.397,545,1.829,546,2.86,547,2.86,548,3.074]],["title/modules/NgxEditorJSDemoMaterialModule.html",[124,0.387,549,2.585]],["body/modules/NgxEditorJSDemoMaterialModule.html",[3,0.222,4,0.222,5,0.203,6,0.147,7,0.242,12,0.277,23,0.013,24,0.222,26,2.108,65,0.008,66,0.01,67,0.008,71,0.64,73,0.652,170,0.679,239,4.162,240,2.707,395,1.911,549,4.172,550,1.48,551,4.162,552,5.285,553,7.192,554,5.285,555,6.271,556,5.285,557,6.271,558,5.285,559,6.271,560,5.285,561,7.192,562,5.285,563,6.271,564,7.192,565,5.285,566,6.271,567,5.285,568,6.271,569,4.608,570,7.192,571,5.285,572,2.987,573,2.374]],["title/directives/NgxEditorJSDirective.html",[244,2.093,529,2.196]],["body/directives/NgxEditorJSDirective.html",[1,0.757,3,0.064,4,0.064,5,0.059,6,0.206,7,0.339,9,0.455,11,0.75,12,0.314,13,0.285,15,0.704,18,1.309,19,2.137,23,0.013,24,0.064,25,1.121,32,2.112,34,0.602,37,1.355,38,0.728,41,0.999,42,2.055,48,1.966,52,0.703,55,1.801,57,1.768,65,0.002,66,0.004,67,0.002,71,0.404,73,0.188,76,0.49,84,1.963,93,2.155,96,1.666,97,1.644,101,1.591,104,1.445,109,1.218,110,1.954,111,3.04,112,1.051,116,1.397,118,2.379,122,2.055,123,0.963,125,0.928,127,1.784,139,0.82,140,1.397,141,1.485,142,2.239,144,0.609,145,0.715,146,1.911,149,0.658,150,1.802,151,1.825,154,0.963,157,1.795,162,3.713,163,4.162,165,2.397,170,0.196,171,1.813,173,0.658,174,2.155,175,0.658,183,2.945,184,1.121,188,0.633,194,1.963,195,0.91,225,2.291,227,2.705,228,2.606,232,3.656,233,2.537,241,2.148,242,1.106,243,1.029,244,1.332,247,2.958,248,1.202,261,1.753,262,1.644,270,1.753,271,2.58,273,3.878,275,1.753,279,2.912,280,2.112,282,2.305,286,2.462,287,2.155,292,2.048,311,2.267,319,2.267,321,1.884,325,2.048,335,1.332,340,3.261,344,1.037,346,2.907,347,1.753,349,3.636,352,2.267,353,2.962,355,2.907,362,1.106,364,2.048,367,1.644,368,2.267,370,1.029,372,2.907,375,2.962,386,1.218,390,1.465,418,1.884,419,2.907,425,2.907,430,1.47,438,2.048,441,1.029,462,5.344,470,4.118,471,3.16,472,3.545,473,3.545,474,3.545,475,4.118,478,1.644,479,3.098,480,2.048,484,1.753,486,1.884,489,3.545,504,1.551,509,1.029,521,1.884,523,0.82,524,1.884,528,1.753,529,3.731,546,1.029,547,1.753,574,7.42,575,1.526,576,2.048,577,3.16,578,2.267,579,2.962,580,4.524,581,2.6,582,3.498,583,4.012,584,2.048,585,2.6,586,2.676,587,3.498,588,3.397,589,3.397,590,2.6,591,1.884,592,3.139,593,5.009,594,1.526,595,4.012,596,2.462,597,1.526,598,3.397,599,4.012,600,1.526,601,2.048,602,1.526,603,1.753,604,2.6,605,2.267,606,2.048,607,2.6,608,2.267,609,2.6,610,2.6,611,2.048,612,2.6,613,1.526,614,2.267,615,2.267,616,4.337,617,1.526,618,1.526,619,2.907,620,2.267,621,1.526,622,2.6,623,1.526,624,1.526,625,2.6,626,2.6,627,2.6,628,1.526,629,2.6,630,1.526,631,1.526,632,5.95,633,2.267,634,1.526,635,2.267,636,1.526,637,1.526,638,1.526,639,1.526,640,2.6,641,1.526,642,1.106,643,1.526,644,1.884,645,3.545,646,2.6,647,2.6,648,4.012,649,1.526,650,2.267,651,2.6,652,3.16,653,1.884,654,2.267,655,2.6,656,2.267,657,2.267,658,2.6,659,2.6,660,3.035,661,1.526,662,2.267,663,1.331,664,1.526,665,2.462,666,1.526,667,1.526,668,1.526,669,1.526,670,1.526,671,1.526,672,1.526,673,2.267,674,1.526,675,1.526,676,1.331,677,1.331,678,1.526,679,1.331,680,1.526,681,1.526,682,1.526,683,1.526,684,2.907,685,1.526,686,4.898,687,1.526,688,1.331,689,1.526,690,2.962,691,1.526,692,1.526,693,1.526,694,1.526,695,1.526,696,1.526,697,1.526,698,1.526,699,1.526,700,3.545,701,1.526,702,1.526,703,1.526,704,1.331,705,1.526,706,1.526,707,1.526,708,2.6,709,1.526,710,1.331,711,1.526,712,1.526,713,3.397,714,1.526,715,1.526,716,1.202,717,1.526,718,1.526,719,1.526,720,1.526,721,1.331,722,1.331,723,1.526,724,1.526,725,1.526,726,1.526,727,1.526,728,1.526,729,1.526,730,1.526,731,1.526,732,1.526]],["title/modules/NgxEditorJSModule.html",[124,0.387,733,2.585]],["body/modules/NgxEditorJSModule.html",[3,0.141,4,0.141,5,0.129,6,0.135,7,0.222,9,0.55,10,2.427,11,0.348,12,0.299,19,0.971,23,0.013,24,0.204,34,0.728,37,1.934,52,1.538,65,0.005,66,0.008,67,0.005,71,0.612,73,0.414,76,1.076,96,2.312,101,3.419,104,1.076,109,2.926,110,2.843,124,0.628,142,1.938,170,0.623,171,1.24,172,2.74,175,1.228,179,2.271,184,2.694,198,3.399,201,2.74,216,2.605,217,2.638,238,1.893,239,2.638,240,1.716,244,3.96,245,2.921,246,2.921,247,3.713,248,2.638,249,4.154,253,2.344,255,4.37,267,1.75,275,3.269,280,2.458,282,1.716,344,1.336,352,2.74,386,1.569,390,1.445,395,1.651,414,2.362,421,3.905,491,3.513,493,3.842,496,2.259,497,4.803,499,2.892,514,2.178,515,3.819,516,3.819,522,3.53,527,1.445,550,0.938,563,4.228,568,4.228,569,2.921,572,1.893,573,2.56,603,3.269,642,2.427,733,5.067,734,1.445,735,2.919,736,1.716,737,2.921,738,2.921,739,2.921,740,2.921,741,2.483,742,1.569,743,1.569,744,4.228,745,2.921,746,4.228,747,4.919,748,5.699,749,4.849,750,3.35,751,3.35,752,6.246,753,5.699,754,3.066,755,1.998,756,4.849,757,4.228,758,4.969,759,3.35,760,3.35,761,2.921,762,3.35,763,2.921,764,2.921,765,2.921,766,3.35,767,4.969,768,4.969,769,2.921,770,3.35,771,3.35]],["title/interfaces/NgxEditorJSModuleConfig.html",[0,0.172,421,2.31]],["body/interfaces/NgxEditorJSModuleConfig.html",[0,0.248,1,0.752,2,0.982,3,0.187,4,0.187,5,0.17,6,0.123,7,0.203,9,0.504,11,0.462,12,0.336,13,0.828,14,1.493,15,1.597,18,1.234,23,0.013,24,0.308,34,0.994,41,1.705,48,1.585,52,1.219,57,1.893,65,0.007,66,0.009,67,0.007,71,0.456,72,2.172,73,0.548,76,1.425,96,2.794,104,1.425,110,2.352,111,1.994,112,1.162,117,2.807,120,2.08,121,2.762,122,3.02,125,2.363,127,1.984,140,2.385,142,1.829,144,2.352,161,2.885,164,1.994,165,3.452,169,2.172,183,2.08,184,2.543,191,1.994,204,3.332,271,2.08,286,3.216,347,2.993,349,2.385,421,3.332,430,2.509,468,4.797,469,3.496,470,3.496,471,3.496,472,3.496,473,3.496,474,3.496,475,4.643,476,3.87,477,3.216,478,2.807,479,2.807,480,3.496,481,3.496,482,3.87,483,3.87,484,2.993,485,3.87,486,3.216,487,3.216,488,3.496,489,4.643,490,3.975,491,4.272,492,3.496,493,2.993,494,3.496,495,3.216,496,2.993,497,3.216,498,3.496,499,2.648,500,3.496,501,3.496]],["title/injectables/NgxEditorJSPluginService.html",[443,1.836,772,2.438]],["body/injectables/NgxEditorJSPluginService.html",[3,0.125,4,0.125,5,0.115,6,0.191,7,0.314,9,0.671,11,0.657,12,0.313,13,0.557,17,1.594,18,1.424,19,1.921,23,0.013,24,0.125,26,2.817,34,0.8,37,2.357,38,2.23,52,1.421,65,0.005,66,0.007,67,0.005,71,0.345,73,0.369,78,3.324,81,1.687,84,2.18,89,1.431,92,2.433,93,3.563,94,3.179,96,2.455,98,4.194,104,2.03,107,3.34,112,0.782,118,1.649,125,1.066,132,4.829,134,1.341,163,3.228,166,3.228,169,2.892,170,0.573,171,2.673,267,1.248,273,4.175,279,2.608,280,3.17,282,3.238,287,1.604,319,1.687,344,1.191,386,2.087,390,2.727,395,1.291,396,1.237,443,2.001,445,1.781,490,3.985,522,2.518,592,2.282,601,3.509,619,3.228,652,3.509,747,4.198,772,3.525,773,5.992,774,2.985,775,3.884,776,3.985,777,4.647,778,4.455,779,5.91,780,4.455,781,4.455,782,4.455,783,2.985,784,2.985,785,4.455,786,2.985,787,2.985,788,3.884,789,4.455,790,2.985,791,5.91,792,5.153,793,4.455,794,4.455,795,2.985,796,4.455,797,3.884,798,2.985,799,2.985,800,2.351,801,2.985,802,2.985,803,2.603,804,2.985,805,2.985,806,2.985,807,4.455,808,4.455,809,2.985,810,4.455,811,4.455,812,2.985,813,2.603,814,2.985,815,4.455,816,2.985,817,4.455,818,2.985,819,2.985,820,2.985,821,2.985,822,4.455,823,2.985]],["title/modules/NgxEditorJSPluginServiceModule.html",[124,0.387,824,2.756]],["body/modules/NgxEditorJSPluginServiceModule.html",[3,0.226,4,0.226,5,0.207,6,0.15,7,0.246,12,0.226,23,0.013,24,0.226,38,1.508,65,0.008,66,0.01,67,0.008,71,0.586,73,0.665,112,1.748,119,4.22,124,0.51,126,2.589,129,2.589,134,2.998,170,0.692,253,2.329,256,2.563,267,2.031,395,1.934,396,2.232,414,2.767,527,2.322,550,1.508,573,2.418,734,2.322,735,2.758,736,2.758,741,3.418,742,2.522,743,2.522,767,4.694,768,4.694,772,4.738,773,4.694,824,5.355,825,4.694,826,4.694,827,5.384,828,3.772,829,3.212,830,5.384]],["title/injectables/NgxEditorJSService.html",[247,2.196,443,1.836]],["body/injectables/NgxEditorJSService.html",[3,0.047,4,0.047,5,0.043,6,0.16,7,0.262,9,0.634,11,0.58,12,0.328,13,0.208,15,0.722,18,0.763,19,1.617,21,0.889,22,0.462,23,0.013,24,0.047,32,0.853,34,0.401,37,1.632,38,0.554,52,1.217,65,0.009,66,0.003,67,0.002,71,0.385,73,0.138,76,0.358,78,1.91,92,1.273,93,1.735,94,1.18,96,1.196,97,1.251,101,0.927,104,1.844,107,3.954,109,1.25,110,1.632,111,2.427,112,0.518,113,1.334,116,2.198,118,2.57,119,2.042,125,1.461,127,1.804,136,1.18,139,1.986,141,2.066,142,2.096,144,1.475,145,0.522,146,1.598,147,2.674,148,1.591,149,2.036,150,1.451,151,2.38,152,1.18,153,1.18,154,2.228,157,0.789,158,2.544,161,3.785,163,0.808,164,0.501,165,1.305,167,1.927,169,1.58,170,0.343,171,2.273,173,0.853,174,1.063,175,0.501,178,0.63,179,0.927,182,1.063,183,2.82,184,3.328,185,3.786,187,1.251,188,1.533,189,1.251,191,1.99,192,0.665,193,0.665,194,0.968,196,0.665,197,0.665,201,0.63,203,4.285,208,2.293,209,1.927,210,2.338,211,1.18,212,1.591,213,2.338,219,1.434,233,0.705,241,2.338,243,0.752,247,1.063,253,0.358,271,0.927,273,3.903,279,2.002,280,2.407,282,3.387,287,3.299,316,1.434,319,2.94,325,2.544,339,1.18,344,0.789,350,1.434,351,2.34,352,3.154,355,1.933,359,1.725,362,1.434,367,2.338,369,1.725,370,2.987,386,2.075,390,2.407,400,2.34,418,3.209,419,3.769,420,0.878,421,1.825,425,2.965,430,1.508,439,3.184,441,0.752,443,0.889,445,0.665,447,4.117,450,3.568,452,1.559,478,2.042,488,2.544,490,4.214,491,1.434,493,0.752,504,1.18,514,0.501,522,2.312,580,2.544,586,0.878,587,3.862,592,2.664,601,0.878,603,1.799,606,3.719,611,1.559,619,0.808,644,3.769,645,3.222,652,1.559,662,1.725,663,1.725,665,4.846,676,0.972,677,2.326,690,3.862,710,0.972,716,3.92,721,0.972,722,0.972,747,0.878,763,0.972,764,0.972,772,1.927,776,1.334,777,0.972,792,0.972,797,0.972,803,0.972,813,5.45,831,1.115,832,2.326,833,1.979,834,4.091,835,1.559,836,1.979,837,1.559,838,1.979,839,1.979,840,2.544,841,3.488,842,3.697,843,3.697,844,1.979,845,1.979,846,1.979,847,1.115,848,4.091,849,1.115,850,1.979,851,1.979,852,1.115,853,1.979,854,1.725,855,3.23,856,2.816,857,1.979,858,1.725,859,1.725,860,3.23,861,1.979,862,1.115,863,6.019,864,6.019,865,3.591,866,1.979,867,1.115,868,1.979,869,1.115,870,1.979,871,1.979,872,1.115,873,1.979,874,1.979,875,1.115,876,1.979,877,1.115,878,1.979,879,1.115,880,1.979,881,1.115,882,1.979,883,1.115,884,1.559,885,1.979,886,1.115,887,1.979,888,1.559,889,1.725,890,1.979,891,1.979,892,0.972,893,0.972,894,0.878,895,0.808,896,0.972,897,1.115,898,1.115,899,1.115,900,1.115,901,1.979,902,1.115,903,1.115,904,1.115,905,1.115,906,1.115,907,0.972,908,1.115,909,1.115,910,1.115,911,1.979,912,1.559,913,1.979,914,1.115,915,3.23,916,4.091,917,1.115,918,2.668,919,1.115,920,3.23,921,1.115,922,1.979,923,1.115,924,1.115,925,1.979,926,1.115,927,1.979,928,1.115,929,1.115,930,1.115,931,1.979,932,1.115,933,1.115,934,0.972,935,1.115,936,2.816,937,1.115,938,2.668,939,1.115,940,1.115,941,1.115,942,1.115,943,4.091,944,1.115,945,1.115,946,1.979,947,2.668,948,3.23,949,1.559,950,1.115,951,1.115,952,1.115,953,1.979,954,1.979,955,1.979,956,1.979,957,1.979,958,1.115,959,1.115,960,1.979,961,1.115,962,1.115,963,3.23,964,0.878,965,1.115,966,3.23,967,1.115,968,3.23,969,1.115,970,1.115,971,2.668,972,2.668,973,1.979,974,1.115,975,1.979,976,1.115,977,1.115,978,0.878,979,1.115,980,1.115,981,1.115,982,1.115,983,1.115,984,1.115,985,1.115,986,1.725,987,1.115,988,1.115,989,1.115,990,1.115,991,1.115,992,1.115,993,1.979,994,3.697,995,1.115,996,1.115,997,1.115,998,1.115,999,1.115,1000,1.115,1001,1.725,1002,1.115,1003,1.115]],["title/modules/NgxEditorjsDemoModule.html",[124,0.387,1004,2.962]],["body/modules/NgxEditorjsDemoModule.html",[3,0.186,4,0.186,5,0.17,6,0.123,7,0.202,12,0.317,23,0.013,24,0.186,65,0.007,66,0.009,67,0.007,71,0.631,73,0.546,78,1.908,123,2.446,124,0.419,170,0.569,238,2.5,267,1.239,395,1.704,502,4.261,507,3.857,514,2.968,527,1.908,536,1.834,539,2.377,544,4.634,549,4.768,550,1.239,551,3.484,572,3.324,573,2.968,733,4.768,734,1.908,735,3.385,736,2.266,741,3.013,742,2.072,743,2.072,754,3.72,755,2.639,865,2.639,1004,6.029,1005,3.857,1006,3.857,1007,3.857,1008,3.857,1009,5.129,1010,5.084,1011,4.424,1012,5.129,1013,5.129,1014,3.857,1015,3.484,1016,4.424,1017,3.857,1018,5.882,1019,3.857,1020,4.424,1021,3.857,1022,5.129,1023,4.424,1024,3.857,1025,4.633,1026,3.205,1027,4.424]],["title/modules/NgxEditorjsPluginsModule.html",[124,0.387,1010,2.756]],["body/modules/NgxEditorjsPluginsModule.html",[1,0.549,3,0.14,4,0.14,5,0.128,6,0.093,7,0.153,9,0.379,12,0.262,21,2.174,23,0.013,24,0.14,65,0.005,66,0.008,67,0.005,71,0.619,73,0.412,81,2.735,93,2.6,124,0.539,166,3.507,170,0.43,175,1.225,182,2.6,190,2.6,253,1.554,267,0.936,395,1.402,415,4.61,521,3.507,527,1.441,550,1.855,572,2.735,573,2.556,734,1.441,735,1.711,736,1.711,741,2.479,742,1.565,743,1.565,754,3.06,755,1.993,824,5.211,837,3.811,1010,5.719,1028,2.913,1029,2.913,1030,2.913,1031,4.887,1032,5.211,1033,5.211,1034,5.211,1035,4.887,1036,4.887,1037,4.887,1038,4.887,1039,5.211,1040,4.887,1041,5.211,1042,3.341,1043,3.341,1044,4.22,1045,4.839,1046,4.839,1047,4.839,1048,4.22,1049,3.341,1050,3.341,1051,3.341,1052,3.341,1053,3.341,1054,2.913,1055,3.341,1056,3.341,1057,3.341,1058,3.341,1059,3.341,1060,3.341,1061,3.341,1062,2.913,1063,3.341,1064,3.341,1065,3.341,1066,3.341]],["title/modules/NgxTinynodesComponentsModule.html",[124,0.387,1067,2.756]],["body/modules/NgxTinynodesComponentsModule.html",[3,0.224,4,0.224,5,0.205,6,0.148,23,0.013,24,0.224,65,0.008,66,0.01,67,0.008,71,0.558,73,0.658,124,0.505,170,0.685,267,1.492,395,1.921,527,2.298,536,2.749,539,3.562,542,3.245,550,1.492,572,3.747,573,3.243,734,2.298,735,2.729,736,2.729,741,3.396,742,2.496,743,2.496,1067,5.558,1068,4.646,1069,4.646,1070,4.646,1071,5.615,1072,5.615,1073,5.328,1074,5.328,1075,6.631,1076,4.197,1077,5.328,1078,4.197,1079,5.328]],["title/interfaces/NgxTinynodesMatFieldComponent.html",[0,0.172,1080,3.564]],["body/interfaces/NgxTinynodesMatFieldComponent.html",[0,0.253,2,1.334,3,0.253,4,0.253,5,0.231,6,0.167,23,0.013,24,0.253,40,2.07,65,0.009,66,0.011,67,0.009,71,0.589,73,0.744,220,5.627,225,4.818,229,6.23,233,4.518,234,6.23,238,3.405,536,2.498,1080,6.23,1081,6.025,1082,7.617,1083,4.366]],["title/components/NgxTinynodesMatJsonOutputComponent.html",[228,1.694,538,2.438]],["body/components/NgxTinynodesMatJsonOutputComponent.html",[3,0.168,4,0.168,5,0.154,6,0.203,11,0.572,12,0.284,13,0.747,15,1.489,19,2.053,23,0.013,24,0.168,34,0.601,52,0.828,65,0.006,66,0.009,67,0.006,71,0.31,73,0.494,104,2.171,112,1.44,123,2.869,142,1.706,170,0.515,171,2.036,188,2.604,216,4.104,226,2.902,227,4.559,228,2.604,232,3.747,240,2.051,244,2.051,249,2.152,255,2.263,262,4.959,263,3.708,268,3.985,269,3.985,270,3.708,273,3.375,279,1.96,319,2.263,335,2.817,339,2.389,344,1.597,349,2.955,386,2.576,390,1.727,432,3.154,479,4.276,502,2.263,503,2.902,504,2.389,505,2.902,509,2.7,510,2.152,523,2.152,527,1.727,528,3.708,529,2.152,530,4.9,531,2.902,532,2.902,533,2.902,534,2.902,535,2.389,536,3.282,537,2.902,538,4.034,539,4.492,540,2.902,541,2.389,542,1.96,543,2.902,544,2.263,545,1.727,546,2.7,547,2.7,548,2.902,579,5.477,582,5.896,584,4.332,596,3.985,684,2.902,1078,5.767,1084,5.305,1085,4.005,1086,5.5,1087,6.762,1088,7.499,1089,4.005,1090,5.5,1091,4.005,1092,4.005,1093,4.005,1094,5.5,1095,5.5]],["title/modules/NgxTinynodesMatJsonOutputModule.html",[124,0.387,1071,2.756]],["body/modules/NgxTinynodesMatJsonOutputModule.html",[3,0.225,4,0.225,5,0.205,6,0.149,23,0.013,24,0.225,65,0.008,66,0.01,67,0.008,71,0.602,73,0.661,123,1.981,124,0.507,170,0.688,216,2.875,267,1.499,395,1.926,527,2.307,536,2.218,538,4.97,539,4.064,550,1.499,555,5.796,557,5.796,572,3.024,573,3.249,734,2.307,735,3.704,736,2.74,741,3.405,742,2.507,743,2.507,754,4.204,755,3.192,1025,5.236,1026,3.877,1071,5.422,1078,4.214,1083,3.877,1084,3.877,1096,4.665,1097,4.665,1098,4.665,1099,5.35,1100,5.35]],["title/modules/NgxTinynodesMatTagInputModule.html",[124,0.387,1072,2.756]],["body/modules/NgxTinynodesMatTagInputModule.html",[3,0.22,4,0.22,5,0.201,6,0.146,23,0.013,24,0.22,65,0.008,66,0.01,67,0.008,71,0.598,73,0.647,124,0.497,170,0.674,216,2.816,238,2.962,267,1.468,395,1.902,527,2.261,536,2.173,541,5.023,542,3.507,550,1.468,559,5.723,566,5.723,572,2.962,573,3.219,734,2.261,735,3.67,736,2.685,741,3.362,742,2.456,743,2.456,754,3.315,755,3.127,757,4.57,1072,5.397,1076,4.128,1083,3.798,1084,3.798,1101,4.57,1102,4.57,1103,4.57,1104,4.57,1105,5.643,1106,5.643,1107,5.242,1108,5.242,1109,5.242]],["title/modules/NgxTinynodesMaterialFormFieldDemo.html",[124,0.387,1110,2.962]],["body/modules/NgxTinynodesMaterialFormFieldDemo.html",[3,0.173,4,0.173,5,0.158,6,0.115,7,0.188,12,0.288,23,0.013,24,0.173,65,0.006,66,0.009,67,0.006,71,0.62,73,0.509,78,1.777,123,2.076,124,0.39,125,1.471,170,0.53,228,1.708,238,2.328,267,1.154,335,2.11,395,1.625,415,4.405,514,3.074,523,3.676,527,1.777,535,4.651,536,2.324,539,2.213,549,4.67,550,1.154,572,3.169,573,1.851,733,4.67,734,1.777,735,3.265,736,2.11,741,2.872,742,1.93,743,1.93,754,3.546,755,2.458,761,3.592,865,2.458,1009,4.67,1012,4.889,1013,4.889,1014,3.592,1015,3.245,1021,3.592,1022,4.889,1024,3.592,1025,4.416,1026,2.985,1031,4.67,1035,4.67,1036,4.67,1037,4.67,1038,4.67,1040,4.67,1067,3.781,1110,6.094,1111,3.592,1112,3.592,1113,4.12,1114,3.592,1115,4.416,1116,4.12,1117,4.12,1118,6.375,1119,3.592,1120,4.12]],["title/components/NgxTinynodesMaterialFormFieldDemoComponent.html",[228,1.694,535,2.438]],["body/components/NgxTinynodesMaterialFormFieldDemoComponent.html",[1,0.512,3,0.064,4,0.11,5,0.059,6,0.182,7,0.3,9,0.512,11,0.354,12,0.323,13,0.286,14,0.661,15,1.743,19,1.865,21,1.172,23,0.013,24,0.064,26,1.041,27,0.688,34,0.787,38,0.731,41,1.545,44,1.082,46,0.718,48,1.216,50,1.125,51,1.277,52,1.141,65,0.002,66,0.004,67,0.005,71,0.427,73,0.189,76,0.492,89,0.838,104,2.067,111,2.478,112,1.053,118,2.674,122,1.337,123,2.47,127,1.57,139,0.823,141,2.628,142,1.248,144,1.605,145,0.718,146,1.971,151,2.161,154,0.966,157,1.8,162,4.977,164,1.807,170,0.197,171,1.939,175,1.019,176,0.969,183,2.696,184,2.117,185,2.637,188,2.172,191,0.688,194,1.969,206,3.489,216,2.815,218,1.207,219,1.891,225,2.298,226,1.111,227,2.713,228,2.766,232,2.033,233,1.65,238,0.866,240,3.144,241,2.155,242,1.111,243,1.033,244,0.785,247,2.161,249,0.823,251,4.22,255,0.866,262,3.769,263,1.76,264,2.275,265,1.891,266,2.971,268,1.891,269,1.891,270,1.76,271,1.222,273,3.965,279,3.15,280,1.125,282,2.947,287,2.964,319,2.273,321,1.111,335,1.337,339,2.033,340,2.915,344,1.605,346,2.915,347,1.76,349,1.402,350,1.891,351,1.891,352,0.866,355,2.915,367,1.65,370,2.298,372,2.915,386,1.222,390,1.735,409,1.002,430,1.475,434,1.207,439,3.88,441,1.033,479,2.155,481,3.168,484,1.76,486,1.111,487,1.891,499,2.4,502,0.866,503,1.111,504,0.914,505,1.111,509,1.033,510,3.734,514,1.807,518,1.891,522,2.273,523,4.421,527,0.661,528,1.76,529,0.823,530,2.915,531,1.111,532,1.111,533,1.111,534,1.111,535,2.4,536,2.035,537,1.111,538,0.914,539,0.823,540,1.111,541,0.914,542,1.668,543,1.111,544,0.866,545,3.061,546,1.033,547,1.033,548,1.111,576,2.055,584,2.055,586,1.207,591,1.891,592,2.826,596,2.915,603,1.76,605,2.275,608,3.934,611,2.055,614,1.336,616,4.345,653,1.891,657,3.508,660,1.76,684,2.915,688,2.971,700,3.168,716,1.207,742,2.792,835,2.055,841,4.532,865,0.914,884,2.055,892,1.336,893,1.336,894,1.207,895,1.111,949,1.207,964,1.207,978,2.684,1114,5.721,1115,5.167,1121,6.561,1122,2.61,1123,2.61,1124,3.408,1125,4.023,1126,2.61,1127,5.239,1128,3.934,1129,1.336,1130,3.313,1131,3.508,1132,4.023,1133,4.023,1134,1.533,1135,1.65,1136,2.61,1137,1.533,1138,1.533,1139,2.61,1140,1.533,1141,4.023,1142,1.533,1143,2.61,1144,1.533,1145,4.023,1146,4.023,1147,1.533,1148,2.275,1149,2.275,1150,1.533,1151,1.533,1152,2.61,1153,1.533,1154,2.61,1155,4.023,1156,2.713,1157,3.408,1158,1.533,1159,2.61,1160,1.533,1161,1.533,1162,1.336,1163,1.533,1164,1.336,1165,1.336,1166,1.336,1167,1.336,1168,1.533,1169,1.336,1170,1.533,1171,2.61,1172,2.61,1173,1.533,1174,1.336,1175,1.533,1176,1.533,1177,1.336,1178,1.533,1179,1.336,1180,1.533,1181,1.533,1182,1.336,1183,1.336,1184,1.533,1185,1.336,1186,1.336,1187,2.61,1188,2.61,1189,2.61,1190,2.275,1191,2.275,1192,2.61,1193,2.61,1194,2.275,1195,2.61,1196,3.168,1197,2.275,1198,3.508,1199,2.275,1200,1.336,1201,1.76,1202,1.336,1203,1.336,1204,1.336,1205,1.336,1206,1.336,1207,2.275,1208,2.275,1209,2.055,1210,2.275,1211,2.055,1212,2.275,1213,2.275,1214,2.275,1215,2.61,1216,2.275,1217,2.275,1218,2.275,1219,2.61,1220,2.275,1221,2.61,1222,2.61,1223,2.971,1224,2.971,1225,2.275,1226,1.336,1227,2.971,1228,1.336,1229,1.336,1230,1.533,1231,1.533,1232,1.533,1233,1.533]],["title/interfaces/Page.html",[0,0.172,545,1.763]],["body/interfaces/Page.html",[0,0.308,1,0.769,2,1.22,3,0.232,4,0.232,5,0.212,6,0.153,7,0.252,11,0.795,12,0.284,13,1.027,14,1.714,17,1.14,18,1.425,23,0.013,24,0.308,40,1.597,65,0.009,66,0.011,67,0.009,71,0.524,146,2.454,271,3.881,514,2.475,542,3.74,545,2.92,1156,5.154,1234,4.34,1235,5.538,1236,5.154,1237,3.287]],["title/interfaces/PageBlock.html",[0,0.172,1236,2.756]],["body/interfaces/PageBlock.html",[0,0.314,1,0.847,2,1.271,3,0.241,4,0.241,5,0.22,6,0.16,7,0.263,11,0.597,12,0.292,13,1.071,14,1.758,17,1.188,18,1.295,23,0.013,24,0.314,40,2.012,65,0.009,66,0.011,67,0.009,71,0.537,146,1.844,271,3.905,514,2.58,542,3.398,545,2.477,1156,3.873,1234,4.524,1235,4.162,1236,5.032,1237,3.426]],["title/components/PageContainerComponent.html",[228,1.694,544,2.31]],["body/components/PageContainerComponent.html",[1,0.678,3,0.086,4,0.086,5,0.079,6,0.192,7,0.315,9,0.377,11,0.436,12,0.327,13,0.382,14,0.842,15,1.831,18,0.382,19,1.959,21,1.493,23,0.013,24,0.086,26,1.923,27,0.921,34,0.629,37,1.326,38,0.931,41,1.277,44,1.378,46,0.961,50,1.434,51,1.627,52,0.424,63,1.557,65,0.003,66,0.005,67,0.007,71,0.481,73,0.253,76,0.658,89,1.067,92,0.706,104,1.548,112,0.87,118,2.632,122,1.703,123,2.594,127,0.996,139,1.102,140,1.786,141,2.304,142,1.496,144,0.818,145,0.961,146,2.384,150,1.493,154,1.785,170,0.264,171,1.962,172,1.879,175,0.842,183,3.013,184,1.434,185,1.786,188,1.999,191,0.921,194,1.627,216,2.591,219,2.409,225,2.827,226,1.486,227,3.251,228,2.477,233,2.102,236,1.788,240,1.05,241,2.651,242,1.486,243,1.383,244,1.05,247,2.591,249,3.048,255,1.159,262,4.179,263,2.241,265,2.409,268,2.409,269,2.409,270,2.241,271,1.557,273,3.869,279,1.003,280,2.447,282,2.47,287,3.048,292,2.618,318,2.898,319,2.995,321,1.486,335,1.703,339,3.161,340,2.409,344,1.923,346,3.494,349,1.786,350,2.409,351,2.409,362,1.486,367,2.102,370,1.383,372,3.494,386,1.557,390,0.884,409,1.277,439,4.197,479,3.351,484,2.241,487,2.409,499,2.876,502,1.159,503,1.486,504,1.223,505,1.486,508,1.788,509,1.383,510,3.988,512,3.655,513,2.898,514,2.166,518,3.038,522,1.879,523,1.102,527,0.884,528,2.241,529,1.102,530,3.494,531,1.486,532,1.486,533,1.486,534,1.486,535,1.223,536,1.999,537,1.486,538,1.223,539,2.252,540,1.486,541,1.223,542,2.052,543,1.486,544,2.725,545,3.141,546,1.383,547,3.251,548,1.486,580,5.205,591,2.409,592,3.188,593,2.898,596,3.494,603,2.241,616,2.618,633,2.898,635,2.898,665,3.038,684,1.486,700,3.798,742,2.916,865,1.223,894,1.615,895,1.486,896,2.898,936,1.788,949,1.615,964,1.615,978,2.618,1017,6.009,1128,4.204,1129,1.788,1130,3.779,1131,4.204,1135,3.779,1148,2.898,1149,2.898,1162,1.788,1164,1.788,1165,2.898,1166,1.788,1167,1.788,1169,1.788,1174,1.788,1177,1.788,1179,1.788,1182,1.788,1185,1.788,1186,1.788,1196,3.798,1197,2.898,1198,4.204,1199,2.898,1200,1.788,1201,2.241,1202,1.788,1203,1.788,1204,1.788,1205,1.788,1206,1.788,1207,2.898,1208,2.898,1209,2.618,1210,2.898,1211,2.618,1212,2.898,1213,2.898,1214,2.898,1223,2.898,1224,2.898,1225,2.898,1226,1.788,1227,1.788,1228,1.788,1229,1.788,1238,6.892,1239,5.299,1240,3.324,1241,2.05,1242,2.05,1243,2.05,1244,2.05,1245,2.05,1246,2.05,1247,3.324,1248,2.05,1249,2.05,1250,2.05,1251,1.788,1252,2.05,1253,2.05,1254,2.05,1255,3.324,1256,2.05,1257,2.05,1258,2.05,1259,2.05,1260,2.05,1261,2.05,1262,2.05,1263,2.05,1264,2.05,1265,2.05,1266,2.05,1267,2.05,1268,3.324,1269,3.324,1270,3.324,1271,3.324,1272,3.324]],["title/modules/PageStoreModule.html",[124,0.387,1009,2.585]],["body/modules/PageStoreModule.html",[3,0.215,4,0.215,5,0.197,6,0.142,7,0.234,9,0.582,12,0.298,23,0.013,24,0.215,65,0.008,66,0.01,67,0.008,71,0.576,73,0.633,80,3.861,114,3.478,123,2.396,124,0.728,170,0.659,191,2.907,267,1.987,395,1.875,477,4.69,510,3.478,527,2.211,545,2.791,550,1.436,573,2.303,734,2.211,735,2.626,736,2.626,741,3.315,742,2.402,743,2.402,746,5.644,1009,5.181,1130,4.961,1135,4.093,1273,4.471,1274,4.471,1275,5.29,1276,4.68,1277,5.127,1278,5.644,1279,5.644,1280,4.69,1281,6.473,1282,4.471,1283,5.127,1284,4.038]],["title/injectables/PagesQuery.html",[443,1.836,1275,2.756]],["body/injectables/PagesQuery.html",[3,0.241,4,0.241,5,0.22,6,0.193,7,0.317,11,0.597,12,0.292,19,1.664,23,0.013,24,0.241,40,2.012,52,1.188,65,0.009,66,0.011,67,0.009,71,0.6,73,0.709,104,1.844,170,0.738,344,2.291,390,2.477,443,3.119,445,3.426,545,2.477,1237,3.426,1275,4.682,1276,4.625,1280,5.031,1284,4.524,1285,5.744,1286,7.463,1287,5.744,1288,5.744,1289,4.162,1290,4.162,1291,5.744,1292,5.744]],["title/injectables/PagesService.html",[443,1.836,1130,2.585]],["body/injectables/PagesService.html",[1,0.855,3,0.131,4,0.131,5,0.119,6,0.209,7,0.344,9,0.685,11,0.759,12,0.32,13,0.58,14,1.163,19,2.151,23,0.013,24,0.131,25,1.981,32,1.981,52,1.509,65,0.005,66,0.007,67,0.005,71,0.539,73,0.384,84,2.248,104,2.236,125,1.111,127,0.933,141,1.701,145,1.458,146,2.236,170,0.4,171,2.578,174,2.468,175,1.163,188,2.791,271,3.713,273,3.456,280,1.342,282,2.797,287,1.672,319,3.805,344,1.241,386,2.152,390,3.003,430,2.596,443,2.063,445,1.856,514,1.397,521,3.329,545,3.575,591,3.329,592,2.353,642,2.254,644,3.329,653,3.329,665,4.878,1001,4.006,1130,2.905,1135,4.521,1156,2.098,1201,4.066,1220,4.006,1235,2.254,1236,4.696,1237,1.856,1251,2.713,1275,4.338,1276,3.838,1280,5.456,1282,2.713,1284,2.45,1289,2.254,1293,3.111,1294,6.031,1295,4.594,1296,4.594,1297,4.594,1298,4.594,1299,3.111,1300,3.111,1301,4.594,1302,3.111,1303,4.594,1304,3.111,1305,6.433,1306,4.594,1307,3.111,1308,4.594,1309,3.618,1310,4.594,1311,3.111,1312,4.594,1313,3.111,1314,4.594,1315,3.111,1316,4.594,1317,3.111,1318,3.111,1319,3.111,1320,6.031,1321,3.111,1322,4.594,1323,3.111,1324,3.111,1325,3.111,1326,4.594,1327,3.111,1328,3.111,1329,5.461,1330,4.594,1331,3.111,1332,3.111,1333,3.111]],["title/interfaces/PagesState.html",[0,0.172,1290,2.962]],["body/interfaces/PagesState.html",[0,0.247,2,1.303,3,0.247,4,0.247,5,0.226,6,0.164,7,0.269,12,0.247,23,0.013,24,0.296,40,2.185,65,0.009,66,0.011,67,0.009,71,0.583,73,0.727,104,1.891,170,0.757,344,2.348,345,4.266,443,3.166,545,2.539,1135,3.723,1237,3.512,1276,3.512,1289,4.266,1290,5.106,1334,5.134,1335,6.577,1336,6.145,1337,6.145]],["title/injectables/PagesStore.html",[443,1.836,1276,2.438]],["body/injectables/PagesStore.html",[0,0.244,3,0.244,4,0.244,5,0.222,6,0.194,7,0.319,12,0.293,19,1.679,23,0.013,24,0.293,40,2.171,65,0.009,66,0.011,67,0.009,71,0.579,73,0.715,104,1.861,170,0.745,344,2.988,345,4.199,443,3.136,445,3.457,545,2.499,1135,3.665,1237,3.457,1276,4.164,1289,4.199,1290,4.199,1334,5.053,1335,6.087,1336,6.532,1337,6.087,1338,5.795]],["title/interfaces/Paragraph.html",[0,0.172,41,1.57]],["body/interfaces/Paragraph.html",[0,0.333,1,0.937,2,0.813,3,0.154,4,0.154,5,0.141,6,0.102,7,0.168,8,1.882,9,0.417,11,0.861,12,0.299,13,0.685,14,1.519,15,1.983,17,0.76,18,1.437,21,1.65,22,2.487,23,0.013,24,0.319,25,1.584,26,2.983,27,1.65,28,1.882,29,2.653,30,2.653,31,1.584,32,1.584,33,2.653,34,1.07,35,2.783,36,2.783,37,1.465,38,1.029,39,2.535,40,1.887,41,2.872,42,3.83,43,2.535,44,3.036,45,2.535,46,1.721,47,1.882,48,1.312,49,2.535,50,2.962,51,2.535,52,1.347,53,2.783,54,1.974,55,2.066,56,1.974,57,1.926,58,1.974,59,1.974,60,1.974,61,1.974,62,2.535,63,1.721,64,1.882,65,0.006,66,0.008,67,0.006]],["title/interfaces/ParagraphBlock.html",[0,0.172,43,2]],["body/interfaces/ParagraphBlock.html",[0,0.336,1,0.942,2,0.817,3,0.155,4,0.155,5,0.142,6,0.103,7,0.169,8,1.89,9,0.419,11,0.865,12,0.308,13,0.688,14,1.523,15,1.933,17,0.763,18,1.396,21,1.657,22,2.493,23,0.013,24,0.32,25,1.591,26,2.986,27,1.657,28,1.89,29,2.661,30,2.661,31,1.591,32,1.591,33,2.661,34,1.033,35,2.791,36,2.791,37,1.472,38,1.033,39,2.542,40,1.993,41,2.741,42,3.343,43,2.943,44,3.039,45,2.542,46,1.729,47,1.89,48,1.317,49,2.542,50,2.967,51,2.542,52,1.35,53,2.791,54,1.982,55,2.071,56,1.982,57,1.931,58,1.982,59,1.982,60,1.982,61,1.982,62,2.542,63,1.729,64,1.89,65,0.006,66,0.008,67,0.006]],["title/modules/PluginCodeModule.html",[124,0.387,1031,2.585]],["body/modules/PluginCodeModule.html",[1,0.757,3,0.226,4,0.226,5,0.206,6,0.149,7,0.246,9,0.61,11,0.559,12,0.318,17,1.111,23,0.013,24,0.226,34,1.001,65,0.008,66,0.01,67,0.008,71,0.586,73,0.663,83,1.989,86,2.143,89,2.14,105,2.064,112,1.745,124,0.632,126,2.379,129,2.379,134,2.413,170,0.691,175,1.688,208,2.14,253,2.14,256,2.56,267,1.505,395,1.931,396,2.227,409,2.56,410,2.994,411,2.413,413,2.874,414,2.763,517,5.49,550,1.505,828,3.036,829,3.205,1031,4.215,1339,5.373,1340,2.413,1341,5.373,1342,5.373]],["title/interfaces/PluginConfig.html",[0,0.172,98,2.585]],["body/interfaces/PluginConfig.html",[0,0.272,1,0.858,2,0.7,3,0.133,4,0.133,5,0.121,6,0.088,7,0.145,9,0.795,11,0.841,12,0.294,13,0.59,14,1.178,15,1.754,17,1.563,18,1.208,19,0.917,23,0.013,24,0.318,31,2.379,34,0.698,38,2.325,52,1.652,55,1.602,57,1.771,65,0.005,66,0.007,67,0.005,68,4.844,69,1.888,71,0.36,72,1.549,73,0.391,74,3.137,75,3.137,76,1.016,77,2.942,78,2.379,79,2.942,80,1.888,81,3.828,82,2.293,83,1.172,84,1.549,85,2.134,86,1.262,87,1.888,88,5.327,89,2.175,90,3.719,91,4.368,92,1.9,93,1.7,94,1.888,95,2.293,96,2.398,97,2.942,98,3.488,99,3.371,100,2.942,101,2.179,102,3.137,103,3.371,104,1.494,105,2.336,106,4.284,107,1.789,108,2.293,109,2.179,110,2.793,111,2.089,112,1.218,113,3.137,114,2.499,115,3.627,116,3.267,117,2.942,118,1.722,119,3.488,120,2.584,121,2.584,122,1.621,123,1.172,124,0.3,125,1.969,126,1.13,127,1.653,128,2.134,129,1.13,130,2.134,131,2.293,132,2.001,133,2.293,134,1.421,135,2.134]],["title/interfaces/PluginConfigMap.html",[0,0.172,132,2.585]],["body/interfaces/PluginConfigMap.html",[0,0.288,1,0.847,2,0.807,3,0.153,4,0.153,5,0.14,6,0.143,7,0.236,9,0.678,11,0.76,12,0.307,15,1.618,16,2.062,17,1.57,18,1.326,19,1.493,23,0.013,24,0.327,31,2.223,34,0.548,38,2.31,52,1.343,55,1.775,57,1.171,65,0.006,66,0.008,67,0.006,68,4.029,69,2.176,71,0.399,72,1.785,73,0.45,74,3.475,75,3.475,76,1.171,77,3.259,78,2.577,79,3.259,80,2.176,81,3.871,82,2.643,83,1.35,84,1.785,85,2.46,86,1.455,87,2.176,88,4.794,89,2.085,90,4.029,91,4.029,92,2.237,93,1.96,94,2.176,95,2.643,96,2.212,97,2.307,98,3.779,99,2.643,100,2.307,101,1.709,102,2.46,103,2.643,104,1.171,105,1.401,106,3.259,107,2.062,108,2.643,109,1.709,110,2.732,111,1.639,112,0.955,113,2.46,114,1.96,115,2.176,116,2.769,117,2.307,118,1.35,119,2.307,120,2.799,121,2.799,122,1.868,123,1.35,124,0.346,125,2.133,126,1.302,127,1.791,128,2.46,129,1.302,130,2.46,131,3.734,132,3.259,133,3.734,134,1.639,135,2.46,1343,3.648]],["title/modules/PluginEmbedModule.html",[124,0.387,1032,2.756]],["body/modules/PluginEmbedModule.html",[1,0.825,3,0.227,4,0.227,5,0.208,6,0.15,7,0.247,9,0.614,11,0.562,12,0.319,17,1.118,23,0.013,24,0.227,34,1.005,65,0.008,66,0.01,67,0.008,71,0.562,73,0.667,83,2.001,86,2.156,89,2.149,105,2.077,112,1.903,115,3.225,124,0.634,126,2.389,129,2.389,170,0.695,175,1.694,208,2.149,253,2.149,256,2.57,267,1.514,395,1.939,396,2.241,409,2.57,410,3.005,411,2.428,413,2.886,414,2.774,550,1.514,1032,4.512,1340,2.428,1344,5.406,1345,7.593,1346,5.406,1347,3.419]],["title/modules/PluginHeaderModule.html",[124,0.387,415,2.438]],["body/modules/PluginHeaderModule.html",[1,0.707,3,0.203,4,0.203,5,0.185,6,0.134,7,0.221,9,0.548,11,0.502,12,0.306,15,1.973,17,0.999,23,0.013,24,0.262,34,0.936,38,1.353,40,1.399,44,3.335,65,0.007,66,0.01,67,0.007,71,0.533,73,0.596,83,1.788,86,1.926,89,2.001,105,1.855,112,1.631,124,0.59,125,1.724,126,2.224,127,1.448,129,2.224,170,0.801,171,1.788,173,2.083,175,1.578,179,2.262,208,2.001,232,2.881,253,2.001,256,2.393,267,1.353,280,2.083,282,2.474,383,4.907,385,4.211,388,3.804,391,4.211,393,5.432,394,4.211,395,1.805,396,2.002,397,4.211,398,3.499,399,3.804,400,3.499,401,4.211,402,5.432,403,4.211,404,4.211,405,4.211,406,4.211,407,4.211,408,4.211,409,2.393,410,2.799,411,2.169,412,4.211,413,2.687,414,2.583,415,3.717,550,1.353,1340,2.169]],["title/modules/PluginImageModule.html",[124,0.387,1033,2.756]],["body/modules/PluginImageModule.html",[1,0.757,3,0.226,4,0.226,5,0.206,6,0.149,7,0.246,9,0.61,11,0.559,12,0.318,17,1.111,23,0.013,24,0.226,34,1.001,50,3.267,65,0.008,66,0.01,67,0.008,71,0.586,73,0.663,83,1.989,86,2.143,89,2.14,105,2.064,112,1.745,124,0.632,126,2.379,129,2.379,134,2.413,170,0.691,175,1.688,208,2.14,253,2.14,256,2.56,267,1.505,395,1.931,396,2.227,409,2.56,410,2.994,411,2.413,413,2.874,414,2.763,550,1.505,828,3.036,829,3.205,1033,4.494,1340,2.413,1348,5.373,1349,5.373,1350,3.893]],["title/modules/PluginInlineCodeModule.html",[124,0.387,1034,2.756]],["body/modules/PluginInlineCodeModule.html",[1,0.755,3,0.225,4,0.225,5,0.205,6,0.149,7,0.245,9,0.607,11,0.556,12,0.318,17,1.106,23,0.013,24,0.225,34,0.998,65,0.008,66,0.01,67,0.008,71,0.559,73,0.661,81,3.757,83,1.981,87,3.192,89,2.135,105,2.055,106,3.384,112,1.741,124,0.63,126,2.373,129,2.373,170,0.688,175,1.683,208,2.135,253,2.135,256,2.554,267,1.499,395,1.926,396,2.218,409,2.554,410,2.986,411,2.403,413,2.867,414,2.756,517,5.24,550,1.499,1034,4.482,1054,4.665,1340,2.403,1347,3.384,1351,5.35,1352,5.35,1353,6.648,1354,5.35,1355,5.35]],["title/modules/PluginLinkModule.html",[124,0.387,1035,2.585]],["body/modules/PluginLinkModule.html",[1,0.757,3,0.226,4,0.226,5,0.206,6,0.149,7,0.246,9,0.61,11,0.559,12,0.318,17,1.111,23,0.013,24,0.226,34,1.001,65,0.008,66,0.01,67,0.008,71,0.586,73,0.663,83,1.989,86,2.143,89,2.14,105,2.064,107,4.282,112,1.745,124,0.632,126,2.379,129,2.379,134,2.413,170,0.691,175,1.688,208,2.14,253,2.14,256,2.56,267,1.505,395,1.931,396,2.227,409,2.56,410,2.994,411,2.413,413,2.874,414,2.763,550,1.505,828,3.036,829,3.205,1035,4.215,1340,2.413,1350,3.893,1356,5.373,1357,5.373]],["title/modules/PluginListModule.html",[124,0.387,1036,2.585]],["body/modules/PluginListModule.html",[1,0.757,3,0.226,4,0.226,5,0.206,6,0.149,7,0.246,9,0.61,11,0.559,12,0.318,17,1.111,23,0.013,24,0.226,26,3.022,34,1.001,65,0.008,66,0.01,67,0.008,71,0.586,73,0.663,83,1.989,86,2.143,89,2.14,105,2.064,112,1.745,124,0.632,126,2.379,129,2.379,134,2.413,170,0.691,175,1.688,208,2.14,253,2.14,256,2.56,267,1.505,395,1.931,396,2.227,409,2.56,410,2.994,411,2.413,413,2.874,414,2.763,550,1.505,828,3.036,829,3.205,1036,4.215,1340,2.413,1350,3.893,1358,5.373,1359,5.373]],["title/modules/PluginMarkerModule.html",[124,0.387,1037,2.585]],["body/modules/PluginMarkerModule.html",[1,0.755,3,0.225,4,0.225,5,0.205,6,0.149,7,0.245,9,0.607,11,0.556,12,0.318,17,1.106,23,0.013,24,0.225,34,0.998,41,2.055,65,0.008,66,0.01,67,0.008,71,0.585,73,0.661,83,1.981,87,3.192,89,2.135,105,2.055,106,3.384,112,1.741,124,0.63,126,2.373,129,2.373,134,2.403,170,0.688,175,1.683,208,2.135,253,2.135,256,2.554,267,1.499,395,1.926,396,2.218,409,2.554,410,2.986,411,2.403,413,2.867,414,2.756,550,1.499,828,3.024,829,3.192,1037,4.204,1340,2.403,1347,3.384,1360,5.35,1361,7.232,1362,4.665,1363,5.35]],["title/modules/PluginParagraphModule.html",[124,0.387,1038,2.585]],["body/modules/PluginParagraphModule.html",[1,0.763,3,0.229,4,0.229,5,0.209,6,0.151,7,0.249,9,0.618,11,0.566,12,0.32,17,1.125,23,0.013,24,0.229,34,1.009,41,2.923,65,0.008,66,0.01,67,0.008,71,0.564,73,0.672,83,2.014,86,2.17,89,2.157,105,2.09,112,1.759,124,0.637,126,2.398,129,2.398,170,0.7,175,1.701,208,2.157,253,2.157,256,2.58,267,1.524,395,1.946,396,2.255,409,2.58,410,3.017,411,2.444,413,2.897,414,2.785,550,1.524,1038,4.248,1340,2.444,1347,3.441,1362,4.744,1364,5.441]],["title/modules/PluginQuoteModule.html",[124,0.387,1039,2.756]],["body/modules/PluginQuoteModule.html",[1,0.76,3,0.227,4,0.227,5,0.208,6,0.15,7,0.247,9,0.614,11,0.562,12,0.319,17,1.118,23,0.013,24,0.227,34,1.005,65,0.008,66,0.01,67,0.008,71,0.562,73,0.667,83,2.001,86,2.156,89,2.333,105,2.077,112,1.903,115,3.225,124,0.634,126,2.389,129,2.389,170,0.695,175,1.694,208,2.149,253,2.149,256,2.57,267,1.514,395,1.939,396,2.241,409,2.57,410,3.005,411,2.428,413,2.886,414,2.774,550,1.514,1039,4.512,1340,2.428,1347,3.419,1365,5.406,1366,7.593,1367,5.406]],["title/modules/PluginSimpleImageModule.html",[124,0.387,1040,2.585]],["body/modules/PluginSimpleImageModule.html",[1,0.753,3,0.224,4,0.224,5,0.205,6,0.148,7,0.244,9,0.605,11,0.554,12,0.317,17,1.102,23,0.013,24,0.224,34,0.996,50,2.86,65,0.008,66,0.01,67,0.008,71,0.584,73,0.658,83,1.972,86,2.125,89,2.129,105,2.047,112,1.736,124,0.628,126,2.367,129,2.367,134,2.393,170,0.685,175,1.679,208,2.129,253,2.129,256,2.547,267,1.492,395,1.921,396,2.209,409,2.547,410,2.978,411,2.393,413,2.86,414,2.749,550,1.492,828,3.011,829,3.178,1040,4.193,1062,4.646,1209,5.686,1340,2.393,1350,3.861,1368,5.328,1369,5.328,1370,5.328,1371,5.328]],["title/modules/PluginWarningModule.html",[124,0.387,1041,2.756]],["body/modules/PluginWarningModule.html",[1,0.825,3,0.227,4,0.227,5,0.208,6,0.15,7,0.247,9,0.614,11,0.562,12,0.319,17,1.118,23,0.013,24,0.227,34,1.005,65,0.008,66,0.01,67,0.008,71,0.562,73,0.667,83,2.001,86,2.156,89,2.149,105,2.077,112,1.903,115,3.225,124,0.634,126,2.389,129,2.389,170,0.695,175,1.694,208,2.149,253,2.149,256,2.57,267,1.514,395,1.939,396,2.241,409,2.57,410,3.005,411,2.428,413,2.886,414,2.774,550,1.514,1041,4.512,1278,6.62,1340,2.428,1347,3.419,1372,5.406,1373,5.406]],["title/interfaces/ReadyMap.html",[0,0.172,152,2.438]],["body/interfaces/ReadyMap.html",[0,0.313,1,0.691,2,1.03,3,0.196,4,0.196,5,0.179,6,0.169,7,0.278,9,0.529,12,0.321,16,2.631,17,1.667,18,1.39,19,1.349,23,0.013,24,0.313,48,1.662,65,0.007,66,0.009,67,0.007,71,0.524,76,1.495,92,2.777,136,2.777,137,3.139,138,5.436,139,4.468,140,2.501,141,2.252,142,1.444,144,1.857,145,2.181,146,2.176,147,2.501,148,2.777,149,2.922,150,2.733,151,3.641,152,3.629,153,2.777,154,2.509,155,2.631,156,2.944,157,2.426,1374,4.655]],["title/interfaces/SavedMap.html",[0,0.172,153,2.438]],["body/interfaces/SavedMap.html",[0,0.313,1,0.691,2,1.03,3,0.196,4,0.196,5,0.179,6,0.169,7,0.278,9,0.529,12,0.321,16,2.631,17,1.667,18,1.39,19,1.349,23,0.013,24,0.313,48,1.662,65,0.007,66,0.009,67,0.007,71,0.524,76,1.495,92,2.777,136,2.777,137,3.139,138,5.436,139,4.468,140,2.501,141,2.509,142,1.444,144,1.857,145,2.181,146,2.176,147,2.501,148,2.777,149,2.922,150,2.091,151,3.641,152,2.777,153,3.629,154,2.509,155,2.631,156,2.944,157,2.426,1375,4.655]],["title/interfaces/Tag.html",[0,0.172,542,2]],["body/interfaces/Tag.html",[0,0.314,1,0.79,2,1.277,3,0.242,4,0.242,5,0.221,6,0.16,7,0.264,11,0.6,12,0.293,13,1.076,14,1.763,17,1.606,18,1.448,23,0.013,24,0.314,40,1.672,65,0.009,66,0.011,67,0.009,71,0.538,146,1.853,271,3.723,514,2.591,542,3.659,545,2.488,1156,3.89,1234,4.544,1235,4.18,1236,4.694,1237,3.442]],["title/interfaces/ToolSettingsMap.html",[0,0.172,94,2.438]],["body/interfaces/ToolSettingsMap.html",[0,0.288,1,0.847,2,0.805,3,0.153,4,0.153,5,0.14,6,0.143,7,0.235,9,0.677,11,0.759,12,0.307,15,1.616,16,2.056,17,1.569,18,1.325,19,1.49,23,0.013,24,0.327,31,2.218,34,0.546,38,2.31,52,1.341,55,1.772,57,1.168,65,0.006,66,0.008,67,0.006,68,4.023,69,2.17,71,0.398,72,1.78,73,0.449,74,3.468,75,3.468,76,1.168,77,3.253,78,2.573,79,3.253,80,2.17,81,3.867,82,2.636,83,1.347,84,1.78,85,2.453,86,1.451,87,2.17,88,4.79,89,2.197,90,4.614,91,4.373,92,2.234,93,2.763,94,3.068,95,3.727,96,2.209,97,2.3,98,3.253,99,2.636,100,2.3,101,1.704,102,2.453,103,2.636,104,1.168,105,1.397,106,3.253,107,2.056,108,2.636,109,1.704,110,2.587,111,1.634,112,0.953,113,2.453,114,1.954,115,2.17,116,2.763,117,2.3,118,1.347,119,2.3,120,2.795,121,2.795,122,1.863,123,1.347,124,0.345,125,2.13,126,1.299,127,1.789,128,2.453,129,1.299,130,2.453,131,2.636,132,2.3,133,2.636,134,1.634,135,2.453,1376,3.638]],["title/changelog.html",[1377,2.159,1378,2.302,1379,2.689]],["body/changelog.html",[0,0.175,1,0.473,12,0.302,23,0.009,32,2.437,34,0.626,37,1.662,38,1.583,45,2.039,65,0.006,66,0.009,67,0.006,78,3.268,80,2.485,89,1.338,92,1.435,96,1.542,124,0.608,127,2.221,142,1.753,147,2.239,154,2.092,161,2.039,173,1.797,175,1.623,200,2.485,208,1.338,228,2.979,240,2.134,251,4.055,253,1.338,256,1.6,261,2.809,267,1.167,275,2.809,316,4.094,335,2.134,352,3.193,367,2.635,384,2.809,386,1.952,395,1.207,409,1.6,477,3.019,478,2.635,495,3.019,499,3.371,510,3.981,514,3.328,519,3.281,522,3.193,523,2.239,524,4.094,536,1.727,573,1.871,576,3.281,592,2.134,606,3.281,644,3.019,653,4.646,654,3.633,660,2.809,704,4.927,772,2.485,775,3.633,776,3.81,837,3.281,865,2.485,884,4.45,888,3.281,907,3.633,934,3.633,1190,5.994,1216,4.927,1217,3.633,1309,3.281,1377,2.635,1379,4.45,1380,4.166,1381,5.59,1382,3.633,1383,4.166,1384,3.633,1385,4.166,1386,3.281,1387,4.166,1388,6.874,1389,4.166,1390,7.186,1391,5.65,1392,4.166,1393,4.166,1394,4.166,1395,4.166,1396,4.166,1397,3.633,1398,4.45,1399,5.65,1400,4.166,1401,5.65,1402,4.166,1403,5.65,1404,5.65,1405,4.166,1406,5.994,1407,4.166,1408,4.166,1409,4.166,1410,5.65,1411,4.166,1412,4.166,1413,4.166,1414,6.411,1415,4.166,1416,4.166,1417,4.166,1418,3.633,1419,4.166,1420,4.166,1421,3.281,1422,4.166,1423,5.65,1424,4.166,1425,4.166,1426,4.166,1427,3.281,1428,4.166,1429,4.166,1430,4.166,1431,4.166,1432,3.633,1433,4.166,1434,4.166,1435,4.166,1436,5.65,1437,5.65,1438,4.166,1439,4.927,1440,3.633,1441,4.166,1442,4.166,1443,4.166,1444,4.166,1445,4.166,1446,4.166,1447,4.166,1448,4.166,1449,4.166,1450,4.166,1451,4.166,1452,4.166,1453,4.166,1454,4.166,1455,3.633,1456,4.166,1457,3.633]],["title/contributing.html",[1377,2.159,1378,2.302,1458,2.977]],["body/contributing.html",[0,0.149,5,0.136,19,1.026,23,0.008,25,1.528,45,1.734,65,0.008,66,0.008,67,0.005,84,2.47,101,2.365,127,1.513,147,2.712,154,1.869,155,2.002,166,4.261,173,2.536,178,2.002,180,2.24,184,1.528,211,3.011,273,2.712,287,2.712,339,2.113,390,1.528,399,2.79,400,2.567,413,2.177,478,2.24,517,5.251,615,4.401,650,3.089,656,3.089,660,2.389,734,1.528,776,3.404,835,2.79,840,2.79,841,2.79,854,3.089,856,3.089,859,3.089,888,2.79,889,3.089,895,2.567,912,2.79,986,5.588,1048,3.089,1183,3.089,1309,2.79,1398,6.207,1421,2.79,1439,4.401,1440,3.089,1455,4.401,1457,3.089,1458,4.401,1459,4.401,1460,5.88,1461,3.543,1462,3.543,1463,3.543,1464,3.543,1465,3.543,1466,3.543,1467,7.247,1468,5.048,1469,3.543,1470,5.88,1471,3.089,1472,3.543,1473,3.543,1474,5.048,1475,3.543,1476,5.88,1477,2.79,1478,3.543,1479,3.543,1480,3.543,1481,3.543,1482,3.543,1483,6.409,1484,3.089,1485,3.543,1486,3.543,1487,3.543,1488,3.543,1489,4.401,1490,3.543,1491,3.543,1492,4.401,1493,3.543,1494,5.048,1495,3.543,1496,3.543,1497,5.048,1498,3.543,1499,6.774,1500,3.543,1501,6.774,1502,5.048,1503,3.089,1504,5.048,1505,3.543,1506,3.543,1507,3.543,1508,3.543,1509,3.543,1510,3.543,1511,3.543,1512,3.543,1513,5.048,1514,3.543,1515,3.543,1516,5.048,1517,3.543,1518,3.543,1519,3.543,1520,5.048,1521,3.543,1522,5.048,1523,6.774,1524,3.543,1525,3.543,1526,3.543,1527,5.048,1528,3.543,1529,3.543,1530,3.543,1531,3.543,1532,3.543,1533,3.543,1534,3.543,1535,3.543,1536,3.543,1537,3.543,1538,3.543,1539,3.543,1540,3.543,1541,3.543,1542,5.048,1543,5.88,1544,3.543,1545,3.543,1546,3.543,1547,3.543,1548,3.543,1549,3.543,1550,3.543,1551,3.543,1552,5.048,1553,3.543,1554,3.543,1555,3.089,1556,3.543,1557,3.543,1558,3.543,1559,5.048,1560,3.543,1561,3.543,1562,3.543,1563,5.048,1564,3.543,1565,3.089,1566,3.543,1567,3.543,1568,3.543,1569,3.543,1570,3.543,1571,5.048,1572,3.543,1573,3.543,1574,3.089,1575,3.543,1576,3.543,1577,3.543,1578,3.543,1579,3.543,1580,3.543,1581,3.543,1582,3.543,1583,3.543,1584,3.543,1585,3.543,1586,3.543,1587,5.048,1588,3.543,1589,3.543,1590,3.543,1591,3.543,1592,3.543,1593,3.543,1594,3.543,1595,3.543,1596,5.048,1597,5.048,1598,5.048,1599,3.543,1600,3.543,1601,3.543,1602,3.543,1603,3.543,1604,3.543,1605,3.543,1606,3.543,1607,3.543,1608,3.543,1609,3.543,1610,3.543,1611,5.048,1612,3.543,1613,5.048,1614,3.543,1615,3.543,1616,3.543,1617,3.543,1618,5.048,1619,3.089,1620,3.543,1621,3.543,1622,3.543,1623,3.543,1624,3.543,1625,3.543,1626,3.543,1627,3.543,1628,3.543,1629,3.543,1630,3.543,1631,3.543,1632,3.543,1633,3.543,1634,3.543,1635,3.543,1636,3.543,1637,3.543,1638,3.543,1639,3.543,1640,3.543,1641,3.543,1642,3.543,1643,3.543,1644,3.543,1645,3.543,1646,3.543,1647,3.543,1648,3.543,1649,3.543,1650,3.543]],["title/dependencies.html",[734,2.12,1432,2.977]],["body/dependencies.html",[23,0.013,44,2.314,65,0.009,66,0.011,67,0.009,73,0.689,123,2.526,145,2.615,238,3.155,539,2.999,734,2.407,755,3.33,800,4.396,865,3.33,1015,4.396,1026,4.045,1083,4.045,1471,4.867,1651,5.582,1652,8.251,1653,5.582,1654,7.678,1655,5.582,1656,5.582,1657,5.582,1658,5.582,1659,6.824,1660,5.95,1661,5.582,1662,4.867,1663,5.582,1664,5.582,1665,5.582,1666,5.582,1667,5.582,1668,5.582,1669,5.582,1670,5.582,1671,4.867,1672,5.582,1673,5.582,1674,5.582,1675,5.582]],["title/miscellaneous/enumerations.html",[1676,1.929,1677,4.286]],["body/miscellaneous/enumerations.html",[1,0.879,6,0.174,7,0.286,12,0.263,13,1.167,23,0.012,65,0.01,66,0.011,67,0.01,69,3.734,77,3.958,78,2.699,79,3.958,80,3.734,81,4.374,83,2.705,279,3.576,1676,3.537,1677,5.458,1678,4.93]],["title/miscellaneous/functions.html",[1676,1.929,1679,4.286]],["body/miscellaneous/functions.html",[6,0.207,7,0.341,9,0.805,10,3.715,11,0.533,12,0.323,13,0.956,23,0.013,38,1.987,52,1.622,65,0.008,66,0.01,67,0.008,78,3.059,92,1.766,96,2.626,101,2.402,104,2.392,110,2.829,111,2.907,124,0.613,149,2.211,165,2.509,170,0.659,171,2.396,174,2.755,179,3.032,184,2.211,280,2.791,390,3.213,421,2.898,490,4.364,496,5.024,592,2.626,619,4.69,620,4.471,642,4.69,645,4.038,673,5.644,744,4.471,745,5.644,758,5.644,765,4.471,769,5.644,788,4.471,828,3.658,1676,2.898,1679,4.471,1680,4.471,1681,6.496,1682,4.471,1683,5.127,1684,5.127,1685,4.471,1686,5.127,1687,5.127,1688,5.127,1689,5.127,1690,5.127,1691,5.127,1692,5.127,1693,5.127,1694,5.127]],["title/index.html",[13,0.637,1377,2.159,1378,2.302]],["body/index.html",[0,0.195,1,0.527,12,0.339,14,1.175,23,0.009,34,0.696,38,1.299,65,0.007,66,0.009,67,0.007,78,2.917,84,2.27,101,3.169,111,2.726,114,2.492,116,2.492,123,2.247,124,0.641,127,1.39,142,1.883,147,2.492,169,2.27,175,1.817,178,2.621,182,3.261,208,1.949,228,2.516,240,2.376,244,2.376,247,2.492,249,2.492,251,2.933,253,1.489,258,4.044,259,3.653,261,3.128,287,3.261,315,4.044,316,3.361,335,3.465,349,2.492,352,4.318,364,3.653,365,4.044,366,4.044,409,2.598,452,3.653,504,2.767,510,3.634,514,3.038,515,4.78,516,3.653,518,3.361,519,3.653,522,3.43,523,3.261,524,3.361,529,2.492,536,1.923,573,2.083,577,3.653,578,4.044,592,3.108,734,2,743,2.173,772,3.62,776,4.092,832,4.044,840,4.78,1044,4.044,1191,4.044,1196,3.653,1201,3.128,1279,5.292,1379,5.328,1381,5.292,1382,5.292,1384,5.292,1386,4.78,1398,5.651,1418,5.292,1427,5.865,1459,5.898,1671,4.044,1695,4.638,1696,4.638,1697,4.638,1698,4.638,1699,4.638,1700,4.638,1701,4.638,1702,4.638,1703,4.638,1704,4.638,1705,4.638,1706,6.069,1707,4.638,1708,4.638,1709,4.044,1710,6.069,1711,6.069,1712,4.638,1713,4.638,1714,4.044,1715,4.044,1716,4.638,1717,4.638]],["title/license.html",[1377,2.159,1378,2.302,1718,3.414]],["body/license.html",[23,0.01,37,2.13,65,0.008,66,0.01,67,0.008,101,3.11,155,3.018,241,3.377,536,2.213,743,2.501,912,4.205,1406,4.656,1421,5.691,1427,4.205,1484,4.656,1489,4.656,1492,5.789,1503,4.656,1574,4.656,1619,4.656,1714,4.656,1715,4.656,1719,4.656,1720,5.339,1721,5.339,1722,7.226,1723,5.339,1724,5.339,1725,5.339,1726,5.339,1727,5.339,1728,6.639,1729,8.19,1730,5.339,1731,5.339,1732,5.339,1733,6.639,1734,5.339,1735,5.339,1736,5.339,1737,4.656,1738,5.339,1739,5.339,1740,5.339,1741,5.339,1742,6.639,1743,5.339,1744,5.339,1745,5.339,1746,5.339,1747,5.339,1748,5.339,1749,6.639,1750,6.639,1751,5.339,1752,5.339,1753,5.339,1754,5.339,1755,5.339,1756,5.339,1757,5.339,1758,5.339,1759,5.339,1760,5.339,1761,5.339,1762,5.339,1763,5.339,1764,5.339,1765,5.339,1766,5.339,1767,5.339,1768,5.339,1769,5.339,1770,5.339,1771,5.339,1772,5.339,1773,5.339,1774,5.339,1775,5.339,1776,5.339]],["title/modules.html",[550,1.562]],["body/modules.html",[23,0.01,25,3.62,65,0.008,66,0.01,67,0.008,114,4.383,415,3.114,549,4.14,550,1.462,733,3.301,824,3.52,1004,3.783,1009,3.301,1010,3.52,1031,3.301,1032,4.414,1033,3.52,1034,3.52,1035,3.301,1036,3.301,1037,3.301,1038,3.301,1039,3.52,1040,3.301,1041,3.52,1067,3.52,1071,3.52,1072,3.52,1110,3.783,1660,7.114,1777,8.395,1778,8.534,1779,8.158]],["title/overview.html",[1780,4.863]],["body/overview.html",[2,0.695,23,0.013,46,1.472,47,1.609,65,0.005,66,0.007,67,0.005,124,0.298,244,3.578,247,2.951,249,3.753,255,3.948,267,0.88,335,1.609,384,2.118,415,4.276,445,1.874,502,3.104,527,1.355,529,1.688,535,3.276,538,4.167,541,4.501,544,3.948,549,3.832,550,0.88,573,1.411,733,4.957,734,1.355,735,1.609,736,1.609,737,2.739,738,2.739,739,2.739,740,2.739,741,2.37,742,1.472,743,1.472,772,3.276,824,4.934,825,2.739,826,2.739,1004,5.718,1005,2.739,1006,2.739,1007,2.739,1008,2.739,1009,4.92,1010,5.675,1028,2.739,1029,2.739,1030,2.739,1031,4.533,1032,4.71,1033,4.71,1034,4.71,1035,4.533,1036,4.533,1037,4.533,1038,4.533,1039,4.71,1040,4.533,1041,4.71,1067,4.834,1068,2.739,1069,2.739,1070,2.739,1071,5.017,1072,5.017,1096,2.739,1097,2.739,1098,2.739,1101,2.739,1102,2.739,1103,2.739,1104,2.739,1105,4.326,1106,4.326,1110,5.917,1111,2.739,1112,2.739,1130,3.473,1273,2.739,1274,2.739,1275,3.703,1276,3.276,1709,2.739,1780,2.739,1781,3.142,1782,3.142,1783,3.142]],["title/todo.html",[398,2.474,1377,2.159,1378,2.302]],["body/todo.html",[12,0.325,23,0.011,65,0.009,66,0.011,67,0.009,84,3.375,110,2.962,114,3.705,118,2.103,123,2.749,124,0.538,141,2.103,146,1.824,161,2.78,162,3.83,204,3.21,228,2.355,232,3.388,253,1.824,259,4.474,275,3.83,398,4.116,510,3.052,529,3.052,536,2.355,545,2.45,550,1.591,592,3.532,660,3.83,679,4.953,858,4.953,1194,4.953,1201,5.49,1211,4.474,1218,4.953,1280,4.116,1340,2.551,1386,4.474,1397,4.953,1555,4.953,1565,4.953,1662,4.953,1719,4.953,1737,4.953,1784,5.68,1785,5.68,1786,5.68,1787,5.68,1788,5.68,1789,5.68,1790,5.68,1791,5.68,1792,5.68,1793,5.68]],["title/miscellaneous/typealiases.html",[1676,1.929,1794,4.916]],["body/miscellaneous/typealiases.html",[1,0.774,6,0.189,7,0.311,8,2.853,11,0.798,12,0.286,13,1.039,18,1.431,23,0.013,25,2.402,26,2.222,27,2.502,28,2.853,29,3.49,30,3.49,31,2.402,32,2.402,33,3.49,38,2.062,39,2.726,43,2.726,49,2.726,55,2.347,62,2.726,63,2.609,64,3.49,65,0.009,66,0.011,67,0.009,69,3.323,74,3.756,75,3.756,77,3.522,78,2.402,79,3.522,84,2.726,85,4.595,86,2.222,87,3.323,88,4.595,89,1.789,90,3.756,91,4.595,1676,3.148,1678,5.799,1795,5.57,1796,6.815]],["title/miscellaneous/variables.html",[1477,3.871,1676,1.929]],["body/miscellaneous/variables.html",[6,0.209,7,0.33,11,0.768,12,0.33,13,0.653,18,0.653,19,1.014,23,0.013,34,1.216,38,1.402,65,0.005,66,0.008,67,0.005,69,2.088,78,1.509,92,1.724,100,4.566,110,2.33,112,1.766,114,1.88,118,1.295,120,3.159,121,3.286,122,1.792,123,2.359,124,0.332,126,1.786,127,2.214,128,2.36,129,1.786,130,2.36,134,2.248,135,2.36,142,1.086,146,1.124,149,1.509,157,1.396,164,2.248,168,2.213,169,1.713,170,0.643,173,1.509,183,1.639,190,1.88,191,2.248,192,2.985,193,2.088,194,1.713,195,2.088,196,2.088,197,2.088,198,2.985,199,2.213,200,2.088,201,2.828,202,2.213,215,3.051,216,3.138,217,2.756,218,3.941,220,3.941,228,2.642,230,5.557,240,2.563,249,1.88,251,3.164,252,4.363,253,2.047,254,5.557,255,1.978,256,2.448,271,1.639,279,3.945,468,3.626,469,2.756,492,2.756,493,3.374,494,2.756,495,2.536,496,2.36,497,3.626,498,2.756,499,2.088,500,3.941,501,2.756,502,1.978,510,1.88,523,3.138,536,2.074,541,2.985,542,3.3,544,1.978,551,2.756,577,2.756,800,2.756,1019,4.363,1076,2.756,1084,2.536,1105,3.941,1106,3.941,1115,2.756,1119,5.093,1477,2.756,1676,1.978,1678,4.6,1680,3.051,1681,4.363,1682,3.051,1685,3.051,1797,5.004,1798,5.004,1799,5.004,1800,5.841,1801,5.004,1802,3.5,1803,3.5,1804,5.841,1805,5.004,1806,5.004,1807,5.004,1808,5.841,1809,3.5,1810,3.5,1811,3.5,1812,3.5,1813,5.841,1814,3.5,1815,3.5,1816,5.004,1817,3.5,1818,3.5,1819,3.5,1820,3.5,1821,3.5]]],"invertedIndex":[["",{"_index":23,"title":{},"body":{"interfaces/Block.html":{},"interfaces/BlockData.html":{},"interfaces/ChangeMap.html":{},"interfaces/CreateEditorJSOptions.html":{},"interfaces/EditorJSChange.html":{},"interfaces/EditorJSClass.html":{},"interfaces/EditorJSInstanceConfig.html":{},"interfaces/EditorJSMaterialForm.html":{},"interfaces/EditorMap.html":{},"classes/FixedHeader.html":{},"interfaces/Header.html":{},"interfaces/HeaderBlock.html":{},"interfaces/Image.html":{},"interfaces/ImageBlock.html":{},"interfaces/InjectorApiCallOptions.html":{},"interfaces/InjectorApiCallResponse.html":{},"interfaces/InjectorMethodOption.html":{},"interfaces/List.html":{},"interfaces/ListBlock.html":{},"classes/MockEditorJS.html":{},"injectables/MockNgZone.html":{},"classes/MockPlugin.html":{},"interfaces/NgxEditorJSConfig.html":{},"components/NgxEditorJSDemoHomeComponent.html":{},"modules/NgxEditorJSDemoMaterialModule.html":{},"directives/NgxEditorJSDirective.html":{},"modules/NgxEditorJSModule.html":{},"interfaces/NgxEditorJSModuleConfig.html":{},"injectables/NgxEditorJSPluginService.html":{},"modules/NgxEditorJSPluginServiceModule.html":{},"injectables/NgxEditorJSService.html":{},"modules/NgxEditorjsDemoModule.html":{},"modules/NgxEditorjsPluginsModule.html":{},"modules/NgxTinynodesComponentsModule.html":{},"interfaces/NgxTinynodesMatFieldComponent.html":{},"components/NgxTinynodesMatJsonOutputComponent.html":{},"modules/NgxTinynodesMatJsonOutputModule.html":{},"modules/NgxTinynodesMatTagInputModule.html":{},"modules/NgxTinynodesMaterialFormFieldDemo.html":{},"components/NgxTinynodesMaterialFormFieldDemoComponent.html":{},"interfaces/Page.html":{},"interfaces/PageBlock.html":{},"components/PageContainerComponent.html":{},"modules/PageStoreModule.html":{},"injectables/PagesQuery.html":{},"injectables/PagesService.html":{},"interfaces/PagesState.html":{},"injectables/PagesStore.html":{},"interfaces/Paragraph.html":{},"interfaces/ParagraphBlock.html":{},"modules/PluginCodeModule.html":{},"interfaces/PluginConfig.html":{},"interfaces/PluginConfigMap.html":{},"modules/PluginEmbedModule.html":{},"modules/PluginHeaderModule.html":{},"modules/PluginImageModule.html":{},"modules/PluginInlineCodeModule.html":{},"modules/PluginLinkModule.html":{},"modules/PluginListModule.html":{},"modules/PluginMarkerModule.html":{},"modules/PluginParagraphModule.html":{},"modules/PluginQuoteModule.html":{},"modules/PluginSimpleImageModule.html":{},"modules/PluginWarningModule.html":{},"interfaces/ReadyMap.html":{},"interfaces/SavedMap.html":{},"interfaces/Tag.html":{},"interfaces/ToolSettingsMap.html":{},"changelog.html":{},"contributing.html":{},"dependencies.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"index.html":{},"license.html":{},"modules.html":{},"overview.html":{},"todo.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["0",{"_index":194,"title":{},"body":{"interfaces/EditorJSClass.html":{},"interfaces/EditorJSInstanceConfig.html":{},"interfaces/EditorJSMaterialForm.html":{},"interfaces/InjectorApiCallOptions.html":{},"interfaces/InjectorApiCallResponse.html":{},"interfaces/InjectorMethodOption.html":{},"directives/NgxEditorJSDirective.html":{},"injectables/NgxEditorJSService.html":{},"components/NgxTinynodesMaterialFormFieldDemoComponent.html":{},"components/PageContainerComponent.html":{},"miscellaneous/variables.html":{}}}],["0.0.5",{"_index":1669,"title":{},"body":{"dependencies.html":{}}}],["0.12.2",{"_index":1667,"title":{},"body":{"dependencies.html":{}}}],["0.9.1",{"_index":1675,"title":{},"body":{"dependencies.html":{}}}],["1",{"_index":46,"title":{},"body":{"interfaces/Block.html":{},"interfaces/Header.html":{},"interfaces/HeaderBlock.html":{},"interfaces/Image.html":{},"interfaces/ImageBlock.html":{},"interfaces/List.html":{},"interfaces/ListBlock.html":{},"components/NgxTinynodesMaterialFormFieldDemoComponent.html":{},"components/PageContainerComponent.html":{},"interfaces/Paragraph.html":{},"interfaces/ParagraphBlock.html":{},"overview.html":{}}}],["1.2",{"_index":1437,"title":{},"body":{"changelog.html":{}}}],["1.4",{"_index":1648,"title":{},"body":{"contributing.html":{}}}],["10",{"_index":407,"title":{},"body":{"classes/FixedHeader.html":{},"modules/PluginHeaderModule.html":{}}}],["100",{"_index":1224,"title":{},"body":{"components/NgxTinynodesMaterialFormFieldDemoComponent.html":{},"components/PageContainerComponent.html":{}}}],["100vh",{"_index":1225,"title":{},"body":{"components/NgxTinynodesMaterialFormFieldDemoComponent.html":{},"components/PageContainerComponent.html":{}}}],["12th",{"_index":1434,"title":{},"body":{"changelog.html":{}}}],["13th",{"_index":1430,"title":{},"body":{"changelog.html":{}}}],["15px",{"_index":1233,"title":{},"body":{"components/NgxTinynodesMaterialFormFieldDemoComponent.html":{}}}],["15th",{"_index":1419,"title":{},"body":{"changelog.html":{}}}],["2.0.8",{"_index":1666,"title":{},"body":{"dependencies.html":{}}}],["2.4.0",{"_index":1670,"title":{},"body":{"dependencies.html":{}}}],["2019",{"_index":1406,"title":{},"body":{"changelog.html":{},"license.html":{}}}],["22nd",{"_index":1405,"title":{},"body":{"changelog.html":{}}}],["24",{"_index":1781,"title":{},"body":{"overview.html":{}}}],["3",{"_index":1782,"title":{},"body":{"overview.html":{}}}],["3.1.3",{"_index":1664,"title":{},"body":{"dependencies.html":{}}}],["32",{"_index":1783,"title":{},"body":{"overview.html":{}}}],["4",{"_index":1267,"title":{},"body":{"components/PageContainerComponent.html":{}}}],["6",{"_index":47,"title":{},"body":{"interfaces/Block.html":{},"interfaces/Header.html":{},"interfaces/HeaderBlock.html":{},"interfaces/Image.html":{},"interfaces/ImageBlock.html":{},"interfaces/List.html":{},"interfaces/ListBlock.html":{},"interfaces/Paragraph.html":{},"interfaces/ParagraphBlock.html":{},"overview.html":{}}}],["6.5.2",{"_index":1673,"title":{},"body":{"dependencies.html":{}}}],["6.9.0",{"_index":1672,"title":{},"body":{"dependencies.html":{}}}],["7",{"_index":1709,"title":{},"body":{"index.html":{},"overview.html":{}}}],["8.0.0",{"_index":1652,"title":{},"body":{"dependencies.html":{}}}],["8.0.1",{"_index":1654,"title":{},"body":{"dependencies.html":{}}}],["_disabled",{"_index":306,"title":{},"body":{"interfaces/EditorJSMaterialForm.html":{}}}],["_empty",{"_index":312,"title":{},"body":{"interfaces/EditorJSMaterialForm.html":{}}}],["_focused",{"_index":293,"title":{},"body":{"interfaces/EditorJSMaterialForm.html":{}}}],["_placeholder",{"_index":288,"title":{},"body":{"interfaces/EditorJSMaterialForm.html":{}}}],["_required",{"_index":299,"title":{},"body":{"interfaces/EditorJSMaterialForm.html":{}}}],["a.time",{"_index":973,"title":{},"body":{"injectables/NgxEditorJSService.html":{}}}],["above",{"_index":1748,"title":{},"body":{"license.html":{}}}],["abusive",{"_index":1614,"title":{},"body":{"contributing.html":{}}}],["acceptable",{"_index":1569,"title":{},"body":{"contributing.html":{}}}],["accepting",{"_index":1534,"title":{},"body":{"contributing.html":{}}}],["access",{"_index":315,"title":{},"body":{"interfaces/EditorJSMaterialForm.html":{},"index.html":{}}}],["accessor",{"_index":1821,"title":{},"body":{"miscellaneous/variables.html":{}}}],["accessors",{"_index":591,"title":{},"body":{"directives/NgxEditorJSDirective.html":{},"components/NgxTinynodesMaterialFormFieldDemoComponent.html":{},"components/PageContainerComponent.html":{},"injectables/PagesService.html":{}}}],["account",{"_index":1604,"title":{},"body":{"contributing.html":{}}}],["acting",{"_index":1605,"title":{},"body":{"contributing.html":{}}}],["action",{"_index":1574,"title":{},"body":{"contributing.html":{},"license.html":{}}}],["actions",{"_index":890,"title":{},"body":{"injectables/NgxEditorJSService.html":{}}}],["active",{"_index":605,"title":{},"body":{"directives/NgxEditorJSDirective.html":{},"components/NgxTinynodesMaterialFormFieldDemoComponent.html":{}}}],["actual_component",{"_index":548,"title":{},"body":{"components/NgxEditorJSDemoHomeComponent.html":{},"components/NgxTinynodesMatJsonOutputComponent.html":{},"components/NgxTinynodesMaterialFormFieldDemoComponent.html":{},"components/PageContainerComponent.html":{}}}],["adapted",{"_index":1646,"title":{},"body":{"contributing.html":{}}}],["add",{"_index":1201,"title":{},"body":{"components/NgxTinynodesMaterialFormFieldDemoComponent.html":{},"components/PageContainerComponent.html":{},"injectables/PagesService.html":{},"index.html":{},"todo.html":{}}}],["add(page",{"_index":1301,"title":{},"body":{"injectables/PagesService.html":{}}}],["addblock",{"_index":1295,"title":{},"body":{"injectables/PagesService.html":{}}}],["addblock(pageid",{"_index":1303,"title":{},"body":{"injectables/PagesService.html":{}}}],["added",{"_index":32,"title":{},"body":{"interfaces/Block.html":{},"interfaces/Header.html":{},"interfaces/HeaderBlock.html":{},"interfaces/Image.html":{},"interfaces/ImageBlock.html":{},"interfaces/List.html":{},"interfaces/ListBlock.html":{},"directives/NgxEditorJSDirective.html":{},"injectables/NgxEditorJSService.html":{},"injectables/PagesService.html":{},"interfaces/Paragraph.html":{},"interfaces/ParagraphBlock.html":{},"changelog.html":{},"miscellaneous/typealiases.html":{}}}],["additional",{"_index":21,"title":{},"body":{"interfaces/Block.html":{},"interfaces/Header.html":{},"interfaces/HeaderBlock.html":{},"interfaces/Image.html":{},"interfaces/ImageBlock.html":{},"interfaces/List.html":{},"interfaces/ListBlock.html":{},"injectables/NgxEditorJSService.html":{},"modules/NgxEditorjsPluginsModule.html":{},"components/NgxTinynodesMaterialFormFieldDemoComponent.html":{},"components/PageContainerComponent.html":{},"interfaces/Paragraph.html":{},"interfaces/ParagraphBlock.html":{}}}],["address",{"_index":1559,"title":{},"body":{"contributing.html":{}}}],["adds",{"_index":868,"title":{},"body":{"injectables/NgxEditorJSService.html":{}}}],["advances",{"_index":1549,"title":{},"body":{"contributing.html":{}}}],["aftercontentinit",{"_index":225,"title":{},"body":{"interfaces/EditorJSMaterialForm.html":{},"directives/NgxEditorJSDirective.html":{},"interfaces/NgxTinynodesMatFieldComponent.html":{},"components/NgxTinynodesMaterialFormFieldDemoComponent.html":{},"components/PageContainerComponent.html":{}}}],["against",{"_index":864,"title":{},"body":{"injectables/NgxEditorJSService.html":{}}}],["age",{"_index":1507,"title":{},"body":{"contributing.html":{}}}],["aliases",{"_index":1795,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["aligned",{"_index":1583,"title":{},"body":{"contributing.html":{}}}],["allow",{"_index":746,"title":{},"body":{"modules/NgxEditorJSModule.html":{},"modules/PageStoreModule.html":{}}}],["allows",{"_index":488,"title":{},"body":{"interfaces/NgxEditorJSConfig.html":{},"interfaces/NgxEditorJSModuleConfig.html":{},"injectables/NgxEditorJSService.html":{}}}],["along",{"_index":1391,"title":{},"body":{"changelog.html":{}}}],["and/or",{"_index":1740,"title":{},"body":{"license.html":{}}}],["angular",{"_index":352,"title":{},"body":{"interfaces/EditorJSMaterialForm.html":{},"components/NgxEditorJSDemoHomeComponent.html":{},"directives/NgxEditorJSDirective.html":{},"modules/NgxEditorJSModule.html":{},"injectables/NgxEditorJSService.html":{},"components/NgxTinynodesMaterialFormFieldDemoComponent.html":{},"changelog.html":{},"index.html":{}}}],["angular/animations",{"_index":1651,"title":{},"body":{"dependencies.html":{}}}],["angular/cdk",{"_index":1653,"title":{},"body":{"dependencies.html":{}}}],["angular/cdk/a11y",{"_index":222,"title":{},"body":{"interfaces/EditorJSMaterialForm.html":{}}}],["angular/cdk/coercion",{"_index":224,"title":{},"body":{"interfaces/EditorJSMaterialForm.html":{}}}],["angular/common",{"_index":755,"title":{},"body":{"modules/NgxEditorJSModule.html":{},"modules/NgxEditorjsDemoModule.html":{},"modules/NgxEditorjsPluginsModule.html":{},"modules/NgxTinynodesMatJsonOutputModule.html":{},"modules/NgxTinynodesMatTagInputModule.html":{},"modules/NgxTinynodesMaterialFormFieldDemo.html":{},"dependencies.html":{}}}],["angular/compiler",{"_index":1655,"title":{},"body":{"dependencies.html":{}}}],["angular/core",{"_index":73,"title":{},"body":{"interfaces/BlockData.html":{},"interfaces/EditorJSClass.html":{},"interfaces/EditorJSInstanceConfig.html":{},"interfaces/EditorJSMaterialForm.html":{},"classes/FixedHeader.html":{},"interfaces/InjectorApiCallOptions.html":{},"interfaces/InjectorApiCallResponse.html":{},"interfaces/InjectorMethodOption.html":{},"injectables/MockNgZone.html":{},"interfaces/NgxEditorJSConfig.html":{},"components/NgxEditorJSDemoHomeComponent.html":{},"modules/NgxEditorJSDemoMaterialModule.html":{},"directives/NgxEditorJSDirective.html":{},"modules/NgxEditorJSModule.html":{},"interfaces/NgxEditorJSModuleConfig.html":{},"injectables/NgxEditorJSPluginService.html":{},"modules/NgxEditorJSPluginServiceModule.html":{},"injectables/NgxEditorJSService.html":{},"modules/NgxEditorjsDemoModule.html":{},"modules/NgxEditorjsPluginsModule.html":{},"modules/NgxTinynodesComponentsModule.html":{},"interfaces/NgxTinynodesMatFieldComponent.html":{},"components/NgxTinynodesMatJsonOutputComponent.html":{},"modules/NgxTinynodesMatJsonOutputModule.html":{},"modules/NgxTinynodesMatTagInputModule.html":{},"modules/NgxTinynodesMaterialFormFieldDemo.html":{},"components/NgxTinynodesMaterialFormFieldDemoComponent.html":{},"components/PageContainerComponent.html":{},"modules/PageStoreModule.html":{},"injectables/PagesQuery.html":{},"injectables/PagesService.html":{},"interfaces/PagesState.html":{},"injectables/PagesStore.html":{},"modules/PluginCodeModule.html":{},"interfaces/PluginConfig.html":{},"interfaces/PluginConfigMap.html":{},"modules/PluginEmbedModule.html":{},"modules/PluginHeaderModule.html":{},"modules/PluginImageModule.html":{},"modules/PluginInlineCodeModule.html":{},"modules/PluginLinkModule.html":{},"modules/PluginListModule.html":{},"modules/PluginMarkerModule.html":{},"modules/PluginParagraphModule.html":{},"modules/PluginQuoteModule.html":{},"modules/PluginSimpleImageModule.html":{},"modules/PluginWarningModule.html":{},"interfaces/ToolSettingsMap.html":{},"dependencies.html":{}}}],["angular/flex",{"_index":1656,"title":{},"body":{"dependencies.html":{}}}],["angular/forms",{"_index":238,"title":{},"body":{"interfaces/EditorJSMaterialForm.html":{},"modules/NgxEditorJSModule.html":{},"modules/NgxEditorjsDemoModule.html":{},"interfaces/NgxTinynodesMatFieldComponent.html":{},"modules/NgxTinynodesMatTagInputModule.html":{},"modules/NgxTinynodesMaterialFormFieldDemo.html":{},"components/NgxTinynodesMaterialFormFieldDemoComponent.html":{},"dependencies.html":{}}}],["angular/material",{"_index":1083,"title":{},"body":{"interfaces/NgxTinynodesMatFieldComponent.html":{},"modules/NgxTinynodesMatJsonOutputModule.html":{},"modules/NgxTinynodesMatTagInputModule.html":{},"dependencies.html":{}}}],["angular/material/badge",{"_index":554,"title":{},"body":{"modules/NgxEditorJSDemoMaterialModule.html":{}}}],["angular/material/button",{"_index":556,"title":{},"body":{"modules/NgxEditorJSDemoMaterialModule.html":{}}}],["angular/material/card",{"_index":558,"title":{},"body":{"modules/NgxEditorJSDemoMaterialModule.html":{}}}],["angular/material/chips",{"_index":560,"title":{},"body":{"modules/NgxEditorJSDemoMaterialModule.html":{}}}],["angular/material/expansion",{"_index":562,"title":{},"body":{"modules/NgxEditorJSDemoMaterialModule.html":{}}}],["angular/material/form",{"_index":239,"title":{},"body":{"interfaces/EditorJSMaterialForm.html":{},"modules/NgxEditorJSDemoMaterialModule.html":{},"modules/NgxEditorJSModule.html":{}}}],["angular/material/grid",{"_index":565,"title":{},"body":{"modules/NgxEditorJSDemoMaterialModule.html":{}}}],["angular/material/icon",{"_index":567,"title":{},"body":{"modules/NgxEditorJSDemoMaterialModule.html":{}}}],["angular/material/input",{"_index":569,"title":{},"body":{"modules/NgxEditorJSDemoMaterialModule.html":{},"modules/NgxEditorJSModule.html":{}}}],["angular/material/list",{"_index":571,"title":{},"body":{"modules/NgxEditorJSDemoMaterialModule.html":{}}}],["angular/platform",{"_index":1659,"title":{},"body":{"dependencies.html":{}}}],["angular/router",{"_index":1015,"title":{},"body":{"modules/NgxEditorjsDemoModule.html":{},"modules/NgxTinynodesMaterialFormFieldDemo.html":{},"dependencies.html":{}}}],["any).defaultlevel.number",{"_index":408,"title":{},"body":{"classes/FixedHeader.html":{},"modules/PluginHeaderModule.html":{}}}],["any).onready",{"_index":442,"title":{},"body":{"classes/MockEditorJS.html":{},"classes/MockPlugin.html":{}}}],["api",{"_index":208,"title":{},"body":{"interfaces/EditorJSClass.html":{},"interfaces/EditorJSInstanceConfig.html":{},"classes/FixedHeader.html":{},"interfaces/InjectorApiCallOptions.html":{},"interfaces/InjectorApiCallResponse.html":{},"interfaces/InjectorMethodOption.html":{},"components/NgxEditorJSDemoHomeComponent.html":{},"injectables/NgxEditorJSService.html":{},"modules/PluginCodeModule.html":{},"modules/PluginEmbedModule.html":{},"modules/PluginHeaderModule.html":{},"modules/PluginImageModule.html":{},"modules/PluginInlineCodeModule.html":{},"modules/PluginLinkModule.html":{},"modules/PluginListModule.html":{},"modules/PluginMarkerModule.html":{},"modules/PluginParagraphModule.html":{},"modules/PluginQuoteModule.html":{},"modules/PluginSimpleImageModule.html":{},"modules/PluginWarningModule.html":{},"changelog.html":{},"index.html":{}}}],["apicall",{"_index":842,"title":{},"body":{"injectables/NgxEditorJSService.html":{}}}],["apicall(options",{"_index":851,"title":{},"body":{"injectables/NgxEditorJSService.html":{}}}],["app",{"_index":499,"title":{},"body":{"interfaces/NgxEditorJSConfig.html":{},"modules/NgxEditorJSModule.html":{},"interfaces/NgxEditorJSModuleConfig.html":{},"components/NgxTinynodesMaterialFormFieldDemoComponent.html":{},"components/PageContainerComponent.html":{},"changelog.html":{},"miscellaneous/variables.html":{}}}],["appear",{"_index":1197,"title":{},"body":{"components/NgxTinynodesMaterialFormFieldDemoComponent.html":{},"components/PageContainerComponent.html":{}}}],["appearance",{"_index":1517,"title":{},"body":{"contributing.html":{}}}],["application",{"_index":522,"title":{},"body":{"components/NgxEditorJSDemoHomeComponent.html":{},"modules/NgxEditorJSModule.html":{},"injectables/NgxEditorJSPluginService.html":{},"injectables/NgxEditorJSService.html":{},"components/NgxTinynodesMaterialFormFieldDemoComponent.html":{},"components/PageContainerComponent.html":{},"changelog.html":{},"index.html":{}}}],["applicationref",{"_index":848,"title":{},"body":{"injectables/NgxEditorJSService.html":{}}}],["applies",{"_index":1594,"title":{},"body":{"contributing.html":{}}}],["appointed",{"_index":1606,"title":{},"body":{"contributing.html":{}}}],["appropriate",{"_index":1571,"title":{},"body":{"contributing.html":{}}}],["appservice",{"_index":1131,"title":{},"body":{"components/NgxTinynodesMaterialFormFieldDemoComponent.html":{},"components/PageContainerComponent.html":{}}}],["architecture",{"_index":1393,"title":{},"body":{"changelog.html":{}}}],["area",{"_index":487,"title":{},"body":{"interfaces/NgxEditorJSConfig.html":{},"interfaces/NgxEditorJSModuleConfig.html":{},"components/NgxTinynodesMaterialFormFieldDemoComponent.html":{},"components/PageContainerComponent.html":{}}}],["args",{"_index":213,"title":{},"body":{"interfaces/EditorJSClass.html":{},"interfaces/EditorJSInstanceConfig.html":{},"interfaces/InjectorApiCallOptions.html":{},"interfaces/InjectorApiCallResponse.html":{},"interfaces/InjectorMethodOption.html":{},"injectables/NgxEditorJSService.html":{}}}],["argument",{"_index":855,"title":{},"body":{"injectables/NgxEditorJSService.html":{}}}],["arguments",{"_index":860,"title":{},"body":{"injectables/NgxEditorJSService.html":{}}}],["aria",{"_index":331,"title":{},"body":{"interfaces/EditorJSMaterialForm.html":{}}}],["arising",{"_index":1774,"title":{},"body":{"license.html":{}}}],["array",{"_index":619,"title":{},"body":{"directives/NgxEditorJSDirective.html":{},"injectables/NgxEditorJSPluginService.html":{},"injectables/NgxEditorJSService.html":{},"miscellaneous/functions.html":{}}}],["arrayadd",{"_index":1318,"title":{},"body":{"injectables/PagesService.html":{}}}],["arrayadd(entity.blocks",{"_index":1331,"title":{},"body":{"injectables/PagesService.html":{}}}],["arrayremove",{"_index":1319,"title":{},"body":{"injectables/PagesService.html":{}}}],["arrayremove(entity.blocks",{"_index":1332,"title":{},"body":{"injectables/PagesService.html":{}}}],["asjson",{"_index":1239,"title":{},"body":{"components/PageContainerComponent.html":{}}}],["associated",{"_index":1730,"title":{},"body":{"license.html":{}}}],["async",{"_index":580,"title":{},"body":{"directives/NgxEditorJSDirective.html":{},"injectables/NgxEditorJSService.html":{},"components/PageContainerComponent.html":{}}}],["async/await",{"_index":907,"title":{},"body":{"injectables/NgxEditorJSService.html":{},"changelog.html":{}}}],["attach",{"_index":577,"title":{},"body":{"directives/NgxEditorJSDirective.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["attached",{"_index":599,"title":{},"body":{"directives/NgxEditorJSDirective.html":{}}}],["attacks",{"_index":1554,"title":{},"body":{"contributing.html":{}}}],["attention",{"_index":1548,"title":{},"body":{"contributing.html":{}}}],["attribution",{"_index":1645,"title":{},"body":{"contributing.html":{}}}],["authors",{"_index":1765,"title":{},"body":{"license.html":{}}}],["autofocus",{"_index":470,"title":{},"body":{"interfaces/NgxEditorJSConfig.html":{},"directives/NgxEditorJSDirective.html":{},"interfaces/NgxEditorJSModuleConfig.html":{}}}],["autofocused",{"_index":476,"title":{},"body":{"interfaces/NgxEditorJSConfig.html":{},"interfaces/NgxEditorJSModuleConfig.html":{}}}],["autosave",{"_index":162,"title":{},"body":{"interfaces/CreateEditorJSOptions.html":{},"interfaces/EditorJSMaterialForm.html":{},"directives/NgxEditorJSDirective.html":{},"components/NgxTinynodesMaterialFormFieldDemoComponent.html":{},"todo.html":{}}}],["autosaves",{"_index":610,"title":{},"body":{"directives/NgxEditorJSDirective.html":{}}}],["autosavetime",{"_index":1146,"title":{},"body":{"components/NgxTinynodesMaterialFormFieldDemoComponent.html":{}}}],["available",{"_index":25,"title":{},"body":{"interfaces/Block.html":{},"interfaces/Header.html":{},"interfaces/HeaderBlock.html":{},"interfaces/Image.html":{},"interfaces/ImageBlock.html":{},"interfaces/List.html":{},"interfaces/ListBlock.html":{},"directives/NgxEditorJSDirective.html":{},"injectables/PagesService.html":{},"interfaces/Paragraph.html":{},"interfaces/ParagraphBlock.html":{},"contributing.html":{},"modules.html":{},"miscellaneous/typealiases.html":{}}}],["await",{"_index":690,"title":{},"body":{"directives/NgxEditorJSDirective.html":{},"injectables/NgxEditorJSService.html":{}}}],["b",{"_index":971,"title":{},"body":{"injectables/NgxEditorJSService.html":{}}}],["b.time",{"_index":972,"title":{},"body":{"injectables/NgxEditorJSService.html":{}}}],["back",{"_index":679,"title":{},"body":{"directives/NgxEditorJSDirective.html":{},"todo.html":{}}}],["background",{"_index":58,"title":{},"body":{"interfaces/Block.html":{},"interfaces/Header.html":{},"interfaces/HeaderBlock.html":{},"interfaces/Image.html":{},"interfaces/ImageBlock.html":{},"interfaces/List.html":{},"interfaces/ListBlock.html":{},"interfaces/Paragraph.html":{},"interfaces/ParagraphBlock.html":{}}}],["ban",{"_index":1584,"title":{},"body":{"contributing.html":{}}}],["base",{"_index":10,"title":{},"body":{"interfaces/Block.html":{},"interfaces/EditorJSMaterialForm.html":{},"modules/NgxEditorJSModule.html":{},"miscellaneous/functions.html":{}}}],["based",{"_index":377,"title":{},"body":{"interfaces/EditorJSMaterialForm.html":{}}}],["basic",{"_index":63,"title":{},"body":{"interfaces/Block.html":{},"interfaces/Header.html":{},"interfaces/HeaderBlock.html":{},"interfaces/Image.html":{},"interfaces/ImageBlock.html":{},"interfaces/List.html":{},"interfaces/ListBlock.html":{},"components/NgxEditorJSDemoHomeComponent.html":{},"components/PageContainerComponent.html":{},"interfaces/Paragraph.html":{},"interfaces/ParagraphBlock.html":{},"miscellaneous/typealiases.html":{}}}],["basis",{"_index":1222,"title":{},"body":{"components/NgxTinynodesMaterialFormFieldDemoComponent.html":{}}}],["before",{"_index":615,"title":{},"body":{"directives/NgxEditorJSDirective.html":{},"contributing.html":{}}}],["behavior",{"_index":1523,"title":{},"body":{"contributing.html":{}}}],["behaviors",{"_index":1588,"title":{},"body":{"contributing.html":{}}}],["behaviorsubject",{"_index":139,"title":{},"body":{"interfaces/ChangeMap.html":{},"interfaces/EditorJSChange.html":{},"interfaces/EditorMap.html":{},"directives/NgxEditorJSDirective.html":{},"injectables/NgxEditorJSService.html":{},"components/NgxTinynodesMaterialFormFieldDemoComponent.html":{},"components/PageContainerComponent.html":{},"interfaces/ReadyMap.html":{},"interfaces/SavedMap.html":{}}}],["behaviorsubject(0",{"_index":1168,"title":{},"body":{"components/NgxTinynodesMaterialFormFieldDemoComponent.html":{}}}],["behaviorsubject(editor",{"_index":929,"title":{},"body":{"injectables/NgxEditorJSService.html":{}}}],["behaviorsubject(false",{"_index":677,"title":{},"body":{"directives/NgxEditorJSDirective.html":{},"injectables/NgxEditorJSService.html":{}}}],["behaviorsubject(undefined",{"_index":964,"title":{},"body":{"injectables/NgxEditorJSService.html":{},"components/NgxTinynodesMaterialFormFieldDemoComponent.html":{},"components/PageContainerComponent.html":{}}}],["behaviorsubject(value",{"_index":995,"title":{},"body":{"injectables/NgxEditorJSService.html":{}}}],["being",{"_index":1528,"title":{},"body":{"contributing.html":{}}}],["below",{"_index":1196,"title":{},"body":{"components/NgxTinynodesMaterialFormFieldDemoComponent.html":{},"components/PageContainerComponent.html":{},"index.html":{}}}],["best",{"_index":1538,"title":{},"body":{"contributing.html":{}}}],["beta.26",{"_index":1658,"title":{},"body":{"dependencies.html":{}}}],["better",{"_index":1401,"title":{},"body":{"changelog.html":{}}}],["bind",{"_index":911,"title":{},"body":{"injectables/NgxEditorJSService.html":{}}}],["binding",{"_index":322,"title":{},"body":{"interfaces/EditorJSMaterialForm.html":{}}}],["block",{"_index":1,"title":{"interfaces/Block.html":{}},"body":{"interfaces/Block.html":{},"interfaces/BlockData.html":{},"interfaces/ChangeMap.html":{},"interfaces/EditorJSChange.html":{},"interfaces/EditorJSClass.html":{},"interfaces/EditorJSInstanceConfig.html":{},"interfaces/EditorMap.html":{},"classes/FixedHeader.html":{},"interfaces/Header.html":{},"interfaces/HeaderBlock.html":{},"interfaces/Image.html":{},"interfaces/ImageBlock.html":{},"interfaces/InjectorApiCallOptions.html":{},"interfaces/InjectorApiCallResponse.html":{},"interfaces/InjectorMethodOption.html":{},"interfaces/List.html":{},"interfaces/ListBlock.html":{},"interfaces/NgxEditorJSConfig.html":{},"directives/NgxEditorJSDirective.html":{},"interfaces/NgxEditorJSModuleConfig.html":{},"modules/NgxEditorjsPluginsModule.html":{},"components/NgxTinynodesMaterialFormFieldDemoComponent.html":{},"interfaces/Page.html":{},"interfaces/PageBlock.html":{},"components/PageContainerComponent.html":{},"injectables/PagesService.html":{},"interfaces/Paragraph.html":{},"interfaces/ParagraphBlock.html":{},"modules/PluginCodeModule.html":{},"interfaces/PluginConfig.html":{},"interfaces/PluginConfigMap.html":{},"modules/PluginEmbedModule.html":{},"modules/PluginHeaderModule.html":{},"modules/PluginImageModule.html":{},"modules/PluginInlineCodeModule.html":{},"modules/PluginLinkModule.html":{},"modules/PluginListModule.html":{},"modules/PluginMarkerModule.html":{},"modules/PluginParagraphModule.html":{},"modules/PluginQuoteModule.html":{},"modules/PluginSimpleImageModule.html":{},"modules/PluginWarningModule.html":{},"interfaces/ReadyMap.html":{},"interfaces/SavedMap.html":{},"interfaces/Tag.html":{},"interfaces/ToolSettingsMap.html":{},"changelog.html":{},"miscellaneous/enumerations.html":{},"index.html":{},"miscellaneous/typealiases.html":{}}}],["block.id",{"_index":1333,"title":{},"body":{"injectables/PagesService.html":{}}}],["blockdata",{"_index":68,"title":{"interfaces/BlockData.html":{}},"body":{"interfaces/BlockData.html":{},"interfaces/PluginConfig.html":{},"interfaces/PluginConfigMap.html":{},"interfaces/ToolSettingsMap.html":{}}}],["blockplaceholder",{"_index":471,"title":{},"body":{"interfaces/NgxEditorJSConfig.html":{},"directives/NgxEditorJSDirective.html":{},"interfaces/NgxEditorJSModuleConfig.html":{}}}],["blocks",{"_index":146,"title":{},"body":{"interfaces/ChangeMap.html":{},"interfaces/EditorJSChange.html":{},"interfaces/EditorJSClass.html":{},"interfaces/EditorJSInstanceConfig.html":{},"interfaces/EditorMap.html":{},"interfaces/InjectorApiCallOptions.html":{},"interfaces/InjectorApiCallResponse.html":{},"interfaces/InjectorMethodOption.html":{},"classes/MockEditorJS.html":{},"classes/MockPlugin.html":{},"directives/NgxEditorJSDirective.html":{},"injectables/NgxEditorJSService.html":{},"components/NgxTinynodesMaterialFormFieldDemoComponent.html":{},"interfaces/Page.html":{},"interfaces/PageBlock.html":{},"components/PageContainerComponent.html":{},"injectables/PagesService.html":{},"interfaces/ReadyMap.html":{},"interfaces/SavedMap.html":{},"interfaces/Tag.html":{},"todo.html":{},"miscellaneous/variables.html":{}}}],["blocktypes",{"_index":64,"title":{},"body":{"interfaces/Block.html":{},"interfaces/Header.html":{},"interfaces/HeaderBlock.html":{},"interfaces/Image.html":{},"interfaces/ImageBlock.html":{},"interfaces/List.html":{},"interfaces/ListBlock.html":{},"interfaces/Paragraph.html":{},"interfaces/ParagraphBlock.html":{},"miscellaneous/typealiases.html":{}}}],["blur",{"_index":609,"title":{},"body":{"directives/NgxEditorJSDirective.html":{}}}],["body",{"_index":1508,"title":{},"body":{"contributing.html":{}}}],["boolean",{"_index":57,"title":{},"body":{"interfaces/Block.html":{},"interfaces/BlockData.html":{},"interfaces/EditorJSClass.html":{},"interfaces/EditorJSInstanceConfig.html":{},"interfaces/EditorJSMaterialForm.html":{},"interfaces/Header.html":{},"interfaces/HeaderBlock.html":{},"interfaces/Image.html":{},"interfaces/ImageBlock.html":{},"interfaces/InjectorApiCallOptions.html":{},"interfaces/InjectorApiCallResponse.html":{},"interfaces/InjectorMethodOption.html":{},"interfaces/List.html":{},"interfaces/ListBlock.html":{},"interfaces/NgxEditorJSConfig.html":{},"directives/NgxEditorJSDirective.html":{},"interfaces/NgxEditorJSModuleConfig.html":{},"interfaces/Paragraph.html":{},"interfaces/ParagraphBlock.html":{},"interfaces/PluginConfig.html":{},"interfaces/PluginConfigMap.html":{},"interfaces/ToolSettingsMap.html":{}}}],["bootstrap",{"_index":736,"title":{},"body":{"modules/NgxEditorJSModule.html":{},"modules/NgxEditorJSPluginServiceModule.html":{},"modules/NgxEditorjsDemoModule.html":{},"modules/NgxEditorjsPluginsModule.html":{},"modules/NgxTinynodesComponentsModule.html":{},"modules/NgxTinynodesMatJsonOutputModule.html":{},"modules/NgxTinynodesMatTagInputModule.html":{},"modules/NgxTinynodesMaterialFormFieldDemo.html":{},"modules/PageStoreModule.html":{},"overview.html":{}}}],["border",{"_index":54,"title":{},"body":{"interfaces/Block.html":{},"interfaces/Header.html":{},"interfaces/HeaderBlock.html":{},"interfaces/Image.html":{},"interfaces/ImageBlock.html":{},"interfaces/List.html":{},"interfaces/ListBlock.html":{},"interfaces/Paragraph.html":{},"interfaces/ParagraphBlock.html":{}}}],["both",{"_index":1595,"title":{},"body":{"contributing.html":{}}}],["bottom",{"_index":486,"title":{},"body":{"interfaces/NgxEditorJSConfig.html":{},"directives/NgxEditorJSDirective.html":{},"interfaces/NgxEditorJSModuleConfig.html":{},"components/NgxTinynodesMaterialFormFieldDemoComponent.html":{}}}],["box",{"_index":1700,"title":{},"body":{"index.html":{}}}],["break",{"_index":1449,"title":{},"body":{"changelog.html":{}}}],["breaking",{"_index":1411,"title":{},"body":{"changelog.html":{}}}],["browse",{"_index":1778,"title":{},"body":{"modules.html":{}}}],["browser",{"_index":1660,"title":{},"body":{"dependencies.html":{},"modules.html":{}}}],["bug",{"_index":1441,"title":{},"body":{"changelog.html":{}}}],["build",{"_index":1439,"title":{},"body":{"changelog.html":{},"contributing.html":{}}}],["builder",{"_index":1136,"title":{},"body":{"components/NgxTinynodesMaterialFormFieldDemoComponent.html":{}}}],["bump",{"_index":1409,"title":{},"body":{"changelog.html":{}}}],["buttons",{"_index":1215,"title":{},"body":{"components/NgxTinynodesMaterialFormFieldDemoComponent.html":{}}}],["call",{"_index":185,"title":{},"body":{"interfaces/EditorJSClass.html":{},"interfaces/EditorJSInstanceConfig.html":{},"interfaces/EditorJSMaterialForm.html":{},"interfaces/InjectorApiCallOptions.html":{},"interfaces/InjectorApiCallResponse.html":{},"interfaces/InjectorMethodOption.html":{},"injectables/NgxEditorJSService.html":{},"components/NgxTinynodesMaterialFormFieldDemoComponent.html":{},"components/PageContainerComponent.html":{}}}],["called",{"_index":355,"title":{},"body":{"interfaces/EditorJSMaterialForm.html":{},"directives/NgxEditorJSDirective.html":{},"injectables/NgxEditorJSService.html":{},"components/NgxTinynodesMaterialFormFieldDemoComponent.html":{}}}],["calling",{"_index":207,"title":{},"body":{"interfaces/EditorJSClass.html":{},"interfaces/EditorJSInstanceConfig.html":{},"interfaces/InjectorApiCallOptions.html":{},"interfaces/InjectorApiCallResponse.html":{},"interfaces/InjectorMethodOption.html":{}}}],["calls",{"_index":606,"title":{},"body":{"directives/NgxEditorJSDirective.html":{},"injectables/NgxEditorJSService.html":{},"changelog.html":{}}}],["caption",{"_index":53,"title":{},"body":{"interfaces/Block.html":{},"interfaces/Header.html":{},"interfaces/HeaderBlock.html":{},"interfaces/Image.html":{},"interfaces/ImageBlock.html":{},"interfaces/List.html":{},"interfaces/ListBlock.html":{},"interfaces/Paragraph.html":{},"interfaces/ParagraphBlock.html":{}}}],["card",{"_index":1226,"title":{},"body":{"components/NgxTinynodesMaterialFormFieldDemoComponent.html":{},"components/PageContainerComponent.html":{}}}],["caret",{"_index":857,"title":{},"body":{"injectables/NgxEditorJSService.html":{}}}],["cd",{"_index":596,"title":{},"body":{"directives/NgxEditorJSDirective.html":{},"components/NgxTinynodesMatJsonOutputComponent.html":{},"components/NgxTinynodesMaterialFormFieldDemoComponent.html":{},"components/PageContainerComponent.html":{}}}],["change",{"_index":154,"title":{},"body":{"interfaces/ChangeMap.html":{},"interfaces/CreateEditorJSOptions.html":{},"interfaces/EditorJSChange.html":{},"interfaces/EditorJSClass.html":{},"interfaces/EditorJSInstanceConfig.html":{},"interfaces/EditorJSMaterialForm.html":{},"interfaces/EditorMap.html":{},"interfaces/InjectorApiCallOptions.html":{},"interfaces/InjectorApiCallResponse.html":{},"interfaces/InjectorMethodOption.html":{},"directives/NgxEditorJSDirective.html":{},"injectables/NgxEditorJSService.html":{},"components/NgxTinynodesMaterialFormFieldDemoComponent.html":{},"components/PageContainerComponent.html":{},"interfaces/ReadyMap.html":{},"interfaces/SavedMap.html":{},"changelog.html":{},"contributing.html":{}}}],["change.time",{"_index":1269,"title":{},"body":{"components/PageContainerComponent.html":{}}}],["changed",{"_index":633,"title":{},"body":{"directives/NgxEditorJSDirective.html":{},"components/PageContainerComponent.html":{}}}],["changedetection",{"_index":268,"title":{},"body":{"interfaces/EditorJSMaterialForm.html":{},"components/NgxTinynodesMatJsonOutputComponent.html":{},"components/NgxTinynodesMaterialFormFieldDemoComponent.html":{},"components/PageContainerComponent.html":{}}}],["changedetectionstrategy",{"_index":226,"title":{},"body":{"interfaces/EditorJSMaterialForm.html":{},"components/NgxTinynodesMatJsonOutputComponent.html":{},"components/NgxTinynodesMaterialFormFieldDemoComponent.html":{},"components/PageContainerComponent.html":{}}}],["changedetectionstrategy.onpush",{"_index":269,"title":{},"body":{"interfaces/EditorJSMaterialForm.html":{},"components/NgxTinynodesMatJsonOutputComponent.html":{},"components/NgxTinynodesMaterialFormFieldDemoComponent.html":{},"components/PageContainerComponent.html":{}}}],["changedetectorref",{"_index":227,"title":{},"body":{"interfaces/EditorJSMaterialForm.html":{},"directives/NgxEditorJSDirective.html":{},"components/NgxTinynodesMatJsonOutputComponent.html":{},"components/NgxTinynodesMaterialFormFieldDemoComponent.html":{},"components/PageContainerComponent.html":{}}}],["changelog",{"_index":1379,"title":{"changelog.html":{}},"body":{"changelog.html":{},"index.html":{}}}],["changelogs",{"_index":1383,"title":{},"body":{"changelog.html":{}}}],["changemap",{"_index":136,"title":{"interfaces/ChangeMap.html":{}},"body":{"interfaces/ChangeMap.html":{},"interfaces/EditorJSChange.html":{},"interfaces/EditorMap.html":{},"injectables/NgxEditorJSService.html":{},"interfaces/ReadyMap.html":{},"interfaces/SavedMap.html":{}}}],["changes",{"_index":660,"title":{},"body":{"directives/NgxEditorJSDirective.html":{},"components/NgxTinynodesMaterialFormFieldDemoComponent.html":{},"changelog.html":{},"contributing.html":{},"todo.html":{}}}],["changes.blocks",{"_index":694,"title":{},"body":{"directives/NgxEditorJSDirective.html":{}}}],["changes.blocks.firstchange",{"_index":696,"title":{},"body":{"directives/NgxEditorJSDirective.html":{}}}],["changes.blocks.previousvalue",{"_index":695,"title":{},"body":{"directives/NgxEditorJSDirective.html":{}}}],["changeskeys",{"_index":701,"title":{},"body":{"directives/NgxEditorJSDirective.html":{}}}],["changeskeys.includes(key",{"_index":707,"title":{},"body":{"directives/NgxEditorJSDirective.html":{}}}],["charge",{"_index":1725,"title":{},"body":{"license.html":{}}}],["check",{"_index":1213,"title":{},"body":{"components/NgxTinynodesMaterialFormFieldDemoComponent.html":{},"components/PageContainerComponent.html":{}}}],["ci",{"_index":1785,"title":{},"body":{"todo.html":{}}}],["circumstances",{"_index":1625,"title":{},"body":{"contributing.html":{}}}],["claim",{"_index":1768,"title":{},"body":{"license.html":{}}}],["clarified",{"_index":1612,"title":{},"body":{"contributing.html":{}}}],["clarifying",{"_index":1568,"title":{},"body":{"contributing.html":{}}}],["class",{"_index":170,"title":{"classes/FixedHeader.html":{},"classes/MockEditorJS.html":{},"classes/MockPlugin.html":{}},"body":{"interfaces/EditorJSClass.html":{},"interfaces/EditorJSInstanceConfig.html":{},"interfaces/EditorJSMaterialForm.html":{},"classes/FixedHeader.html":{},"interfaces/InjectorApiCallOptions.html":{},"interfaces/InjectorApiCallResponse.html":{},"interfaces/InjectorMethodOption.html":{},"classes/MockEditorJS.html":{},"injectables/MockNgZone.html":{},"classes/MockPlugin.html":{},"components/NgxEditorJSDemoHomeComponent.html":{},"modules/NgxEditorJSDemoMaterialModule.html":{},"directives/NgxEditorJSDirective.html":{},"modules/NgxEditorJSModule.html":{},"injectables/NgxEditorJSPluginService.html":{},"modules/NgxEditorJSPluginServiceModule.html":{},"injectables/NgxEditorJSService.html":{},"modules/NgxEditorjsDemoModule.html":{},"modules/NgxEditorjsPluginsModule.html":{},"modules/NgxTinynodesComponentsModule.html":{},"components/NgxTinynodesMatJsonOutputComponent.html":{},"modules/NgxTinynodesMatJsonOutputModule.html":{},"modules/NgxTinynodesMatTagInputModule.html":{},"modules/NgxTinynodesMaterialFormFieldDemo.html":{},"components/NgxTinynodesMaterialFormFieldDemoComponent.html":{},"components/PageContainerComponent.html":{},"modules/PageStoreModule.html":{},"injectables/PagesQuery.html":{},"injectables/PagesService.html":{},"interfaces/PagesState.html":{},"injectables/PagesStore.html":{},"modules/PluginCodeModule.html":{},"modules/PluginEmbedModule.html":{},"modules/PluginHeaderModule.html":{},"modules/PluginImageModule.html":{},"modules/PluginInlineCodeModule.html":{},"modules/PluginLinkModule.html":{},"modules/PluginListModule.html":{},"modules/PluginMarkerModule.html":{},"modules/PluginParagraphModule.html":{},"modules/PluginQuoteModule.html":{},"modules/PluginSimpleImageModule.html":{},"modules/PluginWarningModule.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["classes",{"_index":384,"title":{},"body":{"classes/FixedHeader.html":{},"classes/MockEditorJS.html":{},"classes/MockPlugin.html":{},"changelog.html":{},"overview.html":{}}}],["clean",{"_index":998,"title":{},"body":{"injectables/NgxEditorJSService.html":{}}}],["cleaning",{"_index":997,"title":{},"body":{"injectables/NgxEditorJSService.html":{}}}],["cleanupsubjects(options",{"_index":999,"title":{},"body":{"injectables/NgxEditorJSService.html":{}}}],["clear",{"_index":439,"title":{},"body":{"classes/MockEditorJS.html":{},"classes/MockPlugin.html":{},"injectables/NgxEditorJSService.html":{},"components/NgxTinynodesMaterialFormFieldDemoComponent.html":{},"components/PageContainerComponent.html":{}}}],["clear(options",{"_index":861,"title":{},"body":{"injectables/NgxEditorJSService.html":{}}}],["clear(skipsave",{"_index":1139,"title":{},"body":{"components/NgxTinynodesMaterialFormFieldDemoComponent.html":{}}}],["click",{"_index":340,"title":{},"body":{"interfaces/EditorJSMaterialForm.html":{},"directives/NgxEditorJSDirective.html":{},"components/NgxTinynodesMaterialFormFieldDemoComponent.html":{},"components/PageContainerComponent.html":{}}}],["click)=\"disableautosave()\">disable",{"_index":1187,"title":{},"body":{"components/NgxTinynodesMaterialFormFieldDemoComponent.html":{}}}],["cluster_ngxeditorjsdemomodule",{"_index":1005,"title":{},"body":{"modules/NgxEditorjsDemoModule.html":{},"overview.html":{}}}],["cluster_ngxeditorjsdemomodule_declarations",{"_index":1006,"title":{},"body":{"modules/NgxEditorjsDemoModule.html":{},"overview.html":{}}}],["cluster_ngxeditorjsdemomodule_exports",{"_index":1008,"title":{},"body":{"modules/NgxEditorjsDemoModule.html":{},"overview.html":{}}}],["cluster_ngxeditorjsdemomodule_imports",{"_index":1007,"title":{},"body":{"modules/NgxEditorjsDemoModule.html":{},"overview.html":{}}}],["cluster_ngxeditorjsmodule",{"_index":737,"title":{},"body":{"modules/NgxEditorJSModule.html":{},"overview.html":{}}}],["cluster_ngxeditorjsmodule_declarations",{"_index":738,"title":{},"body":{"modules/NgxEditorJSModule.html":{},"overview.html":{}}}],["cluster_ngxeditorjsmodule_exports",{"_index":739,"title":{},"body":{"modules/NgxEditorJSModule.html":{},"overview.html":{}}}],["cluster_ngxeditorjsmodule_providers",{"_index":740,"title":{},"body":{"modules/NgxEditorJSModule.html":{},"overview.html":{}}}],["cluster_ngxeditorjspluginservicemodule",{"_index":825,"title":{},"body":{"modules/NgxEditorJSPluginServiceModule.html":{},"overview.html":{}}}],["cluster_ngxeditorjspluginservicemodule_providers",{"_index":826,"title":{},"body":{"modules/NgxEditorJSPluginServiceModule.html":{},"overview.html":{}}}],["cluster_ngxeditorjspluginsmodule",{"_index":1028,"title":{},"body":{"modules/NgxEditorjsPluginsModule.html":{},"overview.html":{}}}],["cluster_ngxeditorjspluginsmodule_exports",{"_index":1030,"title":{},"body":{"modules/NgxEditorjsPluginsModule.html":{},"overview.html":{}}}],["cluster_ngxeditorjspluginsmodule_imports",{"_index":1029,"title":{},"body":{"modules/NgxEditorjsPluginsModule.html":{},"overview.html":{}}}],["cluster_ngxtinynodescomponentsmodule",{"_index":1068,"title":{},"body":{"modules/NgxTinynodesComponentsModule.html":{},"overview.html":{}}}],["cluster_ngxtinynodescomponentsmodule_exports",{"_index":1070,"title":{},"body":{"modules/NgxTinynodesComponentsModule.html":{},"overview.html":{}}}],["cluster_ngxtinynodescomponentsmodule_imports",{"_index":1069,"title":{},"body":{"modules/NgxTinynodesComponentsModule.html":{},"overview.html":{}}}],["cluster_ngxtinynodesmaterialformfielddemo",{"_index":1111,"title":{},"body":{"modules/NgxTinynodesMaterialFormFieldDemo.html":{},"overview.html":{}}}],["cluster_ngxtinynodesmaterialformfielddemo_declarations",{"_index":1112,"title":{},"body":{"modules/NgxTinynodesMaterialFormFieldDemo.html":{},"overview.html":{}}}],["cluster_ngxtinynodesmaterialformfielddemo_imports",{"_index":1113,"title":{},"body":{"modules/NgxTinynodesMaterialFormFieldDemo.html":{}}}],["cluster_ngxtinynodesmatjsonoutputmodule",{"_index":1096,"title":{},"body":{"modules/NgxTinynodesMatJsonOutputModule.html":{},"overview.html":{}}}],["cluster_ngxtinynodesmatjsonoutputmodule_declarations",{"_index":1097,"title":{},"body":{"modules/NgxTinynodesMatJsonOutputModule.html":{},"overview.html":{}}}],["cluster_ngxtinynodesmatjsonoutputmodule_exports",{"_index":1098,"title":{},"body":{"modules/NgxTinynodesMatJsonOutputModule.html":{},"overview.html":{}}}],["cluster_ngxtinynodesmattaginputmodule",{"_index":1101,"title":{},"body":{"modules/NgxTinynodesMatTagInputModule.html":{},"overview.html":{}}}],["cluster_ngxtinynodesmattaginputmodule_declarations",{"_index":1102,"title":{},"body":{"modules/NgxTinynodesMatTagInputModule.html":{},"overview.html":{}}}],["cluster_ngxtinynodesmattaginputmodule_exports",{"_index":1104,"title":{},"body":{"modules/NgxTinynodesMatTagInputModule.html":{},"overview.html":{}}}],["cluster_ngxtinynodesmattaginputmodule_ngxtinynodesmattaginputcomponent_providers",{"_index":1103,"title":{},"body":{"modules/NgxTinynodesMatTagInputModule.html":{},"overview.html":{}}}],["cluster_pagestoremodule",{"_index":1273,"title":{},"body":{"modules/PageStoreModule.html":{},"overview.html":{}}}],["cluster_pagestoremodule_providers",{"_index":1274,"title":{},"body":{"modules/PageStoreModule.html":{},"overview.html":{}}}],["code",{"_index":517,"title":{},"body":{"components/NgxEditorJSDemoHomeComponent.html":{},"modules/PluginCodeModule.html":{},"modules/PluginInlineCodeModule.html":{},"contributing.html":{}}}],["code.module",{"_index":1055,"title":{},"body":{"modules/NgxEditorjsPluginsModule.html":{}}}],["code.module.ts",{"_index":1352,"title":{},"body":{"modules/PluginInlineCodeModule.html":{}}}],["code/inline",{"_index":1054,"title":{},"body":{"modules/NgxEditorjsPluginsModule.html":{},"modules/PluginInlineCodeModule.html":{}}}],["coercebooleanproperty",{"_index":223,"title":{},"body":{"interfaces/EditorJSMaterialForm.html":{}}}],["coercebooleanproperty(disabled",{"_index":310,"title":{},"body":{"interfaces/EditorJSMaterialForm.html":{}}}],["coercebooleanproperty(focused",{"_index":297,"title":{},"body":{"interfaces/EditorJSMaterialForm.html":{}}}],["coercebooleanproperty(required",{"_index":304,"title":{},"body":{"interfaces/EditorJSMaterialForm.html":{}}}],["collapse",{"_index":1095,"title":{},"body":{"components/NgxTinynodesMatJsonOutputComponent.html":{}}}],["collection",{"_index":515,"title":{},"body":{"components/NgxEditorJSDemoHomeComponent.html":{},"modules/NgxEditorJSModule.html":{},"index.html":{}}}],["column",{"_index":1231,"title":{},"body":{"components/NgxTinynodesMaterialFormFieldDemoComponent.html":{}}}],["comments",{"_index":1552,"title":{},"body":{"contributing.html":{}}}],["commits",{"_index":1579,"title":{},"body":{"contributing.html":{}}}],["common",{"_index":1444,"title":{},"body":{"changelog.html":{}}}],["commonmodule",{"_index":754,"title":{},"body":{"modules/NgxEditorJSModule.html":{},"modules/NgxEditorjsDemoModule.html":{},"modules/NgxEditorjsPluginsModule.html":{},"modules/NgxTinynodesMatJsonOutputModule.html":{},"modules/NgxTinynodesMatTagInputModule.html":{},"modules/NgxTinynodesMaterialFormFieldDemo.html":{}}}],["community",{"_index":1501,"title":{},"body":{"contributing.html":{}}}],["compatible",{"_index":258,"title":{},"body":{"interfaces/EditorJSMaterialForm.html":{},"index.html":{}}}],["complaints",{"_index":1620,"title":{},"body":{"contributing.html":{}}}],["completly",{"_index":1428,"title":{},"body":{"changelog.html":{}}}],["component",{"_index":228,"title":{"components/NgxEditorJSDemoHomeComponent.html":{},"components/NgxTinynodesMatJsonOutputComponent.html":{},"components/NgxTinynodesMaterialFormFieldDemoComponent.html":{},"components/PageContainerComponent.html":{}},"body":{"interfaces/EditorJSMaterialForm.html":{},"components/NgxEditorJSDemoHomeComponent.html":{},"directives/NgxEditorJSDirective.html":{},"components/NgxTinynodesMatJsonOutputComponent.html":{},"modules/NgxTinynodesMaterialFormFieldDemo.html":{},"components/NgxTinynodesMaterialFormFieldDemoComponent.html":{},"components/PageContainerComponent.html":{},"changelog.html":{},"index.html":{},"todo.html":{},"miscellaneous/variables.html":{}}}],["component_template",{"_index":531,"title":{},"body":{"components/NgxEditorJSDemoHomeComponent.html":{},"components/NgxTinynodesMatJsonOutputComponent.html":{},"components/NgxTinynodesMaterialFormFieldDemoComponent.html":{},"components/PageContainerComponent.html":{}}}],["components",{"_index":335,"title":{},"body":{"interfaces/EditorJSMaterialForm.html":{},"components/NgxEditorJSDemoHomeComponent.html":{},"directives/NgxEditorJSDirective.html":{},"components/NgxTinynodesMatJsonOutputComponent.html":{},"modules/NgxTinynodesMaterialFormFieldDemo.html":{},"components/NgxTinynodesMaterialFormFieldDemoComponent.html":{},"components/PageContainerComponent.html":{},"changelog.html":{},"index.html":{},"overview.html":{}}}],["components.module.ts",{"_index":1074,"title":{},"body":{"modules/NgxTinynodesComponentsModule.html":{}}}],["components/mat",{"_index":1075,"title":{},"body":{"modules/NgxTinynodesComponentsModule.html":{}}}],["components/src/lib/components/mat",{"_index":1084,"title":{},"body":{"components/NgxTinynodesMatJsonOutputComponent.html":{},"modules/NgxTinynodesMatJsonOutputModule.html":{},"modules/NgxTinynodesMatTagInputModule.html":{},"miscellaneous/variables.html":{}}}],["components/src/lib/ngx",{"_index":1073,"title":{},"body":{"modules/NgxTinynodesComponentsModule.html":{}}}],["components/src/lib/types/components.ts",{"_index":1081,"title":{},"body":{"interfaces/NgxTinynodesMatFieldComponent.html":{}}}],["components/src/test.ts",{"_index":1809,"title":{},"body":{"miscellaneous/variables.html":{}}}],["conditions",{"_index":1747,"title":{},"body":{"license.html":{}}}],["conduct",{"_index":1467,"title":{},"body":{"contributing.html":{}}}],["confidentiality",{"_index":1628,"title":{},"body":{"contributing.html":{}}}],["config",{"_index":110,"title":{},"body":{"interfaces/BlockData.html":{},"interfaces/CreateEditorJSOptions.html":{},"classes/FixedHeader.html":{},"classes/MockEditorJS.html":{},"classes/MockPlugin.html":{},"interfaces/NgxEditorJSConfig.html":{},"directives/NgxEditorJSDirective.html":{},"modules/NgxEditorJSModule.html":{},"interfaces/NgxEditorJSModuleConfig.html":{},"injectables/NgxEditorJSService.html":{},"interfaces/PluginConfig.html":{},"interfaces/PluginConfigMap.html":{},"interfaces/ToolSettingsMap.html":{},"miscellaneous/functions.html":{},"todo.html":{},"miscellaneous/variables.html":{}}}],["config.data",{"_index":732,"title":{},"body":{"directives/NgxEditorJSDirective.html":{}}}],["config.ts",{"_index":1681,"title":{},"body":{"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["config/editor",{"_index":674,"title":{},"body":{"directives/NgxEditorJSDirective.html":{}}}],["config/module",{"_index":759,"title":{},"body":{"modules/NgxEditorJSModule.html":{}}}],["configs",{"_index":131,"title":{},"body":{"interfaces/BlockData.html":{},"interfaces/PluginConfig.html":{},"interfaces/PluginConfigMap.html":{},"interfaces/ToolSettingsMap.html":{}}}],["configuration",{"_index":96,"title":{},"body":{"interfaces/BlockData.html":{},"interfaces/CreateEditorJSOptions.html":{},"interfaces/EditorJSClass.html":{},"interfaces/EditorJSInstanceConfig.html":{},"interfaces/InjectorApiCallOptions.html":{},"interfaces/InjectorApiCallResponse.html":{},"interfaces/InjectorMethodOption.html":{},"interfaces/NgxEditorJSConfig.html":{},"directives/NgxEditorJSDirective.html":{},"modules/NgxEditorJSModule.html":{},"interfaces/NgxEditorJSModuleConfig.html":{},"injectables/NgxEditorJSPluginService.html":{},"injectables/NgxEditorJSService.html":{},"interfaces/PluginConfig.html":{},"interfaces/PluginConfigMap.html":{},"interfaces/ToolSettingsMap.html":{},"changelog.html":{},"miscellaneous/functions.html":{}}}],["configurations",{"_index":788,"title":{},"body":{"injectables/NgxEditorJSPluginService.html":{},"miscellaneous/functions.html":{}}}],["configure",{"_index":863,"title":{},"body":{"injectables/NgxEditorJSService.html":{}}}],["connection",{"_index":1775,"title":{},"body":{"license.html":{}}}],["considered",{"_index":1562,"title":{},"body":{"contributing.html":{}}}],["const",{"_index":125,"title":{},"body":{"interfaces/BlockData.html":{},"interfaces/EditorJSClass.html":{},"interfaces/EditorJSInstanceConfig.html":{},"interfaces/EditorJSMaterialForm.html":{},"classes/FixedHeader.html":{},"interfaces/InjectorApiCallOptions.html":{},"interfaces/InjectorApiCallResponse.html":{},"interfaces/InjectorMethodOption.html":{},"interfaces/NgxEditorJSConfig.html":{},"directives/NgxEditorJSDirective.html":{},"interfaces/NgxEditorJSModuleConfig.html":{},"injectables/NgxEditorJSPluginService.html":{},"injectables/NgxEditorJSService.html":{},"modules/NgxTinynodesMaterialFormFieldDemo.html":{},"injectables/PagesService.html":{},"interfaces/PluginConfig.html":{},"interfaces/PluginConfigMap.html":{},"modules/PluginHeaderModule.html":{},"interfaces/ToolSettingsMap.html":{}}}],["constructive",{"_index":1535,"title":{},"body":{"contributing.html":{}}}],["constructor",{"_index":344,"title":{},"body":{"interfaces/EditorJSMaterialForm.html":{},"classes/FixedHeader.html":{},"classes/MockEditorJS.html":{},"injectables/MockNgZone.html":{},"classes/MockPlugin.html":{},"directives/NgxEditorJSDirective.html":{},"modules/NgxEditorJSModule.html":{},"injectables/NgxEditorJSPluginService.html":{},"injectables/NgxEditorJSService.html":{},"components/NgxTinynodesMatJsonOutputComponent.html":{},"components/NgxTinynodesMaterialFormFieldDemoComponent.html":{},"components/PageContainerComponent.html":{},"injectables/PagesQuery.html":{},"injectables/PagesService.html":{},"interfaces/PagesState.html":{},"injectables/PagesStore.html":{}}}],["constructor(@inject(pluginclasses",{"_index":804,"title":{},"body":{"injectables/NgxEditorJSPluginService.html":{}}}],["constructor(cd",{"_index":1089,"title":{},"body":{"components/NgxTinynodesMatJsonOutputComponent.html":{}}}],["constructor(config",{"_index":388,"title":{},"body":{"classes/FixedHeader.html":{},"classes/MockEditorJS.html":{},"modules/PluginHeaderModule.html":{}}}],["constructor(editorjs",{"_index":847,"title":{},"body":{"injectables/NgxEditorJSService.html":{}}}],["constructor(el",{"_index":594,"title":{},"body":{"directives/NgxEditorJSDirective.html":{}}}],["constructor(pagesservice",{"_index":1129,"title":{},"body":{"components/NgxTinynodesMaterialFormFieldDemoComponent.html":{},"components/PageContainerComponent.html":{}}}],["constructor(pluginconfigmap",{"_index":783,"title":{},"body":{"injectables/NgxEditorJSPluginService.html":{}}}],["constructor(private",{"_index":432,"title":{},"body":{"classes/MockEditorJS.html":{},"classes/MockPlugin.html":{},"components/NgxTinynodesMatJsonOutputComponent.html":{}}}],["constructor(protected",{"_index":1291,"title":{},"body":{"injectables/PagesQuery.html":{}}}],["constructor(public",{"_index":1321,"title":{},"body":{"injectables/PagesService.html":{}}}],["constructor(query",{"_index":1299,"title":{},"body":{"injectables/PagesService.html":{}}}],["constructor(store",{"_index":1287,"title":{},"body":{"injectables/PagesQuery.html":{}}}],["contacting",{"_index":1617,"title":{},"body":{"contributing.html":{}}}],["container",{"_index":339,"title":{},"body":{"interfaces/EditorJSMaterialForm.html":{},"components/NgxEditorJSDemoHomeComponent.html":{},"injectables/NgxEditorJSService.html":{},"components/NgxTinynodesMatJsonOutputComponent.html":{},"components/NgxTinynodesMaterialFormFieldDemoComponent.html":{},"components/PageContainerComponent.html":{},"contributing.html":{}}}],["container.component",{"_index":1018,"title":{},"body":{"modules/NgxEditorjsDemoModule.html":{}}}],["container.component.html",{"_index":513,"title":{},"body":{"components/NgxEditorJSDemoHomeComponent.html":{},"components/PageContainerComponent.html":{}}}],["container.component.scss",{"_index":512,"title":{},"body":{"components/NgxEditorJSDemoHomeComponent.html":{},"components/PageContainerComponent.html":{}}}],["container.component.ts",{"_index":508,"title":{},"body":{"components/NgxEditorJSDemoHomeComponent.html":{},"components/PageContainerComponent.html":{}}}],["container.component.ts:106",{"_index":1254,"title":{},"body":{"components/PageContainerComponent.html":{}}}],["container.component.ts:119",{"_index":1242,"title":{},"body":{"components/PageContainerComponent.html":{}}}],["container.component.ts:28",{"_index":1245,"title":{},"body":{"components/PageContainerComponent.html":{}}}],["container.component.ts:35",{"_index":1240,"title":{},"body":{"components/PageContainerComponent.html":{}}}],["container.component.ts:55",{"_index":1249,"title":{},"body":{"components/PageContainerComponent.html":{}}}],["container.component.ts:65",{"_index":1250,"title":{},"body":{"components/PageContainerComponent.html":{}}}],["container.component.ts:72",{"_index":1252,"title":{},"body":{"components/PageContainerComponent.html":{}}}],["container.component.ts:79",{"_index":1244,"title":{},"body":{"components/PageContainerComponent.html":{}}}],["container.component.ts:86",{"_index":1241,"title":{},"body":{"components/PageContainerComponent.html":{}}}],["container.component.ts:93",{"_index":1243,"title":{},"body":{"components/PageContainerComponent.html":{}}}],["container/home",{"_index":507,"title":{},"body":{"components/NgxEditorJSDemoHomeComponent.html":{},"modules/NgxEditorjsDemoModule.html":{}}}],["container/page",{"_index":1017,"title":{},"body":{"modules/NgxEditorjsDemoModule.html":{},"components/PageContainerComponent.html":{}}}],["containers/editorjs",{"_index":760,"title":{},"body":{"modules/NgxEditorJSModule.html":{}}}],["containers/editorjs/editorjs.component",{"_index":762,"title":{},"body":{"modules/NgxEditorJSModule.html":{}}}],["containers/home",{"_index":1023,"title":{},"body":{"modules/NgxEditorjsDemoModule.html":{}}}],["containers/material",{"_index":1117,"title":{},"body":{"modules/NgxTinynodesMaterialFormFieldDemo.html":{}}}],["containers/page",{"_index":1016,"title":{},"body":{"modules/NgxEditorjsDemoModule.html":{}}}],["containing",{"_index":138,"title":{},"body":{"interfaces/ChangeMap.html":{},"interfaces/EditorJSChange.html":{},"interfaces/EditorMap.html":{},"interfaces/ReadyMap.html":{},"interfaces/SavedMap.html":{}}}],["contains",{"_index":113,"title":{},"body":{"interfaces/BlockData.html":{},"injectables/NgxEditorJSService.html":{},"interfaces/PluginConfig.html":{},"interfaces/PluginConfigMap.html":{},"interfaces/ToolSettingsMap.html":{}}}],["content",{"_index":616,"title":{},"body":{"directives/NgxEditorJSDirective.html":{},"components/NgxTinynodesMaterialFormFieldDemoComponent.html":{},"components/PageContainerComponent.html":{}}}],["context",{"_index":1797,"title":{},"body":{"miscellaneous/variables.html":{}}}],["continue",{"_index":1453,"title":{},"body":{"changelog.html":{}}}],["contract",{"_index":1772,"title":{},"body":{"license.html":{}}}],["contributes",{"_index":1524,"title":{},"body":{"contributing.html":{}}}],["contributing",{"_index":1458,"title":{"contributing.html":{}},"body":{"contributing.html":{}}}],["contributions",{"_index":1582,"title":{},"body":{"contributing.html":{}}}],["contributor",{"_index":1587,"title":{},"body":{"contributing.html":{}}}],["contributors",{"_index":1498,"title":{},"body":{"contributing.html":{}}}],["control",{"_index":275,"title":{},"body":{"interfaces/EditorJSMaterialForm.html":{},"directives/NgxEditorJSDirective.html":{},"modules/NgxEditorJSModule.html":{},"changelog.html":{},"todo.html":{}}}],["controls",{"_index":1211,"title":{},"body":{"components/NgxTinynodesMaterialFormFieldDemoComponent.html":{},"components/PageContainerComponent.html":{},"todo.html":{}}}],["controltype",{"_index":276,"title":{},"body":{"interfaces/EditorJSMaterialForm.html":{}}}],["controlvalueaccessor",{"_index":1082,"title":{},"body":{"interfaces/NgxTinynodesMatFieldComponent.html":{}}}],["copies",{"_index":1742,"title":{},"body":{"license.html":{}}}],["copy",{"_index":1728,"title":{},"body":{"license.html":{}}}],["copyright",{"_index":1722,"title":{},"body":{"license.html":{}}}],["core",{"_index":865,"title":{},"body":{"injectables/NgxEditorJSService.html":{},"modules/NgxEditorjsDemoModule.html":{},"modules/NgxTinynodesMaterialFormFieldDemo.html":{},"components/NgxTinynodesMaterialFormFieldDemoComponent.html":{},"components/PageContainerComponent.html":{},"changelog.html":{},"dependencies.html":{}}}],["coreapi",{"_index":1789,"title":{},"body":{"todo.html":{}}}],["corrective",{"_index":1573,"title":{},"body":{"contributing.html":{}}}],["covenant",{"_index":1647,"title":{},"body":{"contributing.html":{}}}],["covenant.org/version/1/4",{"_index":1650,"title":{},"body":{"contributing.html":{}}}],["cover",{"_index":1446,"title":{},"body":{"changelog.html":{}}}],["create",{"_index":645,"title":{},"body":{"directives/NgxEditorJSDirective.html":{},"injectables/NgxEditorJSService.html":{},"miscellaneous/functions.html":{}}}],["createconfig",{"_index":724,"title":{},"body":{"directives/NgxEditorJSDirective.html":{}}}],["created",{"_index":644,"title":{},"body":{"directives/NgxEditorJSDirective.html":{},"injectables/NgxEditorJSService.html":{},"injectables/PagesService.html":{},"changelog.html":{}}}],["createeditor",{"_index":581,"title":{},"body":{"directives/NgxEditorJSDirective.html":{}}}],["createeditor(config",{"_index":640,"title":{},"body":{"directives/NgxEditorJSDirective.html":{}}}],["createeditorjsconfig",{"_index":673,"title":{},"body":{"directives/NgxEditorJSDirective.html":{},"miscellaneous/functions.html":{}}}],["createeditorjsconfig(inputconfig",{"_index":1686,"title":{},"body":{"miscellaneous/functions.html":{}}}],["createeditorjsinstance",{"_index":769,"title":{},"body":{"modules/NgxEditorJSModule.html":{},"miscellaneous/functions.html":{}}}],["createeditorjsinstance(editorjs",{"_index":765,"title":{},"body":{"modules/NgxEditorJSModule.html":{},"miscellaneous/functions.html":{}}}],["createeditorjsoptions",{"_index":158,"title":{"interfaces/CreateEditorJSOptions.html":{}},"body":{"interfaces/CreateEditorJSOptions.html":{},"injectables/NgxEditorJSService.html":{}}}],["createinstance",{"_index":845,"title":{},"body":{"injectables/NgxEditorJSService.html":{}}}],["createinstance(options",{"_index":866,"title":{},"body":{"injectables/NgxEditorJSService.html":{}}}],["createmoduleconfig",{"_index":758,"title":{},"body":{"modules/NgxEditorJSModule.html":{},"miscellaneous/functions.html":{}}}],["createmoduleconfig(config",{"_index":1690,"title":{},"body":{"miscellaneous/functions.html":{}}}],["createonchange",{"_index":914,"title":{},"body":{"injectables/NgxEditorJSService.html":{}}}],["createonchange(options",{"_index":987,"title":{},"body":{"injectables/NgxEditorJSService.html":{}}}],["createonready",{"_index":919,"title":{},"body":{"injectables/NgxEditorJSService.html":{}}}],["createonready(options",{"_index":989,"title":{},"body":{"injectables/NgxEditorJSService.html":{}}}],["createpluginconfig",{"_index":828,"title":{},"body":{"modules/NgxEditorJSPluginServiceModule.html":{},"modules/PluginCodeModule.html":{},"modules/PluginImageModule.html":{},"modules/PluginLinkModule.html":{},"modules/PluginListModule.html":{},"modules/PluginMarkerModule.html":{},"modules/PluginSimpleImageModule.html":{},"miscellaneous/functions.html":{}}}],["createpluginconfig(pluginconfigs",{"_index":1692,"title":{},"body":{"miscellaneous/functions.html":{}}}],["creates",{"_index":174,"title":{},"body":{"interfaces/EditorJSClass.html":{},"interfaces/EditorJSInstanceConfig.html":{},"interfaces/InjectorApiCallOptions.html":{},"interfaces/InjectorApiCallResponse.html":{},"interfaces/InjectorMethodOption.html":{},"directives/NgxEditorJSDirective.html":{},"injectables/NgxEditorJSService.html":{},"injectables/PagesService.html":{},"miscellaneous/functions.html":{}}}],["creating",{"_index":180,"title":{},"body":{"interfaces/EditorJSClass.html":{},"interfaces/EditorJSInstanceConfig.html":{},"interfaces/InjectorApiCallOptions.html":{},"interfaces/InjectorApiCallResponse.html":{},"interfaces/InjectorMethodOption.html":{},"contributing.html":{}}}],["creation",{"_index":477,"title":{},"body":{"interfaces/NgxEditorJSConfig.html":{},"interfaces/NgxEditorJSModuleConfig.html":{},"modules/PageStoreModule.html":{},"changelog.html":{}}}],["criticism",{"_index":1536,"title":{},"body":{"contributing.html":{}}}],["ctrl+shift+c",{"_index":1355,"title":{},"body":{"modules/PluginInlineCodeModule.html":{}}}],["ctrl+shift+m",{"_index":1363,"title":{},"body":{"modules/PluginMarkerModule.html":{}}}],["current",{"_index":884,"title":{},"body":{"injectables/NgxEditorJSService.html":{},"components/NgxTinynodesMaterialFormFieldDemoComponent.html":{},"changelog.html":{}}}],["currently",{"_index":80,"title":{},"body":{"interfaces/BlockData.html":{},"modules/PageStoreModule.html":{},"interfaces/PluginConfig.html":{},"interfaces/PluginConfigMap.html":{},"interfaces/ToolSettingsMap.html":{},"changelog.html":{},"miscellaneous/enumerations.html":{}}}],["custom",{"_index":31,"title":{},"body":{"interfaces/Block.html":{},"interfaces/BlockData.html":{},"interfaces/Header.html":{},"interfaces/HeaderBlock.html":{},"interfaces/Image.html":{},"interfaces/ImageBlock.html":{},"interfaces/List.html":{},"interfaces/ListBlock.html":{},"interfaces/Paragraph.html":{},"interfaces/ParagraphBlock.html":{},"interfaces/PluginConfig.html":{},"interfaces/PluginConfigMap.html":{},"interfaces/ToolSettingsMap.html":{},"miscellaneous/typealiases.html":{}}}],["cycle",{"_index":366,"title":{},"body":{"interfaces/EditorJSMaterialForm.html":{},"index.html":{}}}],["damages",{"_index":1769,"title":{},"body":{"license.html":{}}}],["data",{"_index":15,"title":{},"body":{"interfaces/Block.html":{},"interfaces/BlockData.html":{},"interfaces/EditorJSClass.html":{},"interfaces/EditorJSInstanceConfig.html":{},"classes/FixedHeader.html":{},"interfaces/Header.html":{},"interfaces/HeaderBlock.html":{},"interfaces/Image.html":{},"interfaces/ImageBlock.html":{},"interfaces/InjectorApiCallOptions.html":{},"interfaces/InjectorApiCallResponse.html":{},"interfaces/InjectorMethodOption.html":{},"interfaces/List.html":{},"interfaces/ListBlock.html":{},"interfaces/NgxEditorJSConfig.html":{},"directives/NgxEditorJSDirective.html":{},"interfaces/NgxEditorJSModuleConfig.html":{},"injectables/NgxEditorJSService.html":{},"components/NgxTinynodesMatJsonOutputComponent.html":{},"components/NgxTinynodesMaterialFormFieldDemoComponent.html":{},"components/PageContainerComponent.html":{},"interfaces/Paragraph.html":{},"interfaces/ParagraphBlock.html":{},"interfaces/PluginConfig.html":{},"interfaces/PluginConfigMap.html":{},"modules/PluginHeaderModule.html":{},"interfaces/ToolSettingsMap.html":{}}}],["data).pipe",{"_index":962,"title":{},"body":{"injectables/NgxEditorJSService.html":{}}}],["data.blocks",{"_index":1185,"title":{},"body":{"components/NgxTinynodesMaterialFormFieldDemoComponent.html":{},"components/PageContainerComponent.html":{}}}],["data.text",{"_index":404,"title":{},"body":{"classes/FixedHeader.html":{},"modules/PluginHeaderModule.html":{}}}],["date.now",{"_index":441,"title":{},"body":{"classes/MockEditorJS.html":{},"classes/MockPlugin.html":{},"directives/NgxEditorJSDirective.html":{},"injectables/NgxEditorJSService.html":{},"components/NgxTinynodesMaterialFormFieldDemoComponent.html":{}}}],["datorama/akita",{"_index":1237,"title":{},"body":{"interfaces/Page.html":{},"interfaces/PageBlock.html":{},"injectables/PagesQuery.html":{},"injectables/PagesService.html":{},"interfaces/PagesState.html":{},"injectables/PagesStore.html":{},"interfaces/Tag.html":{}}}],["deal",{"_index":1731,"title":{},"body":{"license.html":{}}}],["dealings",{"_index":1776,"title":{},"body":{"license.html":{}}}],["declarations",{"_index":735,"title":{},"body":{"modules/NgxEditorJSModule.html":{},"modules/NgxEditorJSPluginServiceModule.html":{},"modules/NgxEditorjsDemoModule.html":{},"modules/NgxEditorjsPluginsModule.html":{},"modules/NgxTinynodesComponentsModule.html":{},"modules/NgxTinynodesMatJsonOutputModule.html":{},"modules/NgxTinynodesMatTagInputModule.html":{},"modules/NgxTinynodesMaterialFormFieldDemo.html":{},"modules/PageStoreModule.html":{},"overview.html":{}}}],["decorators",{"_index":1246,"title":{},"body":{"components/PageContainerComponent.html":{}}}],["deem",{"_index":1589,"title":{},"body":{"contributing.html":{}}}],["deemed",{"_index":1623,"title":{},"body":{"contributing.html":{}}}],["default",{"_index":34,"title":{},"body":{"interfaces/Block.html":{},"interfaces/BlockData.html":{},"interfaces/EditorJSClass.html":{},"interfaces/EditorJSInstanceConfig.html":{},"classes/FixedHeader.html":{},"interfaces/Header.html":{},"interfaces/HeaderBlock.html":{},"interfaces/Image.html":{},"interfaces/ImageBlock.html":{},"interfaces/InjectorApiCallOptions.html":{},"interfaces/InjectorApiCallResponse.html":{},"interfaces/InjectorMethodOption.html":{},"interfaces/List.html":{},"interfaces/ListBlock.html":{},"injectables/MockNgZone.html":{},"interfaces/NgxEditorJSConfig.html":{},"directives/NgxEditorJSDirective.html":{},"modules/NgxEditorJSModule.html":{},"interfaces/NgxEditorJSModuleConfig.html":{},"injectables/NgxEditorJSPluginService.html":{},"injectables/NgxEditorJSService.html":{},"components/NgxTinynodesMatJsonOutputComponent.html":{},"components/NgxTinynodesMaterialFormFieldDemoComponent.html":{},"components/PageContainerComponent.html":{},"interfaces/Paragraph.html":{},"interfaces/ParagraphBlock.html":{},"modules/PluginCodeModule.html":{},"interfaces/PluginConfig.html":{},"interfaces/PluginConfigMap.html":{},"modules/PluginEmbedModule.html":{},"modules/PluginHeaderModule.html":{},"modules/PluginImageModule.html":{},"modules/PluginInlineCodeModule.html":{},"modules/PluginLinkModule.html":{},"modules/PluginListModule.html":{},"modules/PluginMarkerModule.html":{},"modules/PluginParagraphModule.html":{},"modules/PluginQuoteModule.html":{},"modules/PluginSimpleImageModule.html":{},"modules/PluginWarningModule.html":{},"interfaces/ToolSettingsMap.html":{},"changelog.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["default_holder_id",{"_index":1799,"title":{},"body":{"miscellaneous/variables.html":{}}}],["defaults",{"_index":752,"title":{},"body":{"modules/NgxEditorJSModule.html":{}}}],["define",{"_index":117,"title":{},"body":{"interfaces/BlockData.html":{},"interfaces/NgxEditorJSConfig.html":{},"interfaces/NgxEditorJSModuleConfig.html":{},"interfaces/PluginConfig.html":{},"interfaces/PluginConfigMap.html":{},"interfaces/ToolSettingsMap.html":{}}}],["defined",{"_index":19,"title":{},"body":{"interfaces/Block.html":{},"interfaces/BlockData.html":{},"interfaces/ChangeMap.html":{},"interfaces/EditorMap.html":{},"classes/FixedHeader.html":{},"classes/MockEditorJS.html":{},"injectables/MockNgZone.html":{},"classes/MockPlugin.html":{},"directives/NgxEditorJSDirective.html":{},"modules/NgxEditorJSModule.html":{},"injectables/NgxEditorJSPluginService.html":{},"injectables/NgxEditorJSService.html":{},"components/NgxTinynodesMatJsonOutputComponent.html":{},"components/NgxTinynodesMaterialFormFieldDemoComponent.html":{},"components/PageContainerComponent.html":{},"injectables/PagesQuery.html":{},"injectables/PagesService.html":{},"injectables/PagesStore.html":{},"interfaces/PluginConfig.html":{},"interfaces/PluginConfigMap.html":{},"interfaces/ReadyMap.html":{},"interfaces/SavedMap.html":{},"interfaces/ToolSettingsMap.html":{},"contributing.html":{},"miscellaneous/variables.html":{}}}],["delayed",{"_index":1438,"title":{},"body":{"changelog.html":{}}}],["delete",{"_index":1001,"title":{},"body":{"injectables/NgxEditorJSService.html":{},"injectables/PagesService.html":{}}}],["delete(pageid",{"_index":1306,"title":{},"body":{"injectables/PagesService.html":{}}}],["demo",{"_index":510,"title":{},"body":{"components/NgxEditorJSDemoHomeComponent.html":{},"components/NgxTinynodesMatJsonOutputComponent.html":{},"components/NgxTinynodesMaterialFormFieldDemoComponent.html":{},"components/PageContainerComponent.html":{},"modules/PageStoreModule.html":{},"changelog.html":{},"index.html":{},"todo.html":{},"miscellaneous/variables.html":{}}}],["demo'},{'name",{"_index":537,"title":{},"body":{"components/NgxEditorJSDemoHomeComponent.html":{},"components/NgxTinynodesMatJsonOutputComponent.html":{},"components/NgxTinynodesMaterialFormFieldDemoComponent.html":{},"components/PageContainerComponent.html":{}}}],["demo.material.module",{"_index":1024,"title":{},"body":{"modules/NgxEditorjsDemoModule.html":{},"modules/NgxTinynodesMaterialFormFieldDemo.html":{}}}],["demo.material.module.ts",{"_index":552,"title":{},"body":{"modules/NgxEditorJSDemoMaterialModule.html":{}}}],["demo.module.ts",{"_index":1011,"title":{},"body":{"modules/NgxEditorjsDemoModule.html":{}}}],["demo.routes",{"_index":1020,"title":{},"body":{"modules/NgxEditorjsDemoModule.html":{}}}],["demo.routes.ts",{"_index":1805,"title":{},"body":{"miscellaneous/variables.html":{}}}],["demo/angular",{"_index":1816,"title":{},"body":{"miscellaneous/variables.html":{}}}],["demo/src/lib/containers/home",{"_index":506,"title":{},"body":{"components/NgxEditorJSDemoHomeComponent.html":{}}}],["demo/src/lib/containers/page",{"_index":1238,"title":{},"body":{"components/PageContainerComponent.html":{}}}],["demo/src/lib/demos/material",{"_index":1114,"title":{},"body":{"modules/NgxTinynodesMaterialFormFieldDemo.html":{},"components/NgxTinynodesMaterialFormFieldDemoComponent.html":{}}}],["demo/src/lib/ngx",{"_index":551,"title":{},"body":{"modules/NgxEditorJSDemoMaterialModule.html":{},"modules/NgxEditorjsDemoModule.html":{},"miscellaneous/variables.html":{}}}],["demo/src/lib/store/pages/pages.models.ts",{"_index":1234,"title":{},"body":{"interfaces/Page.html":{},"interfaces/PageBlock.html":{},"interfaces/Tag.html":{}}}],["demo/src/lib/store/pages/pages.module.ts",{"_index":1277,"title":{},"body":{"modules/PageStoreModule.html":{}}}],["demo/src/lib/store/pages/pages.query.ts",{"_index":1285,"title":{},"body":{"injectables/PagesQuery.html":{}}}],["demo/src/lib/store/pages/pages.query.ts:7",{"_index":1288,"title":{},"body":{"injectables/PagesQuery.html":{}}}],["demo/src/lib/store/pages/pages.service.ts",{"_index":1293,"title":{},"body":{"injectables/PagesService.html":{}}}],["demo/src/lib/store/pages/pages.service.ts:15",{"_index":1300,"title":{},"body":{"injectables/PagesService.html":{}}}],["demo/src/lib/store/pages/pages.service.ts:17",{"_index":1316,"title":{},"body":{"injectables/PagesService.html":{}}}],["demo/src/lib/store/pages/pages.service.ts:24",{"_index":1317,"title":{},"body":{"injectables/PagesService.html":{}}}],["demo/src/lib/store/pages/pages.service.ts:32",{"_index":1302,"title":{},"body":{"injectables/PagesService.html":{}}}],["demo/src/lib/store/pages/pages.service.ts:47",{"_index":1315,"title":{},"body":{"injectables/PagesService.html":{}}}],["demo/src/lib/store/pages/pages.service.ts:56",{"_index":1307,"title":{},"body":{"injectables/PagesService.html":{}}}],["demo/src/lib/store/pages/pages.service.ts:60",{"_index":1313,"title":{},"body":{"injectables/PagesService.html":{}}}],["demo/src/lib/store/pages/pages.service.ts:64",{"_index":1304,"title":{},"body":{"injectables/PagesService.html":{}}}],["demo/src/lib/store/pages/pages.service.ts:70",{"_index":1311,"title":{},"body":{"injectables/PagesService.html":{}}}],["demo/src/lib/store/pages/pages.store.ts",{"_index":1334,"title":{},"body":{"interfaces/PagesState.html":{},"injectables/PagesStore.html":{}}}],["demo/src/lib/store/pages/pages.store.ts:9",{"_index":1338,"title":{},"body":{"injectables/PagesStore.html":{}}}],["demos",{"_index":516,"title":{},"body":{"components/NgxEditorJSDemoHomeComponent.html":{},"modules/NgxEditorJSModule.html":{},"index.html":{}}}],["dependencies",{"_index":734,"title":{"dependencies.html":{}},"body":{"modules/NgxEditorJSModule.html":{},"modules/NgxEditorJSPluginServiceModule.html":{},"modules/NgxEditorjsDemoModule.html":{},"modules/NgxEditorjsPluginsModule.html":{},"modules/NgxTinynodesComponentsModule.html":{},"modules/NgxTinynodesMatJsonOutputModule.html":{},"modules/NgxTinynodesMatTagInputModule.html":{},"modules/NgxTinynodesMaterialFormFieldDemo.html":{},"modules/PageStoreModule.html":{},"contributing.html":{},"dependencies.html":{},"index.html":{},"overview.html":{}}}],["dependency",{"_index":1397,"title":{},"body":{"changelog.html":{},"todo.html":{}}}],["deps",{"_index":768,"title":{},"body":{"modules/NgxEditorJSModule.html":{},"modules/NgxEditorJSPluginServiceModule.html":{}}}],["describedby",{"_index":333,"title":{},"body":{"interfaces/EditorJSMaterialForm.html":{}}}],["description",{"_index":9,"title":{},"body":{"interfaces/Block.html":{},"interfaces/BlockData.html":{},"interfaces/ChangeMap.html":{},"interfaces/CreateEditorJSOptions.html":{},"interfaces/EditorJSChange.html":{},"interfaces/EditorJSClass.html":{},"interfaces/EditorJSInstanceConfig.html":{},"interfaces/EditorJSMaterialForm.html":{},"interfaces/EditorMap.html":{},"classes/FixedHeader.html":{},"interfaces/Header.html":{},"interfaces/HeaderBlock.html":{},"interfaces/Image.html":{},"interfaces/ImageBlock.html":{},"interfaces/InjectorApiCallOptions.html":{},"interfaces/InjectorApiCallResponse.html":{},"interfaces/InjectorMethodOption.html":{},"interfaces/List.html":{},"interfaces/ListBlock.html":{},"injectables/MockNgZone.html":{},"interfaces/NgxEditorJSConfig.html":{},"directives/NgxEditorJSDirective.html":{},"modules/NgxEditorJSModule.html":{},"interfaces/NgxEditorJSModuleConfig.html":{},"injectables/NgxEditorJSPluginService.html":{},"injectables/NgxEditorJSService.html":{},"modules/NgxEditorjsPluginsModule.html":{},"components/NgxTinynodesMaterialFormFieldDemoComponent.html":{},"components/PageContainerComponent.html":{},"modules/PageStoreModule.html":{},"injectables/PagesService.html":{},"interfaces/Paragraph.html":{},"interfaces/ParagraphBlock.html":{},"modules/PluginCodeModule.html":{},"interfaces/PluginConfig.html":{},"interfaces/PluginConfigMap.html":{},"modules/PluginEmbedModule.html":{},"modules/PluginHeaderModule.html":{},"modules/PluginImageModule.html":{},"modules/PluginInlineCodeModule.html":{},"modules/PluginLinkModule.html":{},"modules/PluginListModule.html":{},"modules/PluginMarkerModule.html":{},"modules/PluginParagraphModule.html":{},"modules/PluginQuoteModule.html":{},"modules/PluginSimpleImageModule.html":{},"modules/PluginWarningModule.html":{},"interfaces/ReadyMap.html":{},"interfaces/SavedMap.html":{},"interfaces/ToolSettingsMap.html":{},"miscellaneous/functions.html":{}}}],["destroy",{"_index":418,"title":{},"body":{"classes/MockEditorJS.html":{},"classes/MockPlugin.html":{},"directives/NgxEditorJSDirective.html":{},"injectables/NgxEditorJSService.html":{}}}],["destroyed",{"_index":676,"title":{},"body":{"directives/NgxEditorJSDirective.html":{},"injectables/NgxEditorJSService.html":{}}}],["destroyinstance",{"_index":846,"title":{},"body":{"injectables/NgxEditorJSService.html":{}}}],["destroyinstance(options",{"_index":871,"title":{},"body":{"injectables/NgxEditorJSService.html":{}}}],["destroys",{"_index":873,"title":{},"body":{"injectables/NgxEditorJSService.html":{}}}],["destructive",{"_index":655,"title":{},"body":{"directives/NgxEditorJSDirective.html":{}}}],["details",{"_index":413,"title":{},"body":{"classes/FixedHeader.html":{},"modules/PluginCodeModule.html":{},"modules/PluginEmbedModule.html":{},"modules/PluginHeaderModule.html":{},"modules/PluginImageModule.html":{},"modules/PluginInlineCodeModule.html":{},"modules/PluginLinkModule.html":{},"modules/PluginListModule.html":{},"modules/PluginMarkerModule.html":{},"modules/PluginParagraphModule.html":{},"modules/PluginQuoteModule.html":{},"modules/PluginSimpleImageModule.html":{},"modules/PluginWarningModule.html":{},"contributing.html":{}}}],["detection",{"_index":350,"title":{},"body":{"interfaces/EditorJSMaterialForm.html":{},"injectables/NgxEditorJSService.html":{},"components/NgxTinynodesMaterialFormFieldDemoComponent.html":{},"components/PageContainerComponent.html":{}}}],["determined",{"_index":1642,"title":{},"body":{"contributing.html":{}}}],["developers",{"_index":1491,"title":{},"body":{"contributing.html":{}}}],["development",{"_index":1279,"title":{},"body":{"modules/PageStoreModule.html":{},"index.html":{}}}],["devlog",{"_index":1435,"title":{},"body":{"changelog.html":{}}}],["diary",{"_index":1695,"title":{},"body":{"index.html":{}}}],["differing",{"_index":1530,"title":{},"body":{"contributing.html":{}}}],["direction",{"_index":1230,"title":{},"body":{"components/NgxTinynodesMaterialFormFieldDemoComponent.html":{}}}],["directive",{"_index":529,"title":{"directives/NgxEditorJSDirective.html":{}},"body":{"components/NgxEditorJSDemoHomeComponent.html":{},"directives/NgxEditorJSDirective.html":{},"components/NgxTinynodesMatJsonOutputComponent.html":{},"components/NgxTinynodesMaterialFormFieldDemoComponent.html":{},"components/PageContainerComponent.html":{},"index.html":{},"overview.html":{},"todo.html":{}}}],["directives",{"_index":546,"title":{},"body":{"components/NgxEditorJSDemoHomeComponent.html":{},"directives/NgxEditorJSDirective.html":{},"components/NgxTinynodesMatJsonOutputComponent.html":{},"components/NgxTinynodesMaterialFormFieldDemoComponent.html":{},"components/PageContainerComponent.html":{}}}],["directives/ngx",{"_index":245,"title":{},"body":{"interfaces/EditorJSMaterialForm.html":{},"modules/NgxEditorJSModule.html":{}}}],["disability",{"_index":1510,"title":{},"body":{"contributing.html":{}}}],["disable",{"_index":611,"title":{},"body":{"directives/NgxEditorJSDirective.html":{},"injectables/NgxEditorJSService.html":{},"components/NgxTinynodesMaterialFormFieldDemoComponent.html":{}}}],["disableautosave",{"_index":1125,"title":{},"body":{"components/NgxTinynodesMaterialFormFieldDemoComponent.html":{}}}],["disabled",{"_index":305,"title":{},"body":{"interfaces/EditorJSMaterialForm.html":{}}}],["disabled(disabled",{"_index":309,"title":{},"body":{"interfaces/EditorJSMaterialForm.html":{}}}],["discuss",{"_index":1461,"title":{},"body":{"contributing.html":{}}}],["display",{"_index":614,"title":{},"body":{"directives/NgxEditorJSDirective.html":{},"components/NgxTinynodesMaterialFormFieldDemoComponent.html":{}}}],["displaying",{"_index":103,"title":{},"body":{"interfaces/BlockData.html":{},"interfaces/PluginConfig.html":{},"interfaces/PluginConfigMap.html":{},"interfaces/ToolSettingsMap.html":{}}}],["distinctuntilchanged",{"_index":892,"title":{},"body":{"injectables/NgxEditorJSService.html":{},"components/NgxTinynodesMaterialFormFieldDemoComponent.html":{}}}],["distinctuntilchanged((a",{"_index":970,"title":{},"body":{"injectables/NgxEditorJSService.html":{}}}],["distribute",{"_index":1738,"title":{},"body":{"license.html":{}}}],["doc",{"_index":1787,"title":{},"body":{"todo.html":{}}}],["docheck",{"_index":229,"title":{},"body":{"interfaces/EditorJSMaterialForm.html":{},"interfaces/NgxTinynodesMatFieldComponent.html":{}}}],["docs",{"_index":519,"title":{},"body":{"components/NgxEditorJSDemoHomeComponent.html":{},"changelog.html":{},"index.html":{}}}],["document.createelement('div",{"_index":431,"title":{},"body":{"classes/MockEditorJS.html":{},"classes/MockPlugin.html":{}}}],["documentation",{"_index":1427,"title":{},"body":{"changelog.html":{},"index.html":{},"license.html":{}}}],["doing",{"_index":889,"title":{},"body":{"injectables/NgxEditorJSService.html":{},"contributing.html":{}}}],["dom",{"_index":504,"title":{},"body":{"components/NgxEditorJSDemoHomeComponent.html":{},"directives/NgxEditorJSDirective.html":{},"injectables/NgxEditorJSService.html":{},"components/NgxTinynodesMatJsonOutputComponent.html":{},"components/NgxTinynodesMaterialFormFieldDemoComponent.html":{},"components/PageContainerComponent.html":{},"index.html":{}}}],["don't",{"_index":205,"title":{},"body":{"interfaces/EditorJSClass.html":{},"interfaces/EditorJSInstanceConfig.html":{},"interfaces/InjectorApiCallOptions.html":{},"interfaces/InjectorApiCallResponse.html":{},"interfaces/InjectorMethodOption.html":{}}}],["due",{"_index":1410,"title":{},"body":{"changelog.html":{}}}],["dynamic",{"_index":1661,"title":{},"body":{"dependencies.html":{}}}],["e",{"_index":1599,"title":{},"body":{"contributing.html":{}}}],["e.g",{"_index":1791,"title":{},"body":{"todo.html":{}}}],["each",{"_index":190,"title":{},"body":{"interfaces/EditorJSClass.html":{},"interfaces/EditorJSInstanceConfig.html":{},"interfaces/EditorJSMaterialForm.html":{},"interfaces/InjectorApiCallOptions.html":{},"interfaces/InjectorApiCallResponse.html":{},"interfaces/InjectorMethodOption.html":{},"components/NgxEditorJSDemoHomeComponent.html":{},"modules/NgxEditorjsPluginsModule.html":{},"miscellaneous/variables.html":{}}}],["easily",{"_index":1044,"title":{},"body":{"modules/NgxEditorjsPluginsModule.html":{},"index.html":{}}}],["edit",{"_index":1577,"title":{},"body":{"contributing.html":{}}}],["editior_js_instance",{"_index":500,"title":{},"body":{"interfaces/NgxEditorJSConfig.html":{},"interfaces/NgxEditorJSModuleConfig.html":{},"miscellaneous/variables.html":{}}}],["editor",{"_index":118,"title":{},"body":{"interfaces/BlockData.html":{},"interfaces/EditorJSClass.html":{},"interfaces/EditorJSInstanceConfig.html":{},"interfaces/EditorJSMaterialForm.html":{},"interfaces/InjectorApiCallOptions.html":{},"interfaces/InjectorApiCallResponse.html":{},"interfaces/InjectorMethodOption.html":{},"components/NgxEditorJSDemoHomeComponent.html":{},"directives/NgxEditorJSDirective.html":{},"injectables/NgxEditorJSPluginService.html":{},"injectables/NgxEditorJSService.html":{},"components/NgxTinynodesMaterialFormFieldDemoComponent.html":{},"components/PageContainerComponent.html":{},"interfaces/PluginConfig.html":{},"interfaces/PluginConfigMap.html":{},"interfaces/ToolSettingsMap.html":{},"todo.html":{},"miscellaneous/variables.html":{}}}],["editor's",{"_index":485,"title":{},"body":{"interfaces/NgxEditorJSConfig.html":{},"interfaces/NgxEditorJSModuleConfig.html":{}}}],["editor.destroy",{"_index":981,"title":{},"body":{"injectables/NgxEditorJSService.html":{}}}],["editor.isready",{"_index":924,"title":{},"body":{"injectables/NgxEditorJSService.html":{}}}],["editor[options.method",{"_index":939,"title":{},"body":{"injectables/NgxEditorJSService.html":{}}}],["editor[options.namespace][options.method",{"_index":940,"title":{},"body":{"injectables/NgxEditorJSService.html":{}}}],["editor_js_tool_injector",{"_index":126,"title":{},"body":{"interfaces/BlockData.html":{},"classes/FixedHeader.html":{},"modules/NgxEditorJSPluginServiceModule.html":{},"modules/PluginCodeModule.html":{},"interfaces/PluginConfig.html":{},"interfaces/PluginConfigMap.html":{},"modules/PluginEmbedModule.html":{},"modules/PluginHeaderModule.html":{},"modules/PluginImageModule.html":{},"modules/PluginInlineCodeModule.html":{},"modules/PluginLinkModule.html":{},"modules/PluginListModule.html":{},"modules/PluginMarkerModule.html":{},"modules/PluginParagraphModule.html":{},"modules/PluginQuoteModule.html":{},"modules/PluginSimpleImageModule.html":{},"modules/PluginWarningModule.html":{},"interfaces/ToolSettingsMap.html":{},"miscellaneous/variables.html":{}}}],["editorconfig",{"_index":165,"title":{},"body":{"interfaces/CreateEditorJSOptions.html":{},"interfaces/EditorJSClass.html":{},"interfaces/EditorJSInstanceConfig.html":{},"interfaces/InjectorApiCallOptions.html":{},"interfaces/InjectorApiCallResponse.html":{},"interfaces/InjectorMethodOption.html":{},"interfaces/NgxEditorJSConfig.html":{},"directives/NgxEditorJSDirective.html":{},"interfaces/NgxEditorJSModuleConfig.html":{},"injectables/NgxEditorJSService.html":{},"miscellaneous/functions.html":{}}}],["editorconfig.holder",{"_index":918,"title":{},"body":{"injectables/NgxEditorJSService.html":{}}}],["editorconfig.onchange",{"_index":915,"title":{},"body":{"injectables/NgxEditorJSService.html":{}}}],["editorconfig.onready",{"_index":920,"title":{},"body":{"injectables/NgxEditorJSService.html":{}}}],["editorform",{"_index":1124,"title":{},"body":{"components/NgxTinynodesMaterialFormFieldDemoComponent.html":{}}}],["editorform.value.pagename",{"_index":1195,"title":{},"body":{"components/NgxTinynodesMaterialFormFieldDemoComponent.html":{}}}],["editorinstance",{"_index":320,"title":{},"body":{"interfaces/EditorJSMaterialForm.html":{}}}],["editorjs",{"_index":12,"title":{},"body":{"interfaces/Block.html":{},"interfaces/BlockData.html":{},"interfaces/ChangeMap.html":{},"interfaces/CreateEditorJSOptions.html":{},"interfaces/EditorJSChange.html":{},"interfaces/EditorJSClass.html":{},"interfaces/EditorJSInstanceConfig.html":{},"interfaces/EditorJSMaterialForm.html":{},"interfaces/EditorMap.html":{},"classes/FixedHeader.html":{},"interfaces/Header.html":{},"interfaces/HeaderBlock.html":{},"interfaces/Image.html":{},"interfaces/ImageBlock.html":{},"interfaces/InjectorApiCallOptions.html":{},"interfaces/InjectorApiCallResponse.html":{},"interfaces/InjectorMethodOption.html":{},"interfaces/List.html":{},"interfaces/ListBlock.html":{},"interfaces/NgxEditorJSConfig.html":{},"components/NgxEditorJSDemoHomeComponent.html":{},"modules/NgxEditorJSDemoMaterialModule.html":{},"directives/NgxEditorJSDirective.html":{},"modules/NgxEditorJSModule.html":{},"interfaces/NgxEditorJSModuleConfig.html":{},"injectables/NgxEditorJSPluginService.html":{},"modules/NgxEditorJSPluginServiceModule.html":{},"injectables/NgxEditorJSService.html":{},"modules/NgxEditorjsDemoModule.html":{},"modules/NgxEditorjsPluginsModule.html":{},"components/NgxTinynodesMatJsonOutputComponent.html":{},"modules/NgxTinynodesMaterialFormFieldDemo.html":{},"components/NgxTinynodesMaterialFormFieldDemoComponent.html":{},"interfaces/Page.html":{},"interfaces/PageBlock.html":{},"components/PageContainerComponent.html":{},"modules/PageStoreModule.html":{},"injectables/PagesQuery.html":{},"injectables/PagesService.html":{},"interfaces/PagesState.html":{},"injectables/PagesStore.html":{},"interfaces/Paragraph.html":{},"interfaces/ParagraphBlock.html":{},"modules/PluginCodeModule.html":{},"interfaces/PluginConfig.html":{},"interfaces/PluginConfigMap.html":{},"modules/PluginEmbedModule.html":{},"modules/PluginHeaderModule.html":{},"modules/PluginImageModule.html":{},"modules/PluginInlineCodeModule.html":{},"modules/PluginLinkModule.html":{},"modules/PluginListModule.html":{},"modules/PluginMarkerModule.html":{},"modules/PluginParagraphModule.html":{},"modules/PluginQuoteModule.html":{},"modules/PluginSimpleImageModule.html":{},"modules/PluginWarningModule.html":{},"interfaces/ReadyMap.html":{},"interfaces/SavedMap.html":{},"interfaces/Tag.html":{},"interfaces/ToolSettingsMap.html":{},"changelog.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"index.html":{},"todo.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["editorjs'},{'name",{"_index":532,"title":{},"body":{"components/NgxEditorJSDemoHomeComponent.html":{},"components/NgxTinynodesMatJsonOutputComponent.html":{},"components/NgxTinynodesMaterialFormFieldDemoComponent.html":{},"components/PageContainerComponent.html":{}}}],["editorjs.directive",{"_index":246,"title":{},"body":{"interfaces/EditorJSMaterialForm.html":{},"modules/NgxEditorJSModule.html":{}}}],["editorjs.directive.ts",{"_index":575,"title":{},"body":{"directives/NgxEditorJSDirective.html":{}}}],["editorjs.directive.ts:106",{"_index":602,"title":{},"body":{"directives/NgxEditorJSDirective.html":{}}}],["editorjs.directive.ts:112",{"_index":617,"title":{},"body":{"directives/NgxEditorJSDirective.html":{}}}],["editorjs.directive.ts:118",{"_index":634,"title":{},"body":{"directives/NgxEditorJSDirective.html":{}}}],["editorjs.directive.ts:124",{"_index":638,"title":{},"body":{"directives/NgxEditorJSDirective.html":{}}}],["editorjs.directive.ts:130",{"_index":636,"title":{},"body":{"directives/NgxEditorJSDirective.html":{}}}],["editorjs.directive.ts:136",{"_index":631,"title":{},"body":{"directives/NgxEditorJSDirective.html":{}}}],["editorjs.directive.ts:142",{"_index":637,"title":{},"body":{"directives/NgxEditorJSDirective.html":{}}}],["editorjs.directive.ts:148",{"_index":639,"title":{},"body":{"directives/NgxEditorJSDirective.html":{}}}],["editorjs.directive.ts:152",{"_index":597,"title":{},"body":{"directives/NgxEditorJSDirective.html":{}}}],["editorjs.directive.ts:168",{"_index":664,"title":{},"body":{"directives/NgxEditorJSDirective.html":{}}}],["editorjs.directive.ts:175",{"_index":667,"title":{},"body":{"directives/NgxEditorJSDirective.html":{}}}],["editorjs.directive.ts:182",{"_index":669,"title":{},"body":{"directives/NgxEditorJSDirective.html":{}}}],["editorjs.directive.ts:189",{"_index":671,"title":{},"body":{"directives/NgxEditorJSDirective.html":{}}}],["editorjs.directive.ts:198",{"_index":641,"title":{},"body":{"directives/NgxEditorJSDirective.html":{}}}],["editorjs.directive.ts:215",{"_index":649,"title":{},"body":{"directives/NgxEditorJSDirective.html":{}}}],["editorjs.directive.ts:251",{"_index":643,"title":{},"body":{"directives/NgxEditorJSDirective.html":{}}}],["editorjs.directive.ts:284",{"_index":661,"title":{},"body":{"directives/NgxEditorJSDirective.html":{}}}],["editorjs.directive.ts:53",{"_index":600,"title":{},"body":{"directives/NgxEditorJSDirective.html":{}}}],["editorjs.directive.ts:59",{"_index":621,"title":{},"body":{"directives/NgxEditorJSDirective.html":{}}}],["editorjs.directive.ts:65",{"_index":623,"title":{},"body":{"directives/NgxEditorJSDirective.html":{}}}],["editorjs.directive.ts:72",{"_index":624,"title":{},"body":{"directives/NgxEditorJSDirective.html":{}}}],["editorjs.directive.ts:78",{"_index":628,"title":{},"body":{"directives/NgxEditorJSDirective.html":{}}}],["editorjs.directive.ts:84",{"_index":613,"title":{},"body":{"directives/NgxEditorJSDirective.html":{}}}],["editorjs.directive.ts:90",{"_index":630,"title":{},"body":{"directives/NgxEditorJSDirective.html":{}}}],["editorjs.directive.ts:97",{"_index":618,"title":{},"body":{"directives/NgxEditorJSDirective.html":{}}}],["editorjs.module.ts",{"_index":745,"title":{},"body":{"modules/NgxEditorJSModule.html":{},"miscellaneous/functions.html":{}}}],["editorjs.module.ts:68",{"_index":751,"title":{},"body":{"modules/NgxEditorJSModule.html":{}}}],["editorjs.version",{"_index":195,"title":{},"body":{"interfaces/EditorJSClass.html":{},"interfaces/EditorJSInstanceConfig.html":{},"interfaces/InjectorApiCallOptions.html":{},"interfaces/InjectorApiCallResponse.html":{},"interfaces/InjectorMethodOption.html":{},"directives/NgxEditorJSDirective.html":{},"miscellaneous/variables.html":{}}}],["editorjs/code",{"_index":1341,"title":{},"body":{"modules/PluginCodeModule.html":{}}}],["editorjs/editorjs",{"_index":76,"title":{},"body":{"interfaces/BlockData.html":{},"interfaces/ChangeMap.html":{},"interfaces/CreateEditorJSOptions.html":{},"interfaces/EditorJSChange.html":{},"interfaces/EditorJSClass.html":{},"interfaces/EditorJSInstanceConfig.html":{},"interfaces/EditorMap.html":{},"interfaces/InjectorApiCallOptions.html":{},"interfaces/InjectorApiCallResponse.html":{},"interfaces/InjectorMethodOption.html":{},"interfaces/NgxEditorJSConfig.html":{},"directives/NgxEditorJSDirective.html":{},"modules/NgxEditorJSModule.html":{},"interfaces/NgxEditorJSModuleConfig.html":{},"injectables/NgxEditorJSService.html":{},"components/NgxTinynodesMaterialFormFieldDemoComponent.html":{},"components/PageContainerComponent.html":{},"interfaces/PluginConfig.html":{},"interfaces/PluginConfigMap.html":{},"interfaces/ReadyMap.html":{},"interfaces/SavedMap.html":{},"interfaces/ToolSettingsMap.html":{}}}],["editorjs/editorjs.component",{"_index":250,"title":{},"body":{"interfaces/EditorJSMaterialForm.html":{}}}],["editorjs/embed",{"_index":1346,"title":{},"body":{"modules/PluginEmbedModule.html":{}}}],["editorjs/header",{"_index":397,"title":{},"body":{"classes/FixedHeader.html":{},"modules/PluginHeaderModule.html":{}}}],["editorjs/image",{"_index":1349,"title":{},"body":{"modules/PluginImageModule.html":{}}}],["editorjs/inline",{"_index":1354,"title":{},"body":{"modules/PluginInlineCodeModule.html":{}}}],["editorjs/link",{"_index":1357,"title":{},"body":{"modules/PluginLinkModule.html":{}}}],["editorjs/list",{"_index":1359,"title":{},"body":{"modules/PluginListModule.html":{}}}],["editorjs/ngx",{"_index":7,"title":{},"body":{"interfaces/Block.html":{},"interfaces/BlockData.html":{},"interfaces/ChangeMap.html":{},"interfaces/CreateEditorJSOptions.html":{},"interfaces/EditorJSChange.html":{},"interfaces/EditorJSClass.html":{},"interfaces/EditorJSInstanceConfig.html":{},"interfaces/EditorJSMaterialForm.html":{},"interfaces/EditorMap.html":{},"classes/FixedHeader.html":{},"interfaces/Header.html":{},"interfaces/HeaderBlock.html":{},"interfaces/Image.html":{},"interfaces/ImageBlock.html":{},"interfaces/InjectorApiCallOptions.html":{},"interfaces/InjectorApiCallResponse.html":{},"interfaces/InjectorMethodOption.html":{},"interfaces/List.html":{},"interfaces/ListBlock.html":{},"classes/MockEditorJS.html":{},"injectables/MockNgZone.html":{},"classes/MockPlugin.html":{},"interfaces/NgxEditorJSConfig.html":{},"components/NgxEditorJSDemoHomeComponent.html":{},"modules/NgxEditorJSDemoMaterialModule.html":{},"directives/NgxEditorJSDirective.html":{},"modules/NgxEditorJSModule.html":{},"interfaces/NgxEditorJSModuleConfig.html":{},"injectables/NgxEditorJSPluginService.html":{},"modules/NgxEditorJSPluginServiceModule.html":{},"injectables/NgxEditorJSService.html":{},"modules/NgxEditorjsDemoModule.html":{},"modules/NgxEditorjsPluginsModule.html":{},"modules/NgxTinynodesMaterialFormFieldDemo.html":{},"components/NgxTinynodesMaterialFormFieldDemoComponent.html":{},"interfaces/Page.html":{},"interfaces/PageBlock.html":{},"components/PageContainerComponent.html":{},"modules/PageStoreModule.html":{},"injectables/PagesQuery.html":{},"injectables/PagesService.html":{},"interfaces/PagesState.html":{},"injectables/PagesStore.html":{},"interfaces/Paragraph.html":{},"interfaces/ParagraphBlock.html":{},"modules/PluginCodeModule.html":{},"interfaces/PluginConfig.html":{},"interfaces/PluginConfigMap.html":{},"modules/PluginEmbedModule.html":{},"modules/PluginHeaderModule.html":{},"modules/PluginImageModule.html":{},"modules/PluginInlineCodeModule.html":{},"modules/PluginLinkModule.html":{},"modules/PluginListModule.html":{},"modules/PluginMarkerModule.html":{},"modules/PluginParagraphModule.html":{},"modules/PluginQuoteModule.html":{},"modules/PluginSimpleImageModule.html":{},"modules/PluginWarningModule.html":{},"interfaces/ReadyMap.html":{},"interfaces/SavedMap.html":{},"interfaces/Tag.html":{},"interfaces/ToolSettingsMap.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["editorjs/paragraph",{"_index":1362,"title":{},"body":{"modules/PluginMarkerModule.html":{},"modules/PluginParagraphModule.html":{}}}],["editorjs/quote",{"_index":1367,"title":{},"body":{"modules/PluginQuoteModule.html":{}}}],["editorjs/simple",{"_index":1370,"title":{},"body":{"modules/PluginSimpleImageModule.html":{}}}],["editorjs/src/lib/config/editor",{"_index":1685,"title":{},"body":{"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["editorjs/src/lib/config/module",{"_index":1689,"title":{},"body":{"miscellaneous/functions.html":{}}}],["editorjs/src/lib/containers/editorjs",{"_index":215,"title":{},"body":{"interfaces/EditorJSMaterialForm.html":{},"miscellaneous/variables.html":{}}}],["editorjs/src/lib/containers/editorjs/editorjs.component.ts",{"_index":1812,"title":{},"body":{"miscellaneous/variables.html":{}}}],["editorjs/src/lib/directives/ngx",{"_index":574,"title":{},"body":{"directives/NgxEditorJSDirective.html":{}}}],["editorjs/src/lib/ngx",{"_index":744,"title":{},"body":{"modules/NgxEditorJSModule.html":{},"miscellaneous/functions.html":{}}}],["editorjs/src/lib/services/editorjs.service.ts",{"_index":831,"title":{},"body":{"injectables/NgxEditorJSService.html":{}}}],["editorjs/src/lib/services/editorjs.service.ts:138",{"_index":852,"title":{},"body":{"injectables/NgxEditorJSService.html":{}}}],["editorjs/src/lib/services/editorjs.service.ts:177",{"_index":883,"title":{},"body":{"injectables/NgxEditorJSService.html":{}}}],["editorjs/src/lib/services/editorjs.service.ts:191",{"_index":862,"title":{},"body":{"injectables/NgxEditorJSService.html":{}}}],["editorjs/src/lib/services/editorjs.service.ts:204",{"_index":886,"title":{},"body":{"injectables/NgxEditorJSService.html":{}}}],["editorjs/src/lib/services/editorjs.service.ts:220",{"_index":875,"title":{},"body":{"injectables/NgxEditorJSService.html":{}}}],["editorjs/src/lib/services/editorjs.service.ts:231",{"_index":879,"title":{},"body":{"injectables/NgxEditorJSService.html":{}}}],["editorjs/src/lib/services/editorjs.service.ts:242",{"_index":881,"title":{},"body":{"injectables/NgxEditorJSService.html":{}}}],["editorjs/src/lib/services/editorjs.service.ts:260",{"_index":877,"title":{},"body":{"injectables/NgxEditorJSService.html":{}}}],["editorjs/src/lib/services/editorjs.service.ts:271",{"_index":872,"title":{},"body":{"injectables/NgxEditorJSService.html":{}}}],["editorjs/src/lib/services/editorjs.service.ts:288",{"_index":869,"title":{},"body":{"injectables/NgxEditorJSService.html":{}}}],["editorjs/src/lib/services/editorjs.service.ts:61",{"_index":849,"title":{},"body":{"injectables/NgxEditorJSService.html":{}}}],["editorjs/src/lib/services/editorjs.service.ts:87",{"_index":867,"title":{},"body":{"injectables/NgxEditorJSService.html":{}}}],["editorjs/src/lib/types/blocks.ts",{"_index":8,"title":{},"body":{"interfaces/Block.html":{},"interfaces/Header.html":{},"interfaces/HeaderBlock.html":{},"interfaces/Image.html":{},"interfaces/ImageBlock.html":{},"interfaces/List.html":{},"interfaces/ListBlock.html":{},"interfaces/Paragraph.html":{},"interfaces/ParagraphBlock.html":{},"miscellaneous/typealiases.html":{}}}],["editorjs/src/lib/types/blocks.ts:13",{"_index":20,"title":{},"body":{"interfaces/Block.html":{}}}],["editorjs/src/lib/types/config.ts",{"_index":469,"title":{},"body":{"interfaces/NgxEditorJSConfig.html":{},"interfaces/NgxEditorJSModuleConfig.html":{},"miscellaneous/variables.html":{}}}],["editorjs/src/lib/types/editorjs",{"_index":159,"title":{},"body":{"interfaces/CreateEditorJSOptions.html":{}}}],["editorjs/src/lib/types/injector.ts",{"_index":168,"title":{},"body":{"interfaces/EditorJSClass.html":{},"interfaces/EditorJSInstanceConfig.html":{},"interfaces/InjectorApiCallOptions.html":{},"interfaces/InjectorApiCallResponse.html":{},"interfaces/InjectorMethodOption.html":{},"miscellaneous/variables.html":{}}}],["editorjs/src/lib/types/maps.ts",{"_index":137,"title":{},"body":{"interfaces/ChangeMap.html":{},"interfaces/EditorJSChange.html":{},"interfaces/EditorMap.html":{},"interfaces/ReadyMap.html":{},"interfaces/SavedMap.html":{}}}],["editorjs/src/lib/types/maps.ts:18",{"_index":1374,"title":{},"body":{"interfaces/ReadyMap.html":{}}}],["editorjs/src/lib/types/maps.ts:28",{"_index":1375,"title":{},"body":{"interfaces/SavedMap.html":{}}}],["editorjs/src/lib/types/maps.ts:52",{"_index":143,"title":{},"body":{"interfaces/ChangeMap.html":{}}}],["editorjs/src/lib/types/maps.ts:8",{"_index":382,"title":{},"body":{"interfaces/EditorMap.html":{}}}],["editorjs/src/testing/ng",{"_index":446,"title":{},"body":{"injectables/MockNgZone.html":{}}}],["editorjs/src/testing/shared.ts",{"_index":417,"title":{},"body":{"classes/MockEditorJS.html":{},"classes/MockPlugin.html":{}}}],["editorjs/src/testing/shared.ts:11",{"_index":423,"title":{},"body":{"classes/MockEditorJS.html":{}}}],["editorjs/src/testing/shared.ts:12",{"_index":426,"title":{},"body":{"classes/MockEditorJS.html":{}}}],["editorjs/src/testing/shared.ts:13",{"_index":427,"title":{},"body":{"classes/MockEditorJS.html":{}}}],["editorjs/src/testing/shared.ts:14",{"_index":424,"title":{},"body":{"classes/MockEditorJS.html":{}}}],["editorjs/src/testing/shared.ts:16",{"_index":422,"title":{},"body":{"classes/MockEditorJS.html":{}}}],["editorjs/src/testing/shared.ts:3",{"_index":466,"title":{},"body":{"classes/MockPlugin.html":{}}}],["editorjs/src/testing/shared.ts:5",{"_index":467,"title":{},"body":{"classes/MockPlugin.html":{}}}],["editorjs/warning",{"_index":1373,"title":{},"body":{"modules/PluginWarningModule.html":{}}}],["editorjs@1.2.0",{"_index":1431,"title":{},"body":{"changelog.html":{}}}],["editorjs@1.3.2",{"_index":1420,"title":{},"body":{"changelog.html":{}}}],["editorjs@2.0.0",{"_index":1407,"title":{},"body":{"changelog.html":{}}}],["editorjs@3.0.0",{"_index":1389,"title":{},"body":{"changelog.html":{}}}],["editorjs](http://editorjs.io",{"_index":766,"title":{},"body":{"modules/NgxEditorJSModule.html":{}}}],["editorjs_form_value_accessor",{"_index":1801,"title":{},"body":{"miscellaneous/variables.html":{}}}],["editorjs_material_field_control",{"_index":252,"title":{},"body":{"interfaces/EditorJSMaterialForm.html":{},"miscellaneous/variables.html":{}}}],["editorjs_module_import",{"_index":198,"title":{},"body":{"interfaces/EditorJSClass.html":{},"interfaces/EditorJSInstanceConfig.html":{},"interfaces/InjectorApiCallOptions.html":{},"interfaces/InjectorApiCallResponse.html":{},"interfaces/InjectorMethodOption.html":{},"modules/NgxEditorJSModule.html":{},"miscellaneous/variables.html":{}}}],["editorjschange",{"_index":156,"title":{"interfaces/EditorJSChange.html":{}},"body":{"interfaces/ChangeMap.html":{},"interfaces/EditorJSChange.html":{},"interfaces/EditorMap.html":{},"interfaces/ReadyMap.html":{},"interfaces/SavedMap.html":{}}}],["editorjsclass",{"_index":167,"title":{"interfaces/EditorJSClass.html":{}},"body":{"interfaces/EditorJSClass.html":{},"interfaces/EditorJSInstanceConfig.html":{},"interfaces/InjectorApiCallOptions.html":{},"interfaces/InjectorApiCallResponse.html":{},"interfaces/InjectorMethodOption.html":{},"injectables/NgxEditorJSService.html":{}}}],["editorjsinstance",{"_index":201,"title":{},"body":{"interfaces/EditorJSClass.html":{},"interfaces/EditorJSInstanceConfig.html":{},"interfaces/InjectorApiCallOptions.html":{},"interfaces/InjectorApiCallResponse.html":{},"interfaces/InjectorMethodOption.html":{},"modules/NgxEditorJSModule.html":{},"injectables/NgxEditorJSService.html":{},"miscellaneous/variables.html":{}}}],["editorjsinstanceconfig",{"_index":181,"title":{"interfaces/EditorJSInstanceConfig.html":{}},"body":{"interfaces/EditorJSClass.html":{},"interfaces/EditorJSInstanceConfig.html":{},"interfaces/InjectorApiCallOptions.html":{},"interfaces/InjectorApiCallResponse.html":{},"interfaces/InjectorMethodOption.html":{}}}],["editorjsmaterialform",{"_index":214,"title":{"interfaces/EditorJSMaterialForm.html":{}},"body":{"interfaces/EditorJSMaterialForm.html":{}}}],["editorjsplugin",{"_index":91,"title":{},"body":{"interfaces/BlockData.html":{},"interfaces/PluginConfig.html":{},"interfaces/PluginConfigMap.html":{},"interfaces/ToolSettingsMap.html":{},"miscellaneous/typealiases.html":{}}}],["editormap",{"_index":148,"title":{"interfaces/EditorMap.html":{}},"body":{"interfaces/ChangeMap.html":{},"interfaces/EditorJSChange.html":{},"interfaces/EditorMap.html":{},"injectables/NgxEditorJSService.html":{},"interfaces/ReadyMap.html":{},"interfaces/SavedMap.html":{}}}],["editorservice",{"_index":346,"title":{},"body":{"interfaces/EditorJSMaterialForm.html":{},"directives/NgxEditorJSDirective.html":{},"components/NgxTinynodesMaterialFormFieldDemoComponent.html":{},"components/PageContainerComponent.html":{}}}],["edits",{"_index":1581,"title":{},"body":{"contributing.html":{}}}],["el",{"_index":598,"title":{},"body":{"directives/NgxEditorJSDirective.html":{}}}],["electronic",{"_index":1558,"title":{},"body":{"contributing.html":{}}}],["element",{"_index":349,"title":{},"body":{"interfaces/EditorJSMaterialForm.html":{},"interfaces/NgxEditorJSConfig.html":{},"components/NgxEditorJSDemoHomeComponent.html":{},"directives/NgxEditorJSDirective.html":{},"interfaces/NgxEditorJSModuleConfig.html":{},"components/NgxTinynodesMatJsonOutputComponent.html":{},"components/NgxTinynodesMaterialFormFieldDemoComponent.html":{},"components/PageContainerComponent.html":{},"index.html":{}}}],["elementref",{"_index":595,"title":{},"body":{"directives/NgxEditorJSDirective.html":{}}}],["email",{"_index":1464,"title":{},"body":{"contributing.html":{}}}],["embed",{"_index":1345,"title":{},"body":{"modules/PluginEmbedModule.html":{}}}],["emits",{"_index":632,"title":{},"body":{"directives/NgxEditorJSDirective.html":{}}}],["empathy",{"_index":1540,"title":{},"body":{"contributing.html":{}}}],["empty",{"_index":311,"title":{},"body":{"interfaces/EditorJSMaterialForm.html":{},"directives/NgxEditorJSDirective.html":{}}}],["empty(empty",{"_index":314,"title":{},"body":{"interfaces/EditorJSMaterialForm.html":{}}}],["enable",{"_index":1145,"title":{},"body":{"components/NgxTinynodesMaterialFormFieldDemoComponent.html":{}}}],["enableautosave",{"_index":1126,"title":{},"body":{"components/NgxTinynodesMaterialFormFieldDemoComponent.html":{}}}],["enableautosave(autosavetime",{"_index":1143,"title":{},"body":{"components/NgxTinynodesMaterialFormFieldDemoComponent.html":{}}}],["enabled",{"_index":1189,"title":{},"body":{"components/NgxTinynodesMaterialFormFieldDemoComponent.html":{}}}],["enablelongstacktrace",{"_index":464,"title":{},"body":{"injectables/MockNgZone.html":{}}}],["enables",{"_index":1219,"title":{},"body":{"components/NgxTinynodesMaterialFormFieldDemoComponent.html":{}}}],["end",{"_index":1472,"title":{},"body":{"contributing.html":{}}}],["enforce",{"_index":1636,"title":{},"body":{"contributing.html":{}}}],["enforcement",{"_index":1613,"title":{},"body":{"contributing.html":{}}}],["ensure",{"_index":835,"title":{},"body":{"injectables/NgxEditorJSService.html":{},"components/NgxTinynodesMaterialFormFieldDemoComponent.html":{},"contributing.html":{}}}],["enter",{"_index":1193,"title":{},"body":{"components/NgxTinynodesMaterialFormFieldDemoComponent.html":{}}}],["entire",{"_index":1217,"title":{},"body":{"components/NgxTinynodesMaterialFormFieldDemoComponent.html":{},"changelog.html":{}}}],["entity",{"_index":1330,"title":{},"body":{"injectables/PagesService.html":{}}}],["entitystate",{"_index":1335,"title":{},"body":{"interfaces/PagesState.html":{},"injectables/PagesStore.html":{}}}],["entitystore",{"_index":1336,"title":{},"body":{"interfaces/PagesState.html":{},"injectables/PagesStore.html":{}}}],["entrycomponents",{"_index":1012,"title":{},"body":{"modules/NgxEditorjsDemoModule.html":{},"modules/NgxTinynodesMaterialFormFieldDemo.html":{}}}],["enum",{"_index":82,"title":{},"body":{"interfaces/BlockData.html":{},"interfaces/PluginConfig.html":{},"interfaces/PluginConfigMap.html":{},"interfaces/ToolSettingsMap.html":{}}}],["enumerations",{"_index":1677,"title":{"miscellaneous/enumerations.html":{}},"body":{"miscellaneous/enumerations.html":{}}}],["environment",{"_index":1476,"title":{},"body":{"contributing.html":{}}}],["error",{"_index":277,"title":{},"body":{"interfaces/EditorJSMaterialForm.html":{}}}],["error('error",{"_index":711,"title":{},"body":{"directives/NgxEditorJSDirective.html":{}}}],["error(`no",{"_index":941,"title":{},"body":{"injectables/NgxEditorJSService.html":{}}}],["errorstate",{"_index":278,"title":{},"body":{"interfaces/EditorJSMaterialForm.html":{}}}],["etc",{"_index":858,"title":{},"body":{"injectables/NgxEditorJSService.html":{},"todo.html":{}}}],["ethnicity",{"_index":1511,"title":{},"body":{"contributing.html":{}}}],["event",{"_index":155,"title":{},"body":{"interfaces/ChangeMap.html":{},"interfaces/EditorJSChange.html":{},"interfaces/EditorJSMaterialForm.html":{},"interfaces/EditorMap.html":{},"interfaces/ReadyMap.html":{},"interfaces/SavedMap.html":{},"contributing.html":{},"license.html":{}}}],["eventemitter",{"_index":462,"title":{},"body":{"injectables/MockNgZone.html":{},"directives/NgxEditorJSDirective.html":{}}}],["eventemitter(false",{"_index":463,"title":{},"body":{"injectables/MockNgZone.html":{}}}],["events",{"_index":1702,"title":{},"body":{"index.html":{}}}],["everyone",{"_index":1505,"title":{},"body":{"contributing.html":{}}}],["example",{"_index":261,"title":{},"body":{"interfaces/EditorJSMaterialForm.html":{},"components/NgxEditorJSDemoHomeComponent.html":{},"directives/NgxEditorJSDirective.html":{},"changelog.html":{},"index.html":{}}}],["examples",{"_index":1483,"title":{},"body":{"contributing.html":{}}}],["exclude",{"_index":792,"title":{},"body":{"injectables/NgxEditorJSPluginService.html":{},"injectables/NgxEditorJSService.html":{}}}],["excludelist",{"_index":793,"title":{},"body":{"injectables/NgxEditorJSPluginService.html":{}}}],["excludelist.includes(key",{"_index":809,"title":{},"body":{"injectables/NgxEditorJSPluginService.html":{}}}],["excludetools",{"_index":163,"title":{},"body":{"interfaces/CreateEditorJSOptions.html":{},"directives/NgxEditorJSDirective.html":{},"injectables/NgxEditorJSPluginService.html":{},"injectables/NgxEditorJSService.html":{}}}],["existing",{"_index":659,"title":{},"body":{"directives/NgxEditorJSDirective.html":{}}}],["exiting",{"_index":1415,"title":{},"body":{"changelog.html":{}}}],["expand",{"_index":1088,"title":{},"body":{"components/NgxTinynodesMatJsonOutputComponent.html":{}}}],["expanded",{"_index":1445,"title":{},"body":{"changelog.html":{}}}],["expected",{"_index":1570,"title":{},"body":{"contributing.html":{}}}],["experience",{"_index":1504,"title":{},"body":{"contributing.html":{}}}],["experiences",{"_index":1532,"title":{},"body":{"contributing.html":{}}}],["explicit",{"_index":1560,"title":{},"body":{"contributing.html":{}}}],["export",{"_index":24,"title":{},"body":{"interfaces/Block.html":{},"interfaces/BlockData.html":{},"interfaces/ChangeMap.html":{},"interfaces/CreateEditorJSOptions.html":{},"interfaces/EditorJSChange.html":{},"interfaces/EditorJSClass.html":{},"interfaces/EditorJSInstanceConfig.html":{},"interfaces/EditorJSMaterialForm.html":{},"interfaces/EditorMap.html":{},"classes/FixedHeader.html":{},"interfaces/Header.html":{},"interfaces/HeaderBlock.html":{},"interfaces/Image.html":{},"interfaces/ImageBlock.html":{},"interfaces/InjectorApiCallOptions.html":{},"interfaces/InjectorApiCallResponse.html":{},"interfaces/InjectorMethodOption.html":{},"interfaces/List.html":{},"interfaces/ListBlock.html":{},"classes/MockEditorJS.html":{},"injectables/MockNgZone.html":{},"classes/MockPlugin.html":{},"interfaces/NgxEditorJSConfig.html":{},"components/NgxEditorJSDemoHomeComponent.html":{},"modules/NgxEditorJSDemoMaterialModule.html":{},"directives/NgxEditorJSDirective.html":{},"modules/NgxEditorJSModule.html":{},"interfaces/NgxEditorJSModuleConfig.html":{},"injectables/NgxEditorJSPluginService.html":{},"modules/NgxEditorJSPluginServiceModule.html":{},"injectables/NgxEditorJSService.html":{},"modules/NgxEditorjsDemoModule.html":{},"modules/NgxEditorjsPluginsModule.html":{},"modules/NgxTinynodesComponentsModule.html":{},"interfaces/NgxTinynodesMatFieldComponent.html":{},"components/NgxTinynodesMatJsonOutputComponent.html":{},"modules/NgxTinynodesMatJsonOutputModule.html":{},"modules/NgxTinynodesMatTagInputModule.html":{},"modules/NgxTinynodesMaterialFormFieldDemo.html":{},"components/NgxTinynodesMaterialFormFieldDemoComponent.html":{},"interfaces/Page.html":{},"interfaces/PageBlock.html":{},"components/PageContainerComponent.html":{},"modules/PageStoreModule.html":{},"injectables/PagesQuery.html":{},"injectables/PagesService.html":{},"interfaces/PagesState.html":{},"injectables/PagesStore.html":{},"interfaces/Paragraph.html":{},"interfaces/ParagraphBlock.html":{},"modules/PluginCodeModule.html":{},"interfaces/PluginConfig.html":{},"interfaces/PluginConfigMap.html":{},"modules/PluginEmbedModule.html":{},"modules/PluginHeaderModule.html":{},"modules/PluginImageModule.html":{},"modules/PluginInlineCodeModule.html":{},"modules/PluginLinkModule.html":{},"modules/PluginListModule.html":{},"modules/PluginMarkerModule.html":{},"modules/PluginParagraphModule.html":{},"modules/PluginQuoteModule.html":{},"modules/PluginSimpleImageModule.html":{},"modules/PluginWarningModule.html":{},"interfaces/ReadyMap.html":{},"interfaces/SavedMap.html":{},"interfaces/Tag.html":{},"interfaces/ToolSettingsMap.html":{}}}],["exported",{"_index":95,"title":{},"body":{"interfaces/BlockData.html":{},"interfaces/PluginConfig.html":{},"interfaces/PluginConfigMap.html":{},"interfaces/ToolSettingsMap.html":{}}}],["exports",{"_index":573,"title":{},"body":{"modules/NgxEditorJSDemoMaterialModule.html":{},"modules/NgxEditorJSModule.html":{},"modules/NgxEditorJSPluginServiceModule.html":{},"modules/NgxEditorjsDemoModule.html":{},"modules/NgxEditorjsPluginsModule.html":{},"modules/NgxTinynodesComponentsModule.html":{},"modules/NgxTinynodesMatJsonOutputModule.html":{},"modules/NgxTinynodesMatTagInputModule.html":{},"modules/NgxTinynodesMaterialFormFieldDemo.html":{},"modules/PageStoreModule.html":{},"changelog.html":{},"index.html":{},"overview.html":{}}}],["expose",{"_index":1788,"title":{},"body":{"todo.html":{}}}],["exposed",{"_index":1478,"title":{},"body":{"contributing.html":{}}}],["express",{"_index":1756,"title":{},"body":{"license.html":{}}}],["expression",{"_index":1514,"title":{},"body":{"contributing.html":{}}}],["extends",{"_index":40,"title":{},"body":{"interfaces/Block.html":{},"interfaces/EditorJSClass.html":{},"interfaces/EditorJSInstanceConfig.html":{},"interfaces/EditorJSMaterialForm.html":{},"classes/FixedHeader.html":{},"interfaces/Header.html":{},"interfaces/HeaderBlock.html":{},"interfaces/Image.html":{},"interfaces/ImageBlock.html":{},"interfaces/InjectorApiCallOptions.html":{},"interfaces/InjectorApiCallResponse.html":{},"interfaces/InjectorMethodOption.html":{},"interfaces/List.html":{},"interfaces/ListBlock.html":{},"injectables/MockNgZone.html":{},"interfaces/NgxTinynodesMatFieldComponent.html":{},"interfaces/Page.html":{},"interfaces/PageBlock.html":{},"injectables/PagesQuery.html":{},"interfaces/PagesState.html":{},"injectables/PagesStore.html":{},"interfaces/Paragraph.html":{},"interfaces/ParagraphBlock.html":{},"modules/PluginHeaderModule.html":{},"interfaces/Tag.html":{}}}],["face",{"_index":1638,"title":{},"body":{"contributing.html":{}}}],["factory",{"_index":496,"title":{},"body":{"interfaces/NgxEditorJSConfig.html":{},"modules/NgxEditorJSModule.html":{},"interfaces/NgxEditorJSModuleConfig.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["fair",{"_index":1572,"title":{},"body":{"contributing.html":{}}}],["faith",{"_index":1637,"title":{},"body":{"contributing.html":{}}}],["falls",{"_index":678,"title":{},"body":{"directives/NgxEditorJSDirective.html":{}}}],["false",{"_index":164,"title":{},"body":{"interfaces/CreateEditorJSOptions.html":{},"interfaces/EditorJSClass.html":{},"interfaces/EditorJSInstanceConfig.html":{},"interfaces/EditorJSMaterialForm.html":{},"interfaces/InjectorApiCallOptions.html":{},"interfaces/InjectorApiCallResponse.html":{},"interfaces/InjectorMethodOption.html":{},"injectables/MockNgZone.html":{},"interfaces/NgxEditorJSConfig.html":{},"interfaces/NgxEditorJSModuleConfig.html":{},"injectables/NgxEditorJSService.html":{},"components/NgxTinynodesMaterialFormFieldDemoComponent.html":{},"miscellaneous/variables.html":{}}}],["fb",{"_index":1132,"title":{},"body":{"components/NgxTinynodesMaterialFormFieldDemoComponent.html":{}}}],["feature",{"_index":1218,"title":{},"body":{"components/NgxTinynodesMaterialFormFieldDemoComponent.html":{},"todo.html":{}}}],["features",{"_index":1418,"title":{},"body":{"changelog.html":{},"index.html":{}}}],["field",{"_index":240,"title":{},"body":{"interfaces/EditorJSMaterialForm.html":{},"components/NgxEditorJSDemoHomeComponent.html":{},"modules/NgxEditorJSDemoMaterialModule.html":{},"modules/NgxEditorJSModule.html":{},"components/NgxTinynodesMatJsonOutputComponent.html":{},"components/NgxTinynodesMaterialFormFieldDemoComponent.html":{},"components/PageContainerComponent.html":{},"changelog.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["field'},{'name",{"_index":534,"title":{},"body":{"components/NgxEditorJSDemoHomeComponent.html":{},"components/NgxTinynodesMatJsonOutputComponent.html":{},"components/NgxTinynodesMaterialFormFieldDemoComponent.html":{},"components/PageContainerComponent.html":{}}}],["field.component",{"_index":761,"title":{},"body":{"modules/NgxEditorJSModule.html":{},"modules/NgxTinynodesMaterialFormFieldDemo.html":{}}}],["field.component.html",{"_index":264,"title":{},"body":{"interfaces/EditorJSMaterialForm.html":{},"components/NgxTinynodesMaterialFormFieldDemoComponent.html":{}}}],["field.component.scss",{"_index":266,"title":{},"body":{"interfaces/EditorJSMaterialForm.html":{},"components/NgxTinynodesMaterialFormFieldDemoComponent.html":{}}}],["field.component.ts",{"_index":218,"title":{},"body":{"interfaces/EditorJSMaterialForm.html":{},"components/NgxTinynodesMaterialFormFieldDemoComponent.html":{},"miscellaneous/variables.html":{}}}],["field.component.ts:102",{"_index":1144,"title":{},"body":{"components/NgxTinynodesMaterialFormFieldDemoComponent.html":{}}}],["field.component.ts:109",{"_index":1142,"title":{},"body":{"components/NgxTinynodesMaterialFormFieldDemoComponent.html":{}}}],["field.component.ts:116",{"_index":1151,"title":{},"body":{"components/NgxTinynodesMaterialFormFieldDemoComponent.html":{}}}],["field.component.ts:125",{"_index":1140,"title":{},"body":{"components/NgxTinynodesMaterialFormFieldDemoComponent.html":{}}}],["field.component.ts:144",{"_index":1153,"title":{},"body":{"components/NgxTinynodesMaterialFormFieldDemoComponent.html":{}}}],["field.component.ts:155",{"_index":1150,"title":{},"body":{"components/NgxTinynodesMaterialFormFieldDemoComponent.html":{}}}],["field.component.ts:172",{"_index":1147,"title":{},"body":{"components/NgxTinynodesMaterialFormFieldDemoComponent.html":{}}}],["field.component.ts:25",{"_index":1138,"title":{},"body":{"components/NgxTinynodesMaterialFormFieldDemoComponent.html":{}}}],["field.component.ts:30",{"_index":1137,"title":{},"body":{"components/NgxTinynodesMaterialFormFieldDemoComponent.html":{}}}],["field.component.ts:34",{"_index":1158,"title":{},"body":{"components/NgxTinynodesMaterialFormFieldDemoComponent.html":{}}}],["field.component.ts:51",{"_index":1134,"title":{},"body":{"components/NgxTinynodesMaterialFormFieldDemoComponent.html":{}}}],["field.component.ts:86",{"_index":1161,"title":{},"body":{"components/NgxTinynodesMaterialFormFieldDemoComponent.html":{}}}],["field.component.ts:93",{"_index":1163,"title":{},"body":{"components/NgxTinynodesMaterialFormFieldDemoComponent.html":{}}}],["field.module').then(m",{"_index":1819,"title":{},"body":{"miscellaneous/variables.html":{}}}],["field.module.ts",{"_index":1116,"title":{},"body":{"modules/NgxTinynodesMaterialFormFieldDemo.html":{}}}],["field/containers/material",{"_index":1121,"title":{},"body":{"components/NgxTinynodesMaterialFormFieldDemoComponent.html":{}}}],["field/editorjs",{"_index":217,"title":{},"body":{"interfaces/EditorJSMaterialForm.html":{},"modules/NgxEditorJSModule.html":{},"miscellaneous/variables.html":{}}}],["field/material",{"_index":1115,"title":{},"body":{"modules/NgxTinynodesMaterialFormFieldDemo.html":{},"components/NgxTinynodesMaterialFormFieldDemoComponent.html":{},"miscellaneous/variables.html":{}}}],["file",{"_index":5,"title":{},"body":{"interfaces/Block.html":{},"interfaces/BlockData.html":{},"interfaces/ChangeMap.html":{},"interfaces/CreateEditorJSOptions.html":{},"interfaces/EditorJSChange.html":{},"interfaces/EditorJSClass.html":{},"interfaces/EditorJSInstanceConfig.html":{},"interfaces/EditorJSMaterialForm.html":{},"interfaces/EditorMap.html":{},"classes/FixedHeader.html":{},"interfaces/Header.html":{},"interfaces/HeaderBlock.html":{},"interfaces/Image.html":{},"interfaces/ImageBlock.html":{},"interfaces/InjectorApiCallOptions.html":{},"interfaces/InjectorApiCallResponse.html":{},"interfaces/InjectorMethodOption.html":{},"interfaces/List.html":{},"interfaces/ListBlock.html":{},"classes/MockEditorJS.html":{},"injectables/MockNgZone.html":{},"classes/MockPlugin.html":{},"interfaces/NgxEditorJSConfig.html":{},"components/NgxEditorJSDemoHomeComponent.html":{},"modules/NgxEditorJSDemoMaterialModule.html":{},"directives/NgxEditorJSDirective.html":{},"modules/NgxEditorJSModule.html":{},"interfaces/NgxEditorJSModuleConfig.html":{},"injectables/NgxEditorJSPluginService.html":{},"modules/NgxEditorJSPluginServiceModule.html":{},"injectables/NgxEditorJSService.html":{},"modules/NgxEditorjsDemoModule.html":{},"modules/NgxEditorjsPluginsModule.html":{},"modules/NgxTinynodesComponentsModule.html":{},"interfaces/NgxTinynodesMatFieldComponent.html":{},"components/NgxTinynodesMatJsonOutputComponent.html":{},"modules/NgxTinynodesMatJsonOutputModule.html":{},"modules/NgxTinynodesMatTagInputModule.html":{},"modules/NgxTinynodesMaterialFormFieldDemo.html":{},"components/NgxTinynodesMaterialFormFieldDemoComponent.html":{},"interfaces/Page.html":{},"interfaces/PageBlock.html":{},"components/PageContainerComponent.html":{},"modules/PageStoreModule.html":{},"injectables/PagesQuery.html":{},"injectables/PagesService.html":{},"interfaces/PagesState.html":{},"injectables/PagesStore.html":{},"interfaces/Paragraph.html":{},"interfaces/ParagraphBlock.html":{},"modules/PluginCodeModule.html":{},"interfaces/PluginConfig.html":{},"interfaces/PluginConfigMap.html":{},"modules/PluginEmbedModule.html":{},"modules/PluginHeaderModule.html":{},"modules/PluginImageModule.html":{},"modules/PluginInlineCodeModule.html":{},"modules/PluginLinkModule.html":{},"modules/PluginListModule.html":{},"modules/PluginMarkerModule.html":{},"modules/PluginParagraphModule.html":{},"modules/PluginQuoteModule.html":{},"modules/PluginSimpleImageModule.html":{},"modules/PluginWarningModule.html":{},"interfaces/ReadyMap.html":{},"interfaces/SavedMap.html":{},"interfaces/Tag.html":{},"interfaces/ToolSettingsMap.html":{},"contributing.html":{}}}],["filed",{"_index":1442,"title":{},"body":{"changelog.html":{}}}],["files",{"_index":1484,"title":{},"body":{"contributing.html":{},"license.html":{}}}],["filter",{"_index":893,"title":{},"body":{"injectables/NgxEditorJSService.html":{},"components/NgxTinynodesMaterialFormFieldDemoComponent.html":{}}}],["filter(([key",{"_index":808,"title":{},"body":{"injectables/NgxEditorJSPluginService.html":{}}}],["filter(haschanged",{"_index":974,"title":{},"body":{"injectables/NgxEditorJSService.html":{}}}],["filtering",{"_index":791,"title":{},"body":{"injectables/NgxEditorJSPluginService.html":{}}}],["finaltools",{"_index":815,"title":{},"body":{"injectables/NgxEditorJSPluginService.html":{}}}],["find",{"_index":1382,"title":{},"body":{"changelog.html":{},"index.html":{}}}],["find(key",{"_index":706,"title":{},"body":{"directives/NgxEditorJSDirective.html":{}}}],["first",{"_index":478,"title":{},"body":{"interfaces/NgxEditorJSConfig.html":{},"directives/NgxEditorJSDirective.html":{},"interfaces/NgxEditorJSModuleConfig.html":{},"injectables/NgxEditorJSService.html":{},"changelog.html":{},"contributing.html":{}}}],["fitness",{"_index":1761,"title":{},"body":{"license.html":{}}}],["fixed",{"_index":393,"title":{},"body":{"classes/FixedHeader.html":{},"modules/PluginHeaderModule.html":{}}}],["fixedheader",{"_index":383,"title":{"classes/FixedHeader.html":{}},"body":{"classes/FixedHeader.html":{},"modules/PluginHeaderModule.html":{}}}],["flex",{"_index":1227,"title":{},"body":{"components/NgxTinynodesMaterialFormFieldDemoComponent.html":{},"components/PageContainerComponent.html":{}}}],["float",{"_index":326,"title":{},"body":{"interfaces/EditorJSMaterialForm.html":{}}}],["fn",{"_index":458,"title":{},"body":{"injectables/MockNgZone.html":{}}}],["focus",{"_index":347,"title":{},"body":{"interfaces/EditorJSMaterialForm.html":{},"interfaces/NgxEditorJSConfig.html":{},"directives/NgxEditorJSDirective.html":{},"interfaces/NgxEditorJSModuleConfig.html":{},"components/NgxTinynodesMaterialFormFieldDemoComponent.html":{}}}],["focused",{"_index":292,"title":{},"body":{"interfaces/EditorJSMaterialForm.html":{},"directives/NgxEditorJSDirective.html":{},"components/PageContainerComponent.html":{}}}],["focused(focused",{"_index":296,"title":{},"body":{"interfaces/EditorJSMaterialForm.html":{}}}],["focusing",{"_index":1537,"title":{},"body":{"contributing.html":{}}}],["focusmonitor",{"_index":221,"title":{},"body":{"interfaces/EditorJSMaterialForm.html":{}}}],["folder",{"_index":1711,"title":{},"body":{"index.html":{}}}],["follow",{"_index":1468,"title":{},"body":{"contributing.html":{}}}],["following",{"_index":1746,"title":{},"body":{"license.html":{}}}],["for_root_options_token",{"_index":497,"title":{},"body":{"interfaces/NgxEditorJSConfig.html":{},"modules/NgxEditorJSModule.html":{},"interfaces/NgxEditorJSModuleConfig.html":{},"miscellaneous/variables.html":{}}}],["form",{"_index":523,"title":{},"body":{"components/NgxEditorJSDemoHomeComponent.html":{},"directives/NgxEditorJSDirective.html":{},"components/NgxTinynodesMatJsonOutputComponent.html":{},"modules/NgxTinynodesMaterialFormFieldDemo.html":{},"components/NgxTinynodesMaterialFormFieldDemoComponent.html":{},"components/PageContainerComponent.html":{},"changelog.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["formatted",{"_index":1255,"title":{},"body":{"components/PageContainerComponent.html":{}}}],["formbuilder",{"_index":1133,"title":{},"body":{"components/NgxTinynodesMaterialFormFieldDemoComponent.html":{}}}],["formcontrol",{"_index":608,"title":{},"body":{"directives/NgxEditorJSDirective.html":{},"components/NgxTinynodesMaterialFormFieldDemoComponent.html":{}}}],["forms",{"_index":524,"title":{},"body":{"components/NgxEditorJSDemoHomeComponent.html":{},"directives/NgxEditorJSDirective.html":{},"changelog.html":{},"index.html":{}}}],["formsmodule",{"_index":757,"title":{},"body":{"modules/NgxEditorJSModule.html":{},"modules/NgxTinynodesMatTagInputModule.html":{}}}],["formsmodule,commonmodule",{"_index":1109,"title":{},"body":{"modules/NgxTinynodesMatTagInputModule.html":{}}}],["forroot",{"_index":748,"title":{},"body":{"modules/NgxEditorJSModule.html":{}}}],["forroot(@optional",{"_index":771,"title":{},"body":{"modules/NgxEditorJSModule.html":{}}}],["forroot(config",{"_index":750,"title":{},"body":{"modules/NgxEditorJSModule.html":{}}}],["forwardref",{"_index":230,"title":{},"body":{"interfaces/EditorJSMaterialForm.html":{},"miscellaneous/variables.html":{}}}],["fostering",{"_index":1496,"title":{},"body":{"contributing.html":{}}}],["free",{"_index":1503,"title":{},"body":{"contributing.html":{},"license.html":{}}}],["full",{"_index":259,"title":{},"body":{"interfaces/EditorJSMaterialForm.html":{},"index.html":{},"todo.html":{}}}],["fully",{"_index":1697,"title":{},"body":{"index.html":{}}}],["function",{"_index":179,"title":{},"body":{"interfaces/EditorJSClass.html":{},"interfaces/EditorJSInstanceConfig.html":{},"classes/FixedHeader.html":{},"interfaces/InjectorApiCallOptions.html":{},"interfaces/InjectorApiCallResponse.html":{},"interfaces/InjectorMethodOption.html":{},"classes/MockEditorJS.html":{},"injectables/MockNgZone.html":{},"modules/NgxEditorJSModule.html":{},"injectables/NgxEditorJSService.html":{},"modules/PluginHeaderModule.html":{},"miscellaneous/functions.html":{}}}],["functions",{"_index":1679,"title":{"miscellaneous/functions.html":{}},"body":{"miscellaneous/functions.html":{}}}],["furnished",{"_index":1745,"title":{},"body":{"license.html":{}}}],["further",{"_index":1611,"title":{},"body":{"contributing.html":{}}}],["gender",{"_index":1512,"title":{},"body":{"contributing.html":{}}}],["general",{"_index":1719,"title":{},"body":{"license.html":{},"todo.html":{}}}],["generated",{"_index":1716,"title":{},"body":{"index.html":{}}}],["getasjson",{"_index":1253,"title":{},"body":{"components/PageContainerComponent.html":{}}}],["getautosave",{"_index":1160,"title":{},"body":{"components/NgxTinynodesMaterialFormFieldDemoComponent.html":{}}}],["getblocks",{"_index":1248,"title":{},"body":{"components/PageContainerComponent.html":{}}}],["getdemodata('material",{"_index":1180,"title":{},"body":{"components/NgxTinynodesMaterialFormFieldDemoComponent.html":{}}}],["getdemodata('ngx",{"_index":1261,"title":{},"body":{"components/PageContainerComponent.html":{}}}],["geteditor",{"_index":663,"title":{},"body":{"directives/NgxEditorJSDirective.html":{},"injectables/NgxEditorJSService.html":{}}}],["geteditor(options",{"_index":874,"title":{},"body":{"injectables/NgxEditorJSService.html":{}}}],["getelement",{"_index":666,"title":{},"body":{"directives/NgxEditorJSDirective.html":{}}}],["getmenu",{"_index":1162,"title":{},"body":{"components/NgxTinynodesMaterialFormFieldDemoComponent.html":{},"components/PageContainerComponent.html":{}}}],["getpages",{"_index":1251,"title":{},"body":{"components/PageContainerComponent.html":{},"injectables/PagesService.html":{}}}],["getplugin",{"_index":778,"title":{},"body":{"injectables/NgxEditorJSPluginService.html":{}}}],["getplugin(key",{"_index":785,"title":{},"body":{"injectables/NgxEditorJSPluginService.html":{}}}],["getplugins",{"_index":779,"title":{},"body":{"injectables/NgxEditorJSPluginService.html":{}}}],["getpluginswithexclude",{"_index":780,"title":{},"body":{"injectables/NgxEditorJSPluginService.html":{}}}],["getpluginswithexclude(excludelist",{"_index":789,"title":{},"body":{"injectables/NgxEditorJSPluginService.html":{}}}],["getpluginswithinclude",{"_index":781,"title":{},"body":{"injectables/NgxEditorJSPluginService.html":{}}}],["getpluginswithinclude(includelist",{"_index":794,"title":{},"body":{"injectables/NgxEditorJSPluginService.html":{}}}],["gets",{"_index":325,"title":{},"body":{"interfaces/EditorJSMaterialForm.html":{},"directives/NgxEditorJSDirective.html":{},"injectables/NgxEditorJSService.html":{}}}],["getservice",{"_index":668,"title":{},"body":{"directives/NgxEditorJSDirective.html":{}}}],["getting",{"_index":1377,"title":{"changelog.html":{},"contributing.html":{},"index.html":{},"license.html":{},"todo.html":{}},"body":{"changelog.html":{}}}],["gettools",{"_index":782,"title":{},"body":{"injectables/NgxEditorJSPluginService.html":{}}}],["gettools(excludetools",{"_index":797,"title":{},"body":{"injectables/NgxEditorJSPluginService.html":{},"injectables/NgxEditorJSService.html":{}}}],["gettouched",{"_index":670,"title":{},"body":{"directives/NgxEditorJSDirective.html":{}}}],["github",{"_index":410,"title":{},"body":{"classes/FixedHeader.html":{},"modules/PluginCodeModule.html":{},"modules/PluginEmbedModule.html":{},"modules/PluginHeaderModule.html":{},"modules/PluginImageModule.html":{},"modules/PluginInlineCodeModule.html":{},"modules/PluginLinkModule.html":{},"modules/PluginListModule.html":{},"modules/PluginMarkerModule.html":{},"modules/PluginParagraphModule.html":{},"modules/PluginQuoteModule.html":{},"modules/PluginSimpleImageModule.html":{},"modules/PluginWarningModule.html":{}}}],["good",{"_index":1457,"title":{},"body":{"changelog.html":{},"contributing.html":{}}}],["gracefully",{"_index":1533,"title":{},"body":{"contributing.html":{}}}],["granted",{"_index":1724,"title":{},"body":{"license.html":{}}}],["graph",{"_index":1777,"title":{},"body":{"modules.html":{}}}],["group",{"_index":1159,"title":{},"body":{"components/NgxTinynodesMaterialFormFieldDemoComponent.html":{}}}],["guid",{"_index":1320,"title":{},"body":{"injectables/PagesService.html":{}}}],["hammerjs",{"_index":1665,"title":{},"body":{"dependencies.html":{}}}],["handle",{"_index":1424,"title":{},"body":{"changelog.html":{}}}],["handles",{"_index":832,"title":{},"body":{"injectables/NgxEditorJSService.html":{},"index.html":{}}}],["handling",{"_index":775,"title":{},"body":{"injectables/NgxEditorJSPluginService.html":{},"changelog.html":{}}}],["happens",{"_index":838,"title":{},"body":{"injectables/NgxEditorJSService.html":{}}}],["harassing",{"_index":1615,"title":{},"body":{"contributing.html":{}}}],["harassment",{"_index":1502,"title":{},"body":{"contributing.html":{}}}],["harmful",{"_index":1592,"title":{},"body":{"contributing.html":{}}}],["haschanged",{"_index":586,"title":{},"body":{"directives/NgxEditorJSDirective.html":{},"injectables/NgxEditorJSService.html":{},"components/NgxTinynodesMaterialFormFieldDemoComponent.html":{}}}],["haschanged.blocks",{"_index":1171,"title":{},"body":{"components/NgxTinynodesMaterialFormFieldDemoComponent.html":{}}}],["hassaved",{"_index":587,"title":{},"body":{"directives/NgxEditorJSDirective.html":{},"injectables/NgxEditorJSService.html":{}}}],["hassaved(options",{"_index":876,"title":{},"body":{"injectables/NgxEditorJSService.html":{}}}],["hassavedmap",{"_index":197,"title":{},"body":{"interfaces/EditorJSClass.html":{},"interfaces/EditorJSInstanceConfig.html":{},"interfaces/InjectorApiCallOptions.html":{},"interfaces/InjectorApiCallResponse.html":{},"interfaces/InjectorMethodOption.html":{},"injectables/NgxEditorJSService.html":{},"miscellaneous/variables.html":{}}}],["header",{"_index":44,"title":{"interfaces/Header.html":{}},"body":{"interfaces/Block.html":{},"classes/FixedHeader.html":{},"interfaces/Header.html":{},"interfaces/HeaderBlock.html":{},"interfaces/Image.html":{},"interfaces/ImageBlock.html":{},"interfaces/List.html":{},"interfaces/ListBlock.html":{},"components/NgxTinynodesMaterialFormFieldDemoComponent.html":{},"components/PageContainerComponent.html":{},"interfaces/Paragraph.html":{},"interfaces/ParagraphBlock.html":{},"modules/PluginHeaderModule.html":{},"dependencies.html":{}}}],["headerblock",{"_index":49,"title":{"interfaces/HeaderBlock.html":{}},"body":{"interfaces/Block.html":{},"interfaces/Header.html":{},"interfaces/HeaderBlock.html":{},"interfaces/Image.html":{},"interfaces/ImageBlock.html":{},"interfaces/List.html":{},"interfaces/ListBlock.html":{},"interfaces/Paragraph.html":{},"interfaces/ParagraphBlock.html":{},"miscellaneous/typealiases.html":{}}}],["height",{"_index":484,"title":{},"body":{"interfaces/NgxEditorJSConfig.html":{},"directives/NgxEditorJSDirective.html":{},"interfaces/NgxEditorJSModuleConfig.html":{},"components/NgxTinynodesMaterialFormFieldDemoComponent.html":{},"components/PageContainerComponent.html":{}}}],["helper",{"_index":853,"title":{},"body":{"injectables/NgxEditorJSService.html":{}}}],["helpers",{"_index":1790,"title":{},"body":{"todo.html":{}}}],["hereby",{"_index":1723,"title":{},"body":{"license.html":{}}}],["hideable",{"_index":1668,"title":{},"body":{"dependencies.html":{}}}],["hidetoolbar",{"_index":472,"title":{},"body":{"interfaces/NgxEditorJSConfig.html":{},"directives/NgxEditorJSDirective.html":{},"interfaces/NgxEditorJSModuleConfig.html":{}}}],["hold",{"_index":483,"title":{},"body":{"interfaces/NgxEditorJSConfig.html":{},"interfaces/NgxEditorJSModuleConfig.html":{}}}],["holder",{"_index":183,"title":{},"body":{"interfaces/EditorJSClass.html":{},"interfaces/EditorJSInstanceConfig.html":{},"interfaces/InjectorApiCallOptions.html":{},"interfaces/InjectorApiCallResponse.html":{},"interfaces/InjectorMethodOption.html":{},"interfaces/NgxEditorJSConfig.html":{},"directives/NgxEditorJSDirective.html":{},"interfaces/NgxEditorJSModuleConfig.html":{},"injectables/NgxEditorJSService.html":{},"components/NgxTinynodesMaterialFormFieldDemoComponent.html":{},"components/PageContainerComponent.html":{},"miscellaneous/variables.html":{}}}],["holders",{"_index":1766,"title":{},"body":{"license.html":{}}}],["home",{"_index":511,"title":{},"body":{"components/NgxEditorJSDemoHomeComponent.html":{}}}],["home'},{'name",{"_index":533,"title":{},"body":{"components/NgxEditorJSDemoHomeComponent.html":{},"components/NgxTinynodesMatJsonOutputComponent.html":{},"components/NgxTinynodesMaterialFormFieldDemoComponent.html":{},"components/PageContainerComponent.html":{}}}],["host",{"_index":321,"title":{},"body":{"interfaces/EditorJSMaterialForm.html":{},"directives/NgxEditorJSDirective.html":{},"components/NgxTinynodesMaterialFormFieldDemoComponent.html":{},"components/PageContainerComponent.html":{}}}],["hostbinding",{"_index":231,"title":{},"body":{"interfaces/EditorJSMaterialForm.html":{}}}],["hostbinding('attr.aria",{"_index":332,"title":{},"body":{"interfaces/EditorJSMaterialForm.html":{}}}],["hostbinding('class.floating",{"_index":327,"title":{},"body":{"interfaces/EditorJSMaterialForm.html":{}}}],["hostlistener",{"_index":672,"title":{},"body":{"directives/NgxEditorJSDirective.html":{}}}],["hostlistener('click",{"_index":680,"title":{},"body":{"directives/NgxEditorJSDirective.html":{}}}],["hostlisteners",{"_index":590,"title":{},"body":{"directives/NgxEditorJSDirective.html":{}}}],["html",{"_index":528,"title":{},"body":{"components/NgxEditorJSDemoHomeComponent.html":{},"directives/NgxEditorJSDirective.html":{},"components/NgxTinynodesMatJsonOutputComponent.html":{},"components/NgxTinynodesMaterialFormFieldDemoComponent.html":{},"components/PageContainerComponent.html":{}}}],["http://contributor",{"_index":1649,"title":{},"body":{"contributing.html":{}}}],["https://angular.io/api/core/ngmodule",{"_index":801,"title":{},"body":{"injectables/NgxEditorJSPluginService.html":{}}}],["https://angular.io/api/core/ngzone",{"_index":899,"title":{},"body":{"injectables/NgxEditorJSService.html":{}}}],["https://angular.io/guide/observables",{"_index":900,"title":{},"body":{"injectables/NgxEditorJSService.html":{}}}],["https://editorjs.io/api",{"_index":813,"title":{},"body":{"injectables/NgxEditorJSPluginService.html":{},"injectables/NgxEditorJSService.html":{}}}],["https://editorjs.io/provide",{"_index":108,"title":{},"body":{"interfaces/BlockData.html":{},"interfaces/PluginConfig.html":{},"interfaces/PluginConfigMap.html":{},"interfaces/ToolSettingsMap.html":{}}}],["https://github.com/editor",{"_index":799,"title":{},"body":{"injectables/NgxEditorJSPluginService.html":{}}}],["i'll",{"_index":1452,"title":{},"body":{"changelog.html":{}}}],["i'm",{"_index":1422,"title":{},"body":{"changelog.html":{}}}],["i've",{"_index":1423,"title":{},"body":{"changelog.html":{}}}],["id",{"_index":271,"title":{},"body":{"interfaces/EditorJSMaterialForm.html":{},"interfaces/NgxEditorJSConfig.html":{},"directives/NgxEditorJSDirective.html":{},"interfaces/NgxEditorJSModuleConfig.html":{},"injectables/NgxEditorJSService.html":{},"components/NgxTinynodesMaterialFormFieldDemoComponent.html":{},"interfaces/Page.html":{},"interfaces/PageBlock.html":{},"components/PageContainerComponent.html":{},"injectables/PagesService.html":{},"interfaces/Tag.html":{},"miscellaneous/variables.html":{}}}],["identity",{"_index":1513,"title":{},"body":{"contributing.html":{}}}],["ids",{"_index":334,"title":{},"body":{"interfaces/EditorJSMaterialForm.html":{}}}],["ids.join",{"_index":338,"title":{},"body":{"interfaces/EditorJSMaterialForm.html":{}}}],["ignore",{"_index":703,"title":{},"body":{"directives/NgxEditorJSDirective.html":{}}}],["image",{"_index":50,"title":{"interfaces/Image.html":{}},"body":{"interfaces/Block.html":{},"interfaces/Header.html":{},"interfaces/HeaderBlock.html":{},"interfaces/Image.html":{},"interfaces/ImageBlock.html":{},"interfaces/List.html":{},"interfaces/ListBlock.html":{},"components/NgxTinynodesMaterialFormFieldDemoComponent.html":{},"components/PageContainerComponent.html":{},"interfaces/Paragraph.html":{},"interfaces/ParagraphBlock.html":{},"modules/PluginImageModule.html":{},"modules/PluginSimpleImageModule.html":{}}}],["image.module",{"_index":1063,"title":{},"body":{"modules/NgxEditorjsPluginsModule.html":{}}}],["image.module.ts",{"_index":1369,"title":{},"body":{"modules/PluginSimpleImageModule.html":{}}}],["image/simple",{"_index":1062,"title":{},"body":{"modules/NgxEditorjsPluginsModule.html":{},"modules/PluginSimpleImageModule.html":{}}}],["imageblock",{"_index":62,"title":{"interfaces/ImageBlock.html":{}},"body":{"interfaces/Block.html":{},"interfaces/Header.html":{},"interfaces/HeaderBlock.html":{},"interfaces/Image.html":{},"interfaces/ImageBlock.html":{},"interfaces/List.html":{},"interfaces/ListBlock.html":{},"interfaces/Paragraph.html":{},"interfaces/ParagraphBlock.html":{},"miscellaneous/typealiases.html":{}}}],["imagery",{"_index":1546,"title":{},"body":{"contributing.html":{}}}],["implementation",{"_index":260,"title":{},"body":{"interfaces/EditorJSMaterialForm.html":{},"injectables/MockNgZone.html":{}}}],["implements",{"_index":270,"title":{},"body":{"interfaces/EditorJSMaterialForm.html":{},"directives/NgxEditorJSDirective.html":{},"components/NgxTinynodesMatJsonOutputComponent.html":{},"components/NgxTinynodesMaterialFormFieldDemoComponent.html":{},"components/PageContainerComponent.html":{}}}],["implied",{"_index":1757,"title":{},"body":{"license.html":{}}}],["import",{"_index":71,"title":{},"body":{"interfaces/BlockData.html":{},"interfaces/ChangeMap.html":{},"interfaces/CreateEditorJSOptions.html":{},"interfaces/EditorJSChange.html":{},"interfaces/EditorJSClass.html":{},"interfaces/EditorJSInstanceConfig.html":{},"interfaces/EditorJSMaterialForm.html":{},"interfaces/EditorMap.html":{},"classes/FixedHeader.html":{},"interfaces/InjectorApiCallOptions.html":{},"interfaces/InjectorApiCallResponse.html":{},"interfaces/InjectorMethodOption.html":{},"classes/MockEditorJS.html":{},"injectables/MockNgZone.html":{},"classes/MockPlugin.html":{},"interfaces/NgxEditorJSConfig.html":{},"components/NgxEditorJSDemoHomeComponent.html":{},"modules/NgxEditorJSDemoMaterialModule.html":{},"directives/NgxEditorJSDirective.html":{},"modules/NgxEditorJSModule.html":{},"interfaces/NgxEditorJSModuleConfig.html":{},"injectables/NgxEditorJSPluginService.html":{},"modules/NgxEditorJSPluginServiceModule.html":{},"injectables/NgxEditorJSService.html":{},"modules/NgxEditorjsDemoModule.html":{},"modules/NgxEditorjsPluginsModule.html":{},"modules/NgxTinynodesComponentsModule.html":{},"interfaces/NgxTinynodesMatFieldComponent.html":{},"components/NgxTinynodesMatJsonOutputComponent.html":{},"modules/NgxTinynodesMatJsonOutputModule.html":{},"modules/NgxTinynodesMatTagInputModule.html":{},"modules/NgxTinynodesMaterialFormFieldDemo.html":{},"components/NgxTinynodesMaterialFormFieldDemoComponent.html":{},"interfaces/Page.html":{},"interfaces/PageBlock.html":{},"components/PageContainerComponent.html":{},"modules/PageStoreModule.html":{},"injectables/PagesQuery.html":{},"injectables/PagesService.html":{},"interfaces/PagesState.html":{},"injectables/PagesStore.html":{},"modules/PluginCodeModule.html":{},"interfaces/PluginConfig.html":{},"interfaces/PluginConfigMap.html":{},"modules/PluginEmbedModule.html":{},"modules/PluginHeaderModule.html":{},"modules/PluginImageModule.html":{},"modules/PluginInlineCodeModule.html":{},"modules/PluginLinkModule.html":{},"modules/PluginListModule.html":{},"modules/PluginMarkerModule.html":{},"modules/PluginParagraphModule.html":{},"modules/PluginQuoteModule.html":{},"modules/PluginSimpleImageModule.html":{},"modules/PluginWarningModule.html":{},"interfaces/ReadyMap.html":{},"interfaces/SavedMap.html":{},"interfaces/Tag.html":{},"interfaces/ToolSettingsMap.html":{}}}],["import('./demos/material",{"_index":1818,"title":{},"body":{"miscellaneous/variables.html":{}}}],["imported",{"_index":1707,"title":{},"body":{"index.html":{}}}],["importing",{"_index":1046,"title":{},"body":{"modules/NgxEditorjsPluginsModule.html":{}}}],["imports",{"_index":572,"title":{},"body":{"modules/NgxEditorJSDemoMaterialModule.html":{},"modules/NgxEditorJSModule.html":{},"modules/NgxEditorjsDemoModule.html":{},"modules/NgxEditorjsPluginsModule.html":{},"modules/NgxTinynodesComponentsModule.html":{},"modules/NgxTinynodesMatJsonOutputModule.html":{},"modules/NgxTinynodesMatTagInputModule.html":{},"modules/NgxTinynodesMaterialFormFieldDemo.html":{}}}],["improved",{"_index":1412,"title":{},"body":{"changelog.html":{}}}],["improvements",{"_index":1403,"title":{},"body":{"changelog.html":{}}}],["inappropriate",{"_index":1563,"title":{},"body":{"contributing.html":{}}}],["incident",{"_index":1631,"title":{},"body":{"contributing.html":{}}}],["include",{"_index":166,"title":{},"body":{"interfaces/CreateEditorJSOptions.html":{},"injectables/NgxEditorJSPluginService.html":{},"modules/NgxEditorjsPluginsModule.html":{},"contributing.html":{}}}],["included",{"_index":1751,"title":{},"body":{"license.html":{}}}],["includelist",{"_index":796,"title":{},"body":{"injectables/NgxEditorJSPluginService.html":{}}}],["includelist.includes(key",{"_index":812,"title":{},"body":{"injectables/NgxEditorJSPluginService.html":{}}}],["includes",{"_index":1475,"title":{},"body":{"contributing.html":{}}}],["includetools",{"_index":705,"title":{},"body":{"directives/NgxEditorJSDirective.html":{}}}],["including",{"_index":1733,"title":{},"body":{"license.html":{}}}],["inclusive",{"_index":1526,"title":{},"body":{"contributing.html":{}}}],["increase",{"_index":1481,"title":{},"body":{"contributing.html":{}}}],["index",{"_index":13,"title":{"index.html":{}},"body":{"interfaces/Block.html":{},"interfaces/CreateEditorJSOptions.html":{},"interfaces/EditorJSChange.html":{},"interfaces/EditorJSClass.html":{},"interfaces/EditorJSInstanceConfig.html":{},"classes/FixedHeader.html":{},"interfaces/Header.html":{},"interfaces/HeaderBlock.html":{},"interfaces/Image.html":{},"interfaces/ImageBlock.html":{},"interfaces/InjectorApiCallOptions.html":{},"interfaces/InjectorApiCallResponse.html":{},"interfaces/InjectorMethodOption.html":{},"interfaces/List.html":{},"interfaces/ListBlock.html":{},"classes/MockEditorJS.html":{},"injectables/MockNgZone.html":{},"classes/MockPlugin.html":{},"interfaces/NgxEditorJSConfig.html":{},"directives/NgxEditorJSDirective.html":{},"interfaces/NgxEditorJSModuleConfig.html":{},"injectables/NgxEditorJSPluginService.html":{},"injectables/NgxEditorJSService.html":{},"components/NgxTinynodesMatJsonOutputComponent.html":{},"components/NgxTinynodesMaterialFormFieldDemoComponent.html":{},"interfaces/Page.html":{},"interfaces/PageBlock.html":{},"components/PageContainerComponent.html":{},"injectables/PagesService.html":{},"interfaces/Paragraph.html":{},"interfaces/ParagraphBlock.html":{},"interfaces/PluginConfig.html":{},"interfaces/Tag.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["indexable",{"_index":16,"title":{},"body":{"interfaces/Block.html":{},"interfaces/BlockData.html":{},"interfaces/ChangeMap.html":{},"interfaces/EditorMap.html":{},"interfaces/PluginConfigMap.html":{},"interfaces/ReadyMap.html":{},"interfaces/SavedMap.html":{},"interfaces/ToolSettingsMap.html":{}}}],["individual",{"_index":1048,"title":{},"body":{"modules/NgxEditorjsPluginsModule.html":{},"contributing.html":{}}}],["info",{"_index":3,"title":{},"body":{"interfaces/Block.html":{},"interfaces/BlockData.html":{},"interfaces/ChangeMap.html":{},"interfaces/CreateEditorJSOptions.html":{},"interfaces/EditorJSChange.html":{},"interfaces/EditorJSClass.html":{},"interfaces/EditorJSInstanceConfig.html":{},"interfaces/EditorJSMaterialForm.html":{},"interfaces/EditorMap.html":{},"classes/FixedHeader.html":{},"interfaces/Header.html":{},"interfaces/HeaderBlock.html":{},"interfaces/Image.html":{},"interfaces/ImageBlock.html":{},"interfaces/InjectorApiCallOptions.html":{},"interfaces/InjectorApiCallResponse.html":{},"interfaces/InjectorMethodOption.html":{},"interfaces/List.html":{},"interfaces/ListBlock.html":{},"classes/MockEditorJS.html":{},"injectables/MockNgZone.html":{},"classes/MockPlugin.html":{},"interfaces/NgxEditorJSConfig.html":{},"components/NgxEditorJSDemoHomeComponent.html":{},"modules/NgxEditorJSDemoMaterialModule.html":{},"directives/NgxEditorJSDirective.html":{},"modules/NgxEditorJSModule.html":{},"interfaces/NgxEditorJSModuleConfig.html":{},"injectables/NgxEditorJSPluginService.html":{},"modules/NgxEditorJSPluginServiceModule.html":{},"injectables/NgxEditorJSService.html":{},"modules/NgxEditorjsDemoModule.html":{},"modules/NgxEditorjsPluginsModule.html":{},"modules/NgxTinynodesComponentsModule.html":{},"interfaces/NgxTinynodesMatFieldComponent.html":{},"components/NgxTinynodesMatJsonOutputComponent.html":{},"modules/NgxTinynodesMatJsonOutputModule.html":{},"modules/NgxTinynodesMatTagInputModule.html":{},"modules/NgxTinynodesMaterialFormFieldDemo.html":{},"components/NgxTinynodesMaterialFormFieldDemoComponent.html":{},"interfaces/Page.html":{},"interfaces/PageBlock.html":{},"components/PageContainerComponent.html":{},"modules/PageStoreModule.html":{},"injectables/PagesQuery.html":{},"injectables/PagesService.html":{},"interfaces/PagesState.html":{},"injectables/PagesStore.html":{},"interfaces/Paragraph.html":{},"interfaces/ParagraphBlock.html":{},"modules/PluginCodeModule.html":{},"interfaces/PluginConfig.html":{},"interfaces/PluginConfigMap.html":{},"modules/PluginEmbedModule.html":{},"modules/PluginHeaderModule.html":{},"modules/PluginImageModule.html":{},"modules/PluginInlineCodeModule.html":{},"modules/PluginLinkModule.html":{},"modules/PluginListModule.html":{},"modules/PluginMarkerModule.html":{},"modules/PluginParagraphModule.html":{},"modules/PluginQuoteModule.html":{},"modules/PluginSimpleImageModule.html":{},"modules/PluginWarningModule.html":{},"interfaces/ReadyMap.html":{},"interfaces/SavedMap.html":{},"interfaces/Tag.html":{},"interfaces/ToolSettingsMap.html":{}}}],["information",{"_index":178,"title":{},"body":{"interfaces/EditorJSClass.html":{},"interfaces/EditorJSInstanceConfig.html":{},"interfaces/InjectorApiCallOptions.html":{},"interfaces/InjectorApiCallResponse.html":{},"interfaces/InjectorMethodOption.html":{},"injectables/NgxEditorJSService.html":{},"contributing.html":{},"index.html":{}}}],["init",{"_index":1148,"title":{},"body":{"components/NgxTinynodesMaterialFormFieldDemoComponent.html":{},"components/PageContainerComponent.html":{}}}],["initial",{"_index":122,"title":{},"body":{"interfaces/BlockData.html":{},"interfaces/NgxEditorJSConfig.html":{},"directives/NgxEditorJSDirective.html":{},"interfaces/NgxEditorJSModuleConfig.html":{},"components/NgxTinynodesMaterialFormFieldDemoComponent.html":{},"components/PageContainerComponent.html":{},"interfaces/PluginConfig.html":{},"interfaces/PluginConfigMap.html":{},"interfaces/ToolSettingsMap.html":{},"miscellaneous/variables.html":{}}}],["initialblock",{"_index":473,"title":{},"body":{"interfaces/NgxEditorJSConfig.html":{},"directives/NgxEditorJSDirective.html":{},"interfaces/NgxEditorJSModuleConfig.html":{}}}],["initialized",{"_index":601,"title":{},"body":{"directives/NgxEditorJSDirective.html":{},"injectables/NgxEditorJSPluginService.html":{},"injectables/NgxEditorJSService.html":{}}}],["inject",{"_index":777,"title":{},"body":{"injectables/NgxEditorJSPluginService.html":{},"injectables/NgxEditorJSService.html":{}}}],["inject(editorjsinstance",{"_index":903,"title":{},"body":{"injectables/NgxEditorJSService.html":{}}}],["inject(ngx_editorjs_config",{"_index":904,"title":{},"body":{"injectables/NgxEditorJSService.html":{}}}],["injectable",{"_index":443,"title":{"injectables/MockNgZone.html":{},"injectables/NgxEditorJSPluginService.html":{},"injectables/NgxEditorJSService.html":{},"injectables/PagesQuery.html":{},"injectables/PagesService.html":{},"injectables/PagesStore.html":{}},"body":{"injectables/MockNgZone.html":{},"injectables/NgxEditorJSPluginService.html":{},"injectables/NgxEditorJSService.html":{},"injectables/PagesQuery.html":{},"injectables/PagesService.html":{},"interfaces/PagesState.html":{},"injectables/PagesStore.html":{}}}],["injectables",{"_index":445,"title":{},"body":{"injectables/MockNgZone.html":{},"injectables/NgxEditorJSPluginService.html":{},"injectables/NgxEditorJSService.html":{},"injectables/PagesQuery.html":{},"injectables/PagesService.html":{},"injectables/PagesStore.html":{},"overview.html":{}}}],["injected",{"_index":169,"title":{},"body":{"interfaces/EditorJSClass.html":{},"interfaces/EditorJSInstanceConfig.html":{},"interfaces/InjectorApiCallOptions.html":{},"interfaces/InjectorApiCallResponse.html":{},"interfaces/InjectorMethodOption.html":{},"interfaces/NgxEditorJSConfig.html":{},"interfaces/NgxEditorJSModuleConfig.html":{},"injectables/NgxEditorJSPluginService.html":{},"injectables/NgxEditorJSService.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["injecting",{"_index":495,"title":{},"body":{"interfaces/NgxEditorJSConfig.html":{},"interfaces/NgxEditorJSModuleConfig.html":{},"changelog.html":{},"miscellaneous/variables.html":{}}}],["injection",{"_index":120,"title":{},"body":{"interfaces/BlockData.html":{},"interfaces/EditorJSClass.html":{},"interfaces/EditorJSInstanceConfig.html":{},"interfaces/InjectorApiCallOptions.html":{},"interfaces/InjectorApiCallResponse.html":{},"interfaces/InjectorMethodOption.html":{},"interfaces/NgxEditorJSConfig.html":{},"interfaces/NgxEditorJSModuleConfig.html":{},"interfaces/PluginConfig.html":{},"interfaces/PluginConfigMap.html":{},"interfaces/ToolSettingsMap.html":{},"miscellaneous/variables.html":{}}}],["injectiontoken",{"_index":72,"title":{},"body":{"interfaces/BlockData.html":{},"interfaces/EditorJSClass.html":{},"interfaces/EditorJSInstanceConfig.html":{},"interfaces/InjectorApiCallOptions.html":{},"interfaces/InjectorApiCallResponse.html":{},"interfaces/InjectorMethodOption.html":{},"interfaces/NgxEditorJSConfig.html":{},"interfaces/NgxEditorJSModuleConfig.html":{},"interfaces/PluginConfig.html":{},"interfaces/PluginConfigMap.html":{},"interfaces/ToolSettingsMap.html":{}}}],["injectiontoken('editior_js_instance",{"_index":501,"title":{},"body":{"interfaces/NgxEditorJSConfig.html":{},"interfaces/NgxEditorJSModuleConfig.html":{},"miscellaneous/variables.html":{}}}],["injectiontoken('editor_js_tool_injector",{"_index":128,"title":{},"body":{"interfaces/BlockData.html":{},"interfaces/PluginConfig.html":{},"interfaces/PluginConfigMap.html":{},"interfaces/ToolSettingsMap.html":{},"miscellaneous/variables.html":{}}}],["injectiontoken('editorjs_module_import",{"_index":199,"title":{},"body":{"interfaces/EditorJSClass.html":{},"interfaces/EditorJSInstanceConfig.html":{},"interfaces/InjectorApiCallOptions.html":{},"interfaces/InjectorApiCallResponse.html":{},"interfaces/InjectorMethodOption.html":{},"miscellaneous/variables.html":{}}}],["injectiontoken('editorjsinstance",{"_index":202,"title":{},"body":{"interfaces/EditorJSClass.html":{},"interfaces/EditorJSInstanceConfig.html":{},"interfaces/InjectorApiCallOptions.html":{},"interfaces/InjectorApiCallResponse.html":{},"interfaces/InjectorMethodOption.html":{},"miscellaneous/variables.html":{}}}],["injectiontoken('for_root_options_token",{"_index":498,"title":{},"body":{"interfaces/NgxEditorJSConfig.html":{},"interfaces/NgxEditorJSModuleConfig.html":{},"miscellaneous/variables.html":{}}}],["injectiontoken('ngx_editorjs_config",{"_index":494,"title":{},"body":{"interfaces/NgxEditorJSConfig.html":{},"interfaces/NgxEditorJSModuleConfig.html":{},"miscellaneous/variables.html":{}}}],["injectiontoken('plugin_config",{"_index":130,"title":{},"body":{"interfaces/BlockData.html":{},"interfaces/PluginConfig.html":{},"interfaces/PluginConfigMap.html":{},"interfaces/ToolSettingsMap.html":{},"miscellaneous/variables.html":{}}}],["injectiontoken('pluginclasses",{"_index":135,"title":{},"body":{"interfaces/BlockData.html":{},"interfaces/PluginConfig.html":{},"interfaces/PluginConfigMap.html":{},"interfaces/ToolSettingsMap.html":{},"miscellaneous/variables.html":{}}}],["injector",{"_index":200,"title":{},"body":{"interfaces/EditorJSClass.html":{},"interfaces/EditorJSInstanceConfig.html":{},"interfaces/InjectorApiCallOptions.html":{},"interfaces/InjectorApiCallResponse.html":{},"interfaces/InjectorMethodOption.html":{},"changelog.html":{},"miscellaneous/variables.html":{}}}],["injectorapicalloptions",{"_index":209,"title":{"interfaces/InjectorApiCallOptions.html":{}},"body":{"interfaces/EditorJSClass.html":{},"interfaces/EditorJSInstanceConfig.html":{},"interfaces/InjectorApiCallOptions.html":{},"interfaces/InjectorApiCallResponse.html":{},"interfaces/InjectorMethodOption.html":{},"injectables/NgxEditorJSService.html":{}}}],["injectorapicallresponse",{"_index":212,"title":{"interfaces/InjectorApiCallResponse.html":{}},"body":{"interfaces/EditorJSClass.html":{},"interfaces/EditorJSInstanceConfig.html":{},"interfaces/InjectorApiCallOptions.html":{},"interfaces/InjectorApiCallResponse.html":{},"interfaces/InjectorMethodOption.html":{},"injectables/NgxEditorJSService.html":{}}}],["injectormethodoption",{"_index":203,"title":{"interfaces/InjectorMethodOption.html":{}},"body":{"interfaces/EditorJSClass.html":{},"interfaces/EditorJSInstanceConfig.html":{},"interfaces/InjectorApiCallOptions.html":{},"interfaces/InjectorApiCallResponse.html":{},"interfaces/InjectorMethodOption.html":{},"injectables/NgxEditorJSService.html":{}}}],["inline",{"_index":81,"title":{},"body":{"interfaces/BlockData.html":{},"injectables/NgxEditorJSPluginService.html":{},"modules/NgxEditorjsPluginsModule.html":{},"interfaces/PluginConfig.html":{},"interfaces/PluginConfigMap.html":{},"modules/PluginInlineCodeModule.html":{},"interfaces/ToolSettingsMap.html":{},"miscellaneous/enumerations.html":{}}}],["inlinecode",{"_index":1353,"title":{},"body":{"modules/PluginInlineCodeModule.html":{}}}],["inlinetoolbar",{"_index":115,"title":{},"body":{"interfaces/BlockData.html":{},"interfaces/PluginConfig.html":{},"interfaces/PluginConfigMap.html":{},"modules/PluginEmbedModule.html":{},"modules/PluginQuoteModule.html":{},"modules/PluginWarningModule.html":{},"interfaces/ToolSettingsMap.html":{}}}],["input",{"_index":232,"title":{},"body":{"interfaces/EditorJSMaterialForm.html":{},"classes/FixedHeader.html":{},"directives/NgxEditorJSDirective.html":{},"components/NgxTinynodesMatJsonOutputComponent.html":{},"components/NgxTinynodesMaterialFormFieldDemoComponent.html":{},"modules/PluginHeaderModule.html":{},"todo.html":{}}}],["input'},{'name",{"_index":543,"title":{},"body":{"components/NgxEditorJSDemoHomeComponent.html":{},"components/NgxTinynodesMatJsonOutputComponent.html":{},"components/NgxTinynodesMaterialFormFieldDemoComponent.html":{},"components/PageContainerComponent.html":{}}}],["input('disabled",{"_index":308,"title":{},"body":{"interfaces/EditorJSMaterialForm.html":{}}}],["input('focused",{"_index":295,"title":{},"body":{"interfaces/EditorJSMaterialForm.html":{}}}],["input('placeholder",{"_index":290,"title":{},"body":{"interfaces/EditorJSMaterialForm.html":{}}}],["input('required",{"_index":302,"title":{},"body":{"interfaces/EditorJSMaterialForm.html":{}}}],["input('value",{"_index":283,"title":{},"body":{"interfaces/EditorJSMaterialForm.html":{}}}],["input.component",{"_index":1108,"title":{},"body":{"modules/NgxTinynodesMatTagInputModule.html":{}}}],["input.component.ts",{"_index":1808,"title":{},"body":{"miscellaneous/variables.html":{}}}],["input.module",{"_index":1077,"title":{},"body":{"modules/NgxTinynodesComponentsModule.html":{}}}],["input.module.ts",{"_index":1107,"title":{},"body":{"modules/NgxTinynodesMatTagInputModule.html":{}}}],["input/mat",{"_index":1076,"title":{},"body":{"modules/NgxTinynodesComponentsModule.html":{},"modules/NgxTinynodesMatTagInputModule.html":{},"miscellaneous/variables.html":{}}}],["inputconfig",{"_index":1688,"title":{},"body":{"miscellaneous/functions.html":{}}}],["inputs",{"_index":584,"title":{},"body":{"directives/NgxEditorJSDirective.html":{},"components/NgxTinynodesMatJsonOutputComponent.html":{},"components/NgxTinynodesMaterialFormFieldDemoComponent.html":{}}}],["inside",{"_index":364,"title":{},"body":{"interfaces/EditorJSMaterialForm.html":{},"directives/NgxEditorJSDirective.html":{},"index.html":{}}}],["install",{"_index":1471,"title":{},"body":{"contributing.html":{},"dependencies.html":{}}}],["instance",{"_index":142,"title":{},"body":{"interfaces/ChangeMap.html":{},"interfaces/EditorJSChange.html":{},"interfaces/EditorJSClass.html":{},"interfaces/EditorJSInstanceConfig.html":{},"interfaces/EditorJSMaterialForm.html":{},"interfaces/EditorMap.html":{},"interfaces/InjectorApiCallOptions.html":{},"interfaces/InjectorApiCallResponse.html":{},"interfaces/InjectorMethodOption.html":{},"interfaces/NgxEditorJSConfig.html":{},"components/NgxEditorJSDemoHomeComponent.html":{},"directives/NgxEditorJSDirective.html":{},"modules/NgxEditorJSModule.html":{},"interfaces/NgxEditorJSModuleConfig.html":{},"injectables/NgxEditorJSService.html":{},"components/NgxTinynodesMatJsonOutputComponent.html":{},"components/NgxTinynodesMaterialFormFieldDemoComponent.html":{},"components/PageContainerComponent.html":{},"interfaces/ReadyMap.html":{},"interfaces/SavedMap.html":{},"changelog.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["instances",{"_index":147,"title":{},"body":{"interfaces/ChangeMap.html":{},"interfaces/EditorJSChange.html":{},"interfaces/EditorMap.html":{},"injectables/NgxEditorJSService.html":{},"interfaces/ReadyMap.html":{},"interfaces/SavedMap.html":{},"changelog.html":{},"contributing.html":{},"index.html":{}}}],["insulting/derogatory",{"_index":1551,"title":{},"body":{"contributing.html":{}}}],["interact",{"_index":1704,"title":{},"body":{"index.html":{}}}],["interactions",{"_index":1469,"title":{},"body":{"contributing.html":{}}}],["interest",{"_index":1495,"title":{},"body":{"contributing.html":{}}}],["interface",{"_index":0,"title":{"interfaces/Block.html":{},"interfaces/BlockData.html":{},"interfaces/ChangeMap.html":{},"interfaces/CreateEditorJSOptions.html":{},"interfaces/EditorJSChange.html":{},"interfaces/EditorJSClass.html":{},"interfaces/EditorJSInstanceConfig.html":{},"interfaces/EditorJSMaterialForm.html":{},"interfaces/EditorMap.html":{},"interfaces/Header.html":{},"interfaces/HeaderBlock.html":{},"interfaces/Image.html":{},"interfaces/ImageBlock.html":{},"interfaces/InjectorApiCallOptions.html":{},"interfaces/InjectorApiCallResponse.html":{},"interfaces/InjectorMethodOption.html":{},"interfaces/List.html":{},"interfaces/ListBlock.html":{},"interfaces/NgxEditorJSConfig.html":{},"interfaces/NgxEditorJSModuleConfig.html":{},"interfaces/NgxTinynodesMatFieldComponent.html":{},"interfaces/Page.html":{},"interfaces/PageBlock.html":{},"interfaces/PagesState.html":{},"interfaces/Paragraph.html":{},"interfaces/ParagraphBlock.html":{},"interfaces/PluginConfig.html":{},"interfaces/PluginConfigMap.html":{},"interfaces/ReadyMap.html":{},"interfaces/SavedMap.html":{},"interfaces/Tag.html":{},"interfaces/ToolSettingsMap.html":{}},"body":{"interfaces/Block.html":{},"interfaces/BlockData.html":{},"interfaces/ChangeMap.html":{},"interfaces/CreateEditorJSOptions.html":{},"interfaces/EditorJSChange.html":{},"interfaces/EditorJSClass.html":{},"interfaces/EditorJSInstanceConfig.html":{},"interfaces/EditorJSMaterialForm.html":{},"interfaces/EditorMap.html":{},"interfaces/Header.html":{},"interfaces/HeaderBlock.html":{},"interfaces/Image.html":{},"interfaces/ImageBlock.html":{},"interfaces/InjectorApiCallOptions.html":{},"interfaces/InjectorApiCallResponse.html":{},"interfaces/InjectorMethodOption.html":{},"interfaces/List.html":{},"interfaces/ListBlock.html":{},"interfaces/NgxEditorJSConfig.html":{},"interfaces/NgxEditorJSModuleConfig.html":{},"interfaces/NgxTinynodesMatFieldComponent.html":{},"interfaces/Page.html":{},"interfaces/PageBlock.html":{},"interfaces/PagesState.html":{},"injectables/PagesStore.html":{},"interfaces/Paragraph.html":{},"interfaces/ParagraphBlock.html":{},"interfaces/PluginConfig.html":{},"interfaces/PluginConfigMap.html":{},"interfaces/ReadyMap.html":{},"interfaces/SavedMap.html":{},"interfaces/Tag.html":{},"interfaces/ToolSettingsMap.html":{},"changelog.html":{},"contributing.html":{},"index.html":{}}}],["interfaces",{"_index":2,"title":{},"body":{"interfaces/Block.html":{},"interfaces/BlockData.html":{},"interfaces/ChangeMap.html":{},"interfaces/CreateEditorJSOptions.html":{},"interfaces/EditorJSChange.html":{},"interfaces/EditorJSClass.html":{},"interfaces/EditorJSInstanceConfig.html":{},"interfaces/EditorJSMaterialForm.html":{},"interfaces/EditorMap.html":{},"interfaces/Header.html":{},"interfaces/HeaderBlock.html":{},"interfaces/Image.html":{},"interfaces/ImageBlock.html":{},"interfaces/InjectorApiCallOptions.html":{},"interfaces/InjectorApiCallResponse.html":{},"interfaces/InjectorMethodOption.html":{},"interfaces/List.html":{},"interfaces/ListBlock.html":{},"interfaces/NgxEditorJSConfig.html":{},"interfaces/NgxEditorJSModuleConfig.html":{},"interfaces/NgxTinynodesMatFieldComponent.html":{},"interfaces/Page.html":{},"interfaces/PageBlock.html":{},"interfaces/PagesState.html":{},"interfaces/Paragraph.html":{},"interfaces/ParagraphBlock.html":{},"interfaces/PluginConfig.html":{},"interfaces/PluginConfigMap.html":{},"interfaces/ReadyMap.html":{},"interfaces/SavedMap.html":{},"interfaces/Tag.html":{},"interfaces/ToolSettingsMap.html":{},"overview.html":{}}}],["interfaces/pluginconfig.html",{"_index":802,"title":{},"body":{"injectables/NgxEditorJSPluginService.html":{}}}],["internal",{"_index":191,"title":{},"body":{"interfaces/EditorJSClass.html":{},"interfaces/EditorJSInstanceConfig.html":{},"interfaces/EditorJSMaterialForm.html":{},"interfaces/InjectorApiCallOptions.html":{},"interfaces/InjectorApiCallResponse.html":{},"interfaces/InjectorMethodOption.html":{},"interfaces/NgxEditorJSConfig.html":{},"interfaces/NgxEditorJSModuleConfig.html":{},"injectables/NgxEditorJSService.html":{},"components/NgxTinynodesMaterialFormFieldDemoComponent.html":{},"components/PageContainerComponent.html":{},"modules/PageStoreModule.html":{},"miscellaneous/variables.html":{}}}],["internally",{"_index":1399,"title":{},"body":{"changelog.html":{}}}],["investigated",{"_index":1622,"title":{},"body":{"contributing.html":{}}}],["isfocused",{"_index":588,"title":{},"body":{"directives/NgxEditorJSDirective.html":{}}}],["isready",{"_index":419,"title":{},"body":{"classes/MockEditorJS.html":{},"classes/MockPlugin.html":{},"directives/NgxEditorJSDirective.html":{},"injectables/NgxEditorJSService.html":{}}}],["isready(options",{"_index":878,"title":{},"body":{"injectables/NgxEditorJSService.html":{}}}],["isreadymap",{"_index":196,"title":{},"body":{"interfaces/EditorJSClass.html":{},"interfaces/EditorJSInstanceConfig.html":{},"interfaces/InjectorApiCallOptions.html":{},"interfaces/InjectorApiCallResponse.html":{},"interfaces/InjectorMethodOption.html":{},"injectables/NgxEditorJSService.html":{},"miscellaneous/variables.html":{}}}],["issue",{"_index":1463,"title":{},"body":{"contributing.html":{}}}],["issues",{"_index":1440,"title":{},"body":{"changelog.html":{},"contributing.html":{}}}],["istouched",{"_index":589,"title":{},"body":{"directives/NgxEditorJSDirective.html":{}}}],["it's",{"_index":652,"title":{},"body":{"directives/NgxEditorJSDirective.html":{},"injectables/NgxEditorJSPluginService.html":{},"injectables/NgxEditorJSService.html":{}}}],["items",{"_index":36,"title":{},"body":{"interfaces/Block.html":{},"interfaces/Header.html":{},"interfaces/HeaderBlock.html":{},"interfaces/Image.html":{},"interfaces/ImageBlock.html":{},"interfaces/List.html":{},"interfaces/ListBlock.html":{},"interfaces/Paragraph.html":{},"interfaces/ParagraphBlock.html":{}}}],["js",{"_index":800,"title":{},"body":{"injectables/NgxEditorJSPluginService.html":{},"dependencies.html":{},"miscellaneous/variables.html":{}}}],["js/code",{"_index":1342,"title":{},"body":{"modules/PluginCodeModule.html":{}}}],["js/header",{"_index":412,"title":{},"body":{"classes/FixedHeader.html":{},"modules/PluginHeaderModule.html":{}}}],["js/image",{"_index":1350,"title":{},"body":{"modules/PluginImageModule.html":{},"modules/PluginLinkModule.html":{},"modules/PluginListModule.html":{},"modules/PluginSimpleImageModule.html":{}}}],["js/paragraph",{"_index":1347,"title":{},"body":{"modules/PluginEmbedModule.html":{},"modules/PluginInlineCodeModule.html":{},"modules/PluginMarkerModule.html":{},"modules/PluginParagraphModule.html":{},"modules/PluginQuoteModule.html":{},"modules/PluginWarningModule.html":{}}}],["json",{"_index":539,"title":{},"body":{"components/NgxEditorJSDemoHomeComponent.html":{},"modules/NgxEditorjsDemoModule.html":{},"modules/NgxTinynodesComponentsModule.html":{},"components/NgxTinynodesMatJsonOutputComponent.html":{},"modules/NgxTinynodesMatJsonOutputModule.html":{},"modules/NgxTinynodesMaterialFormFieldDemo.html":{},"components/NgxTinynodesMaterialFormFieldDemoComponent.html":{},"components/PageContainerComponent.html":{},"dependencies.html":{}}}],["json.stringify(blocks",{"_index":1266,"title":{},"body":{"components/PageContainerComponent.html":{}}}],["json.stringify(changes.blocks.currentvalue",{"_index":698,"title":{},"body":{"directives/NgxEditorJSDirective.html":{}}}],["json.stringify(changes.blocks.previousvalue",{"_index":697,"title":{},"body":{"directives/NgxEditorJSDirective.html":{}}}],["key",{"_index":17,"title":{},"body":{"interfaces/Block.html":{},"interfaces/BlockData.html":{},"interfaces/ChangeMap.html":{},"interfaces/EditorJSChange.html":{},"interfaces/EditorMap.html":{},"classes/FixedHeader.html":{},"interfaces/Header.html":{},"interfaces/HeaderBlock.html":{},"interfaces/Image.html":{},"interfaces/ImageBlock.html":{},"interfaces/List.html":{},"interfaces/ListBlock.html":{},"injectables/NgxEditorJSPluginService.html":{},"interfaces/Page.html":{},"interfaces/PageBlock.html":{},"interfaces/Paragraph.html":{},"interfaces/ParagraphBlock.html":{},"modules/PluginCodeModule.html":{},"interfaces/PluginConfig.html":{},"interfaces/PluginConfigMap.html":{},"modules/PluginEmbedModule.html":{},"modules/PluginHeaderModule.html":{},"modules/PluginImageModule.html":{},"modules/PluginInlineCodeModule.html":{},"modules/PluginLinkModule.html":{},"modules/PluginListModule.html":{},"modules/PluginMarkerModule.html":{},"modules/PluginParagraphModule.html":{},"modules/PluginQuoteModule.html":{},"modules/PluginSimpleImageModule.html":{},"modules/PluginWarningModule.html":{},"interfaces/ReadyMap.html":{},"interfaces/SavedMap.html":{},"interfaces/Tag.html":{},"interfaces/ToolSettingsMap.html":{}}}],["keys",{"_index":620,"title":{},"body":{"directives/NgxEditorJSDirective.html":{},"miscellaneous/functions.html":{}}}],["kind",{"_index":1755,"title":{},"body":{"license.html":{}}}],["label",{"_index":102,"title":{},"body":{"interfaces/BlockData.html":{},"interfaces/EditorJSMaterialForm.html":{},"interfaces/PluginConfig.html":{},"interfaces/PluginConfigMap.html":{},"interfaces/ToolSettingsMap.html":{}}}],["language",{"_index":1527,"title":{},"body":{"contributing.html":{}}}],["last",{"_index":140,"title":{},"body":{"interfaces/ChangeMap.html":{},"interfaces/EditorJSChange.html":{},"interfaces/EditorMap.html":{},"interfaces/NgxEditorJSConfig.html":{},"directives/NgxEditorJSDirective.html":{},"interfaces/NgxEditorJSModuleConfig.html":{},"components/PageContainerComponent.html":{},"interfaces/ReadyMap.html":{},"interfaces/SavedMap.html":{}}}],["lastchange",{"_index":716,"title":{},"body":{"directives/NgxEditorJSDirective.html":{},"injectables/NgxEditorJSService.html":{},"components/NgxTinynodesMaterialFormFieldDemoComponent.html":{}}}],["lastchange(options",{"_index":880,"title":{},"body":{"injectables/NgxEditorJSService.html":{}}}],["lastchangemap",{"_index":193,"title":{},"body":{"interfaces/EditorJSClass.html":{},"interfaces/EditorJSInstanceConfig.html":{},"interfaces/InjectorApiCallOptions.html":{},"interfaces/InjectorApiCallResponse.html":{},"interfaces/InjectorMethodOption.html":{},"injectables/NgxEditorJSService.html":{},"miscellaneous/variables.html":{}}}],["layer",{"_index":1473,"title":{},"body":{"contributing.html":{}}}],["layout",{"_index":1657,"title":{},"body":{"dependencies.html":{}}}],["leadership",{"_index":1644,"title":{},"body":{"contributing.html":{}}}],["legend",{"_index":527,"title":{},"body":{"components/NgxEditorJSDemoHomeComponent.html":{},"modules/NgxEditorJSModule.html":{},"modules/NgxEditorJSPluginServiceModule.html":{},"modules/NgxEditorjsDemoModule.html":{},"modules/NgxEditorjsPluginsModule.html":{},"modules/NgxTinynodesComponentsModule.html":{},"components/NgxTinynodesMatJsonOutputComponent.html":{},"modules/NgxTinynodesMatJsonOutputModule.html":{},"modules/NgxTinynodesMatTagInputModule.html":{},"modules/NgxTinynodesMaterialFormFieldDemo.html":{},"components/NgxTinynodesMaterialFormFieldDemoComponent.html":{},"components/PageContainerComponent.html":{},"modules/PageStoreModule.html":{},"overview.html":{}}}],["level",{"_index":45,"title":{},"body":{"interfaces/Block.html":{},"interfaces/Header.html":{},"interfaces/HeaderBlock.html":{},"interfaces/Image.html":{},"interfaces/ImageBlock.html":{},"interfaces/List.html":{},"interfaces/ListBlock.html":{},"interfaces/Paragraph.html":{},"interfaces/ParagraphBlock.html":{},"changelog.html":{},"contributing.html":{}}}],["liability",{"_index":1770,"title":{},"body":{"license.html":{}}}],["liable",{"_index":1767,"title":{},"body":{"license.html":{}}}],["lib/types/config",{"_index":428,"title":{},"body":{"classes/MockEditorJS.html":{},"classes/MockPlugin.html":{}}}],["libraries",{"_index":1384,"title":{},"body":{"changelog.html":{},"index.html":{}}}],["library",{"_index":1386,"title":{},"body":{"changelog.html":{},"index.html":{},"todo.html":{}}}],["libs/.../blocks.ts",{"_index":1796,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["libs/.../config.ts",{"_index":1800,"title":{},"body":{"miscellaneous/variables.html":{}}}],["libs/.../editor",{"_index":1680,"title":{},"body":{"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["libs/.../editorjs",{"_index":1803,"title":{},"body":{"miscellaneous/variables.html":{}}}],["libs/.../editorjs.component.ts",{"_index":1802,"title":{},"body":{"miscellaneous/variables.html":{}}}],["libs/.../injector.ts",{"_index":1804,"title":{},"body":{"miscellaneous/variables.html":{}}}],["libs/.../mat",{"_index":1807,"title":{},"body":{"miscellaneous/variables.html":{}}}],["libs/.../module",{"_index":1683,"title":{},"body":{"miscellaneous/functions.html":{}}}],["libs/.../ngx",{"_index":1682,"title":{},"body":{"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["libs/.../plugin.ts",{"_index":1684,"title":{},"body":{"miscellaneous/functions.html":{}}}],["libs/.../plugins.ts",{"_index":1678,"title":{},"body":{"miscellaneous/enumerations.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["libs/.../test.ts",{"_index":1798,"title":{},"body":{"miscellaneous/variables.html":{}}}],["libs/ngx",{"_index":6,"title":{},"body":{"interfaces/Block.html":{},"interfaces/BlockData.html":{},"interfaces/ChangeMap.html":{},"interfaces/CreateEditorJSOptions.html":{},"interfaces/EditorJSChange.html":{},"interfaces/EditorJSClass.html":{},"interfaces/EditorJSInstanceConfig.html":{},"interfaces/EditorJSMaterialForm.html":{},"interfaces/EditorMap.html":{},"classes/FixedHeader.html":{},"interfaces/Header.html":{},"interfaces/HeaderBlock.html":{},"interfaces/Image.html":{},"interfaces/ImageBlock.html":{},"interfaces/InjectorApiCallOptions.html":{},"interfaces/InjectorApiCallResponse.html":{},"interfaces/InjectorMethodOption.html":{},"interfaces/List.html":{},"interfaces/ListBlock.html":{},"classes/MockEditorJS.html":{},"injectables/MockNgZone.html":{},"classes/MockPlugin.html":{},"interfaces/NgxEditorJSConfig.html":{},"components/NgxEditorJSDemoHomeComponent.html":{},"modules/NgxEditorJSDemoMaterialModule.html":{},"directives/NgxEditorJSDirective.html":{},"modules/NgxEditorJSModule.html":{},"interfaces/NgxEditorJSModuleConfig.html":{},"injectables/NgxEditorJSPluginService.html":{},"modules/NgxEditorJSPluginServiceModule.html":{},"injectables/NgxEditorJSService.html":{},"modules/NgxEditorjsDemoModule.html":{},"modules/NgxEditorjsPluginsModule.html":{},"modules/NgxTinynodesComponentsModule.html":{},"interfaces/NgxTinynodesMatFieldComponent.html":{},"components/NgxTinynodesMatJsonOutputComponent.html":{},"modules/NgxTinynodesMatJsonOutputModule.html":{},"modules/NgxTinynodesMatTagInputModule.html":{},"modules/NgxTinynodesMaterialFormFieldDemo.html":{},"components/NgxTinynodesMaterialFormFieldDemoComponent.html":{},"interfaces/Page.html":{},"interfaces/PageBlock.html":{},"components/PageContainerComponent.html":{},"modules/PageStoreModule.html":{},"injectables/PagesQuery.html":{},"injectables/PagesService.html":{},"interfaces/PagesState.html":{},"injectables/PagesStore.html":{},"interfaces/Paragraph.html":{},"interfaces/ParagraphBlock.html":{},"modules/PluginCodeModule.html":{},"interfaces/PluginConfig.html":{},"interfaces/PluginConfigMap.html":{},"modules/PluginEmbedModule.html":{},"modules/PluginHeaderModule.html":{},"modules/PluginImageModule.html":{},"modules/PluginInlineCodeModule.html":{},"modules/PluginLinkModule.html":{},"modules/PluginListModule.html":{},"modules/PluginMarkerModule.html":{},"modules/PluginParagraphModule.html":{},"modules/PluginQuoteModule.html":{},"modules/PluginSimpleImageModule.html":{},"modules/PluginWarningModule.html":{},"interfaces/ReadyMap.html":{},"interfaces/SavedMap.html":{},"interfaces/Tag.html":{},"interfaces/ToolSettingsMap.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["licence",{"_index":1721,"title":{},"body":{"license.html":{}}}],["license",{"_index":1718,"title":{"license.html":{}},"body":{}}],["life",{"_index":365,"title":{},"body":{"interfaces/EditorJSMaterialForm.html":{},"index.html":{}}}],["lifecycle",{"_index":359,"title":{},"body":{"interfaces/EditorJSMaterialForm.html":{},"injectables/NgxEditorJSService.html":{}}}],["limitation",{"_index":1734,"title":{},"body":{"license.html":{}}}],["limited",{"_index":1758,"title":{},"body":{"license.html":{}}}],["line:use",{"_index":358,"title":{},"body":{"interfaces/EditorJSMaterialForm.html":{}}}],["link",{"_index":107,"title":{},"body":{"interfaces/BlockData.html":{},"injectables/MockNgZone.html":{},"injectables/NgxEditorJSPluginService.html":{},"injectables/NgxEditorJSService.html":{},"interfaces/PluginConfig.html":{},"interfaces/PluginConfigMap.html":{},"modules/PluginLinkModule.html":{},"interfaces/ToolSettingsMap.html":{}}}],["links",{"_index":518,"title":{},"body":{"components/NgxEditorJSDemoHomeComponent.html":{},"components/NgxTinynodesMaterialFormFieldDemoComponent.html":{},"components/PageContainerComponent.html":{},"index.html":{}}}],["list",{"_index":26,"title":{"interfaces/List.html":{}},"body":{"interfaces/Block.html":{},"interfaces/Header.html":{},"interfaces/HeaderBlock.html":{},"interfaces/Image.html":{},"interfaces/ImageBlock.html":{},"interfaces/List.html":{},"interfaces/ListBlock.html":{},"modules/NgxEditorJSDemoMaterialModule.html":{},"injectables/NgxEditorJSPluginService.html":{},"components/NgxTinynodesMaterialFormFieldDemoComponent.html":{},"components/PageContainerComponent.html":{},"interfaces/Paragraph.html":{},"interfaces/ParagraphBlock.html":{},"modules/PluginListModule.html":{},"miscellaneous/typealiases.html":{}}}],["listblock",{"_index":39,"title":{"interfaces/ListBlock.html":{}},"body":{"interfaces/Block.html":{},"interfaces/Header.html":{},"interfaces/HeaderBlock.html":{},"interfaces/Image.html":{},"interfaces/ImageBlock.html":{},"interfaces/List.html":{},"interfaces/ListBlock.html":{},"interfaces/Paragraph.html":{},"interfaces/ParagraphBlock.html":{},"miscellaneous/typealiases.html":{}}}],["listener",{"_index":368,"title":{},"body":{"interfaces/EditorJSMaterialForm.html":{},"directives/NgxEditorJSDirective.html":{}}}],["listners",{"_index":646,"title":{},"body":{"directives/NgxEditorJSDirective.html":{}}}],["liststyle",{"_index":33,"title":{},"body":{"interfaces/Block.html":{},"interfaces/Header.html":{},"interfaces/HeaderBlock.html":{},"interfaces/Image.html":{},"interfaces/ImageBlock.html":{},"interfaces/List.html":{},"interfaces/ListBlock.html":{},"interfaces/Paragraph.html":{},"interfaces/ParagraphBlock.html":{},"miscellaneous/typealiases.html":{}}}],["loadchildren",{"_index":1817,"title":{},"body":{"miscellaneous/variables.html":{}}}],["loading",{"_index":1123,"title":{},"body":{"components/NgxTinynodesMaterialFormFieldDemoComponent.html":{}}}],["local",{"_index":913,"title":{},"body":{"injectables/NgxEditorJSService.html":{}}}],["locations",{"_index":1480,"title":{},"body":{"contributing.html":{}}}],["lot",{"_index":1426,"title":{},"body":{"changelog.html":{}}}],["lt;code",{"_index":1206,"title":{},"body":{"components/NgxTinynodesMaterialFormFieldDemoComponent.html":{},"components/PageContainerComponent.html":{}}}],["lt;h1",{"_index":1202,"title":{},"body":{"components/NgxTinynodesMaterialFormFieldDemoComponent.html":{},"components/PageContainerComponent.html":{}}}],["lt;h6",{"_index":1203,"title":{},"body":{"components/NgxTinynodesMaterialFormFieldDemoComponent.html":{},"components/PageContainerComponent.html":{}}}],["lt;img",{"_index":1208,"title":{},"body":{"components/NgxTinynodesMaterialFormFieldDemoComponent.html":{},"components/PageContainerComponent.html":{}}}],["lt;li",{"_index":1205,"title":{},"body":{"components/NgxTinynodesMaterialFormFieldDemoComponent.html":{},"components/PageContainerComponent.html":{}}}],["lt;ol",{"_index":1204,"title":{},"body":{"components/NgxTinynodesMaterialFormFieldDemoComponent.html":{},"components/PageContainerComponent.html":{}}}],["lt;p",{"_index":1200,"title":{},"body":{"components/NgxTinynodesMaterialFormFieldDemoComponent.html":{},"components/PageContainerComponent.html":{}}}],["m.ngxtinynodesmaterialformfielddemo",{"_index":1820,"title":{},"body":{"miscellaneous/variables.html":{}}}],["made",{"_index":843,"title":{},"body":{"injectables/NgxEditorJSService.html":{}}}],["mail",{"_index":1600,"title":{},"body":{"contributing.html":{}}}],["main",{"_index":576,"title":{},"body":{"directives/NgxEditorJSDirective.html":{},"components/NgxTinynodesMaterialFormFieldDemoComponent.html":{},"changelog.html":{}}}],["maintain",{"_index":1627,"title":{},"body":{"contributing.html":{}}}],["maintainers",{"_index":1499,"title":{},"body":{"contributing.html":{}}}],["major",{"_index":1408,"title":{},"body":{"changelog.html":{}}}],["make",{"_index":854,"title":{},"body":{"injectables/NgxEditorJSService.html":{},"contributing.html":{}}}],["makes",{"_index":186,"title":{},"body":{"interfaces/EditorJSClass.html":{},"interfaces/EditorJSInstanceConfig.html":{},"interfaces/InjectorApiCallOptions.html":{},"interfaces/InjectorApiCallResponse.html":{},"interfaces/InjectorMethodOption.html":{}}}],["making",{"_index":1455,"title":{},"body":{"changelog.html":{},"contributing.html":{}}}],["management",{"_index":833,"title":{},"body":{"injectables/NgxEditorJSService.html":{}}}],["managing",{"_index":1425,"title":{},"body":{"changelog.html":{}}}],["map",{"_index":92,"title":{},"body":{"interfaces/BlockData.html":{},"interfaces/ChangeMap.html":{},"interfaces/EditorJSChange.html":{},"interfaces/EditorJSClass.html":{},"interfaces/EditorJSInstanceConfig.html":{},"interfaces/EditorMap.html":{},"interfaces/InjectorApiCallOptions.html":{},"interfaces/InjectorApiCallResponse.html":{},"interfaces/InjectorMethodOption.html":{},"injectables/NgxEditorJSPluginService.html":{},"injectables/NgxEditorJSService.html":{},"components/PageContainerComponent.html":{},"interfaces/PluginConfig.html":{},"interfaces/PluginConfigMap.html":{},"interfaces/ReadyMap.html":{},"interfaces/SavedMap.html":{},"interfaces/ToolSettingsMap.html":{},"changelog.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["map(blocks",{"_index":1265,"title":{},"body":{"components/PageContainerComponent.html":{}}}],["map_defaults",{"_index":192,"title":{},"body":{"interfaces/EditorJSClass.html":{},"interfaces/EditorJSInstanceConfig.html":{},"interfaces/InjectorApiCallOptions.html":{},"interfaces/InjectorApiCallResponse.html":{},"interfaces/InjectorMethodOption.html":{},"injectables/NgxEditorJSService.html":{},"miscellaneous/variables.html":{}}}],["map_defaults.foreach(([mapkey",{"_index":993,"title":{},"body":{"injectables/NgxEditorJSService.html":{}}}],["margin",{"_index":1232,"title":{},"body":{"components/NgxTinynodesMaterialFormFieldDemoComponent.html":{}}}],["marker",{"_index":1361,"title":{},"body":{"modules/PluginMarkerModule.html":{}}}],["mat",{"_index":216,"title":{},"body":{"interfaces/EditorJSMaterialForm.html":{},"components/NgxEditorJSDemoHomeComponent.html":{},"modules/NgxEditorJSModule.html":{},"components/NgxTinynodesMatJsonOutputComponent.html":{},"modules/NgxTinynodesMatJsonOutputModule.html":{},"modules/NgxTinynodesMatTagInputModule.html":{},"components/NgxTinynodesMaterialFormFieldDemoComponent.html":{},"components/PageContainerComponent.html":{},"miscellaneous/variables.html":{}}}],["matbadgemodule",{"_index":553,"title":{},"body":{"modules/NgxEditorJSDemoMaterialModule.html":{}}}],["matbuttonmodule",{"_index":555,"title":{},"body":{"modules/NgxEditorJSDemoMaterialModule.html":{},"modules/NgxTinynodesMatJsonOutputModule.html":{}}}],["matcardmodule",{"_index":557,"title":{},"body":{"modules/NgxEditorJSDemoMaterialModule.html":{},"modules/NgxTinynodesMatJsonOutputModule.html":{}}}],["match",{"_index":626,"title":{},"body":{"directives/NgxEditorJSDirective.html":{}}}],["matches",{"_index":844,"title":{},"body":{"injectables/NgxEditorJSService.html":{}}}],["matching",{"_index":66,"title":{},"body":{"interfaces/Block.html":{},"interfaces/BlockData.html":{},"interfaces/ChangeMap.html":{},"interfaces/CreateEditorJSOptions.html":{},"interfaces/EditorJSChange.html":{},"interfaces/EditorJSClass.html":{},"interfaces/EditorJSInstanceConfig.html":{},"interfaces/EditorJSMaterialForm.html":{},"interfaces/EditorMap.html":{},"classes/FixedHeader.html":{},"interfaces/Header.html":{},"interfaces/HeaderBlock.html":{},"interfaces/Image.html":{},"interfaces/ImageBlock.html":{},"interfaces/InjectorApiCallOptions.html":{},"interfaces/InjectorApiCallResponse.html":{},"interfaces/InjectorMethodOption.html":{},"interfaces/List.html":{},"interfaces/ListBlock.html":{},"classes/MockEditorJS.html":{},"injectables/MockNgZone.html":{},"classes/MockPlugin.html":{},"interfaces/NgxEditorJSConfig.html":{},"components/NgxEditorJSDemoHomeComponent.html":{},"modules/NgxEditorJSDemoMaterialModule.html":{},"directives/NgxEditorJSDirective.html":{},"modules/NgxEditorJSModule.html":{},"interfaces/NgxEditorJSModuleConfig.html":{},"injectables/NgxEditorJSPluginService.html":{},"modules/NgxEditorJSPluginServiceModule.html":{},"injectables/NgxEditorJSService.html":{},"modules/NgxEditorjsDemoModule.html":{},"modules/NgxEditorjsPluginsModule.html":{},"modules/NgxTinynodesComponentsModule.html":{},"interfaces/NgxTinynodesMatFieldComponent.html":{},"components/NgxTinynodesMatJsonOutputComponent.html":{},"modules/NgxTinynodesMatJsonOutputModule.html":{},"modules/NgxTinynodesMatTagInputModule.html":{},"modules/NgxTinynodesMaterialFormFieldDemo.html":{},"components/NgxTinynodesMaterialFormFieldDemoComponent.html":{},"interfaces/Page.html":{},"interfaces/PageBlock.html":{},"components/PageContainerComponent.html":{},"modules/PageStoreModule.html":{},"injectables/PagesQuery.html":{},"injectables/PagesService.html":{},"interfaces/PagesState.html":{},"injectables/PagesStore.html":{},"interfaces/Paragraph.html":{},"interfaces/ParagraphBlock.html":{},"modules/PluginCodeModule.html":{},"interfaces/PluginConfig.html":{},"interfaces/PluginConfigMap.html":{},"modules/PluginEmbedModule.html":{},"modules/PluginHeaderModule.html":{},"modules/PluginImageModule.html":{},"modules/PluginInlineCodeModule.html":{},"modules/PluginLinkModule.html":{},"modules/PluginListModule.html":{},"modules/PluginMarkerModule.html":{},"modules/PluginParagraphModule.html":{},"modules/PluginQuoteModule.html":{},"modules/PluginSimpleImageModule.html":{},"modules/PluginWarningModule.html":{},"interfaces/ReadyMap.html":{},"interfaces/SavedMap.html":{},"interfaces/Tag.html":{},"interfaces/ToolSettingsMap.html":{},"changelog.html":{},"contributing.html":{},"dependencies.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"index.html":{},"license.html":{},"modules.html":{},"overview.html":{},"todo.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["matchipsmodule",{"_index":559,"title":{},"body":{"modules/NgxEditorJSDemoMaterialModule.html":{},"modules/NgxTinynodesMatTagInputModule.html":{}}}],["material",{"_index":251,"title":{},"body":{"interfaces/EditorJSMaterialForm.html":{},"components/NgxEditorJSDemoHomeComponent.html":{},"components/NgxTinynodesMaterialFormFieldDemoComponent.html":{},"changelog.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["material](https://material.angular.io",{"_index":257,"title":{},"body":{"interfaces/EditorJSMaterialForm.html":{}}}],["matexpansionmodule",{"_index":561,"title":{},"body":{"modules/NgxEditorJSDemoMaterialModule.html":{}}}],["matformfieldcontrol",{"_index":220,"title":{},"body":{"interfaces/EditorJSMaterialForm.html":{},"interfaces/NgxTinynodesMatFieldComponent.html":{},"miscellaneous/variables.html":{}}}],["matformfieldmodule",{"_index":563,"title":{},"body":{"modules/NgxEditorJSDemoMaterialModule.html":{},"modules/NgxEditorJSModule.html":{}}}],["matgridlistmodule",{"_index":564,"title":{},"body":{"modules/NgxEditorJSDemoMaterialModule.html":{}}}],["maticonmodule",{"_index":566,"title":{},"body":{"modules/NgxEditorJSDemoMaterialModule.html":{},"modules/NgxTinynodesMatTagInputModule.html":{}}}],["matinputmodule",{"_index":568,"title":{},"body":{"modules/NgxEditorJSDemoMaterialModule.html":{},"modules/NgxEditorJSModule.html":{}}}],["matlistmodule",{"_index":570,"title":{},"body":{"modules/NgxEditorJSDemoMaterialModule.html":{}}}],["me@tane.dev",{"_index":1619,"title":{},"body":{"contributing.html":{},"license.html":{}}}],["means",{"_index":654,"title":{},"body":{"directives/NgxEditorJSDirective.html":{},"changelog.html":{}}}],["meantime",{"_index":1451,"title":{},"body":{"changelog.html":{}}}],["media",{"_index":1603,"title":{},"body":{"contributing.html":{}}}],["members",{"_index":1542,"title":{},"body":{"contributing.html":{}}}],["menu",{"_index":1128,"title":{},"body":{"components/NgxTinynodesMaterialFormFieldDemoComponent.html":{},"components/PageContainerComponent.html":{}}}],["menugroup",{"_index":1164,"title":{},"body":{"components/NgxTinynodesMaterialFormFieldDemoComponent.html":{},"components/PageContainerComponent.html":{}}}],["merchantability",{"_index":1760,"title":{},"body":{"license.html":{}}}],["merge",{"_index":1489,"title":{},"body":{"contributing.html":{},"license.html":{}}}],["merged",{"_index":1396,"title":{},"body":{"changelog.html":{}}}],["metadata",{"_index":509,"title":{},"body":{"components/NgxEditorJSDemoHomeComponent.html":{},"directives/NgxEditorJSDirective.html":{},"components/NgxTinynodesMatJsonOutputComponent.html":{},"components/NgxTinynodesMaterialFormFieldDemoComponent.html":{},"components/PageContainerComponent.html":{}}}],["method",{"_index":184,"title":{},"body":{"interfaces/EditorJSClass.html":{},"interfaces/EditorJSInstanceConfig.html":{},"interfaces/InjectorApiCallOptions.html":{},"interfaces/InjectorApiCallResponse.html":{},"interfaces/InjectorMethodOption.html":{},"interfaces/NgxEditorJSConfig.html":{},"directives/NgxEditorJSDirective.html":{},"modules/NgxEditorJSModule.html":{},"interfaces/NgxEditorJSModuleConfig.html":{},"injectables/NgxEditorJSService.html":{},"components/NgxTinynodesMaterialFormFieldDemoComponent.html":{},"components/PageContainerComponent.html":{},"contributing.html":{},"miscellaneous/functions.html":{}}}],["method.call(editor",{"_index":944,"title":{},"body":{"injectables/NgxEditorJSService.html":{}}}],["methodcall",{"_index":943,"title":{},"body":{"injectables/NgxEditorJSService.html":{}}}],["methodcall.then",{"_index":945,"title":{},"body":{"injectables/NgxEditorJSService.html":{}}}],["methods",{"_index":386,"title":{},"body":{"classes/FixedHeader.html":{},"injectables/MockNgZone.html":{},"classes/MockPlugin.html":{},"directives/NgxEditorJSDirective.html":{},"modules/NgxEditorJSModule.html":{},"injectables/NgxEditorJSPluginService.html":{},"injectables/NgxEditorJSService.html":{},"components/NgxTinynodesMatJsonOutputComponent.html":{},"components/NgxTinynodesMaterialFormFieldDemoComponent.html":{},"components/PageContainerComponent.html":{},"injectables/PagesService.html":{},"changelog.html":{}}}],["minheight",{"_index":474,"title":{},"body":{"interfaces/NgxEditorJSConfig.html":{},"directives/NgxEditorJSDirective.html":{},"interfaces/NgxEditorJSModuleConfig.html":{}}}],["minimum",{"_index":629,"title":{},"body":{"directives/NgxEditorJSDirective.html":{}}}],["miscellaneous",{"_index":1676,"title":{"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}},"body":{"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["mit",{"_index":1720,"title":{},"body":{"license.html":{}}}],["mock",{"_index":449,"title":{},"body":{"injectables/MockNgZone.html":{}}}],["mock.ts",{"_index":448,"title":{},"body":{"injectables/MockNgZone.html":{}}}],["mock.ts:16",{"_index":455,"title":{},"body":{"injectables/MockNgZone.html":{}}}],["mock.ts:22",{"_index":457,"title":{},"body":{"injectables/MockNgZone.html":{}}}],["mock.ts:26",{"_index":460,"title":{},"body":{"injectables/MockNgZone.html":{}}}],["mock.ts:30",{"_index":461,"title":{},"body":{"injectables/MockNgZone.html":{}}}],["mockeditorjs",{"_index":416,"title":{"classes/MockEditorJS.html":{}},"body":{"classes/MockEditorJS.html":{},"classes/MockPlugin.html":{}}}],["mockngzone",{"_index":444,"title":{"injectables/MockNgZone.html":{}},"body":{"injectables/MockNgZone.html":{}}}],["mockplugin",{"_index":429,"title":{"classes/MockPlugin.html":{}},"body":{"classes/MockEditorJS.html":{},"classes/MockPlugin.html":{}}}],["modify",{"_index":1736,"title":{},"body":{"license.html":{}}}],["module",{"_index":124,"title":{"modules/NgxEditorJSDemoMaterialModule.html":{},"modules/NgxEditorJSModule.html":{},"modules/NgxEditorJSPluginServiceModule.html":{},"modules/NgxEditorjsDemoModule.html":{},"modules/NgxEditorjsPluginsModule.html":{},"modules/NgxTinynodesComponentsModule.html":{},"modules/NgxTinynodesMatJsonOutputModule.html":{},"modules/NgxTinynodesMatTagInputModule.html":{},"modules/NgxTinynodesMaterialFormFieldDemo.html":{},"modules/PageStoreModule.html":{},"modules/PluginCodeModule.html":{},"modules/PluginEmbedModule.html":{},"modules/PluginHeaderModule.html":{},"modules/PluginImageModule.html":{},"modules/PluginInlineCodeModule.html":{},"modules/PluginLinkModule.html":{},"modules/PluginListModule.html":{},"modules/PluginMarkerModule.html":{},"modules/PluginParagraphModule.html":{},"modules/PluginQuoteModule.html":{},"modules/PluginSimpleImageModule.html":{},"modules/PluginWarningModule.html":{}},"body":{"interfaces/BlockData.html":{},"classes/FixedHeader.html":{},"components/NgxEditorJSDemoHomeComponent.html":{},"modules/NgxEditorJSModule.html":{},"modules/NgxEditorJSPluginServiceModule.html":{},"modules/NgxEditorjsDemoModule.html":{},"modules/NgxEditorjsPluginsModule.html":{},"modules/NgxTinynodesComponentsModule.html":{},"modules/NgxTinynodesMatJsonOutputModule.html":{},"modules/NgxTinynodesMatTagInputModule.html":{},"modules/NgxTinynodesMaterialFormFieldDemo.html":{},"modules/PageStoreModule.html":{},"modules/PluginCodeModule.html":{},"interfaces/PluginConfig.html":{},"interfaces/PluginConfigMap.html":{},"modules/PluginEmbedModule.html":{},"modules/PluginHeaderModule.html":{},"modules/PluginImageModule.html":{},"modules/PluginInlineCodeModule.html":{},"modules/PluginLinkModule.html":{},"modules/PluginListModule.html":{},"modules/PluginMarkerModule.html":{},"modules/PluginParagraphModule.html":{},"modules/PluginQuoteModule.html":{},"modules/PluginSimpleImageModule.html":{},"modules/PluginWarningModule.html":{},"interfaces/ToolSettingsMap.html":{},"changelog.html":{},"miscellaneous/functions.html":{},"index.html":{},"overview.html":{},"todo.html":{},"miscellaneous/variables.html":{}}}],["modules",{"_index":550,"title":{"modules.html":{}},"body":{"modules/NgxEditorJSDemoMaterialModule.html":{},"modules/NgxEditorJSModule.html":{},"modules/NgxEditorJSPluginServiceModule.html":{},"modules/NgxEditorjsDemoModule.html":{},"modules/NgxEditorjsPluginsModule.html":{},"modules/NgxTinynodesComponentsModule.html":{},"modules/NgxTinynodesMatJsonOutputModule.html":{},"modules/NgxTinynodesMatTagInputModule.html":{},"modules/NgxTinynodesMaterialFormFieldDemo.html":{},"modules/PageStoreModule.html":{},"modules/PluginCodeModule.html":{},"modules/PluginEmbedModule.html":{},"modules/PluginHeaderModule.html":{},"modules/PluginImageModule.html":{},"modules/PluginInlineCodeModule.html":{},"modules/PluginLinkModule.html":{},"modules/PluginListModule.html":{},"modules/PluginMarkerModule.html":{},"modules/PluginParagraphModule.html":{},"modules/PluginQuoteModule.html":{},"modules/PluginSimpleImageModule.html":{},"modules/PluginWarningModule.html":{},"modules.html":{},"overview.html":{},"todo.html":{}}}],["modulewithproviders",{"_index":753,"title":{},"body":{"modules/NgxEditorJSModule.html":{}}}],["monday",{"_index":1429,"title":{},"body":{"changelog.html":{}}}],["monitor",{"_index":348,"title":{},"body":{"interfaces/EditorJSMaterialForm.html":{}}}],["more",{"_index":1456,"title":{},"body":{"changelog.html":{}}}],["mouseevent",{"_index":341,"title":{},"body":{"interfaces/EditorJSMaterialForm.html":{}}}],["ms",{"_index":612,"title":{},"body":{"directives/NgxEditorJSDirective.html":{}}}],["multi",{"_index":256,"title":{},"body":{"interfaces/EditorJSMaterialForm.html":{},"classes/FixedHeader.html":{},"modules/NgxEditorJSPluginServiceModule.html":{},"modules/PluginCodeModule.html":{},"modules/PluginEmbedModule.html":{},"modules/PluginHeaderModule.html":{},"modules/PluginImageModule.html":{},"modules/PluginInlineCodeModule.html":{},"modules/PluginLinkModule.html":{},"modules/PluginListModule.html":{},"modules/PluginMarkerModule.html":{},"modules/PluginParagraphModule.html":{},"modules/PluginQuoteModule.html":{},"modules/PluginSimpleImageModule.html":{},"modules/PluginWarningModule.html":{},"changelog.html":{},"miscellaneous/variables.html":{}}}],["multiple",{"_index":1281,"title":{},"body":{"modules/PageStoreModule.html":{}}}],["name",{"_index":104,"title":{},"body":{"interfaces/BlockData.html":{},"classes/FixedHeader.html":{},"classes/MockEditorJS.html":{},"injectables/MockNgZone.html":{},"interfaces/NgxEditorJSConfig.html":{},"components/NgxEditorJSDemoHomeComponent.html":{},"directives/NgxEditorJSDirective.html":{},"modules/NgxEditorJSModule.html":{},"interfaces/NgxEditorJSModuleConfig.html":{},"injectables/NgxEditorJSPluginService.html":{},"injectables/NgxEditorJSService.html":{},"components/NgxTinynodesMatJsonOutputComponent.html":{},"components/NgxTinynodesMaterialFormFieldDemoComponent.html":{},"components/PageContainerComponent.html":{},"injectables/PagesQuery.html":{},"injectables/PagesService.html":{},"interfaces/PagesState.html":{},"injectables/PagesStore.html":{},"interfaces/PluginConfig.html":{},"interfaces/PluginConfigMap.html":{},"interfaces/ToolSettingsMap.html":{},"miscellaneous/functions.html":{}}}],["namespace",{"_index":210,"title":{},"body":{"interfaces/EditorJSClass.html":{},"interfaces/EditorJSInstanceConfig.html":{},"interfaces/InjectorApiCallOptions.html":{},"interfaces/InjectorApiCallResponse.html":{},"interfaces/InjectorMethodOption.html":{},"injectables/NgxEditorJSService.html":{}}}],["nationality",{"_index":1515,"title":{},"body":{"contributing.html":{}}}],["necessary",{"_index":1624,"title":{},"body":{"contributing.html":{}}}],["need",{"_index":657,"title":{},"body":{"directives/NgxEditorJSDirective.html":{},"components/NgxTinynodesMaterialFormFieldDemoComponent.html":{}}}],["needs",{"_index":625,"title":{},"body":{"directives/NgxEditorJSDirective.html":{}}}],["new",{"_index":127,"title":{},"body":{"interfaces/BlockData.html":{},"interfaces/EditorJSClass.html":{},"interfaces/EditorJSInstanceConfig.html":{},"interfaces/EditorJSMaterialForm.html":{},"classes/FixedHeader.html":{},"interfaces/InjectorApiCallOptions.html":{},"interfaces/InjectorApiCallResponse.html":{},"interfaces/InjectorMethodOption.html":{},"injectables/MockNgZone.html":{},"interfaces/NgxEditorJSConfig.html":{},"directives/NgxEditorJSDirective.html":{},"interfaces/NgxEditorJSModuleConfig.html":{},"injectables/NgxEditorJSService.html":{},"components/NgxTinynodesMaterialFormFieldDemoComponent.html":{},"components/PageContainerComponent.html":{},"injectables/PagesService.html":{},"interfaces/PluginConfig.html":{},"interfaces/PluginConfigMap.html":{},"modules/PluginHeaderModule.html":{},"interfaces/ToolSettingsMap.html":{},"changelog.html":{},"contributing.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["newdata",{"_index":402,"title":{},"body":{"classes/FixedHeader.html":{},"modules/PluginHeaderModule.html":{}}}],["newdata.level",{"_index":405,"title":{},"body":{"classes/FixedHeader.html":{},"modules/PluginHeaderModule.html":{}}}],["newdata.text",{"_index":403,"title":{},"body":{"classes/FixedHeader.html":{},"modules/PluginHeaderModule.html":{}}}],["newpage",{"_index":1324,"title":{},"body":{"injectables/PagesService.html":{}}}],["next",{"_index":357,"title":{},"body":{"interfaces/EditorJSMaterialForm.html":{}}}],["nextid",{"_index":272,"title":{},"body":{"interfaces/EditorJSMaterialForm.html":{}}}],["ng_value_accessor",{"_index":1813,"title":{},"body":{"miscellaneous/variables.html":{}}}],["ngaftercontentinit",{"_index":372,"title":{},"body":{"interfaces/EditorJSMaterialForm.html":{},"directives/NgxEditorJSDirective.html":{},"components/NgxTinynodesMaterialFormFieldDemoComponent.html":{},"components/PageContainerComponent.html":{}}}],["ngcontrol",{"_index":237,"title":{},"body":{"interfaces/EditorJSMaterialForm.html":{}}}],["ngdocheck",{"_index":378,"title":{},"body":{"interfaces/EditorJSMaterialForm.html":{}}}],["ngmodule",{"_index":395,"title":{},"body":{"classes/FixedHeader.html":{},"modules/NgxEditorJSDemoMaterialModule.html":{},"modules/NgxEditorJSModule.html":{},"injectables/NgxEditorJSPluginService.html":{},"modules/NgxEditorJSPluginServiceModule.html":{},"modules/NgxEditorjsDemoModule.html":{},"modules/NgxEditorjsPluginsModule.html":{},"modules/NgxTinynodesComponentsModule.html":{},"modules/NgxTinynodesMatJsonOutputModule.html":{},"modules/NgxTinynodesMatTagInputModule.html":{},"modules/NgxTinynodesMaterialFormFieldDemo.html":{},"modules/PageStoreModule.html":{},"modules/PluginCodeModule.html":{},"modules/PluginEmbedModule.html":{},"modules/PluginHeaderModule.html":{},"modules/PluginImageModule.html":{},"modules/PluginInlineCodeModule.html":{},"modules/PluginLinkModule.html":{},"modules/PluginListModule.html":{},"modules/PluginMarkerModule.html":{},"modules/PluginParagraphModule.html":{},"modules/PluginQuoteModule.html":{},"modules/PluginSimpleImageModule.html":{},"modules/PluginWarningModule.html":{},"changelog.html":{}}}],["ngonchanges",{"_index":582,"title":{},"body":{"directives/NgxEditorJSDirective.html":{},"components/NgxTinynodesMatJsonOutputComponent.html":{}}}],["ngonchanges(changes",{"_index":647,"title":{},"body":{"directives/NgxEditorJSDirective.html":{}}}],["ngondestroy",{"_index":583,"title":{},"body":{"directives/NgxEditorJSDirective.html":{}}}],["ngoninit",{"_index":360,"title":{},"body":{"interfaces/EditorJSMaterialForm.html":{}}}],["ngrx/effects",{"_index":1662,"title":{},"body":{"dependencies.html":{},"todo.html":{}}}],["ngrx/store",{"_index":1663,"title":{},"body":{"dependencies.html":{}}}],["ngx",{"_index":123,"title":{},"body":{"interfaces/BlockData.html":{},"interfaces/EditorJSMaterialForm.html":{},"components/NgxEditorJSDemoHomeComponent.html":{},"directives/NgxEditorJSDirective.html":{},"modules/NgxEditorjsDemoModule.html":{},"components/NgxTinynodesMatJsonOutputComponent.html":{},"modules/NgxTinynodesMatJsonOutputModule.html":{},"modules/NgxTinynodesMaterialFormFieldDemo.html":{},"components/NgxTinynodesMaterialFormFieldDemoComponent.html":{},"components/PageContainerComponent.html":{},"modules/PageStoreModule.html":{},"interfaces/PluginConfig.html":{},"interfaces/PluginConfigMap.html":{},"interfaces/ToolSettingsMap.html":{},"dependencies.html":{},"index.html":{},"todo.html":{},"miscellaneous/variables.html":{}}}],["ngx_editorjs_config",{"_index":493,"title":{},"body":{"interfaces/NgxEditorJSConfig.html":{},"modules/NgxEditorJSModule.html":{},"interfaces/NgxEditorJSModuleConfig.html":{},"injectables/NgxEditorJSService.html":{},"miscellaneous/variables.html":{}}}],["ngxeditorjs",{"_index":547,"title":{},"body":{"components/NgxEditorJSDemoHomeComponent.html":{},"directives/NgxEditorJSDirective.html":{},"components/NgxTinynodesMatJsonOutputComponent.html":{},"components/NgxTinynodesMaterialFormFieldDemoComponent.html":{},"components/PageContainerComponent.html":{}}}],["ngxeditorjs.hassaved",{"_index":1272,"title":{},"body":{"components/PageContainerComponent.html":{}}}],["ngxeditorjs.isfocused",{"_index":1271,"title":{},"body":{"components/PageContainerComponent.html":{}}}],["ngxeditorjs.isready",{"_index":1268,"title":{},"body":{"components/PageContainerComponent.html":{}}}],["ngxeditorjs.istouched",{"_index":1270,"title":{},"body":{"components/PageContainerComponent.html":{}}}],["ngxeditorjsbasecomponent",{"_index":1814,"title":{},"body":{"miscellaneous/variables.html":{}}}],["ngxeditorjscomponent",{"_index":249,"title":{},"body":{"interfaces/EditorJSMaterialForm.html":{},"components/NgxEditorJSDemoHomeComponent.html":{},"modules/NgxEditorJSModule.html":{},"components/NgxTinynodesMatJsonOutputComponent.html":{},"components/NgxTinynodesMaterialFormFieldDemoComponent.html":{},"components/PageContainerComponent.html":{},"index.html":{},"overview.html":{},"miscellaneous/variables.html":{}}}],["ngxeditorjsconfig",{"_index":468,"title":{"interfaces/NgxEditorJSConfig.html":{}},"body":{"interfaces/NgxEditorJSConfig.html":{},"interfaces/NgxEditorJSModuleConfig.html":{},"miscellaneous/variables.html":{}}}],["ngxeditorjsdemo",{"_index":1165,"title":{},"body":{"components/NgxTinynodesMaterialFormFieldDemoComponent.html":{},"components/PageContainerComponent.html":{}}}],["ngxeditorjsdemohomecomponent",{"_index":502,"title":{"components/NgxEditorJSDemoHomeComponent.html":{}},"body":{"components/NgxEditorJSDemoHomeComponent.html":{},"modules/NgxEditorjsDemoModule.html":{},"components/NgxTinynodesMatJsonOutputComponent.html":{},"components/NgxTinynodesMaterialFormFieldDemoComponent.html":{},"components/PageContainerComponent.html":{},"overview.html":{},"miscellaneous/variables.html":{}}}],["ngxeditorjsdemomaterialmodule",{"_index":549,"title":{"modules/NgxEditorJSDemoMaterialModule.html":{}},"body":{"modules/NgxEditorJSDemoMaterialModule.html":{},"modules/NgxEditorjsDemoModule.html":{},"modules/NgxTinynodesMaterialFormFieldDemo.html":{},"modules.html":{},"overview.html":{}}}],["ngxeditorjsdemomodule",{"_index":1004,"title":{"modules/NgxEditorjsDemoModule.html":{}},"body":{"modules/NgxEditorjsDemoModule.html":{},"modules.html":{},"overview.html":{}}}],["ngxeditorjsdemoroutes",{"_index":1019,"title":{},"body":{"modules/NgxEditorjsDemoModule.html":{},"miscellaneous/variables.html":{}}}],["ngxeditorjsdirective",{"_index":244,"title":{"directives/NgxEditorJSDirective.html":{}},"body":{"interfaces/EditorJSMaterialForm.html":{},"components/NgxEditorJSDemoHomeComponent.html":{},"directives/NgxEditorJSDirective.html":{},"modules/NgxEditorJSModule.html":{},"components/NgxTinynodesMatJsonOutputComponent.html":{},"components/NgxTinynodesMaterialFormFieldDemoComponent.html":{},"components/PageContainerComponent.html":{},"index.html":{},"overview.html":{}}}],["ngxeditorjsdirective::ngaftercontentinit",{"_index":712,"title":{},"body":{"directives/NgxEditorJSDirective.html":{}}}],["ngxeditorjsinstanceservice",{"_index":1706,"title":{},"body":{"index.html":{}}}],["ngxeditorjsmaterialfieldcomponent",{"_index":1701,"title":{},"body":{"index.html":{}}}],["ngxeditorjsmatfieldcomponent",{"_index":255,"title":{},"body":{"interfaces/EditorJSMaterialForm.html":{},"components/NgxEditorJSDemoHomeComponent.html":{},"modules/NgxEditorJSModule.html":{},"components/NgxTinynodesMatJsonOutputComponent.html":{},"components/NgxTinynodesMaterialFormFieldDemoComponent.html":{},"components/PageContainerComponent.html":{},"overview.html":{},"miscellaneous/variables.html":{}}}],["ngxeditorjsmatfieldcomponent.nextid",{"_index":324,"title":{},"body":{"interfaces/EditorJSMaterialForm.html":{}}}],["ngxeditorjsmodule",{"_index":733,"title":{"modules/NgxEditorJSModule.html":{}},"body":{"modules/NgxEditorJSModule.html":{},"modules/NgxEditorjsDemoModule.html":{},"modules/NgxTinynodesMaterialFormFieldDemo.html":{},"modules.html":{},"overview.html":{}}}],["ngxeditorjsmodule.forroot",{"_index":491,"title":{},"body":{"interfaces/NgxEditorJSConfig.html":{},"modules/NgxEditorJSModule.html":{},"interfaces/NgxEditorJSModuleConfig.html":{},"injectables/NgxEditorJSService.html":{}}}],["ngxeditorjsmoduleconfig",{"_index":421,"title":{"interfaces/NgxEditorJSModuleConfig.html":{}},"body":{"classes/MockEditorJS.html":{},"classes/MockPlugin.html":{},"interfaces/NgxEditorJSConfig.html":{},"modules/NgxEditorJSModule.html":{},"interfaces/NgxEditorJSModuleConfig.html":{},"injectables/NgxEditorJSService.html":{},"miscellaneous/functions.html":{}}}],["ngxeditorjspluginservice",{"_index":772,"title":{"injectables/NgxEditorJSPluginService.html":{}},"body":{"injectables/NgxEditorJSPluginService.html":{},"modules/NgxEditorJSPluginServiceModule.html":{},"injectables/NgxEditorJSService.html":{},"changelog.html":{},"index.html":{},"overview.html":{}}}],["ngxeditorjspluginservicemodule",{"_index":824,"title":{"modules/NgxEditorJSPluginServiceModule.html":{}},"body":{"modules/NgxEditorJSPluginServiceModule.html":{},"modules/NgxEditorjsPluginsModule.html":{},"modules.html":{},"overview.html":{}}}],["ngxeditorjspluginsmodule",{"_index":1010,"title":{"modules/NgxEditorjsPluginsModule.html":{}},"body":{"modules/NgxEditorjsDemoModule.html":{},"modules/NgxEditorjsPluginsModule.html":{},"modules.html":{},"overview.html":{}}}],["ngxeditorjsservice",{"_index":247,"title":{"injectables/NgxEditorJSService.html":{}},"body":{"interfaces/EditorJSMaterialForm.html":{},"directives/NgxEditorJSDirective.html":{},"modules/NgxEditorJSModule.html":{},"injectables/NgxEditorJSService.html":{},"components/NgxTinynodesMaterialFormFieldDemoComponent.html":{},"components/PageContainerComponent.html":{},"index.html":{},"overview.html":{}}}],["ngxjsonviewermodule",{"_index":1025,"title":{},"body":{"modules/NgxEditorjsDemoModule.html":{},"modules/NgxTinynodesMatJsonOutputModule.html":{},"modules/NgxTinynodesMaterialFormFieldDemo.html":{}}}],["ngxtinynodescomponentsmodule",{"_index":1067,"title":{"modules/NgxTinynodesComponentsModule.html":{}},"body":{"modules/NgxTinynodesComponentsModule.html":{},"modules/NgxTinynodesMaterialFormFieldDemo.html":{},"modules.html":{},"overview.html":{}}}],["ngxtinynodescoremodule",{"_index":1022,"title":{},"body":{"modules/NgxEditorjsDemoModule.html":{},"modules/NgxTinynodesMaterialFormFieldDemo.html":{}}}],["ngxtinynodesmaterialformfielddemo",{"_index":1110,"title":{"modules/NgxTinynodesMaterialFormFieldDemo.html":{}},"body":{"modules/NgxTinynodesMaterialFormFieldDemo.html":{},"modules.html":{},"overview.html":{}}}],["ngxtinynodesmaterialformfielddemocomponent",{"_index":535,"title":{"components/NgxTinynodesMaterialFormFieldDemoComponent.html":{}},"body":{"components/NgxEditorJSDemoHomeComponent.html":{},"components/NgxTinynodesMatJsonOutputComponent.html":{},"modules/NgxTinynodesMaterialFormFieldDemo.html":{},"components/NgxTinynodesMaterialFormFieldDemoComponent.html":{},"components/PageContainerComponent.html":{},"overview.html":{}}}],["ngxtinynodesmatfieldcomponent",{"_index":1080,"title":{"interfaces/NgxTinynodesMatFieldComponent.html":{}},"body":{"interfaces/NgxTinynodesMatFieldComponent.html":{}}}],["ngxtinynodesmatjsonoutputcomponent",{"_index":538,"title":{"components/NgxTinynodesMatJsonOutputComponent.html":{}},"body":{"components/NgxEditorJSDemoHomeComponent.html":{},"components/NgxTinynodesMatJsonOutputComponent.html":{},"modules/NgxTinynodesMatJsonOutputModule.html":{},"components/NgxTinynodesMaterialFormFieldDemoComponent.html":{},"components/PageContainerComponent.html":{},"overview.html":{}}}],["ngxtinynodesmatjsonoutputmodule",{"_index":1071,"title":{"modules/NgxTinynodesMatJsonOutputModule.html":{}},"body":{"modules/NgxTinynodesComponentsModule.html":{},"modules/NgxTinynodesMatJsonOutputModule.html":{},"modules.html":{},"overview.html":{}}}],["ngxtinynodesmattaginputcomponent",{"_index":541,"title":{},"body":{"components/NgxEditorJSDemoHomeComponent.html":{},"components/NgxTinynodesMatJsonOutputComponent.html":{},"modules/NgxTinynodesMatTagInputModule.html":{},"components/NgxTinynodesMaterialFormFieldDemoComponent.html":{},"components/PageContainerComponent.html":{},"overview.html":{},"miscellaneous/variables.html":{}}}],["ngxtinynodesmattaginputmodule",{"_index":1072,"title":{"modules/NgxTinynodesMatTagInputModule.html":{}},"body":{"modules/NgxTinynodesComponentsModule.html":{},"modules/NgxTinynodesMatTagInputModule.html":{},"modules.html":{},"overview.html":{}}}],["ngzone",{"_index":450,"title":{},"body":{"injectables/MockNgZone.html":{},"injectables/NgxEditorJSService.html":{}}}],["noninfringement",{"_index":1764,"title":{},"body":{"license.html":{}}}],["normalize",{"_index":394,"title":{},"body":{"classes/FixedHeader.html":{},"modules/PluginHeaderModule.html":{}}}],["normalizedata",{"_index":387,"title":{},"body":{"classes/FixedHeader.html":{}}}],["normalizedata(data",{"_index":391,"title":{},"body":{"classes/FixedHeader.html":{},"modules/PluginHeaderModule.html":{}}}],["note",{"_index":1466,"title":{},"body":{"contributing.html":{}}}],["notice",{"_index":1749,"title":{},"body":{"license.html":{}}}],["now",{"_index":1190,"title":{},"body":{"components/NgxTinynodesMaterialFormFieldDemoComponent.html":{},"changelog.html":{}}}],["npm",{"_index":1671,"title":{},"body":{"dependencies.html":{},"index.html":{}}}],["nrwl/nx",{"_index":1443,"title":{},"body":{"changelog.html":{}}}],["null",{"_index":362,"title":{},"body":{"interfaces/EditorJSMaterialForm.html":{},"directives/NgxEditorJSDirective.html":{},"injectables/NgxEditorJSService.html":{},"components/PageContainerComponent.html":{}}}],["number",{"_index":48,"title":{},"body":{"interfaces/Block.html":{},"interfaces/ChangeMap.html":{},"interfaces/CreateEditorJSOptions.html":{},"interfaces/EditorJSChange.html":{},"interfaces/EditorMap.html":{},"interfaces/Header.html":{},"interfaces/HeaderBlock.html":{},"interfaces/Image.html":{},"interfaces/ImageBlock.html":{},"interfaces/List.html":{},"interfaces/ListBlock.html":{},"interfaces/NgxEditorJSConfig.html":{},"directives/NgxEditorJSDirective.html":{},"interfaces/NgxEditorJSModuleConfig.html":{},"components/NgxTinynodesMaterialFormFieldDemoComponent.html":{},"interfaces/Paragraph.html":{},"interfaces/ParagraphBlock.html":{},"interfaces/ReadyMap.html":{},"interfaces/SavedMap.html":{}}}],["numbers",{"_index":1482,"title":{},"body":{"contributing.html":{}}}],["nx",{"_index":1717,"title":{},"body":{"index.html":{}}}],["object",{"_index":97,"title":{},"body":{"interfaces/BlockData.html":{},"directives/NgxEditorJSDirective.html":{},"injectables/NgxEditorJSService.html":{},"interfaces/PluginConfig.html":{},"interfaces/PluginConfigMap.html":{},"interfaces/ToolSettingsMap.html":{}}}],["object.entries(this.getpluginswithexclude(excludetools)).reduce",{"_index":814,"title":{},"body":{"injectables/NgxEditorJSPluginService.html":{}}}],["object.entries(this.pluginconfigmap",{"_index":807,"title":{},"body":{"injectables/NgxEditorJSPluginService.html":{}}}],["object.keys(changes",{"_index":702,"title":{},"body":{"directives/NgxEditorJSDirective.html":{}}}],["object.keys(this.editormap).foreach(holder",{"_index":984,"title":{},"body":{"injectables/NgxEditorJSService.html":{}}}],["objects",{"_index":1694,"title":{},"body":{"miscellaneous/functions.html":{}}}],["obligated",{"_index":1626,"title":{},"body":{"contributing.html":{}}}],["observable",{"_index":665,"title":{},"body":{"directives/NgxEditorJSDirective.html":{},"injectables/NgxEditorJSService.html":{},"components/PageContainerComponent.html":{},"injectables/PagesService.html":{}}}],["obtaining",{"_index":1727,"title":{},"body":{"license.html":{}}}],["of(response",{"_index":955,"title":{},"body":{"injectables/NgxEditorJSService.html":{}}}],["offensive",{"_index":1591,"title":{},"body":{"contributing.html":{}}}],["official",{"_index":1598,"title":{},"body":{"contributing.html":{}}}],["officially",{"_index":1447,"title":{},"body":{"changelog.html":{}}}],["offline",{"_index":1609,"title":{},"body":{"contributing.html":{}}}],["once",{"_index":400,"title":{},"body":{"classes/FixedHeader.html":{},"injectables/NgxEditorJSService.html":{},"modules/PluginHeaderModule.html":{},"contributing.html":{}}}],["onchange",{"_index":187,"title":{},"body":{"interfaces/EditorJSClass.html":{},"interfaces/EditorJSInstanceConfig.html":{},"interfaces/InjectorApiCallOptions.html":{},"interfaces/InjectorApiCallResponse.html":{},"interfaces/InjectorMethodOption.html":{},"injectables/NgxEditorJSService.html":{}}}],["onchanges",{"_index":579,"title":{},"body":{"directives/NgxEditorJSDirective.html":{},"components/NgxTinynodesMatJsonOutputComponent.html":{}}}],["onclick",{"_index":681,"title":{},"body":{"directives/NgxEditorJSDirective.html":{}}}],["oncontainerclick(event",{"_index":342,"title":{},"body":{"interfaces/EditorJSMaterialForm.html":{}}}],["ondestroy",{"_index":233,"title":{},"body":{"interfaces/EditorJSMaterialForm.html":{},"directives/NgxEditorJSDirective.html":{},"injectables/NgxEditorJSService.html":{},"interfaces/NgxTinynodesMatFieldComponent.html":{},"components/NgxTinynodesMaterialFormFieldDemoComponent.html":{},"components/PageContainerComponent.html":{}}}],["ones",{"_index":1713,"title":{},"body":{"index.html":{}}}],["oninit",{"_index":234,"title":{},"body":{"interfaces/EditorJSMaterialForm.html":{},"interfaces/NgxTinynodesMatFieldComponent.html":{}}}],["online",{"_index":1608,"title":{},"body":{"contributing.html":{}}}],["onready",{"_index":189,"title":{},"body":{"interfaces/EditorJSClass.html":{},"interfaces/EditorJSInstanceConfig.html":{},"interfaces/InjectorApiCallOptions.html":{},"interfaces/InjectorApiCallResponse.html":{},"interfaces/InjectorMethodOption.html":{},"injectables/NgxEditorJSService.html":{}}}],["onstable",{"_index":451,"title":{},"body":{"injectables/MockNgZone.html":{}}}],["open",{"_index":1183,"title":{},"body":{"components/NgxTinynodesMaterialFormFieldDemoComponent.html":{},"contributing.html":{}}}],["option",{"_index":204,"title":{},"body":{"interfaces/EditorJSClass.html":{},"interfaces/EditorJSInstanceConfig.html":{},"interfaces/InjectorApiCallOptions.html":{},"interfaces/InjectorApiCallResponse.html":{},"interfaces/InjectorMethodOption.html":{},"interfaces/NgxEditorJSConfig.html":{},"interfaces/NgxEditorJSModuleConfig.html":{},"todo.html":{}}}],["optional",{"_index":52,"title":{},"body":{"interfaces/Block.html":{},"interfaces/BlockData.html":{},"interfaces/CreateEditorJSOptions.html":{},"interfaces/EditorJSClass.html":{},"interfaces/EditorJSInstanceConfig.html":{},"interfaces/EditorJSMaterialForm.html":{},"classes/FixedHeader.html":{},"interfaces/Header.html":{},"interfaces/HeaderBlock.html":{},"interfaces/Image.html":{},"interfaces/ImageBlock.html":{},"interfaces/InjectorApiCallOptions.html":{},"interfaces/InjectorApiCallResponse.html":{},"interfaces/InjectorMethodOption.html":{},"interfaces/List.html":{},"interfaces/ListBlock.html":{},"classes/MockEditorJS.html":{},"injectables/MockNgZone.html":{},"interfaces/NgxEditorJSConfig.html":{},"directives/NgxEditorJSDirective.html":{},"modules/NgxEditorJSModule.html":{},"interfaces/NgxEditorJSModuleConfig.html":{},"injectables/NgxEditorJSPluginService.html":{},"injectables/NgxEditorJSService.html":{},"components/NgxTinynodesMatJsonOutputComponent.html":{},"components/NgxTinynodesMaterialFormFieldDemoComponent.html":{},"components/PageContainerComponent.html":{},"injectables/PagesQuery.html":{},"injectables/PagesService.html":{},"interfaces/Paragraph.html":{},"interfaces/ParagraphBlock.html":{},"interfaces/PluginConfig.html":{},"interfaces/PluginConfigMap.html":{},"interfaces/ToolSettingsMap.html":{},"miscellaneous/functions.html":{}}}],["optionally",{"_index":887,"title":{},"body":{"injectables/NgxEditorJSService.html":{}}}],["options",{"_index":161,"title":{},"body":{"interfaces/CreateEditorJSOptions.html":{},"interfaces/EditorJSClass.html":{},"interfaces/EditorJSInstanceConfig.html":{},"interfaces/InjectorApiCallOptions.html":{},"interfaces/InjectorApiCallResponse.html":{},"interfaces/InjectorMethodOption.html":{},"interfaces/NgxEditorJSConfig.html":{},"interfaces/NgxEditorJSModuleConfig.html":{},"injectables/NgxEditorJSService.html":{},"changelog.html":{},"todo.html":{}}}],["options.config",{"_index":909,"title":{},"body":{"injectables/NgxEditorJSService.html":{}}}],["options.data",{"_index":957,"title":{},"body":{"injectables/NgxEditorJSService.html":{}}}],["options.data.blocks",{"_index":961,"title":{},"body":{"injectables/NgxEditorJSService.html":{}}}],["options.data.time",{"_index":958,"title":{},"body":{"injectables/NgxEditorJSService.html":{}}}],["options.data.version",{"_index":959,"title":{},"body":{"injectables/NgxEditorJSService.html":{}}}],["options.holder",{"_index":948,"title":{},"body":{"injectables/NgxEditorJSService.html":{}}}],["options.method",{"_index":942,"title":{},"body":{"injectables/NgxEditorJSService.html":{}}}],["options.namespace",{"_index":938,"title":{},"body":{"injectables/NgxEditorJSService.html":{}}}],["options.skipsave",{"_index":954,"title":{},"body":{"injectables/NgxEditorJSService.html":{}}}],["ordered",{"_index":29,"title":{},"body":{"interfaces/Block.html":{},"interfaces/Header.html":{},"interfaces/HeaderBlock.html":{},"interfaces/Image.html":{},"interfaces/ImageBlock.html":{},"interfaces/List.html":{},"interfaces/ListBlock.html":{},"interfaces/Paragraph.html":{},"interfaces/ParagraphBlock.html":{},"miscellaneous/typealiases.html":{}}}],["orientation",{"_index":1521,"title":{},"body":{"contributing.html":{}}}],["others",{"_index":1556,"title":{},"body":{"contributing.html":{}}}],["otherwise",{"_index":912,"title":{},"body":{"injectables/NgxEditorJSService.html":{},"contributing.html":{},"license.html":{}}}],["out",{"_index":743,"title":{},"body":{"modules/NgxEditorJSModule.html":{},"modules/NgxEditorJSPluginServiceModule.html":{},"modules/NgxEditorjsDemoModule.html":{},"modules/NgxEditorjsPluginsModule.html":{},"modules/NgxTinynodesComponentsModule.html":{},"modules/NgxTinynodesMatJsonOutputModule.html":{},"modules/NgxTinynodesMatTagInputModule.html":{},"modules/NgxTinynodesMaterialFormFieldDemo.html":{},"modules/PageStoreModule.html":{},"index.html":{},"license.html":{},"overview.html":{}}}],["output",{"_index":479,"title":{},"body":{"interfaces/NgxEditorJSConfig.html":{},"directives/NgxEditorJSDirective.html":{},"interfaces/NgxEditorJSModuleConfig.html":{},"components/NgxTinynodesMatJsonOutputComponent.html":{},"components/NgxTinynodesMaterialFormFieldDemoComponent.html":{},"components/PageContainerComponent.html":{}}}],["output'},{'name",{"_index":540,"title":{},"body":{"components/NgxEditorJSDemoHomeComponent.html":{},"components/NgxTinynodesMatJsonOutputComponent.html":{},"components/NgxTinynodesMaterialFormFieldDemoComponent.html":{},"components/PageContainerComponent.html":{}}}],["output.component",{"_index":1100,"title":{},"body":{"modules/NgxTinynodesMatJsonOutputModule.html":{}}}],["output.component.html",{"_index":1086,"title":{},"body":{"components/NgxTinynodesMatJsonOutputComponent.html":{}}}],["output.component.ts",{"_index":1085,"title":{},"body":{"components/NgxTinynodesMatJsonOutputComponent.html":{}}}],["output.component.ts:11",{"_index":1091,"title":{},"body":{"components/NgxTinynodesMatJsonOutputComponent.html":{}}}],["output.component.ts:14",{"_index":1090,"title":{},"body":{"components/NgxTinynodesMatJsonOutputComponent.html":{}}}],["output.component.ts:19",{"_index":1093,"title":{},"body":{"components/NgxTinynodesMatJsonOutputComponent.html":{}}}],["output.component.ts:23",{"_index":1092,"title":{},"body":{"components/NgxTinynodesMatJsonOutputComponent.html":{}}}],["output.module",{"_index":1079,"title":{},"body":{"modules/NgxTinynodesComponentsModule.html":{}}}],["output.module.ts",{"_index":1099,"title":{},"body":{"modules/NgxTinynodesMatJsonOutputModule.html":{}}}],["output/mat",{"_index":1078,"title":{},"body":{"modules/NgxTinynodesComponentsModule.html":{},"components/NgxTinynodesMatJsonOutputComponent.html":{},"modules/NgxTinynodesMatJsonOutputModule.html":{}}}],["outputdata",{"_index":144,"title":{},"body":{"interfaces/ChangeMap.html":{},"interfaces/EditorJSChange.html":{},"interfaces/EditorJSClass.html":{},"interfaces/EditorJSInstanceConfig.html":{},"interfaces/EditorMap.html":{},"interfaces/InjectorApiCallOptions.html":{},"interfaces/InjectorApiCallResponse.html":{},"interfaces/InjectorMethodOption.html":{},"interfaces/NgxEditorJSConfig.html":{},"directives/NgxEditorJSDirective.html":{},"interfaces/NgxEditorJSModuleConfig.html":{},"injectables/NgxEditorJSService.html":{},"components/NgxTinynodesMaterialFormFieldDemoComponent.html":{},"components/PageContainerComponent.html":{},"interfaces/ReadyMap.html":{},"interfaces/SavedMap.html":{}}}],["outputs",{"_index":585,"title":{},"body":{"directives/NgxEditorJSDirective.html":{}}}],["outside",{"_index":834,"title":{},"body":{"injectables/NgxEditorJSService.html":{}}}],["over",{"_index":1413,"title":{},"body":{"changelog.html":{}}}],["overall",{"_index":1380,"title":{},"body":{"changelog.html":{}}}],["overflow",{"_index":1228,"title":{},"body":{"components/NgxTinynodesMaterialFormFieldDemoComponent.html":{},"components/PageContainerComponent.html":{}}}],["override",{"_index":1149,"title":{},"body":{"components/NgxTinynodesMaterialFormFieldDemoComponent.html":{},"components/PageContainerComponent.html":{}}}],["overview",{"_index":1780,"title":{"overview.html":{}},"body":{"overview.html":{}}}],["owners",{"_index":1465,"title":{},"body":{"contributing.html":{}}}],["package",{"_index":1432,"title":{"dependencies.html":{}},"body":{"changelog.html":{}}}],["page",{"_index":545,"title":{"interfaces/Page.html":{}},"body":{"components/NgxEditorJSDemoHomeComponent.html":{},"components/NgxTinynodesMatJsonOutputComponent.html":{},"components/NgxTinynodesMaterialFormFieldDemoComponent.html":{},"interfaces/Page.html":{},"interfaces/PageBlock.html":{},"components/PageContainerComponent.html":{},"modules/PageStoreModule.html":{},"injectables/PagesQuery.html":{},"injectables/PagesService.html":{},"interfaces/PagesState.html":{},"injectables/PagesStore.html":{},"interfaces/Tag.html":{},"todo.html":{}}}],["page.id",{"_index":1326,"title":{},"body":{"injectables/PagesService.html":{}}}],["pageblock",{"_index":1236,"title":{"interfaces/PageBlock.html":{}},"body":{"interfaces/Page.html":{},"interfaces/PageBlock.html":{},"injectables/PagesService.html":{},"interfaces/Tag.html":{}}}],["pagecontainercomponent",{"_index":544,"title":{"components/PageContainerComponent.html":{}},"body":{"components/NgxEditorJSDemoHomeComponent.html":{},"modules/NgxEditorjsDemoModule.html":{},"components/NgxTinynodesMatJsonOutputComponent.html":{},"components/NgxTinynodesMaterialFormFieldDemoComponent.html":{},"components/PageContainerComponent.html":{},"overview.html":{},"miscellaneous/variables.html":{}}}],["pageeditor",{"_index":1157,"title":{},"body":{"components/NgxTinynodesMaterialFormFieldDemoComponent.html":{}}}],["pageid",{"_index":1305,"title":{},"body":{"injectables/PagesService.html":{}}}],["pagename",{"_index":1155,"title":{},"body":{"components/NgxTinynodesMaterialFormFieldDemoComponent.html":{}}}],["pages",{"_index":1135,"title":{},"body":{"components/NgxTinynodesMaterialFormFieldDemoComponent.html":{},"components/PageContainerComponent.html":{},"modules/PageStoreModule.html":{},"injectables/PagesService.html":{},"interfaces/PagesState.html":{},"injectables/PagesStore.html":{}}}],["pages.models",{"_index":1289,"title":{},"body":{"injectables/PagesQuery.html":{},"injectables/PagesService.html":{},"interfaces/PagesState.html":{},"injectables/PagesStore.html":{}}}],["pages.query",{"_index":1282,"title":{},"body":{"modules/PageStoreModule.html":{},"injectables/PagesService.html":{}}}],["pages.service",{"_index":1283,"title":{},"body":{"modules/PageStoreModule.html":{}}}],["pages.store",{"_index":1284,"title":{},"body":{"modules/PageStoreModule.html":{},"injectables/PagesQuery.html":{},"injectables/PagesService.html":{}}}],["pagesquery",{"_index":1275,"title":{"injectables/PagesQuery.html":{}},"body":{"modules/PageStoreModule.html":{},"injectables/PagesQuery.html":{},"injectables/PagesService.html":{},"overview.html":{}}}],["pagesservice",{"_index":1130,"title":{"injectables/PagesService.html":{}},"body":{"components/NgxTinynodesMaterialFormFieldDemoComponent.html":{},"components/PageContainerComponent.html":{},"modules/PageStoreModule.html":{},"injectables/PagesService.html":{},"overview.html":{}}}],["pagesstate",{"_index":1290,"title":{"interfaces/PagesState.html":{}},"body":{"injectables/PagesQuery.html":{},"interfaces/PagesState.html":{},"injectables/PagesStore.html":{}}}],["pagesstore",{"_index":1276,"title":{"injectables/PagesStore.html":{}},"body":{"modules/PageStoreModule.html":{},"injectables/PagesQuery.html":{},"injectables/PagesService.html":{},"interfaces/PagesState.html":{},"injectables/PagesStore.html":{},"overview.html":{}}}],["pagestoremodule",{"_index":1009,"title":{"modules/PageStoreModule.html":{}},"body":{"modules/NgxEditorjsDemoModule.html":{},"modules/NgxTinynodesMaterialFormFieldDemo.html":{},"modules/PageStoreModule.html":{},"modules.html":{},"overview.html":{}}}],["pagetags",{"_index":1156,"title":{},"body":{"components/NgxTinynodesMaterialFormFieldDemoComponent.html":{},"interfaces/Page.html":{},"interfaces/PageBlock.html":{},"injectables/PagesService.html":{},"interfaces/Tag.html":{}}}],["pagetitle",{"_index":1235,"title":{},"body":{"interfaces/Page.html":{},"interfaces/PageBlock.html":{},"injectables/PagesService.html":{},"interfaces/Tag.html":{}}}],["panel",{"_index":1214,"title":{},"body":{"components/NgxTinynodesMaterialFormFieldDemoComponent.html":{},"components/PageContainerComponent.html":{}}}],["paragraph",{"_index":41,"title":{"interfaces/Paragraph.html":{}},"body":{"interfaces/Block.html":{},"interfaces/Header.html":{},"interfaces/HeaderBlock.html":{},"interfaces/Image.html":{},"interfaces/ImageBlock.html":{},"interfaces/List.html":{},"interfaces/ListBlock.html":{},"interfaces/NgxEditorJSConfig.html":{},"directives/NgxEditorJSDirective.html":{},"interfaces/NgxEditorJSModuleConfig.html":{},"components/NgxTinynodesMaterialFormFieldDemoComponent.html":{},"components/PageContainerComponent.html":{},"interfaces/Paragraph.html":{},"interfaces/ParagraphBlock.html":{},"modules/PluginMarkerModule.html":{},"modules/PluginParagraphModule.html":{}}}],["paragraphblock",{"_index":43,"title":{"interfaces/ParagraphBlock.html":{}},"body":{"interfaces/Block.html":{},"interfaces/Header.html":{},"interfaces/HeaderBlock.html":{},"interfaces/Image.html":{},"interfaces/ImageBlock.html":{},"interfaces/List.html":{},"interfaces/ListBlock.html":{},"interfaces/Paragraph.html":{},"interfaces/ParagraphBlock.html":{},"miscellaneous/typealiases.html":{}}}],["param",{"_index":282,"title":{},"body":{"interfaces/EditorJSMaterialForm.html":{},"classes/FixedHeader.html":{},"directives/NgxEditorJSDirective.html":{},"modules/NgxEditorJSModule.html":{},"injectables/NgxEditorJSPluginService.html":{},"injectables/NgxEditorJSService.html":{},"components/NgxTinynodesMaterialFormFieldDemoComponent.html":{},"components/PageContainerComponent.html":{},"injectables/PagesService.html":{},"modules/PluginHeaderModule.html":{}}}],["parameter",{"_index":1141,"title":{},"body":{"components/NgxTinynodesMaterialFormFieldDemoComponent.html":{}}}],["parameters",{"_index":390,"title":{},"body":{"classes/FixedHeader.html":{},"classes/MockEditorJS.html":{},"injectables/MockNgZone.html":{},"directives/NgxEditorJSDirective.html":{},"modules/NgxEditorJSModule.html":{},"injectables/NgxEditorJSPluginService.html":{},"injectables/NgxEditorJSService.html":{},"components/NgxTinynodesMatJsonOutputComponent.html":{},"components/NgxTinynodesMaterialFormFieldDemoComponent.html":{},"components/PageContainerComponent.html":{},"injectables/PagesQuery.html":{},"injectables/PagesService.html":{},"contributing.html":{},"miscellaneous/functions.html":{}}}],["parentmodule",{"_index":770,"title":{},"body":{"modules/NgxEditorJSModule.html":{}}}],["parse",{"_index":177,"title":{},"body":{"interfaces/EditorJSClass.html":{},"interfaces/EditorJSInstanceConfig.html":{},"interfaces/InjectorApiCallOptions.html":{},"interfaces/InjectorApiCallResponse.html":{},"interfaces/InjectorMethodOption.html":{}}}],["parseint(data.level",{"_index":406,"title":{},"body":{"classes/FixedHeader.html":{},"modules/PluginHeaderModule.html":{}}}],["participants",{"_index":1544,"title":{},"body":{"contributing.html":{}}}],["participation",{"_index":1500,"title":{},"body":{"contributing.html":{}}}],["particular",{"_index":1762,"title":{},"body":{"license.html":{}}}],["pass",{"_index":109,"title":{},"body":{"interfaces/BlockData.html":{},"interfaces/EditorJSClass.html":{},"interfaces/EditorJSInstanceConfig.html":{},"interfaces/InjectorApiCallOptions.html":{},"interfaces/InjectorApiCallResponse.html":{},"interfaces/InjectorMethodOption.html":{},"directives/NgxEditorJSDirective.html":{},"modules/NgxEditorJSModule.html":{},"injectables/NgxEditorJSService.html":{},"interfaces/PluginConfig.html":{},"interfaces/PluginConfigMap.html":{},"interfaces/ToolSettingsMap.html":{}}}],["passed",{"_index":490,"title":{},"body":{"interfaces/NgxEditorJSConfig.html":{},"interfaces/NgxEditorJSModuleConfig.html":{},"injectables/NgxEditorJSPluginService.html":{},"injectables/NgxEditorJSService.html":{},"miscellaneous/functions.html":{}}}],["paste",{"_index":1207,"title":{},"body":{"components/NgxTinynodesMaterialFormFieldDemoComponent.html":{},"components/PageContainerComponent.html":{}}}],["patches",{"_index":607,"title":{},"body":{"directives/NgxEditorJSDirective.html":{}}}],["path",{"_index":1119,"title":{},"body":{"modules/NgxTinynodesMaterialFormFieldDemo.html":{},"miscellaneous/variables.html":{}}}],["paths",{"_index":651,"title":{},"body":{"directives/NgxEditorJSDirective.html":{}}}],["peer",{"_index":1793,"title":{},"body":{"todo.html":{}}}],["per",{"_index":133,"title":{},"body":{"interfaces/BlockData.html":{},"interfaces/PluginConfig.html":{},"interfaces/PluginConfigMap.html":{},"interfaces/ToolSettingsMap.html":{}}}],["permanent",{"_index":1640,"title":{},"body":{"contributing.html":{}}}],["permanently",{"_index":1586,"title":{},"body":{"contributing.html":{}}}],["permission",{"_index":1492,"title":{},"body":{"contributing.html":{},"license.html":{}}}],["permit",{"_index":1743,"title":{},"body":{"license.html":{}}}],["person",{"_index":1726,"title":{},"body":{"license.html":{}}}],["personal",{"_index":1516,"title":{},"body":{"contributing.html":{}}}],["persons",{"_index":1744,"title":{},"body":{"license.html":{}}}],["physical",{"_index":1557,"title":{},"body":{"contributing.html":{}}}],["pipe",{"_index":949,"title":{},"body":{"injectables/NgxEditorJSService.html":{},"components/NgxTinynodesMaterialFormFieldDemoComponent.html":{},"components/PageContainerComponent.html":{}}}],["pipe(take(1",{"_index":978,"title":{},"body":{"injectables/NgxEditorJSService.html":{},"components/NgxTinynodesMaterialFormFieldDemoComponent.html":{},"components/PageContainerComponent.html":{}}}],["pipe(takeuntil(this.ondestroy",{"_index":375,"title":{},"body":{"interfaces/EditorJSMaterialForm.html":{},"directives/NgxEditorJSDirective.html":{}}}],["pipeline",{"_index":1786,"title":{},"body":{"todo.html":{}}}],["piper",{"_index":1715,"title":{},"body":{"index.html":{},"license.html":{}}}],["placeholder",{"_index":286,"title":{},"body":{"interfaces/EditorJSMaterialForm.html":{},"interfaces/NgxEditorJSConfig.html":{},"directives/NgxEditorJSDirective.html":{},"interfaces/NgxEditorJSModuleConfig.html":{}}}],["placeholder(placeholder",{"_index":291,"title":{},"body":{"interfaces/EditorJSMaterialForm.html":{}}}],["please",{"_index":1460,"title":{},"body":{"contributing.html":{}}}],["pledge",{"_index":1494,"title":{},"body":{"contributing.html":{}}}],["pluck",{"_index":1166,"title":{},"body":{"components/NgxTinynodesMaterialFormFieldDemoComponent.html":{},"components/PageContainerComponent.html":{}}}],["pluck('blocks",{"_index":1258,"title":{},"body":{"components/PageContainerComponent.html":{}}}],["plug",{"_index":1045,"title":{},"body":{"modules/NgxEditorjsPluginsModule.html":{}}}],["plugin",{"_index":38,"title":{},"body":{"interfaces/Block.html":{},"interfaces/BlockData.html":{},"classes/FixedHeader.html":{},"interfaces/Header.html":{},"interfaces/HeaderBlock.html":{},"interfaces/Image.html":{},"interfaces/ImageBlock.html":{},"interfaces/List.html":{},"interfaces/ListBlock.html":{},"directives/NgxEditorJSDirective.html":{},"injectables/NgxEditorJSPluginService.html":{},"modules/NgxEditorJSPluginServiceModule.html":{},"injectables/NgxEditorJSService.html":{},"components/NgxTinynodesMaterialFormFieldDemoComponent.html":{},"components/PageContainerComponent.html":{},"interfaces/Paragraph.html":{},"interfaces/ParagraphBlock.html":{},"interfaces/PluginConfig.html":{},"interfaces/PluginConfigMap.html":{},"modules/PluginHeaderModule.html":{},"interfaces/ToolSettingsMap.html":{},"changelog.html":{},"miscellaneous/functions.html":{},"index.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["plugin.config",{"_index":822,"title":{},"body":{"injectables/NgxEditorJSPluginService.html":{}}}],["plugin.inlinetoolbar",{"_index":820,"title":{},"body":{"injectables/NgxEditorJSPluginService.html":{}}}],["plugin.plugin",{"_index":816,"title":{},"body":{"injectables/NgxEditorJSPluginService.html":{}}}],["plugin.shortcut",{"_index":817,"title":{},"body":{"injectables/NgxEditorJSPluginService.html":{}}}],["plugin.type",{"_index":819,"title":{},"body":{"injectables/NgxEditorJSPluginService.html":{}}}],["plugin_config",{"_index":129,"title":{},"body":{"interfaces/BlockData.html":{},"classes/FixedHeader.html":{},"modules/NgxEditorJSPluginServiceModule.html":{},"modules/PluginCodeModule.html":{},"interfaces/PluginConfig.html":{},"interfaces/PluginConfigMap.html":{},"modules/PluginEmbedModule.html":{},"modules/PluginHeaderModule.html":{},"modules/PluginImageModule.html":{},"modules/PluginInlineCodeModule.html":{},"modules/PluginLinkModule.html":{},"modules/PluginListModule.html":{},"modules/PluginMarkerModule.html":{},"modules/PluginParagraphModule.html":{},"modules/PluginQuoteModule.html":{},"modules/PluginSimpleImageModule.html":{},"modules/PluginWarningModule.html":{},"interfaces/ToolSettingsMap.html":{},"miscellaneous/variables.html":{}}}],["pluginclasses",{"_index":134,"title":{},"body":{"interfaces/BlockData.html":{},"injectables/NgxEditorJSPluginService.html":{},"modules/NgxEditorJSPluginServiceModule.html":{},"modules/PluginCodeModule.html":{},"interfaces/PluginConfig.html":{},"interfaces/PluginConfigMap.html":{},"modules/PluginImageModule.html":{},"modules/PluginLinkModule.html":{},"modules/PluginListModule.html":{},"modules/PluginMarkerModule.html":{},"modules/PluginSimpleImageModule.html":{},"interfaces/ToolSettingsMap.html":{},"miscellaneous/variables.html":{}}}],["plugincodemodule",{"_index":1031,"title":{"modules/PluginCodeModule.html":{}},"body":{"modules/NgxEditorjsPluginsModule.html":{},"modules/NgxTinynodesMaterialFormFieldDemo.html":{},"modules/PluginCodeModule.html":{},"modules.html":{},"overview.html":{}}}],["pluginconfig",{"_index":98,"title":{"interfaces/PluginConfig.html":{}},"body":{"interfaces/BlockData.html":{},"injectables/NgxEditorJSPluginService.html":{},"interfaces/PluginConfig.html":{},"interfaces/PluginConfigMap.html":{},"interfaces/ToolSettingsMap.html":{}}}],["pluginconfigmap",{"_index":132,"title":{"interfaces/PluginConfigMap.html":{}},"body":{"interfaces/BlockData.html":{},"injectables/NgxEditorJSPluginService.html":{},"interfaces/PluginConfig.html":{},"interfaces/PluginConfigMap.html":{},"interfaces/ToolSettingsMap.html":{}}}],["pluginconfigs",{"_index":1693,"title":{},"body":{"miscellaneous/functions.html":{}}}],["pluginembedmodule",{"_index":1032,"title":{"modules/PluginEmbedModule.html":{}},"body":{"modules/NgxEditorjsPluginsModule.html":{},"modules/PluginEmbedModule.html":{},"modules.html":{},"overview.html":{}}}],["pluginheadermodule",{"_index":415,"title":{"modules/PluginHeaderModule.html":{}},"body":{"classes/FixedHeader.html":{},"modules/NgxEditorjsPluginsModule.html":{},"modules/NgxTinynodesMaterialFormFieldDemo.html":{},"modules/PluginHeaderModule.html":{},"modules.html":{},"overview.html":{}}}],["pluginimagemodule",{"_index":1033,"title":{"modules/PluginImageModule.html":{}},"body":{"modules/NgxEditorjsPluginsModule.html":{},"modules/PluginImageModule.html":{},"modules.html":{},"overview.html":{}}}],["plugininlinecodemodule",{"_index":1034,"title":{"modules/PluginInlineCodeModule.html":{}},"body":{"modules/NgxEditorjsPluginsModule.html":{},"modules/PluginInlineCodeModule.html":{},"modules.html":{},"overview.html":{}}}],["pluginlinkmodule",{"_index":1035,"title":{"modules/PluginLinkModule.html":{}},"body":{"modules/NgxEditorjsPluginsModule.html":{},"modules/NgxTinynodesMaterialFormFieldDemo.html":{},"modules/PluginLinkModule.html":{},"modules.html":{},"overview.html":{}}}],["pluginlistmodule",{"_index":1036,"title":{"modules/PluginListModule.html":{}},"body":{"modules/NgxEditorjsPluginsModule.html":{},"modules/NgxTinynodesMaterialFormFieldDemo.html":{},"modules/PluginListModule.html":{},"modules.html":{},"overview.html":{}}}],["pluginmap",{"_index":811,"title":{},"body":{"injectables/NgxEditorJSPluginService.html":{}}}],["pluginmarkermodule",{"_index":1037,"title":{"modules/PluginMarkerModule.html":{}},"body":{"modules/NgxEditorjsPluginsModule.html":{},"modules/NgxTinynodesMaterialFormFieldDemo.html":{},"modules/PluginMarkerModule.html":{},"modules.html":{},"overview.html":{}}}],["pluginname",{"_index":105,"title":{},"body":{"interfaces/BlockData.html":{},"classes/FixedHeader.html":{},"modules/PluginCodeModule.html":{},"interfaces/PluginConfig.html":{},"interfaces/PluginConfigMap.html":{},"modules/PluginEmbedModule.html":{},"modules/PluginHeaderModule.html":{},"modules/PluginImageModule.html":{},"modules/PluginInlineCodeModule.html":{},"modules/PluginLinkModule.html":{},"modules/PluginListModule.html":{},"modules/PluginMarkerModule.html":{},"modules/PluginParagraphModule.html":{},"modules/PluginQuoteModule.html":{},"modules/PluginSimpleImageModule.html":{},"modules/PluginWarningModule.html":{},"interfaces/ToolSettingsMap.html":{}}}],["pluginparagraphmodule",{"_index":1038,"title":{"modules/PluginParagraphModule.html":{}},"body":{"modules/NgxEditorjsPluginsModule.html":{},"modules/NgxTinynodesMaterialFormFieldDemo.html":{},"modules/PluginParagraphModule.html":{},"modules.html":{},"overview.html":{}}}],["pluginproperty",{"_index":88,"title":{},"body":{"interfaces/BlockData.html":{},"interfaces/PluginConfig.html":{},"interfaces/PluginConfigMap.html":{},"interfaces/ToolSettingsMap.html":{},"miscellaneous/typealiases.html":{}}}],["pluginquotemodule",{"_index":1039,"title":{"modules/PluginQuoteModule.html":{}},"body":{"modules/NgxEditorjsPluginsModule.html":{},"modules/PluginQuoteModule.html":{},"modules.html":{},"overview.html":{}}}],["plugins",{"_index":78,"title":{},"body":{"interfaces/BlockData.html":{},"injectables/NgxEditorJSPluginService.html":{},"injectables/NgxEditorJSService.html":{},"modules/NgxEditorjsDemoModule.html":{},"modules/NgxTinynodesMaterialFormFieldDemo.html":{},"interfaces/PluginConfig.html":{},"interfaces/PluginConfigMap.html":{},"interfaces/ToolSettingsMap.html":{},"changelog.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"index.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["plugins.module.ts",{"_index":1043,"title":{},"body":{"modules/NgxEditorjsPluginsModule.html":{}}}],["plugins/code/code.module",{"_index":1049,"title":{},"body":{"modules/NgxEditorjsPluginsModule.html":{}}}],["plugins/embed/embed.module",{"_index":1050,"title":{},"body":{"modules/NgxEditorjsPluginsModule.html":{}}}],["plugins/header/header.module",{"_index":1051,"title":{},"body":{"modules/NgxEditorjsPluginsModule.html":{}}}],["plugins/image/image.module",{"_index":1052,"title":{},"body":{"modules/NgxEditorjsPluginsModule.html":{}}}],["plugins/inline",{"_index":1053,"title":{},"body":{"modules/NgxEditorjsPluginsModule.html":{}}}],["plugins/link/link.module",{"_index":1056,"title":{},"body":{"modules/NgxEditorjsPluginsModule.html":{}}}],["plugins/list/list.module",{"_index":1057,"title":{},"body":{"modules/NgxEditorjsPluginsModule.html":{}}}],["plugins/marker/marker.module",{"_index":1058,"title":{},"body":{"modules/NgxEditorjsPluginsModule.html":{}}}],["plugins/paragraph/paragraph.module",{"_index":1059,"title":{},"body":{"modules/NgxEditorjsPluginsModule.html":{}}}],["plugins/quote/quote.module",{"_index":1060,"title":{},"body":{"modules/NgxEditorjsPluginsModule.html":{}}}],["plugins/simple",{"_index":1061,"title":{},"body":{"modules/NgxEditorjsPluginsModule.html":{}}}],["plugins/src/lib/ngx",{"_index":1042,"title":{},"body":{"modules/NgxEditorjsPluginsModule.html":{}}}],["plugins/src/lib/plugins/code/code.module.ts",{"_index":1339,"title":{},"body":{"modules/PluginCodeModule.html":{}}}],["plugins/src/lib/plugins/embed/embed.module.ts",{"_index":1344,"title":{},"body":{"modules/PluginEmbedModule.html":{}}}],["plugins/src/lib/plugins/header/header.module.ts",{"_index":385,"title":{},"body":{"classes/FixedHeader.html":{},"modules/PluginHeaderModule.html":{}}}],["plugins/src/lib/plugins/header/header.module.ts:18",{"_index":392,"title":{},"body":{"classes/FixedHeader.html":{}}}],["plugins/src/lib/plugins/header/header.module.ts:8",{"_index":389,"title":{},"body":{"classes/FixedHeader.html":{}}}],["plugins/src/lib/plugins/image/image.module.ts",{"_index":1348,"title":{},"body":{"modules/PluginImageModule.html":{}}}],["plugins/src/lib/plugins/inline",{"_index":1351,"title":{},"body":{"modules/PluginInlineCodeModule.html":{}}}],["plugins/src/lib/plugins/link/link.module.ts",{"_index":1356,"title":{},"body":{"modules/PluginLinkModule.html":{}}}],["plugins/src/lib/plugins/list/list.module.ts",{"_index":1358,"title":{},"body":{"modules/PluginListModule.html":{}}}],["plugins/src/lib/plugins/marker/marker.module.ts",{"_index":1360,"title":{},"body":{"modules/PluginMarkerModule.html":{}}}],["plugins/src/lib/plugins/paragraph/paragraph.module.ts",{"_index":1364,"title":{},"body":{"modules/PluginParagraphModule.html":{}}}],["plugins/src/lib/plugins/quote/quote.module.ts",{"_index":1365,"title":{},"body":{"modules/PluginQuoteModule.html":{}}}],["plugins/src/lib/plugins/simple",{"_index":1368,"title":{},"body":{"modules/PluginSimpleImageModule.html":{}}}],["plugins/src/lib/plugins/warning/warning.module.ts",{"_index":1372,"title":{},"body":{"modules/PluginWarningModule.html":{}}}],["plugins/src/lib/services/plugin",{"_index":773,"title":{},"body":{"injectables/NgxEditorJSPluginService.html":{},"modules/NgxEditorJSPluginServiceModule.html":{}}}],["plugins/src/lib/types/plugins.ts",{"_index":69,"title":{},"body":{"interfaces/BlockData.html":{},"interfaces/PluginConfig.html":{},"interfaces/PluginConfigMap.html":{},"interfaces/ToolSettingsMap.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["plugins/src/lib/types/plugins.ts:107",{"_index":1343,"title":{},"body":{"interfaces/PluginConfigMap.html":{}}}],["plugins/src/lib/types/plugins.ts:43",{"_index":1376,"title":{},"body":{"interfaces/ToolSettingsMap.html":{}}}],["plugins/src/lib/types/plugins.ts:7",{"_index":70,"title":{},"body":{"interfaces/BlockData.html":{}}}],["plugins/src/lib/util/plugin.ts",{"_index":1691,"title":{},"body":{"miscellaneous/functions.html":{}}}],["plugins/warning/warning.module",{"_index":1064,"title":{},"body":{"modules/NgxEditorjsPluginsModule.html":{}}}],["plugins@2.0.0",{"_index":1392,"title":{},"body":{"changelog.html":{}}}],["pluginsimpleimagemodule",{"_index":1040,"title":{"modules/PluginSimpleImageModule.html":{}},"body":{"modules/NgxEditorjsPluginsModule.html":{},"modules/NgxTinynodesMaterialFormFieldDemo.html":{},"modules/PluginSimpleImageModule.html":{},"modules.html":{},"overview.html":{}}}],["plugintype",{"_index":85,"title":{},"body":{"interfaces/BlockData.html":{},"interfaces/PluginConfig.html":{},"interfaces/PluginConfigMap.html":{},"interfaces/ToolSettingsMap.html":{},"miscellaneous/typealiases.html":{}}}],["plugintypes",{"_index":83,"title":{},"body":{"interfaces/BlockData.html":{},"classes/FixedHeader.html":{},"modules/PluginCodeModule.html":{},"interfaces/PluginConfig.html":{},"interfaces/PluginConfigMap.html":{},"modules/PluginEmbedModule.html":{},"modules/PluginHeaderModule.html":{},"modules/PluginImageModule.html":{},"modules/PluginInlineCodeModule.html":{},"modules/PluginLinkModule.html":{},"modules/PluginListModule.html":{},"modules/PluginMarkerModule.html":{},"modules/PluginParagraphModule.html":{},"modules/PluginQuoteModule.html":{},"modules/PluginSimpleImageModule.html":{},"modules/PluginWarningModule.html":{},"interfaces/ToolSettingsMap.html":{},"miscellaneous/enumerations.html":{}}}],["plugintypes.block",{"_index":86,"title":{},"body":{"interfaces/BlockData.html":{},"classes/FixedHeader.html":{},"modules/PluginCodeModule.html":{},"interfaces/PluginConfig.html":{},"interfaces/PluginConfigMap.html":{},"modules/PluginEmbedModule.html":{},"modules/PluginHeaderModule.html":{},"modules/PluginImageModule.html":{},"modules/PluginLinkModule.html":{},"modules/PluginListModule.html":{},"modules/PluginParagraphModule.html":{},"modules/PluginQuoteModule.html":{},"modules/PluginSimpleImageModule.html":{},"modules/PluginWarningModule.html":{},"interfaces/ToolSettingsMap.html":{},"miscellaneous/typealiases.html":{}}}],["plugintypes.inline",{"_index":87,"title":{},"body":{"interfaces/BlockData.html":{},"interfaces/PluginConfig.html":{},"interfaces/PluginConfigMap.html":{},"modules/PluginInlineCodeModule.html":{},"modules/PluginMarkerModule.html":{},"interfaces/ToolSettingsMap.html":{},"miscellaneous/typealiases.html":{}}}],["pluginwarningmodule",{"_index":1041,"title":{"modules/PluginWarningModule.html":{}},"body":{"modules/NgxEditorjsPluginsModule.html":{},"modules/PluginWarningModule.html":{},"modules.html":{},"overview.html":{}}}],["pointing",{"_index":1210,"title":{},"body":{"components/NgxTinynodesMaterialFormFieldDemoComponent.html":{},"components/PageContainerComponent.html":{}}}],["policies",{"_index":1633,"title":{},"body":{"contributing.html":{}}}],["political",{"_index":1553,"title":{},"body":{"contributing.html":{}}}],["portions",{"_index":1753,"title":{},"body":{"license.html":{}}}],["ports",{"_index":1479,"title":{},"body":{"contributing.html":{}}}],["positive",{"_index":1525,"title":{},"body":{"contributing.html":{}}}],["possible",{"_index":1047,"title":{},"body":{"modules/NgxEditorjsPluginsModule.html":{}}}],["posted",{"_index":1634,"title":{},"body":{"contributing.html":{}}}],["posting",{"_index":1601,"title":{},"body":{"contributing.html":{}}}],["private",{"_index":287,"title":{},"body":{"interfaces/EditorJSMaterialForm.html":{},"directives/NgxEditorJSDirective.html":{},"injectables/NgxEditorJSPluginService.html":{},"injectables/NgxEditorJSService.html":{},"components/NgxTinynodesMaterialFormFieldDemoComponent.html":{},"components/PageContainerComponent.html":{},"injectables/PagesService.html":{},"contributing.html":{},"index.html":{}}}],["process",{"_index":656,"title":{},"body":{"directives/NgxEditorJSDirective.html":{},"contributing.html":{}}}],["professional",{"_index":1564,"title":{},"body":{"contributing.html":{}}}],["project",{"_index":1398,"title":{},"body":{"changelog.html":{},"contributing.html":{},"index.html":{}}}],["project's",{"_index":1643,"title":{},"body":{"contributing.html":{}}}],["promise",{"_index":425,"title":{},"body":{"classes/MockEditorJS.html":{},"classes/MockPlugin.html":{},"directives/NgxEditorJSDirective.html":{},"injectables/NgxEditorJSService.html":{}}}],["promise.resolve",{"_index":436,"title":{},"body":{"classes/MockEditorJS.html":{},"classes/MockPlugin.html":{}}}],["properties",{"_index":14,"title":{},"body":{"interfaces/Block.html":{},"interfaces/CreateEditorJSOptions.html":{},"interfaces/EditorJSChange.html":{},"interfaces/EditorJSClass.html":{},"interfaces/EditorJSInstanceConfig.html":{},"interfaces/EditorJSMaterialForm.html":{},"interfaces/Header.html":{},"interfaces/HeaderBlock.html":{},"interfaces/Image.html":{},"interfaces/ImageBlock.html":{},"interfaces/InjectorApiCallOptions.html":{},"interfaces/InjectorApiCallResponse.html":{},"interfaces/InjectorMethodOption.html":{},"interfaces/List.html":{},"interfaces/ListBlock.html":{},"classes/MockEditorJS.html":{},"injectables/MockNgZone.html":{},"interfaces/NgxEditorJSConfig.html":{},"interfaces/NgxEditorJSModuleConfig.html":{},"components/NgxTinynodesMaterialFormFieldDemoComponent.html":{},"interfaces/Page.html":{},"interfaces/PageBlock.html":{},"components/PageContainerComponent.html":{},"injectables/PagesService.html":{},"interfaces/Paragraph.html":{},"interfaces/ParagraphBlock.html":{},"interfaces/PluginConfig.html":{},"interfaces/Tag.html":{},"index.html":{}}}],["property",{"_index":55,"title":{},"body":{"interfaces/Block.html":{},"interfaces/BlockData.html":{},"interfaces/EditorJSClass.html":{},"interfaces/EditorJSInstanceConfig.html":{},"interfaces/Header.html":{},"interfaces/HeaderBlock.html":{},"interfaces/Image.html":{},"interfaces/ImageBlock.html":{},"interfaces/InjectorApiCallOptions.html":{},"interfaces/InjectorApiCallResponse.html":{},"interfaces/InjectorMethodOption.html":{},"interfaces/List.html":{},"interfaces/ListBlock.html":{},"directives/NgxEditorJSDirective.html":{},"interfaces/Paragraph.html":{},"interfaces/ParagraphBlock.html":{},"interfaces/PluginConfig.html":{},"interfaces/PluginConfigMap.html":{},"interfaces/ToolSettingsMap.html":{},"miscellaneous/typealiases.html":{}}}],["protected",{"_index":353,"title":{},"body":{"interfaces/EditorJSMaterialForm.html":{},"directives/NgxEditorJSDirective.html":{}}}],["provide",{"_index":253,"title":{},"body":{"interfaces/EditorJSMaterialForm.html":{},"classes/FixedHeader.html":{},"modules/NgxEditorJSModule.html":{},"modules/NgxEditorJSPluginServiceModule.html":{},"injectables/NgxEditorJSService.html":{},"modules/NgxEditorjsPluginsModule.html":{},"modules/PluginCodeModule.html":{},"modules/PluginEmbedModule.html":{},"modules/PluginHeaderModule.html":{},"modules/PluginImageModule.html":{},"modules/PluginInlineCodeModule.html":{},"modules/PluginLinkModule.html":{},"modules/PluginListModule.html":{},"modules/PluginMarkerModule.html":{},"modules/PluginParagraphModule.html":{},"modules/PluginQuoteModule.html":{},"modules/PluginSimpleImageModule.html":{},"modules/PluginWarningModule.html":{},"changelog.html":{},"index.html":{},"todo.html":{},"miscellaneous/variables.html":{}}}],["provided",{"_index":37,"title":{},"body":{"interfaces/Block.html":{},"interfaces/Header.html":{},"interfaces/HeaderBlock.html":{},"interfaces/Image.html":{},"interfaces/ImageBlock.html":{},"interfaces/List.html":{},"interfaces/ListBlock.html":{},"directives/NgxEditorJSDirective.html":{},"modules/NgxEditorJSModule.html":{},"injectables/NgxEditorJSPluginService.html":{},"injectables/NgxEditorJSService.html":{},"components/PageContainerComponent.html":{},"interfaces/Paragraph.html":{},"interfaces/ParagraphBlock.html":{},"changelog.html":{},"license.html":{}}}],["providedin",{"_index":803,"title":{},"body":{"injectables/NgxEditorJSPluginService.html":{},"injectables/NgxEditorJSService.html":{}}}],["provider",{"_index":100,"title":{},"body":{"interfaces/BlockData.html":{},"interfaces/EditorJSMaterialForm.html":{},"interfaces/PluginConfig.html":{},"interfaces/PluginConfigMap.html":{},"interfaces/ToolSettingsMap.html":{},"miscellaneous/variables.html":{}}}],["providers",{"_index":267,"title":{},"body":{"interfaces/EditorJSMaterialForm.html":{},"classes/FixedHeader.html":{},"modules/NgxEditorJSModule.html":{},"injectables/NgxEditorJSPluginService.html":{},"modules/NgxEditorJSPluginServiceModule.html":{},"modules/NgxEditorjsDemoModule.html":{},"modules/NgxEditorjsPluginsModule.html":{},"modules/NgxTinynodesComponentsModule.html":{},"modules/NgxTinynodesMatJsonOutputModule.html":{},"modules/NgxTinynodesMatTagInputModule.html":{},"modules/NgxTinynodesMaterialFormFieldDemo.html":{},"modules/PageStoreModule.html":{},"modules/PluginCodeModule.html":{},"modules/PluginEmbedModule.html":{},"modules/PluginHeaderModule.html":{},"modules/PluginImageModule.html":{},"modules/PluginInlineCodeModule.html":{},"modules/PluginLinkModule.html":{},"modules/PluginListModule.html":{},"modules/PluginMarkerModule.html":{},"modules/PluginParagraphModule.html":{},"modules/PluginQuoteModule.html":{},"modules/PluginSimpleImageModule.html":{},"modules/PluginWarningModule.html":{},"changelog.html":{},"overview.html":{}}}],["provides",{"_index":175,"title":{},"body":{"interfaces/EditorJSClass.html":{},"interfaces/EditorJSInstanceConfig.html":{},"interfaces/EditorJSMaterialForm.html":{},"classes/FixedHeader.html":{},"interfaces/InjectorApiCallOptions.html":{},"interfaces/InjectorApiCallResponse.html":{},"interfaces/InjectorMethodOption.html":{},"components/NgxEditorJSDemoHomeComponent.html":{},"directives/NgxEditorJSDirective.html":{},"modules/NgxEditorJSModule.html":{},"injectables/NgxEditorJSService.html":{},"modules/NgxEditorjsPluginsModule.html":{},"components/NgxTinynodesMaterialFormFieldDemoComponent.html":{},"components/PageContainerComponent.html":{},"injectables/PagesService.html":{},"modules/PluginCodeModule.html":{},"modules/PluginEmbedModule.html":{},"modules/PluginHeaderModule.html":{},"modules/PluginImageModule.html":{},"modules/PluginInlineCodeModule.html":{},"modules/PluginLinkModule.html":{},"modules/PluginListModule.html":{},"modules/PluginMarkerModule.html":{},"modules/PluginParagraphModule.html":{},"modules/PluginQuoteModule.html":{},"modules/PluginSimpleImageModule.html":{},"modules/PluginWarningModule.html":{},"changelog.html":{},"index.html":{}}}],["providing",{"_index":526,"title":{},"body":{"components/NgxEditorJSDemoHomeComponent.html":{}}}],["provied",{"_index":492,"title":{},"body":{"interfaces/NgxEditorJSConfig.html":{},"interfaces/NgxEditorJSModuleConfig.html":{},"miscellaneous/variables.html":{}}}],["public",{"_index":273,"title":{},"body":{"interfaces/EditorJSMaterialForm.html":{},"directives/NgxEditorJSDirective.html":{},"injectables/NgxEditorJSPluginService.html":{},"injectables/NgxEditorJSService.html":{},"components/NgxTinynodesMatJsonOutputComponent.html":{},"components/NgxTinynodesMaterialFormFieldDemoComponent.html":{},"components/PageContainerComponent.html":{},"injectables/PagesService.html":{},"contributing.html":{}}}],["publish",{"_index":1737,"title":{},"body":{"license.html":{},"todo.html":{}}}],["publishing",{"_index":1555,"title":{},"body":{"contributing.html":{},"todo.html":{}}}],["pull",{"_index":1470,"title":{},"body":{"contributing.html":{}}}],["purpose",{"_index":1763,"title":{},"body":{"license.html":{}}}],["query",{"_index":1294,"title":{},"body":{"injectables/PagesService.html":{}}}],["queryentity",{"_index":1286,"title":{},"body":{"injectables/PagesQuery.html":{}}}],["quote",{"_index":1366,"title":{},"body":{"modules/PluginQuoteModule.html":{}}}],["r",{"_index":946,"title":{},"body":{"injectables/NgxEditorJSService.html":{}}}],["race",{"_index":1518,"title":{},"body":{"contributing.html":{}}}],["re",{"_index":1394,"title":{},"body":{"changelog.html":{}}}],["reactive",{"_index":1191,"title":{},"body":{"components/NgxTinynodesMaterialFormFieldDemoComponent.html":{},"index.html":{}}}],["reactiveformsmodule",{"_index":1013,"title":{},"body":{"modules/NgxEditorjsDemoModule.html":{},"modules/NgxTinynodesMaterialFormFieldDemo.html":{}}}],["read",{"_index":318,"title":{},"body":{"interfaces/EditorJSMaterialForm.html":{},"components/PageContainerComponent.html":{}}}],["readme",{"_index":1710,"title":{},"body":{"index.html":{}}}],["readme.md",{"_index":1474,"title":{},"body":{"contributing.html":{}}}],["readonly",{"_index":319,"title":{},"body":{"interfaces/EditorJSMaterialForm.html":{},"directives/NgxEditorJSDirective.html":{},"injectables/NgxEditorJSPluginService.html":{},"injectables/NgxEditorJSService.html":{},"components/NgxTinynodesMatJsonOutputComponent.html":{},"components/NgxTinynodesMaterialFormFieldDemoComponent.html":{},"components/PageContainerComponent.html":{},"injectables/PagesService.html":{}}}],["ready",{"_index":150,"title":{},"body":{"interfaces/ChangeMap.html":{},"interfaces/EditorJSChange.html":{},"interfaces/EditorJSClass.html":{},"interfaces/EditorJSInstanceConfig.html":{},"interfaces/EditorMap.html":{},"interfaces/InjectorApiCallOptions.html":{},"interfaces/InjectorApiCallResponse.html":{},"interfaces/InjectorMethodOption.html":{},"directives/NgxEditorJSDirective.html":{},"injectables/NgxEditorJSService.html":{},"components/PageContainerComponent.html":{},"interfaces/ReadyMap.html":{},"interfaces/SavedMap.html":{}}}],["readymap",{"_index":152,"title":{"interfaces/ReadyMap.html":{}},"body":{"interfaces/ChangeMap.html":{},"interfaces/EditorJSChange.html":{},"interfaces/EditorMap.html":{},"injectables/NgxEditorJSService.html":{},"interfaces/ReadyMap.html":{},"interfaces/SavedMap.html":{}}}],["reasonably",{"_index":1561,"title":{},"body":{"contributing.html":{}}}],["reduce((pluginmap",{"_index":810,"title":{},"body":{"injectables/NgxEditorJSPluginService.html":{}}}],["ref",{"_index":351,"title":{},"body":{"interfaces/EditorJSMaterialForm.html":{},"injectables/NgxEditorJSService.html":{},"components/NgxTinynodesMaterialFormFieldDemoComponent.html":{},"components/PageContainerComponent.html":{}}}],["reflect",{"_index":1417,"title":{},"body":{"changelog.html":{}}}],["regard",{"_index":1629,"title":{},"body":{"contributing.html":{}}}],["regardless",{"_index":1506,"title":{},"body":{"contributing.html":{}}}],["regular",{"_index":1221,"title":{},"body":{"components/NgxTinynodesMaterialFormFieldDemoComponent.html":{}}}],["reject",{"_index":1578,"title":{},"body":{"contributing.html":{}}}],["related",{"_index":704,"title":{},"body":{"directives/NgxEditorJSDirective.html":{},"changelog.html":{}}}],["release",{"_index":1414,"title":{},"body":{"changelog.html":{}}}],["released",{"_index":1390,"title":{},"body":{"changelog.html":{}}}],["religion",{"_index":1519,"title":{},"body":{"contributing.html":{}}}],["remark",{"_index":905,"title":{},"body":{"injectables/NgxEditorJSService.html":{}}}],["remarks",{"_index":932,"title":{},"body":{"injectables/NgxEditorJSService.html":{}}}],["remove",{"_index":399,"title":{},"body":{"classes/FixedHeader.html":{},"modules/PluginHeaderModule.html":{},"contributing.html":{}}}],["removeblock",{"_index":1296,"title":{},"body":{"injectables/PagesService.html":{}}}],["removeblock(pageid",{"_index":1310,"title":{},"body":{"injectables/PagesService.html":{}}}],["removed",{"_index":1309,"title":{},"body":{"injectables/PagesService.html":{},"changelog.html":{},"contributing.html":{}}}],["removes",{"_index":1308,"title":{},"body":{"injectables/PagesService.html":{}}}],["render",{"_index":430,"title":{},"body":{"classes/MockEditorJS.html":{},"classes/MockPlugin.html":{},"interfaces/NgxEditorJSConfig.html":{},"directives/NgxEditorJSDirective.html":{},"interfaces/NgxEditorJSModuleConfig.html":{},"injectables/NgxEditorJSService.html":{},"components/NgxTinynodesMaterialFormFieldDemoComponent.html":{},"injectables/PagesService.html":{}}}],["repercussions",{"_index":1641,"title":{},"body":{"contributing.html":{}}}],["repo",{"_index":1340,"title":{},"body":{"modules/PluginCodeModule.html":{},"modules/PluginEmbedModule.html":{},"modules/PluginHeaderModule.html":{},"modules/PluginImageModule.html":{},"modules/PluginInlineCodeModule.html":{},"modules/PluginLinkModule.html":{},"modules/PluginListModule.html":{},"modules/PluginMarkerModule.html":{},"modules/PluginParagraphModule.html":{},"modules/PluginQuoteModule.html":{},"modules/PluginSimpleImageModule.html":{},"modules/PluginWarningModule.html":{},"todo.html":{}}}],["repo](https://github.com/editor",{"_index":411,"title":{},"body":{"classes/FixedHeader.html":{},"modules/PluginCodeModule.html":{},"modules/PluginEmbedModule.html":{},"modules/PluginHeaderModule.html":{},"modules/PluginImageModule.html":{},"modules/PluginInlineCodeModule.html":{},"modules/PluginLinkModule.html":{},"modules/PluginListModule.html":{},"modules/PluginMarkerModule.html":{},"modules/PluginParagraphModule.html":{},"modules/PluginQuoteModule.html":{},"modules/PluginSimpleImageModule.html":{},"modules/PluginWarningModule.html":{}}}],["report",{"_index":1436,"title":{},"body":{"changelog.html":{}}}],["reported",{"_index":1616,"title":{},"body":{"contributing.html":{}}}],["reporter",{"_index":1630,"title":{},"body":{"contributing.html":{}}}],["repository",{"_index":1459,"title":{},"body":{"contributing.html":{},"index.html":{}}}],["represent",{"_index":1485,"title":{},"body":{"contributing.html":{}}}],["representation",{"_index":1610,"title":{},"body":{"contributing.html":{}}}],["representative",{"_index":1607,"title":{},"body":{"contributing.html":{}}}],["representing",{"_index":1597,"title":{},"body":{"contributing.html":{}}}],["request",{"_index":986,"title":{},"body":{"injectables/NgxEditorJSService.html":{},"contributing.html":{}}}],["requied",{"_index":301,"title":{},"body":{"interfaces/EditorJSMaterialForm.html":{}}}],["require",{"_index":1806,"title":{},"body":{"miscellaneous/variables.html":{}}}],["require.context",{"_index":1810,"title":{},"body":{"miscellaneous/variables.html":{}}}],["required",{"_index":182,"title":{},"body":{"interfaces/EditorJSClass.html":{},"interfaces/EditorJSInstanceConfig.html":{},"interfaces/EditorJSMaterialForm.html":{},"interfaces/InjectorApiCallOptions.html":{},"interfaces/InjectorApiCallResponse.html":{},"interfaces/InjectorMethodOption.html":{},"injectables/NgxEditorJSService.html":{},"modules/NgxEditorjsPluginsModule.html":{},"index.html":{}}}],["required(required",{"_index":303,"title":{},"body":{"interfaces/EditorJSMaterialForm.html":{}}}],["reset",{"_index":742,"title":{},"body":{"modules/NgxEditorJSModule.html":{},"modules/NgxEditorJSPluginServiceModule.html":{},"modules/NgxEditorjsDemoModule.html":{},"modules/NgxEditorjsPluginsModule.html":{},"modules/NgxTinynodesComponentsModule.html":{},"modules/NgxTinynodesMatJsonOutputModule.html":{},"modules/NgxTinynodesMatTagInputModule.html":{},"modules/NgxTinynodesMaterialFormFieldDemo.html":{},"components/NgxTinynodesMaterialFormFieldDemoComponent.html":{},"components/PageContainerComponent.html":{},"modules/PageStoreModule.html":{},"overview.html":{}}}],["resetting",{"_index":891,"title":{},"body":{"injectables/NgxEditorJSService.html":{}}}],["resolved",{"_index":934,"title":{},"body":{"injectables/NgxEditorJSService.html":{},"changelog.html":{}}}],["respectful",{"_index":1529,"title":{},"body":{"contributing.html":{}}}],["response",{"_index":211,"title":{},"body":{"interfaces/EditorJSClass.html":{},"interfaces/EditorJSInstanceConfig.html":{},"interfaces/InjectorApiCallOptions.html":{},"interfaces/InjectorApiCallResponse.html":{},"interfaces/InjectorMethodOption.html":{},"injectables/NgxEditorJSService.html":{},"contributing.html":{}}}],["responsibilities",{"_index":1566,"title":{},"body":{"contributing.html":{}}}],["responsibility",{"_index":1576,"title":{},"body":{"contributing.html":{}}}],["responsible",{"_index":1567,"title":{},"body":{"contributing.html":{}}}],["restriction",{"_index":1732,"title":{},"body":{"license.html":{}}}],["result",{"_index":65,"title":{},"body":{"interfaces/Block.html":{},"interfaces/BlockData.html":{},"interfaces/ChangeMap.html":{},"interfaces/CreateEditorJSOptions.html":{},"interfaces/EditorJSChange.html":{},"interfaces/EditorJSClass.html":{},"interfaces/EditorJSInstanceConfig.html":{},"interfaces/EditorJSMaterialForm.html":{},"interfaces/EditorMap.html":{},"classes/FixedHeader.html":{},"interfaces/Header.html":{},"interfaces/HeaderBlock.html":{},"interfaces/Image.html":{},"interfaces/ImageBlock.html":{},"interfaces/InjectorApiCallOptions.html":{},"interfaces/InjectorApiCallResponse.html":{},"interfaces/InjectorMethodOption.html":{},"interfaces/List.html":{},"interfaces/ListBlock.html":{},"classes/MockEditorJS.html":{},"injectables/MockNgZone.html":{},"classes/MockPlugin.html":{},"interfaces/NgxEditorJSConfig.html":{},"components/NgxEditorJSDemoHomeComponent.html":{},"modules/NgxEditorJSDemoMaterialModule.html":{},"directives/NgxEditorJSDirective.html":{},"modules/NgxEditorJSModule.html":{},"interfaces/NgxEditorJSModuleConfig.html":{},"injectables/NgxEditorJSPluginService.html":{},"modules/NgxEditorJSPluginServiceModule.html":{},"injectables/NgxEditorJSService.html":{},"modules/NgxEditorjsDemoModule.html":{},"modules/NgxEditorjsPluginsModule.html":{},"modules/NgxTinynodesComponentsModule.html":{},"interfaces/NgxTinynodesMatFieldComponent.html":{},"components/NgxTinynodesMatJsonOutputComponent.html":{},"modules/NgxTinynodesMatJsonOutputModule.html":{},"modules/NgxTinynodesMatTagInputModule.html":{},"modules/NgxTinynodesMaterialFormFieldDemo.html":{},"components/NgxTinynodesMaterialFormFieldDemoComponent.html":{},"interfaces/Page.html":{},"interfaces/PageBlock.html":{},"components/PageContainerComponent.html":{},"modules/PageStoreModule.html":{},"injectables/PagesQuery.html":{},"injectables/PagesService.html":{},"interfaces/PagesState.html":{},"injectables/PagesStore.html":{},"interfaces/Paragraph.html":{},"interfaces/ParagraphBlock.html":{},"modules/PluginCodeModule.html":{},"interfaces/PluginConfig.html":{},"interfaces/PluginConfigMap.html":{},"modules/PluginEmbedModule.html":{},"modules/PluginHeaderModule.html":{},"modules/PluginImageModule.html":{},"modules/PluginInlineCodeModule.html":{},"modules/PluginLinkModule.html":{},"modules/PluginListModule.html":{},"modules/PluginMarkerModule.html":{},"modules/PluginParagraphModule.html":{},"modules/PluginQuoteModule.html":{},"modules/PluginSimpleImageModule.html":{},"modules/PluginWarningModule.html":{},"interfaces/ReadyMap.html":{},"interfaces/SavedMap.html":{},"interfaces/Tag.html":{},"interfaces/ToolSettingsMap.html":{},"changelog.html":{},"contributing.html":{},"dependencies.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"index.html":{},"license.html":{},"modules.html":{},"overview.html":{},"todo.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["results",{"_index":67,"title":{},"body":{"interfaces/Block.html":{},"interfaces/BlockData.html":{},"interfaces/ChangeMap.html":{},"interfaces/CreateEditorJSOptions.html":{},"interfaces/EditorJSChange.html":{},"interfaces/EditorJSClass.html":{},"interfaces/EditorJSInstanceConfig.html":{},"interfaces/EditorJSMaterialForm.html":{},"interfaces/EditorMap.html":{},"classes/FixedHeader.html":{},"interfaces/Header.html":{},"interfaces/HeaderBlock.html":{},"interfaces/Image.html":{},"interfaces/ImageBlock.html":{},"interfaces/InjectorApiCallOptions.html":{},"interfaces/InjectorApiCallResponse.html":{},"interfaces/InjectorMethodOption.html":{},"interfaces/List.html":{},"interfaces/ListBlock.html":{},"classes/MockEditorJS.html":{},"injectables/MockNgZone.html":{},"classes/MockPlugin.html":{},"interfaces/NgxEditorJSConfig.html":{},"components/NgxEditorJSDemoHomeComponent.html":{},"modules/NgxEditorJSDemoMaterialModule.html":{},"directives/NgxEditorJSDirective.html":{},"modules/NgxEditorJSModule.html":{},"interfaces/NgxEditorJSModuleConfig.html":{},"injectables/NgxEditorJSPluginService.html":{},"modules/NgxEditorJSPluginServiceModule.html":{},"injectables/NgxEditorJSService.html":{},"modules/NgxEditorjsDemoModule.html":{},"modules/NgxEditorjsPluginsModule.html":{},"modules/NgxTinynodesComponentsModule.html":{},"interfaces/NgxTinynodesMatFieldComponent.html":{},"components/NgxTinynodesMatJsonOutputComponent.html":{},"modules/NgxTinynodesMatJsonOutputModule.html":{},"modules/NgxTinynodesMatTagInputModule.html":{},"modules/NgxTinynodesMaterialFormFieldDemo.html":{},"components/NgxTinynodesMaterialFormFieldDemoComponent.html":{},"interfaces/Page.html":{},"interfaces/PageBlock.html":{},"components/PageContainerComponent.html":{},"modules/PageStoreModule.html":{},"injectables/PagesQuery.html":{},"injectables/PagesService.html":{},"interfaces/PagesState.html":{},"injectables/PagesStore.html":{},"interfaces/Paragraph.html":{},"interfaces/ParagraphBlock.html":{},"modules/PluginCodeModule.html":{},"interfaces/PluginConfig.html":{},"interfaces/PluginConfigMap.html":{},"modules/PluginEmbedModule.html":{},"modules/PluginHeaderModule.html":{},"modules/PluginImageModule.html":{},"modules/PluginInlineCodeModule.html":{},"modules/PluginLinkModule.html":{},"modules/PluginListModule.html":{},"modules/PluginMarkerModule.html":{},"modules/PluginParagraphModule.html":{},"modules/PluginQuoteModule.html":{},"modules/PluginSimpleImageModule.html":{},"modules/PluginWarningModule.html":{},"interfaces/ReadyMap.html":{},"interfaces/SavedMap.html":{},"interfaces/Tag.html":{},"interfaces/ToolSettingsMap.html":{},"changelog.html":{},"contributing.html":{},"dependencies.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"index.html":{},"license.html":{},"modules.html":{},"overview.html":{},"todo.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["return",{"_index":280,"title":{},"body":{"interfaces/EditorJSMaterialForm.html":{},"classes/FixedHeader.html":{},"classes/MockEditorJS.html":{},"injectables/MockNgZone.html":{},"classes/MockPlugin.html":{},"directives/NgxEditorJSDirective.html":{},"modules/NgxEditorJSModule.html":{},"injectables/NgxEditorJSPluginService.html":{},"injectables/NgxEditorJSService.html":{},"components/NgxTinynodesMaterialFormFieldDemoComponent.html":{},"components/PageContainerComponent.html":{},"injectables/PagesService.html":{},"modules/PluginHeaderModule.html":{},"miscellaneous/functions.html":{}}}],["returning",{"_index":1687,"title":{},"body":{"miscellaneous/functions.html":{}}}],["returns",{"_index":171,"title":{},"body":{"interfaces/EditorJSClass.html":{},"interfaces/EditorJSInstanceConfig.html":{},"classes/FixedHeader.html":{},"interfaces/InjectorApiCallOptions.html":{},"interfaces/InjectorApiCallResponse.html":{},"interfaces/InjectorMethodOption.html":{},"injectables/MockNgZone.html":{},"classes/MockPlugin.html":{},"directives/NgxEditorJSDirective.html":{},"modules/NgxEditorJSModule.html":{},"injectables/NgxEditorJSPluginService.html":{},"injectables/NgxEditorJSService.html":{},"components/NgxTinynodesMatJsonOutputComponent.html":{},"components/NgxTinynodesMaterialFormFieldDemoComponent.html":{},"components/PageContainerComponent.html":{},"injectables/PagesService.html":{},"modules/PluginHeaderModule.html":{},"miscellaneous/functions.html":{}}}],["reviewed",{"_index":1621,"title":{},"body":{"contributing.html":{}}}],["reviewer",{"_index":1493,"title":{},"body":{"contributing.html":{}}}],["right",{"_index":1575,"title":{},"body":{"contributing.html":{}}}],["rights",{"_index":1735,"title":{},"body":{"license.html":{}}}],["root",{"_index":747,"title":{},"body":{"modules/NgxEditorJSModule.html":{},"injectables/NgxEditorJSPluginService.html":{},"injectables/NgxEditorJSService.html":{}}}],["routable",{"_index":1122,"title":{},"body":{"components/NgxTinynodesMaterialFormFieldDemoComponent.html":{}}}],["route",{"_index":1815,"title":{},"body":{"miscellaneous/variables.html":{}}}],["routermodule",{"_index":1014,"title":{},"body":{"modules/NgxEditorjsDemoModule.html":{},"modules/NgxTinynodesMaterialFormFieldDemo.html":{}}}],["routermodule.forchild(ngxeditorjsdemoroutes",{"_index":1027,"title":{},"body":{"modules/NgxEditorjsDemoModule.html":{}}}],["routermodule.forchild(routes",{"_index":1120,"title":{},"body":{"modules/NgxTinynodesMaterialFormFieldDemo.html":{}}}],["routes",{"_index":1118,"title":{},"body":{"modules/NgxTinynodesMaterialFormFieldDemo.html":{}}}],["run",{"_index":452,"title":{},"body":{"injectables/MockNgZone.html":{},"injectables/NgxEditorJSService.html":{},"index.html":{}}}],["run(fn",{"_index":456,"title":{},"body":{"injectables/MockNgZone.html":{}}}],["runoutsideangular",{"_index":453,"title":{},"body":{"injectables/MockNgZone.html":{}}}],["runoutsideangular(fn",{"_index":459,"title":{},"body":{"injectables/MockNgZone.html":{}}}],["rxjs",{"_index":145,"title":{},"body":{"interfaces/ChangeMap.html":{},"interfaces/EditorJSChange.html":{},"interfaces/EditorJSMaterialForm.html":{},"interfaces/EditorMap.html":{},"directives/NgxEditorJSDirective.html":{},"injectables/NgxEditorJSService.html":{},"components/NgxTinynodesMaterialFormFieldDemoComponent.html":{},"components/PageContainerComponent.html":{},"injectables/PagesService.html":{},"interfaces/ReadyMap.html":{},"interfaces/SavedMap.html":{},"dependencies.html":{}}}],["rxjs/operators",{"_index":243,"title":{},"body":{"interfaces/EditorJSMaterialForm.html":{},"directives/NgxEditorJSDirective.html":{},"injectables/NgxEditorJSService.html":{},"components/NgxTinynodesMaterialFormFieldDemoComponent.html":{},"components/PageContainerComponent.html":{}}}],["sanitizer",{"_index":475,"title":{},"body":{"interfaces/NgxEditorJSConfig.html":{},"directives/NgxEditorJSDirective.html":{},"interfaces/NgxEditorJSModuleConfig.html":{}}}],["sanitizerconfig",{"_index":489,"title":{},"body":{"interfaces/NgxEditorJSConfig.html":{},"directives/NgxEditorJSDirective.html":{},"interfaces/NgxEditorJSModuleConfig.html":{}}}],["save",{"_index":141,"title":{},"body":{"interfaces/ChangeMap.html":{},"interfaces/EditorJSChange.html":{},"interfaces/EditorJSClass.html":{},"interfaces/EditorJSInstanceConfig.html":{},"interfaces/EditorMap.html":{},"interfaces/InjectorApiCallOptions.html":{},"interfaces/InjectorApiCallResponse.html":{},"interfaces/InjectorMethodOption.html":{},"classes/MockEditorJS.html":{},"classes/MockPlugin.html":{},"directives/NgxEditorJSDirective.html":{},"injectables/NgxEditorJSService.html":{},"components/NgxTinynodesMaterialFormFieldDemoComponent.html":{},"components/PageContainerComponent.html":{},"injectables/PagesService.html":{},"interfaces/ReadyMap.html":{},"interfaces/SavedMap.html":{},"todo.html":{}}}],["save(options",{"_index":882,"title":{},"body":{"injectables/NgxEditorJSService.html":{}}}],["saved",{"_index":635,"title":{},"body":{"directives/NgxEditorJSDirective.html":{},"components/PageContainerComponent.html":{}}}],["savedmap",{"_index":153,"title":{"interfaces/SavedMap.html":{}},"body":{"interfaces/ChangeMap.html":{},"interfaces/EditorJSChange.html":{},"interfaces/EditorMap.html":{},"injectables/NgxEditorJSService.html":{},"interfaces/ReadyMap.html":{},"interfaces/SavedMap.html":{}}}],["saver",{"_index":420,"title":{},"body":{"classes/MockEditorJS.html":{},"classes/MockPlugin.html":{},"injectables/NgxEditorJSService.html":{}}}],["saving",{"_index":1212,"title":{},"body":{"components/NgxTinynodesMaterialFormFieldDemoComponent.html":{},"components/PageContainerComponent.html":{}}}],["scheme",{"_index":1487,"title":{},"body":{"contributing.html":{}}}],["scope",{"_index":1593,"title":{},"body":{"contributing.html":{}}}],["scripts",{"_index":1448,"title":{},"body":{"changelog.html":{}}}],["scroll",{"_index":1229,"title":{},"body":{"components/NgxTinynodesMaterialFormFieldDemoComponent.html":{},"components/PageContainerComponent.html":{}}}],["searchable",{"_index":1698,"title":{},"body":{"index.html":{}}}],["second",{"_index":859,"title":{},"body":{"injectables/NgxEditorJSService.html":{},"contributing.html":{}}}],["seconds",{"_index":1188,"title":{},"body":{"components/NgxTinynodesMaterialFormFieldDemoComponent.html":{}}}],["section",{"_index":520,"title":{},"body":{"components/NgxEditorJSDemoHomeComponent.html":{}}}],["see",{"_index":409,"title":{},"body":{"classes/FixedHeader.html":{},"components/NgxTinynodesMaterialFormFieldDemoComponent.html":{},"components/PageContainerComponent.html":{},"modules/PluginCodeModule.html":{},"modules/PluginEmbedModule.html":{},"modules/PluginHeaderModule.html":{},"modules/PluginImageModule.html":{},"modules/PluginInlineCodeModule.html":{},"modules/PluginLinkModule.html":{},"modules/PluginListModule.html":{},"modules/PluginMarkerModule.html":{},"modules/PluginParagraphModule.html":{},"modules/PluginQuoteModule.html":{},"modules/PluginSimpleImageModule.html":{},"modules/PluginWarningModule.html":{},"changelog.html":{},"index.html":{}}}],["selection",{"_index":1792,"title":{},"body":{"todo.html":{}}}],["selector",{"_index":262,"title":{},"body":{"interfaces/EditorJSMaterialForm.html":{},"components/NgxEditorJSDemoHomeComponent.html":{},"directives/NgxEditorJSDirective.html":{},"components/NgxTinynodesMatJsonOutputComponent.html":{},"components/NgxTinynodesMaterialFormFieldDemoComponent.html":{},"components/PageContainerComponent.html":{}}}],["self",{"_index":235,"title":{},"body":{"interfaces/EditorJSMaterialForm.html":{}}}],["sell",{"_index":1741,"title":{},"body":{"license.html":{}}}],["semver",{"_index":1488,"title":{},"body":{"contributing.html":{}}}],["separately",{"_index":1635,"title":{},"body":{"contributing.html":{}}}],["service",{"_index":592,"title":{},"body":{"directives/NgxEditorJSDirective.html":{},"injectables/NgxEditorJSPluginService.html":{},"injectables/NgxEditorJSService.html":{},"components/NgxTinynodesMaterialFormFieldDemoComponent.html":{},"components/PageContainerComponent.html":{},"injectables/PagesService.html":{},"changelog.html":{},"miscellaneous/functions.html":{},"index.html":{},"todo.html":{}}}],["service.module",{"_index":1066,"title":{},"body":{"modules/NgxEditorjsPluginsModule.html":{}}}],["service.module.ts",{"_index":827,"title":{},"body":{"modules/NgxEditorJSPluginServiceModule.html":{}}}],["service.service",{"_index":830,"title":{},"body":{"modules/NgxEditorJSPluginServiceModule.html":{}}}],["service.service.ts",{"_index":774,"title":{},"body":{"injectables/NgxEditorJSPluginService.html":{}}}],["service.service.ts:13",{"_index":784,"title":{},"body":{"injectables/NgxEditorJSPluginService.html":{}}}],["service.service.ts:23",{"_index":787,"title":{},"body":{"injectables/NgxEditorJSPluginService.html":{}}}],["service.service.ts:32",{"_index":786,"title":{},"body":{"injectables/NgxEditorJSPluginService.html":{}}}],["service.service.ts:40",{"_index":790,"title":{},"body":{"injectables/NgxEditorJSPluginService.html":{}}}],["service.service.ts:54",{"_index":795,"title":{},"body":{"injectables/NgxEditorJSPluginService.html":{}}}],["service.service.ts:68",{"_index":798,"title":{},"body":{"injectables/NgxEditorJSPluginService.html":{}}}],["service.ts",{"_index":160,"title":{},"body":{"interfaces/CreateEditorJSOptions.html":{}}}],["services",{"_index":578,"title":{},"body":{"directives/NgxEditorJSDirective.html":{},"index.html":{}}}],["services/editorjs.service",{"_index":248,"title":{},"body":{"interfaces/EditorJSMaterialForm.html":{},"directives/NgxEditorJSDirective.html":{},"modules/NgxEditorJSModule.html":{}}}],["services/plugin",{"_index":1065,"title":{},"body":{"modules/NgxEditorjsPluginsModule.html":{}}}],["set",{"_index":111,"title":{},"body":{"interfaces/BlockData.html":{},"interfaces/CreateEditorJSOptions.html":{},"interfaces/EditorJSMaterialForm.html":{},"interfaces/NgxEditorJSConfig.html":{},"directives/NgxEditorJSDirective.html":{},"interfaces/NgxEditorJSModuleConfig.html":{},"injectables/NgxEditorJSService.html":{},"components/NgxTinynodesMaterialFormFieldDemoComponent.html":{},"interfaces/PluginConfig.html":{},"interfaces/PluginConfigMap.html":{},"interfaces/ToolSettingsMap.html":{},"miscellaneous/functions.html":{},"index.html":{}}}],["setblocks",{"_index":1297,"title":{},"body":{"injectables/PagesService.html":{}}}],["setblocks(pageid",{"_index":1312,"title":{},"body":{"injectables/PagesService.html":{}}}],["setdescribedbyids(ids",{"_index":336,"title":{},"body":{"interfaces/EditorJSMaterialForm.html":{}}}],["sets",{"_index":603,"title":{},"body":{"directives/NgxEditorJSDirective.html":{},"modules/NgxEditorJSModule.html":{},"injectables/NgxEditorJSService.html":{},"components/NgxTinynodesMaterialFormFieldDemoComponent.html":{},"components/PageContainerComponent.html":{}}}],["setting",{"_index":1565,"title":{},"body":{"contributing.html":{},"todo.html":{}}}],["settings",{"_index":90,"title":{},"body":{"interfaces/BlockData.html":{},"interfaces/PluginConfig.html":{},"interfaces/PluginConfigMap.html":{},"interfaces/ToolSettingsMap.html":{},"miscellaneous/typealiases.html":{}}}],["setup",{"_index":839,"title":{},"body":{"injectables/NgxEditorJSService.html":{}}}],["setupsubjects(options",{"_index":992,"title":{},"body":{"injectables/NgxEditorJSService.html":{}}}],["several",{"_index":837,"title":{},"body":{"injectables/NgxEditorJSService.html":{},"modules/NgxEditorjsPluginsModule.html":{},"changelog.html":{}}}],["sexual",{"_index":1520,"title":{},"body":{"contributing.html":{}}}],["sexualized",{"_index":1545,"title":{},"body":{"contributing.html":{}}}],["shall",{"_index":1750,"title":{},"body":{"license.html":{}}}],["ships",{"_index":1712,"title":{},"body":{"index.html":{}}}],["shortcut",{"_index":106,"title":{},"body":{"interfaces/BlockData.html":{},"interfaces/PluginConfig.html":{},"interfaces/PluginConfigMap.html":{},"modules/PluginInlineCodeModule.html":{},"modules/PluginMarkerModule.html":{},"interfaces/ToolSettingsMap.html":{}}}],["shouldlabelfloat",{"_index":328,"title":{},"body":{"interfaces/EditorJSMaterialForm.html":{}}}],["show",{"_index":622,"title":{},"body":{"directives/NgxEditorJSDirective.html":{}}}],["showing",{"_index":1539,"title":{},"body":{"contributing.html":{}}}],["shown",{"_index":482,"title":{},"body":{"interfaces/NgxEditorJSConfig.html":{},"interfaces/NgxEditorJSModuleConfig.html":{}}}],["shows",{"_index":525,"title":{},"body":{"components/NgxEditorJSDemoHomeComponent.html":{}}}],["sign",{"_index":1490,"title":{},"body":{"contributing.html":{}}}],["simple",{"_index":1371,"title":{},"body":{"modules/PluginSimpleImageModule.html":{}}}],["simplechanges",{"_index":648,"title":{},"body":{"directives/NgxEditorJSDirective.html":{}}}],["simpleimage",{"_index":1209,"title":{},"body":{"components/NgxTinynodesMaterialFormFieldDemoComponent.html":{},"components/PageContainerComponent.html":{},"modules/PluginSimpleImageModule.html":{}}}],["simulatezoneexit",{"_index":454,"title":{},"body":{"injectables/MockNgZone.html":{}}}],["single",{"_index":219,"title":{},"body":{"interfaces/EditorJSMaterialForm.html":{},"injectables/NgxEditorJSService.html":{},"components/NgxTinynodesMaterialFormFieldDemoComponent.html":{},"components/PageContainerComponent.html":{}}}],["site",{"_index":1381,"title":{},"body":{"changelog.html":{},"index.html":{}}}],["size",{"_index":1509,"title":{},"body":{"contributing.html":{}}}],["skipsave",{"_index":206,"title":{},"body":{"interfaces/EditorJSClass.html":{},"interfaces/EditorJSInstanceConfig.html":{},"interfaces/InjectorApiCallOptions.html":{},"interfaces/InjectorApiCallResponse.html":{},"interfaces/InjectorMethodOption.html":{},"components/NgxTinynodesMaterialFormFieldDemoComponent.html":{}}}],["skipself",{"_index":756,"title":{},"body":{"modules/NgxEditorJSModule.html":{}}}],["small",{"_index":1454,"title":{},"body":{"changelog.html":{}}}],["social",{"_index":1602,"title":{},"body":{"contributing.html":{}}}],["software",{"_index":1729,"title":{},"body":{"license.html":{}}}],["source",{"_index":4,"title":{},"body":{"interfaces/Block.html":{},"interfaces/BlockData.html":{},"interfaces/ChangeMap.html":{},"interfaces/CreateEditorJSOptions.html":{},"interfaces/EditorJSChange.html":{},"interfaces/EditorJSClass.html":{},"interfaces/EditorJSInstanceConfig.html":{},"interfaces/EditorJSMaterialForm.html":{},"interfaces/EditorMap.html":{},"classes/FixedHeader.html":{},"interfaces/Header.html":{},"interfaces/HeaderBlock.html":{},"interfaces/Image.html":{},"interfaces/ImageBlock.html":{},"interfaces/InjectorApiCallOptions.html":{},"interfaces/InjectorApiCallResponse.html":{},"interfaces/InjectorMethodOption.html":{},"interfaces/List.html":{},"interfaces/ListBlock.html":{},"classes/MockEditorJS.html":{},"injectables/MockNgZone.html":{},"classes/MockPlugin.html":{},"interfaces/NgxEditorJSConfig.html":{},"components/NgxEditorJSDemoHomeComponent.html":{},"modules/NgxEditorJSDemoMaterialModule.html":{},"directives/NgxEditorJSDirective.html":{},"modules/NgxEditorJSModule.html":{},"interfaces/NgxEditorJSModuleConfig.html":{},"injectables/NgxEditorJSPluginService.html":{},"modules/NgxEditorJSPluginServiceModule.html":{},"injectables/NgxEditorJSService.html":{},"modules/NgxEditorjsDemoModule.html":{},"modules/NgxEditorjsPluginsModule.html":{},"modules/NgxTinynodesComponentsModule.html":{},"interfaces/NgxTinynodesMatFieldComponent.html":{},"components/NgxTinynodesMatJsonOutputComponent.html":{},"modules/NgxTinynodesMatJsonOutputModule.html":{},"modules/NgxTinynodesMatTagInputModule.html":{},"modules/NgxTinynodesMaterialFormFieldDemo.html":{},"components/NgxTinynodesMaterialFormFieldDemoComponent.html":{},"interfaces/Page.html":{},"interfaces/PageBlock.html":{},"components/PageContainerComponent.html":{},"modules/PageStoreModule.html":{},"injectables/PagesQuery.html":{},"injectables/PagesService.html":{},"interfaces/PagesState.html":{},"injectables/PagesStore.html":{},"interfaces/Paragraph.html":{},"interfaces/ParagraphBlock.html":{},"modules/PluginCodeModule.html":{},"interfaces/PluginConfig.html":{},"interfaces/PluginConfigMap.html":{},"modules/PluginEmbedModule.html":{},"modules/PluginHeaderModule.html":{},"modules/PluginImageModule.html":{},"modules/PluginInlineCodeModule.html":{},"modules/PluginLinkModule.html":{},"modules/PluginListModule.html":{},"modules/PluginMarkerModule.html":{},"modules/PluginParagraphModule.html":{},"modules/PluginQuoteModule.html":{},"modules/PluginSimpleImageModule.html":{},"modules/PluginWarningModule.html":{},"interfaces/ReadyMap.html":{},"interfaces/SavedMap.html":{},"interfaces/Tag.html":{},"interfaces/ToolSettingsMap.html":{}}}],["spaces",{"_index":1596,"title":{},"body":{"contributing.html":{}}}],["spec\\.ts",{"_index":1811,"title":{},"body":{"miscellaneous/variables.html":{}}}],["specific",{"_index":1632,"title":{},"body":{"contributing.html":{}}}],["specifies",{"_index":99,"title":{},"body":{"interfaces/BlockData.html":{},"interfaces/PluginConfig.html":{},"interfaces/PluginConfigMap.html":{},"interfaces/ToolSettingsMap.html":{}}}],["standards",{"_index":1522,"title":{},"body":{"contributing.html":{}}}],["start",{"_index":1198,"title":{},"body":{"components/NgxTinynodesMaterialFormFieldDemoComponent.html":{},"components/PageContainerComponent.html":{}}}],["started",{"_index":1378,"title":{"changelog.html":{},"contributing.html":{},"index.html":{},"license.html":{},"todo.html":{}},"body":{}}],["state",{"_index":151,"title":{},"body":{"interfaces/ChangeMap.html":{},"interfaces/EditorJSChange.html":{},"interfaces/EditorJSMaterialForm.html":{},"interfaces/EditorMap.html":{},"directives/NgxEditorJSDirective.html":{},"injectables/NgxEditorJSService.html":{},"components/NgxTinynodesMaterialFormFieldDemoComponent.html":{},"interfaces/ReadyMap.html":{},"interfaces/SavedMap.html":{}}}],["statechanges",{"_index":274,"title":{},"body":{"interfaces/EditorJSMaterialForm.html":{}}}],["states",{"_index":901,"title":{},"body":{"injectables/NgxEditorJSService.html":{}}}],["static",{"_index":172,"title":{},"body":{"interfaces/EditorJSClass.html":{},"interfaces/EditorJSInstanceConfig.html":{},"interfaces/EditorJSMaterialForm.html":{},"interfaces/InjectorApiCallOptions.html":{},"interfaces/InjectorApiCallResponse.html":{},"interfaces/InjectorMethodOption.html":{},"modules/NgxEditorJSModule.html":{},"components/PageContainerComponent.html":{}}}],["still",{"_index":1192,"title":{},"body":{"components/NgxTinynodesMaterialFormFieldDemoComponent.html":{}}}],["store",{"_index":1280,"title":{},"body":{"modules/PageStoreModule.html":{},"injectables/PagesQuery.html":{},"injectables/PagesService.html":{},"todo.html":{}}}],["store/pages/pages.models",{"_index":1256,"title":{},"body":{"components/PageContainerComponent.html":{}}}],["store/pages/pages.module",{"_index":1021,"title":{},"body":{"modules/NgxEditorjsDemoModule.html":{},"modules/NgxTinynodesMaterialFormFieldDemo.html":{}}}],["store/pages/pages.service",{"_index":1167,"title":{},"body":{"components/NgxTinynodesMaterialFormFieldDemoComponent.html":{},"components/PageContainerComponent.html":{}}}],["storeconfig",{"_index":1337,"title":{},"body":{"interfaces/PagesState.html":{},"injectables/PagesStore.html":{}}}],["stretch",{"_index":60,"title":{},"body":{"interfaces/Block.html":{},"interfaces/Header.html":{},"interfaces/HeaderBlock.html":{},"interfaces/Image.html":{},"interfaces/ImageBlock.html":{},"interfaces/List.html":{},"interfaces/ListBlock.html":{},"interfaces/Paragraph.html":{},"interfaces/ParagraphBlock.html":{}}}],["stretched",{"_index":61,"title":{},"body":{"interfaces/Block.html":{},"interfaces/Header.html":{},"interfaces/HeaderBlock.html":{},"interfaces/Image.html":{},"interfaces/ImageBlock.html":{},"interfaces/List.html":{},"interfaces/ListBlock.html":{},"interfaces/Paragraph.html":{},"interfaces/ParagraphBlock.html":{}}}],["string",{"_index":18,"title":{},"body":{"interfaces/Block.html":{},"interfaces/BlockData.html":{},"interfaces/ChangeMap.html":{},"interfaces/CreateEditorJSOptions.html":{},"interfaces/EditorJSChange.html":{},"interfaces/EditorJSClass.html":{},"interfaces/EditorJSInstanceConfig.html":{},"interfaces/EditorJSMaterialForm.html":{},"interfaces/EditorMap.html":{},"interfaces/Header.html":{},"interfaces/HeaderBlock.html":{},"interfaces/Image.html":{},"interfaces/ImageBlock.html":{},"interfaces/InjectorApiCallOptions.html":{},"interfaces/InjectorApiCallResponse.html":{},"interfaces/InjectorMethodOption.html":{},"interfaces/List.html":{},"interfaces/ListBlock.html":{},"classes/MockEditorJS.html":{},"classes/MockPlugin.html":{},"interfaces/NgxEditorJSConfig.html":{},"directives/NgxEditorJSDirective.html":{},"interfaces/NgxEditorJSModuleConfig.html":{},"injectables/NgxEditorJSPluginService.html":{},"injectables/NgxEditorJSService.html":{},"interfaces/Page.html":{},"interfaces/PageBlock.html":{},"components/PageContainerComponent.html":{},"interfaces/Paragraph.html":{},"interfaces/ParagraphBlock.html":{},"interfaces/PluginConfig.html":{},"interfaces/PluginConfigMap.html":{},"interfaces/ReadyMap.html":{},"interfaces/SavedMap.html":{},"interfaces/Tag.html":{},"interfaces/ToolSettingsMap.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["style",{"_index":35,"title":{},"body":{"interfaces/Block.html":{},"interfaces/Header.html":{},"interfaces/HeaderBlock.html":{},"interfaces/Image.html":{},"interfaces/ImageBlock.html":{},"interfaces/List.html":{},"interfaces/ListBlock.html":{},"interfaces/Paragraph.html":{},"interfaces/ParagraphBlock.html":{}}}],["styles",{"_index":27,"title":{},"body":{"interfaces/Block.html":{},"interfaces/Header.html":{},"interfaces/HeaderBlock.html":{},"interfaces/Image.html":{},"interfaces/ImageBlock.html":{},"interfaces/List.html":{},"interfaces/ListBlock.html":{},"components/NgxEditorJSDemoHomeComponent.html":{},"components/NgxTinynodesMaterialFormFieldDemoComponent.html":{},"components/PageContainerComponent.html":{},"interfaces/Paragraph.html":{},"interfaces/ParagraphBlock.html":{},"miscellaneous/typealiases.html":{}}}],["styleurls",{"_index":265,"title":{},"body":{"interfaces/EditorJSMaterialForm.html":{},"components/NgxEditorJSDemoHomeComponent.html":{},"components/NgxTinynodesMaterialFormFieldDemoComponent.html":{},"components/PageContainerComponent.html":{}}}],["subject",{"_index":241,"title":{},"body":{"interfaces/EditorJSMaterialForm.html":{},"directives/NgxEditorJSDirective.html":{},"injectables/NgxEditorJSService.html":{},"components/NgxTinynodesMaterialFormFieldDemoComponent.html":{},"components/PageContainerComponent.html":{},"license.html":{}}}],["subjects",{"_index":662,"title":{},"body":{"directives/NgxEditorJSDirective.html":{},"injectables/NgxEditorJSService.html":{}}}],["sublicense",{"_index":1739,"title":{},"body":{"license.html":{}}}],["subscribe",{"_index":370,"title":{},"body":{"interfaces/EditorJSMaterialForm.html":{},"directives/NgxEditorJSDirective.html":{},"injectables/NgxEditorJSService.html":{},"components/NgxTinynodesMaterialFormFieldDemoComponent.html":{},"components/PageContainerComponent.html":{}}}],["subscribe(change",{"_index":717,"title":{},"body":{"directives/NgxEditorJSDirective.html":{}}}],["subscribe(data",{"_index":1181,"title":{},"body":{"components/NgxTinynodesMaterialFormFieldDemoComponent.html":{}}}],["subscribe(editor",{"_index":979,"title":{},"body":{"injectables/NgxEditorJSService.html":{}}}],["subscribe(focused",{"_index":376,"title":{},"body":{"interfaces/EditorJSMaterialForm.html":{}}}],["subscribe(haschanged",{"_index":1170,"title":{},"body":{"components/NgxTinynodesMaterialFormFieldDemoComponent.html":{}}}],["subscribe(isready",{"_index":714,"title":{},"body":{"directives/NgxEditorJSDirective.html":{}}}],["subscribe(saved",{"_index":719,"title":{},"body":{"directives/NgxEditorJSDirective.html":{}}}],["subscriptions",{"_index":870,"title":{},"body":{"injectables/NgxEditorJSService.html":{}}}],["substantial",{"_index":1752,"title":{},"body":{"license.html":{}}}],["such",{"_index":856,"title":{},"body":{"injectables/NgxEditorJSService.html":{},"contributing.html":{}}}],["sunday",{"_index":1433,"title":{},"body":{"changelog.html":{}}}],["super",{"_index":345,"title":{},"body":{"interfaces/EditorJSMaterialForm.html":{},"injectables/MockNgZone.html":{},"interfaces/PagesState.html":{},"injectables/PagesStore.html":{}}}],["super(config",{"_index":401,"title":{},"body":{"classes/FixedHeader.html":{},"modules/PluginHeaderModule.html":{}}}],["super(editorservice",{"_index":354,"title":{},"body":{"interfaces/EditorJSMaterialForm.html":{}}}],["super(store",{"_index":1292,"title":{},"body":{"injectables/PagesQuery.html":{}}}],["support",{"_index":114,"title":{},"body":{"interfaces/BlockData.html":{},"modules/PageStoreModule.html":{},"interfaces/PluginConfig.html":{},"interfaces/PluginConfigMap.html":{},"interfaces/ToolSettingsMap.html":{},"index.html":{},"modules.html":{},"todo.html":{},"miscellaneous/variables.html":{}}}],["supported",{"_index":79,"title":{},"body":{"interfaces/BlockData.html":{},"interfaces/PluginConfig.html":{},"interfaces/PluginConfigMap.html":{},"interfaces/ToolSettingsMap.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/typealiases.html":{}}}],["supports",{"_index":28,"title":{},"body":{"interfaces/Block.html":{},"interfaces/Header.html":{},"interfaces/HeaderBlock.html":{},"interfaces/Image.html":{},"interfaces/ImageBlock.html":{},"interfaces/List.html":{},"interfaces/ListBlock.html":{},"interfaces/Paragraph.html":{},"interfaces/ParagraphBlock.html":{},"miscellaneous/typealiases.html":{}}}],["svg",{"_index":1779,"title":{},"body":{"modules.html":{}}}],["switchmap",{"_index":894,"title":{},"body":{"injectables/NgxEditorJSService.html":{},"components/NgxTinynodesMaterialFormFieldDemoComponent.html":{},"components/PageContainerComponent.html":{}}}],["switchmap((data",{"_index":1262,"title":{},"body":{"components/PageContainerComponent.html":{}}}],["switchmap(async",{"_index":937,"title":{},"body":{"injectables/NgxEditorJSService.html":{}}}],["switchmap(response",{"_index":953,"title":{},"body":{"injectables/NgxEditorJSService.html":{}}}],["t",{"_index":22,"title":{},"body":{"interfaces/Block.html":{},"interfaces/EditorJSClass.html":{},"interfaces/EditorJSInstanceConfig.html":{},"interfaces/Header.html":{},"interfaces/HeaderBlock.html":{},"interfaces/Image.html":{},"interfaces/ImageBlock.html":{},"interfaces/InjectorApiCallOptions.html":{},"interfaces/InjectorApiCallResponse.html":{},"interfaces/InjectorMethodOption.html":{},"interfaces/List.html":{},"interfaces/ListBlock.html":{},"injectables/NgxEditorJSService.html":{},"interfaces/Paragraph.html":{},"interfaces/ParagraphBlock.html":{}}}],["tag",{"_index":542,"title":{"interfaces/Tag.html":{}},"body":{"components/NgxEditorJSDemoHomeComponent.html":{},"modules/NgxTinynodesComponentsModule.html":{},"components/NgxTinynodesMatJsonOutputComponent.html":{},"modules/NgxTinynodesMatTagInputModule.html":{},"components/NgxTinynodesMaterialFormFieldDemoComponent.html":{},"interfaces/Page.html":{},"interfaces/PageBlock.html":{},"components/PageContainerComponent.html":{},"interfaces/Tag.html":{},"miscellaneous/variables.html":{}}}],["tag_component_field_control",{"_index":1106,"title":{},"body":{"modules/NgxTinynodesMatTagInputModule.html":{},"overview.html":{},"miscellaneous/variables.html":{}}}],["tag_component_value_accessor",{"_index":1105,"title":{},"body":{"modules/NgxTinynodesMatTagInputModule.html":{},"overview.html":{},"miscellaneous/variables.html":{}}}],["tags",{"_index":1194,"title":{},"body":{"components/NgxTinynodesMaterialFormFieldDemoComponent.html":{},"todo.html":{}}}],["take",{"_index":895,"title":{},"body":{"injectables/NgxEditorJSService.html":{},"components/NgxTinynodesMaterialFormFieldDemoComponent.html":{},"components/PageContainerComponent.html":{},"contributing.html":{}}}],["take(1",{"_index":936,"title":{},"body":{"injectables/NgxEditorJSService.html":{},"components/PageContainerComponent.html":{}}}],["takes",{"_index":749,"title":{},"body":{"modules/NgxEditorJSModule.html":{}}}],["takeuntil",{"_index":242,"title":{},"body":{"interfaces/EditorJSMaterialForm.html":{},"directives/NgxEditorJSDirective.html":{},"components/NgxTinynodesMaterialFormFieldDemoComponent.html":{},"components/PageContainerComponent.html":{}}}],["takeuntil(this.ondestroy",{"_index":1169,"title":{},"body":{"components/NgxTinynodesMaterialFormFieldDemoComponent.html":{},"components/PageContainerComponent.html":{}}}],["tane",{"_index":1714,"title":{},"body":{"index.html":{},"license.html":{}}}],["tap",{"_index":896,"title":{},"body":{"injectables/NgxEditorJSService.html":{},"components/PageContainerComponent.html":{}}}],["tap((response",{"_index":950,"title":{},"body":{"injectables/NgxEditorJSService.html":{}}}],["team",{"_index":1618,"title":{},"body":{"contributing.html":{}}}],["template",{"_index":503,"title":{},"body":{"components/NgxEditorJSDemoHomeComponent.html":{},"components/NgxTinynodesMatJsonOutputComponent.html":{},"components/NgxTinynodesMaterialFormFieldDemoComponent.html":{},"components/PageContainerComponent.html":{}}}],["templateurl",{"_index":263,"title":{},"body":{"interfaces/EditorJSMaterialForm.html":{},"components/NgxEditorJSDemoHomeComponent.html":{},"components/NgxTinynodesMatJsonOutputComponent.html":{},"components/NgxTinynodesMaterialFormFieldDemoComponent.html":{},"components/PageContainerComponent.html":{}}}],["temporarily",{"_index":1585,"title":{},"body":{"contributing.html":{}}}],["temporary",{"_index":1639,"title":{},"body":{"contributing.html":{}}}],["test",{"_index":434,"title":{},"body":{"classes/MockEditorJS.html":{},"classes/MockPlugin.html":{},"components/NgxTinynodesMaterialFormFieldDemoComponent.html":{}}}],["text",{"_index":42,"title":{},"body":{"interfaces/Block.html":{},"interfaces/Header.html":{},"interfaces/HeaderBlock.html":{},"interfaces/Image.html":{},"interfaces/ImageBlock.html":{},"interfaces/List.html":{},"interfaces/ListBlock.html":{},"directives/NgxEditorJSDirective.html":{},"interfaces/Paragraph.html":{},"interfaces/ParagraphBlock.html":{}}}],["this._disabled",{"_index":307,"title":{},"body":{"interfaces/EditorJSMaterialForm.html":{}}}],["this._empty",{"_index":313,"title":{},"body":{"interfaces/EditorJSMaterialForm.html":{}}}],["this._focused",{"_index":294,"title":{},"body":{"interfaces/EditorJSMaterialForm.html":{}}}],["this._placeholder",{"_index":289,"title":{},"body":{"interfaces/EditorJSMaterialForm.html":{}}}],["this._required",{"_index":300,"title":{},"body":{"interfaces/EditorJSMaterialForm.html":{}}}],["this._value",{"_index":281,"title":{},"body":{"interfaces/EditorJSMaterialForm.html":{}}}],["this.apicall",{"_index":947,"title":{},"body":{"injectables/NgxEditorJSService.html":{}}}],["this.app",{"_index":1179,"title":{},"body":{"components/NgxTinynodesMaterialFormFieldDemoComponent.html":{},"components/PageContainerComponent.html":{}}}],["this.autofocus",{"_index":725,"title":{},"body":{"directives/NgxEditorJSDirective.html":{}}}],["this.autosave",{"_index":693,"title":{},"body":{"directives/NgxEditorJSDirective.html":{}}}],["this.autosave$.asobservable",{"_index":1173,"title":{},"body":{"components/NgxTinynodesMaterialFormFieldDemoComponent.html":{}}}],["this.autosave$.next(0",{"_index":1176,"title":{},"body":{"components/NgxTinynodesMaterialFormFieldDemoComponent.html":{}}}],["this.autosave$.next(autosavetime",{"_index":1175,"title":{},"body":{"components/NgxTinynodesMaterialFormFieldDemoComponent.html":{}}}],["this.blockplaceholder",{"_index":728,"title":{},"body":{"directives/NgxEditorJSDirective.html":{}}}],["this.blocks",{"_index":438,"title":{},"body":{"classes/MockEditorJS.html":{},"classes/MockPlugin.html":{},"directives/NgxEditorJSDirective.html":{}}}],["this.blocks.length",{"_index":731,"title":{},"body":{"directives/NgxEditorJSDirective.html":{}}}],["this.blocks.pipe",{"_index":1264,"title":{},"body":{"components/PageContainerComponent.html":{}}}],["this.cd.markforcheck",{"_index":684,"title":{},"body":{"directives/NgxEditorJSDirective.html":{},"components/NgxTinynodesMatJsonOutputComponent.html":{},"components/NgxTinynodesMaterialFormFieldDemoComponent.html":{},"components/PageContainerComponent.html":{}}}],["this.cleanupsubjects",{"_index":983,"title":{},"body":{"injectables/NgxEditorJSService.html":{}}}],["this.config.editorjs",{"_index":908,"title":{},"body":{"injectables/NgxEditorJSService.html":{}}}],["this.createeditor(this.createconfig",{"_index":708,"title":{},"body":{"directives/NgxEditorJSDirective.html":{}}}],["this.createonchange.call(this",{"_index":917,"title":{},"body":{"injectables/NgxEditorJSService.html":{}}}],["this.createonready.call(this",{"_index":921,"title":{},"body":{"injectables/NgxEditorJSService.html":{}}}],["this.describedby",{"_index":337,"title":{},"body":{"interfaces/EditorJSMaterialForm.html":{}}}],["this.destroy",{"_index":437,"title":{},"body":{"classes/MockEditorJS.html":{},"classes/MockPlugin.html":{}}}],["this.destroyinstance",{"_index":985,"title":{},"body":{"injectables/NgxEditorJSService.html":{}}}],["this.editorform.patchvalue",{"_index":1172,"title":{},"body":{"components/NgxTinynodesMaterialFormFieldDemoComponent.html":{}}}],["this.editorform.reset",{"_index":1178,"title":{},"body":{"components/NgxTinynodesMaterialFormFieldDemoComponent.html":{}}}],["this.editorjs(editorconfig",{"_index":923,"title":{},"body":{"injectables/NgxEditorJSService.html":{}}}],["this.editorjs.version",{"_index":960,"title":{},"body":{"injectables/NgxEditorJSService.html":{}}}],["this.editormap[holder",{"_index":927,"title":{},"body":{"injectables/NgxEditorJSService.html":{}}}],["this.editormap[holder].next(editor",{"_index":928,"title":{},"body":{"injectables/NgxEditorJSService.html":{}}}],["this.editormap[options.holder",{"_index":963,"title":{},"body":{"injectables/NgxEditorJSService.html":{}}}],["this.editormap[options.holder].complete",{"_index":1002,"title":{},"body":{"injectables/NgxEditorJSService.html":{}}}],["this.editormap[options.holder].pipe(filter(editor",{"_index":965,"title":{},"body":{"injectables/NgxEditorJSService.html":{}}}],["this.editorservice",{"_index":688,"title":{},"body":{"directives/NgxEditorJSDirective.html":{},"components/NgxTinynodesMaterialFormFieldDemoComponent.html":{}}}],["this.editorservice.clear",{"_index":1260,"title":{},"body":{"components/PageContainerComponent.html":{}}}],["this.editorservice.lastchange",{"_index":1257,"title":{},"body":{"components/PageContainerComponent.html":{}}}],["this.editorservice.save",{"_index":1177,"title":{},"body":{"components/NgxTinynodesMaterialFormFieldDemoComponent.html":{},"components/PageContainerComponent.html":{}}}],["this.editorservice.update",{"_index":1263,"title":{},"body":{"components/PageContainerComponent.html":{}}}],["this.el.nativeelement",{"_index":687,"title":{},"body":{"directives/NgxEditorJSDirective.html":{}}}],["this.el.nativeelement.id",{"_index":709,"title":{},"body":{"directives/NgxEditorJSDirective.html":{}}}],["this.empty",{"_index":330,"title":{},"body":{"interfaces/EditorJSMaterialForm.html":{}}}],["this.errorstate",{"_index":379,"title":{},"body":{"interfaces/EditorJSMaterialForm.html":{}}}],["this.excludetools",{"_index":692,"title":{},"body":{"directives/NgxEditorJSDirective.html":{}}}],["this.expand",{"_index":1094,"title":{},"body":{"components/NgxTinynodesMatJsonOutputComponent.html":{}}}],["this.fb.group",{"_index":1154,"title":{},"body":{"components/NgxTinynodesMaterialFormFieldDemoComponent.html":{}}}],["this.focused",{"_index":329,"title":{},"body":{"interfaces/EditorJSMaterialForm.html":{}}}],["this.geteditor(options",{"_index":977,"title":{},"body":{"injectables/NgxEditorJSService.html":{}}}],["this.geteditor(options).pipe",{"_index":935,"title":{},"body":{"injectables/NgxEditorJSService.html":{}}}],["this.getfocusmonitor(this.editorinstance.element",{"_index":374,"title":{},"body":{"interfaces/EditorJSMaterialForm.html":{}}}],["this.gettools(options.excludetools",{"_index":910,"title":{},"body":{"injectables/NgxEditorJSService.html":{}}}],["this.haschanged.emit(change",{"_index":718,"title":{},"body":{"directives/NgxEditorJSDirective.html":{}}}],["this.hassaved.next(saved",{"_index":720,"title":{},"body":{"directives/NgxEditorJSDirective.html":{}}}],["this.hassavedmap[options.holder",{"_index":975,"title":{},"body":{"injectables/NgxEditorJSService.html":{}}}],["this.hassavedmap[options.holder].asobservable",{"_index":976,"title":{},"body":{"injectables/NgxEditorJSService.html":{}}}],["this.hassavedmap[options.holder].next(true",{"_index":951,"title":{},"body":{"injectables/NgxEditorJSService.html":{}}}],["this.hidetoolbar",{"_index":726,"title":{},"body":{"directives/NgxEditorJSDirective.html":{}}}],["this.holder",{"_index":700,"title":{},"body":{"directives/NgxEditorJSDirective.html":{},"components/NgxTinynodesMaterialFormFieldDemoComponent.html":{},"components/PageContainerComponent.html":{}}}],["this.id",{"_index":686,"title":{},"body":{"directives/NgxEditorJSDirective.html":{}}}],["this.initialblock",{"_index":727,"title":{},"body":{"directives/NgxEditorJSDirective.html":{}}}],["this.isready",{"_index":435,"title":{},"body":{"classes/MockEditorJS.html":{},"classes/MockPlugin.html":{}}}],["this.isready.emit(isready",{"_index":715,"title":{},"body":{"directives/NgxEditorJSDirective.html":{}}}],["this.isreadymap[holder].next(true",{"_index":930,"title":{},"body":{"injectables/NgxEditorJSService.html":{}}}],["this.isreadymap[options.holder",{"_index":966,"title":{},"body":{"injectables/NgxEditorJSService.html":{}}}],["this.isreadymap[options.holder].asobservable",{"_index":967,"title":{},"body":{"injectables/NgxEditorJSService.html":{}}}],["this.isreadymap[options.holder].next(true",{"_index":991,"title":{},"body":{"injectables/NgxEditorJSService.html":{}}}],["this.isreadymap[options.holder].value",{"_index":990,"title":{},"body":{"injectables/NgxEditorJSService.html":{}}}],["this.istouched.emit(true",{"_index":683,"title":{},"body":{"directives/NgxEditorJSDirective.html":{}}}],["this.lastchangemap[options.holder",{"_index":968,"title":{},"body":{"injectables/NgxEditorJSService.html":{}}}],["this.lastchangemap[options.holder].next(change",{"_index":988,"title":{},"body":{"injectables/NgxEditorJSService.html":{}}}],["this.lastchangemap[options.holder].next(response.result",{"_index":952,"title":{},"body":{"injectables/NgxEditorJSService.html":{}}}],["this.lastchangemap[options.holder].pipe",{"_index":969,"title":{},"body":{"injectables/NgxEditorJSService.html":{}}}],["this.menu",{"_index":1174,"title":{},"body":{"components/NgxTinynodesMaterialFormFieldDemoComponent.html":{},"components/PageContainerComponent.html":{}}}],["this.menu$.next(data.links",{"_index":1182,"title":{},"body":{"components/NgxTinynodesMaterialFormFieldDemoComponent.html":{},"components/PageContainerComponent.html":{}}}],["this.minheight",{"_index":729,"title":{},"body":{"directives/NgxEditorJSDirective.html":{}}}],["this.ngcontrol",{"_index":361,"title":{},"body":{"interfaces/EditorJSMaterialForm.html":{}}}],["this.ngcontrol.invalid",{"_index":380,"title":{},"body":{"interfaces/EditorJSMaterialForm.html":{}}}],["this.ngcontrol.touched",{"_index":381,"title":{},"body":{"interfaces/EditorJSMaterialForm.html":{}}}],["this.ngcontrol.valueaccessor",{"_index":363,"title":{},"body":{"interfaces/EditorJSMaterialForm.html":{}}}],["this.ondestroy$.complete",{"_index":722,"title":{},"body":{"directives/NgxEditorJSDirective.html":{},"injectables/NgxEditorJSService.html":{}}}],["this.ondestroy$.next(true",{"_index":721,"title":{},"body":{"directives/NgxEditorJSDirective.html":{},"injectables/NgxEditorJSService.html":{}}}],["this.onstable.emit(null",{"_index":465,"title":{},"body":{"injectables/MockNgZone.html":{}}}],["this.ontouch",{"_index":298,"title":{},"body":{"interfaces/EditorJSMaterialForm.html":{}}}],["this.ontouch(event",{"_index":343,"title":{},"body":{"interfaces/EditorJSMaterialForm.html":{}}}],["this.pages",{"_index":1322,"title":{},"body":{"injectables/PagesService.html":{}}}],["this.pagesservice.pages",{"_index":1259,"title":{},"body":{"components/PageContainerComponent.html":{}}}],["this.pluginconfigmap",{"_index":805,"title":{},"body":{"injectables/NgxEditorJSPluginService.html":{}}}],["this.pluginconfigmap[key",{"_index":806,"title":{},"body":{"injectables/NgxEditorJSPluginService.html":{}}}],["this.plugins.gettools(excludetools",{"_index":1003,"title":{},"body":{"injectables/NgxEditorJSService.html":{}}}],["this.query.selectall",{"_index":1323,"title":{},"body":{"injectables/PagesService.html":{}}}],["this.ref.tick",{"_index":931,"title":{},"body":{"injectables/NgxEditorJSService.html":{}}}],["this.reset",{"_index":1186,"title":{},"body":{"components/NgxTinynodesMaterialFormFieldDemoComponent.html":{},"components/PageContainerComponent.html":{}}}],["this.sanitizer",{"_index":730,"title":{},"body":{"directives/NgxEditorJSDirective.html":{}}}],["this.save(options",{"_index":956,"title":{},"body":{"injectables/NgxEditorJSService.html":{}}}],["this.saver",{"_index":440,"title":{},"body":{"classes/MockEditorJS.html":{},"classes/MockPlugin.html":{}}}],["this.service",{"_index":713,"title":{},"body":{"directives/NgxEditorJSDirective.html":{}}}],["this.service.createinstance",{"_index":691,"title":{},"body":{"directives/NgxEditorJSDirective.html":{}}}],["this.service.destroyinstance",{"_index":723,"title":{},"body":{"directives/NgxEditorJSDirective.html":{}}}],["this.service.geteditor",{"_index":685,"title":{},"body":{"directives/NgxEditorJSDirective.html":{}}}],["this.service.update",{"_index":699,"title":{},"body":{"directives/NgxEditorJSDirective.html":{}}}],["this.setupservicesubscriptions",{"_index":373,"title":{},"body":{"interfaces/EditorJSMaterialForm.html":{}}}],["this.setupsubjects",{"_index":926,"title":{},"body":{"injectables/NgxEditorJSService.html":{}}}],["this.statechanges.next",{"_index":285,"title":{},"body":{"interfaces/EditorJSMaterialForm.html":{}}}],["this.store.add(newpage",{"_index":1325,"title":{},"body":{"injectables/PagesService.html":{}}}],["this.store.remove(pageid",{"_index":1328,"title":{},"body":{"injectables/PagesService.html":{}}}],["this.store.update(pageid",{"_index":1329,"title":{},"body":{"injectables/PagesService.html":{}}}],["this.store.upsert(page.id",{"_index":1327,"title":{},"body":{"injectables/PagesService.html":{}}}],["this.touched$.asobservable",{"_index":689,"title":{},"body":{"directives/NgxEditorJSDirective.html":{}}}],["this.touched$.next(true",{"_index":682,"title":{},"body":{"directives/NgxEditorJSDirective.html":{}}}],["this.update",{"_index":1184,"title":{},"body":{"components/NgxTinynodesMaterialFormFieldDemoComponent.html":{}}}],["this.version",{"_index":433,"title":{},"body":{"classes/MockEditorJS.html":{},"classes/MockPlugin.html":{}}}],["this.zone.run",{"_index":982,"title":{},"body":{"injectables/NgxEditorJSService.html":{}}}],["this.zone.run(async",{"_index":925,"title":{},"body":{"injectables/NgxEditorJSService.html":{}}}],["this.zone.runoutsideangular",{"_index":980,"title":{},"body":{"injectables/NgxEditorJSService.html":{}}}],["this.zone.runoutsideangular(async",{"_index":922,"title":{},"body":{"injectables/NgxEditorJSService.html":{}}}],["this[mapkey][options.holder",{"_index":994,"title":{},"body":{"injectables/NgxEditorJSService.html":{}}}],["this[mapkey][options.holder].complete",{"_index":1000,"title":{},"body":{"injectables/NgxEditorJSService.html":{}}}],["this[mapkey][options.holder].next(value",{"_index":996,"title":{},"body":{"injectables/NgxEditorJSService.html":{}}}],["threatening",{"_index":1590,"title":{},"body":{"contributing.html":{}}}],["throw",{"_index":710,"title":{},"body":{"directives/NgxEditorJSDirective.html":{},"injectables/NgxEditorJSService.html":{}}}],["tick",{"_index":850,"title":{},"body":{"injectables/NgxEditorJSService.html":{}}}],["tidy",{"_index":1400,"title":{},"body":{"changelog.html":{}}}],["time",{"_index":157,"title":{},"body":{"interfaces/ChangeMap.html":{},"interfaces/EditorJSChange.html":{},"interfaces/EditorJSClass.html":{},"interfaces/EditorJSInstanceConfig.html":{},"interfaces/EditorMap.html":{},"interfaces/InjectorApiCallOptions.html":{},"interfaces/InjectorApiCallResponse.html":{},"interfaces/InjectorMethodOption.html":{},"classes/MockEditorJS.html":{},"classes/MockPlugin.html":{},"directives/NgxEditorJSDirective.html":{},"injectables/NgxEditorJSService.html":{},"components/NgxTinynodesMaterialFormFieldDemoComponent.html":{},"interfaces/ReadyMap.html":{},"interfaces/SavedMap.html":{},"miscellaneous/variables.html":{}}}],["timer",{"_index":604,"title":{},"body":{"directives/NgxEditorJSDirective.html":{}}}],["tinynode",{"_index":1699,"title":{},"body":{"index.html":{}}}],["tinynodes",{"_index":536,"title":{},"body":{"components/NgxEditorJSDemoHomeComponent.html":{},"modules/NgxEditorjsDemoModule.html":{},"modules/NgxTinynodesComponentsModule.html":{},"interfaces/NgxTinynodesMatFieldComponent.html":{},"components/NgxTinynodesMatJsonOutputComponent.html":{},"modules/NgxTinynodesMatJsonOutputModule.html":{},"modules/NgxTinynodesMatTagInputModule.html":{},"modules/NgxTinynodesMaterialFormFieldDemo.html":{},"components/NgxTinynodesMaterialFormFieldDemoComponent.html":{},"components/PageContainerComponent.html":{},"changelog.html":{},"index.html":{},"license.html":{},"todo.html":{},"miscellaneous/variables.html":{}}}],["tinynodes/ngx",{"_index":514,"title":{},"body":{"components/NgxEditorJSDemoHomeComponent.html":{},"modules/NgxEditorJSModule.html":{},"injectables/NgxEditorJSService.html":{},"modules/NgxEditorjsDemoModule.html":{},"modules/NgxTinynodesMaterialFormFieldDemo.html":{},"components/NgxTinynodesMaterialFormFieldDemoComponent.html":{},"interfaces/Page.html":{},"interfaces/PageBlock.html":{},"components/PageContainerComponent.html":{},"injectables/PagesService.html":{},"interfaces/Tag.html":{},"changelog.html":{},"index.html":{}}}],["title",{"_index":1127,"title":{},"body":{"components/NgxTinynodesMaterialFormFieldDemoComponent.html":{}}}],["today",{"_index":1388,"title":{},"body":{"changelog.html":{}}}],["todo",{"_index":398,"title":{"todo.html":{}},"body":{"classes/FixedHeader.html":{},"modules/PluginHeaderModule.html":{},"todo.html":{}}}],["todos",{"_index":1784,"title":{},"body":{"todo.html":{}}}],["toggleexpand",{"_index":1087,"title":{},"body":{"components/NgxTinynodesMatJsonOutputComponent.html":{}}}],["token",{"_index":121,"title":{},"body":{"interfaces/BlockData.html":{},"interfaces/EditorJSClass.html":{},"interfaces/EditorJSInstanceConfig.html":{},"interfaces/InjectorApiCallOptions.html":{},"interfaces/InjectorApiCallResponse.html":{},"interfaces/InjectorMethodOption.html":{},"interfaces/NgxEditorJSConfig.html":{},"interfaces/NgxEditorJSModuleConfig.html":{},"interfaces/PluginConfig.html":{},"interfaces/PluginConfigMap.html":{},"interfaces/ToolSettingsMap.html":{},"miscellaneous/variables.html":{}}}],["tool",{"_index":89,"title":{},"body":{"interfaces/BlockData.html":{},"classes/FixedHeader.html":{},"injectables/NgxEditorJSPluginService.html":{},"components/NgxTinynodesMaterialFormFieldDemoComponent.html":{},"components/PageContainerComponent.html":{},"modules/PluginCodeModule.html":{},"interfaces/PluginConfig.html":{},"interfaces/PluginConfigMap.html":{},"modules/PluginEmbedModule.html":{},"modules/PluginHeaderModule.html":{},"modules/PluginImageModule.html":{},"modules/PluginInlineCodeModule.html":{},"modules/PluginLinkModule.html":{},"modules/PluginListModule.html":{},"modules/PluginMarkerModule.html":{},"modules/PluginParagraphModule.html":{},"modules/PluginQuoteModule.html":{},"modules/PluginSimpleImageModule.html":{},"modules/PluginWarningModule.html":{},"interfaces/ToolSettingsMap.html":{},"changelog.html":{},"miscellaneous/typealiases.html":{}}}],["tool.config",{"_index":823,"title":{},"body":{"injectables/NgxEditorJSPluginService.html":{}}}],["tool.inlinetoolbar",{"_index":821,"title":{},"body":{"injectables/NgxEditorJSPluginService.html":{}}}],["tool.shortcut",{"_index":818,"title":{},"body":{"injectables/NgxEditorJSPluginService.html":{}}}],["toolbar",{"_index":480,"title":{},"body":{"interfaces/NgxEditorJSConfig.html":{},"directives/NgxEditorJSDirective.html":{},"interfaces/NgxEditorJSModuleConfig.html":{}}}],["toolbaropen",{"_index":902,"title":{},"body":{"injectables/NgxEditorJSService.html":{}}}],["toolconstructable",{"_index":75,"title":{},"body":{"interfaces/BlockData.html":{},"interfaces/PluginConfig.html":{},"interfaces/PluginConfigMap.html":{},"interfaces/ToolSettingsMap.html":{},"miscellaneous/typealiases.html":{}}}],["tools",{"_index":93,"title":{},"body":{"interfaces/BlockData.html":{},"interfaces/CreateEditorJSOptions.html":{},"directives/NgxEditorJSDirective.html":{},"injectables/NgxEditorJSPluginService.html":{},"injectables/NgxEditorJSService.html":{},"modules/NgxEditorjsPluginsModule.html":{},"interfaces/PluginConfig.html":{},"interfaces/PluginConfigMap.html":{},"interfaces/ToolSettingsMap.html":{}}}],["toolsettings",{"_index":74,"title":{},"body":{"interfaces/BlockData.html":{},"interfaces/PluginConfig.html":{},"interfaces/PluginConfigMap.html":{},"interfaces/ToolSettingsMap.html":{},"miscellaneous/typealiases.html":{}}}],["toolsettingsmap",{"_index":94,"title":{"interfaces/ToolSettingsMap.html":{}},"body":{"interfaces/BlockData.html":{},"injectables/NgxEditorJSPluginService.html":{},"injectables/NgxEditorJSService.html":{},"interfaces/PluginConfig.html":{},"interfaces/PluginConfigMap.html":{},"interfaces/ToolSettingsMap.html":{}}}],["tort",{"_index":1773,"title":{},"body":{"license.html":{}}}],["touched",{"_index":593,"title":{},"body":{"directives/NgxEditorJSDirective.html":{},"components/PageContainerComponent.html":{}}}],["towards",{"_index":1541,"title":{},"body":{"contributing.html":{}}}],["tree",{"_index":505,"title":{},"body":{"components/NgxEditorJSDemoHomeComponent.html":{},"components/NgxTinynodesMatJsonOutputComponent.html":{},"components/NgxTinynodesMaterialFormFieldDemoComponent.html":{},"components/PageContainerComponent.html":{}}}],["trigger",{"_index":369,"title":{},"body":{"interfaces/EditorJSMaterialForm.html":{},"injectables/NgxEditorJSService.html":{}}}],["triggered",{"_index":836,"title":{},"body":{"injectables/NgxEditorJSService.html":{}}}],["trolling",{"_index":1550,"title":{},"body":{"contributing.html":{}}}],["true",{"_index":112,"title":{},"body":{"interfaces/BlockData.html":{},"interfaces/EditorJSMaterialForm.html":{},"classes/FixedHeader.html":{},"interfaces/NgxEditorJSConfig.html":{},"directives/NgxEditorJSDirective.html":{},"interfaces/NgxEditorJSModuleConfig.html":{},"injectables/NgxEditorJSPluginService.html":{},"modules/NgxEditorJSPluginServiceModule.html":{},"injectables/NgxEditorJSService.html":{},"components/NgxTinynodesMatJsonOutputComponent.html":{},"components/NgxTinynodesMaterialFormFieldDemoComponent.html":{},"components/PageContainerComponent.html":{},"modules/PluginCodeModule.html":{},"interfaces/PluginConfig.html":{},"interfaces/PluginConfigMap.html":{},"modules/PluginEmbedModule.html":{},"modules/PluginHeaderModule.html":{},"modules/PluginImageModule.html":{},"modules/PluginInlineCodeModule.html":{},"modules/PluginLinkModule.html":{},"modules/PluginListModule.html":{},"modules/PluginMarkerModule.html":{},"modules/PluginParagraphModule.html":{},"modules/PluginQuoteModule.html":{},"modules/PluginSimpleImageModule.html":{},"modules/PluginWarningModule.html":{},"interfaces/ToolSettingsMap.html":{},"miscellaneous/variables.html":{}}}],["tslint:disable",{"_index":356,"title":{},"body":{"interfaces/EditorJSMaterialForm.html":{}}}],["two",{"_index":650,"title":{},"body":{"directives/NgxEditorJSDirective.html":{},"contributing.html":{}}}],["type",{"_index":11,"title":{},"body":{"interfaces/Block.html":{},"interfaces/BlockData.html":{},"interfaces/CreateEditorJSOptions.html":{},"interfaces/EditorJSChange.html":{},"interfaces/EditorJSClass.html":{},"interfaces/EditorJSInstanceConfig.html":{},"interfaces/EditorJSMaterialForm.html":{},"classes/FixedHeader.html":{},"interfaces/Header.html":{},"interfaces/HeaderBlock.html":{},"interfaces/Image.html":{},"interfaces/ImageBlock.html":{},"interfaces/InjectorApiCallOptions.html":{},"interfaces/InjectorApiCallResponse.html":{},"interfaces/InjectorMethodOption.html":{},"interfaces/List.html":{},"interfaces/ListBlock.html":{},"classes/MockEditorJS.html":{},"injectables/MockNgZone.html":{},"interfaces/NgxEditorJSConfig.html":{},"directives/NgxEditorJSDirective.html":{},"modules/NgxEditorJSModule.html":{},"interfaces/NgxEditorJSModuleConfig.html":{},"injectables/NgxEditorJSPluginService.html":{},"injectables/NgxEditorJSService.html":{},"components/NgxTinynodesMatJsonOutputComponent.html":{},"components/NgxTinynodesMaterialFormFieldDemoComponent.html":{},"interfaces/Page.html":{},"interfaces/PageBlock.html":{},"components/PageContainerComponent.html":{},"injectables/PagesQuery.html":{},"injectables/PagesService.html":{},"interfaces/Paragraph.html":{},"interfaces/ParagraphBlock.html":{},"modules/PluginCodeModule.html":{},"interfaces/PluginConfig.html":{},"interfaces/PluginConfigMap.html":{},"modules/PluginEmbedModule.html":{},"modules/PluginHeaderModule.html":{},"modules/PluginImageModule.html":{},"modules/PluginInlineCodeModule.html":{},"modules/PluginLinkModule.html":{},"modules/PluginListModule.html":{},"modules/PluginMarkerModule.html":{},"modules/PluginParagraphModule.html":{},"modules/PluginQuoteModule.html":{},"modules/PluginSimpleImageModule.html":{},"modules/PluginWarningModule.html":{},"interfaces/Tag.html":{},"interfaces/ToolSettingsMap.html":{},"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["typealiases",{"_index":1794,"title":{"miscellaneous/typealiases.html":{}},"body":{}}],["typeof",{"_index":916,"title":{},"body":{"injectables/NgxEditorJSService.html":{}}}],["types",{"_index":77,"title":{},"body":{"interfaces/BlockData.html":{},"interfaces/PluginConfig.html":{},"interfaces/PluginConfigMap.html":{},"interfaces/ToolSettingsMap.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/typealiases.html":{}}}],["types/blocks",{"_index":675,"title":{},"body":{"directives/NgxEditorJSDirective.html":{}}}],["types/config",{"_index":763,"title":{},"body":{"modules/NgxEditorJSModule.html":{},"injectables/NgxEditorJSService.html":{}}}],["types/editorjs",{"_index":897,"title":{},"body":{"injectables/NgxEditorJSService.html":{}}}],["types/injector",{"_index":764,"title":{},"body":{"modules/NgxEditorJSModule.html":{},"injectables/NgxEditorJSService.html":{}}}],["types/maps",{"_index":898,"title":{},"body":{"injectables/NgxEditorJSService.html":{}}}],["types/plugins",{"_index":396,"title":{},"body":{"classes/FixedHeader.html":{},"injectables/NgxEditorJSPluginService.html":{},"modules/NgxEditorJSPluginServiceModule.html":{},"modules/PluginCodeModule.html":{},"modules/PluginEmbedModule.html":{},"modules/PluginHeaderModule.html":{},"modules/PluginImageModule.html":{},"modules/PluginInlineCodeModule.html":{},"modules/PluginLinkModule.html":{},"modules/PluginListModule.html":{},"modules/PluginMarkerModule.html":{},"modules/PluginParagraphModule.html":{},"modules/PluginQuoteModule.html":{},"modules/PluginSimpleImageModule.html":{},"modules/PluginWarningModule.html":{}}}],["typescript",{"_index":176,"title":{},"body":{"interfaces/EditorJSClass.html":{},"interfaces/EditorJSInstanceConfig.html":{},"interfaces/InjectorApiCallOptions.html":{},"interfaces/InjectorApiCallResponse.html":{},"interfaces/InjectorMethodOption.html":{},"components/NgxTinynodesMaterialFormFieldDemoComponent.html":{}}}],["typing",{"_index":1199,"title":{},"body":{"components/NgxTinynodesMaterialFormFieldDemoComponent.html":{},"components/PageContainerComponent.html":{}}}],["unacceptable",{"_index":1543,"title":{},"body":{"contributing.html":{}}}],["undefined",{"_index":119,"title":{},"body":{"interfaces/BlockData.html":{},"modules/NgxEditorJSPluginServiceModule.html":{},"injectables/NgxEditorJSService.html":{},"interfaces/PluginConfig.html":{},"interfaces/PluginConfigMap.html":{},"interfaces/ToolSettingsMap.html":{}}}],["under",{"_index":1385,"title":{},"body":{"changelog.html":{}}}],["underlying",{"_index":316,"title":{},"body":{"interfaces/EditorJSMaterialForm.html":{},"injectables/NgxEditorJSService.html":{},"changelog.html":{},"index.html":{}}}],["underneath",{"_index":1705,"title":{},"body":{"index.html":{}}}],["unique",{"_index":323,"title":{},"body":{"interfaces/EditorJSMaterialForm.html":{}}}],["unlike",{"_index":933,"title":{},"body":{"injectables/NgxEditorJSService.html":{}}}],["unordered",{"_index":30,"title":{},"body":{"interfaces/Block.html":{},"interfaces/Header.html":{},"interfaces/HeaderBlock.html":{},"interfaces/Image.html":{},"interfaces/ImageBlock.html":{},"interfaces/List.html":{},"interfaces/ListBlock.html":{},"interfaces/Paragraph.html":{},"interfaces/ParagraphBlock.html":{},"miscellaneous/typealiases.html":{}}}],["unreleased",{"_index":1387,"title":{},"body":{"changelog.html":{}}}],["unsubscribe",{"_index":371,"title":{},"body":{"interfaces/EditorJSMaterialForm.html":{}}}],["until",{"_index":1450,"title":{},"body":{"changelog.html":{}}}],["unwelcome",{"_index":1547,"title":{},"body":{"contributing.html":{}}}],["up",{"_index":367,"title":{},"body":{"interfaces/EditorJSMaterialForm.html":{},"directives/NgxEditorJSDirective.html":{},"injectables/NgxEditorJSService.html":{},"components/NgxTinynodesMaterialFormFieldDemoComponent.html":{},"components/PageContainerComponent.html":{},"changelog.html":{}}}],["update",{"_index":841,"title":{},"body":{"injectables/NgxEditorJSService.html":{},"components/NgxTinynodesMaterialFormFieldDemoComponent.html":{},"contributing.html":{}}}],["update(data",{"_index":1152,"title":{},"body":{"components/NgxTinynodesMaterialFormFieldDemoComponent.html":{}}}],["update(options",{"_index":885,"title":{},"body":{"injectables/NgxEditorJSService.html":{}}}],["updated",{"_index":653,"title":{},"body":{"directives/NgxEditorJSDirective.html":{},"components/NgxTinynodesMaterialFormFieldDemoComponent.html":{},"injectables/PagesService.html":{},"changelog.html":{}}}],["updates",{"_index":1220,"title":{},"body":{"components/NgxTinynodesMaterialFormFieldDemoComponent.html":{},"injectables/PagesService.html":{}}}],["upgraded",{"_index":1416,"title":{},"body":{"changelog.html":{}}}],["upsert",{"_index":1298,"title":{},"body":{"injectables/PagesService.html":{}}}],["upsert(page",{"_index":1314,"title":{},"body":{"injectables/PagesService.html":{}}}],["url",{"_index":51,"title":{},"body":{"interfaces/Block.html":{},"interfaces/Header.html":{},"interfaces/HeaderBlock.html":{},"interfaces/Image.html":{},"interfaces/ImageBlock.html":{},"interfaces/List.html":{},"interfaces/ListBlock.html":{},"components/NgxTinynodesMaterialFormFieldDemoComponent.html":{},"components/PageContainerComponent.html":{},"interfaces/Paragraph.html":{},"interfaces/ParagraphBlock.html":{}}}],["usage",{"_index":1703,"title":{},"body":{"index.html":{}}}],["use",{"_index":101,"title":{},"body":{"interfaces/BlockData.html":{},"components/NgxEditorJSDemoHomeComponent.html":{},"directives/NgxEditorJSDirective.html":{},"modules/NgxEditorJSModule.html":{},"injectables/NgxEditorJSService.html":{},"interfaces/PluginConfig.html":{},"interfaces/PluginConfigMap.html":{},"interfaces/ToolSettingsMap.html":{},"contributing.html":{},"miscellaneous/functions.html":{},"index.html":{},"license.html":{}}}],["used",{"_index":116,"title":{},"body":{"interfaces/BlockData.html":{},"interfaces/CreateEditorJSOptions.html":{},"components/NgxEditorJSDemoHomeComponent.html":{},"directives/NgxEditorJSDirective.html":{},"injectables/NgxEditorJSService.html":{},"interfaces/PluginConfig.html":{},"interfaces/PluginConfigMap.html":{},"interfaces/ToolSettingsMap.html":{},"index.html":{}}}],["useexisting",{"_index":254,"title":{},"body":{"interfaces/EditorJSMaterialForm.html":{},"miscellaneous/variables.html":{}}}],["usefactory",{"_index":767,"title":{},"body":{"modules/NgxEditorJSModule.html":{},"modules/NgxEditorJSPluginServiceModule.html":{}}}],["useful",{"_index":888,"title":{},"body":{"injectables/NgxEditorJSService.html":{},"changelog.html":{},"contributing.html":{}}}],["userplugins",{"_index":627,"title":{},"body":{"directives/NgxEditorJSDirective.html":{}}}],["uses",{"_index":906,"title":{},"body":{"injectables/NgxEditorJSService.html":{}}}],["usevalue",{"_index":414,"title":{},"body":{"classes/FixedHeader.html":{},"modules/NgxEditorJSModule.html":{},"modules/NgxEditorJSPluginServiceModule.html":{},"modules/PluginCodeModule.html":{},"modules/PluginEmbedModule.html":{},"modules/PluginHeaderModule.html":{},"modules/PluginImageModule.html":{},"modules/PluginInlineCodeModule.html":{},"modules/PluginLinkModule.html":{},"modules/PluginListModule.html":{},"modules/PluginMarkerModule.html":{},"modules/PluginParagraphModule.html":{},"modules/PluginQuoteModule.html":{},"modules/PluginSimpleImageModule.html":{},"modules/PluginWarningModule.html":{}}}],["using",{"_index":776,"title":{},"body":{"injectables/NgxEditorJSPluginService.html":{},"injectables/NgxEditorJSService.html":{},"changelog.html":{},"contributing.html":{},"index.html":{}}}],["util/plugin",{"_index":829,"title":{},"body":{"modules/NgxEditorJSPluginServiceModule.html":{},"modules/PluginCodeModule.html":{},"modules/PluginImageModule.html":{},"modules/PluginLinkModule.html":{},"modules/PluginListModule.html":{},"modules/PluginMarkerModule.html":{},"modules/PluginSimpleImageModule.html":{}}}],["value",{"_index":279,"title":{},"body":{"interfaces/EditorJSMaterialForm.html":{},"classes/FixedHeader.html":{},"injectables/MockNgZone.html":{},"directives/NgxEditorJSDirective.html":{},"injectables/NgxEditorJSPluginService.html":{},"injectables/NgxEditorJSService.html":{},"components/NgxTinynodesMatJsonOutputComponent.html":{},"components/NgxTinynodesMaterialFormFieldDemoComponent.html":{},"components/PageContainerComponent.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/variables.html":{}}}],["value(value",{"_index":284,"title":{},"body":{"interfaces/EditorJSMaterialForm.html":{}}}],["values",{"_index":149,"title":{},"body":{"interfaces/ChangeMap.html":{},"interfaces/EditorJSChange.html":{},"interfaces/EditorJSClass.html":{},"interfaces/EditorJSInstanceConfig.html":{},"interfaces/EditorMap.html":{},"interfaces/InjectorApiCallOptions.html":{},"interfaces/InjectorApiCallResponse.html":{},"interfaces/InjectorMethodOption.html":{},"directives/NgxEditorJSDirective.html":{},"injectables/NgxEditorJSService.html":{},"interfaces/ReadyMap.html":{},"interfaces/SavedMap.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["var",{"_index":530,"title":{},"body":{"components/NgxEditorJSDemoHomeComponent.html":{},"components/NgxTinynodesMatJsonOutputComponent.html":{},"components/NgxTinynodesMaterialFormFieldDemoComponent.html":{},"components/PageContainerComponent.html":{}}}],["variables",{"_index":1477,"title":{"miscellaneous/variables.html":{}},"body":{"contributing.html":{},"miscellaneous/variables.html":{}}}],["version",{"_index":173,"title":{},"body":{"interfaces/EditorJSClass.html":{},"interfaces/EditorJSInstanceConfig.html":{},"classes/FixedHeader.html":{},"interfaces/InjectorApiCallOptions.html":{},"interfaces/InjectorApiCallResponse.html":{},"interfaces/InjectorMethodOption.html":{},"classes/MockEditorJS.html":{},"classes/MockPlugin.html":{},"directives/NgxEditorJSDirective.html":{},"injectables/NgxEditorJSService.html":{},"modules/PluginHeaderModule.html":{},"changelog.html":{},"contributing.html":{},"miscellaneous/variables.html":{}}}],["versioning",{"_index":1486,"title":{},"body":{"contributing.html":{}}}],["via",{"_index":84,"title":{},"body":{"interfaces/BlockData.html":{},"directives/NgxEditorJSDirective.html":{},"injectables/NgxEditorJSPluginService.html":{},"injectables/PagesService.html":{},"interfaces/PluginConfig.html":{},"interfaces/PluginConfigMap.html":{},"interfaces/ToolSettingsMap.html":{},"contributing.html":{},"index.html":{},"todo.html":{},"miscellaneous/typealiases.html":{}}}],["viewchild",{"_index":236,"title":{},"body":{"interfaces/EditorJSMaterialForm.html":{},"components/PageContainerComponent.html":{}}}],["viewchild('editorinstance",{"_index":317,"title":{},"body":{"interfaces/EditorJSMaterialForm.html":{}}}],["viewchild('ngxeditorjs",{"_index":1247,"title":{},"body":{"components/PageContainerComponent.html":{}}}],["viewer",{"_index":1026,"title":{},"body":{"modules/NgxEditorjsDemoModule.html":{},"modules/NgxTinynodesMatJsonOutputModule.html":{},"modules/NgxTinynodesMaterialFormFieldDemo.html":{},"dependencies.html":{}}}],["viewpoints",{"_index":1531,"title":{},"body":{"contributing.html":{}}}],["visit",{"_index":1696,"title":{},"body":{"index.html":{}}}],["void",{"_index":188,"title":{},"body":{"interfaces/EditorJSClass.html":{},"interfaces/EditorJSInstanceConfig.html":{},"interfaces/EditorJSMaterialForm.html":{},"interfaces/InjectorApiCallOptions.html":{},"interfaces/InjectorApiCallResponse.html":{},"interfaces/InjectorMethodOption.html":{},"classes/MockEditorJS.html":{},"injectables/MockNgZone.html":{},"classes/MockPlugin.html":{},"directives/NgxEditorJSDirective.html":{},"injectables/NgxEditorJSService.html":{},"components/NgxTinynodesMatJsonOutputComponent.html":{},"components/NgxTinynodesMaterialFormFieldDemoComponent.html":{},"components/PageContainerComponent.html":{},"injectables/PagesService.html":{}}}],["wait",{"_index":658,"title":{},"body":{"directives/NgxEditorJSDirective.html":{}}}],["want",{"_index":1708,"title":{},"body":{"index.html":{}}}],["warning",{"_index":1278,"title":{},"body":{"modules/PageStoreModule.html":{},"modules/PluginWarningModule.html":{}}}],["warranties",{"_index":1759,"title":{},"body":{"license.html":{}}}],["warranty",{"_index":1754,"title":{},"body":{"license.html":{}}}],["way",{"_index":521,"title":{},"body":{"components/NgxEditorJSDemoHomeComponent.html":{},"directives/NgxEditorJSDirective.html":{},"modules/NgxEditorjsPluginsModule.html":{},"injectables/PagesService.html":{}}}],["wednesday",{"_index":1404,"title":{},"body":{"changelog.html":{}}}],["welcoming",{"_index":1497,"title":{},"body":{"contributing.html":{}}}],["well",{"_index":1402,"title":{},"body":{"changelog.html":{}}}],["whether",{"_index":1771,"title":{},"body":{"license.html":{}}}],["width",{"_index":1223,"title":{},"body":{"components/NgxTinynodesMaterialFormFieldDemoComponent.html":{},"components/PageContainerComponent.html":{}}}],["wiki",{"_index":1580,"title":{},"body":{"contributing.html":{}}}],["wish",{"_index":1462,"title":{},"body":{"contributing.html":{}}}],["withbackground",{"_index":59,"title":{},"body":{"interfaces/Block.html":{},"interfaces/Header.html":{},"interfaces/HeaderBlock.html":{},"interfaces/Image.html":{},"interfaces/ImageBlock.html":{},"interfaces/List.html":{},"interfaces/ListBlock.html":{},"interfaces/Paragraph.html":{},"interfaces/ParagraphBlock.html":{}}}],["withborder",{"_index":56,"title":{},"body":{"interfaces/Block.html":{},"interfaces/Header.html":{},"interfaces/HeaderBlock.html":{},"interfaces/Image.html":{},"interfaces/ImageBlock.html":{},"interfaces/List.html":{},"interfaces/ListBlock.html":{},"interfaces/Paragraph.html":{},"interfaces/ParagraphBlock.html":{}}}],["within",{"_index":840,"title":{},"body":{"injectables/NgxEditorJSService.html":{},"contributing.html":{},"index.html":{}}}],["without",{"_index":1421,"title":{},"body":{"changelog.html":{},"contributing.html":{},"license.html":{}}}],["won't",{"_index":481,"title":{},"body":{"interfaces/NgxEditorJSConfig.html":{},"interfaces/NgxEditorJSModuleConfig.html":{},"components/NgxTinynodesMaterialFormFieldDemoComponent.html":{}}}],["work",{"_index":1216,"title":{},"body":{"components/NgxTinynodesMaterialFormFieldDemoComponent.html":{},"changelog.html":{}}}],["written",{"_index":1395,"title":{},"body":{"changelog.html":{}}}],["yes",{"_index":642,"title":{},"body":{"directives/NgxEditorJSDirective.html":{},"modules/NgxEditorJSModule.html":{},"injectables/PagesService.html":{},"miscellaneous/functions.html":{}}}],["zone",{"_index":447,"title":{},"body":{"injectables/MockNgZone.html":{},"injectables/NgxEditorJSService.html":{}}}],["zone.js",{"_index":1674,"title":{},"body":{"dependencies.html":{}}}],["zoom",{"_index":741,"title":{},"body":{"modules/NgxEditorJSModule.html":{},"modules/NgxEditorJSPluginServiceModule.html":{},"modules/NgxEditorjsDemoModule.html":{},"modules/NgxEditorjsPluginsModule.html":{},"modules/NgxTinynodesComponentsModule.html":{},"modules/NgxTinynodesMatJsonOutputModule.html":{},"modules/NgxTinynodesMatTagInputModule.html":{},"modules/NgxTinynodesMaterialFormFieldDemo.html":{},"modules/PageStoreModule.html":{},"overview.html":{}}}]],"pipeline":["stemmer"]},
    "store": {"interfaces/Block.html":{"url":"interfaces/Block.html","title":"interface - Block","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  Block\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            libs/ngx-editorjs/ngx-editorjs/src/lib/types/blocks.ts\n        \n\n            \n                Description\n            \n            \n                Base block type for EditorJS\n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        data\n                                \n                                \n                                        type\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n            \n    Indexable\n        \n            \n                \n                    \n                        [key: string]:        any\n\n                    \n                \n                        \n                            \n                                Defined in libs/ngx-editorjs/ngx-editorjs/src/lib/types/blocks.ts:13\n                            \n                        \n                \n                    \n                        Additional properties on the type\n\n                    \n                \n            \n        \n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        data\n                                    \n                                \n                                \n                                    \n                                        data:     T\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     T\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    The data interface for the block type\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        type\n                                    \n                                \n                                \n                                    \n                                        type:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    The EditorJS block type\n\n                                \n                            \n                        \n                    \n            \n    \n\n\n    \n        export interface Block {\n  /**\n   * The EditorJS block type\n   */\n  type: string;\n\n  /**\n   * The data interface for the block type\n   */\n  data: T;\n\n  /**\n   * Additional properties on the type\n   */\n  [key: string]: any;\n}\n\n/**\n * Available list styles, supports `ordered` and `unordered`.\n * A custom string can also be added\n */\nexport type ListStyle = 'ordered' | 'unordered' | string;\n\n/**\n * Default data type for a list block\n */\nexport interface List {\n  /**\n   * The list style\n   */\n  style: ListStyle;\n  /**\n   * List items of type T\n   */\n  items: T[];\n}\n\n/**\n * The default list block is provided by the EditorJS list plugin\n */\nexport interface ListBlock extends Block> {\n  /**\n   * The EditorJS block type\n   */\n  type: 'list';\n}\n\n/**\n * Default data type for a paragraph block\n */\ninterface Paragraph {\n  /**\n   * The paragraph text\n   */\n  text: string;\n}\n\n/**\n * Interface for a paragraph block\n */\nexport interface ParagraphBlock extends Block {\n  /**\n   * The EditorJS block type\n   */\n  type: 'paragraph';\n}\n\n/**\n * Default data type for a header block\n */\ninterface Header {\n  /**\n   * The header text\n   */\n  text: string;\n  /**\n   * The header level from 1-6\n   */\n  level: number;\n}\n\n/**\n * Interface for a header block\n */\nexport interface HeaderBlock extends Block {\n  /**\n   * The EditorJS block type\n   */\n  type: 'header';\n}\n\n/**\n * Default data type for a header block\n */\nexport interface Image {\n  /**\n   * The image URL\n   */\n  url: string;\n  /**\n   * Optional image caption\n   */\n  caption?: string;\n  /**\n   * Optional border property\n   */\n  withBorder?: boolean;\n\n  /**\n   * Optional background property\n   */\n  withBackground?: boolean;\n\n  /**\n   * Optional stretch property\n   */\n  stretched?: boolean;\n}\n\n/**\n * Interface for a image block\n */\nexport interface ImageBlock extends Block {\n  /**\n   * The EditorJS block type\n   */\n  type: 'image';\n}\n\n/**\n * Type of all the basic block type\n */\nexport type BlockTypes = ParagraphBlock | HeaderBlock | ImageBlock | ListBlock | Block;\n\n    \n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/BlockData.html":{"url":"interfaces/BlockData.html","title":"interface - BlockData","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  BlockData\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            libs/ngx-editorjs/ngx-editorjs-plugins/src/lib/types/plugins.ts\n        \n\n            \n                Description\n            \n            \n                Block Data interface\n\n            \n\n\n\n\n            \n    Indexable\n        \n            \n                \n                    \n                        [key: string]:        any\n\n                    \n                \n                        \n                            \n                                Defined in libs/ngx-editorjs/ngx-editorjs-plugins/src/lib/types/plugins.ts:7\n                            \n                        \n            \n        \n\n\n    \n\n\n    \n        import { InjectionToken } from '@angular/core';\nimport { ToolSettings, ToolConstructable } from '@editorjs/editorjs';\n\n/**\n * Block Data interface\n */\nexport interface BlockData {\n  [key: string]: any;\n}\n\n/**\n * The types of plugins supported, currently block and inline\n */\nexport enum PluginTypes {\n  /**\n   * A EditorJS block plugin\n   */\n  Block = 'block',\n  /**\n   * A EditorJS inline plugin\n   */\n  Inline = 'inline'\n}\n\n/**\n * The types of plugins supported via the plugin `type` property\n */\nexport type PluginType = PluginTypes.Block | PluginTypes.Inline | string;\n\n/**\n * A plugin property\n */\nexport type PluginProperty = string;\n\n/**\n * The EditorJS tool settings for this plugin\n */\nexport type EditorJSPlugin = ToolConstructable | ToolSettings;\n\n/**\n * A map of all the tools settings\n */\nexport interface ToolSettingsMap {\n  /**\n   * The key of the plugin and the plugin exported tool settings\n   */\n  [key: string]: EditorJSPlugin;\n}\n\n/**\n * A plugin configuration object\n */\nexport interface PluginConfig {\n  /**\n   * Specifies the type of plugin for the plugin provider\n   */\n  type: PluginProperty;\n  /**\n   * The key to use for the plugin\n   */\n  key: PluginProperty;\n  /**\n   * Label for displaying the plugin name\n   */\n  pluginName: PluginProperty;\n  /**\n   * Optional description for the plugin\n   */\n  description?: PluginProperty;\n  /**\n   * Optional shortcut for the plugin\n   */\n  shortcut?: PluginProperty;\n  /**\n   * Optional {@link https://editorjs.io/provide-custom-configuration | custom configuration} to pass to EditorJS\n   */\n  config?: any;\n\n  /**\n   * If a block tool, you can also set this to true if it contains inline tool support\n   */\n  inlineToolbar?: boolean;\n  /**\n   * Optional block data, used to define the block data for this type\n   * and used as a default\n   */\n  blockData?: BlockData;\n  /**\n   * The plugin for the editor\n   */\n  plugin: EditorJSPlugin | undefined;\n}\n\n/**\n * The Injection token for initial plugins as defined in the ngx-editorjs module\n */\nexport const EDITOR_JS_TOOL_INJECTOR = new InjectionToken('EDITOR_JS_TOOL_INJECTOR');\n\n/**\n * Injection token for a plugin config\n */\nexport const PLUGIN_CONFIG = new InjectionToken('PLUGIN_CONFIG');\n\n/**\n * A map of plugin configs\n */\nexport interface PluginConfigMap {\n  /**\n   * A plugin config per key\n   */\n  [key: string]: PluginConfig;\n}\n\n/**\n * Injection token for the plugin config map\n */\nexport const PluginClasses = new InjectionToken('PluginClasses');\n\n    \n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/ChangeMap.html":{"url":"interfaces/ChangeMap.html","title":"interface - ChangeMap","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  ChangeMap\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            libs/ngx-editorjs/ngx-editorjs/src/lib/types/maps.ts\n        \n\n            \n                Description\n            \n            \n                A map containing BehaviorSubject which is the last save from the EditorJS instance\n\n            \n\n\n\n\n            \n    Indexable\n        \n            \n                \n                    \n                        [key: string]:    BehaviorSubject\n\n                    \n                \n                        \n                            \n                                Defined in libs/ngx-editorjs/ngx-editorjs/src/lib/types/maps.ts:52\n                            \n                        \n                \n                    \n                        A map key containing a BehaviorSubject\n\n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import EditorJS, { OutputData } from '@editorjs/editorjs';\nimport { BehaviorSubject } from 'rxjs';\nimport { Block } from './blocks';\n\n/**\n * A map containing instances of `BehaviorSubject`\n */\nexport interface EditorMap {\n  /**\n   * A map key containing `BehaviorSubject`\n   */\n  [key: string]: BehaviorSubject;\n}\n\n/**\n * A map containing `BehaviorSubject` values of the ready state of EditorJS\n */\nexport interface ReadyMap {\n  /**\n   * A map key containing a `BehaviorSubject`\n   */\n  [key: string]: BehaviorSubject;\n}\n\n/**\n * A map containing `BehaviorSubject` values of the save state of EditorJS\n */\nexport interface SavedMap {\n  /**\n   * A map key containing a `BehaviorSubject`\n   */\n  [key: string]: BehaviorSubject;\n}\n\n/**\n * An EditorJS change event\n */\nexport interface EditorJSChange {\n  /**\n   * Time of the change\n   */\n  time: number;\n  /**\n   * Blocks in the change\n   */\n  blocks: Block[];\n}\n\n/**\n * A map containing `BehaviorSubject` which is the last save from the EditorJS instance\n */\nexport interface ChangeMap {\n  /**\n   * A map key containing a `BehaviorSubject`\n   */\n  [key: string]: BehaviorSubject;\n}\n\n    \n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/CreateEditorJSOptions.html":{"url":"interfaces/CreateEditorJSOptions.html","title":"interface - CreateEditorJSOptions","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  CreateEditorJSOptions\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            libs/ngx-editorjs/ngx-editorjs/src/lib/types/editorjs-service.ts\n        \n\n            \n                Description\n            \n            \n                EditorJS options\n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                            Optional\n                                        autoSave\n                                \n                                \n                                        config\n                                \n                                \n                                            Optional\n                                        excludeTools\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        autoSave\n                                    \n                                \n                                \n                                    \n                                        autoSave:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    Autosave on change, is set to false\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        config\n                                    \n                                \n                                \n                                    \n                                        config:     EditorConfig\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     EditorConfig\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Configuration\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        excludeTools\n                                    \n                                \n                                \n                                    \n                                        excludeTools:     string[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string[]\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    Tools to include, Optional - if not set all tools will be used\n\n                                \n                            \n                        \n                    \n            \n    \n\n\n    \n        import { EditorConfig } from '@editorjs/editorjs';\n\n/**\n * EditorJS options\n */\nexport interface CreateEditorJSOptions {\n  /**\n   * Configuration\n   */\n  config: EditorConfig;\n  /**\n   * Tools to include, Optional - if not set all tools will be used\n   */\n  excludeTools?: string[];\n  /**\n   * Autosave on change, is set to false\n   */\n  autoSave?: number;\n}\n\n    \n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/EditorJSChange.html":{"url":"interfaces/EditorJSChange.html","title":"interface - EditorJSChange","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  EditorJSChange\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            libs/ngx-editorjs/ngx-editorjs/src/lib/types/maps.ts\n        \n\n            \n                Description\n            \n            \n                An EditorJS change event\n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        blocks\n                                \n                                \n                                        time\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        blocks\n                                    \n                                \n                                \n                                    \n                                        blocks:         Block[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         Block[]\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Blocks in the change\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        time\n                                    \n                                \n                                \n                                    \n                                        time:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Time of the change\n\n                                \n                            \n                        \n                    \n            \n    \n\n\n    \n        import EditorJS, { OutputData } from '@editorjs/editorjs';\nimport { BehaviorSubject } from 'rxjs';\nimport { Block } from './blocks';\n\n/**\n * A map containing instances of `BehaviorSubject`\n */\nexport interface EditorMap {\n  /**\n   * A map key containing `BehaviorSubject`\n   */\n  [key: string]: BehaviorSubject;\n}\n\n/**\n * A map containing `BehaviorSubject` values of the ready state of EditorJS\n */\nexport interface ReadyMap {\n  /**\n   * A map key containing a `BehaviorSubject`\n   */\n  [key: string]: BehaviorSubject;\n}\n\n/**\n * A map containing `BehaviorSubject` values of the save state of EditorJS\n */\nexport interface SavedMap {\n  /**\n   * A map key containing a `BehaviorSubject`\n   */\n  [key: string]: BehaviorSubject;\n}\n\n/**\n * An EditorJS change event\n */\nexport interface EditorJSChange {\n  /**\n   * Time of the change\n   */\n  time: number;\n  /**\n   * Blocks in the change\n   */\n  blocks: Block[];\n}\n\n/**\n * A map containing `BehaviorSubject` which is the last save from the EditorJS instance\n */\nexport interface ChangeMap {\n  /**\n   * A map key containing a `BehaviorSubject`\n   */\n  [key: string]: BehaviorSubject;\n}\n\n    \n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/EditorJSClass.html":{"url":"interfaces/EditorJSClass.html","title":"interface - EditorJSClass","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  EditorJSClass\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            libs/ngx-editorjs/ngx-editorjs/src/lib/types/injector.ts\n        \n\n            \n                Description\n            \n            \n                Interface for the injected EditorJS class, returns the static\nclass of EditorJS with the version and that creates the instance and provides\nthe Typescript parse with type information\n\n            \n\n            \n                Extends\n            \n            \n                        Function\n            \n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        version\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        version\n                                    \n                                \n                                \n                                    \n                                        version:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    EditorJS version\n\n                                \n                            \n                        \n                    \n            \n    \n\n\n    \n        import { InjectionToken } from '@angular/core';\nimport EditorJS, { EditorConfig, OutputData } from '@editorjs/editorjs';\nimport { Block } from './blocks';\n\n/**\n * Configuration for creating an EditorJS instance\n */\nexport interface EditorJSInstanceConfig {\n  /**\n   * The editor configuration, this is required with at least the `holder` property\n   */\n  editorConfig: EditorConfig;\n  /**\n   * The method to call when the editor makes a change\n   */\n  onChange?: (holder?: string) => void;\n\n  /**\n   * The method to call with an editor is ready\n   */\n  onReady?: (holder?: string) => void;\n}\n\n/**\n * Default values for each internal map\n */\nexport const MAP_DEFAULTS = [\n  ['lastChangeMap', { time: 0, blocks: [], version: EditorJS.version }],\n  ['isReadyMap', false],\n  ['hasSavedMap', false]\n];\n\n/**\n * Injection token for the EditorJS class\n */\nexport const EDITORJS_MODULE_IMPORT = new InjectionToken('EDITORJS_MODULE_IMPORT');\n\n/**\n * The EditorJS class injector\n */\nexport const EditorJSInstance = new InjectionToken('EditorJSInstance');\n\n/**\n * Options for a Injector method\n */\nexport interface InjectorMethodOption {\n  /**\n   * The holder for the option\n   */\n  holder: string;\n  /**\n   * Optional blocks\n   */\n  data?: OutputData;\n  /**\n   * Optional editor\n   */\n  editor?: EditorJS;\n  /**\n   * Don't call save\n   */\n  skipSave?: boolean;\n}\n\n/**\n * Options to pass when calling the EditorJS instance API\n */\nexport interface InjectorApiCallOptions {\n  /**\n   * Holder for the EditorJS instance\n   */\n  holder: string;\n\n  /**\n   * The method to call\n   */\n  method: string;\n  /**\n   * The optional namespace for the API call\n   */\n  namespace?: string;\n}\n\n/**\n * A response from the EditorJS api\n */\nexport interface InjectorApiCallResponse extends InjectorApiCallOptions {\n  result: T;\n}\n\n/**\n * Interface for the injected EditorJS class, returns the static\n * class of EditorJS with the version and that creates the instance and provides\n * the Typescript parse with type information\n */\nexport interface EditorJSClass extends Function {\n  new (...args: any[]): T;\n  /**\n   * EditorJS version\n   */\n  version: string;\n}\n\n    \n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/EditorJSInstanceConfig.html":{"url":"interfaces/EditorJSInstanceConfig.html","title":"interface - EditorJSInstanceConfig","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  EditorJSInstanceConfig\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            libs/ngx-editorjs/ngx-editorjs/src/lib/types/injector.ts\n        \n\n            \n                Description\n            \n            \n                Configuration for creating an EditorJS instance\n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        editorConfig\n                                \n                                \n                                            Optional\n                                        onChange\n                                \n                                \n                                            Optional\n                                        onReady\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        editorConfig\n                                    \n                                \n                                \n                                    \n                                        editorConfig:     EditorConfig\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     EditorConfig\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    The editor configuration, this is required with at least the holder property\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        onChange\n                                    \n                                \n                                \n                                    \n                                        onChange:         function\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         function\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    The method to call when the editor makes a change\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        onReady\n                                    \n                                \n                                \n                                    \n                                        onReady:         function\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         function\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    The method to call with an editor is ready\n\n                                \n                            \n                        \n                    \n            \n    \n\n\n    \n        import { InjectionToken } from '@angular/core';\nimport EditorJS, { EditorConfig, OutputData } from '@editorjs/editorjs';\nimport { Block } from './blocks';\n\n/**\n * Configuration for creating an EditorJS instance\n */\nexport interface EditorJSInstanceConfig {\n  /**\n   * The editor configuration, this is required with at least the `holder` property\n   */\n  editorConfig: EditorConfig;\n  /**\n   * The method to call when the editor makes a change\n   */\n  onChange?: (holder?: string) => void;\n\n  /**\n   * The method to call with an editor is ready\n   */\n  onReady?: (holder?: string) => void;\n}\n\n/**\n * Default values for each internal map\n */\nexport const MAP_DEFAULTS = [\n  ['lastChangeMap', { time: 0, blocks: [], version: EditorJS.version }],\n  ['isReadyMap', false],\n  ['hasSavedMap', false]\n];\n\n/**\n * Injection token for the EditorJS class\n */\nexport const EDITORJS_MODULE_IMPORT = new InjectionToken('EDITORJS_MODULE_IMPORT');\n\n/**\n * The EditorJS class injector\n */\nexport const EditorJSInstance = new InjectionToken('EditorJSInstance');\n\n/**\n * Options for a Injector method\n */\nexport interface InjectorMethodOption {\n  /**\n   * The holder for the option\n   */\n  holder: string;\n  /**\n   * Optional blocks\n   */\n  data?: OutputData;\n  /**\n   * Optional editor\n   */\n  editor?: EditorJS;\n  /**\n   * Don't call save\n   */\n  skipSave?: boolean;\n}\n\n/**\n * Options to pass when calling the EditorJS instance API\n */\nexport interface InjectorApiCallOptions {\n  /**\n   * Holder for the EditorJS instance\n   */\n  holder: string;\n\n  /**\n   * The method to call\n   */\n  method: string;\n  /**\n   * The optional namespace for the API call\n   */\n  namespace?: string;\n}\n\n/**\n * A response from the EditorJS api\n */\nexport interface InjectorApiCallResponse extends InjectorApiCallOptions {\n  result: T;\n}\n\n/**\n * Interface for the injected EditorJS class, returns the static\n * class of EditorJS with the version and that creates the instance and provides\n * the Typescript parse with type information\n */\nexport interface EditorJSClass extends Function {\n  new (...args: any[]): T;\n  /**\n   * EditorJS version\n   */\n  version: string;\n}\n\n    \n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/EditorJSMaterialForm.html":{"url":"interfaces/EditorJSMaterialForm.html","title":"interface - EditorJSMaterialForm","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  EditorJSMaterialForm\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            libs/ngx-editorjs/ngx-editorjs/src/lib/containers/editorjs-mat-field/editorjs-mat-field.component.ts\n        \n\n            \n                Description\n            \n            \n                Single interface for EditorJSMaterialForm\n\n            \n\n            \n                Extends\n            \n            \n                    MatFormFieldControl\n            \n\n\n\n\n    \n\n\n    \n        import { FocusMonitor } from '@angular/cdk/a11y';\nimport { coerceBooleanProperty } from '@angular/cdk/coercion';\nimport {\n  AfterContentInit,\n  ChangeDetectionStrategy,\n  ChangeDetectorRef,\n  Component,\n  DoCheck,\n  forwardRef,\n  HostBinding,\n  Input,\n  OnDestroy,\n  OnInit,\n  Optional,\n  Provider,\n  Self,\n  ViewChild\n} from '@angular/core';\nimport { NgControl } from '@angular/forms';\nimport { MatFormFieldControl } from '@angular/material/form-field';\nimport { Subject } from 'rxjs';\nimport { takeUntil } from 'rxjs/operators';\nimport { NgxEditorJSDirective } from '../../directives/ngx-editorjs.directive';\nimport { NgxEditorJSService } from '../../services/editorjs.service';\nimport { NgxEditorJSComponent } from '../editorjs/editorjs.component';\n\n/**\n * Provider for the EditorJS Material Field Component\n */\nexport const EDITORJS_MATERIAL_FIELD_CONTROL: Provider = {\n  provide: MatFormFieldControl,\n  useExisting: forwardRef(() => NgxEditorJSMatFieldComponent),\n  multi: true\n};\n\n/**\n * Single interface for EditorJSMaterialForm\n */\nexport interface EditorJSMaterialForm\n  extends MatFormFieldControl,\n    OnInit,\n    AfterContentInit,\n    OnDestroy,\n    DoCheck {}\n\n/**\n * This component provides a [Material](https://material.angular.io) compatible `` component.\n * It provides a full implementation of all the required properties of a Material component\n *\n * @example\n * \n *  \n * \n */\n@Component({\n  selector: 'ngx-editorjs-mat-field',\n  templateUrl: 'editorjs-mat-field.component.html',\n  styleUrls: ['editorjs-mat-field.component.scss'],\n  providers: [EDITORJS_MATERIAL_FIELD_CONTROL],\n  changeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class NgxEditorJSMatFieldComponent extends NgxEditorJSComponent implements EditorJSMaterialForm {\n  /**\n   * Internal Static ID for Material for each editor instance\n   */\n  static nextId = 0;\n  /**\n   * Material state change subject\n   */\n  public stateChanges = new Subject();\n\n  /**\n   * Material control type\n   */\n  public controlType = 'ngx-editorjs-mat-field';\n\n  /**\n   * Material error state\n   */\n  public errorState = false;\n\n  /**\n   * Get the component value\n   */\n  get value(): any {\n    return this._value;\n  }\n\n  /**\n   * Set the component value\n   * @param value The value to set\n   */\n  @Input('value')\n  set value(value: any) {\n    this._value = value;\n    this.stateChanges.next();\n  }\n\n  /**\n   * Material placeholder value\n   */\n  private _placeholder: string;\n\n  /**\n   * Get the Material placeholder value\n   */\n  get placeholder() {\n    return this._placeholder;\n  }\n\n  /**\n   * Set the material Placeholder value\n   * @input placeholder The placeholder state to set\n   */\n  @Input('placeholder')\n  set placeholder(placeholder: string) {\n    this._placeholder = placeholder;\n    this.stateChanges.next();\n  }\n\n  /**\n   * Material focused state\n   */\n  private _focused: boolean;\n  /**\n   * Get the Material focused state\n   */\n  get focused() {\n    return this._focused;\n  }\n\n  /**\n   * Set the Material focused state\n   * @param focused The focused state to set\n   */\n  @Input('focused')\n  set focused(focused: boolean) {\n    this._focused = coerceBooleanProperty(focused);\n    if (this._focused) {\n      this.onTouch();\n    }\n    this.stateChanges.next();\n  }\n\n  /**\n   * Material Required Value\n   */\n  private _required = false;\n\n  /**\n   * Get the Material required state\n   */\n  get required() {\n    return this._required;\n  }\n\n  /**\n   * Set the Material requied state\n   * @param required The required state to set\n   */\n  @Input('required')\n  set required(required: boolean) {\n    this._required = coerceBooleanProperty(required);\n    this.stateChanges.next();\n  }\n\n  /**\n   * Material disabled state\n   */\n  private _disabled = false;\n\n  /**\n   * Get the Material disabled state\n   */\n  get disabled() {\n    return this._disabled;\n  }\n\n  /**\n   * Set the Material disabled state\n   * @param disabled The disabled state to set\n   */\n  @Input('disabled')\n  set disabled(disabled: boolean) {\n    this._disabled = coerceBooleanProperty(disabled);\n    this.stateChanges.next();\n  }\n\n  /**\n   * Material empty state\n   */\n  private _empty: boolean;\n  /**\n   * Get the Material empty state\n   */\n  public get empty() {\n    return this._empty;\n  }\n\n  /**\n   * Set the Material empty state\n   * @param empty The empty value\n   */\n  public set empty(empty: boolean) {\n    this._empty = empty;\n  }\n\n  /**\n   * Access to the underlying {NgxEditorJSDirective}\n   */\n  @ViewChild('editorInstance', { read: NgxEditorJSDirective, static: true })\n  public readonly editorInstance: NgxEditorJSDirective;\n\n  /**\n   * Host binding to the unique ID for this editor for material\n   */\n  @HostBinding()\n  id = `ngx-editorjs-mat-field-${NgxEditorJSMatFieldComponent.nextId++}`;\n\n  /**\n   * Gets if the Material label should float\n   */\n  @HostBinding('class.floating')\n  get shouldLabelFloat() {\n    return this.focused || !this.empty;\n  }\n\n  /**\n   * Host binding for ARIA label\n   */\n  @HostBinding('attr.aria-describedby') describedBy = '';\n\n  /**\n   *\n   * @param ids The IDs of the Material components\n   */\n  public setDescribedByIds(ids: string[]) {\n    this.describedBy = ids.join(' ');\n  }\n\n  /**\n   * Material on container click\n   * @param event The {MouseEvent} for the container click\n   */\n  public onContainerClick(event: MouseEvent) {\n    this.onTouch(event);\n    this.stateChanges.next();\n  }\n\n  /**\n   * Constructor for the Material field, as this extends the `NgxEditorJSComponent` component\n   * we call `super()` to get all the properties of that component\n   * @param editorService The NgxEditorJSService instance\n   * @param focusMonitor Focus monitor for the Material element\n   * @param changeDetection The Change detection ref\n   * @param ngControl The Angular control base class\n   */\n  constructor(\n    protected readonly editorService: NgxEditorJSService,\n    protected focusMonitor: FocusMonitor,\n    protected readonly changeDetection: ChangeDetectorRef,\n    @Optional() @Self() public ngControl: NgControl\n  ) {\n    super(editorService, focusMonitor, changeDetection);\n  }\n\n  /**\n   * Called on OnInit\n   */\n  // tslint:disable-next-line:use-lifecycle-interface\n  public ngOnInit(): void {\n    if (this.ngControl !== null) {\n      this.ngControl.valueAccessor = this;\n    }\n  }\n\n  /**\n   * Inside the AfterContentInit life-cycle we set up a listener for focus\n   * and trigger focus autosave subscribe and unsubscribe\n   */\n  // tslint:disable-next-line:use-lifecycle-interface\n  public ngAfterContentInit(): void {\n    this.setupServiceSubscriptions();\n    this.getFocusMonitor(this.editorInstance.element)\n      .pipe(takeUntil(this.onDestroy$))\n      .subscribe(focused => {\n        this.onTouch();\n        this.focused = focused;\n        this.stateChanges.next();\n      });\n  }\n\n  /**\n   * Set the error state based on the underlying control state\n   */\n  // tslint:disable-next-line:use-lifecycle-interface\n  ngDoCheck(): void {\n    if (this.ngControl) {\n      this.errorState = this.ngControl.invalid && this.ngControl.touched;\n      this.stateChanges.next();\n    }\n  }\n}\n\n    \n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/EditorMap.html":{"url":"interfaces/EditorMap.html","title":"interface - EditorMap","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  EditorMap\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            libs/ngx-editorjs/ngx-editorjs/src/lib/types/maps.ts\n        \n\n            \n                Description\n            \n            \n                A map containing instances of BehaviorSubject\n\n            \n\n\n\n\n            \n    Indexable\n        \n            \n                \n                    \n                        [key: string]:    BehaviorSubject\n\n                    \n                \n                        \n                            \n                                Defined in libs/ngx-editorjs/ngx-editorjs/src/lib/types/maps.ts:8\n                            \n                        \n                \n                    \n                        A map key containing BehaviorSubject\n\n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import EditorJS, { OutputData } from '@editorjs/editorjs';\nimport { BehaviorSubject } from 'rxjs';\nimport { Block } from './blocks';\n\n/**\n * A map containing instances of `BehaviorSubject`\n */\nexport interface EditorMap {\n  /**\n   * A map key containing `BehaviorSubject`\n   */\n  [key: string]: BehaviorSubject;\n}\n\n/**\n * A map containing `BehaviorSubject` values of the ready state of EditorJS\n */\nexport interface ReadyMap {\n  /**\n   * A map key containing a `BehaviorSubject`\n   */\n  [key: string]: BehaviorSubject;\n}\n\n/**\n * A map containing `BehaviorSubject` values of the save state of EditorJS\n */\nexport interface SavedMap {\n  /**\n   * A map key containing a `BehaviorSubject`\n   */\n  [key: string]: BehaviorSubject;\n}\n\n/**\n * An EditorJS change event\n */\nexport interface EditorJSChange {\n  /**\n   * Time of the change\n   */\n  time: number;\n  /**\n   * Blocks in the change\n   */\n  blocks: Block[];\n}\n\n/**\n * A map containing `BehaviorSubject` which is the last save from the EditorJS instance\n */\nexport interface ChangeMap {\n  /**\n   * A map key containing a `BehaviorSubject`\n   */\n  [key: string]: BehaviorSubject;\n}\n\n    \n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/FixedHeader.html":{"url":"classes/FixedHeader.html","title":"class - FixedHeader","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  FixedHeader\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            libs/ngx-editorjs/ngx-editorjs-plugins/src/lib/plugins/header/header.module.ts\n        \n\n\n            \n                Extends\n            \n            \n                        Header\n            \n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                normalizeData\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(config: any)\n                    \n                \n                        \n                            \n                                Defined in libs/ngx-editorjs/ngx-editorjs-plugins/src/lib/plugins/header/header.module.ts:8\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        config\n                                                  \n                                                        \n                                                                        any\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            normalizeData\n                        \n                        \n                    \n                \n            \n            \n                \nnormalizeData(data: any)\n                \n            \n\n\n            \n                \n                    Defined in libs/ngx-editorjs/ngx-editorjs-plugins/src/lib/plugins/header/header.module.ts:18\n                \n            \n\n\n            \n                \n                    Fixed version of the function to normalize input data\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Default value\n                                    Description\n                                \n                            \n                            \n                                \n                                    data\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n                                    \n                                        {}\n                                    \n\n                                    \n                                        The data for the header\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        The new header data\n\n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { NgModule } from '@angular/core';\nimport { EDITOR_JS_TOOL_INJECTOR, PLUGIN_CONFIG, PluginTypes } from '../../types/plugins';\nimport Header from '@editorjs/header';\n\n\n//TODO: Remove once Header plugin has been fixed\n\nexport class FixedHeader extends Header {\n  constructor(config: any) {\n    super(config);\n  }\n\n  /**\n   * Fixed version of the function to normalize input data\n   * @param data The data for the header\n   * @returns The new header data\n   */\n  normalizeData(data: any = {}) {\n    const newData: any = {};\n    newData.text = data.text || '';\n    newData.level = parseInt(data.level, 10) || (this as any).defaultLevel.number;\n    return newData;\n  }\n}\n\n/**\n * A module that provides the default EditorJS header block tool.\n * See [the GitHub repo](https://github.com/editor-js/header) for API details\n */\n@NgModule({\n  providers: [\n    {\n      provide: EDITOR_JS_TOOL_INJECTOR,\n      useValue: FixedHeader,\n      multi: true\n    },\n    {\n      provide: PLUGIN_CONFIG,\n      useValue: {\n        key: 'header',\n        type: PluginTypes.Block,\n        pluginName: 'EditorJS Header'\n      },\n      multi: true\n    }\n  ]\n})\nexport class PluginHeaderModule {\n}\n\n    \n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/Header.html":{"url":"interfaces/Header.html","title":"interface - Header","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  Header\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            libs/ngx-editorjs/ngx-editorjs/src/lib/types/blocks.ts\n        \n\n            \n                Description\n            \n            \n                Default data type for a header block\n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        level\n                                \n                                \n                                        text\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        level\n                                    \n                                \n                                \n                                    \n                                        level:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    The header level from 1-6\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        text\n                                    \n                                \n                                \n                                    \n                                        text:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    The header text\n\n                                \n                            \n                        \n                    \n            \n    \n\n\n    \n        export interface Block {\n  /**\n   * The EditorJS block type\n   */\n  type: string;\n\n  /**\n   * The data interface for the block type\n   */\n  data: T;\n\n  /**\n   * Additional properties on the type\n   */\n  [key: string]: any;\n}\n\n/**\n * Available list styles, supports `ordered` and `unordered`.\n * A custom string can also be added\n */\nexport type ListStyle = 'ordered' | 'unordered' | string;\n\n/**\n * Default data type for a list block\n */\nexport interface List {\n  /**\n   * The list style\n   */\n  style: ListStyle;\n  /**\n   * List items of type T\n   */\n  items: T[];\n}\n\n/**\n * The default list block is provided by the EditorJS list plugin\n */\nexport interface ListBlock extends Block> {\n  /**\n   * The EditorJS block type\n   */\n  type: 'list';\n}\n\n/**\n * Default data type for a paragraph block\n */\ninterface Paragraph {\n  /**\n   * The paragraph text\n   */\n  text: string;\n}\n\n/**\n * Interface for a paragraph block\n */\nexport interface ParagraphBlock extends Block {\n  /**\n   * The EditorJS block type\n   */\n  type: 'paragraph';\n}\n\n/**\n * Default data type for a header block\n */\ninterface Header {\n  /**\n   * The header text\n   */\n  text: string;\n  /**\n   * The header level from 1-6\n   */\n  level: number;\n}\n\n/**\n * Interface for a header block\n */\nexport interface HeaderBlock extends Block {\n  /**\n   * The EditorJS block type\n   */\n  type: 'header';\n}\n\n/**\n * Default data type for a header block\n */\nexport interface Image {\n  /**\n   * The image URL\n   */\n  url: string;\n  /**\n   * Optional image caption\n   */\n  caption?: string;\n  /**\n   * Optional border property\n   */\n  withBorder?: boolean;\n\n  /**\n   * Optional background property\n   */\n  withBackground?: boolean;\n\n  /**\n   * Optional stretch property\n   */\n  stretched?: boolean;\n}\n\n/**\n * Interface for a image block\n */\nexport interface ImageBlock extends Block {\n  /**\n   * The EditorJS block type\n   */\n  type: 'image';\n}\n\n/**\n * Type of all the basic block type\n */\nexport type BlockTypes = ParagraphBlock | HeaderBlock | ImageBlock | ListBlock | Block;\n\n    \n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/HeaderBlock.html":{"url":"interfaces/HeaderBlock.html","title":"interface - HeaderBlock","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  HeaderBlock\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            libs/ngx-editorjs/ngx-editorjs/src/lib/types/blocks.ts\n        \n\n            \n                Description\n            \n            \n                Interface for a header block\n\n            \n\n            \n                Extends\n            \n            \n                        Block\n            \n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        type\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        type\n                                    \n                                \n                                \n                                    \n                                        type:     \n\n                                    \n                                \n\n\n\n\n\n\n\n                            \n                                \n                                    The EditorJS block type\n\n                                \n                            \n                        \n                    \n            \n    \n\n\n    \n        export interface Block {\n  /**\n   * The EditorJS block type\n   */\n  type: string;\n\n  /**\n   * The data interface for the block type\n   */\n  data: T;\n\n  /**\n   * Additional properties on the type\n   */\n  [key: string]: any;\n}\n\n/**\n * Available list styles, supports `ordered` and `unordered`.\n * A custom string can also be added\n */\nexport type ListStyle = 'ordered' | 'unordered' | string;\n\n/**\n * Default data type for a list block\n */\nexport interface List {\n  /**\n   * The list style\n   */\n  style: ListStyle;\n  /**\n   * List items of type T\n   */\n  items: T[];\n}\n\n/**\n * The default list block is provided by the EditorJS list plugin\n */\nexport interface ListBlock extends Block> {\n  /**\n   * The EditorJS block type\n   */\n  type: 'list';\n}\n\n/**\n * Default data type for a paragraph block\n */\ninterface Paragraph {\n  /**\n   * The paragraph text\n   */\n  text: string;\n}\n\n/**\n * Interface for a paragraph block\n */\nexport interface ParagraphBlock extends Block {\n  /**\n   * The EditorJS block type\n   */\n  type: 'paragraph';\n}\n\n/**\n * Default data type for a header block\n */\ninterface Header {\n  /**\n   * The header text\n   */\n  text: string;\n  /**\n   * The header level from 1-6\n   */\n  level: number;\n}\n\n/**\n * Interface for a header block\n */\nexport interface HeaderBlock extends Block {\n  /**\n   * The EditorJS block type\n   */\n  type: 'header';\n}\n\n/**\n * Default data type for a header block\n */\nexport interface Image {\n  /**\n   * The image URL\n   */\n  url: string;\n  /**\n   * Optional image caption\n   */\n  caption?: string;\n  /**\n   * Optional border property\n   */\n  withBorder?: boolean;\n\n  /**\n   * Optional background property\n   */\n  withBackground?: boolean;\n\n  /**\n   * Optional stretch property\n   */\n  stretched?: boolean;\n}\n\n/**\n * Interface for a image block\n */\nexport interface ImageBlock extends Block {\n  /**\n   * The EditorJS block type\n   */\n  type: 'image';\n}\n\n/**\n * Type of all the basic block type\n */\nexport type BlockTypes = ParagraphBlock | HeaderBlock | ImageBlock | ListBlock | Block;\n\n    \n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/Image.html":{"url":"interfaces/Image.html","title":"interface - Image","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  Image\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            libs/ngx-editorjs/ngx-editorjs/src/lib/types/blocks.ts\n        \n\n            \n                Description\n            \n            \n                Default data type for a header block\n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                            Optional\n                                        caption\n                                \n                                \n                                            Optional\n                                        stretched\n                                \n                                \n                                        url\n                                \n                                \n                                            Optional\n                                        withBackground\n                                \n                                \n                                            Optional\n                                        withBorder\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        caption\n                                    \n                                \n                                \n                                    \n                                        caption:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    Optional image caption\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        stretched\n                                    \n                                \n                                \n                                    \n                                        stretched:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    Optional stretch property\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        url\n                                    \n                                \n                                \n                                    \n                                        url:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    The image URL\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        withBackground\n                                    \n                                \n                                \n                                    \n                                        withBackground:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    Optional background property\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        withBorder\n                                    \n                                \n                                \n                                    \n                                        withBorder:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    Optional border property\n\n                                \n                            \n                        \n                    \n            \n    \n\n\n    \n        export interface Block {\n  /**\n   * The EditorJS block type\n   */\n  type: string;\n\n  /**\n   * The data interface for the block type\n   */\n  data: T;\n\n  /**\n   * Additional properties on the type\n   */\n  [key: string]: any;\n}\n\n/**\n * Available list styles, supports `ordered` and `unordered`.\n * A custom string can also be added\n */\nexport type ListStyle = 'ordered' | 'unordered' | string;\n\n/**\n * Default data type for a list block\n */\nexport interface List {\n  /**\n   * The list style\n   */\n  style: ListStyle;\n  /**\n   * List items of type T\n   */\n  items: T[];\n}\n\n/**\n * The default list block is provided by the EditorJS list plugin\n */\nexport interface ListBlock extends Block> {\n  /**\n   * The EditorJS block type\n   */\n  type: 'list';\n}\n\n/**\n * Default data type for a paragraph block\n */\ninterface Paragraph {\n  /**\n   * The paragraph text\n   */\n  text: string;\n}\n\n/**\n * Interface for a paragraph block\n */\nexport interface ParagraphBlock extends Block {\n  /**\n   * The EditorJS block type\n   */\n  type: 'paragraph';\n}\n\n/**\n * Default data type for a header block\n */\ninterface Header {\n  /**\n   * The header text\n   */\n  text: string;\n  /**\n   * The header level from 1-6\n   */\n  level: number;\n}\n\n/**\n * Interface for a header block\n */\nexport interface HeaderBlock extends Block {\n  /**\n   * The EditorJS block type\n   */\n  type: 'header';\n}\n\n/**\n * Default data type for a header block\n */\nexport interface Image {\n  /**\n   * The image URL\n   */\n  url: string;\n  /**\n   * Optional image caption\n   */\n  caption?: string;\n  /**\n   * Optional border property\n   */\n  withBorder?: boolean;\n\n  /**\n   * Optional background property\n   */\n  withBackground?: boolean;\n\n  /**\n   * Optional stretch property\n   */\n  stretched?: boolean;\n}\n\n/**\n * Interface for a image block\n */\nexport interface ImageBlock extends Block {\n  /**\n   * The EditorJS block type\n   */\n  type: 'image';\n}\n\n/**\n * Type of all the basic block type\n */\nexport type BlockTypes = ParagraphBlock | HeaderBlock | ImageBlock | ListBlock | Block;\n\n    \n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/ImageBlock.html":{"url":"interfaces/ImageBlock.html","title":"interface - ImageBlock","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  ImageBlock\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            libs/ngx-editorjs/ngx-editorjs/src/lib/types/blocks.ts\n        \n\n            \n                Description\n            \n            \n                Interface for a image block\n\n            \n\n            \n                Extends\n            \n            \n                        Block\n            \n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        type\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        type\n                                    \n                                \n                                \n                                    \n                                        type:     \n\n                                    \n                                \n\n\n\n\n\n\n\n                            \n                                \n                                    The EditorJS block type\n\n                                \n                            \n                        \n                    \n            \n    \n\n\n    \n        export interface Block {\n  /**\n   * The EditorJS block type\n   */\n  type: string;\n\n  /**\n   * The data interface for the block type\n   */\n  data: T;\n\n  /**\n   * Additional properties on the type\n   */\n  [key: string]: any;\n}\n\n/**\n * Available list styles, supports `ordered` and `unordered`.\n * A custom string can also be added\n */\nexport type ListStyle = 'ordered' | 'unordered' | string;\n\n/**\n * Default data type for a list block\n */\nexport interface List {\n  /**\n   * The list style\n   */\n  style: ListStyle;\n  /**\n   * List items of type T\n   */\n  items: T[];\n}\n\n/**\n * The default list block is provided by the EditorJS list plugin\n */\nexport interface ListBlock extends Block> {\n  /**\n   * The EditorJS block type\n   */\n  type: 'list';\n}\n\n/**\n * Default data type for a paragraph block\n */\ninterface Paragraph {\n  /**\n   * The paragraph text\n   */\n  text: string;\n}\n\n/**\n * Interface for a paragraph block\n */\nexport interface ParagraphBlock extends Block {\n  /**\n   * The EditorJS block type\n   */\n  type: 'paragraph';\n}\n\n/**\n * Default data type for a header block\n */\ninterface Header {\n  /**\n   * The header text\n   */\n  text: string;\n  /**\n   * The header level from 1-6\n   */\n  level: number;\n}\n\n/**\n * Interface for a header block\n */\nexport interface HeaderBlock extends Block {\n  /**\n   * The EditorJS block type\n   */\n  type: 'header';\n}\n\n/**\n * Default data type for a header block\n */\nexport interface Image {\n  /**\n   * The image URL\n   */\n  url: string;\n  /**\n   * Optional image caption\n   */\n  caption?: string;\n  /**\n   * Optional border property\n   */\n  withBorder?: boolean;\n\n  /**\n   * Optional background property\n   */\n  withBackground?: boolean;\n\n  /**\n   * Optional stretch property\n   */\n  stretched?: boolean;\n}\n\n/**\n * Interface for a image block\n */\nexport interface ImageBlock extends Block {\n  /**\n   * The EditorJS block type\n   */\n  type: 'image';\n}\n\n/**\n * Type of all the basic block type\n */\nexport type BlockTypes = ParagraphBlock | HeaderBlock | ImageBlock | ListBlock | Block;\n\n    \n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/InjectorApiCallOptions.html":{"url":"interfaces/InjectorApiCallOptions.html","title":"interface - InjectorApiCallOptions","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  InjectorApiCallOptions\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            libs/ngx-editorjs/ngx-editorjs/src/lib/types/injector.ts\n        \n\n            \n                Description\n            \n            \n                Options to pass when calling the EditorJS instance API\n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        holder\n                                \n                                \n                                        method\n                                \n                                \n                                            Optional\n                                        namespace\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        holder\n                                    \n                                \n                                \n                                    \n                                        holder:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Holder for the EditorJS instance\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        method\n                                    \n                                \n                                \n                                    \n                                        method:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    The method to call\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        namespace\n                                    \n                                \n                                \n                                    \n                                        namespace:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    The optional namespace for the API call\n\n                                \n                            \n                        \n                    \n            \n    \n\n\n    \n        import { InjectionToken } from '@angular/core';\nimport EditorJS, { EditorConfig, OutputData } from '@editorjs/editorjs';\nimport { Block } from './blocks';\n\n/**\n * Configuration for creating an EditorJS instance\n */\nexport interface EditorJSInstanceConfig {\n  /**\n   * The editor configuration, this is required with at least the `holder` property\n   */\n  editorConfig: EditorConfig;\n  /**\n   * The method to call when the editor makes a change\n   */\n  onChange?: (holder?: string) => void;\n\n  /**\n   * The method to call with an editor is ready\n   */\n  onReady?: (holder?: string) => void;\n}\n\n/**\n * Default values for each internal map\n */\nexport const MAP_DEFAULTS = [\n  ['lastChangeMap', { time: 0, blocks: [], version: EditorJS.version }],\n  ['isReadyMap', false],\n  ['hasSavedMap', false]\n];\n\n/**\n * Injection token for the EditorJS class\n */\nexport const EDITORJS_MODULE_IMPORT = new InjectionToken('EDITORJS_MODULE_IMPORT');\n\n/**\n * The EditorJS class injector\n */\nexport const EditorJSInstance = new InjectionToken('EditorJSInstance');\n\n/**\n * Options for a Injector method\n */\nexport interface InjectorMethodOption {\n  /**\n   * The holder for the option\n   */\n  holder: string;\n  /**\n   * Optional blocks\n   */\n  data?: OutputData;\n  /**\n   * Optional editor\n   */\n  editor?: EditorJS;\n  /**\n   * Don't call save\n   */\n  skipSave?: boolean;\n}\n\n/**\n * Options to pass when calling the EditorJS instance API\n */\nexport interface InjectorApiCallOptions {\n  /**\n   * Holder for the EditorJS instance\n   */\n  holder: string;\n\n  /**\n   * The method to call\n   */\n  method: string;\n  /**\n   * The optional namespace for the API call\n   */\n  namespace?: string;\n}\n\n/**\n * A response from the EditorJS api\n */\nexport interface InjectorApiCallResponse extends InjectorApiCallOptions {\n  result: T;\n}\n\n/**\n * Interface for the injected EditorJS class, returns the static\n * class of EditorJS with the version and that creates the instance and provides\n * the Typescript parse with type information\n */\nexport interface EditorJSClass extends Function {\n  new (...args: any[]): T;\n  /**\n   * EditorJS version\n   */\n  version: string;\n}\n\n    \n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/InjectorApiCallResponse.html":{"url":"interfaces/InjectorApiCallResponse.html","title":"interface - InjectorApiCallResponse","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  InjectorApiCallResponse\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            libs/ngx-editorjs/ngx-editorjs/src/lib/types/injector.ts\n        \n\n            \n                Description\n            \n            \n                A response from the EditorJS api\n\n            \n\n            \n                Extends\n            \n            \n                        InjectorApiCallOptions\n            \n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        result\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        result\n                                    \n                                \n                                \n                                    \n                                        result:     T\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     T\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { InjectionToken } from '@angular/core';\nimport EditorJS, { EditorConfig, OutputData } from '@editorjs/editorjs';\nimport { Block } from './blocks';\n\n/**\n * Configuration for creating an EditorJS instance\n */\nexport interface EditorJSInstanceConfig {\n  /**\n   * The editor configuration, this is required with at least the `holder` property\n   */\n  editorConfig: EditorConfig;\n  /**\n   * The method to call when the editor makes a change\n   */\n  onChange?: (holder?: string) => void;\n\n  /**\n   * The method to call with an editor is ready\n   */\n  onReady?: (holder?: string) => void;\n}\n\n/**\n * Default values for each internal map\n */\nexport const MAP_DEFAULTS = [\n  ['lastChangeMap', { time: 0, blocks: [], version: EditorJS.version }],\n  ['isReadyMap', false],\n  ['hasSavedMap', false]\n];\n\n/**\n * Injection token for the EditorJS class\n */\nexport const EDITORJS_MODULE_IMPORT = new InjectionToken('EDITORJS_MODULE_IMPORT');\n\n/**\n * The EditorJS class injector\n */\nexport const EditorJSInstance = new InjectionToken('EditorJSInstance');\n\n/**\n * Options for a Injector method\n */\nexport interface InjectorMethodOption {\n  /**\n   * The holder for the option\n   */\n  holder: string;\n  /**\n   * Optional blocks\n   */\n  data?: OutputData;\n  /**\n   * Optional editor\n   */\n  editor?: EditorJS;\n  /**\n   * Don't call save\n   */\n  skipSave?: boolean;\n}\n\n/**\n * Options to pass when calling the EditorJS instance API\n */\nexport interface InjectorApiCallOptions {\n  /**\n   * Holder for the EditorJS instance\n   */\n  holder: string;\n\n  /**\n   * The method to call\n   */\n  method: string;\n  /**\n   * The optional namespace for the API call\n   */\n  namespace?: string;\n}\n\n/**\n * A response from the EditorJS api\n */\nexport interface InjectorApiCallResponse extends InjectorApiCallOptions {\n  result: T;\n}\n\n/**\n * Interface for the injected EditorJS class, returns the static\n * class of EditorJS with the version and that creates the instance and provides\n * the Typescript parse with type information\n */\nexport interface EditorJSClass extends Function {\n  new (...args: any[]): T;\n  /**\n   * EditorJS version\n   */\n  version: string;\n}\n\n    \n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/InjectorMethodOption.html":{"url":"interfaces/InjectorMethodOption.html","title":"interface - InjectorMethodOption","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  InjectorMethodOption\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            libs/ngx-editorjs/ngx-editorjs/src/lib/types/injector.ts\n        \n\n            \n                Description\n            \n            \n                Options for a Injector method\n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                            Optional\n                                        data\n                                \n                                \n                                            Optional\n                                        editor\n                                \n                                \n                                        holder\n                                \n                                \n                                            Optional\n                                        skipSave\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        data\n                                    \n                                \n                                \n                                    \n                                        data:     OutputData\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     OutputData\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    Optional blocks\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        editor\n                                    \n                                \n                                \n                                    \n                                        editor:     EditorJS\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     EditorJS\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    Optional editor\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        holder\n                                    \n                                \n                                \n                                    \n                                        holder:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    The holder for the option\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        skipSave\n                                    \n                                \n                                \n                                    \n                                        skipSave:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    Don't call save\n\n                                \n                            \n                        \n                    \n            \n    \n\n\n    \n        import { InjectionToken } from '@angular/core';\nimport EditorJS, { EditorConfig, OutputData } from '@editorjs/editorjs';\nimport { Block } from './blocks';\n\n/**\n * Configuration for creating an EditorJS instance\n */\nexport interface EditorJSInstanceConfig {\n  /**\n   * The editor configuration, this is required with at least the `holder` property\n   */\n  editorConfig: EditorConfig;\n  /**\n   * The method to call when the editor makes a change\n   */\n  onChange?: (holder?: string) => void;\n\n  /**\n   * The method to call with an editor is ready\n   */\n  onReady?: (holder?: string) => void;\n}\n\n/**\n * Default values for each internal map\n */\nexport const MAP_DEFAULTS = [\n  ['lastChangeMap', { time: 0, blocks: [], version: EditorJS.version }],\n  ['isReadyMap', false],\n  ['hasSavedMap', false]\n];\n\n/**\n * Injection token for the EditorJS class\n */\nexport const EDITORJS_MODULE_IMPORT = new InjectionToken('EDITORJS_MODULE_IMPORT');\n\n/**\n * The EditorJS class injector\n */\nexport const EditorJSInstance = new InjectionToken('EditorJSInstance');\n\n/**\n * Options for a Injector method\n */\nexport interface InjectorMethodOption {\n  /**\n   * The holder for the option\n   */\n  holder: string;\n  /**\n   * Optional blocks\n   */\n  data?: OutputData;\n  /**\n   * Optional editor\n   */\n  editor?: EditorJS;\n  /**\n   * Don't call save\n   */\n  skipSave?: boolean;\n}\n\n/**\n * Options to pass when calling the EditorJS instance API\n */\nexport interface InjectorApiCallOptions {\n  /**\n   * Holder for the EditorJS instance\n   */\n  holder: string;\n\n  /**\n   * The method to call\n   */\n  method: string;\n  /**\n   * The optional namespace for the API call\n   */\n  namespace?: string;\n}\n\n/**\n * A response from the EditorJS api\n */\nexport interface InjectorApiCallResponse extends InjectorApiCallOptions {\n  result: T;\n}\n\n/**\n * Interface for the injected EditorJS class, returns the static\n * class of EditorJS with the version and that creates the instance and provides\n * the Typescript parse with type information\n */\nexport interface EditorJSClass extends Function {\n  new (...args: any[]): T;\n  /**\n   * EditorJS version\n   */\n  version: string;\n}\n\n    \n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/List.html":{"url":"interfaces/List.html","title":"interface - List","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  List\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            libs/ngx-editorjs/ngx-editorjs/src/lib/types/blocks.ts\n        \n\n            \n                Description\n            \n            \n                Default data type for a list block\n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        items\n                                \n                                \n                                        style\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        items\n                                    \n                                \n                                \n                                    \n                                        items:     T[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     T[]\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    List items of type T\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        style\n                                    \n                                \n                                \n                                    \n                                        style:         ListStyle\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         ListStyle\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    The list style\n\n                                \n                            \n                        \n                    \n            \n    \n\n\n    \n        export interface Block {\n  /**\n   * The EditorJS block type\n   */\n  type: string;\n\n  /**\n   * The data interface for the block type\n   */\n  data: T;\n\n  /**\n   * Additional properties on the type\n   */\n  [key: string]: any;\n}\n\n/**\n * Available list styles, supports `ordered` and `unordered`.\n * A custom string can also be added\n */\nexport type ListStyle = 'ordered' | 'unordered' | string;\n\n/**\n * Default data type for a list block\n */\nexport interface List {\n  /**\n   * The list style\n   */\n  style: ListStyle;\n  /**\n   * List items of type T\n   */\n  items: T[];\n}\n\n/**\n * The default list block is provided by the EditorJS list plugin\n */\nexport interface ListBlock extends Block> {\n  /**\n   * The EditorJS block type\n   */\n  type: 'list';\n}\n\n/**\n * Default data type for a paragraph block\n */\ninterface Paragraph {\n  /**\n   * The paragraph text\n   */\n  text: string;\n}\n\n/**\n * Interface for a paragraph block\n */\nexport interface ParagraphBlock extends Block {\n  /**\n   * The EditorJS block type\n   */\n  type: 'paragraph';\n}\n\n/**\n * Default data type for a header block\n */\ninterface Header {\n  /**\n   * The header text\n   */\n  text: string;\n  /**\n   * The header level from 1-6\n   */\n  level: number;\n}\n\n/**\n * Interface for a header block\n */\nexport interface HeaderBlock extends Block {\n  /**\n   * The EditorJS block type\n   */\n  type: 'header';\n}\n\n/**\n * Default data type for a header block\n */\nexport interface Image {\n  /**\n   * The image URL\n   */\n  url: string;\n  /**\n   * Optional image caption\n   */\n  caption?: string;\n  /**\n   * Optional border property\n   */\n  withBorder?: boolean;\n\n  /**\n   * Optional background property\n   */\n  withBackground?: boolean;\n\n  /**\n   * Optional stretch property\n   */\n  stretched?: boolean;\n}\n\n/**\n * Interface for a image block\n */\nexport interface ImageBlock extends Block {\n  /**\n   * The EditorJS block type\n   */\n  type: 'image';\n}\n\n/**\n * Type of all the basic block type\n */\nexport type BlockTypes = ParagraphBlock | HeaderBlock | ImageBlock | ListBlock | Block;\n\n    \n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/ListBlock.html":{"url":"interfaces/ListBlock.html","title":"interface - ListBlock","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  ListBlock\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            libs/ngx-editorjs/ngx-editorjs/src/lib/types/blocks.ts\n        \n\n            \n                Description\n            \n            \n                The default list block is provided by the EditorJS list plugin\n\n            \n\n            \n                Extends\n            \n            \n                        Block\n            \n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        type\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        type\n                                    \n                                \n                                \n                                    \n                                        type:     \n\n                                    \n                                \n\n\n\n\n\n\n\n                            \n                                \n                                    The EditorJS block type\n\n                                \n                            \n                        \n                    \n            \n    \n\n\n    \n        export interface Block {\n  /**\n   * The EditorJS block type\n   */\n  type: string;\n\n  /**\n   * The data interface for the block type\n   */\n  data: T;\n\n  /**\n   * Additional properties on the type\n   */\n  [key: string]: any;\n}\n\n/**\n * Available list styles, supports `ordered` and `unordered`.\n * A custom string can also be added\n */\nexport type ListStyle = 'ordered' | 'unordered' | string;\n\n/**\n * Default data type for a list block\n */\nexport interface List {\n  /**\n   * The list style\n   */\n  style: ListStyle;\n  /**\n   * List items of type T\n   */\n  items: T[];\n}\n\n/**\n * The default list block is provided by the EditorJS list plugin\n */\nexport interface ListBlock extends Block> {\n  /**\n   * The EditorJS block type\n   */\n  type: 'list';\n}\n\n/**\n * Default data type for a paragraph block\n */\ninterface Paragraph {\n  /**\n   * The paragraph text\n   */\n  text: string;\n}\n\n/**\n * Interface for a paragraph block\n */\nexport interface ParagraphBlock extends Block {\n  /**\n   * The EditorJS block type\n   */\n  type: 'paragraph';\n}\n\n/**\n * Default data type for a header block\n */\ninterface Header {\n  /**\n   * The header text\n   */\n  text: string;\n  /**\n   * The header level from 1-6\n   */\n  level: number;\n}\n\n/**\n * Interface for a header block\n */\nexport interface HeaderBlock extends Block {\n  /**\n   * The EditorJS block type\n   */\n  type: 'header';\n}\n\n/**\n * Default data type for a header block\n */\nexport interface Image {\n  /**\n   * The image URL\n   */\n  url: string;\n  /**\n   * Optional image caption\n   */\n  caption?: string;\n  /**\n   * Optional border property\n   */\n  withBorder?: boolean;\n\n  /**\n   * Optional background property\n   */\n  withBackground?: boolean;\n\n  /**\n   * Optional stretch property\n   */\n  stretched?: boolean;\n}\n\n/**\n * Interface for a image block\n */\nexport interface ImageBlock extends Block {\n  /**\n   * The EditorJS block type\n   */\n  type: 'image';\n}\n\n/**\n * Type of all the basic block type\n */\nexport type BlockTypes = ParagraphBlock | HeaderBlock | ImageBlock | ListBlock | Block;\n\n    \n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/MockEditorJS.html":{"url":"classes/MockEditorJS.html","title":"class - MockEditorJS","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  MockEditorJS\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            libs/ngx-editorjs/ngx-editorjs/src/testing/shared.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                blocks\n                            \n                            \n                                destroy\n                            \n                            \n                                isReady\n                            \n                            \n                                saver\n                            \n                            \n                                version\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(config: NgxEditorJSModuleConfig)\n                    \n                \n                        \n                            \n                                Defined in libs/ngx-editorjs/ngx-editorjs/src/testing/shared.ts:16\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        config\n                                                  \n                                                        \n                                                                        NgxEditorJSModuleConfig\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            blocks\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         any\n\n                        \n                    \n                        \n                            \n                                    Defined in libs/ngx-editorjs/ngx-editorjs/src/testing/shared.ts:11\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            destroy\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         function\n\n                        \n                    \n                        \n                            \n                                    Defined in libs/ngx-editorjs/ngx-editorjs/src/testing/shared.ts:14\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            isReady\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     Promise\n\n                        \n                    \n                        \n                            \n                                    Defined in libs/ngx-editorjs/ngx-editorjs/src/testing/shared.ts:16\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            saver\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         any\n\n                        \n                    \n                        \n                            \n                                    Defined in libs/ngx-editorjs/ngx-editorjs/src/testing/shared.ts:12\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            version\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in libs/ngx-editorjs/ngx-editorjs/src/testing/shared.ts:13\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { NgxEditorJSModuleConfig } from '../lib/types/config';\n\nexport class MockPlugin {\n  constructor() {}\n  render() {\n    return document.createElement('div');\n  }\n}\n\nexport class MockEditorJS {\n  blocks: any;\n  saver: any;\n  version: string;\n  destroy: () => void;\n\n  isReady: Promise;\n\n  constructor(private config: NgxEditorJSModuleConfig) {\n    this.version = 'test';\n\n    this.isReady = Promise.resolve();\n\n    this.destroy = () => {};\n\n    this.blocks = {\n      clear: () => {},\n      render: () => {}\n    };\n\n    this.saver = {\n      save: (): Promise => {\n        return Promise.resolve({\n          time: Date.now(),\n          version: 'test',\n          blocks: []\n        });\n      }\n    };\n    (config as any).onReady();\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/MockNgZone.html":{"url":"injectables/MockNgZone.html","title":"injectable - MockNgZone","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  MockNgZone\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            libs/ngx-editorjs/ngx-editorjs/src/testing/ng-zone-mock.ts\n        \n\n            \n                Description\n            \n            \n                A mock implementation of NgZone.\n\n            \n\n            \n                Extends\n            \n            \n                        NgZone\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                onStable\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                run\n                            \n                            \n                                runOutsideAngular\n                            \n                            \n                                simulateZoneExit\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in libs/ngx-editorjs/ngx-editorjs/src/testing/ng-zone-mock.ts:16\n                            \n                        \n\n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            run\n                        \n                        \n                    \n                \n            \n            \n                \nrun(fn: Function)\n                \n            \n\n\n            \n                \n                    Defined in libs/ngx-editorjs/ngx-editorjs/src/testing/ng-zone-mock.ts:22\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    fn\n                                    \n                                                Function\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            runOutsideAngular\n                        \n                        \n                    \n                \n            \n            \n                \nrunOutsideAngular(fn: Function)\n                \n            \n\n\n            \n                \n                    Defined in libs/ngx-editorjs/ngx-editorjs/src/testing/ng-zone-mock.ts:26\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    fn\n                                    \n                                                Function\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            simulateZoneExit\n                        \n                        \n                    \n                \n            \n            \n                \nsimulateZoneExit()\n                \n            \n\n\n            \n                \n                    Defined in libs/ngx-editorjs/ngx-editorjs/src/testing/ng-zone-mock.ts:30\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            onStable\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     EventEmitter\n\n                        \n                    \n                    \n                        \n                            Default value : new EventEmitter(false)\n                        \n                    \n                        \n                            \n                                    Defined in libs/ngx-editorjs/ngx-editorjs/src/testing/ng-zone-mock.ts:16\n                            \n                        \n\n\n            \n        \n\n\n    \n\n\n    \n        import { EventEmitter, Injectable, NgZone } from '@angular/core';\n\n/**\n * A mock implementation of {@link NgZone}.\n */\n@Injectable()\nexport class MockNgZone extends NgZone {\n  onStable: EventEmitter = new EventEmitter(false);\n\n  constructor() {\n    super({ enableLongStackTrace: false });\n  }\n\n  run(fn: Function): any {\n    return fn();\n  }\n\n  runOutsideAngular(fn: Function): any {\n    return fn();\n  }\n\n  simulateZoneExit(): void {\n    this.onStable.emit(null);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/MockPlugin.html":{"url":"classes/MockPlugin.html","title":"class - MockPlugin","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  MockPlugin\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            libs/ngx-editorjs/ngx-editorjs/src/testing/shared.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                render\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in libs/ngx-editorjs/ngx-editorjs/src/testing/shared.ts:3\n                            \n                        \n\n            \n        \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            render\n                        \n                        \n                    \n                \n            \n            \n                \nrender()\n                \n            \n\n\n            \n                \n                    Defined in libs/ngx-editorjs/ngx-editorjs/src/testing/shared.ts:5\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         any\n\n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { NgxEditorJSModuleConfig } from '../lib/types/config';\n\nexport class MockPlugin {\n  constructor() {}\n  render() {\n    return document.createElement('div');\n  }\n}\n\nexport class MockEditorJS {\n  blocks: any;\n  saver: any;\n  version: string;\n  destroy: () => void;\n\n  isReady: Promise;\n\n  constructor(private config: NgxEditorJSModuleConfig) {\n    this.version = 'test';\n\n    this.isReady = Promise.resolve();\n\n    this.destroy = () => {};\n\n    this.blocks = {\n      clear: () => {},\n      render: () => {}\n    };\n\n    this.saver = {\n      save: (): Promise => {\n        return Promise.resolve({\n          time: Date.now(),\n          version: 'test',\n          blocks: []\n        });\n      }\n    };\n    (config as any).onReady();\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/NgxEditorJSConfig.html":{"url":"interfaces/NgxEditorJSConfig.html","title":"interface - NgxEditorJSConfig","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  NgxEditorJSConfig\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            libs/ngx-editorjs/ngx-editorjs/src/lib/types/config.ts\n        \n\n            \n                Description\n            \n            \n                Configuration for the EditorJS instance\n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                            Optional\n                                        autofocus\n                                \n                                \n                                            Optional\n                                        blockPlaceholder\n                                \n                                \n                                            Optional\n                                        data\n                                \n                                \n                                            Optional\n                                        hideToolbar\n                                \n                                \n                                            Optional\n                                        holder\n                                \n                                \n                                            Optional\n                                        initialBlock\n                                \n                                \n                                            Optional\n                                        minHeight\n                                \n                                \n                                            Optional\n                                        sanitizer\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        autofocus\n                                    \n                                \n                                \n                                    \n                                        autofocus:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    If the EditorJS is autofocused on creation (default: false)\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        blockPlaceholder\n                                    \n                                \n                                \n                                    \n                                        blockPlaceholder:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    First Block placeholder\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        data\n                                    \n                                \n                                \n                                    \n                                        data:     OutputData\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     OutputData\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    Any initial output data to render\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        hideToolbar\n                                    \n                                \n                                \n                                    \n                                        hideToolbar:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    If true, toolbar won't be shown\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        holder\n                                    \n                                \n                                \n                                    \n                                        holder:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    ID of the element to hold the config\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        initialBlock\n                                    \n                                \n                                \n                                    \n                                        initialBlock:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    The name of the initial block (default \"paragraph\")\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        minHeight\n                                    \n                                \n                                \n                                    \n                                        minHeight:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    Height of Editor's bottom area that allows to set focus on the last Block\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        sanitizer\n                                    \n                                \n                                \n                                    \n                                        sanitizer:     SanitizerConfig\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     SanitizerConfig\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    Define default sanitizer configuration\n\n                                \n                            \n                        \n                    \n            \n    \n\n\n    \n        import { InjectionToken } from '@angular/core';\nimport EditorJS, { OutputData, SanitizerConfig, EditorConfig } from '@editorjs/editorjs';\n\n/**\n * Configuration for the EditorJS instance\n */\nexport interface NgxEditorJSConfig {\n  /**\n   * If the EditorJS is autofocused on creation (default: false)\n   */\n  autofocus?: boolean;\n\n  /**\n   * Any initial output data to render\n   */\n  data?: OutputData;\n\n  /**\n   * If true, toolbar won't be shown\n   */\n  hideToolbar?: boolean;\n\n  /**\n   * ID of the element to hold the config\n   */\n  holder?: string;\n\n  /**\n   * The name of the initial block (default \"paragraph\")\n   */\n  initialBlock?: string;\n\n  /**\n   * Height of Editor's bottom area that allows to set focus on the last Block\n   */\n  minHeight?: number;\n\n  /**\n   * First Block placeholder\n   */\n  blockPlaceholder?: string;\n\n  /**\n   * Define default sanitizer configuration\n   */\n  sanitizer?: SanitizerConfig;\n}\n\n/**\n * The configuration option that can be passed to the `NgxEditorJSModule.forRoot` method\n */\nexport interface NgxEditorJSModuleConfig {\n  /**\n   * Configuration options for EditorJS\n   */\n  editorjs?: EditorConfig;\n}\n\n/**\n * Injection token provied for `NgxEditorJSConfig`\n */\nexport const NGX_EDITORJS_CONFIG = new InjectionToken('NGX_EDITORJS_CONFIG');\n\n/**\n * Internal token for injecting the `NgxEditorJSConfig` into the config factory\n */\nexport const FOR_ROOT_OPTIONS_TOKEN = new InjectionToken('FOR_ROOT_OPTIONS_TOKEN');\n\n/**\n * Get the EditorJS instance injected into the app\n */\nexport const EDITIOR_JS_INSTANCE = new InjectionToken('EDITIOR_JS_INSTANCE');\n\n    \n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/NgxEditorJSDemoHomeComponent.html":{"url":"components/NgxEditorJSDemoHomeComponent.html","title":"component - NgxEditorJSDemoHomeComponent","body":"\n                   \n\n\n\n\n\n  Components\n  NgxEditorJSDemoHomeComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    libs/ngx-editorjs/ngx-editorjs-demo/src/lib/containers/home-container/home-container.component.ts\n\n\n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                ngx-editorjs-demo-home\n            \n\n            \n                styleUrls\n                home-container.component.scss\n            \n\n\n\n            \n                templateUrl\n                home-container.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        import { Component } from '@angular/core';\n\n@Component({\n  selector: 'ngx-editorjs-demo-home',\n  templateUrl: 'home-container.component.html',\n  styleUrls: ['home-container.component.scss']\n})\nexport class NgxEditorJSDemoHomeComponent {}\n\n    \n\n    \n        \n  \n    \n      @tinynodes/ngx-editor Demo\n      A collection of demos for the @tinynodes/ngx-editor module with example code and links to API docs.\n    \n    \n      \n        The demos in this section are for the\n        @tinynodes/ngx-editorjs module.\n      \n      \n        Each demo provides a way to use the component in an application or form in Angular. It can be used as a basic component, used with\n        Angular forms or Material forms.\n      \n      Each demo shows the components providing a EditorJS instance.\n    \n    \n      Angular Component Demo\n      Angular Material Form Demo\n    \n  \n\n\n    \n\n    \n                \n                    home-container.component.scss\n                \n                \n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '            @tinynodes/ngx-editor Demo      A collection of demos for the @tinynodes/ngx-editor module with example code and links to API docs.                      The demos in this section are for the        @tinynodes/ngx-editorjs module.                    Each demo provides a way to use the component in an application or form in Angular. It can be used as a basic component, used with        Angular forms or Material forms.            Each demo shows the components providing a EditorJS instance.              Angular Component Demo      Angular Material Form Demo      '\n    var COMPONENTS = [{'name': 'NgxEditorJSComponent', 'selector': 'ngx-editorjs'},{'name': 'NgxEditorJSDemoHomeComponent', 'selector': 'ngx-editorjs-demo-home'},{'name': 'NgxEditorJSMatFieldComponent', 'selector': 'ngx-editorjs-mat-field'},{'name': 'NgxTinynodesMaterialFormFieldDemoComponent', 'selector': 'ngx-tinynodes-mat-form-field-demo'},{'name': 'NgxTinynodesMatJsonOutputComponent', 'selector': 'ngx-tinynodes-mat-json-output'},{'name': 'NgxTinynodesMatTagInputComponent', 'selector': 'ngx-tinynodes-mat-tag-input'},{'name': 'PageContainerComponent', 'selector': 'ngx-page-container'}];\n    var DIRECTIVES = [{'name': 'NgxEditorJSDirective', 'selector': '[ngxEditorJS]'}];\n    var ACTUAL_COMPONENT = {'name': 'NgxEditorJSDemoHomeComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/NgxEditorJSDemoMaterialModule.html":{"url":"modules/NgxEditorJSDemoMaterialModule.html","title":"module - NgxEditorJSDemoMaterialModule","body":"\n                   \n\n\n\n\n    Modules\n    NgxEditorJSDemoMaterialModule\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            libs/ngx-editorjs/ngx-editorjs-demo/src/lib/ngx-editorjs-demo.material.module.ts\n        \n\n\n\n\n        \n            \n            \n        \n\n\n    \n\n\n    \n        import { NgModule } from '@angular/core';\nimport { MatBadgeModule } from '@angular/material/badge';\nimport { MatButtonModule } from '@angular/material/button';\nimport { MatCardModule } from '@angular/material/card';\nimport { MatChipsModule } from '@angular/material/chips';\nimport { MatExpansionModule } from '@angular/material/expansion';\nimport { MatFormFieldModule } from '@angular/material/form-field';\nimport { MatGridListModule } from '@angular/material/grid-list';\nimport { MatIconModule } from '@angular/material/icon';\nimport { MatInputModule } from '@angular/material/input';\nimport { MatListModule } from '@angular/material/list';\n\n@NgModule({\n  imports: [\n    MatGridListModule,\n    MatExpansionModule,\n    MatInputModule,\n    MatFormFieldModule,\n    MatChipsModule,\n    MatBadgeModule,\n    MatIconModule,\n    MatListModule,\n    MatCardModule,\n    MatButtonModule\n  ],\n  exports: [\n    MatGridListModule,\n    MatExpansionModule,\n    MatInputModule,\n    MatFormFieldModule,\n    MatChipsModule,\n    MatBadgeModule,\n    MatIconModule,\n    MatListModule,\n    MatCardModule,\n    MatButtonModule\n  ]\n})\nexport class NgxEditorJSDemoMaterialModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"directives/NgxEditorJSDirective.html":{"url":"directives/NgxEditorJSDirective.html","title":"directive - NgxEditorJSDirective","body":"\n                   \n\n\n\n\n\n\n\n  Directives\n  NgxEditorJSDirective\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            libs/ngx-editorjs/ngx-editorjs/src/lib/directives/ngx-editorjs.directive.ts\n        \n\n            \n                Description\n            \n            \n                The main directive of ngx-editorjs provides a way to attach\nan EditorJS instance to any element and control it via\nAngular services and components\nTo use attach to any element with an id property\n\n            \n\n            \n                Implements\n            \n            \n                            OnDestroy\n                            OnChanges\n                            AfterContentInit\n            \n\n            \n                Example\n            \n            \n                        \n                            \n                        \n            \n\n        \n            Metadata\n            \n                \n\n                    \n                        Selector\n                        [ngxEditorJS]\n                    \n\n                \n            \n        \n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                    Async\n                                createEditor\n                            \n                            \n                                    Async\n                                ngAfterContentInit\n                            \n                            \n                                    Async\n                                ngOnChanges\n                            \n                            \n                                ngOnDestroy\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                autofocus\n                            \n                            \n                                autosave\n                            \n                            \n                                blockPlaceholder\n                            \n                            \n                                blocks\n                            \n                            \n                                excludeTools\n                            \n                            \n                                hideToolbar\n                            \n                            \n                                holder\n                            \n                            \n                                initialBlock\n                            \n                            \n                                minHeight\n                            \n                            \n                                sanitizer\n                            \n                        \n                    \n                \n\n                \n                    \n                        Outputs\n                    \n                \n                \n                    \n                        \n                            \n                                hasChanged\n                            \n                            \n                                hasSaved\n                            \n                            \n                                isFocused\n                            \n                            \n                                isReady\n                            \n                            \n                                isTouched\n                            \n                        \n                    \n                \n\n\n                \n                    \n                        HostListeners\n                    \n                \n                \n                    \n                        \n                            \n                                click\n                            \n                        \n                    \n                \n\n                    \n                        \n                            Accessors\n                        \n                    \n                    \n                        \n                            \n                                \n                                    editor\n                                \n                                \n                                    element\n                                \n                                \n                                    service\n                                \n                                \n                                    touched\n                                \n                            \n                        \n                    \n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(el: ElementRef, editorService: NgxEditorJSService, cd: ChangeDetectorRef)\n                    \n                \n                        \n                            \n                                Defined in libs/ngx-editorjs/ngx-editorjs/src/lib/directives/ngx-editorjs.directive.ts:152\n                            \n                        \n\n                \n                    \n                            Creates the directive instance\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        el\n                                                  \n                                                        \n                                                                        ElementRef\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                The element the directive is attached to\n\n                                                        \n                                                \n                                                \n                                                        editorService\n                                                  \n                                                        \n                                                                        NgxEditorJSService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                The editor service\n\n                                                        \n                                                \n                                                \n                                                        cd\n                                                  \n                                                        \n                                                                        ChangeDetectorRef\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    Inputs\n        \n            \n                \n                    \n                        \n                        autofocus\n                    \n                \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                        \n                            \n                                    Defined in libs/ngx-editorjs/ngx-editorjs/src/lib/directives/ngx-editorjs.directive.ts:53\n                            \n                        \n                \n                    \n                        Boolean, If set to true the EditorJS instance gets autofocus when initialized\n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        autosave\n                    \n                \n                \n                    \n                        Type :         number\n\n                    \n                \n                        \n                            \n                                    Defined in libs/ngx-editorjs/ngx-editorjs/src/lib/directives/ngx-editorjs.directive.ts:106\n                            \n                        \n                \n                    \n                        Number, Used with Angular Forms this sets an autosave timer active that calls the EditorJS save\nmethod. This patches the FormControl value with every block change and focus and blur, it also autosaves after\na set time\nSet to 0 to disable or pass a value in ms of the autosave time\n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        blockPlaceholder\n                    \n                \n                \n                    \n                        Type :         string\n\n                    \n                \n                        \n                            \n                                    Defined in libs/ngx-editorjs/ngx-editorjs/src/lib/directives/ngx-editorjs.directive.ts:84\n                            \n                        \n                \n                    \n                        String, The text to display as the placeholder text in the first block before content is added\n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        blocks\n                    \n                \n                \n                    \n                        Type :         Block[]\n\n                    \n                \n                        \n                            \n                                    Defined in libs/ngx-editorjs/ngx-editorjs/src/lib/directives/ngx-editorjs.directive.ts:112\n                            \n                        \n                \n                    \n                        Blocks, An initial set of block data to render inside the component\n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        excludeTools\n                    \n                \n                \n                    \n                        Type :     string[]\n\n                    \n                \n                \n                    \n                        Default value : []\n                    \n                \n                        \n                            \n                                    Defined in libs/ngx-editorjs/ngx-editorjs/src/lib/directives/ngx-editorjs.directive.ts:97\n                            \n                        \n                \n                    \n                        String Array, If empty all tools available via the plugin service will be added.  If a string\narray is set only the tools with the provided keys will be added\n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        hideToolbar\n                    \n                \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                        \n                            \n                                    Defined in libs/ngx-editorjs/ngx-editorjs/src/lib/directives/ngx-editorjs.directive.ts:59\n                            \n                        \n                \n                    \n                        Boolean, If set to true the toolbar will not show in the EditorJS instance\n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        holder\n                    \n                \n                \n                    \n                        Type :         string\n\n                    \n                \n                        \n                            \n                                    Defined in libs/ngx-editorjs/ngx-editorjs/src/lib/directives/ngx-editorjs.directive.ts:65\n                            \n                        \n                \n                    \n                        String, the ID property of the element that the EditorJS instance will be attached to\n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        initialBlock\n                    \n                \n                \n                    \n                        Type :         string\n\n                    \n                \n                        \n                            \n                                    Defined in libs/ngx-editorjs/ngx-editorjs/src/lib/directives/ngx-editorjs.directive.ts:72\n                            \n                        \n                \n                    \n                        String, The type of block to set as the initial block type. This needs to match a name in the UserPlugins object.\nThe default value is \"paragraph\"\n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        minHeight\n                    \n                \n                \n                    \n                        Type :         number\n\n                    \n                \n                        \n                            \n                                    Defined in libs/ngx-editorjs/ngx-editorjs/src/lib/directives/ngx-editorjs.directive.ts:78\n                            \n                        \n                \n                    \n                        Number, The minimum height of the EditorJS instance bottom after the last block\n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        sanitizer\n                    \n                \n                \n                    \n                        Type :     SanitizerConfig\n\n                    \n                \n                        \n                            \n                                    Defined in libs/ngx-editorjs/ngx-editorjs/src/lib/directives/ngx-editorjs.directive.ts:90\n                            \n                        \n                \n                    \n                        SanitizerConfig, The configuration for the HTML sanitizer\n\n                    \n                \n            \n        \n\n            \n    Outputs\n        \n            \n                \n                    \n                        \n                        hasChanged\n                    \n                \n                \n                    \n                        Type :         EventEmitter\n\n                    \n                \n                        \n                            \n                                    Defined in libs/ngx-editorjs/ngx-editorjs/src/lib/directives/ngx-editorjs.directive.ts:136\n                            \n                        \n                \n                    \n                        Emits if the EditorJS content has changed when save is called\n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        hasSaved\n                    \n                \n                \n                    \n                        Type :         EventEmitter\n\n                    \n                \n                        \n                            \n                                    Defined in libs/ngx-editorjs/ngx-editorjs/src/lib/directives/ngx-editorjs.directive.ts:118\n                            \n                        \n                \n                    \n                        Emits if the content from the EditorJS instance has been saved to the component value\n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        isFocused\n                    \n                \n                \n                    \n                        Type :         EventEmitter\n\n                    \n                \n                        \n                            \n                                    Defined in libs/ngx-editorjs/ngx-editorjs/src/lib/directives/ngx-editorjs.directive.ts:130\n                            \n                        \n                \n                    \n                        Emits if the component is focused\n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        isReady\n                    \n                \n                \n                    \n                        Type :         EventEmitter\n\n                    \n                \n                        \n                            \n                                    Defined in libs/ngx-editorjs/ngx-editorjs/src/lib/directives/ngx-editorjs.directive.ts:142\n                            \n                        \n                \n                    \n                        Emits if the EditorJS component is ready\n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        isTouched\n                    \n                \n                \n                    \n                        Type :         EventEmitter\n\n                    \n                \n                        \n                            \n                                    Defined in libs/ngx-editorjs/ngx-editorjs/src/lib/directives/ngx-editorjs.directive.ts:124\n                            \n                        \n                \n                    \n                        Emits if the component has been touched\n\n                    \n                \n            \n        \n\n\n            \n    HostListeners    \n        \n            \n                \n                    \n                    \n                        \n                            click\n                        \n                        \n                    \n                \n            \n            \n                \nclick()\n                \n            \n\n\n            \n                \n                    Defined in libs/ngx-editorjs/ngx-editorjs/src/lib/directives/ngx-editorjs.directive.ts:148\n                \n            \n\n\n            \n                \n                    Host click listener\n\n\n                \n            \n        \n    \n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            Async\n                            createEditor\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    createEditor(config?: EditorConfig, excludeTools: [])\n                \n            \n\n\n            \n                \n                    Defined in libs/ngx-editorjs/ngx-editorjs/src/lib/directives/ngx-editorjs.directive.ts:198\n                \n            \n\n\n            \n                \n                    Creates an EditorJS instance for this directive\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Default value\n                                    Description\n                                \n                            \n                            \n                                \n                                    config\n                                    \n                                            EditorConfig\n                                    \n\n                                    \n                                        Yes\n                                    \n\n                                    \n                                    \n\n                                    \n                                        Configuration for this instance\n\n                                    \n                                \n                                \n                                    excludeTools\n                                    \n                                            []\n                                    \n\n                                    \n                                        No\n                                    \n\n                                    \n                                        []\n                                    \n\n                                    \n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            ngAfterContentInit\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    ngAfterContentInit()\n                \n            \n\n\n            \n                \n                    Defined in libs/ngx-editorjs/ngx-editorjs/src/lib/directives/ngx-editorjs.directive.ts:251\n                \n            \n\n\n            \n                \n                    After content is created, we create the editor instance and set up listners\n\n\n                    \n                        Returns :         any\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            ngOnChanges\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    ngOnChanges(changes: SimpleChanges)\n                \n            \n\n\n            \n                \n                    Defined in libs/ngx-editorjs/ngx-editorjs/src/lib/directives/ngx-editorjs.directive.ts:215\n                \n            \n\n\n            \n                \n                    When ngOnChanges are called, there are two paths\nIf it's just blocks, then the service is updated with the blocks\nIf it's any other property it means we create a new editor, as this\nis a destructive process we also need to wait for an existing editor\nto be ready\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    changes\n                                    \n                                                SimpleChanges\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        Changes on the component\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngOnDestroy\n                        \n                        \n                    \n                \n            \n            \n                \nngOnDestroy()\n                \n            \n\n\n            \n                \n                    Defined in libs/ngx-editorjs/ngx-editorjs/src/lib/directives/ngx-editorjs.directive.ts:284\n                \n            \n\n\n            \n                \n                    Destroy the editor and subjects for this service\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n\n            \n    \n        Accessors\n    \n        \n            \n                \n                    \n                        \n                        editor\n                    \n                \n\n                \n                    \n                        geteditor()\n                    \n                \n                            \n                                \n                                    Defined in libs/ngx-editorjs/ngx-editorjs/src/lib/directives/ngx-editorjs.directive.ts:168\n                                \n                            \n                    \n                        \n                                Get the EditorJS instance for this directive\n\n\n                                \n                                    Returns :     Observable\n\n                                \n                        \n                    \n\n            \n        \n        \n            \n                \n                    \n                        \n                        element\n                    \n                \n\n                \n                    \n                        getelement()\n                    \n                \n                            \n                                \n                                    Defined in libs/ngx-editorjs/ngx-editorjs/src/lib/directives/ngx-editorjs.directive.ts:175\n                                \n                            \n                    \n                        \n                                Get the element for the directive\n\n\n                        \n                    \n\n            \n        \n        \n            \n                \n                    \n                        \n                        service\n                    \n                \n\n                \n                    \n                        getservice()\n                    \n                \n                            \n                                \n                                    Defined in libs/ngx-editorjs/ngx-editorjs/src/lib/directives/ngx-editorjs.directive.ts:182\n                                \n                            \n                    \n                        \n                                Get the NgxEditorJSService for this directive\n\n\n                                \n                                    Returns :         NgxEditorJSService\n\n                                \n                        \n                    \n\n            \n        \n        \n            \n                \n                    \n                        \n                        touched\n                    \n                \n\n                \n                    \n                        gettouched()\n                    \n                \n                            \n                                \n                                    Defined in libs/ngx-editorjs/ngx-editorjs/src/lib/directives/ngx-editorjs.directive.ts:189\n                                \n                            \n                    \n                        \n                                Get the touched state\n\n\n                        \n                    \n\n            \n        \n\n\n    \n\n\n    \n        import {\n  AfterContentInit,\n  ChangeDetectorRef,\n  Directive,\n  ElementRef,\n  EventEmitter,\n  HostListener,\n  Input,\n  OnChanges,\n  OnDestroy,\n  Output,\n  SimpleChanges\n} from '@angular/core';\nimport EditorJS, { EditorConfig, OutputData, SanitizerConfig } from '@editorjs/editorjs';\nimport { BehaviorSubject, Observable, Subject } from 'rxjs';\nimport { takeUntil } from 'rxjs/operators';\nimport { createEditorJSConfig } from '../config/editor-config';\nimport { NgxEditorJSService } from '../services/editorjs.service';\nimport { Block } from '../types/blocks';\n\n/**\n * The main directive of `ngx-editorjs` provides a way to attach\n * an EditorJS instance to any element and control it via\n * Angular services and components\n *\n * To use attach to any element with an `id` property\n *\n * @example\n * \n */\n@Directive({\n  selector: '[ngxEditorJS]'\n})\nexport class NgxEditorJSDirective implements OnDestroy, OnChanges, AfterContentInit {\n  /**\n   * On Destroyed subject\n   */\n  private readonly onDestroy$ = new Subject();\n  /**\n   * Form touched state\n   */\n  private touched$ = new BehaviorSubject(false);\n\n  /**\n   * The DOM element ID, it will use the Directive DOM element ID or falls back to the provided `holder` property\n   */\n  private id: string;\n\n  /**\n   * Boolean, If set to true the EditorJS instance gets autofocus when initialized\n   */\n  @Input()\n  public autofocus: boolean;\n\n  /**\n   * Boolean, If set to true the toolbar will not show in the EditorJS instance\n   */\n  @Input()\n  public hideToolbar: boolean;\n\n  /**\n   * String, the ID property of the element that the EditorJS instance will be attached to\n   */\n  @Input()\n  public holder: string;\n\n  /**\n   * String, The type of block to set as the initial block type. This needs to match a name in the `UserPlugins` object.\n   * The default value is \"paragraph\"\n   */\n  @Input()\n  public initialBlock?: string;\n\n  /**\n   * Number, The minimum height of the EditorJS instance bottom after the last block\n   */\n  @Input()\n  public minHeight: number;\n\n  /**\n   * String, The text to display as the placeholder text in the first block before content is added\n   */\n  @Input()\n  public blockPlaceholder: string;\n\n  /**\n   * SanitizerConfig, The configuration for the HTML sanitizer\n   */\n  @Input()\n  public sanitizer: SanitizerConfig;\n\n  /**\n   * String Array, If empty all tools available via the plugin service will be added.  If a string\n   * array is set only the tools with the provided keys will be added\n   */\n  @Input()\n  public excludeTools: string[] = [];\n\n  /**\n   * Number, Used with Angular Forms this sets an autosave timer active that calls the EditorJS save\n   * method. This patches the `FormControl` value with every block change and focus and blur, it also autosaves after\n   * a set time\n   * Set to 0 to disable or pass a value in `ms` of the autosave time\n   */\n  @Input()\n  public autosave: number;\n\n  /**\n   * Blocks, An initial set of block data to render inside the component\n   */\n  @Input()\n  public blocks: Block[];\n\n  /**\n   * Emits if the content from the EditorJS instance has been saved to the component value\n   */\n  @Output()\n  public hasSaved = new EventEmitter();\n\n  /**\n   * Emits if the component has been touched\n   */\n  @Output()\n  public isTouched = new EventEmitter();\n\n  /**\n   * Emits if the component is focused\n   */\n  @Output()\n  public isFocused = new EventEmitter();\n\n  /**\n   * Emits if the EditorJS content has changed when `save` is called\n   */\n  @Output()\n  public hasChanged = new EventEmitter();\n\n  /**\n   * Emits if the EditorJS component is ready\n   */\n  @Output()\n  public isReady = new EventEmitter();\n\n  /**\n   * Host click listener\n   */\n  @HostListener('click')\n  onclick() {\n    this.touched$.next(true);\n    this.isTouched.emit(true);\n    this.cd.markForCheck();\n  }\n\n  /**\n   * Creates the directive instance\n   * @param el The element the directive is attached to\n   * @param editorService The editor service\n   */\n  constructor(\n    protected readonly el: ElementRef,\n    protected readonly editorService: NgxEditorJSService,\n    protected readonly cd: ChangeDetectorRef\n  ) {}\n\n  /**\n   * Get the EditorJS instance for this directive\n   */\n  public get editor(): Observable {\n    return this.service.getEditor({ holder: this.id });\n  }\n\n  /**\n   * Get the element for the directive\n   */\n  public get element() {\n    return this.el.nativeElement;\n  }\n\n  /**\n   * Get the `NgxEditorJSService` for this directive\n   */\n  public get service(): NgxEditorJSService {\n    return this.editorService;\n  }\n\n  /**\n   * Get the touched state\n   */\n  public get touched() {\n    return this.touched$.asObservable();\n  }\n\n  /**\n   * Creates an EditorJS instance for this directive\n   * @param config Configuration for this instance\n   * @param excludeTools\n   */\n  public async createEditor(config?: EditorConfig, excludeTools = []): Promise {\n    await this.service.createInstance({\n      config,\n      excludeTools: this.excludeTools || excludeTools,\n      autoSave: this.autosave || 0\n    });\n    this.cd.markForCheck();\n  }\n\n  /**\n   * When ngOnChanges are called, there are two paths\n   * If it's just blocks, then the service is updated with the blocks\n   * If it's any other property it means we create a new editor, as this\n   * is a destructive process we also need to wait for an existing editor\n   * to be ready\n   * @param changes Changes on the component\n   */\n  async ngOnChanges(changes: SimpleChanges): Promise {\n    if (\n      changes.blocks &&\n      changes.blocks.previousValue !== null &&\n      !changes.blocks.firstChange &&\n      JSON.stringify(changes.blocks.previousValue) !== JSON.stringify(changes.blocks.currentValue)\n    ) {\n      this.service.update({ holder: this.holder }).subscribe();\n      this.cd.markForCheck();\n    } else {\n      const changesKeys = Object.keys(changes);\n      if (\n        this.id &&\n        // Ignore changes for values not related to EditorJS\n        [\n          'autofocus',\n          'holder',\n          'hideToolbar',\n          'initialBlock',\n          'minHeight',\n          'blockPlaceholder',\n          'sanitizer',\n          'includeTools'\n        ].find(key => {\n          return changesKeys.includes(key);\n        })\n      ) {\n        await this.createEditor(this.createConfig());\n        this.cd.markForCheck();\n      }\n    }\n  }\n\n  /**\n   * After content is created, we create the editor instance and set up listners\n   */\n  async ngAfterContentInit() {\n    this.id = this.el.nativeElement.id || this.holder;\n\n    if (!this.id) {\n      throw new Error('Error in NgxEditorJSDirective::ngAfterContentInit - Directive element has no ID');\n    }\n    await this.createEditor(this.createConfig());\n\n    this.service\n      .isReady({ holder: this.holder })\n      .pipe(takeUntil(this.onDestroy$))\n      .subscribe(isReady => {\n        this.isReady.emit(isReady);\n      });\n\n    this.service\n      .lastChange({ holder: this.holder })\n      .pipe(takeUntil(this.onDestroy$))\n      .subscribe(change => {\n        this.hasChanged.emit(change);\n      });\n\n    this.service\n      .hasSaved({ holder: this.holder })\n      .pipe(takeUntil(this.onDestroy$))\n      .subscribe(saved => {\n        this.hasSaved.next(saved);\n      });\n  }\n\n  /**\n   * Destroy the editor and subjects for this service\n   */\n  ngOnDestroy() {\n    this.onDestroy$.next(true);\n    this.onDestroy$.complete();\n    this.service.destroyInstance({ holder: this.id });\n  }\n\n  /**\n   * Create a configuration for EditorJS\n   */\n  private createConfig(): EditorConfig {\n    const config: EditorConfig = createEditorJSConfig({\n      holder: this.id,\n      autofocus: this.autofocus,\n      hideToolbar: this.hideToolbar,\n      initialBlock: this.initialBlock,\n      placeholder: this.blockPlaceholder,\n      minHeight: this.minHeight,\n      sanitizer: this.sanitizer\n    });\n    if (this.blocks && this.blocks.length > 0) {\n      config.data = {\n        time: Date.now(),\n        version: EditorJS.version,\n        blocks: this.blocks\n      };\n    }\n    return config;\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/NgxEditorJSModule.html":{"url":"modules/NgxEditorJSModule.html","title":"module - NgxEditorJSModule","body":"\n                   \n\n\n\n\n    Modules\n    NgxEditorJSModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_NgxEditorJSModule\n\n\n\ncluster_NgxEditorJSModule_declarations\n\n\n\ncluster_NgxEditorJSModule_exports\n\n\n\ncluster_NgxEditorJSModule_providers\n\n\n\n\nNgxEditorJSComponent\n\nNgxEditorJSComponent\n\n\n\nNgxEditorJSModule\n\nNgxEditorJSModule\n\nNgxEditorJSModule -->\n\nNgxEditorJSComponent->NgxEditorJSModule\n\n\n\n\n\nNgxEditorJSDirective\n\nNgxEditorJSDirective\n\nNgxEditorJSModule -->\n\nNgxEditorJSDirective->NgxEditorJSModule\n\n\n\n\n\nNgxEditorJSMatFieldComponent\n\nNgxEditorJSMatFieldComponent\n\nNgxEditorJSModule -->\n\nNgxEditorJSMatFieldComponent->NgxEditorJSModule\n\n\n\n\n\nNgxEditorJSComponent \n\nNgxEditorJSComponent \n\nNgxEditorJSComponent  -->\n\nNgxEditorJSModule->NgxEditorJSComponent \n\n\n\n\n\nNgxEditorJSDirective \n\nNgxEditorJSDirective \n\nNgxEditorJSDirective  -->\n\nNgxEditorJSModule->NgxEditorJSDirective \n\n\n\n\n\nNgxEditorJSMatFieldComponent \n\nNgxEditorJSMatFieldComponent \n\nNgxEditorJSMatFieldComponent  -->\n\nNgxEditorJSModule->NgxEditorJSMatFieldComponent \n\n\n\n\n\nNgxEditorJSService\n\nNgxEditorJSService\n\nNgxEditorJSModule -->\n\nNgxEditorJSService->NgxEditorJSModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            libs/ngx-editorjs/ngx-editorjs/src/lib/ngx-editorjs.module.ts\n        \n\n\n        \n            Description\n        \n        \n            The @tinynodes/ngx-editorjs module provides a collection of demos to allow\nany Angular app to use and control an EditorJS instance\nTo use import the module NgxEditorJSModule.forRoot() into the root of your application.\nThe forRoot method takes an optional NgxEditorJSModuleConfig config, this will provide a\ndefault instance.\n\n        \n\n\n        \n            \n                \n                    Declarations\n                    \n                        \n                            NgxEditorJSComponent\n                        \n                        \n                            NgxEditorJSDirective\n                        \n                        \n                            NgxEditorJSMatFieldComponent\n                        \n                    \n                \n                \n                    Providers\n                    \n                        \n                            NgxEditorJSService\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            NgxEditorJSComponent\n                        \n                        \n                            NgxEditorJSDirective\n                        \n                        \n                            NgxEditorJSMatFieldComponent\n                        \n                    \n                \n            \n        \n\n        \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Static\n                            forRoot\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    forRoot(config?: NgxEditorJSModuleConfig)\n                \n            \n\n\n            \n                \n                    Defined in libs/ngx-editorjs/ngx-editorjs/src/lib/ngx-editorjs.module.ts:68\n                \n            \n\n\n            \n                \n                    Use this method in the root of the application.  You can pass an optional configuration\nwhich sets some defaults, or use the provided defaults.\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    config\n                                    \n                                                NgxEditorJSModuleConfig\n                                    \n\n                                    \n                                        Yes\n                                    \n\n\n                                    \n                                        The optional configuration to pass\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         ModuleWithProviders\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n    \n\n\n    \n        import { CommonModule } from '@angular/common';\nimport { ModuleWithProviders, NgModule, Optional, SkipSelf } from '@angular/core';\nimport { FormsModule } from '@angular/forms';\nimport { MatFormFieldModule } from '@angular/material/form-field';\nimport { MatInputModule } from '@angular/material/input';\nimport EditorJS from '@editorjs/editorjs';\nimport { createModuleConfig } from './config/module-config';\nimport { NgxEditorJSMatFieldComponent } from './containers/editorjs-mat-field/editorjs-mat-field.component';\nimport { NgxEditorJSComponent } from './containers/editorjs/editorjs.component';\nimport { NgxEditorJSDirective } from './directives/ngx-editorjs.directive';\nimport { NgxEditorJSService } from './services/editorjs.service';\nimport { FOR_ROOT_OPTIONS_TOKEN, NgxEditorJSModuleConfig, NGX_EDITORJS_CONFIG } from './types/config';\nimport { EditorJSInstance, EDITORJS_MODULE_IMPORT } from './types/injector';\n\n/**\n * Factory function to return the EditorJS base class\n */\nexport function createEditorJSInstance(editorjs: any) {\n  return editorjs;\n}\n\n/**\n * The `@tinynodes/ngx-editorjs` module provides a collection of demos to allow\n * any Angular app to use and control an [EditorJS](http://editorjs.io) instance\n *\n * To use import the module `NgxEditorJSModule.forRoot()` into the root of your application.\n * The `forRoot` method takes an optional `NgxEditorJSModuleConfig` config, this will provide a\n * default instance.\n */\n@NgModule({\n  imports: [CommonModule, FormsModule, MatInputModule, MatFormFieldModule],\n  declarations: [NgxEditorJSComponent, NgxEditorJSMatFieldComponent, NgxEditorJSDirective],\n  exports: [NgxEditorJSComponent, NgxEditorJSMatFieldComponent, NgxEditorJSDirective],\n  providers: [\n    NgxEditorJSService,\n    {\n      provide: FOR_ROOT_OPTIONS_TOKEN,\n      useValue: {}\n    },\n    {\n      provide: NGX_EDITORJS_CONFIG,\n      useFactory: createModuleConfig,\n      deps: [FOR_ROOT_OPTIONS_TOKEN]\n    },\n    {\n      provide: EDITORJS_MODULE_IMPORT,\n      useValue: EditorJS\n    },\n    {\n      provide: EditorJSInstance,\n      useFactory: createEditorJSInstance,\n      deps: [EDITORJS_MODULE_IMPORT]\n    }\n  ]\n})\nexport class NgxEditorJSModule {\n  constructor(\n    @Optional()\n    @SkipSelf()\n    parentModule: NgxEditorJSModule\n  ) {}\n\n  /**\n   * Use this method in the root of the application.  You can pass an optional configuration\n   * which sets some defaults, or use the provided defaults.\n   * @param config The optional configuration to pass\n   */\n  static forRoot(@Optional() config?: NgxEditorJSModuleConfig): ModuleWithProviders {\n    return {\n      ngModule: NgxEditorJSModule,\n      providers: [\n        {\n          provide: FOR_ROOT_OPTIONS_TOKEN,\n          useValue: config\n        },\n        {\n          provide: NGX_EDITORJS_CONFIG,\n          useFactory: createModuleConfig,\n          deps: [FOR_ROOT_OPTIONS_TOKEN]\n        }\n      ]\n    };\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/NgxEditorJSModuleConfig.html":{"url":"interfaces/NgxEditorJSModuleConfig.html","title":"interface - NgxEditorJSModuleConfig","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  NgxEditorJSModuleConfig\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            libs/ngx-editorjs/ngx-editorjs/src/lib/types/config.ts\n        \n\n            \n                Description\n            \n            \n                The configuration option that can be passed to the NgxEditorJSModule.forRoot method\n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                            Optional\n                                        editorjs\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        editorjs\n                                    \n                                \n                                \n                                    \n                                        editorjs:     EditorConfig\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     EditorConfig\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    Configuration options for EditorJS\n\n                                \n                            \n                        \n                    \n            \n    \n\n\n    \n        import { InjectionToken } from '@angular/core';\nimport EditorJS, { OutputData, SanitizerConfig, EditorConfig } from '@editorjs/editorjs';\n\n/**\n * Configuration for the EditorJS instance\n */\nexport interface NgxEditorJSConfig {\n  /**\n   * If the EditorJS is autofocused on creation (default: false)\n   */\n  autofocus?: boolean;\n\n  /**\n   * Any initial output data to render\n   */\n  data?: OutputData;\n\n  /**\n   * If true, toolbar won't be shown\n   */\n  hideToolbar?: boolean;\n\n  /**\n   * ID of the element to hold the config\n   */\n  holder?: string;\n\n  /**\n   * The name of the initial block (default \"paragraph\")\n   */\n  initialBlock?: string;\n\n  /**\n   * Height of Editor's bottom area that allows to set focus on the last Block\n   */\n  minHeight?: number;\n\n  /**\n   * First Block placeholder\n   */\n  blockPlaceholder?: string;\n\n  /**\n   * Define default sanitizer configuration\n   */\n  sanitizer?: SanitizerConfig;\n}\n\n/**\n * The configuration option that can be passed to the `NgxEditorJSModule.forRoot` method\n */\nexport interface NgxEditorJSModuleConfig {\n  /**\n   * Configuration options for EditorJS\n   */\n  editorjs?: EditorConfig;\n}\n\n/**\n * Injection token provied for `NgxEditorJSConfig`\n */\nexport const NGX_EDITORJS_CONFIG = new InjectionToken('NGX_EDITORJS_CONFIG');\n\n/**\n * Internal token for injecting the `NgxEditorJSConfig` into the config factory\n */\nexport const FOR_ROOT_OPTIONS_TOKEN = new InjectionToken('FOR_ROOT_OPTIONS_TOKEN');\n\n/**\n * Get the EditorJS instance injected into the app\n */\nexport const EDITIOR_JS_INSTANCE = new InjectionToken('EDITIOR_JS_INSTANCE');\n\n    \n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/NgxEditorJSPluginService.html":{"url":"injectables/NgxEditorJSPluginService.html","title":"injectable - NgxEditorJSPluginService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  NgxEditorJSPluginService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            libs/ngx-editorjs/ngx-editorjs-plugins/src/lib/services/plugin-service.service.ts\n        \n\n            \n                Description\n            \n            \n                The NgxEditorJSPluginService is provided as a root service for handling  EditorJS plugins.\nPlugins are provided by using  NgModule to inject the plugin with a\n PluginConfig using providers.\n\n            \n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                getPlugin\n                            \n                            \n                                    Public\n                                getPlugins\n                            \n                            \n                                    Public\n                                getPluginsWithExclude\n                            \n                            \n                                    Public\n                                getPluginsWithInclude\n                            \n                            \n                                    Public\n                                getTools\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(pluginConfigMap: PluginConfigMap)\n                    \n                \n                        \n                            \n                                Defined in libs/ngx-editorjs/ngx-editorjs-plugins/src/lib/services/plugin-service.service.ts:13\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        pluginConfigMap\n                                                  \n                                                        \n                                                                        PluginConfigMap\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                The plugin configuration map injected into the application\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            getPlugin\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    getPlugin(key: string)\n                \n            \n\n\n            \n                \n                    Defined in libs/ngx-editorjs/ngx-editorjs-plugins/src/lib/services/plugin-service.service.ts:32\n                \n            \n\n\n            \n                \n                    Get a plugin configuration via it's key\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    key\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        The key of the plugin to get\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         PluginConfig\n\n                    \n                    \n                        The plugin configuration for the passed key\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            getPlugins\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    getPlugins()\n                \n            \n\n\n            \n                \n                    Defined in libs/ngx-editorjs/ngx-editorjs-plugins/src/lib/services/plugin-service.service.ts:23\n                \n            \n\n\n            \n                \n                    Get a map of all plugin configurations\n\n\n                    \n                    \n                    \n                        Returns :         PluginConfigMap\n\n                    \n                    \n                        The map of plugins injected into this plugin\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            getPluginsWithExclude\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    getPluginsWithExclude(excludeList: string[])\n                \n            \n\n\n            \n                \n                    Defined in libs/ngx-editorjs/ngx-editorjs-plugins/src/lib/services/plugin-service.service.ts:40\n                \n            \n\n\n            \n                \n                    Get a list of plugins, filtering with an exclude list of plugins\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Default value\n                                \n                            \n                            \n                                \n                                    excludeList\n                                    \n                                            string[]\n                                    \n\n                                    \n                                        No\n                                    \n\n                                    \n                                        []\n                                    \n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         PluginConfigMap\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            getPluginsWithInclude\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    getPluginsWithInclude(includeList: string[])\n                \n            \n\n\n            \n                \n                    Defined in libs/ngx-editorjs/ngx-editorjs-plugins/src/lib/services/plugin-service.service.ts:54\n                \n            \n\n\n            \n                \n                    Get a list of plugins, filtering with an include list of plugins\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Default value\n                                \n                            \n                            \n                                \n                                    includeList\n                                    \n                                            string[]\n                                    \n\n                                    \n                                        No\n                                    \n\n                                    \n                                        []\n                                    \n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         PluginConfigMap\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            getTools\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    getTools(excludeTools: string[])\n                \n            \n\n\n            \n                \n                    Defined in libs/ngx-editorjs/ngx-editorjs-plugins/src/lib/services/plugin-service.service.ts:68\n                \n            \n\n\n            \n                \n                    Returns a map of  EditorJS tools to be initialized by the editor\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Default value\n                                    Description\n                                \n                            \n                            \n                                \n                                    excludeTools\n                                    \n                                            string[]\n                                    \n\n                                    \n                                        No\n                                    \n\n                                    \n                                        []\n                                    \n\n                                    \n                                        Optional array of tools to exclude, if not passed all tools\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         ToolSettingsMap\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Inject, Injectable } from '@angular/core';\nimport { PluginClasses, PluginConfig, PluginConfigMap, ToolSettingsMap } from '../types/plugins';\n\n/**\n * The `NgxEditorJSPluginService` is provided as a root service for handling {@link https://github.com/editor-js | EditorJS plugins}.\n *\n * Plugins are provided by using {@link https://angular.io/api/core/NgModule | NgModule} to inject the plugin with a\n * {@link ../interfaces/PluginConfig.html | PluginConfig} using providers.\n */\n@Injectable({\n  providedIn: 'root'\n})\nexport class NgxEditorJSPluginService {\n  /**\n   * @param pluginConfigMap The plugin configuration map injected into the application\n   */\n  constructor(@Inject(PluginClasses) private readonly pluginConfigMap: PluginConfigMap) {}\n\n  /**\n   * Get a map of all plugin configurations\n   * @returns The map of plugins injected into this plugin\n   */\n  public getPlugins(): PluginConfigMap {\n    return this.pluginConfigMap;\n  }\n\n  /**\n   * Get a plugin configuration via it's key\n   * @param key The key of the plugin to get\n   * @returns The plugin configuration for the passed key\n   */\n  public getPlugin(key: string): PluginConfig {\n    return this.pluginConfigMap[key];\n  }\n\n  /**\n   * Get a list of plugins, filtering with an exclude list of plugins\n   * @param excludeList\n   */\n  public getPluginsWithExclude(excludeList: string[] = []): PluginConfigMap {\n    return Object.entries(this.pluginConfigMap)\n      .filter(([key]) => {\n        return !excludeList.includes(key);\n      })\n      .reduce((pluginMap, [key, plugin]) => {\n        return { ...pluginMap, [key]: plugin };\n      }, {});\n  }\n\n  /**\n   * Get a list of plugins, filtering with an include list of plugins\n   * @param includeList\n   */\n  public getPluginsWithInclude(includeList: string[] = []): PluginConfigMap {\n    return Object.entries(this.pluginConfigMap)\n      .filter(([key]) => {\n        return includeList.includes(key);\n      })\n      .reduce((pluginMap, [key, plugin]) => {\n        return { ...pluginMap, [key]: plugin };\n      }, {});\n  }\n\n  /**\n   * Returns a map of {@link https://editorjs.io/api | EditorJS} tools to be initialized by the editor\n   * @param excludeTools Optional array of tools to exclude, if not passed all tools\n   */\n  public getTools(excludeTools: string[] = []): ToolSettingsMap {\n    return Object.entries(this.getPluginsWithExclude(excludeTools)).reduce(\n      (finalTools, [key, plugin]: [string, PluginConfig]) => {\n        const tool: any = {\n          class: plugin.plugin\n        };\n        if (plugin.shortcut) tool.shortcut = plugin.shortcut;\n        if (plugin.type === 'inline' || plugin.inlineToolbar) tool.inlineToolbar = true;\n        if (plugin.config) tool.config = plugin.config;\n        return { ...finalTools, [key]: tool };\n      },\n      {}\n    );\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/NgxEditorJSPluginServiceModule.html":{"url":"modules/NgxEditorJSPluginServiceModule.html","title":"module - NgxEditorJSPluginServiceModule","body":"\n                   \n\n\n\n\n    Modules\n    NgxEditorJSPluginServiceModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_NgxEditorJSPluginServiceModule\n\n\n\ncluster_NgxEditorJSPluginServiceModule_providers\n\n\n\n\nNgxEditorJSPluginService\n\nNgxEditorJSPluginService\n\n\n\nNgxEditorJSPluginServiceModule\n\nNgxEditorJSPluginServiceModule\n\nNgxEditorJSPluginServiceModule -->\n\nNgxEditorJSPluginService->NgxEditorJSPluginServiceModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            libs/ngx-editorjs/ngx-editorjs-plugins/src/lib/services/plugin-service.module.ts\n        \n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            NgxEditorJSPluginService\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { NgModule } from '@angular/core';\nimport { EDITOR_JS_TOOL_INJECTOR, PluginClasses, PLUGIN_CONFIG } from '../types/plugins';\nimport { createPluginConfig } from '../util/plugin';\nimport { NgxEditorJSPluginService } from './plugin-service.service';\n\n@NgModule({\n  providers: [\n    {\n      provide: PLUGIN_CONFIG,\n      useValue: undefined,\n      multi: true\n    },\n    {\n      provide: EDITOR_JS_TOOL_INJECTOR,\n      useValue: undefined,\n      multi: true\n    },\n    {\n      provide: PluginClasses,\n      useFactory: createPluginConfig,\n      deps: [PLUGIN_CONFIG, EDITOR_JS_TOOL_INJECTOR]\n    },\n    NgxEditorJSPluginService\n  ]\n})\nexport class NgxEditorJSPluginServiceModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/NgxEditorJSService.html":{"url":"injectables/NgxEditorJSService.html","title":"injectable - NgxEditorJSService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  NgxEditorJSService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            libs/ngx-editorjs/ngx-editorjs/src/lib/services/editorjs.service.ts\n        \n\n            \n                Description\n            \n            \n                This handles the management of  EditorJS instances and their lifecycle.\nAll EditorJS instances are created outside of Angular using  NgZone  to ensure change detection is not triggered.\nOnce an instance is created, several  Observable values are also set up:\n\n isReady  Set when the editor instance is ready in the DOM\n hasSaved  Set when the editor .save() method has been called.\n lastChange  Set when a change happens, contains the OutputData from the Editor.\n\nAfter setup,  isReady  is set to true and the editor can be used within Angular.  There are some methods provided\nfor  save ,  update  and  clear  - and an  apiCall  method which allows\nfor any call to be made to EditorJS that matches it's API.\n\n            \n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                apiCall\n                            \n                            \n                                    Public\n                                clear\n                            \n                            \n                                    Public\n                                    Async\n                                createInstance\n                            \n                            \n                                    Public\n                                destroy\n                            \n                            \n                                    Public\n                                destroyInstance\n                            \n                            \n                                    Public\n                                getEditor\n                            \n                            \n                                    Public\n                                hasSaved\n                            \n                            \n                                    Public\n                                isReady\n                            \n                            \n                                    Public\n                                lastChange\n                            \n                            \n                                    Public\n                                save\n                            \n                            \n                                    Public\n                                update\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(editorJs: EditorJSClass, config: NgxEditorJSModuleConfig, plugins: NgxEditorJSPluginService, zone: NgZone, ref: ApplicationRef)\n                    \n                \n                        \n                            \n                                Defined in libs/ngx-editorjs/ngx-editorjs/src/lib/services/editorjs.service.ts:61\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        editorJs\n                                                  \n                                                        \n                                                                        EditorJSClass\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                The EditorJS class injected into the application and used to create new editor instances\n\n                                                        \n                                                \n                                                \n                                                        config\n                                                  \n                                                        \n                                                                        NgxEditorJSModuleConfig\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                The configuration provided from the NgxEditorJSModule.forRoot method\n\n                                                        \n                                                \n                                                \n                                                        plugins\n                                                  \n                                                        \n                                                                        NgxEditorJSPluginService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                The plugin service which provides all plugins injected into the application\n\n                                                        \n                                                \n                                                \n                                                        zone\n                                                  \n                                                        \n                                                                        NgZone\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                The Angular Zone service that allows the EditorJS methods to be run outside of Angular\n\n                                                        \n                                                \n                                                \n                                                        ref\n                                                  \n                                                        \n                                                                        ApplicationRef\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                The ApplicationRef provided by Angular, used to trigger an application tick\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            apiCall\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    apiCall(options: InjectorApiCallOptions, ...args: any[])\n                \n            \n\n\n            \n                \n                    Defined in libs/ngx-editorjs/ngx-editorjs/src/lib/services/editorjs.service.ts:138\n                \n            \n\n            \n                \n                    Type parameters :\n                    \n                        T\n                    \n                \n            \n\n            \n                \n                    A helper method to make calls to the  EditorJS API  of any instance.\nThe first argument is an object that you must pass the method name, and the holder ID of the container.\nAn optional namespace can be added for API calls such as blocks, caret, etc.\nThe second argument is any additional arguments as required by the API.\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    options\n                                    \n                                                InjectorApiCallOptions\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        The options for the API call to be made\n\n                                    \n                                \n                                \n                                    args\n                                    \n                                            any[]\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        Any arguments to be passed to the API call\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Observable>\n\n                    \n                    \n                        An Observable of the API response\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            clear\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    clear(options: InjectorMethodOption)\n                \n            \n\n\n            \n                \n                    Defined in libs/ngx-editorjs/ngx-editorjs/src/lib/services/editorjs.service.ts:191\n                \n            \n\n\n            \n                \n                    Gets the  EditorJS instance for the passed holder and calls the clear method.\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    options\n                                    \n                                                InjectorMethodOption\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        Options to configure a method call against the EditorJS core API\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Observable>\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            Async\n                            createInstance\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    createInstance(options: CreateEditorJSOptions)\n                \n            \n\n\n            \n                \n                    Defined in libs/ngx-editorjs/ngx-editorjs/src/lib/services/editorjs.service.ts:87\n                \n            \n\n\n            \n                \n                    Creates a new  EditorJS instance outside of the Angular zone and then adds it to the editor instances\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    options\n                                    \n                                                CreateEditorJSOptions\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        A configuration passed to create an EditorJS instance\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        A Promise when the editor has been created\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            destroy\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    destroy()\n                \n            \n\n\n            \n                \n                    Defined in libs/ngx-editorjs/ngx-editorjs/src/lib/services/editorjs.service.ts:288\n                \n            \n\n\n            \n                \n                    Call this to destroy all subscriptions within the service\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            destroyInstance\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    destroyInstance(options: InjectorMethodOption)\n                \n            \n\n\n            \n                \n                    Defined in libs/ngx-editorjs/ngx-editorjs/src/lib/services/editorjs.service.ts:271\n                \n            \n\n\n            \n                \n                    Destroys a single instance of  EditorJS and all the subject values created for it\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    options\n                                    \n                                                InjectorMethodOption\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        Options to configure a method call against the EditorJS core API\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            getEditor\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    getEditor(options: InjectorMethodOption)\n                \n            \n\n\n            \n                \n                    Defined in libs/ngx-editorjs/ngx-editorjs/src/lib/services/editorjs.service.ts:220\n                \n            \n\n\n            \n                \n                    Returns the underlying  EditorJS instance\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    options\n                                    \n                                                InjectorMethodOption\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        Options to configure a method call against the EditorJS core API\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Observable\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            hasSaved\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    hasSaved(options: InjectorMethodOption)\n                \n            \n\n\n            \n                \n                    Defined in libs/ngx-editorjs/ngx-editorjs/src/lib/services/editorjs.service.ts:260\n                \n            \n\n\n            \n                \n                    Subscribe to the hasSaved state change for the editor passed in the options\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    options\n                                    \n                                                InjectorMethodOption\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        Options to configure a method call against the EditorJS core API\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Observable\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            isReady\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    isReady(options: InjectorMethodOption)\n                \n            \n\n\n            \n                \n                    Defined in libs/ngx-editorjs/ngx-editorjs/src/lib/services/editorjs.service.ts:231\n                \n            \n\n\n            \n                \n                    Subscribe to the isReady state change for the editor passed in the options\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    options\n                                    \n                                                InjectorMethodOption\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        Options to configure a method call against the EditorJS core API\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Observable\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            lastChange\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    lastChange(options: InjectorMethodOption)\n                \n            \n\n\n            \n                \n                    Defined in libs/ngx-editorjs/ngx-editorjs/src/lib/services/editorjs.service.ts:242\n                \n            \n\n\n            \n                \n                    Subscribe to the lastChange state change for the editor passed in the options\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    options\n                                    \n                                                InjectorMethodOption\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        Options to configure a method call against the EditorJS core API\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Observable\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            save\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    save(options: InjectorMethodOption)\n                \n            \n\n\n            \n                \n                    Defined in libs/ngx-editorjs/ngx-editorjs/src/lib/services/editorjs.service.ts:177\n                \n            \n\n\n            \n                \n                    Call the save method of an  EditorJS instance and sets the current value of the service to the result\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    options\n                                    \n                                                InjectorMethodOption\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        Options for the method call\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Observable>\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            update\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    update(options: InjectorMethodOption)\n                \n            \n\n\n            \n                \n                    Defined in libs/ngx-editorjs/ngx-editorjs/src/lib/services/editorjs.service.ts:204\n                \n            \n\n\n            \n                \n                    Gets the  EditorJS instance for the passed holder and calls the render method if blocks\nare passed. Optionally can disable the lastChange update - useful if doing actions\nsuch as resetting data.\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    options\n                                    \n                                                InjectorMethodOption\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        Options to configure a method call against the EditorJS core API\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Observable>\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { ApplicationRef, Inject, Injectable, NgZone } from '@angular/core';\nimport EditorJS, { EditorConfig, OutputData } from '@editorjs/editorjs';\nimport { NgxEditorJSPluginService, ToolSettingsMap } from '@tinynodes/ngx-editorjs-plugins';\nimport { BehaviorSubject, Observable, of, Subject } from 'rxjs';\nimport { distinctUntilChanged, filter, switchMap, take, tap } from 'rxjs/operators';\nimport { NgxEditorJSModuleConfig, NGX_EDITORJS_CONFIG } from '../types/config';\nimport { CreateEditorJSOptions } from '../types/editorjs-service';\nimport {\n  EditorJSClass,\n  EditorJSInstance,\n  InjectorApiCallOptions,\n  InjectorApiCallResponse,\n  InjectorMethodOption,\n  MAP_DEFAULTS\n} from '../types/injector';\nimport { ChangeMap, EditorMap, ReadyMap, SavedMap } from '../types/maps';\n\n/**\n * This handles the management of {@link https://editorjs.io/api | EditorJS} instances and their lifecycle.\n *\n * All `EditorJS` instances are created outside of Angular using {@link https://angular.io/api/core/NgZone | NgZone } to ensure change detection is not triggered.\n * Once an instance is created, several {@link https://angular.io/guide/observables | Observable} values are also set up:\n *\n *  - {@link #isReady | isReady } Set when the editor instance is ready in the DOM\n *  - {@link #hasSaved | hasSaved } Set when the editor `.save()` method has been called.\n *  - {@link #lastChange | lastChange } Set when a change happens, contains the `OutputData` from the Editor.\n *\n * After setup, {@link #isReady | isReady } is set to true and the editor can be used within Angular.  There are some methods provided\n * for {@link #save | save }, {@link #update | update } and {@link #clear | clear } - and an {@link #apiCall | apiCall } method which allows\n * for any call to be made to EditorJS that matches it's API.\n */\n@Injectable({\n  providedIn: 'root'\n})\nexport class NgxEditorJSService {\n  /**\n   * Internal destroy subject for the service\n   */\n  private readonly onDestroy$ = new Subject();\n\n  /**\n   * Internal map of all {@link https://editorjs.io/api | EditorJS} instances\n   */\n  private readonly editorMap: EditorMap = {};\n\n  /**\n   * Internal map of all {@link https://editorjs.io/api | EditorJS} ready states\n   */\n  private readonly isReadyMap: ReadyMap = {};\n\n  /**\n   * Internal map of when {@link https://editorjs.io/api | EditorJS} save is called\n   */\n  private readonly hasSavedMap: SavedMap = {};\n\n  /**\n   * Internal map of all {@link https://editorjs.io/api | EditorJS} change states\n   */\n  private readonly lastChangeMap: ChangeMap = {};\n\n  private toolbarOpen = false;\n\n  /**\n   * @param editorJs The EditorJS class injected into the application and used to create new editor instances\n   * @param config The configuration provided from the NgxEditorJSModule.forRoot method\n   * @param plugins The plugin service which provides all plugins injected into the application\n   * @param zone The Angular Zone service that allows the EditorJS methods to be run outside of Angular\n   * @param ref The ApplicationRef provided by Angular, used to trigger an application tick\n   */\n  constructor(\n    @Inject(EditorJSInstance) private readonly editorJs: EditorJSClass,\n    @Inject(NGX_EDITORJS_CONFIG) private readonly config: NgxEditorJSModuleConfig,\n    private readonly plugins: NgxEditorJSPluginService,\n    private readonly zone: NgZone,\n    private readonly ref: ApplicationRef\n  ) {}\n\n  /**\n   * Creates a new {@link https://editorjs.io/api | EditorJS} instance outside of the Angular zone and then adds it to the editor instances\n   *\n   * @remark\n   * This method uses `async/await`\n   *\n   * @param options A configuration passed to create an EditorJS instance\n   * @returns A Promise when the editor has been created\n   */\n  public async createInstance(options: CreateEditorJSOptions): Promise {\n    const editorConfig: EditorConfig = {\n      ...this.config.editorjs,\n      ...options.config,\n      tools: this.getTools(options.excludeTools)\n    };\n\n    // Bind the editor onChange method from the config, otherwise use the local createOnChange method\n    editorConfig.onChange =\n      editorConfig.onChange && typeof editorConfig.onChange === 'function'\n        ? editorConfig.onChange\n        : this.createOnChange.call(this, { holder: editorConfig.holder as string });\n\n    // Bind the editor onReady method from the config, otherwise use the local createOnReady method\n    editorConfig.onReady =\n      editorConfig.onReady && typeof editorConfig.onReady === 'function'\n        ? editorConfig.onReady\n        : this.createOnReady.call(this, { holder: editorConfig.holder as string });\n\n    await this.zone.runOutsideAngular(async () => {\n      const editor = new this.editorJs(editorConfig);\n      const holder = editorConfig.holder as string;\n      await editor.isReady;\n      await this.zone.run(async () => {\n        await this.setupSubjects({ holder });\n        if (this.editorMap[holder]) {\n          this.editorMap[holder].next(editor);\n        } else {\n          this.editorMap[holder] = new BehaviorSubject(editor);\n        }\n        this.isReadyMap[holder].next(true);\n        this.ref.tick();\n      });\n    });\n  }\n\n  /**\n   * A helper method to make calls to the {@link https://editorjs.io/api | EditorJS API } of any instance.\n   * The first argument is an object that you must pass the `method` name, and the `holder` ID of the container.\n   * An optional `namespace` can be added for API calls such as `blocks`, `caret`, etc.\n   *\n   * The second argument is any additional arguments as required by the API.\n   *\n   * @remarks\n   * Unlike other methods an API call be made with a `.subscribe`, the result will be an observable value.\n   * If the value is a Promise it will be resolved first\n   *\n   * @param options The options for the API call to be made\n   * @param args Any arguments to be passed to the API call\n   * @returns An Observable of the API response\n   */\n  public apiCall(options: InjectorApiCallOptions, ...args: any[]): Observable> {\n    return this.getEditor(options).pipe(\n      take(1),\n      switchMap(async editor => {\n        let result: InjectorApiCallResponse = { ...options, result: undefined };\n\n        await this.zone.runOutsideAngular(async () => {\n          let method: any;\n          if (!options.namespace) {\n            method = editor[options.method];\n          } else {\n            method = editor[options.namespace][options.method];\n          }\n          if (!method) {\n            throw new Error(`No method ${options.method} ${options.namespace ? 'in ' + options.namespace : ''}`);\n          }\n          const methodCall = method.call(editor, ...args);\n          await this.zone.run(async () => {\n            if (!methodCall || (methodCall && !methodCall.then)) {\n              result = {\n                ...result,\n                result: typeof methodCall === 'undefined' ? {} : methodCall\n              };\n            } else {\n              const r = await methodCall;\n              result = { ...result, result: r };\n            }\n          });\n        });\n\n        return result;\n      })\n    );\n  }\n\n  /**\n   * Call the `save` method of an {@link https://editorjs.io/api | EditorJS} instance and sets the current value of the service to the result\n   * @param options Options for the method call\n   */\n  public save(options: InjectorMethodOption): Observable> {\n    return this.apiCall({ holder: options.holder, namespace: 'saver', method: 'save' }).pipe(\n      take(1),\n      tap((response: InjectorApiCallResponse) => {\n        this.hasSavedMap[options.holder].next(true);\n        this.lastChangeMap[options.holder].next(response.result);\n      })\n    );\n  }\n\n  /**\n   * Gets the {@link https://editorjs.io/api | EditorJS} instance for the passed holder and calls the `clear` method.\n   * @param options Options to configure a method call against the EditorJS core API\n   */\n  public clear(options: InjectorMethodOption): Observable> {\n    return this.apiCall({ holder: options.holder, namespace: 'blocks', method: 'clear' }).pipe(\n      take(1),\n      switchMap(response => (options.skipSave ? of(response) : this.save(options)))\n    );\n  }\n\n  /**\n   * Gets the {@link https://editorjs.io/api | EditorJS} instance for the passed holder and calls the render method if blocks\n   * are passed. Optionally can disable the `lastChange` update - useful if doing actions\n   * such as resetting data.\n   * @param options Options to configure a method call against the EditorJS core API\n   */\n  public update(options: InjectorMethodOption): Observable> {\n    const data = {\n      time: (options.data && options.data.time) || Date.now(),\n      version: (options.data && options.data.version) || this.editorJs.version,\n      blocks: [...options.data.blocks]\n    };\n    return this.apiCall({ holder: options.holder, namespace: 'blocks', method: 'render' }, data).pipe(\n      take(1),\n      switchMap(response => (options.skipSave ? of(response) : this.save(options)))\n    );\n  }\n\n  /**\n   * Returns the underlying {@link https://editorjs.io/api | EditorJS} instance\n   * @param options Options to configure a method call against the EditorJS core API\n   */\n  public getEditor(options: InjectorMethodOption): Observable {\n    if (!this.editorMap[options.holder]) {\n      this.editorMap[options.holder] = new BehaviorSubject(undefined);\n    }\n    return this.editorMap[options.holder].pipe(filter(editor => typeof editor !== 'undefined'));\n  }\n\n  /**\n   * Subscribe to the `isReady` state change for the editor passed in the options\n   * @param options Options to configure a method call against the EditorJS core API\n   */\n  public isReady(options: InjectorMethodOption): Observable {\n    if (!this.isReadyMap[options.holder]) {\n      this.isReadyMap[options.holder] = new BehaviorSubject(false);\n    }\n    return this.isReadyMap[options.holder].asObservable();\n  }\n\n  /**\n   * Subscribe to the `lastChange` state change for the editor passed in the options\n   * @param options Options to configure a method call against the EditorJS core API\n   */\n  public lastChange(options: InjectorMethodOption): Observable {\n    if (!this.lastChangeMap[options.holder]) {\n      this.lastChangeMap[options.holder] = new BehaviorSubject({\n        time: 0,\n        blocks: [],\n        version: this.editorJs.version\n      });\n    }\n    return this.lastChangeMap[options.holder].pipe(\n      distinctUntilChanged((a, b) => (b && b.time && b.time === 0) || (a && b && (a.time && a.time === b.time))),\n      filter(hasChanged => typeof hasChanged !== 'undefined')\n    );\n  }\n\n  /**\n   * Subscribe to the `hasSaved` state change for the editor passed in the options\n   * @param options Options to configure a method call against the EditorJS core API\n   */\n  public hasSaved(options: InjectorMethodOption): Observable {\n    if (!this.hasSavedMap[options.holder]) {\n      this.hasSavedMap[options.holder] = new BehaviorSubject(false);\n    }\n    return this.hasSavedMap[options.holder].asObservable();\n  }\n\n  /**\n   * Destroys a single instance of {@link https://editorjs.io/api | EditorJS} and all the subject values created for it\n   * @param options Options to configure a method call against the EditorJS core API\n   */\n  public destroyInstance(options: InjectorMethodOption): void {\n    this.getEditor(options)\n      .pipe(take(1))\n      .subscribe(editor => {\n        this.zone.runOutsideAngular(() => {\n          editor.destroy();\n          this.zone.run(() => {\n            this.cleanupSubjects({ holder: options.holder });\n            this.ref.tick();\n          });\n        });\n      });\n  }\n\n  /**\n   * Call this to destroy all subscriptions within the service\n   */\n  public destroy() {\n    Object.keys(this.editorMap).forEach(holder => this.destroyInstance({ holder }));\n    this.onDestroy$.next(true);\n    this.onDestroy$.complete();\n  }\n\n  /**\n   * Internal method to create an default onChange method for {@link https://editorjs.io/api | EditorJS}\n   * @param options The InjectorMethodOption for this request\n   */\n  private createOnChange(options: InjectorMethodOption): (change: OutputData) => void {\n    if (!this.lastChangeMap[options.holder]) {\n      this.lastChangeMap[options.holder] = new BehaviorSubject({ blocks: [] });\n    }\n    return (change: OutputData) => {\n      if (change) {\n        this.lastChangeMap[options.holder].next(change);\n      }\n    };\n  }\n\n  /**\n   * Internal method to create an default onReady method for {@link https://editorjs.io/api | EditorJS}\n   * @param options The InjectorMethodOption for this request\n   */\n  private createOnReady(options: InjectorMethodOption): () => void {\n    if (!this.isReadyMap[options.holder]) {\n      this.isReadyMap[options.holder] = new BehaviorSubject(false);\n    }\n\n    return () => {\n      if (!this.isReadyMap[options.holder].value) {\n        this.isReadyMap[options.holder].next(true);\n      }\n    };\n  }\n\n  /**\n   * Sets up the `BehaviorSubject` values when an {@link https://editorjs.io/api | EditorJS} instance is created.  All the subjects are first created and set\n   * to default values.\n   * Once an EditorJS instance is ready these values can provide change and save state information\n   * @param options Options to configure a method call against the EditorJS core API\n   */\n  private async setupSubjects(options: InjectorMethodOption): Promise {\n    MAP_DEFAULTS.forEach(([mapKey, value]: [string, typeof value]) => {\n      if (!this[mapKey][options.holder]) {\n        this[mapKey][options.holder] = new BehaviorSubject(value);\n      }\n      this[mapKey][options.holder].next(value);\n    });\n  }\n\n  /**\n   * Handles cleaning up all the `BehaviorSubject` values once an {@link https://editorjs.io/api | EditorJS} instance has been destroyed\n   * @param options The options to pass to clean up the subjects\n   */\n  private cleanupSubjects(options: InjectorMethodOption) {\n    MAP_DEFAULTS.forEach(([mapKey]: [string]) => {\n      if (this[mapKey][options.holder]) {\n        this[mapKey][options.holder].complete();\n        this[mapKey][options.holder] = null;\n        delete this[mapKey][options.holder];\n      }\n    });\n    this.editorMap[options.holder].complete();\n    this.editorMap[options.holder] = null;\n    delete this.editorMap[options.holder];\n  }\n\n  /**\n   * Returns a map of {@link https://editorjs.io/api | EditorJS} tools to be initialized by the editor\n   * @param excludeTools Optional array of tools to exclude, if not passed all tools\n   */\n  private getTools(excludeTools: string[] = []): ToolSettingsMap {\n    return this.plugins.getTools(excludeTools);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/NgxEditorjsDemoModule.html":{"url":"modules/NgxEditorjsDemoModule.html","title":"module - NgxEditorjsDemoModule","body":"\n                   \n\n\n\n\n    Modules\n    NgxEditorjsDemoModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_NgxEditorjsDemoModule\n\n\n\ncluster_NgxEditorjsDemoModule_declarations\n\n\n\ncluster_NgxEditorjsDemoModule_imports\n\n\n\ncluster_NgxEditorjsDemoModule_exports\n\n\n\n\nNgxEditorJSDemoHomeComponent\n\nNgxEditorJSDemoHomeComponent\n\n\n\nNgxEditorjsDemoModule\n\nNgxEditorjsDemoModule\n\nNgxEditorjsDemoModule -->\n\nNgxEditorJSDemoHomeComponent->NgxEditorjsDemoModule\n\n\n\n\n\nPageContainerComponent\n\nPageContainerComponent\n\nNgxEditorjsDemoModule -->\n\nPageContainerComponent->NgxEditorjsDemoModule\n\n\n\n\n\nPageContainerComponent \n\nPageContainerComponent \n\nPageContainerComponent  -->\n\nNgxEditorjsDemoModule->PageContainerComponent \n\n\n\n\n\nPageStoreModule \n\nPageStoreModule \n\nPageStoreModule  -->\n\nNgxEditorjsDemoModule->PageStoreModule \n\n\n\n\n\nNgxEditorJSDemoMaterialModule\n\nNgxEditorJSDemoMaterialModule\n\nNgxEditorjsDemoModule -->\n\nNgxEditorJSDemoMaterialModule->NgxEditorjsDemoModule\n\n\n\n\n\nNgxEditorJSModule\n\nNgxEditorJSModule\n\nNgxEditorjsDemoModule -->\n\nNgxEditorJSModule->NgxEditorjsDemoModule\n\n\n\n\n\nNgxEditorjsPluginsModule\n\nNgxEditorjsPluginsModule\n\nNgxEditorjsDemoModule -->\n\nNgxEditorjsPluginsModule->NgxEditorjsDemoModule\n\n\n\n\n\nPageStoreModule\n\nPageStoreModule\n\nNgxEditorjsDemoModule -->\n\nPageStoreModule->NgxEditorjsDemoModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            libs/ngx-editorjs/ngx-editorjs-demo/src/lib/ngx-editorjs-demo.module.ts\n        \n\n\n\n\n        \n            \n                \n                    Declarations\n                    \n                        \n                            NgxEditorJSDemoHomeComponent\n                        \n                        \n                            PageContainerComponent\n                        \n                    \n                \n                \n                    EntryComponents\n                    \n                        \n                            PageContainerComponent\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            NgxEditorJSDemoMaterialModule\n                        \n                        \n                            NgxEditorJSModule\n                        \n                        \n                            NgxEditorjsPluginsModule\n                        \n                        \n                            PageStoreModule\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            PageContainerComponent\n                        \n                        \n                            PageStoreModule\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\nimport { ReactiveFormsModule } from '@angular/forms';\n\nimport { RouterModule } from '@angular/router';\nimport { NgxEditorJSModule } from '@tinynodes/ngx-editorjs';\nimport { PageContainerComponent } from './containers/page-container/page-container.component';\nimport { ngxEditorjsDemoRoutes } from './ngx-editorjs-demo.routes';\nimport { PageStoreModule } from './store/pages/pages.module';\nimport { NgxTinynodesCoreModule } from '@tinynodes/ngx-tinynodes-core';\nimport { NgxEditorJSDemoHomeComponent } from './containers/home-container/home-container.component';\nimport { NgxEditorJSDemoMaterialModule } from './ngx-editorjs-demo.material.module';\n\nimport { NgxJsonViewerModule } from 'ngx-json-viewer';\nimport { NgxEditorjsPluginsModule } from '@tinynodes/ngx-editorjs-plugins';\n\n@NgModule({\n  imports: [\n    CommonModule,\n    NgxJsonViewerModule,\n    RouterModule.forChild(ngxEditorjsDemoRoutes),\n    ReactiveFormsModule,\n    PageStoreModule,\n    NgxTinynodesCoreModule,\n    NgxEditorJSModule,\n    NgxEditorjsPluginsModule,\n    NgxEditorJSDemoMaterialModule\n  ],\n  declarations: [PageContainerComponent, NgxEditorJSDemoHomeComponent],\n  exports: [PageStoreModule, PageContainerComponent],\n  entryComponents: [PageContainerComponent]\n})\nexport class NgxEditorjsDemoModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/NgxEditorjsPluginsModule.html":{"url":"modules/NgxEditorjsPluginsModule.html","title":"module - NgxEditorjsPluginsModule","body":"\n                   \n\n\n\n\n    Modules\n    NgxEditorjsPluginsModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_NgxEditorjsPluginsModule\n\n\n\ncluster_NgxEditorjsPluginsModule_imports\n\n\n\ncluster_NgxEditorjsPluginsModule_exports\n\n\n\n\nNgxEditorJSPluginServiceModule\n\nNgxEditorJSPluginServiceModule\n\n\n\nNgxEditorjsPluginsModule\n\nNgxEditorjsPluginsModule\n\nNgxEditorjsPluginsModule -->\n\nNgxEditorJSPluginServiceModule->NgxEditorjsPluginsModule\n\n\n\n\n\nPluginCodeModule\n\nPluginCodeModule\n\nNgxEditorjsPluginsModule -->\n\nPluginCodeModule->NgxEditorjsPluginsModule\n\n\n\n\n\nPluginEmbedModule\n\nPluginEmbedModule\n\nNgxEditorjsPluginsModule -->\n\nPluginEmbedModule->NgxEditorjsPluginsModule\n\n\n\n\n\nPluginHeaderModule\n\nPluginHeaderModule\n\nNgxEditorjsPluginsModule -->\n\nPluginHeaderModule->NgxEditorjsPluginsModule\n\n\n\n\n\nPluginImageModule\n\nPluginImageModule\n\nNgxEditorjsPluginsModule -->\n\nPluginImageModule->NgxEditorjsPluginsModule\n\n\n\n\n\nPluginInlineCodeModule\n\nPluginInlineCodeModule\n\nNgxEditorjsPluginsModule -->\n\nPluginInlineCodeModule->NgxEditorjsPluginsModule\n\n\n\n\n\nPluginLinkModule\n\nPluginLinkModule\n\nNgxEditorjsPluginsModule -->\n\nPluginLinkModule->NgxEditorjsPluginsModule\n\n\n\n\n\nPluginListModule\n\nPluginListModule\n\nNgxEditorjsPluginsModule -->\n\nPluginListModule->NgxEditorjsPluginsModule\n\n\n\n\n\nPluginMarkerModule\n\nPluginMarkerModule\n\nNgxEditorjsPluginsModule -->\n\nPluginMarkerModule->NgxEditorjsPluginsModule\n\n\n\n\n\nPluginParagraphModule\n\nPluginParagraphModule\n\nNgxEditorjsPluginsModule -->\n\nPluginParagraphModule->NgxEditorjsPluginsModule\n\n\n\n\n\nPluginQuoteModule\n\nPluginQuoteModule\n\nNgxEditorjsPluginsModule -->\n\nPluginQuoteModule->NgxEditorjsPluginsModule\n\n\n\n\n\nPluginSimpleImageModule\n\nPluginSimpleImageModule\n\nNgxEditorjsPluginsModule -->\n\nPluginSimpleImageModule->NgxEditorjsPluginsModule\n\n\n\n\n\nPluginWarningModule\n\nPluginWarningModule\n\nNgxEditorjsPluginsModule -->\n\nPluginWarningModule->NgxEditorjsPluginsModule\n\n\n\n\n\nNgxEditorJSPluginServiceModule \n\nNgxEditorJSPluginServiceModule \n\nNgxEditorJSPluginServiceModule  -->\n\nNgxEditorjsPluginsModule->NgxEditorJSPluginServiceModule \n\n\n\n\n\nPluginCodeModule \n\nPluginCodeModule \n\nPluginCodeModule  -->\n\nNgxEditorjsPluginsModule->PluginCodeModule \n\n\n\n\n\nPluginEmbedModule \n\nPluginEmbedModule \n\nPluginEmbedModule  -->\n\nNgxEditorjsPluginsModule->PluginEmbedModule \n\n\n\n\n\nPluginHeaderModule \n\nPluginHeaderModule \n\nPluginHeaderModule  -->\n\nNgxEditorjsPluginsModule->PluginHeaderModule \n\n\n\n\n\nPluginImageModule \n\nPluginImageModule \n\nPluginImageModule  -->\n\nNgxEditorjsPluginsModule->PluginImageModule \n\n\n\n\n\nPluginInlineCodeModule \n\nPluginInlineCodeModule \n\nPluginInlineCodeModule  -->\n\nNgxEditorjsPluginsModule->PluginInlineCodeModule \n\n\n\n\n\nPluginLinkModule \n\nPluginLinkModule \n\nPluginLinkModule  -->\n\nNgxEditorjsPluginsModule->PluginLinkModule \n\n\n\n\n\nPluginListModule \n\nPluginListModule \n\nPluginListModule  -->\n\nNgxEditorjsPluginsModule->PluginListModule \n\n\n\n\n\nPluginMarkerModule \n\nPluginMarkerModule \n\nPluginMarkerModule  -->\n\nNgxEditorjsPluginsModule->PluginMarkerModule \n\n\n\n\n\nPluginParagraphModule \n\nPluginParagraphModule \n\nPluginParagraphModule  -->\n\nNgxEditorjsPluginsModule->PluginParagraphModule \n\n\n\n\n\nPluginQuoteModule \n\nPluginQuoteModule \n\nPluginQuoteModule  -->\n\nNgxEditorjsPluginsModule->PluginQuoteModule \n\n\n\n\n\nPluginSimpleImageModule \n\nPluginSimpleImageModule \n\nPluginSimpleImageModule  -->\n\nNgxEditorjsPluginsModule->PluginSimpleImageModule \n\n\n\n\n\nPluginWarningModule \n\nPluginWarningModule \n\nPluginWarningModule  -->\n\nNgxEditorjsPluginsModule->PluginWarningModule \n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            libs/ngx-editorjs/ngx-editorjs-plugins/src/lib/ngx-editorjs-plugins.module.ts\n        \n\n\n        \n            Description\n        \n        \n            The NgxEditorjsPluginsModule provides several additional modules\nthat provide a way to easily plug in block and inline tools for EditorJS.\nImporting NgxEditorjsPluginsModule will include all modules, while it\nis also possible to import each individual module as required.\n\n        \n\n\n        \n            \n                \n                    Imports\n                    \n                        \n                            NgxEditorJSPluginServiceModule\n                        \n                        \n                            PluginCodeModule\n                        \n                        \n                            PluginEmbedModule\n                        \n                        \n                            PluginHeaderModule\n                        \n                        \n                            PluginImageModule\n                        \n                        \n                            PluginInlineCodeModule\n                        \n                        \n                            PluginLinkModule\n                        \n                        \n                            PluginListModule\n                        \n                        \n                            PluginMarkerModule\n                        \n                        \n                            PluginParagraphModule\n                        \n                        \n                            PluginQuoteModule\n                        \n                        \n                            PluginSimpleImageModule\n                        \n                        \n                            PluginWarningModule\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            NgxEditorJSPluginServiceModule\n                        \n                        \n                            PluginCodeModule\n                        \n                        \n                            PluginEmbedModule\n                        \n                        \n                            PluginHeaderModule\n                        \n                        \n                            PluginImageModule\n                        \n                        \n                            PluginInlineCodeModule\n                        \n                        \n                            PluginLinkModule\n                        \n                        \n                            PluginListModule\n                        \n                        \n                            PluginMarkerModule\n                        \n                        \n                            PluginParagraphModule\n                        \n                        \n                            PluginQuoteModule\n                        \n                        \n                            PluginSimpleImageModule\n                        \n                        \n                            PluginWarningModule\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\nimport { PluginCodeModule } from './plugins/code/code.module';\nimport { PluginEmbedModule } from './plugins/embed/embed.module';\nimport { PluginHeaderModule } from './plugins/header/header.module';\nimport { PluginImageModule } from './plugins/image/image.module';\nimport { PluginInlineCodeModule } from './plugins/inline-code/inline-code.module';\nimport { PluginLinkModule } from './plugins/link/link.module';\nimport { PluginListModule } from './plugins/list/list.module';\nimport { PluginMarkerModule } from './plugins/marker/marker.module';\nimport { PluginParagraphModule } from './plugins/paragraph/paragraph.module';\nimport { PluginQuoteModule } from './plugins/quote/quote.module';\nimport { PluginSimpleImageModule } from './plugins/simple-image/simple-image.module';\nimport { PluginWarningModule } from './plugins/warning/warning.module';\nimport { NgxEditorJSPluginServiceModule } from './services/plugin-service.module';\n\n/**\n * The `NgxEditorjsPluginsModule` provides several additional modules\n * that provide a way to easily plug in block and inline tools for EditorJS.\n *\n * Importing `NgxEditorjsPluginsModule` will include all modules, while it\n * is also possible to import each individual module as required.\n */\n@NgModule({\n  imports: [\n    CommonModule,\n    NgxEditorJSPluginServiceModule,\n    PluginCodeModule,\n    PluginHeaderModule,\n    PluginImageModule,\n    PluginLinkModule,\n    PluginListModule,\n    PluginMarkerModule,\n    PluginParagraphModule,\n    PluginSimpleImageModule,\n    PluginInlineCodeModule,\n    PluginWarningModule,\n    PluginQuoteModule,\n    PluginEmbedModule\n  ],\n  exports: [\n    NgxEditorJSPluginServiceModule,\n    PluginCodeModule,\n    PluginHeaderModule,\n    PluginImageModule,\n    PluginLinkModule,\n    PluginListModule,\n    PluginMarkerModule,\n    PluginParagraphModule,\n    PluginSimpleImageModule,\n    PluginInlineCodeModule,\n    PluginWarningModule,\n    PluginQuoteModule,\n    PluginEmbedModule\n  ]\n})\nexport class NgxEditorjsPluginsModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/NgxTinynodesComponentsModule.html":{"url":"modules/NgxTinynodesComponentsModule.html","title":"module - NgxTinynodesComponentsModule","body":"\n                   \n\n\n\n\n    Modules\n    NgxTinynodesComponentsModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_NgxTinynodesComponentsModule\n\n\n\ncluster_NgxTinynodesComponentsModule_imports\n\n\n\ncluster_NgxTinynodesComponentsModule_exports\n\n\n\n\nNgxTinynodesMatJsonOutputModule\n\nNgxTinynodesMatJsonOutputModule\n\n\n\nNgxTinynodesComponentsModule\n\nNgxTinynodesComponentsModule\n\nNgxTinynodesComponentsModule -->\n\nNgxTinynodesMatJsonOutputModule->NgxTinynodesComponentsModule\n\n\n\n\n\nNgxTinynodesMatTagInputModule\n\nNgxTinynodesMatTagInputModule\n\nNgxTinynodesComponentsModule -->\n\nNgxTinynodesMatTagInputModule->NgxTinynodesComponentsModule\n\n\n\n\n\nNgxTinynodesMatJsonOutputModule \n\nNgxTinynodesMatJsonOutputModule \n\nNgxTinynodesMatJsonOutputModule  -->\n\nNgxTinynodesComponentsModule->NgxTinynodesMatJsonOutputModule \n\n\n\n\n\nNgxTinynodesMatTagInputModule \n\nNgxTinynodesMatTagInputModule \n\nNgxTinynodesMatTagInputModule  -->\n\nNgxTinynodesComponentsModule->NgxTinynodesMatTagInputModule \n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            libs/ngx-tinynodes-components/src/lib/ngx-tinynodes-components.module.ts\n        \n\n\n\n\n        \n            \n                \n                    Imports\n                    \n                        \n                            NgxTinynodesMatJsonOutputModule\n                        \n                        \n                            NgxTinynodesMatTagInputModule\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            NgxTinynodesMatJsonOutputModule\n                        \n                        \n                            NgxTinynodesMatTagInputModule\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { NgModule } from '@angular/core';\nimport { NgxTinynodesMatTagInputModule } from './components/mat-tag-input/mat-tag-input.module';\nimport { NgxTinynodesMatJsonOutputModule } from './components/mat-json-output/mat-json-output.module';\n\n@NgModule({\n  imports: [ NgxTinynodesMatTagInputModule, NgxTinynodesMatJsonOutputModule ],\n  exports: [ NgxTinynodesMatTagInputModule, NgxTinynodesMatJsonOutputModule ]\n})\nexport class NgxTinynodesComponentsModule {\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/NgxTinynodesMatFieldComponent.html":{"url":"interfaces/NgxTinynodesMatFieldComponent.html","title":"interface - NgxTinynodesMatFieldComponent","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  NgxTinynodesMatFieldComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            libs/ngx-tinynodes-components/src/lib/types/components.ts\n        \n\n\n            \n                Extends\n            \n            \n                        ControlValueAccessor\n            \n\n\n\n\n    \n\n\n    \n        import { ControlValueAccessor } from '@angular/forms';\nimport { MatFormFieldControl } from '@angular/material';\nimport { AfterContentInit, DoCheck, OnDestroy, OnInit } from '@angular/core';\n\nexport interface NgxTinynodesMatFieldComponent extends ControlValueAccessor,\n  MatFormFieldControl,\n  OnInit,\n  OnDestroy,\n  DoCheck,\n  AfterContentInit {\n}\n\n    \n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/NgxTinynodesMatJsonOutputComponent.html":{"url":"components/NgxTinynodesMatJsonOutputComponent.html","title":"component - NgxTinynodesMatJsonOutputComponent","body":"\n                   \n\n\n\n\n\n  Components\n  NgxTinynodesMatJsonOutputComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    libs/ngx-tinynodes-components/src/lib/components/mat-json-output/mat-json-output.component.ts\n\n\n\n\n    \n        Implements\n    \n    \n                    OnChanges\n    \n\n\n\n    Metadata\n    \n        \n\n            \n                changeDetection\n                ChangeDetectionStrategy.OnPush\n            \n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                ngx-tinynodes-mat-json-output\n            \n\n\n\n\n            \n                templateUrl\n                mat-json-output.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngOnChanges\n                            \n                            \n                                    Public\n                                toggleExpand\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                expand\n                            \n                            \n                                json\n                            \n                        \n                    \n                \n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(cd: ChangeDetectorRef)\n                    \n                \n                        \n                            \n                                Defined in libs/ngx-tinynodes-components/src/lib/components/mat-json-output/mat-json-output.component.ts:14\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        cd\n                                                  \n                                                        \n                                                                        ChangeDetectorRef\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        expand\n                    \n                \n                \n                    \n                        Default value : true\n                    \n                \n                        \n                            \n                                    Defined in libs/ngx-tinynodes-components/src/lib/components/mat-json-output/mat-json-output.component.ts:14\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        json\n                    \n                \n                \n                    \n                        Type :         any\n\n                    \n                \n                        \n                            \n                                    Defined in libs/ngx-tinynodes-components/src/lib/components/mat-json-output/mat-json-output.component.ts:11\n                            \n                        \n            \n        \n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngOnChanges\n                        \n                        \n                    \n                \n            \n            \n                \nngOnChanges()\n                \n            \n\n\n            \n                \n                    Defined in libs/ngx-tinynodes-components/src/lib/components/mat-json-output/mat-json-output.component.ts:23\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            toggleExpand\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    toggleExpand()\n                \n            \n\n\n            \n                \n                    Defined in libs/ngx-tinynodes-components/src/lib/components/mat-json-output/mat-json-output.component.ts:19\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n\n\n\n\n    \n        import { ChangeDetectionStrategy, ChangeDetectorRef, Component, Input, OnChanges } from '@angular/core';\n\n@Component({\n  selector: 'ngx-tinynodes-mat-json-output',\n  templateUrl: 'mat-json-output.component.html',\n  changeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class NgxTinynodesMatJsonOutputComponent implements OnChanges {\n\n  @Input()\n  json: any;\n\n  @Input()\n  expand = true;\n\n  constructor(private readonly cd: ChangeDetectorRef) {\n  }\n\n  public toggleExpand() {\n    this.expand = !this.expand;\n  }\n\n  ngOnChanges(): void {\n    this.cd.markForCheck();\n  }\n}\n\n    \n\n    \n        \n  \n    Output\n    Data from the EditorJS instance\n  \n  \n    {{expand ? 'Collapse JSON' : 'Expand JSON'}}\n  \n  \n    \n  \n\n\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '      Output    Data from the EditorJS instance        {{expand ? \\'Collapse JSON\\' : \\'Expand JSON\\'}}          '\n    var COMPONENTS = [{'name': 'NgxEditorJSComponent', 'selector': 'ngx-editorjs'},{'name': 'NgxEditorJSDemoHomeComponent', 'selector': 'ngx-editorjs-demo-home'},{'name': 'NgxEditorJSMatFieldComponent', 'selector': 'ngx-editorjs-mat-field'},{'name': 'NgxTinynodesMaterialFormFieldDemoComponent', 'selector': 'ngx-tinynodes-mat-form-field-demo'},{'name': 'NgxTinynodesMatJsonOutputComponent', 'selector': 'ngx-tinynodes-mat-json-output'},{'name': 'NgxTinynodesMatTagInputComponent', 'selector': 'ngx-tinynodes-mat-tag-input'},{'name': 'PageContainerComponent', 'selector': 'ngx-page-container'}];\n    var DIRECTIVES = [{'name': 'NgxEditorJSDirective', 'selector': '[ngxEditorJS]'}];\n    var ACTUAL_COMPONENT = {'name': 'NgxTinynodesMatJsonOutputComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/NgxTinynodesMatJsonOutputModule.html":{"url":"modules/NgxTinynodesMatJsonOutputModule.html","title":"module - NgxTinynodesMatJsonOutputModule","body":"\n                   \n\n\n\n\n    Modules\n    NgxTinynodesMatJsonOutputModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_NgxTinynodesMatJsonOutputModule\n\n\n\ncluster_NgxTinynodesMatJsonOutputModule_declarations\n\n\n\ncluster_NgxTinynodesMatJsonOutputModule_exports\n\n\n\n\nNgxTinynodesMatJsonOutputComponent\n\nNgxTinynodesMatJsonOutputComponent\n\n\n\nNgxTinynodesMatJsonOutputModule\n\nNgxTinynodesMatJsonOutputModule\n\nNgxTinynodesMatJsonOutputModule -->\n\nNgxTinynodesMatJsonOutputComponent->NgxTinynodesMatJsonOutputModule\n\n\n\n\n\nNgxTinynodesMatJsonOutputComponent \n\nNgxTinynodesMatJsonOutputComponent \n\nNgxTinynodesMatJsonOutputComponent  -->\n\nNgxTinynodesMatJsonOutputModule->NgxTinynodesMatJsonOutputComponent \n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            libs/ngx-tinynodes-components/src/lib/components/mat-json-output/mat-json-output.module.ts\n        \n\n\n\n\n        \n            \n                \n                    Declarations\n                    \n                        \n                            NgxTinynodesMatJsonOutputComponent\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            NgxTinynodesMatJsonOutputComponent\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { NgModule } from '@angular/core';\nimport { NgxTinynodesMatJsonOutputComponent } from './mat-json-output.component';\nimport { CommonModule } from '@angular/common';\nimport { MatButtonModule, MatCardModule } from '@angular/material';\nimport { NgxJsonViewerModule } from 'ngx-json-viewer';\n\n@NgModule({\n  imports: [CommonModule, MatCardModule, MatButtonModule, NgxJsonViewerModule],\n  declarations: [ NgxTinynodesMatJsonOutputComponent ],\n  exports: [ NgxTinynodesMatJsonOutputComponent ]\n})\nexport class NgxTinynodesMatJsonOutputModule {\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/NgxTinynodesMatTagInputModule.html":{"url":"modules/NgxTinynodesMatTagInputModule.html","title":"module - NgxTinynodesMatTagInputModule","body":"\n                   \n\n\n\n\n    Modules\n    NgxTinynodesMatTagInputModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_NgxTinynodesMatTagInputModule\n\n\n\ncluster_NgxTinynodesMatTagInputModule_declarations\n\n\n\ncluster_NgxTinynodesMatTagInputModule_NgxTinynodesMatTagInputComponent_providers\n\n\n\ncluster_NgxTinynodesMatTagInputModule_exports\n\n\n\n\nNgxTinynodesMatTagInputComponent\n\nNgxTinynodesMatTagInputComponent\n\n\n\nNgxTinynodesMatTagInputModule\n\nNgxTinynodesMatTagInputModule\n\nNgxTinynodesMatTagInputModule -->\n\nNgxTinynodesMatTagInputComponent->NgxTinynodesMatTagInputModule\n\n\n\n\n\nNgxTinynodesMatTagInputComponent \n\nNgxTinynodesMatTagInputComponent \n\nNgxTinynodesMatTagInputComponent  -->\n\nNgxTinynodesMatTagInputModule->NgxTinynodesMatTagInputComponent \n\n\n\n\n\nTAG_COMPONENT_VALUE_ACCESSOR\n\nTAG_COMPONENT_VALUE_ACCESSOR\n\nNgxTinynodesMatTagInputComponent -->\n\nTAG_COMPONENT_VALUE_ACCESSOR->NgxTinynodesMatTagInputComponent\n\n\n\n\n\nTAG_COMPONENT_FIELD_CONTROL\n\nTAG_COMPONENT_FIELD_CONTROL\n\nNgxTinynodesMatTagInputComponent -->\n\nTAG_COMPONENT_FIELD_CONTROL->NgxTinynodesMatTagInputComponent\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            libs/ngx-tinynodes-components/src/lib/components/mat-tag-input/mat-tag-input.module.ts\n        \n\n\n\n\n        \n            \n                \n                    Declarations\n                    \n                        \n                            NgxTinynodesMatTagInputComponent\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            NgxTinynodesMatTagInputComponent\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { NgModule } from '@angular/core';\nimport { NgxTinynodesMatTagInputComponent } from './mat-tag-input.component';\nimport { MatChipsModule, MatIconModule } from '@angular/material';\nimport { FormsModule } from '@angular/forms';\nimport { CommonModule } from '@angular/common';\n\n@NgModule({\n  imports: [FormsModule,CommonModule, MatChipsModule, MatIconModule],\n  declarations: [ NgxTinynodesMatTagInputComponent ],\n  exports: [ NgxTinynodesMatTagInputComponent ]\n})\nexport class NgxTinynodesMatTagInputModule {\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/NgxTinynodesMaterialFormFieldDemo.html":{"url":"modules/NgxTinynodesMaterialFormFieldDemo.html","title":"module - NgxTinynodesMaterialFormFieldDemo","body":"\n                   \n\n\n\n\n    Modules\n    NgxTinynodesMaterialFormFieldDemo\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_NgxTinynodesMaterialFormFieldDemo\n\n\n\ncluster_NgxTinynodesMaterialFormFieldDemo_declarations\n\n\n\ncluster_NgxTinynodesMaterialFormFieldDemo_imports\n\n\n\n\nNgxTinynodesMaterialFormFieldDemoComponent\n\nNgxTinynodesMaterialFormFieldDemoComponent\n\n\n\nNgxTinynodesMaterialFormFieldDemo\n\nNgxTinynodesMaterialFormFieldDemo\n\nNgxTinynodesMaterialFormFieldDemo -->\n\nNgxTinynodesMaterialFormFieldDemoComponent->NgxTinynodesMaterialFormFieldDemo\n\n\n\n\n\nNgxEditorJSDemoMaterialModule\n\nNgxEditorJSDemoMaterialModule\n\nNgxTinynodesMaterialFormFieldDemo -->\n\nNgxEditorJSDemoMaterialModule->NgxTinynodesMaterialFormFieldDemo\n\n\n\n\n\nNgxEditorJSModule\n\nNgxEditorJSModule\n\nNgxTinynodesMaterialFormFieldDemo -->\n\nNgxEditorJSModule->NgxTinynodesMaterialFormFieldDemo\n\n\n\n\n\nPageStoreModule\n\nPageStoreModule\n\nNgxTinynodesMaterialFormFieldDemo -->\n\nPageStoreModule->NgxTinynodesMaterialFormFieldDemo\n\n\n\n\n\nPluginCodeModule\n\nPluginCodeModule\n\nNgxTinynodesMaterialFormFieldDemo -->\n\nPluginCodeModule->NgxTinynodesMaterialFormFieldDemo\n\n\n\n\n\nPluginHeaderModule\n\nPluginHeaderModule\n\nNgxTinynodesMaterialFormFieldDemo -->\n\nPluginHeaderModule->NgxTinynodesMaterialFormFieldDemo\n\n\n\n\n\nPluginLinkModule\n\nPluginLinkModule\n\nNgxTinynodesMaterialFormFieldDemo -->\n\nPluginLinkModule->NgxTinynodesMaterialFormFieldDemo\n\n\n\n\n\nPluginListModule\n\nPluginListModule\n\nNgxTinynodesMaterialFormFieldDemo -->\n\nPluginListModule->NgxTinynodesMaterialFormFieldDemo\n\n\n\n\n\nPluginMarkerModule\n\nPluginMarkerModule\n\nNgxTinynodesMaterialFormFieldDemo -->\n\nPluginMarkerModule->NgxTinynodesMaterialFormFieldDemo\n\n\n\n\n\nPluginParagraphModule\n\nPluginParagraphModule\n\nNgxTinynodesMaterialFormFieldDemo -->\n\nPluginParagraphModule->NgxTinynodesMaterialFormFieldDemo\n\n\n\n\n\nPluginSimpleImageModule\n\nPluginSimpleImageModule\n\nNgxTinynodesMaterialFormFieldDemo -->\n\nPluginSimpleImageModule->NgxTinynodesMaterialFormFieldDemo\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            libs/ngx-editorjs/ngx-editorjs-demo/src/lib/demos/material-form-field/material-form-field.module.ts\n        \n\n\n\n\n        \n            \n                \n                    Declarations\n                    \n                        \n                            NgxTinynodesMaterialFormFieldDemoComponent\n                        \n                    \n                \n                \n                    EntryComponents\n                    \n                        \n                            NgxTinynodesMaterialFormFieldDemoComponent\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            NgxEditorJSDemoMaterialModule\n                        \n                        \n                            NgxEditorJSModule\n                        \n                        \n                            PageStoreModule\n                        \n                        \n                            PluginCodeModule\n                        \n                        \n                            PluginHeaderModule\n                        \n                        \n                            PluginLinkModule\n                        \n                        \n                            PluginListModule\n                        \n                        \n                            PluginMarkerModule\n                        \n                        \n                            PluginParagraphModule\n                        \n                        \n                            PluginSimpleImageModule\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { NgModule } from '@angular/core';\nimport { NgxTinynodesMaterialFormFieldDemoComponent } from './containers/material-form-field/material-form-field.component';\nimport { RouterModule, Routes } from '@angular/router';\nimport { NgxEditorJSDemoMaterialModule } from './ngx-editorjs-demo.material.module';\nimport { CommonModule } from '@angular/common';\nimport { NgxTinynodesCoreModule } from '@tinynodes/ngx-tinynodes-core';\nimport { ReactiveFormsModule } from '@angular/forms';\nimport { PageStoreModule } from '../../store/pages/pages.module';\nimport { NgxEditorJSModule } from '@tinynodes/ngx-editorjs';\nimport {\n  PluginCodeModule,\n  PluginHeaderModule,\n  PluginLinkModule,\n  PluginListModule,\n  PluginMarkerModule,\n  PluginParagraphModule,\n  PluginSimpleImageModule\n} from '@tinynodes/ngx-editorjs-plugins';\nimport { NgxJsonViewerModule } from 'ngx-json-viewer';\nimport { NgxTinynodesComponentsModule } from '@tinynodes/ngx-tinynodes-components';\n\nconst routes: Routes = [\n  {\n    path: '',\n    component: NgxTinynodesMaterialFormFieldDemoComponent\n  }\n];\n\n@NgModule({\n  imports: [\n    CommonModule,\n    NgxTinynodesComponentsModule,\n    RouterModule.forChild(routes),\n    ReactiveFormsModule,\n    NgxJsonViewerModule,\n    PageStoreModule,\n    NgxEditorJSModule,\n    PluginHeaderModule,\n    PluginParagraphModule,\n    PluginListModule,\n    PluginCodeModule,\n    PluginSimpleImageModule,\n    PluginLinkModule,\n    PluginMarkerModule,\n    NgxTinynodesCoreModule,\n    NgxEditorJSDemoMaterialModule\n  ],\n  declarations: [ NgxTinynodesMaterialFormFieldDemoComponent ],\n  entryComponents: [ NgxTinynodesMaterialFormFieldDemoComponent ]\n})\nexport class NgxTinynodesMaterialFormFieldDemo {\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/NgxTinynodesMaterialFormFieldDemoComponent.html":{"url":"components/NgxTinynodesMaterialFormFieldDemoComponent.html","title":"component - NgxTinynodesMaterialFormFieldDemoComponent","body":"\n                   \n\n\n\n\n\n  Components\n  NgxTinynodesMaterialFormFieldDemoComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    libs/ngx-editorjs/ngx-editorjs-demo/src/lib/demos/material-form-field/containers/material-form-field/material-form-field.component.ts\n\n\n    \n        Description\n    \n    \n        The Page Container component provides the main routable page for loading\nthe ngx-editorjs-demo\n\n    \n\n\n    \n        Implements\n    \n    \n                    AfterContentInit\n    \n\n\n\n    Metadata\n    \n        \n\n            \n                changeDetection\n                ChangeDetectionStrategy.OnPush\n            \n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                ngx-tinynodes-mat-form-field-demo\n            \n\n            \n                styleUrls\n                material-form-field.component.scss\n            \n\n\n\n            \n                templateUrl\n                material-form-field.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                editorForm\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                clear\n                            \n                            \n                                    Public\n                                disableAutosave\n                            \n                            \n                                    Public\n                                enableAutosave\n                            \n                            \n                                ngAfterContentInit\n                            \n                            \n                                    Public\n                                reset\n                            \n                            \n                                    Public\n                                save\n                            \n                            \n                                    Public\n                                update\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                holder\n                            \n                            \n                                title\n                            \n                        \n                    \n                \n\n\n\n\n                    \n                        \n                            Accessors\n                        \n                    \n                    \n                        \n                            \n                                \n                                    autosave\n                                \n                                \n                                    menu\n                                \n                            \n                        \n                    \n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(pagesService: PagesService, app: AppService, editorService: NgxEditorJSService, cd: ChangeDetectorRef, fb: FormBuilder)\n                    \n                \n                        \n                            \n                                Defined in libs/ngx-editorjs/ngx-editorjs-demo/src/lib/demos/material-form-field/containers/material-form-field/material-form-field.component.ts:51\n                            \n                        \n\n                \n                    \n                            The constructor sets up the blocks to the initial demo data\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        pagesService\n                                                  \n                                                        \n                                                                        PagesService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                The pages service\n\n                                                        \n                                                \n                                                \n                                                        app\n                                                  \n                                                        \n                                                                    AppService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                The application service\n\n                                                        \n                                                \n                                                \n                                                        editorService\n                                                  \n                                                        \n                                                                        NgxEditorJSService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                The Editor service\n\n                                                        \n                                                \n                                                \n                                                        cd\n                                                  \n                                                        \n                                                                        ChangeDetectorRef\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                The change detection ref\n\n                                                        \n                                                \n                                                \n                                                        fb\n                                                  \n                                                        \n                                                                        FormBuilder\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                The form builder\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        holder\n                    \n                \n                \n                    \n                        Default value : 'ngx-editorjs-demo'\n                    \n                \n                        \n                            \n                                    Defined in libs/ngx-editorjs/ngx-editorjs-demo/src/lib/demos/material-form-field/containers/material-form-field/material-form-field.component.ts:30\n                            \n                        \n                \n                    \n                        The holder ID for this demo\n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        title\n                    \n                \n                \n                    \n                        Default value : 'ngx-editorjs Material Field'\n                    \n                \n                        \n                            \n                                    Defined in libs/ngx-editorjs/ngx-editorjs-demo/src/lib/demos/material-form-field/containers/material-form-field/material-form-field.component.ts:25\n                            \n                        \n                \n                    \n                        Title of the page\n\n                    \n                \n            \n        \n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            clear\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    clear(skipSave)\n                \n            \n\n\n            \n                \n                    Defined in libs/ngx-editorjs/ngx-editorjs-demo/src/lib/demos/material-form-field/containers/material-form-field/material-form-field.component.ts:125\n                \n            \n\n\n            \n                \n                    Clear the editor\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                    Default value\n                                    Description\n                                \n                            \n                            \n                                \n                                    skipSave\n\n                                    \n                                        No\n                                    \n\n                                    \n                                        false\n                                    \n\n                                    \n                                        Optional parameter, if set to true the save method won't be called\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            disableAutosave\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    disableAutosave()\n                \n            \n\n\n            \n                \n                    Defined in libs/ngx-editorjs/ngx-editorjs-demo/src/lib/demos/material-form-field/containers/material-form-field/material-form-field.component.ts:109\n                \n            \n\n\n            \n                \n                    Disable autosave\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            enableAutosave\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    enableAutosave(autosaveTime: number)\n                \n            \n\n\n            \n                \n                    Defined in libs/ngx-editorjs/ngx-editorjs-demo/src/lib/demos/material-form-field/containers/material-form-field/material-form-field.component.ts:102\n                \n            \n\n\n            \n                \n                    Enable autosave, set the value from the autosaveTime\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    autosaveTime\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        Time to set for autosave\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngAfterContentInit\n                        \n                        \n                    \n                \n            \n            \n                \nngAfterContentInit()\n                \n            \n\n\n            \n                \n                    Defined in libs/ngx-editorjs/ngx-editorjs-demo/src/lib/demos/material-form-field/containers/material-form-field/material-form-field.component.ts:172\n                \n            \n\n\n            \n                \n                    After the content has init override the blocks with blocks from the service\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            reset\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    reset()\n                \n            \n\n\n            \n                \n                    Defined in libs/ngx-editorjs/ngx-editorjs-demo/src/lib/demos/material-form-field/containers/material-form-field/material-form-field.component.ts:155\n                \n            \n\n\n            \n                \n                    Reset the editor with demo data\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            save\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    save()\n                \n            \n\n\n            \n                \n                    Defined in libs/ngx-editorjs/ngx-editorjs-demo/src/lib/demos/material-form-field/containers/material-form-field/material-form-field.component.ts:116\n                \n            \n\n\n            \n                \n                    Call the editor save method\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            update\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    update(data: OutputData, skipSave)\n                \n            \n\n\n            \n                \n                    Defined in libs/ngx-editorjs/ngx-editorjs-demo/src/lib/demos/material-form-field/containers/material-form-field/material-form-field.component.ts:144\n                \n            \n\n\n            \n                \n                    Update the component\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Default value\n                                    Description\n                                \n                            \n                            \n                                \n                                    data\n                                    \n                                            OutputData\n                                    \n\n                                    \n                                        No\n                                    \n\n                                    \n                                    \n\n                                    \n                                        The data to render in the update\n\n                                    \n                                \n                                \n                                    skipSave\n                                    \n                                    \n\n                                    \n                                        No\n                                    \n\n                                    \n                                        false\n                                    \n\n                                    \n                                        Optional parameter, if set to true the save method won't be called\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            editorForm\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : this.fb.group({\n    pageName: [ '' ],\n    pageTags: new FormControl([]),\n    pageEditor: new FormControl([])\n  })\n                        \n                    \n                        \n                            \n                                    Defined in libs/ngx-editorjs/ngx-editorjs-demo/src/lib/demos/material-form-field/containers/material-form-field/material-form-field.component.ts:34\n                            \n                        \n\n                \n                    \n                        Editor form group\n\n                    \n                \n\n            \n        \n\n\n    \n    \n        Accessors\n    \n        \n            \n                \n                    \n                        \n                        autosave\n                    \n                \n\n                \n                    \n                        getautosave()\n                    \n                \n                            \n                                \n                                    Defined in libs/ngx-editorjs/ngx-editorjs-demo/src/lib/demos/material-form-field/containers/material-form-field/material-form-field.component.ts:86\n                                \n                            \n                    \n                        \n                                Get the current autosave state of the application\n\n\n                        \n                    \n\n            \n        \n        \n            \n                \n                    \n                        \n                        menu\n                    \n                \n\n                \n                    \n                        getmenu()\n                    \n                \n                            \n                                \n                                    Defined in libs/ngx-editorjs/ngx-editorjs-demo/src/lib/demos/material-form-field/containers/material-form-field/material-form-field.component.ts:93\n                                \n                            \n                    \n                        \n                                Get the page links\n\n\n                        \n                    \n\n            \n        \n\n\n\n\n    \n        import { AfterContentInit, ChangeDetectionStrategy, ChangeDetectorRef, Component, Input } from '@angular/core';\nimport { FormBuilder, FormControl } from '@angular/forms';\nimport { Block, NgxEditorJSService } from '@tinynodes/ngx-editorjs';\nimport { AppService, MenuGroup, NgxEditorJSDemo } from '@tinynodes/ngx-tinynodes-core';\nimport { BehaviorSubject, Subject } from 'rxjs';\nimport { distinctUntilChanged, filter, pluck, switchMap, take, takeUntil } from 'rxjs/operators';\nimport { PagesService } from '../../../../store/pages/pages.service';\nimport { OutputData } from '@editorjs/editorjs';\n\n/**\n * The Page Container component provides the main routable page for loading\n * the `ngx-editorjs-demo`\n */\n@Component({\n  selector: 'ngx-tinynodes-mat-form-field-demo',\n  templateUrl: 'material-form-field.component.html',\n  styleUrls: [ 'material-form-field.component.scss' ],\n  changeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class NgxTinynodesMaterialFormFieldDemoComponent implements AfterContentInit {\n  /**\n   * Title of the page\n   */\n  @Input()\n  public title = 'ngx-editorjs Material Field';\n  /**\n   * The holder ID for this demo\n   */\n  @Input()\n  public holder = 'ngx-editorjs-demo';\n  /**\n   * Editor form group\n   */\n  public editorForm = this.fb.group({\n    pageName: [ '' ],\n    pageTags: new FormControl([]),\n    pageEditor: new FormControl([])\n  });\n  /**\n   * Internal onDestroy$ subject\n   */\n  private onDestroy$ = new Subject();\n\n  /**\n   * Menu state for the component\n   */\n  private menu$ = new BehaviorSubject(undefined);\n  /**\n   * Autosave state\n   */\n  private autoSave$ = new BehaviorSubject(0);\n\n  /**\n   * The constructor sets up the blocks to the initial demo data\n   * @param pagesService The pages service\n   * @param app The application service\n   * @param editorService The Editor service\n   * @param cd The change detection ref\n   * @param fb The form builder\n   */\n  constructor(\n    private readonly pagesService: PagesService,\n    private app: AppService,\n    private readonly editorService: NgxEditorJSService,\n    private readonly cd: ChangeDetectorRef,\n    private readonly fb: FormBuilder\n  ) {\n    this.editorService\n      .lastChange({ holder: this.holder })\n      .pipe(\n        takeUntil(this.onDestroy$)\n      )\n      .subscribe(hasChanged => {\n        if (hasChanged && hasChanged.blocks) {\n          this.editorForm.patchValue({\n            pageEditor: hasChanged.blocks\n          });\n          this.cd.markForCheck();\n        }\n      });\n  }\n\n  /**\n   * Get the current autosave state of the application\n   */\n  public get autosave() {\n    return this.autoSave$.asObservable();\n  }\n\n  /**\n   * Get the page links\n   */\n  public get menu() {\n    return this.menu$;\n  }\n\n\n  /**\n   * Enable autosave, set the value from the autosaveTime\n   * @param autosaveTime Time to set for autosave\n   */\n  public enableAutosave(autosaveTime: number) {\n    this.autoSave$.next(autosaveTime);\n  }\n\n  /**\n   * Disable autosave\n   */\n  public disableAutosave() {\n    this.autoSave$.next(0);\n  }\n\n  /**\n   * Call the editor save method\n   */\n  public save() {\n    this.editorService.save({ holder: this.holder }).subscribe();\n    this.cd.markForCheck();\n  }\n\n  /**\n   * Clear the editor\n   * @param skipSave Optional parameter, if set to true the save method won't be called\n   */\n  public clear(skipSave = false) {\n    this.editorForm.reset({\n      pageName: '',\n      pageTags: [],\n    });\n\n    this.editorService\n      .clear({ holder: this.holder, skipSave })\n      .pipe(take(1))\n      .subscribe();\n\n    this.cd.markForCheck();\n  }\n\n  /**\n   * Update the component\n   * @param data The data to render in the update\n   * @param skipSave Optional parameter, if set to true the save method won't be called\n   */\n  public update(data: OutputData, skipSave = false) {\n    this.editorService\n      .update({ holder: this.holder, data, skipSave })\n      .pipe(take(1))\n      .subscribe();\n    this.cd.markForCheck();\n  }\n\n  /**\n   * Reset the editor with demo data\n   */\n  public reset() {\n    this.app\n      .getDemoData('material-form-field-demo')\n      .pipe(take(1))\n      .subscribe(data => {\n        this.menu$.next(data.links);\n        this.editorForm.patchValue({\n          pageName: 'A test page for the Material EditorJS Component',\n          pageTags: ['Angular', 'Material', 'EditorJS', 'TypeScript', 'Open Source']\n        })\n        this.update({ time: Date.now(), blocks: data.blocks });\n      });\n  }\n\n  /**\n   * After the content has init override the blocks with blocks from the service\n   */\n  ngAfterContentInit() {\n    this.reset();\n  }\n}\n\n    \n\n    \n        \n  \n    \n      @tinynodes/ngx-editor Material Field Demo\n      A single page demo of the EditorJS Material Field component\n    \n\n    \n      \n    \n\n    \n      Save\n      Clear\n      Reset\n      \n        Enable Editor Autosave\n      \n       0\" (click)=\"disableAutosave()\">Disable\n        Editor Autosave\n      \n\n\n      \n        Autosave Time\n        \n        seconds\n         0\">\n          EditorJS Autosave is enabled, now when you focus on the component the reactive form value will be updated -\n          You still need to call\n          save to save all the form data.\n        \n      \n    \n    \n      \n        \n          Page Name\n          \n          Enter the name for this page\n        \n        \n          Page Tags\n          \n        \n        \n          Content Editor for {{ editorForm.value.pageName || 'Page Name' }}\n          Click on the editor to active it\n          \n        \n      \n    \n    \n      \n    \n  \n\n\n\n  \n    Below is an instance of an {{ title }} EditorJS Material component. Click on the area and the block\n    tool will appear, or you can just start typing a paragraph.\n  \n  \n    The default block is a &lt;p> paragraph, you can also add header &lt;h1> - &lt;h6> blocks,\n    list with &lt;ol> / &lt;li> and &lt;code> blocks.\n  \n\n  \n    You can also paste in an &lt;img> url into the editor and it will start the SimpleImage\n    plugin which provides\n    an &lt;img> tag pointing to the image, and with some additional controls.\n  \n  \n    When saving check the output panel below to see the data results. The save, clear and reset buttons work on\n    the entire form.  The Autosave feature enables the `EditorJS` instance to update the form value on any changes  It also updates\n    on a regular basis to ensure the content is in the form. With autosave off you need to call save on the form to get the value.\n  \n\n\n    \n\n    \n                \n                    material-form-field.component.scss\n                \n                :host {\n  width: 100%;\n  height: 100vh;\n}\n\n.output-card {\n  height: 100vh;\n  flex: 1;\n  width: 100%;\n  overflow: scroll;\n}\n\n.form-content form {\n  display: flex;\n  flex-direction: column;\n}\n\n.form-content > * {\n  width: 100%;\n}\n\n.mat-form-field {\n  margin-bottom: 15px;\n}\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '            @tinynodes/ngx-editor Material Field Demo      A single page demo of the EditorJS Material Field component                            Save      Clear      Reset              Enable Editor Autosave             0\" (click)=\"disableAutosave()\">Disable        Editor Autosave                    Autosave Time                seconds         0\">          EditorJS Autosave is enabled, now when you focus on the component the reactive form value will be updated -          You still need to call          save to save all the form data.                                              Page Name                    Enter the name for this page                          Page Tags                                    Content Editor for {{ editorForm.value.pageName || \\'Page Name\\' }}          Click on the editor to active it                                                  Below is an instance of an {{ title }} EditorJS Material component. Click on the area and the block    tool will appear, or you can just start typing a paragraph.        The default block is a  paragraph, you can also add header  -  blocks,    list with  /  and  blocks.        You can also paste in an  url into the editor and it will start the SimpleImage    plugin which provides    an  tag pointing to the image, and with some additional controls.        When saving check the output panel below to see the data results. The save, clear and reset buttons work on    the entire form.  The Autosave feature enables the `EditorJS` instance to update the form value on any changes  It also updates    on a regular basis to ensure the content is in the form. With autosave off you need to call save on the form to get the value.  '\n    var COMPONENTS = [{'name': 'NgxEditorJSComponent', 'selector': 'ngx-editorjs'},{'name': 'NgxEditorJSDemoHomeComponent', 'selector': 'ngx-editorjs-demo-home'},{'name': 'NgxEditorJSMatFieldComponent', 'selector': 'ngx-editorjs-mat-field'},{'name': 'NgxTinynodesMaterialFormFieldDemoComponent', 'selector': 'ngx-tinynodes-mat-form-field-demo'},{'name': 'NgxTinynodesMatJsonOutputComponent', 'selector': 'ngx-tinynodes-mat-json-output'},{'name': 'NgxTinynodesMatTagInputComponent', 'selector': 'ngx-tinynodes-mat-tag-input'},{'name': 'PageContainerComponent', 'selector': 'ngx-page-container'}];\n    var DIRECTIVES = [{'name': 'NgxEditorJSDirective', 'selector': '[ngxEditorJS]'}];\n    var ACTUAL_COMPONENT = {'name': 'NgxTinynodesMaterialFormFieldDemoComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/Page.html":{"url":"interfaces/Page.html","title":"interface - Page","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  Page\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            libs/ngx-editorjs/ngx-editorjs-demo/src/lib/store/pages/pages.models.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        blocks\n                                \n                                \n                                        id\n                                \n                                \n                                        pageTags\n                                \n                                \n                                        pageTitle\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        blocks\n                                    \n                                \n                                \n                                    \n                                        blocks:     PageBlock[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     PageBlock[]\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        id\n                                    \n                                \n                                \n                                    \n                                        id:     ID\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     ID\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        pageTags\n                                    \n                                \n                                \n                                    \n                                        pageTags:         Tag[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         Tag[]\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        pageTitle\n                                    \n                                \n                                \n                                    \n                                        pageTitle:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { ID } from '@datorama/akita';\nimport { Block } from '@tinynodes/ngx-editorjs';\n\nexport interface Tag {\n  key: string;\n}\n\nexport interface PageBlock extends Block {\n  id: ID;\n}\n\nexport interface Page {\n  id: ID;\n  pageTitle: string;\n  pageTags: Tag[];\n  blocks: PageBlock[];\n}\n\n    \n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/PageBlock.html":{"url":"interfaces/PageBlock.html","title":"interface - PageBlock","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  PageBlock\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            libs/ngx-editorjs/ngx-editorjs-demo/src/lib/store/pages/pages.models.ts\n        \n\n\n            \n                Extends\n            \n            \n                        Block\n            \n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        id\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        id\n                                    \n                                \n                                \n                                    \n                                        id:     ID\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     ID\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { ID } from '@datorama/akita';\nimport { Block } from '@tinynodes/ngx-editorjs';\n\nexport interface Tag {\n  key: string;\n}\n\nexport interface PageBlock extends Block {\n  id: ID;\n}\n\nexport interface Page {\n  id: ID;\n  pageTitle: string;\n  pageTags: Tag[];\n  blocks: PageBlock[];\n}\n\n    \n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/PageContainerComponent.html":{"url":"components/PageContainerComponent.html","title":"component - PageContainerComponent","body":"\n                   \n\n\n\n\n\n  Components\n  PageContainerComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    libs/ngx-editorjs/ngx-editorjs-demo/src/lib/containers/page-container/page-container.component.ts\n\n\n    \n        Description\n    \n    \n        The Page Container provided the basic demo for the ngx-editorjs component\n\n    \n\n\n    \n        Implements\n    \n    \n                    AfterContentInit\n    \n\n\n\n    Metadata\n    \n        \n\n            \n                changeDetection\n                ChangeDetectionStrategy.OnPush\n            \n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                ngx-page-container\n            \n\n            \n                styleUrls\n                page-container.component.scss\n            \n\n\n\n            \n                templateUrl\n                page-container.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                holder\n                            \n                            \n                                ngxEditorJS\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                clear\n                            \n                            \n                                ngAfterContentInit\n                            \n                            \n                                    Public\n                                reset\n                            \n                            \n                                    Public\n                                save\n                            \n                        \n                    \n                \n\n\n\n\n\n                    \n                        \n                            Accessors\n                        \n                    \n                    \n                        \n                            \n                                \n                                    blocks\n                                \n                                \n                                    menu\n                                \n                                \n                                    pages\n                                \n                                \n                                    asJSON\n                                \n                            \n                        \n                    \n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(pagesService: PagesService, app: AppService, editorService: NgxEditorJSService, cd: ChangeDetectorRef)\n                    \n                \n                        \n                            \n                                Defined in libs/ngx-editorjs/ngx-editorjs-demo/src/lib/containers/page-container/page-container.component.ts:35\n                            \n                        \n\n                \n                    \n                            The constructor sets up the blocks to the initial demo data\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        pagesService\n                                                  \n                                                        \n                                                                        PagesService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                The pages service\n\n                                                        \n                                                \n                                                \n                                                        app\n                                                  \n                                                        \n                                                                    AppService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                The application service\n\n                                                        \n                                                \n                                                \n                                                        editorService\n                                                  \n                                                        \n                                                                        NgxEditorJSService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                The Editor service\n\n                                                        \n                                                \n                                                \n                                                        cd\n                                                  \n                                                        \n                                                                        ChangeDetectorRef\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                The change detection ref\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            clear\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    clear()\n                \n            \n\n\n            \n                \n                    Defined in libs/ngx-editorjs/ngx-editorjs-demo/src/lib/containers/page-container/page-container.component.ts:86\n                \n            \n\n\n            \n                \n                    Clear the editor\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngAfterContentInit\n                        \n                        \n                    \n                \n            \n            \n                \nngAfterContentInit()\n                \n            \n\n\n            \n                \n                    Defined in libs/ngx-editorjs/ngx-editorjs-demo/src/lib/containers/page-container/page-container.component.ts:119\n                \n            \n\n\n            \n                \n                    After the content has init override the blocks with blocks from the service\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            reset\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    reset()\n                \n            \n\n\n            \n                \n                    Defined in libs/ngx-editorjs/ngx-editorjs-demo/src/lib/containers/page-container/page-container.component.ts:93\n                \n            \n\n\n            \n                \n                    Reset the editor with demo data\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            save\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    save()\n                \n            \n\n\n            \n                \n                    Defined in libs/ngx-editorjs/ngx-editorjs-demo/src/lib/containers/page-container/page-container.component.ts:79\n                \n            \n\n\n            \n                \n                    Call the editor save method\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            holder\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Default value : 'ngx-editorjs-demo'\n                        \n                    \n                        \n                            \n                                    Defined in libs/ngx-editorjs/ngx-editorjs-demo/src/lib/containers/page-container/page-container.component.ts:28\n                            \n                        \n\n                \n                    \n                        The holder ID for this demo\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            ngxEditorJS\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         NgxEditorJSComponent\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @ViewChild('ngxEditorJS', {read: NgxEditorJSComponent, static: true})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in libs/ngx-editorjs/ngx-editorjs-demo/src/lib/containers/page-container/page-container.component.ts:35\n                            \n                        \n\n\n            \n        \n\n\n    \n    \n        Accessors\n    \n        \n            \n                \n                    \n                        \n                        blocks\n                    \n                \n\n                \n                    \n                        getblocks()\n                    \n                \n                            \n                                \n                                    Defined in libs/ngx-editorjs/ngx-editorjs-demo/src/lib/containers/page-container/page-container.component.ts:55\n                                \n                            \n                    \n                        \n                                Get the blocks from the last change\n\n\n                        \n                    \n\n            \n        \n        \n            \n                \n                    \n                        \n                        menu\n                    \n                \n\n                \n                    \n                        getmenu()\n                    \n                \n                            \n                                \n                                    Defined in libs/ngx-editorjs/ngx-editorjs-demo/src/lib/containers/page-container/page-container.component.ts:65\n                                \n                            \n                    \n                        \n                                Get the page links\n\n\n                        \n                    \n\n            \n        \n        \n            \n                \n                    \n                        \n                        pages\n                    \n                \n\n                \n                    \n                        getpages()\n                    \n                \n                            \n                                \n                                    Defined in libs/ngx-editorjs/ngx-editorjs-demo/src/lib/containers/page-container/page-container.component.ts:72\n                                \n                            \n                    \n                        \n                                Get a list of pages\n\n\n                                \n                                    Returns :         Observable\n\n                                \n                        \n                    \n\n            \n        \n        \n            \n                \n                    \n                        \n                        asJSON\n                    \n                \n\n                \n                    \n                        getasJSON()\n                    \n                \n                            \n                                \n                                    Defined in libs/ngx-editorjs/ngx-editorjs-demo/src/lib/containers/page-container/page-container.component.ts:106\n                                \n                            \n                    \n                        \n                                Get the blocks data as formatted JSON\n\n\n                        \n                    \n\n            \n        \n\n\n\n\n    \n        import { AfterContentInit, ChangeDetectionStrategy, ChangeDetectorRef, Component, ViewChild } from '@angular/core';\nimport { Block, NgxEditorJSComponent, NgxEditorJSService } from '@tinynodes/ngx-editorjs';\nimport { AppService, MenuGroup, NgxEditorJSDemo } from '@tinynodes/ngx-tinynodes-core';\nimport { BehaviorSubject, Observable, Subject } from 'rxjs';\nimport { map, pluck, switchMap, take, takeUntil, tap } from 'rxjs/operators';\nimport { Page } from '../../store/pages/pages.models';\nimport { PagesService } from '../../store/pages/pages.service';\nimport { OutputData } from '@editorjs/editorjs';\n\n/**\n * The Page Container provided the basic demo for the `ngx-editorjs` component\n */\n@Component({\n  selector: 'ngx-page-container',\n  templateUrl: 'page-container.component.html',\n  styleUrls: [ 'page-container.component.scss' ],\n  changeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class PageContainerComponent implements AfterContentInit {\n  /**\n   * Internal onDestroy$ subject\n   */\n  private readonly onDestroy$ = new Subject();\n\n  /**\n   * The holder ID for this demo\n   */\n  public holder = 'ngx-editorjs-demo';\n\n  /**\n   * Links for the page\n   */\n  private menu$ = new BehaviorSubject(undefined);\n\n  @ViewChild('ngxEditorJS', { read: NgxEditorJSComponent, static: true }) ngxEditorJS: NgxEditorJSComponent;\n\n  /**\n   * The constructor sets up the blocks to the initial demo data\n   * @param pagesService The pages service\n   * @param app The application service\n   * @param editorService The Editor service\n   * @param cd The change detection ref\n   */\n  constructor(\n    private readonly pagesService: PagesService,\n    private readonly app: AppService,\n    private readonly editorService: NgxEditorJSService,\n    private readonly cd: ChangeDetectorRef\n  ) {\n  }\n\n  /**\n   * Get the blocks from the last change\n   */\n  public get blocks() {\n    return this.editorService.lastChange({ holder: this.holder }).pipe(\n      pluck('blocks'),\n      takeUntil(this.onDestroy$)\n    );\n  }\n\n  /**\n   * Get the page links\n   */\n  public get menu() {\n    return this.menu$;\n  }\n\n  /**\n   * Get a list of pages\n   */\n  get pages(): Observable {\n    return this.pagesService.pages;\n  }\n\n  /**\n   * Call the editor save method\n   */\n  public save() {\n    this.editorService.save({ holder: this.holder });\n  }\n\n  /**\n   * Clear the editor\n   */\n  public clear() {\n    this.editorService.clear({ holder: this.holder });\n  }\n\n  /**\n   * Reset the editor with demo data\n   */\n  public reset() {\n    this.app\n      .getDemoData('ngx-editorjs-demo')\n      .pipe(take(1), switchMap((data: NgxEditorJSDemo) => {\n        this.menu$.next(data.links);\n        return this.editorService.update({ holder: this.holder, data: { blocks: data.blocks } }).pipe(take(1));\n      }))\n      .subscribe();\n  }\n\n  /**\n   * Get the blocks data as formatted JSON\n   */\n  public get asJSON() {\n    return this.blocks.pipe(\n      take(1),\n      map(blocks => {\n        return JSON.stringify(blocks, null, 4);\n      }),\n      tap(() => this.cd.markForCheck())\n    );\n  }\n\n  /**\n   * After the content has init override the blocks with blocks from the service\n   */\n  ngAfterContentInit() {\n    this.reset();\n  }\n}\n\n    \n\n    \n        \n  \n    \n      @tinynodes/ngx-editor Demo\n      A single page demo of the EditorJS component\n    \n    \n      \n    \n\n    \n      \n        Demo\n        Save\n        Clear\n        Reset\n      \n      \n        \n          Ready: {{ ngxEditorJS.isReady | async }}\n          Has Changed:\n            {{ change.time }}\n            0\n          \n          Touched: {{ ngxEditorJS.isTouched | async }}\n          Focused: {{ ngxEditorJS.isFocused | async }}\n          Saved: {{ ngxEditorJS.hasSaved | async }}\n        \n      \n      \n    \n    \n      \n        \n          Output\n          Data from the EditorJS instance\n        \n        \n          {{ asJSON | async }}\n        \n      \n    \n     \n  \n\n\n\n  \n    Below is an instance of an EditorJS block editor. Click on the area and the block tool will appear, or you can just start\n    typing.\n  \n  \n    The default block is a &lt;p> paragraph, you can also add header &lt;h1> - &lt;h6> blocks, list with\n    &lt;ol> / &lt;li> and &lt;code> blocks.\n  \n\n  \n    You can also paste in an &lt;img> url into the editor and it will start the SimpleImage plugin which provides\n    an &lt;img> tag pointing to the image, and with some additional controls.\n  \n  \n    When saving check the output panel below to see the data results.\n  \n\n\n    \n\n    \n                \n                    page-container.component.scss\n                \n                :host {\n  width: 100%;\n  height: 100vh;\n}\n\n.output-card {\n  height: 100vh;\n  flex: 1;\n  width: 100%;\n  overflow: scroll;\n}\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '            @tinynodes/ngx-editor Demo      A single page demo of the EditorJS component                                    Demo        Save        Clear        Reset                              Ready: {{ ngxEditorJS.isReady | async }}          Has Changed:            {{ change.time }}            0                    Touched: {{ ngxEditorJS.isTouched | async }}          Focused: {{ ngxEditorJS.isFocused | async }}          Saved: {{ ngxEditorJS.hasSaved | async }}                                                    Output          Data from the EditorJS instance                          {{ asJSON | async }}                               Below is an instance of an EditorJS block editor. Click on the area and the block tool will appear, or you can just start    typing.        The default block is a  paragraph, you can also add header  -  blocks, list with     /  and  blocks.        You can also paste in an  url into the editor and it will start the SimpleImage plugin which provides    an  tag pointing to the image, and with some additional controls.        When saving check the output panel below to see the data results.  '\n    var COMPONENTS = [{'name': 'NgxEditorJSComponent', 'selector': 'ngx-editorjs'},{'name': 'NgxEditorJSDemoHomeComponent', 'selector': 'ngx-editorjs-demo-home'},{'name': 'NgxEditorJSMatFieldComponent', 'selector': 'ngx-editorjs-mat-field'},{'name': 'NgxTinynodesMaterialFormFieldDemoComponent', 'selector': 'ngx-tinynodes-mat-form-field-demo'},{'name': 'NgxTinynodesMatJsonOutputComponent', 'selector': 'ngx-tinynodes-mat-json-output'},{'name': 'NgxTinynodesMatTagInputComponent', 'selector': 'ngx-tinynodes-mat-tag-input'},{'name': 'PageContainerComponent', 'selector': 'ngx-page-container'}];\n    var DIRECTIVES = [{'name': 'NgxEditorJSDirective', 'selector': '[ngxEditorJS]'}];\n    var ACTUAL_COMPONENT = {'name': 'PageContainerComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/PageStoreModule.html":{"url":"modules/PageStoreModule.html","title":"module - PageStoreModule","body":"\n                   \n\n\n\n\n    Modules\n    PageStoreModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_PageStoreModule\n\n\n\ncluster_PageStoreModule_providers\n\n\n\n\nPagesQuery\n\nPagesQuery\n\n\n\nPageStoreModule\n\nPageStoreModule\n\nPageStoreModule -->\n\nPagesQuery->PageStoreModule\n\n\n\n\n\nPagesService\n\nPagesService\n\nPageStoreModule -->\n\nPagesService->PageStoreModule\n\n\n\n\n\nPagesStore\n\nPagesStore\n\nPageStoreModule -->\n\nPagesStore->PageStoreModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            libs/ngx-editorjs/ngx-editorjs-demo/src/lib/store/pages/pages.module.ts\n        \n\n\n        \n            Description\n        \n        \n            WARNING: This module is currently in development\nInternal page store module, this will allow the ngx-editorjs-demo to support the creation of multiple pages\n\n        \n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            PagesQuery\n                        \n                        \n                            PagesService\n                        \n                        \n                            PagesStore\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { NgModule } from '@angular/core';\nimport { PagesQuery } from './pages.query';\nimport { PagesService } from './pages.service';\nimport { PagesStore } from './pages.store';\n\n/**\n *\n * **WARNING**: This module is currently in development\n *\n * Internal page store module, this will allow the `ngx-editorjs-demo` to support the creation of multiple pages\n */\n@NgModule({\n  providers: [PagesStore, PagesQuery, PagesService]\n})\nexport class PageStoreModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/PagesQuery.html":{"url":"injectables/PagesQuery.html","title":"injectable - PagesQuery","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  PagesQuery\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            libs/ngx-editorjs/ngx-editorjs-demo/src/lib/store/pages/pages.query.ts\n        \n\n\n            \n                Extends\n            \n            \n                    QueryEntity\n            \n\n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(store: PagesStore)\n                    \n                \n                        \n                            \n                                Defined in libs/ngx-editorjs/ngx-editorjs-demo/src/lib/store/pages/pages.query.ts:7\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        store\n                                                  \n                                                        \n                                                                        PagesStore\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { QueryEntity } from '@datorama/akita';\nimport { Page } from './pages.models';\nimport { PagesState, PagesStore } from './pages.store';\n\n@Injectable()\nexport class PagesQuery extends QueryEntity {\n  constructor(protected store: PagesStore) {\n    super(store);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/PagesService.html":{"url":"injectables/PagesService.html","title":"injectable - PagesService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  PagesService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            libs/ngx-editorjs/ngx-editorjs-demo/src/lib/store/pages/pages.service.ts\n        \n\n            \n                Description\n            \n            \n                This page service provides a way to save and render pages\nvia the store\n\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                    Readonly\n                                query\n                            \n                            \n                                    Public\n                                    Readonly\n                                store\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                add\n                            \n                            \n                                addBlock\n                            \n                            \n                                delete\n                            \n                            \n                                removeBlock\n                            \n                            \n                                setBlocks\n                            \n                            \n                                upsert\n                            \n                        \n                    \n                \n\n\n\n\n\n                    \n                        \n                            Accessors\n                        \n                    \n                    \n                        \n                            \n                                \n                                    pages\n                                \n                            \n                        \n                    \n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(query: PagesQuery, store: PagesStore)\n                    \n                \n                        \n                            \n                                Defined in libs/ngx-editorjs/ngx-editorjs-demo/src/lib/store/pages/pages.service.ts:15\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        query\n                                                  \n                                                        \n                                                                        PagesQuery\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        store\n                                                  \n                                                        \n                                                                        PagesStore\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            add\n                        \n                        \n                    \n                \n            \n            \n                \nadd(page?: Page)\n                \n            \n\n\n            \n                \n                    Defined in libs/ngx-editorjs/ngx-editorjs-demo/src/lib/store/pages/pages.service.ts:32\n                \n            \n\n\n            \n                \n                    Add a page to the store\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    page\n                                    \n                                                Page\n                                    \n\n                                    \n                                        Yes\n                                    \n\n\n                                    \n                                        An optional page to be added\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            addBlock\n                        \n                        \n                    \n                \n            \n            \n                \naddBlock(pageId: ID, block: Block)\n                \n            \n\n\n            \n                \n                    Defined in libs/ngx-editorjs/ngx-editorjs-demo/src/lib/store/pages/pages.service.ts:64\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    pageId\n                                    \n                                            ID\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    block\n                                    \n                                                Block\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            delete\n                        \n                        \n                    \n                \n            \n            \n                \ndelete(pageId: ID)\n                \n            \n\n\n            \n                \n                    Defined in libs/ngx-editorjs/ngx-editorjs-demo/src/lib/store/pages/pages.service.ts:56\n                \n            \n\n\n            \n                \n                    Removes a page\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    pageId\n                                    \n                                            ID\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        The ID of the page to be removed\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            removeBlock\n                        \n                        \n                    \n                \n            \n            \n                \nremoveBlock(pageId: ID, block: PageBlock)\n                \n            \n\n\n            \n                \n                    Defined in libs/ngx-editorjs/ngx-editorjs-demo/src/lib/store/pages/pages.service.ts:70\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    pageId\n                                    \n                                            ID\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    block\n                                    \n                                                PageBlock\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            setBlocks\n                        \n                        \n                    \n                \n            \n            \n                \nsetBlocks(pageId: ID | any, blocks: PageBlock[])\n                \n            \n\n\n            \n                \n                    Defined in libs/ngx-editorjs/ngx-editorjs-demo/src/lib/store/pages/pages.service.ts:60\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    pageId\n                                    \n                                            ID | any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    blocks\n                                    \n                                            PageBlock[]\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            upsert\n                        \n                        \n                    \n                \n            \n            \n                \nupsert(page: Page)\n                \n            \n\n\n            \n                \n                    Defined in libs/ngx-editorjs/ngx-editorjs-demo/src/lib/store/pages/pages.service.ts:47\n                \n            \n\n\n            \n                \n                    Updates or creates a page\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    page\n                                    \n                                                Page\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        The page to be updated, if not available it will be created\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                                Readonly\n                            query\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         PagesQuery\n\n                        \n                    \n                        \n                            \n                                    Defined in libs/ngx-editorjs/ngx-editorjs-demo/src/lib/store/pages/pages.service.ts:17\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                                Readonly\n                            store\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         PagesStore\n\n                        \n                    \n                        \n                            \n                                    Defined in libs/ngx-editorjs/ngx-editorjs-demo/src/lib/store/pages/pages.service.ts:17\n                            \n                        \n\n\n            \n        \n\n\n            \n    \n        Accessors\n    \n        \n            \n                \n                    \n                        \n                        pages\n                    \n                \n\n                \n                    \n                        getpages()\n                    \n                \n                            \n                                \n                                    Defined in libs/ngx-editorjs/ngx-editorjs-demo/src/lib/store/pages/pages.service.ts:24\n                                \n                            \n                    \n                        \n                                Get an observable of all the pages in the store\n\n\n                                \n                                    Returns :         Observable\n\n                                \n                        \n                    \n\n            \n        \n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { arrayAdd, arrayRemove, guid, ID } from '@datorama/akita';\nimport { Block } from '@tinynodes/ngx-editorjs';\nimport { Observable } from 'rxjs';\nimport { Page, PageBlock } from './pages.models';\nimport { PagesQuery } from './pages.query';\nimport { PagesStore } from './pages.store';\n\n/**\n * This page service provides a way to save and render pages\n * via the store\n */\n@Injectable()\nexport class PagesService {\n  private pages$: Observable;\n\n  constructor(public readonly query: PagesQuery, public readonly store: PagesStore) {\n    this.pages$ = this.query.selectAll();\n  }\n\n  /**\n   * Get an observable of all the pages in the store\n   */\n  get pages(): Observable {\n    return this.pages$;\n  }\n\n  /**\n   * Add a page to the store\n   * @param page An optional page to be added\n   */\n  add(page?: Page) {\n    const newPage: Page = {\n      id: guid(),\n      pageTitle: 'New Page',\n      pageTags: [],\n      blocks: [],\n      ...page\n    };\n    this.store.add(newPage);\n  }\n\n  /**\n   * Updates or creates a page\n   * @param page The page to be updated, if not available it will be created\n   */\n  upsert(page: Page) {\n    if (!page.id) page.id = guid();\n    this.store.upsert(page.id, page);\n  }\n\n  /**\n   * Removes a page\n   * @param pageId The ID of the page to be removed\n   */\n  delete(pageId: ID) {\n    this.store.remove(pageId);\n  }\n\n  setBlocks(pageId: ID | any, blocks: PageBlock[]) {\n    this.store.update(pageId, { blocks });\n  }\n\n  addBlock(pageId: ID, block: Block) {\n    this.store.update(pageId, (entity: Page) => ({\n      blocks: arrayAdd(entity.blocks, { id: guid(), ...block })\n    }));\n  }\n\n  removeBlock(pageId: ID, block: PageBlock) {\n    this.store.update(pageId, (entity: Page) => ({\n      blocks: arrayRemove(entity.blocks, block.id)\n    }));\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/PagesState.html":{"url":"interfaces/PagesState.html","title":"interface - PagesState","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  PagesState\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            libs/ngx-editorjs/ngx-editorjs-demo/src/lib/store/pages/pages.store.ts\n        \n\n\n            \n                Extends\n            \n            \n                    EntityState\n            \n\n\n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { EntityState, EntityStore, StoreConfig } from '@datorama/akita';\nimport { Page } from './pages.models';\n\nexport interface PagesState extends EntityState {}\n\n@Injectable()\n@StoreConfig({ name: 'pages' })\nexport class PagesStore extends EntityStore {\n  constructor() {\n    super();\n  }\n}\n\n    \n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/PagesStore.html":{"url":"injectables/PagesStore.html","title":"injectable - PagesStore","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  PagesStore\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            libs/ngx-editorjs/ngx-editorjs-demo/src/lib/store/pages/pages.store.ts\n        \n\n\n            \n                Extends\n            \n            \n                    EntityStore\n            \n\n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in libs/ngx-editorjs/ngx-editorjs-demo/src/lib/store/pages/pages.store.ts:9\n                            \n                        \n\n            \n        \n\n\n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { EntityState, EntityStore, StoreConfig } from '@datorama/akita';\nimport { Page } from './pages.models';\n\nexport interface PagesState extends EntityState {}\n\n@Injectable()\n@StoreConfig({ name: 'pages' })\nexport class PagesStore extends EntityStore {\n  constructor() {\n    super();\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/Paragraph.html":{"url":"interfaces/Paragraph.html","title":"interface - Paragraph","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  Paragraph\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            libs/ngx-editorjs/ngx-editorjs/src/lib/types/blocks.ts\n        \n\n            \n                Description\n            \n            \n                Default data type for a paragraph block\n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        text\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        text\n                                    \n                                \n                                \n                                    \n                                        text:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    The paragraph text\n\n                                \n                            \n                        \n                    \n            \n    \n\n\n    \n        export interface Block {\n  /**\n   * The EditorJS block type\n   */\n  type: string;\n\n  /**\n   * The data interface for the block type\n   */\n  data: T;\n\n  /**\n   * Additional properties on the type\n   */\n  [key: string]: any;\n}\n\n/**\n * Available list styles, supports `ordered` and `unordered`.\n * A custom string can also be added\n */\nexport type ListStyle = 'ordered' | 'unordered' | string;\n\n/**\n * Default data type for a list block\n */\nexport interface List {\n  /**\n   * The list style\n   */\n  style: ListStyle;\n  /**\n   * List items of type T\n   */\n  items: T[];\n}\n\n/**\n * The default list block is provided by the EditorJS list plugin\n */\nexport interface ListBlock extends Block> {\n  /**\n   * The EditorJS block type\n   */\n  type: 'list';\n}\n\n/**\n * Default data type for a paragraph block\n */\ninterface Paragraph {\n  /**\n   * The paragraph text\n   */\n  text: string;\n}\n\n/**\n * Interface for a paragraph block\n */\nexport interface ParagraphBlock extends Block {\n  /**\n   * The EditorJS block type\n   */\n  type: 'paragraph';\n}\n\n/**\n * Default data type for a header block\n */\ninterface Header {\n  /**\n   * The header text\n   */\n  text: string;\n  /**\n   * The header level from 1-6\n   */\n  level: number;\n}\n\n/**\n * Interface for a header block\n */\nexport interface HeaderBlock extends Block {\n  /**\n   * The EditorJS block type\n   */\n  type: 'header';\n}\n\n/**\n * Default data type for a header block\n */\nexport interface Image {\n  /**\n   * The image URL\n   */\n  url: string;\n  /**\n   * Optional image caption\n   */\n  caption?: string;\n  /**\n   * Optional border property\n   */\n  withBorder?: boolean;\n\n  /**\n   * Optional background property\n   */\n  withBackground?: boolean;\n\n  /**\n   * Optional stretch property\n   */\n  stretched?: boolean;\n}\n\n/**\n * Interface for a image block\n */\nexport interface ImageBlock extends Block {\n  /**\n   * The EditorJS block type\n   */\n  type: 'image';\n}\n\n/**\n * Type of all the basic block type\n */\nexport type BlockTypes = ParagraphBlock | HeaderBlock | ImageBlock | ListBlock | Block;\n\n    \n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/ParagraphBlock.html":{"url":"interfaces/ParagraphBlock.html","title":"interface - ParagraphBlock","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  ParagraphBlock\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            libs/ngx-editorjs/ngx-editorjs/src/lib/types/blocks.ts\n        \n\n            \n                Description\n            \n            \n                Interface for a paragraph block\n\n            \n\n            \n                Extends\n            \n            \n                        Block\n            \n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        type\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        type\n                                    \n                                \n                                \n                                    \n                                        type:     \n\n                                    \n                                \n\n\n\n\n\n\n\n                            \n                                \n                                    The EditorJS block type\n\n                                \n                            \n                        \n                    \n            \n    \n\n\n    \n        export interface Block {\n  /**\n   * The EditorJS block type\n   */\n  type: string;\n\n  /**\n   * The data interface for the block type\n   */\n  data: T;\n\n  /**\n   * Additional properties on the type\n   */\n  [key: string]: any;\n}\n\n/**\n * Available list styles, supports `ordered` and `unordered`.\n * A custom string can also be added\n */\nexport type ListStyle = 'ordered' | 'unordered' | string;\n\n/**\n * Default data type for a list block\n */\nexport interface List {\n  /**\n   * The list style\n   */\n  style: ListStyle;\n  /**\n   * List items of type T\n   */\n  items: T[];\n}\n\n/**\n * The default list block is provided by the EditorJS list plugin\n */\nexport interface ListBlock extends Block> {\n  /**\n   * The EditorJS block type\n   */\n  type: 'list';\n}\n\n/**\n * Default data type for a paragraph block\n */\ninterface Paragraph {\n  /**\n   * The paragraph text\n   */\n  text: string;\n}\n\n/**\n * Interface for a paragraph block\n */\nexport interface ParagraphBlock extends Block {\n  /**\n   * The EditorJS block type\n   */\n  type: 'paragraph';\n}\n\n/**\n * Default data type for a header block\n */\ninterface Header {\n  /**\n   * The header text\n   */\n  text: string;\n  /**\n   * The header level from 1-6\n   */\n  level: number;\n}\n\n/**\n * Interface for a header block\n */\nexport interface HeaderBlock extends Block {\n  /**\n   * The EditorJS block type\n   */\n  type: 'header';\n}\n\n/**\n * Default data type for a header block\n */\nexport interface Image {\n  /**\n   * The image URL\n   */\n  url: string;\n  /**\n   * Optional image caption\n   */\n  caption?: string;\n  /**\n   * Optional border property\n   */\n  withBorder?: boolean;\n\n  /**\n   * Optional background property\n   */\n  withBackground?: boolean;\n\n  /**\n   * Optional stretch property\n   */\n  stretched?: boolean;\n}\n\n/**\n * Interface for a image block\n */\nexport interface ImageBlock extends Block {\n  /**\n   * The EditorJS block type\n   */\n  type: 'image';\n}\n\n/**\n * Type of all the basic block type\n */\nexport type BlockTypes = ParagraphBlock | HeaderBlock | ImageBlock | ListBlock | Block;\n\n    \n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/PluginCodeModule.html":{"url":"modules/PluginCodeModule.html","title":"module - PluginCodeModule","body":"\n                   \n\n\n\n\n    Modules\n    PluginCodeModule\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            libs/ngx-editorjs/ngx-editorjs-plugins/src/lib/plugins/code/code.module.ts\n        \n\n\n        \n            Description\n        \n        \n            A module that provides the default EditorJS  block tool.\nSee the GitHub repo for API details\n\n        \n\n\n        \n            \n            \n        \n\n\n    \n\n\n    \n        import { NgModule } from '@angular/core';\nimport { EDITOR_JS_TOOL_INJECTOR, PLUGIN_CONFIG, PluginClasses, PluginTypes } from '../../types/plugins';\nimport Code from '@editorjs/code';\nimport { createPluginConfig } from '../../util/plugin';\n\n/**\n * A module that provides the default EditorJS `` block tool.\n * See [the GitHub repo](https://github.com/editor-js/code) for API details\n */\n@NgModule({\n  providers: [\n    {\n      provide: EDITOR_JS_TOOL_INJECTOR,\n      useValue: Code,\n      multi: true\n    },\n    {\n      provide: PLUGIN_CONFIG,\n      useValue: {\n        key: 'code',\n        type: PluginTypes.Block,\n        pluginName: 'EditorJS Code'\n      },\n      multi: true\n    }\n  ]\n})\nexport class PluginCodeModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/PluginConfig.html":{"url":"interfaces/PluginConfig.html","title":"interface - PluginConfig","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  PluginConfig\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            libs/ngx-editorjs/ngx-editorjs-plugins/src/lib/types/plugins.ts\n        \n\n            \n                Description\n            \n            \n                A plugin configuration object\n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                            Optional\n                                        blockData\n                                \n                                \n                                            Optional\n                                        config\n                                \n                                \n                                            Optional\n                                        description\n                                \n                                \n                                            Optional\n                                        inlineToolbar\n                                \n                                \n                                        key\n                                \n                                \n                                        plugin\n                                \n                                \n                                        pluginName\n                                \n                                \n                                            Optional\n                                        shortcut\n                                \n                                \n                                        type\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        blockData\n                                    \n                                \n                                \n                                    \n                                        blockData:         BlockData\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         BlockData\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    Optional block data, used to define the block data for this type\nand used as a default\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        config\n                                    \n                                \n                                \n                                    \n                                        config:         any\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         any\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    Optional  custom configuration to pass to EditorJS\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        description\n                                    \n                                \n                                \n                                    \n                                        description:         PluginProperty\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         PluginProperty\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    Optional description for the plugin\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        inlineToolbar\n                                    \n                                \n                                \n                                    \n                                        inlineToolbar:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    If a block tool, you can also set this to true if it contains inline tool support\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        key\n                                    \n                                \n                                \n                                    \n                                        key:         PluginProperty\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         PluginProperty\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    The key to use for the plugin\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        plugin\n                                    \n                                \n                                \n                                    \n                                        plugin:         EditorJSPlugin | undefined\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         EditorJSPlugin | undefined\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    The plugin for the editor\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        pluginName\n                                    \n                                \n                                \n                                    \n                                        pluginName:         PluginProperty\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         PluginProperty\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Label for displaying the plugin name\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        shortcut\n                                    \n                                \n                                \n                                    \n                                        shortcut:         PluginProperty\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         PluginProperty\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    Optional shortcut for the plugin\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        type\n                                    \n                                \n                                \n                                    \n                                        type:         PluginProperty\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         PluginProperty\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Specifies the type of plugin for the plugin provider\n\n                                \n                            \n                        \n                    \n            \n    \n\n\n    \n        import { InjectionToken } from '@angular/core';\nimport { ToolSettings, ToolConstructable } from '@editorjs/editorjs';\n\n/**\n * Block Data interface\n */\nexport interface BlockData {\n  [key: string]: any;\n}\n\n/**\n * The types of plugins supported, currently block and inline\n */\nexport enum PluginTypes {\n  /**\n   * A EditorJS block plugin\n   */\n  Block = 'block',\n  /**\n   * A EditorJS inline plugin\n   */\n  Inline = 'inline'\n}\n\n/**\n * The types of plugins supported via the plugin `type` property\n */\nexport type PluginType = PluginTypes.Block | PluginTypes.Inline | string;\n\n/**\n * A plugin property\n */\nexport type PluginProperty = string;\n\n/**\n * The EditorJS tool settings for this plugin\n */\nexport type EditorJSPlugin = ToolConstructable | ToolSettings;\n\n/**\n * A map of all the tools settings\n */\nexport interface ToolSettingsMap {\n  /**\n   * The key of the plugin and the plugin exported tool settings\n   */\n  [key: string]: EditorJSPlugin;\n}\n\n/**\n * A plugin configuration object\n */\nexport interface PluginConfig {\n  /**\n   * Specifies the type of plugin for the plugin provider\n   */\n  type: PluginProperty;\n  /**\n   * The key to use for the plugin\n   */\n  key: PluginProperty;\n  /**\n   * Label for displaying the plugin name\n   */\n  pluginName: PluginProperty;\n  /**\n   * Optional description for the plugin\n   */\n  description?: PluginProperty;\n  /**\n   * Optional shortcut for the plugin\n   */\n  shortcut?: PluginProperty;\n  /**\n   * Optional {@link https://editorjs.io/provide-custom-configuration | custom configuration} to pass to EditorJS\n   */\n  config?: any;\n\n  /**\n   * If a block tool, you can also set this to true if it contains inline tool support\n   */\n  inlineToolbar?: boolean;\n  /**\n   * Optional block data, used to define the block data for this type\n   * and used as a default\n   */\n  blockData?: BlockData;\n  /**\n   * The plugin for the editor\n   */\n  plugin: EditorJSPlugin | undefined;\n}\n\n/**\n * The Injection token for initial plugins as defined in the ngx-editorjs module\n */\nexport const EDITOR_JS_TOOL_INJECTOR = new InjectionToken('EDITOR_JS_TOOL_INJECTOR');\n\n/**\n * Injection token for a plugin config\n */\nexport const PLUGIN_CONFIG = new InjectionToken('PLUGIN_CONFIG');\n\n/**\n * A map of plugin configs\n */\nexport interface PluginConfigMap {\n  /**\n   * A plugin config per key\n   */\n  [key: string]: PluginConfig;\n}\n\n/**\n * Injection token for the plugin config map\n */\nexport const PluginClasses = new InjectionToken('PluginClasses');\n\n    \n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/PluginConfigMap.html":{"url":"interfaces/PluginConfigMap.html","title":"interface - PluginConfigMap","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  PluginConfigMap\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            libs/ngx-editorjs/ngx-editorjs-plugins/src/lib/types/plugins.ts\n        \n\n            \n                Description\n            \n            \n                A map of plugin configs\n\n            \n\n\n\n\n            \n    Indexable\n        \n            \n                \n                    \n                        [key: string]:        PluginConfig\n\n                    \n                \n                        \n                            \n                                Defined in libs/ngx-editorjs/ngx-editorjs-plugins/src/lib/types/plugins.ts:107\n                            \n                        \n                \n                    \n                        A plugin config per key\n\n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { InjectionToken } from '@angular/core';\nimport { ToolSettings, ToolConstructable } from '@editorjs/editorjs';\n\n/**\n * Block Data interface\n */\nexport interface BlockData {\n  [key: string]: any;\n}\n\n/**\n * The types of plugins supported, currently block and inline\n */\nexport enum PluginTypes {\n  /**\n   * A EditorJS block plugin\n   */\n  Block = 'block',\n  /**\n   * A EditorJS inline plugin\n   */\n  Inline = 'inline'\n}\n\n/**\n * The types of plugins supported via the plugin `type` property\n */\nexport type PluginType = PluginTypes.Block | PluginTypes.Inline | string;\n\n/**\n * A plugin property\n */\nexport type PluginProperty = string;\n\n/**\n * The EditorJS tool settings for this plugin\n */\nexport type EditorJSPlugin = ToolConstructable | ToolSettings;\n\n/**\n * A map of all the tools settings\n */\nexport interface ToolSettingsMap {\n  /**\n   * The key of the plugin and the plugin exported tool settings\n   */\n  [key: string]: EditorJSPlugin;\n}\n\n/**\n * A plugin configuration object\n */\nexport interface PluginConfig {\n  /**\n   * Specifies the type of plugin for the plugin provider\n   */\n  type: PluginProperty;\n  /**\n   * The key to use for the plugin\n   */\n  key: PluginProperty;\n  /**\n   * Label for displaying the plugin name\n   */\n  pluginName: PluginProperty;\n  /**\n   * Optional description for the plugin\n   */\n  description?: PluginProperty;\n  /**\n   * Optional shortcut for the plugin\n   */\n  shortcut?: PluginProperty;\n  /**\n   * Optional {@link https://editorjs.io/provide-custom-configuration | custom configuration} to pass to EditorJS\n   */\n  config?: any;\n\n  /**\n   * If a block tool, you can also set this to true if it contains inline tool support\n   */\n  inlineToolbar?: boolean;\n  /**\n   * Optional block data, used to define the block data for this type\n   * and used as a default\n   */\n  blockData?: BlockData;\n  /**\n   * The plugin for the editor\n   */\n  plugin: EditorJSPlugin | undefined;\n}\n\n/**\n * The Injection token for initial plugins as defined in the ngx-editorjs module\n */\nexport const EDITOR_JS_TOOL_INJECTOR = new InjectionToken('EDITOR_JS_TOOL_INJECTOR');\n\n/**\n * Injection token for a plugin config\n */\nexport const PLUGIN_CONFIG = new InjectionToken('PLUGIN_CONFIG');\n\n/**\n * A map of plugin configs\n */\nexport interface PluginConfigMap {\n  /**\n   * A plugin config per key\n   */\n  [key: string]: PluginConfig;\n}\n\n/**\n * Injection token for the plugin config map\n */\nexport const PluginClasses = new InjectionToken('PluginClasses');\n\n    \n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/PluginEmbedModule.html":{"url":"modules/PluginEmbedModule.html","title":"module - PluginEmbedModule","body":"\n                   \n\n\n\n\n    Modules\n    PluginEmbedModule\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            libs/ngx-editorjs/ngx-editorjs-plugins/src/lib/plugins/embed/embed.module.ts\n        \n\n\n        \n            Description\n        \n        \n            A module that provides the default EditorJS  block tool.\nSee the GitHub repo for API details\n\n        \n\n\n        \n            \n            \n        \n\n\n    \n\n\n    \n        import { NgModule } from '@angular/core';\nimport { EDITOR_JS_TOOL_INJECTOR, PLUGIN_CONFIG, PluginTypes } from '../../types/plugins';\nimport Embed from '@editorjs/embed';\n\n/**\n * A module that provides the default EditorJS `` block tool.\n * See [the GitHub repo](https://github.com/editor-js/paragraph) for API details\n */\n@NgModule({\n  providers: [\n    {\n      provide: EDITOR_JS_TOOL_INJECTOR,\n      useValue: Embed,\n      multi: true\n    },\n    {\n      provide: PLUGIN_CONFIG,\n      useValue: {\n        key: 'embed',\n        type: PluginTypes.Block,\n        pluginName: 'EditorJS Embed Block',\n        inlineToolbar: true\n      },\n      multi: true\n    }\n  ]\n})\nexport class PluginEmbedModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/PluginHeaderModule.html":{"url":"modules/PluginHeaderModule.html","title":"module - PluginHeaderModule","body":"\n                   \n\n\n\n\n    Modules\n    PluginHeaderModule\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            libs/ngx-editorjs/ngx-editorjs-plugins/src/lib/plugins/header/header.module.ts\n        \n\n\n        \n            Description\n        \n        \n            A module that provides the default EditorJS header block tool.\nSee the GitHub repo for API details\n\n        \n\n\n        \n            \n            \n        \n\n\n    \n\n\n    \n        import { NgModule } from '@angular/core';\nimport { EDITOR_JS_TOOL_INJECTOR, PLUGIN_CONFIG, PluginTypes } from '../../types/plugins';\nimport Header from '@editorjs/header';\n\n\n//TODO: Remove once Header plugin has been fixed\n\nexport class FixedHeader extends Header {\n  constructor(config: any) {\n    super(config);\n  }\n\n  /**\n   * Fixed version of the function to normalize input data\n   * @param data The data for the header\n   * @returns The new header data\n   */\n  normalizeData(data: any = {}) {\n    const newData: any = {};\n    newData.text = data.text || '';\n    newData.level = parseInt(data.level, 10) || (this as any).defaultLevel.number;\n    return newData;\n  }\n}\n\n/**\n * A module that provides the default EditorJS header block tool.\n * See [the GitHub repo](https://github.com/editor-js/header) for API details\n */\n@NgModule({\n  providers: [\n    {\n      provide: EDITOR_JS_TOOL_INJECTOR,\n      useValue: FixedHeader,\n      multi: true\n    },\n    {\n      provide: PLUGIN_CONFIG,\n      useValue: {\n        key: 'header',\n        type: PluginTypes.Block,\n        pluginName: 'EditorJS Header'\n      },\n      multi: true\n    }\n  ]\n})\nexport class PluginHeaderModule {\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/PluginImageModule.html":{"url":"modules/PluginImageModule.html","title":"module - PluginImageModule","body":"\n                   \n\n\n\n\n    Modules\n    PluginImageModule\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            libs/ngx-editorjs/ngx-editorjs-plugins/src/lib/plugins/image/image.module.ts\n        \n\n\n        \n            Description\n        \n        \n            A module that provides the default EditorJS  block tool.\nSee the GitHub repo for API details\n\n        \n\n\n        \n            \n            \n        \n\n\n    \n\n\n    \n        import { NgModule } from '@angular/core';\nimport { EDITOR_JS_TOOL_INJECTOR, PLUGIN_CONFIG, PluginClasses, PluginTypes } from '../../types/plugins';\n\nimport Image from '@editorjs/image';\nimport { createPluginConfig } from '../../util/plugin';\n\n/**\n * A module that provides the default EditorJS `` block tool.\n * See [the GitHub repo](https://github.com/editor-js/image) for API details\n */\n@NgModule({\n  providers: [\n    {\n      provide: EDITOR_JS_TOOL_INJECTOR,\n      useValue: Image,\n      multi: true\n    },\n    {\n      provide: PLUGIN_CONFIG,\n      useValue: {\n        key: 'image',\n        type: PluginTypes.Block,\n        pluginName: 'EditorJS Image'\n      },\n      multi: true\n    }\n  ]\n})\nexport class PluginImageModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/PluginInlineCodeModule.html":{"url":"modules/PluginInlineCodeModule.html","title":"module - PluginInlineCodeModule","body":"\n                   \n\n\n\n\n    Modules\n    PluginInlineCodeModule\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            libs/ngx-editorjs/ngx-editorjs-plugins/src/lib/plugins/inline-code/inline-code.module.ts\n        \n\n\n        \n            Description\n        \n        \n            A module that provides the default EditorJS  block tool.\nSee the GitHub repo for API details\n\n        \n\n\n        \n            \n            \n        \n\n\n    \n\n\n    \n        import { NgModule } from '@angular/core';\nimport { EDITOR_JS_TOOL_INJECTOR, PLUGIN_CONFIG, PluginTypes } from '../../types/plugins';\nimport InlineCode from '@editorjs/inline-code';\n\n/**\n * A module that provides the default EditorJS `` block tool.\n * See [the GitHub repo](https://github.com/editor-js/paragraph) for API details\n */\n@NgModule({\n  providers: [\n    {\n      provide: EDITOR_JS_TOOL_INJECTOR,\n      useValue: InlineCode,\n      multi: true\n    },\n    {\n      provide: PLUGIN_CONFIG,\n      useValue: {\n        key: 'inline-code',\n        type: PluginTypes.Inline,\n        pluginName: 'EditorJS Inline Code',\n        shortcut: 'CTRL+SHIFT+C'\n      },\n      multi: true\n    }\n  ]\n})\nexport class PluginInlineCodeModule {\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/PluginLinkModule.html":{"url":"modules/PluginLinkModule.html","title":"module - PluginLinkModule","body":"\n                   \n\n\n\n\n    Modules\n    PluginLinkModule\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            libs/ngx-editorjs/ngx-editorjs-plugins/src/lib/plugins/link/link.module.ts\n        \n\n\n        \n            Description\n        \n        \n            A module that provides the default EditorJS  block tool.\nSee the GitHub repo for API details\n\n        \n\n\n        \n            \n            \n        \n\n\n    \n\n\n    \n        import { NgModule } from '@angular/core';\nimport { EDITOR_JS_TOOL_INJECTOR, PLUGIN_CONFIG, PluginClasses, PluginTypes } from '../../types/plugins';\n\nimport Link from '@editorjs/link';\nimport { createPluginConfig } from '../../util/plugin';\n\n/**\n * A module that provides the default EditorJS `` block tool.\n * See [the GitHub repo](https://github.com/editor-js/image) for API details\n */\n@NgModule({\n  providers: [\n    {\n      provide: EDITOR_JS_TOOL_INJECTOR,\n      useValue: Link,\n      multi: true\n    },\n    {\n      provide: PLUGIN_CONFIG,\n      useValue: {\n        key: 'link',\n        type: PluginTypes.Block,\n        pluginName: 'EditorJS Link'\n      },\n      multi: true\n    }\n  ]\n})\nexport class PluginLinkModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/PluginListModule.html":{"url":"modules/PluginListModule.html","title":"module - PluginListModule","body":"\n                   \n\n\n\n\n    Modules\n    PluginListModule\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            libs/ngx-editorjs/ngx-editorjs-plugins/src/lib/plugins/list/list.module.ts\n        \n\n\n        \n            Description\n        \n        \n            A module that provides the default EditorJS  block tool.\nSee the GitHub repo for API details\n\n        \n\n\n        \n            \n            \n        \n\n\n    \n\n\n    \n        import { NgModule } from '@angular/core';\nimport { EDITOR_JS_TOOL_INJECTOR, PLUGIN_CONFIG, PluginClasses, PluginTypes } from '../../types/plugins';\n\nimport List from '@editorjs/list';\nimport { createPluginConfig } from '../../util/plugin';\n\n/**\n * A module that provides the default EditorJS `` block tool.\n * See [the GitHub repo](https://github.com/editor-js/image) for API details\n */\n@NgModule({\n  providers: [\n    {\n      provide: EDITOR_JS_TOOL_INJECTOR,\n      useValue: List,\n      multi: true\n    },\n    {\n      provide: PLUGIN_CONFIG,\n      useValue: {\n        key: 'list',\n        type: PluginTypes.Block,\n        pluginName: 'EditorJS List'\n      },\n      multi: true\n    }\n  ]\n})\nexport class PluginListModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/PluginMarkerModule.html":{"url":"modules/PluginMarkerModule.html","title":"module - PluginMarkerModule","body":"\n                   \n\n\n\n\n    Modules\n    PluginMarkerModule\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            libs/ngx-editorjs/ngx-editorjs-plugins/src/lib/plugins/marker/marker.module.ts\n        \n\n\n        \n            Description\n        \n        \n            A module that provides the default EditorJS  block tool.\nSee the GitHub repo for API details\n\n        \n\n\n        \n            \n            \n        \n\n\n    \n\n\n    \n        import { NgModule } from '@angular/core';\nimport { EDITOR_JS_TOOL_INJECTOR, PLUGIN_CONFIG, PluginClasses, PluginTypes } from '../../types/plugins';\nimport Marker from '@editorjs/paragraph';\nimport { createPluginConfig } from '../../util/plugin';\n\n/**\n * A module that provides the default EditorJS `` block tool.\n * See [the GitHub repo](https://github.com/editor-js/paragraph) for API details\n */\n@NgModule({\n  providers: [\n    {\n      provide: EDITOR_JS_TOOL_INJECTOR,\n      useValue: Marker,\n      multi: true\n    },\n    {\n      provide: PLUGIN_CONFIG,\n      useValue: {\n        key: 'paragraph',\n        type: PluginTypes.Inline,\n        pluginName: 'EditorJS Marker',\n        shortcut: 'CTRL+SHIFT+M'\n      },\n      multi: true\n    }\n  ]\n})\nexport class PluginMarkerModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/PluginParagraphModule.html":{"url":"modules/PluginParagraphModule.html","title":"module - PluginParagraphModule","body":"\n                   \n\n\n\n\n    Modules\n    PluginParagraphModule\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            libs/ngx-editorjs/ngx-editorjs-plugins/src/lib/plugins/paragraph/paragraph.module.ts\n        \n\n\n        \n            Description\n        \n        \n            A module that provides the default EditorJS  block tool.\nSee the GitHub repo for API details\n\n        \n\n\n        \n            \n            \n        \n\n\n    \n\n\n    \n        import { NgModule } from '@angular/core';\nimport { EDITOR_JS_TOOL_INJECTOR, PLUGIN_CONFIG, PluginTypes } from '../../types/plugins';\nimport Paragraph from '@editorjs/paragraph';\n\n/**\n * A module that provides the default EditorJS `` block tool.\n * See [the GitHub repo](https://github.com/editor-js/paragraph) for API details\n */\n@NgModule({\n  providers: [\n    {\n      provide: EDITOR_JS_TOOL_INJECTOR,\n      useValue: Paragraph,\n      multi: true\n    },\n    {\n      provide: PLUGIN_CONFIG,\n      useValue: {\n        key: 'paragraph',\n        type: PluginTypes.Block,\n        pluginName: 'EditorJS Paragraph'\n      },\n      multi: true\n    }\n  ]\n})\nexport class PluginParagraphModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/PluginQuoteModule.html":{"url":"modules/PluginQuoteModule.html","title":"module - PluginQuoteModule","body":"\n                   \n\n\n\n\n    Modules\n    PluginQuoteModule\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            libs/ngx-editorjs/ngx-editorjs-plugins/src/lib/plugins/quote/quote.module.ts\n        \n\n\n        \n            Description\n        \n        \n            A module that provides the default EditorJS  block tool.\nSee the GitHub repo for API details\n\n        \n\n\n        \n            \n            \n        \n\n\n    \n\n\n    \n        import { NgModule } from '@angular/core';\nimport { EDITOR_JS_TOOL_INJECTOR, PLUGIN_CONFIG, PluginTypes } from '../../types/plugins';\nimport Quote from '@editorjs/quote';\n\n/**\n * A module that provides the default EditorJS `` block tool.\n * See [the GitHub repo](https://github.com/editor-js/paragraph) for API details\n */\n@NgModule({\n  providers: [\n    {\n      provide: EDITOR_JS_TOOL_INJECTOR,\n      useValue: Quote,\n      multi: true\n    },\n    {\n      provide: PLUGIN_CONFIG,\n      useValue: {\n        key: 'quote',\n        type: PluginTypes.Block,\n        pluginName: 'EditorJS Quote Tool',\n        inlineToolbar: true\n      },\n      multi: true\n    }\n  ]\n})\nexport class PluginQuoteModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/PluginSimpleImageModule.html":{"url":"modules/PluginSimpleImageModule.html","title":"module - PluginSimpleImageModule","body":"\n                   \n\n\n\n\n    Modules\n    PluginSimpleImageModule\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            libs/ngx-editorjs/ngx-editorjs-plugins/src/lib/plugins/simple-image/simple-image.module.ts\n        \n\n\n        \n            Description\n        \n        \n            A module that provides the default EditorJS  block tool.\nSee the GitHub repo for API details\n\n        \n\n\n        \n            \n            \n        \n\n\n    \n\n\n    \n        import { NgModule } from '@angular/core';\nimport { EDITOR_JS_TOOL_INJECTOR, PLUGIN_CONFIG, PluginClasses, PluginTypes } from '../../types/plugins';\n\nimport SimpleImage from '@editorjs/simple-image';\nimport { createPluginConfig } from '../../util/plugin';\n\n/**\n * A module that provides the default EditorJS `` block tool.\n * See [the GitHub repo](https://github.com/editor-js/image) for API details\n */\n@NgModule({\n  providers: [\n    {\n      provide: EDITOR_JS_TOOL_INJECTOR,\n      useValue: SimpleImage,\n      multi: true\n    },\n    {\n      provide: PLUGIN_CONFIG,\n      useValue: {\n        key: 'simpleimage',\n        type: PluginTypes.Block,\n        pluginName: 'EditorJS Simple Image'\n      },\n      multi: true\n    }\n  ]\n})\nexport class PluginSimpleImageModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/PluginWarningModule.html":{"url":"modules/PluginWarningModule.html","title":"module - PluginWarningModule","body":"\n                   \n\n\n\n\n    Modules\n    PluginWarningModule\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            libs/ngx-editorjs/ngx-editorjs-plugins/src/lib/plugins/warning/warning.module.ts\n        \n\n\n        \n            Description\n        \n        \n            A module that provides the default EditorJS  block tool.\nSee the GitHub repo for API details\n\n        \n\n\n        \n            \n            \n        \n\n\n    \n\n\n    \n        import { NgModule } from '@angular/core';\nimport { EDITOR_JS_TOOL_INJECTOR, PLUGIN_CONFIG, PluginTypes } from '../../types/plugins';\nimport Warning from '@editorjs/warning';\n\n/**\n * A module that provides the default EditorJS `` block tool.\n * See [the GitHub repo](https://github.com/editor-js/paragraph) for API details\n */\n@NgModule({\n  providers: [\n    {\n      provide: EDITOR_JS_TOOL_INJECTOR,\n      useValue: Warning,\n      multi: true\n    },\n    {\n      provide: PLUGIN_CONFIG,\n      useValue: {\n        key: 'warning',\n        type: PluginTypes.Block,\n        pluginName: 'EditorJS Warning Block',\n        inlineToolbar: true\n      },\n      multi: true\n    }\n  ]\n})\nexport class PluginWarningModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/ReadyMap.html":{"url":"interfaces/ReadyMap.html","title":"interface - ReadyMap","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  ReadyMap\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            libs/ngx-editorjs/ngx-editorjs/src/lib/types/maps.ts\n        \n\n            \n                Description\n            \n            \n                A map containing BehaviorSubject values of the ready state of EditorJS\n\n            \n\n\n\n\n            \n    Indexable\n        \n            \n                \n                    \n                        [key: string]:    BehaviorSubject\n\n                    \n                \n                        \n                            \n                                Defined in libs/ngx-editorjs/ngx-editorjs/src/lib/types/maps.ts:18\n                            \n                        \n                \n                    \n                        A map key containing a BehaviorSubject\n\n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import EditorJS, { OutputData } from '@editorjs/editorjs';\nimport { BehaviorSubject } from 'rxjs';\nimport { Block } from './blocks';\n\n/**\n * A map containing instances of `BehaviorSubject`\n */\nexport interface EditorMap {\n  /**\n   * A map key containing `BehaviorSubject`\n   */\n  [key: string]: BehaviorSubject;\n}\n\n/**\n * A map containing `BehaviorSubject` values of the ready state of EditorJS\n */\nexport interface ReadyMap {\n  /**\n   * A map key containing a `BehaviorSubject`\n   */\n  [key: string]: BehaviorSubject;\n}\n\n/**\n * A map containing `BehaviorSubject` values of the save state of EditorJS\n */\nexport interface SavedMap {\n  /**\n   * A map key containing a `BehaviorSubject`\n   */\n  [key: string]: BehaviorSubject;\n}\n\n/**\n * An EditorJS change event\n */\nexport interface EditorJSChange {\n  /**\n   * Time of the change\n   */\n  time: number;\n  /**\n   * Blocks in the change\n   */\n  blocks: Block[];\n}\n\n/**\n * A map containing `BehaviorSubject` which is the last save from the EditorJS instance\n */\nexport interface ChangeMap {\n  /**\n   * A map key containing a `BehaviorSubject`\n   */\n  [key: string]: BehaviorSubject;\n}\n\n    \n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/SavedMap.html":{"url":"interfaces/SavedMap.html","title":"interface - SavedMap","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  SavedMap\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            libs/ngx-editorjs/ngx-editorjs/src/lib/types/maps.ts\n        \n\n            \n                Description\n            \n            \n                A map containing BehaviorSubject values of the save state of EditorJS\n\n            \n\n\n\n\n            \n    Indexable\n        \n            \n                \n                    \n                        [key: string]:    BehaviorSubject\n\n                    \n                \n                        \n                            \n                                Defined in libs/ngx-editorjs/ngx-editorjs/src/lib/types/maps.ts:28\n                            \n                        \n                \n                    \n                        A map key containing a BehaviorSubject\n\n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import EditorJS, { OutputData } from '@editorjs/editorjs';\nimport { BehaviorSubject } from 'rxjs';\nimport { Block } from './blocks';\n\n/**\n * A map containing instances of `BehaviorSubject`\n */\nexport interface EditorMap {\n  /**\n   * A map key containing `BehaviorSubject`\n   */\n  [key: string]: BehaviorSubject;\n}\n\n/**\n * A map containing `BehaviorSubject` values of the ready state of EditorJS\n */\nexport interface ReadyMap {\n  /**\n   * A map key containing a `BehaviorSubject`\n   */\n  [key: string]: BehaviorSubject;\n}\n\n/**\n * A map containing `BehaviorSubject` values of the save state of EditorJS\n */\nexport interface SavedMap {\n  /**\n   * A map key containing a `BehaviorSubject`\n   */\n  [key: string]: BehaviorSubject;\n}\n\n/**\n * An EditorJS change event\n */\nexport interface EditorJSChange {\n  /**\n   * Time of the change\n   */\n  time: number;\n  /**\n   * Blocks in the change\n   */\n  blocks: Block[];\n}\n\n/**\n * A map containing `BehaviorSubject` which is the last save from the EditorJS instance\n */\nexport interface ChangeMap {\n  /**\n   * A map key containing a `BehaviorSubject`\n   */\n  [key: string]: BehaviorSubject;\n}\n\n    \n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/Tag.html":{"url":"interfaces/Tag.html","title":"interface - Tag","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  Tag\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            libs/ngx-editorjs/ngx-editorjs-demo/src/lib/store/pages/pages.models.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        key\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        key\n                                    \n                                \n                                \n                                    \n                                        key:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { ID } from '@datorama/akita';\nimport { Block } from '@tinynodes/ngx-editorjs';\n\nexport interface Tag {\n  key: string;\n}\n\nexport interface PageBlock extends Block {\n  id: ID;\n}\n\nexport interface Page {\n  id: ID;\n  pageTitle: string;\n  pageTags: Tag[];\n  blocks: PageBlock[];\n}\n\n    \n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/ToolSettingsMap.html":{"url":"interfaces/ToolSettingsMap.html","title":"interface - ToolSettingsMap","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  ToolSettingsMap\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            libs/ngx-editorjs/ngx-editorjs-plugins/src/lib/types/plugins.ts\n        \n\n            \n                Description\n            \n            \n                A map of all the tools settings\n\n            \n\n\n\n\n            \n    Indexable\n        \n            \n                \n                    \n                        [key: string]:        EditorJSPlugin\n\n                    \n                \n                        \n                            \n                                Defined in libs/ngx-editorjs/ngx-editorjs-plugins/src/lib/types/plugins.ts:43\n                            \n                        \n                \n                    \n                        The key of the plugin and the plugin exported tool settings\n\n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { InjectionToken } from '@angular/core';\nimport { ToolSettings, ToolConstructable } from '@editorjs/editorjs';\n\n/**\n * Block Data interface\n */\nexport interface BlockData {\n  [key: string]: any;\n}\n\n/**\n * The types of plugins supported, currently block and inline\n */\nexport enum PluginTypes {\n  /**\n   * A EditorJS block plugin\n   */\n  Block = 'block',\n  /**\n   * A EditorJS inline plugin\n   */\n  Inline = 'inline'\n}\n\n/**\n * The types of plugins supported via the plugin `type` property\n */\nexport type PluginType = PluginTypes.Block | PluginTypes.Inline | string;\n\n/**\n * A plugin property\n */\nexport type PluginProperty = string;\n\n/**\n * The EditorJS tool settings for this plugin\n */\nexport type EditorJSPlugin = ToolConstructable | ToolSettings;\n\n/**\n * A map of all the tools settings\n */\nexport interface ToolSettingsMap {\n  /**\n   * The key of the plugin and the plugin exported tool settings\n   */\n  [key: string]: EditorJSPlugin;\n}\n\n/**\n * A plugin configuration object\n */\nexport interface PluginConfig {\n  /**\n   * Specifies the type of plugin for the plugin provider\n   */\n  type: PluginProperty;\n  /**\n   * The key to use for the plugin\n   */\n  key: PluginProperty;\n  /**\n   * Label for displaying the plugin name\n   */\n  pluginName: PluginProperty;\n  /**\n   * Optional description for the plugin\n   */\n  description?: PluginProperty;\n  /**\n   * Optional shortcut for the plugin\n   */\n  shortcut?: PluginProperty;\n  /**\n   * Optional {@link https://editorjs.io/provide-custom-configuration | custom configuration} to pass to EditorJS\n   */\n  config?: any;\n\n  /**\n   * If a block tool, you can also set this to true if it contains inline tool support\n   */\n  inlineToolbar?: boolean;\n  /**\n   * Optional block data, used to define the block data for this type\n   * and used as a default\n   */\n  blockData?: BlockData;\n  /**\n   * The plugin for the editor\n   */\n  plugin: EditorJSPlugin | undefined;\n}\n\n/**\n * The Injection token for initial plugins as defined in the ngx-editorjs module\n */\nexport const EDITOR_JS_TOOL_INJECTOR = new InjectionToken('EDITOR_JS_TOOL_INJECTOR');\n\n/**\n * Injection token for a plugin config\n */\nexport const PLUGIN_CONFIG = new InjectionToken('PLUGIN_CONFIG');\n\n/**\n * A map of plugin configs\n */\nexport interface PluginConfigMap {\n  /**\n   * A plugin config per key\n   */\n  [key: string]: PluginConfig;\n}\n\n/**\n * Injection token for the plugin config map\n */\nexport const PluginClasses = new InjectionToken('PluginClasses');\n\n    \n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"changelog.html":{"url":"changelog.html","title":"getting-started - changelog","body":"\n                   \n\nTinynodes Changelog\n\nThis changelog is related to the overall site. You can also find changelogs for libraries under the library docs\n\n\nUNRELEASED\nToday @tinynodes/ngx-editorjs@3.0.0 has been released, along with @tinynodes/ngx-editorjs-plugins@2.0.0\nThe plugin architecture of the components has been re-written so that plugins are just NgModule classes\nthat provide multi providers for injecting plugins and their configuration.  These are merged into a map\nthat the NgxEditorJSPluginService now provides, and provides methods to getting tool options for instances.\nThis means the plugin module is now a dependency of the project.\nInternally there is some tidy-up related to this, and better async/await handling of the instance creation\nalong with API calls.  The Material demo \nhas been updated as well with improvements on using the component in an application.\nWednesday, 22nd May 2019\nToday @tinynodes/ngx-editorjs@2.0.0 has been released. The major bump is due to underlying changes that may be breaking - the entire service has been improved with better control over the EditorJS interface. Also in this release the exiting component has been upgraded to work with Angular Forms, and there is a new Material Form Field component provided too.\nThe demo has also been updated to reflect the new features of this, and a new demo added for the Material component.\nWednesday, 15th May 2019\nToday I have released @tinynodes/ngx-editorjs@1.3.2. This will be without a Forms component. In this release the main change is internally I'm using a new EditorJS Injector module I've created to handle managing the underlying instance. There are also a lot of documentation improvements and a completly new updated demo site.\nMonday, 13th May 2019\nToday I have released @tinynodes/ngx-editorjs@1.2.0. For now I've removed any default plugins from core package, now all plugins must be added at the application level - this can be see in the demo app.\nSunday, 12th May 2019\nThe first devlog is to report that currently version 1.2 has been delayed due to current build issues.\nA bug report has been filed on @nrwl/nx project.\nIn 1.2 there is a new @tinynodes/ngx-editorjs-plugins module that provides exports for several common EditorJS plugins and will be expanded to cover all the officially released plugins.\nWith this change the current build scripts break, and until it is resolved this will block the release.\nIn the meantime I'll continue to work on this small demo site, making it more useful as a good example of an Angular app.\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"contributing.html":{"url":"contributing.html","title":"getting-started - contributing","body":"\n                   \n\nContributing\nWhen contributing to this repository, please first discuss the change you wish to make via issue,\nemail, or any other method with the owners of this repository before making a change.\nPlease note we have a code of conduct, please follow it in all your interactions with the project.\nPull Request Process\n\nEnsure any install or build dependencies are removed before the end of the layer when doing a\nbuild.\nUpdate the README.md with details of changes to the interface, this includes new environment\nvariables, exposed ports, useful file locations and container parameters.\nIncrease the version numbers in any examples files and the README.md to the new version that this\nPull Request would represent. The versioning scheme we use is SemVer.\nYou may merge the Pull Request in once you have the sign-off of two other developers, or if you\ndo not have permission to do that, you may request the second reviewer to merge it for you.\n\nCode of Conduct\nOur Pledge\nIn the interest of fostering an open and welcoming environment, we as\ncontributors and maintainers pledge to making participation in our project and\nour community a harassment-free experience for everyone, regardless of age, body\nsize, disability, ethnicity, gender identity and expression, level of experience,\nnationality, personal appearance, race, religion, or sexual identity and\norientation.\nOur Standards\nExamples of behavior that contributes to creating a positive environment\ninclude:\n\nUsing welcoming and inclusive language\nBeing respectful of differing viewpoints and experiences\nGracefully accepting constructive criticism\nFocusing on what is best for the community\nShowing empathy towards other community members\n\nExamples of unacceptable behavior by participants include:\n\nThe use of sexualized language or imagery and unwelcome sexual attention or\nadvances\nTrolling, insulting/derogatory comments, and personal or political attacks\nPublic or private harassment\nPublishing others' private information, such as a physical or electronic\naddress, without explicit permission\nOther conduct which could reasonably be considered inappropriate in a\nprofessional setting\n\nOur Responsibilities\nProject maintainers are responsible for clarifying the standards of acceptable\nbehavior and are expected to take appropriate and fair corrective action in\nresponse to any instances of unacceptable behavior.\nProject maintainers have the right and responsibility to remove, edit, or\nreject comments, commits, code, wiki edits, issues, and other contributions\nthat are not aligned to this Code of Conduct, or to ban temporarily or\npermanently any contributor for other behaviors that they deem inappropriate,\nthreatening, offensive, or harmful.\nScope\nThis Code of Conduct applies both within project spaces and in public spaces\nwhen an individual is representing the project or its community. Examples of\nrepresenting a project or community include using an official project e-mail\naddress, posting via an official social media account, or acting as an appointed\nrepresentative at an online or offline event. Representation of a project may be\nfurther defined and clarified by project maintainers.\nEnforcement\nInstances of abusive, harassing, or otherwise unacceptable behavior may be\nreported by contacting the project team at me@tane.dev. All\ncomplaints will be reviewed and investigated and will result in a response that\nis deemed necessary and appropriate to the circumstances. The project team is\nobligated to maintain confidentiality with regard to the reporter of an incident.\nFurther details of specific enforcement policies may be posted separately.\nProject maintainers who do not follow or enforce the Code of Conduct in good\nfaith may face temporary or permanent repercussions as determined by other\nmembers of the project's leadership.\nAttribution\nThis Code of Conduct is adapted from the Contributor Covenant, version 1.4,\navailable at http://contributor-covenant.org/version/1/4\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"dependencies.html":{"url":"dependencies.html","title":"package-dependencies - dependencies","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        Dependencies\n    \n    \n        \n            @angular/animations : ~8.0.0\n        \n            @angular/cdk : ~8.0.1\n        \n            @angular/common : ~8.0.0\n        \n            @angular/compiler : ~8.0.0\n        \n            @angular/core : ~8.0.0\n        \n            @angular/flex-layout : ~8.0.0-beta.26\n        \n            @angular/forms : ~8.0.0\n        \n            @angular/material : ~8.0.1\n        \n            @angular/platform-browser : ~8.0.0\n        \n            @angular/platform-browser-dynamic : ~8.0.0\n        \n            @angular/router : ~8.0.0\n        \n            @ngrx/effects : ~8.0.1\n        \n            @ngrx/store : ~8.0.1\n        \n            core-js : ~3.1.3\n        \n            hammerjs : ~2.0.8\n        \n            install : ~0.12.2\n        \n            ngx-hideable-header : 0.0.5\n        \n            ngx-json-viewer : ~2.4.0\n        \n            npm : ~6.9.0\n        \n            rxjs : ~6.5.2\n        \n            zone.js : ~0.9.1\n    \n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/enumerations.html":{"url":"miscellaneous/enumerations.html","title":"miscellaneous-enumerations - enumerations","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous\n  Enumerations\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            PluginTypes   (libs/.../plugins.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    libs/ngx-editorjs/ngx-editorjs-plugins/src/lib/types/plugins.ts\n    \n        \n            \n                \n                    \n                        \n                        PluginTypes\n                    \n                \n                    \n                        \n                            The types of plugins supported, currently block and inline\n\n                        \n                    \n                        \n                            \n                                 Block\n                            \n                        \n                        \n                            \n                                Value : block\n                            \n                        \n                        \n                            \n                                 Inline\n                            \n                        \n                        \n                            \n                                Value : inline\n                            \n                        \n            \n        \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/functions.html":{"url":"miscellaneous/functions.html","title":"miscellaneous-functions - functions","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous\n  Functions\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            createEditorJSConfig   (libs/.../editor-config.ts)\n                        \n                        \n                            createEditorJSInstance   (libs/.../ngx-editorjs.module.ts)\n                        \n                        \n                            createModuleConfig   (libs/.../module-config.ts)\n                        \n                        \n                            createPluginConfig   (libs/.../plugin.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    libs/ngx-editorjs/ngx-editorjs/src/lib/config/editor-config.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        \n                            createEditorJSConfig\n                        \n                        \n                    \n                \n            \n            \n                \ncreateEditorJSConfig(inputConfig?)\n                \n            \n\n\n\n\n            \n                \n                    Creates an EditorJS configuration, only returning keys that are set\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    inputConfig\n\n                                    \n                                        Yes\n                                    \n\n\n                                    \n                                        Optional config to use to set values\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     EditorConfig\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    libs/ngx-editorjs/ngx-editorjs/src/lib/ngx-editorjs.module.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        \n                            createEditorJSInstance\n                        \n                        \n                    \n                \n            \n            \n                \ncreateEditorJSInstance(editorjs: any)\n                \n            \n\n\n\n\n            \n                \n                    Factory function to return the EditorJS base class\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    editorjs\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                \n            \n        \n    \n    libs/ngx-editorjs/ngx-editorjs/src/lib/config/module-config.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        \n                            createModuleConfig\n                        \n                        \n                    \n                \n            \n            \n                \ncreateModuleConfig(config?)\n                \n            \n\n\n\n\n            \n                \n                    Method to return an module configuration\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    config\n\n                                    \n                                        Yes\n                                    \n\n\n                                    \n                                        Optional module configurations\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         NgxEditorJSModuleConfig\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    libs/ngx-editorjs/ngx-editorjs-plugins/src/lib/util/plugin.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        \n                            createPluginConfig\n                        \n                        \n                    \n                \n            \n            \n                \ncreatePluginConfig(pluginConfigs, plugins)\n                \n            \n\n\n\n\n            \n                \n                    Factory function to create the plugin config map for the plugin service\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    pluginConfigs\n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        The array of plugin configuration objects passed to this factory\n\n                                    \n                                \n                                \n                                    plugins\n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        The array of EditorJS plugins that are passed to this factory\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                \n            \n        \n    \n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"index.html":{"url":"index.html","title":"getting-started - index","body":"\n                   \n\nNgx-Tinynodes\nThis repository is a collection of Angular components and demos with full documentation.\nSee the Changelog for the\ndevelopment diary of this site, or visit the documentation of libraries.\nYou can also find a fully searchable API documentation for all @tinynode components.\nLinks\n\nRepository\nDocumentation\nDemo Application Site\nNPM Collection\n\nLibraries\nngx-editorjs\nThis library provides Angular support for EditorJS. Inside the module you will find:\n\nNgxEditorJSDirective - An Angular Directive used to attach an EditorJS instance to any block DOM element\nNgxEditorJSComponent - An out-of-the-box Angular component that is Reactive Forms compatible\nNgxEditorJSMaterialFieldComponent An Angular Material Form Field component that provides all the required properties and life-cycle events required. See the Form Demo on an example usage\nNgxEditorJSService - A Service that can be injected into an application to provide a interface to interact with EditorJS instances. Underneath are the private NgxEditorJSPluginService and NgxEditorJSInstanceService services. These are private but can be imported via ɵNgxEditorJSPluginService and ɵNgxEditorJSInstanceService from the library if you want to use them.\n\nWithin these components you will be able to access the underlying EditorJS instance, for use see the EditorJS API Docs\nBelow are the dependencies to use the features.\n@tinynodes/ngx-editorjs\nThis project provides a set of features for using EditorJS within Angular 7+\n\nReadme\nChangelog\nDemo\nProject Folder\n\n@tinynodes/ngx-editorjs-plugins\nThis project provides the plugin service module that exports handles\n plugins for @tinynodes/ngx-editorjs. The module also ships a set of default\n plugins and documentation on how to add new ones easily.\n\nReadme\nChangelog\nProject Folder\n\nDevelopment Information\nThis repository is run by Tane Piper and was generated using Nx.\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"license.html":{"url":"license.html","title":"getting-started - license","body":"\n                   \n\nTinynodes General MIT Licence\nCopyright 2019 Tane Piper me@tane.dev\nPermission is hereby granted, free of charge, to any person obtaining a copy of this software and associated documentation files (the \"Software\"), to deal in the Software without restriction, including without limitation the rights to use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of the Software, and to permit persons to whom the Software is furnished to do so, subject to the following conditions:\nThe above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software.\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules.html":{"url":"modules.html","title":"modules - modules","body":"\n                   \n\n\n\n\n    Modules\n\n\n    \n            \n                \n                    \n                        NgxEditorJSDemoMaterialModule\n                    \n                    \n                                \n                                    No graph available.\n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        NgxEditorJSDemoMaterialModule\n                    \n                    \n                                \n                                    No graph available.\n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        NgxEditorjsDemoModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        NgxEditorJSModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        NgxEditorJSPluginServiceModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        NgxEditorjsPluginsModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        NgxTinynodesComponentsModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        NgxTinynodesMaterialFormFieldDemo\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        NgxTinynodesMatJsonOutputModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        NgxTinynodesMatTagInputModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        PageStoreModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        PluginCodeModule\n                    \n                    \n                                \n                                    No graph available.\n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        PluginEmbedModule\n                    \n                    \n                                \n                                    No graph available.\n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        PluginEmbedModule\n                    \n                    \n                                \n                                    No graph available.\n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        PluginHeaderModule\n                    \n                    \n                                \n                                    No graph available.\n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        PluginImageModule\n                    \n                    \n                                \n                                    No graph available.\n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        PluginInlineCodeModule\n                    \n                    \n                                \n                                    No graph available.\n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        PluginLinkModule\n                    \n                    \n                                \n                                    No graph available.\n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        PluginListModule\n                    \n                    \n                                \n                                    No graph available.\n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        PluginMarkerModule\n                    \n                    \n                                \n                                    No graph available.\n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        PluginParagraphModule\n                    \n                    \n                                \n                                    No graph available.\n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        PluginQuoteModule\n                    \n                    \n                                \n                                    No graph available.\n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        PluginSimpleImageModule\n                    \n                    \n                                \n                                    No graph available.\n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        PluginWarningModule\n                    \n                    \n                                \n                                    No graph available.\n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"overview.html":{"url":"overview.html","title":"overview - overview","body":"\n                   \n\n\n\n    Overview\n\n  \n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_NgxEditorjsDemoModule\n\n\n\ncluster_NgxEditorjsDemoModule_declarations\n\n\n\ncluster_NgxEditorjsDemoModule_imports\n\n\n\ncluster_NgxEditorjsDemoModule_exports\n\n\n\ncluster_NgxEditorJSModule\n\n\n\ncluster_NgxEditorJSModule_declarations\n\n\n\ncluster_NgxEditorJSModule_exports\n\n\n\ncluster_NgxEditorJSModule_providers\n\n\n\ncluster_NgxEditorJSPluginServiceModule\n\n\n\ncluster_NgxEditorJSPluginServiceModule_providers\n\n\n\ncluster_NgxEditorjsPluginsModule\n\n\n\ncluster_NgxEditorjsPluginsModule_imports\n\n\n\ncluster_NgxEditorjsPluginsModule_exports\n\n\n\ncluster_NgxTinynodesComponentsModule\n\n\n\ncluster_NgxTinynodesComponentsModule_imports\n\n\n\ncluster_NgxTinynodesComponentsModule_exports\n\n\n\ncluster_NgxTinynodesMaterialFormFieldDemo\n\n\n\ncluster_NgxTinynodesMaterialFormFieldDemo_declarations\n\n\n\ncluster_NgxTinynodesMatJsonOutputModule\n\n\n\ncluster_NgxTinynodesMatJsonOutputModule_declarations\n\n\n\ncluster_NgxTinynodesMatJsonOutputModule_exports\n\n\n\ncluster_NgxTinynodesMatTagInputModule\n\n\n\ncluster_NgxTinynodesMatTagInputModule_declarations\n\n\n\ncluster_NgxTinynodesMatTagInputModule_NgxTinynodesMatTagInputComponent_providers\n\n\n\ncluster_NgxTinynodesMatTagInputModule_exports\n\n\n\ncluster_PageStoreModule\n\n\n\ncluster_PageStoreModule_providers\n\n\n\n\nNgxEditorJSDemoHomeComponent\n\nNgxEditorJSDemoHomeComponent\n\n\n\nNgxEditorjsDemoModule\n\nNgxEditorjsDemoModule\n\nNgxEditorjsDemoModule -->\n\nNgxEditorJSDemoHomeComponent->NgxEditorjsDemoModule\n\n\n\n\n\nPageContainerComponent\n\nPageContainerComponent\n\nNgxEditorjsDemoModule -->\n\nPageContainerComponent->NgxEditorjsDemoModule\n\n\n\n\n\nPageContainerComponent \n\nPageContainerComponent \n\nPageContainerComponent  -->\n\nNgxEditorjsDemoModule->PageContainerComponent \n\n\n\n\n\nPageStoreModule \n\nPageStoreModule \n\nPageStoreModule  -->\n\nNgxEditorjsDemoModule->PageStoreModule \n\n\n\n\n\nNgxEditorJSDemoMaterialModule\n\nNgxEditorJSDemoMaterialModule\n\nNgxEditorjsDemoModule -->\n\nNgxEditorJSDemoMaterialModule->NgxEditorjsDemoModule\n\n\n\n\n\nNgxTinynodesMaterialFormFieldDemo\n\nNgxTinynodesMaterialFormFieldDemo\n\nNgxTinynodesMaterialFormFieldDemo -->\n\nNgxEditorJSDemoMaterialModule->NgxTinynodesMaterialFormFieldDemo\n\n\n\n\n\nNgxEditorJSModule\n\nNgxEditorJSModule\n\nNgxEditorjsDemoModule -->\n\nNgxEditorJSModule->NgxEditorjsDemoModule\n\n\n\n\n\nNgxEditorJSComponent \n\nNgxEditorJSComponent \n\nNgxEditorJSComponent  -->\n\nNgxEditorJSModule->NgxEditorJSComponent \n\n\n\n\n\nNgxEditorJSDirective \n\nNgxEditorJSDirective \n\nNgxEditorJSDirective  -->\n\nNgxEditorJSModule->NgxEditorJSDirective \n\n\n\n\n\nNgxEditorJSMatFieldComponent \n\nNgxEditorJSMatFieldComponent \n\nNgxEditorJSMatFieldComponent  -->\n\nNgxEditorJSModule->NgxEditorJSMatFieldComponent \n\n\n\nNgxTinynodesMaterialFormFieldDemo -->\n\nNgxEditorJSModule->NgxTinynodesMaterialFormFieldDemo\n\n\n\n\n\nNgxEditorjsPluginsModule\n\nNgxEditorjsPluginsModule\n\nNgxEditorjsDemoModule -->\n\nNgxEditorjsPluginsModule->NgxEditorjsDemoModule\n\n\n\n\n\nNgxEditorJSPluginServiceModule \n\nNgxEditorJSPluginServiceModule \n\nNgxEditorJSPluginServiceModule  -->\n\nNgxEditorjsPluginsModule->NgxEditorJSPluginServiceModule \n\n\n\n\n\nPluginCodeModule \n\nPluginCodeModule \n\nPluginCodeModule  -->\n\nNgxEditorjsPluginsModule->PluginCodeModule \n\n\n\n\n\nPluginEmbedModule \n\nPluginEmbedModule \n\nPluginEmbedModule  -->\n\nNgxEditorjsPluginsModule->PluginEmbedModule \n\n\n\n\n\nPluginHeaderModule \n\nPluginHeaderModule \n\nPluginHeaderModule  -->\n\nNgxEditorjsPluginsModule->PluginHeaderModule \n\n\n\n\n\nPluginImageModule \n\nPluginImageModule \n\nPluginImageModule  -->\n\nNgxEditorjsPluginsModule->PluginImageModule \n\n\n\n\n\nPluginInlineCodeModule \n\nPluginInlineCodeModule \n\nPluginInlineCodeModule  -->\n\nNgxEditorjsPluginsModule->PluginInlineCodeModule \n\n\n\n\n\nPluginLinkModule \n\nPluginLinkModule \n\nPluginLinkModule  -->\n\nNgxEditorjsPluginsModule->PluginLinkModule \n\n\n\n\n\nPluginListModule \n\nPluginListModule \n\nPluginListModule  -->\n\nNgxEditorjsPluginsModule->PluginListModule \n\n\n\n\n\nPluginMarkerModule \n\nPluginMarkerModule \n\nPluginMarkerModule  -->\n\nNgxEditorjsPluginsModule->PluginMarkerModule \n\n\n\n\n\nPluginParagraphModule \n\nPluginParagraphModule \n\nPluginParagraphModule  -->\n\nNgxEditorjsPluginsModule->PluginParagraphModule \n\n\n\n\n\nPluginQuoteModule \n\nPluginQuoteModule \n\nPluginQuoteModule  -->\n\nNgxEditorjsPluginsModule->PluginQuoteModule \n\n\n\n\n\nPluginSimpleImageModule \n\nPluginSimpleImageModule \n\nPluginSimpleImageModule  -->\n\nNgxEditorjsPluginsModule->PluginSimpleImageModule \n\n\n\n\n\nPluginWarningModule \n\nPluginWarningModule \n\nPluginWarningModule  -->\n\nNgxEditorjsPluginsModule->PluginWarningModule \n\n\n\n\n\nPageStoreModule\n\nPageStoreModule\n\nNgxEditorjsDemoModule -->\n\nPageStoreModule->NgxEditorjsDemoModule\n\n\n\nNgxTinynodesMaterialFormFieldDemo -->\n\nPageStoreModule->NgxTinynodesMaterialFormFieldDemo\n\n\n\n\n\nNgxEditorJSComponent\n\nNgxEditorJSComponent\n\nNgxEditorJSModule -->\n\nNgxEditorJSComponent->NgxEditorJSModule\n\n\n\n\n\nNgxEditorJSDirective\n\nNgxEditorJSDirective\n\nNgxEditorJSModule -->\n\nNgxEditorJSDirective->NgxEditorJSModule\n\n\n\n\n\nNgxEditorJSMatFieldComponent\n\nNgxEditorJSMatFieldComponent\n\nNgxEditorJSModule -->\n\nNgxEditorJSMatFieldComponent->NgxEditorJSModule\n\n\n\n\n\nNgxEditorJSService\n\nNgxEditorJSService\n\nNgxEditorJSModule -->\n\nNgxEditorJSService->NgxEditorJSModule\n\n\n\n\n\nNgxEditorJSPluginService\n\nNgxEditorJSPluginService\n\n\n\nNgxEditorJSPluginServiceModule\n\nNgxEditorJSPluginServiceModule\n\nNgxEditorJSPluginServiceModule -->\n\nNgxEditorJSPluginService->NgxEditorJSPluginServiceModule\n\n\n\nNgxEditorjsPluginsModule -->\n\nNgxEditorJSPluginServiceModule->NgxEditorjsPluginsModule\n\n\n\n\n\nPluginCodeModule\n\nPluginCodeModule\n\nNgxEditorjsPluginsModule -->\n\nPluginCodeModule->NgxEditorjsPluginsModule\n\n\n\nNgxTinynodesMaterialFormFieldDemo -->\n\nPluginCodeModule->NgxTinynodesMaterialFormFieldDemo\n\n\n\n\n\nPluginEmbedModule\n\nPluginEmbedModule\n\nNgxEditorjsPluginsModule -->\n\nPluginEmbedModule->NgxEditorjsPluginsModule\n\n\n\n\n\nPluginHeaderModule\n\nPluginHeaderModule\n\nNgxEditorjsPluginsModule -->\n\nPluginHeaderModule->NgxEditorjsPluginsModule\n\n\n\nNgxTinynodesMaterialFormFieldDemo -->\n\nPluginHeaderModule->NgxTinynodesMaterialFormFieldDemo\n\n\n\n\n\nPluginImageModule\n\nPluginImageModule\n\nNgxEditorjsPluginsModule -->\n\nPluginImageModule->NgxEditorjsPluginsModule\n\n\n\n\n\nPluginInlineCodeModule\n\nPluginInlineCodeModule\n\nNgxEditorjsPluginsModule -->\n\nPluginInlineCodeModule->NgxEditorjsPluginsModule\n\n\n\n\n\nPluginLinkModule\n\nPluginLinkModule\n\nNgxEditorjsPluginsModule -->\n\nPluginLinkModule->NgxEditorjsPluginsModule\n\n\n\nNgxTinynodesMaterialFormFieldDemo -->\n\nPluginLinkModule->NgxTinynodesMaterialFormFieldDemo\n\n\n\n\n\nPluginListModule\n\nPluginListModule\n\nNgxEditorjsPluginsModule -->\n\nPluginListModule->NgxEditorjsPluginsModule\n\n\n\nNgxTinynodesMaterialFormFieldDemo -->\n\nPluginListModule->NgxTinynodesMaterialFormFieldDemo\n\n\n\n\n\nPluginMarkerModule\n\nPluginMarkerModule\n\nNgxEditorjsPluginsModule -->\n\nPluginMarkerModule->NgxEditorjsPluginsModule\n\n\n\nNgxTinynodesMaterialFormFieldDemo -->\n\nPluginMarkerModule->NgxTinynodesMaterialFormFieldDemo\n\n\n\n\n\nPluginParagraphModule\n\nPluginParagraphModule\n\nNgxEditorjsPluginsModule -->\n\nPluginParagraphModule->NgxEditorjsPluginsModule\n\n\n\nNgxTinynodesMaterialFormFieldDemo -->\n\nPluginParagraphModule->NgxTinynodesMaterialFormFieldDemo\n\n\n\n\n\nPluginQuoteModule\n\nPluginQuoteModule\n\nNgxEditorjsPluginsModule -->\n\nPluginQuoteModule->NgxEditorjsPluginsModule\n\n\n\n\n\nPluginSimpleImageModule\n\nPluginSimpleImageModule\n\nNgxEditorjsPluginsModule -->\n\nPluginSimpleImageModule->NgxEditorjsPluginsModule\n\n\n\nNgxTinynodesMaterialFormFieldDemo -->\n\nPluginSimpleImageModule->NgxTinynodesMaterialFormFieldDemo\n\n\n\n\n\nPluginWarningModule\n\nPluginWarningModule\n\nNgxEditorjsPluginsModule -->\n\nPluginWarningModule->NgxEditorjsPluginsModule\n\n\n\n\n\nNgxTinynodesMatJsonOutputModule\n\nNgxTinynodesMatJsonOutputModule\n\n\n\nNgxTinynodesComponentsModule\n\nNgxTinynodesComponentsModule\n\nNgxTinynodesComponentsModule -->\n\nNgxTinynodesMatJsonOutputModule->NgxTinynodesComponentsModule\n\n\n\n\n\nNgxTinynodesMatJsonOutputComponent \n\nNgxTinynodesMatJsonOutputComponent \n\nNgxTinynodesMatJsonOutputComponent  -->\n\nNgxTinynodesMatJsonOutputModule->NgxTinynodesMatJsonOutputComponent \n\n\n\n\n\nNgxTinynodesMatTagInputModule\n\nNgxTinynodesMatTagInputModule\n\nNgxTinynodesComponentsModule -->\n\nNgxTinynodesMatTagInputModule->NgxTinynodesComponentsModule\n\n\n\n\n\nNgxTinynodesMatTagInputComponent \n\nNgxTinynodesMatTagInputComponent \n\nNgxTinynodesMatTagInputComponent  -->\n\nNgxTinynodesMatTagInputModule->NgxTinynodesMatTagInputComponent \n\n\n\n\n\nNgxTinynodesMatJsonOutputModule \n\nNgxTinynodesMatJsonOutputModule \n\nNgxTinynodesMatJsonOutputModule  -->\n\nNgxTinynodesComponentsModule->NgxTinynodesMatJsonOutputModule \n\n\n\n\n\nNgxTinynodesMatTagInputModule \n\nNgxTinynodesMatTagInputModule \n\nNgxTinynodesMatTagInputModule  -->\n\nNgxTinynodesComponentsModule->NgxTinynodesMatTagInputModule \n\n\n\n\n\nNgxTinynodesMaterialFormFieldDemoComponent\n\nNgxTinynodesMaterialFormFieldDemoComponent\n\nNgxTinynodesMaterialFormFieldDemo -->\n\nNgxTinynodesMaterialFormFieldDemoComponent->NgxTinynodesMaterialFormFieldDemo\n\n\n\n\n\nNgxTinynodesMatJsonOutputComponent\n\nNgxTinynodesMatJsonOutputComponent\n\nNgxTinynodesMatJsonOutputModule -->\n\nNgxTinynodesMatJsonOutputComponent->NgxTinynodesMatJsonOutputModule\n\n\n\n\n\nNgxTinynodesMatTagInputComponent\n\nNgxTinynodesMatTagInputComponent\n\nNgxTinynodesMatTagInputModule -->\n\nNgxTinynodesMatTagInputComponent->NgxTinynodesMatTagInputModule\n\n\n\n\n\nTAG_COMPONENT_VALUE_ACCESSOR\n\nTAG_COMPONENT_VALUE_ACCESSOR\n\nNgxTinynodesMatTagInputComponent -->\n\nTAG_COMPONENT_VALUE_ACCESSOR->NgxTinynodesMatTagInputComponent\n\n\n\n\n\nTAG_COMPONENT_FIELD_CONTROL\n\nTAG_COMPONENT_FIELD_CONTROL\n\nNgxTinynodesMatTagInputComponent -->\n\nTAG_COMPONENT_FIELD_CONTROL->NgxTinynodesMatTagInputComponent\n\n\n\n\n\nPagesQuery\n\nPagesQuery\n\nPageStoreModule -->\n\nPagesQuery->PageStoreModule\n\n\n\n\n\nPagesService\n\nPagesService\n\nPageStoreModule -->\n\nPagesService->PageStoreModule\n\n\n\n\n\nPagesStore\n\nPagesStore\n\nPageStoreModule -->\n\nPagesStore->PageStoreModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n  \n\n    \n        \n            \n                \n                    \n                    \n                        24 Modules\n                    \n                \n            \n        \n        \n            \n                \n                    \n                    7 Components\n                \n            \n        \n        \n            \n                \n                    \n                    1 Directive\n                \n            \n        \n        \n            \n                \n                    \n                    6 Injectables\n                \n            \n        \n        \n            \n                \n                    \n                    3 Classes\n                \n            \n        \n        \n            \n                \n                    \n                    32 Interfaces\n                \n            \n        \n    \n\n\n \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"todo.html":{"url":"todo.html","title":"getting-started - todo","body":"\n                   \n\nngx-tinynodes Todo\nGeneral Todos\n\n Add CI pipeline for publishing modules\n Publish doc changes and tags back to repo\n\nngx-editorjs\n\n Add full EditorJS config support\n Add config options as @Input on component and directive\n Add autosave option support to module config\n Expose EditorJS CoreAPI via service helpers (e.g. blocks, selection, etc)\n ~~Provide peer-dependency ngrx/effects via library to control service~~\n\nngx-editorjs-demo\n\n Add store for page\n Add controls for setting editor\n Add Save feature\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/typealiases.html":{"url":"miscellaneous/typealiases.html","title":"miscellaneous-typealiases - typealiases","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous\n  Type aliases\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            BlockTypes   (libs/.../blocks.ts)\n                        \n                        \n                            EditorJSPlugin   (libs/.../plugins.ts)\n                        \n                        \n                            ListStyle   (libs/.../blocks.ts)\n                        \n                        \n                            PluginProperty   (libs/.../plugins.ts)\n                        \n                        \n                            PluginType   (libs/.../plugins.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    libs/ngx-editorjs/ngx-editorjs/src/lib/types/blocks.ts\n    \n    \n        \n            \n                \n                    \n                    BlockTypes\n                \n            \n            \n                \n                    Type of all the basic block type\n\n                \n            \n            \n                \n                        ParagraphBlock | HeaderBlock | ImageBlock | ListBlock | Block\n\n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    ListStyle\n                \n            \n            \n                \n                    Available list styles, supports ordered and unordered.\nA custom string can also be added\n\n                \n            \n            \n                \n                        \"ordered\" | \"unordered\" | string\n\n                \n            \n        \n    \n    libs/ngx-editorjs/ngx-editorjs-plugins/src/lib/types/plugins.ts\n    \n    \n        \n            \n                \n                    \n                    EditorJSPlugin\n                \n            \n            \n                \n                    The EditorJS tool settings for this plugin\n\n                \n            \n            \n                \n                        ToolConstructable | ToolSettings\n\n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    PluginProperty\n                \n            \n            \n                \n                    A plugin property\n\n                \n            \n            \n                \n                            string\n\n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    PluginType\n                \n            \n            \n                \n                    The types of plugins supported via the plugin type property\n\n                \n            \n            \n                \n                            PluginTypes.Block | PluginTypes.Inline | string\n\n                \n            \n        \n    \n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/variables.html":{"url":"miscellaneous/variables.html","title":"miscellaneous-variables - variables","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous\n  Variables\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            context   (libs/.../test.ts)\n                        \n                        \n                            DEFAULT_HOLDER_ID   (libs/.../editor-config.ts)\n                        \n                        \n                            EDITIOR_JS_INSTANCE   (libs/.../config.ts)\n                        \n                        \n                            EDITOR_JS_TOOL_INJECTOR   (libs/.../plugins.ts)\n                        \n                        \n                            EDITORJS_FORM_VALUE_ACCESSOR   (libs/.../editorjs.component.ts)\n                        \n                        \n                            EDITORJS_MATERIAL_FIELD_CONTROL   (libs/.../editorjs-mat-field.component.ts)\n                        \n                        \n                            EDITORJS_MODULE_IMPORT   (libs/.../injector.ts)\n                        \n                        \n                            EditorJSInstance   (libs/.../injector.ts)\n                        \n                        \n                            FOR_ROOT_OPTIONS_TOKEN   (libs/.../config.ts)\n                        \n                        \n                            MAP_DEFAULTS   (libs/.../injector.ts)\n                        \n                        \n                            NGX_EDITORJS_CONFIG   (libs/.../config.ts)\n                        \n                        \n                            ngxEditorjsDemoRoutes   (libs/.../ngx-editorjs-demo.routes.ts)\n                        \n                        \n                            PLUGIN_CONFIG   (libs/.../plugins.ts)\n                        \n                        \n                            PluginClasses   (libs/.../plugins.ts)\n                        \n                        \n                            require   (libs/.../test.ts)\n                        \n                        \n                            TAG_COMPONENT_FIELD_CONTROL   (libs/.../mat-tag-input.component.ts)\n                        \n                        \n                            TAG_COMPONENT_VALUE_ACCESSOR   (libs/.../mat-tag-input.component.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    libs/ngx-tinynodes-components/src/test.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            context\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : require.context('./', true, /\\.spec\\.ts$/)\n                        \n                    \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            require\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         any\n\n                        \n                    \n\n\n            \n        \n\n    libs/ngx-editorjs/ngx-editorjs/src/lib/config/editor-config.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            DEFAULT_HOLDER_ID\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Default value : 'editor-js'\n                        \n                    \n\n                \n                    \n                        The default holder ID to attach EditorJS to\n\n                    \n                \n\n            \n        \n\n    libs/ngx-editorjs/ngx-editorjs/src/lib/types/config.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            EDITIOR_JS_INSTANCE\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : new InjectionToken('EDITIOR_JS_INSTANCE')\n                        \n                    \n\n                \n                    \n                        Get the EditorJS instance injected into the app\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            FOR_ROOT_OPTIONS_TOKEN\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : new InjectionToken('FOR_ROOT_OPTIONS_TOKEN')\n                        \n                    \n\n                \n                    \n                        Internal token for injecting the NgxEditorJSConfig into the config factory\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            NGX_EDITORJS_CONFIG\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : new InjectionToken('NGX_EDITORJS_CONFIG')\n                        \n                    \n\n                \n                    \n                        Injection token provied for NgxEditorJSConfig\n\n                    \n                \n\n            \n        \n\n    libs/ngx-editorjs/ngx-editorjs-plugins/src/lib/types/plugins.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            EDITOR_JS_TOOL_INJECTOR\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : new InjectionToken('EDITOR_JS_TOOL_INJECTOR')\n                        \n                    \n\n                \n                    \n                        The Injection token for initial plugins as defined in the ngx-editorjs module\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            PLUGIN_CONFIG\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : new InjectionToken('PLUGIN_CONFIG')\n                        \n                    \n\n                \n                    \n                        Injection token for a plugin config\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            PluginClasses\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : new InjectionToken('PluginClasses')\n                        \n                    \n\n                \n                    \n                        Injection token for the plugin config map\n\n                    \n                \n\n            \n        \n\n    libs/ngx-editorjs/ngx-editorjs/src/lib/containers/editorjs/editorjs.component.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            EDITORJS_FORM_VALUE_ACCESSOR\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Provider\n\n                        \n                    \n                    \n                        \n                            Default value : {\n  provide: NG_VALUE_ACCESSOR,\n  useExisting: forwardRef(() => NgxEditorJSComponent),\n  multi: true\n}\n                        \n                    \n\n                \n                    \n                        The NgxEditorJSBaseComponent Provider for NG_VALUE_ACCESSOR\n\n                    \n                \n\n            \n        \n\n    libs/ngx-editorjs/ngx-editorjs/src/lib/containers/editorjs-mat-field/editorjs-mat-field.component.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            EDITORJS_MATERIAL_FIELD_CONTROL\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Provider\n\n                        \n                    \n                    \n                        \n                            Default value : {\n  provide: MatFormFieldControl,\n  useExisting: forwardRef(() => NgxEditorJSMatFieldComponent),\n  multi: true\n}\n                        \n                    \n\n                \n                    \n                        Provider for the EditorJS Material Field Component\n\n                    \n                \n\n            \n        \n\n    libs/ngx-editorjs/ngx-editorjs/src/lib/types/injector.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            EDITORJS_MODULE_IMPORT\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : new InjectionToken('EDITORJS_MODULE_IMPORT')\n                        \n                    \n\n                \n                    \n                        Injection token for the EditorJS class\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            EditorJSInstance\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : new InjectionToken('EditorJSInstance')\n                        \n                    \n\n                \n                    \n                        The EditorJS class injector\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            MAP_DEFAULTS\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     []\n\n                        \n                    \n                    \n                        \n                            Default value : [\n  ['lastChangeMap', { time: 0, blocks: [], version: EditorJS.version }],\n  ['isReadyMap', false],\n  ['hasSavedMap', false]\n]\n                        \n                    \n\n                \n                    \n                        Default values for each internal map\n\n                    \n                \n\n            \n        \n\n    libs/ngx-editorjs/ngx-editorjs-demo/src/lib/ngx-editorjs-demo.routes.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            ngxEditorjsDemoRoutes\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     Route[]\n\n                        \n                    \n                    \n                        \n                            Default value : [\n  {\n    path: 'ngx-editorjs-demo',\n    component: NgxEditorJSDemoHomeComponent\n  },\n  {\n    path: 'ngx-editorjs-demo/angular-component',\n    component: PageContainerComponent\n  },\n  {\n    path: 'ngx-editorjs-demo/angular-form',\n    loadChildren: () =>\n      import('./demos/material-form-field/material-form-field.module').then(m => m.NgxTinynodesMaterialFormFieldDemo)\n  }\n]\n                        \n                    \n\n\n            \n        \n\n    libs/ngx-tinynodes-components/src/lib/components/mat-tag-input/mat-tag-input.component.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            TAG_COMPONENT_FIELD_CONTROL\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Provider\n\n                        \n                    \n                    \n                        \n                            Default value : {\n  provide: MatFormFieldControl,\n  useExisting: forwardRef(() => NgxTinynodesMatTagInputComponent),\n  multi: true\n}\n                        \n                    \n\n                \n                    \n                        Provider for Material field support\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            TAG_COMPONENT_VALUE_ACCESSOR\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Provider\n\n                        \n                    \n                    \n                        \n                            Default value : {\n  provide: NG_VALUE_ACCESSOR,\n  useExisting: forwardRef(() => NgxTinynodesMatTagInputComponent),\n  multi: true\n}\n                        \n                    \n\n                \n                    \n                        Tag Value Accessor\n\n                    \n                \n\n            \n        \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"}}
}
