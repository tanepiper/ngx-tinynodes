var COMPODOC_SEARCH_INDEX = {
    "index": {"version":"2.3.6","fields":["title","body"],"fieldVectors":[["title/interfaces/Block.html",[0,0.06,1,0.432]],["body/interfaces/Block.html",[0,0.11,1,0.835,2,0.711,3,0.282,4,0.282,5,0.21,6,0.297,7,1.641,8,0.341,9,2.073,10,0.892,11,0.228,12,0.742,13,1.645,14,1.725,15,1.831,16,0.926,17,1.232,18,1.234,19,3.393,20,1.752,21,2.447,22,0.017,23,0.516,24,1.181,25,2.555,26,1.641,27,1.559,28,2.329,29,2.329,30,1.484,31,1.234,32,2.329,33,0.766,34,2.457,35,2.457,36,1.084,37,0.808,38,2.213,39,2.216,40,2.145,41,2.8,42,2.213,43,2.736,44,2.213,45,1.641,46,1.641,47,1.131,48,2.213,49,2.814,50,2.457,51,1.171,52,2.457,53,1.731,54,1.643,55,1.731,56,1.866,57,1.731,58,1.731,59,1.731,60,1.731,61,2.213,62,1.641,63,1.641,64,0.007,65,0.01,66,0.007]],["title/interfaces/BlockData.html",[0,0.06,67,2.479]],["body/interfaces/BlockData.html",[0,0.1,1,0.762,2,0.762,3,0.302,4,0.302,5,0.224,6,0.312,8,0.584,10,0.79,11,0.222,14,1.495,15,1.961,16,1.374,17,1.148,18,1.838,22,0.017,23,0.537,33,0.433,37,1.855,51,1.117,54,1.483,64,0.007,65,0.01,66,0.007,67,3.836,68,2.082,69,3.634,70,0.602,71,1.67,72,0.583,73,3.311,74,3.311,75,1.067,76,2.895,77,1.856,78,2.895,79,1.961,80,3.037,81,2.575,82,1.382,83,1.59,84,2.381,85,1.515,86,2.082,87,4.477,88,1.922,89,3.807,90,3.549,91,1.635,92,1.758,93,2.22,94,2.381,95,1.023,96,1.854,97,3.087,98,2.575,99,1.961,100,1.446,101,2.381,102,2.575,103,1.515,104,1.446,105,2.578,106,2.322,107,2.22,108,1.212,109,2.381,110,2.312,111,2.541,112,1.67,113,1.113,114,0.365,115,2.312,116,1.265,117,1.779,118,2.381,119,2.21,120,1.265,121,2.381,122,2.575,123,2.22,124,2.575,125,1.446,126,2.381]],["title/interfaces/ChangeMap.html",[0,0.06,127,2.325]],["body/interfaces/ChangeMap.html",[0,0.104,1,0.615,2,0.928,3,0.368,4,0.368,5,0.273,6,0.356,8,0.445,11,0.235,15,2.389,16,1.466,17,1.186,18,1.61,22,0.017,23,0.51,47,1.476,64,0.009,65,0.012,66,0.009,70,0.765,75,1.299,91,2.146,127,3.307,128,2.9,129,4.997,130,4.505,131,2.945,132,2.678,133,1.624,134,4.426,135,1.683,136,2.258,137,2.443,138,1.936,139,2.536,140,2.297,141,1.936,142,2.945,143,2.536,144,2.536,145,2.336,146,2.389,147,2.704,148,2.297]],["title/interfaces/CreateEditorJSOptions.html",[0,0.06,149,3.146]],["body/interfaces/CreateEditorJSOptions.html",[0,0.075,2,1.068,3,0.424,4,0.424,5,0.315,6,0.315,8,0.512,10,0.773,11,0.205,12,1.115,13,1.704,17,1.153,22,0.016,23,0.368,47,2.286,51,1.443,64,0.01,65,0.013,66,0.01,70,0.607,75,1.496,92,3.467,95,1.777,106,2.901,119,2.726,145,2.296,149,4.893,150,5.095,151,5.095,152,2.632,153,4.586,154,5.556,155,3.294,156,2.761,157,3.294,158,3.617]],["title/interfaces/EditorJSChange.html",[0,0.06,147,2.479]],["body/interfaces/EditorJSChange.html",[0,0.103,1,0.722,2,0.918,3,0.364,4,0.364,5,0.27,6,0.27,8,0.44,10,0.646,11,0.235,12,0.958,13,1.547,16,1.434,17,1.139,22,0.017,23,0.508,47,2.13,64,0.009,65,0.012,66,0.009,70,0.761,75,1.285,91,2.099,127,2.509,128,2.869,129,4.887,130,4.445,131,2.234,132,2.39,133,1.232,135,1.665,136,2.234,137,2.797,138,1.915,139,2.509,140,2.281,141,1.915,142,2.924,143,2.509,144,2.509,145,2.625,146,3.093,147,3.501,148,2.873]],["title/interfaces/EditorJSClass.html",[0,0.06,159,2.325]],["body/interfaces/EditorJSClass.html",[0,0.103,1,0.387,2,0.762,3,0.302,4,0.302,5,0.224,6,0.224,8,0.365,10,0.655,11,0.247,12,0.795,13,1.364,14,0.865,17,1.22,21,1.922,22,0.017,23,0.517,33,0.433,39,2.113,51,1.117,54,1.067,56,1.212,64,0.01,65,0.01,66,0.007,70,0.692,71,1.67,72,0.583,75,1.067,91,1.023,95,1.422,108,2.2,110,1.446,111,1.59,115,2.312,117,1.779,132,1.515,133,1.858,135,1.922,137,2.21,140,1.446,141,1.59,145,1.322,148,1.446,152,2.107,156,2.21,157,2.67,159,2.895,160,2.22,161,2.107,162,1.313,163,2.011,164,2.895,165,3.335,166,2.578,167,1.255,168,3.087,169,3.311,170,2.578,171,2.444,172,2.082,173,2.22,174,1.59,175,3.066,176,2.627,177,3.562,178,2.381,179,2.22,180,2.578,181,2.22,182,1.758,183,1.59,184,2.082,185,2.082,186,1.758,187,1.961,188,2.082,189,2.082,190,2.082,191,2.22,192,2.727,193,1.961,194,2.22,195,1.961,196,1.961,197,2.381,198,2.381,199,1.854,200,2.22,201,1.856,202,2.895,203,3.087,204,2.082,205,2.082,206,2.22]],["title/interfaces/EditorJSInstanceConfig.html",[0,0.06,173,2.479]],["body/interfaces/EditorJSInstanceConfig.html",[0,0.1,1,0.378,2,0.744,3,0.295,4,0.295,5,0.219,6,0.219,8,0.357,10,0.701,11,0.243,12,0.777,13,1.342,14,0.845,17,1.17,21,1.891,22,0.017,23,0.514,33,0.423,39,1.808,51,1.338,54,1.459,56,1.184,64,0.01,65,0.01,66,0.007,70,0.683,71,1.631,72,0.57,75,1.042,91,0.999,95,1.75,108,2.369,110,1.413,111,1.553,115,2.284,117,1.757,132,1.48,133,1.842,135,1.891,137,2.182,140,1.413,141,2.175,145,1.808,148,1.413,152,2.073,156,2.175,157,3.265,159,2.034,160,2.169,161,1.48,162,1.195,163,1.413,164,2.034,165,2.857,166,1.811,167,0.881,168,2.169,169,2.326,170,1.811,171,3.165,172,2.848,173,3.037,174,2.175,175,3.108,176,2.772,177,3.758,178,3.258,179,3.798,180,2.537,181,3.798,182,1.717,183,1.553,184,2.034,185,2.034,186,1.717,187,1.916,188,2.034,189,2.034,190,2.034,191,2.169,192,2.683,193,1.916,194,2.169,195,1.916,196,1.916,197,2.326,198,2.326,199,1.811,200,2.169,201,1.833,202,2.848,203,3.037,204,2.034,205,2.034,206,2.169]],["title/interfaces/EditorJSMaterialForm.html",[0,0.06,207,3.508]],["body/interfaces/EditorJSMaterialForm.html",[0,0.064,2,0.47,3,0.187,4,0.187,5,0.138,6,0.138,8,0.225,9,1.37,10,0.253,11,0.186,13,0.953,17,0.734,22,0.017,23,0.315,39,1.801,51,0.678,56,1.907,64,0.005,65,0.007,66,0.005,70,0.777,72,0.36,99,2.356,101,2.313,108,1.177,113,1.336,115,0.892,117,0.686,133,0.993,136,1.144,142,3.705,145,1.284,146,1.21,153,1.37,155,3.337,156,1.909,162,0.678,164,2.501,167,0.876,174,2.502,177,1.21,180,2.227,182,1.084,183,0.981,186,1.084,207,4.655,208,1.938,209,3.656,210,1.738,211,1.938,212,2.5,213,3.838,214,5.385,215,2.242,216,2.242,217,2.242,218,3.384,219,1.938,220,2.736,221,3.158,222,3.051,223,3.051,224,3.529,225,2.313,226,2.5,227,3.773,228,3.529,229,2.242,230,4.951,231,1.469,232,1.938,233,3.277,234,3.093,235,1.938,236,1.738,237,2.526,238,1.938,239,1.938,240,2.227,241,1.738,242,2.356,243,2.242,244,4.605,245,3.051,246,0.631,247,1.938,248,2.156,249,0.892,250,1.229,251,2.242,252,1.738,253,1.588,254,2.242,255,1.37,256,1.738,257,1.938,258,2.242,259,2.242,260,2.242,261,0.631,262,3.773,263,1.938,264,1.738,265,2.356,266,2.242,267,3.594,268,2.242,269,2.667,270,2.242,271,3.529,272,2.242,273,3.594,274,3.429,275,3.529,276,3.989,277,2.242,278,2.242,279,6.2,280,3.656,281,3.085,282,2.242,283,3.529,284,2.242,285,2.242,286,4.639,287,2.242,288,4.365,289,2.242,290,2.242,291,2.242,292,3.529,293,2.242,294,3.529,295,2.242,296,2.242,297,2.242,298,2.242,299,5.719,300,2.242,301,3.529,302,2.242,303,2.242,304,2.242,305,4.639,306,2.242,307,3.529,308,2.242,309,1.738,310,2.313,311,2.242,312,2.242,313,2.86,314,2.242,315,3.051,316,3.529,317,2.242,318,2.242,319,1.738,320,2.242,321,2.242,322,2.242,323,3.529,324,2.242,325,2.242,326,2.242,327,3.529,328,3.529,329,1.21,330,2.242,331,2.242,332,2.242,333,2.736,334,3.051,335,3.529,336,2.242,337,2.242,338,2.156,339,2.242,340,3.051,341,2.86,342,2.242,343,1.21,344,2.242,345,1.738,346,1.938,347,1.938,348,1.144,349,3.773,350,2.242,351,1.738,352,2.242,353,3.529,354,1.738,355,2.242,356,1.588,357,1.588,358,1.738,359,1.469,360,1.938,361,1.938,362,1.738,363,2.242,364,1.938,365,2.242,366,2.242,367,1.938,368,2.242,369,1.738,370,2.242,371,2.242,372,2.242,373,2.242]],["title/interfaces/EditorMap.html",[0,0.06,139,2.325]],["body/interfaces/EditorMap.html",[0,0.104,1,0.617,2,0.933,3,0.37,4,0.37,5,0.275,6,0.358,8,0.447,11,0.23,15,2.402,16,1.467,17,1.188,18,1.619,22,0.017,23,0.511,47,1.484,64,0.009,65,0.012,66,0.009,70,0.767,75,1.306,91,2.148,127,2.55,128,2.916,129,5.001,130,4.508,131,2.27,132,2.415,133,1.252,135,1.692,136,2.27,137,2.449,138,2.533,139,3.318,140,2.305,141,1.946,142,2.955,143,2.55,144,2.55,145,2.342,146,2.402,147,2.718,148,2.305,374,4.45]],["title/interfaces/Header.html",[0,0.06,43,1.615]],["body/interfaces/Header.html",[0,0.11,1,0.83,2,0.72,3,0.286,4,0.286,5,0.212,6,0.212,7,1.662,8,0.345,10,0.883,11,0.218,12,0.752,13,1.521,14,1.642,16,0.66,17,1.221,20,1.25,21,2.144,22,0.017,23,0.518,24,1.196,25,2.563,26,1.662,27,1.579,28,2.35,29,2.35,30,1.503,31,1.25,32,2.35,33,0.799,34,2.479,35,2.479,36,1.098,37,0.818,38,2.233,39,2.229,40,2.155,41,3.238,42,2.233,43,2.925,44,3.084,45,2.35,46,2.35,47,1.879,48,2.233,49,2.828,50,2.479,51,1.178,52,2.479,53,1.753,54,1.654,55,1.753,56,1.879,57,1.753,58,1.753,59,1.753,60,1.753,61,2.233,62,1.662,63,1.662,64,0.007,65,0.01,66,0.007]],["title/interfaces/HeaderBlock.html",[0,0.06,48,1.865]],["body/interfaces/HeaderBlock.html",[0,0.111,1,0.836,2,0.735,3,0.292,4,0.292,5,0.216,6,0.216,7,1.695,8,0.352,10,0.886,11,0.226,12,0.767,13,1.538,14,1.608,16,0.674,17,1.19,20,1.275,21,2.167,22,0.017,23,0.52,24,1.22,25,2.576,26,1.695,27,1.61,28,2.383,29,2.383,30,1.533,31,1.275,32,2.383,33,0.775,34,2.514,35,2.514,36,1.119,37,0.834,38,2.264,39,2.369,40,2.171,41,2.84,42,2.264,43,2.819,44,2.264,45,1.695,46,1.695,47,1.168,48,2.618,49,2.849,50,2.514,51,1.188,52,2.514,53,1.788,54,1.672,55,1.788,56,1.9,57,1.788,58,1.788,59,1.788,60,1.788,61,2.264,62,1.695,63,1.695,64,0.007,65,0.01,66,0.007]],["title/interfaces/Image.html",[0,0.06,49,1.775]],["body/interfaces/Image.html",[0,0.109,1,0.826,2,0.685,3,0.272,4,0.272,5,0.202,6,0.202,7,1.58,8,0.328,10,0.884,11,0.215,12,0.715,13,1.48,14,1.618,16,0.628,17,1.235,20,1.188,21,2.085,22,0.017,23,0.512,24,1.137,25,2.53,26,1.58,27,1.501,28,2.267,29,2.267,30,1.429,31,1.188,32,2.267,33,0.786,34,2.391,35,2.391,36,1.044,37,0.778,38,2.154,39,2.178,40,2.114,41,2.752,42,2.154,43,2.768,44,2.154,45,1.58,46,1.58,47,1.089,48,2.154,49,3.042,50,3.367,51,1.454,52,3.367,53,2.391,54,1.937,55,3.056,56,2.361,57,2.391,58,3.056,59,2.391,60,3.056,61,2.154,62,1.58,63,1.58,64,0.007,65,0.01,66,0.007]],["title/interfaces/ImageBlock.html",[0,0.06,61,1.865]],["body/interfaces/ImageBlock.html",[0,0.111,1,0.836,2,0.735,3,0.292,4,0.292,5,0.216,6,0.216,7,1.695,8,0.352,10,0.886,11,0.226,12,0.767,13,1.538,14,1.608,16,0.674,17,1.19,20,1.275,21,2.167,22,0.017,23,0.52,24,1.22,25,2.576,26,1.695,27,1.61,28,2.383,29,2.383,30,1.533,31,1.275,32,2.383,33,0.775,34,2.514,35,2.514,36,1.119,37,0.834,38,2.264,39,2.369,40,2.171,41,2.84,42,2.264,43,2.762,44,2.264,45,1.695,46,1.695,47,1.168,48,2.264,49,2.954,50,2.514,51,1.188,52,2.514,53,1.788,54,1.672,55,1.788,56,1.9,57,1.788,58,1.788,59,1.788,60,1.788,61,2.618,62,1.695,63,1.695,64,0.007,65,0.01,66,0.007]],["title/interfaces/InjectorApiCallOptions.html",[0,0.06,202,2.325]],["body/interfaces/InjectorApiCallOptions.html",[0,0.1,1,0.381,2,0.749,3,0.298,4,0.298,5,0.221,6,0.221,8,0.359,10,0.703,11,0.245,12,0.782,13,1.349,14,0.851,17,1.265,21,1.9,22,0.017,23,0.514,33,0.426,39,1.818,51,1.306,54,1.05,56,1.192,64,0.01,65,0.01,66,0.007,70,0.686,71,1.643,72,0.574,75,1.05,91,1.006,95,1.406,108,2.188,110,1.423,111,1.564,115,2.293,117,1.763,132,1.491,133,1.913,135,1.9,137,2.191,140,1.423,141,1.564,145,1.301,148,1.423,152,2.402,156,2.186,157,2.647,159,2.049,160,2.184,161,1.491,162,1.198,163,1.423,164,2.049,165,2.866,166,1.824,167,0.888,168,2.184,169,2.343,170,1.824,171,1.73,172,2.049,173,2.184,174,1.564,175,3.239,176,2.879,177,3.766,178,2.343,179,2.184,180,2.55,181,2.184,182,1.73,183,1.564,184,2.049,185,2.049,186,1.73,187,1.93,188,2.049,189,2.049,190,2.049,191,2.184,192,2.697,193,1.93,194,2.184,195,1.93,196,1.93,197,2.343,198,2.343,199,2.55,200,3.053,201,2.096,202,3.3,203,4.153,204,2.049,205,2.049,206,2.184]],["title/interfaces/InjectorApiCallResponse.html",[0,0.06,205,2.325]],["body/interfaces/InjectorApiCallResponse.html",[0,0.101,1,0.396,2,0.779,3,0.309,4,0.309,5,0.23,6,0.23,8,0.374,10,0.579,11,0.245,12,0.813,13,1.385,14,0.885,17,1.185,21,2.412,22,0.017,23,0.519,33,0.442,39,2.139,51,1.13,54,1.091,56,1.239,64,0.014,65,0.011,66,0.008,70,0.7,71,1.708,72,0.596,75,1.091,91,1.046,95,1.445,108,2.218,110,1.479,111,1.626,115,2.34,117,1.8,132,1.55,133,1.785,135,1.952,137,2.236,140,1.479,141,1.626,145,1.352,148,1.479,152,2.14,156,2.245,157,2.702,159,2.129,160,2.27,161,1.55,162,1.219,163,1.479,164,2.129,165,2.914,166,1.896,167,0.923,168,2.27,169,2.435,170,1.896,171,1.798,172,2.129,173,2.27,174,1.626,175,3.085,176,2.648,177,3.591,178,2.435,179,2.27,180,2.619,181,2.27,182,1.798,183,1.626,184,2.129,185,2.129,186,1.798,187,2.006,188,2.129,189,2.129,190,2.129,191,2.27,192,2.77,193,2.006,194,2.27,195,2.006,196,2.006,197,2.435,198,2.435,199,1.896,200,2.27,201,2.025,202,3.368,203,3.135,204,2.941,205,2.941,206,2.27]],["title/interfaces/InjectorMethodOption.html",[0,0.06,195,2.19]],["body/interfaces/InjectorMethodOption.html",[0,0.099,1,0.377,2,0.741,3,0.294,4,0.294,5,0.218,6,0.218,8,0.355,10,0.736,11,0.244,12,0.773,13,1.338,14,1.477,17,1.212,21,1.885,22,0.017,23,0.513,33,0.421,39,1.803,51,1.42,54,1.038,56,1.908,64,0.01,65,0.01,66,0.007,70,0.681,71,1.624,72,0.567,75,1.038,91,0.995,95,1.395,108,2.405,110,1.407,111,1.546,115,2.278,117,1.752,132,2.067,133,1.746,135,2.36,137,2.36,140,1.407,141,1.546,145,1.286,148,1.407,152,2.387,156,2.168,157,2.63,159,2.025,160,2.159,161,1.474,162,1.192,163,1.407,164,2.025,165,2.851,166,1.803,167,0.878,168,2.159,169,2.316,170,1.803,171,1.71,172,2.025,173,2.159,174,1.546,175,3.232,176,2.696,177,3.656,178,2.316,179,2.159,180,2.529,181,2.159,182,1.71,183,1.546,184,2.025,185,2.025,186,1.71,187,1.908,188,2.025,189,2.025,190,2.025,191,2.159,192,3.089,193,1.908,194,2.159,195,2.675,196,2.675,197,3.248,198,4.065,199,1.803,200,2.159,201,1.828,202,2.84,203,3.028,204,2.025,205,2.025,206,2.159]],["title/interfaces/List.html",[0,0.06,25,1.476]],["body/interfaces/List.html",[0,0.11,1,0.83,2,0.72,3,0.286,4,0.286,5,0.212,6,0.212,7,1.662,8,0.345,10,0.885,11,0.218,12,0.752,13,1.521,14,1.642,16,0.66,17,1.184,20,1.25,21,2.553,22,0.017,23,0.518,24,1.196,25,2.698,26,1.662,27,1.579,28,2.35,29,2.35,30,1.503,31,1.25,32,2.963,33,0.799,34,3.424,35,3.424,36,1.098,37,0.818,38,2.233,39,2.229,40,2.155,41,2.816,42,2.233,43,2.746,44,2.233,45,1.662,46,1.662,47,1.146,48,2.233,49,2.828,50,2.479,51,1.178,52,2.479,53,1.753,54,1.654,55,1.753,56,1.879,57,1.753,58,1.753,59,1.753,60,1.753,61,2.233,62,1.662,63,1.662,64,0.007,65,0.01,66,0.007]],["title/interfaces/ListBlock.html",[0,0.06,38,1.865]],["body/interfaces/ListBlock.html",[0,0.11,1,0.836,2,0.73,3,0.29,4,0.29,5,0.215,6,0.215,7,1.685,8,0.35,10,0.886,11,0.23,12,0.762,13,1.533,14,1.605,16,0.67,17,1.189,20,1.268,21,2.16,22,0.017,23,0.52,24,1.213,25,2.651,26,1.685,27,1.601,28,2.373,29,2.373,30,1.524,31,1.268,32,2.373,33,0.803,34,2.504,35,2.504,36,1.567,37,1.168,38,2.61,39,2.364,40,2.167,41,2.833,42,2.255,43,2.757,44,2.255,45,1.685,46,1.685,47,1.162,48,2.255,49,2.843,50,2.504,51,1.185,52,2.504,53,1.778,54,1.667,55,1.778,56,1.894,57,1.778,58,1.778,59,1.778,60,1.778,61,2.255,62,1.685,63,1.685,64,0.007,65,0.01,66,0.007]],["title/interfaces/NgxEditorJSConfig.html",[0,0.06,375,2.875]],["body/interfaces/NgxEditorJSConfig.html",[0,0.074,1,0.727,2,0.758,3,0.301,4,0.301,5,0.223,6,0.223,8,0.364,10,0.805,11,0.232,12,0.791,13,1.36,14,1.624,17,1.219,22,0.017,23,0.476,33,0.812,40,1.68,47,1.932,51,1.475,56,2.275,64,0.007,65,0.01,66,0.007,70,0.6,71,1.663,72,0.581,75,1.062,95,1.92,103,2.101,107,3.078,110,1.44,111,2.204,112,2.88,115,2.307,117,1.775,119,2.204,131,2.57,133,1.631,135,2.384,152,1.509,155,2.315,156,2.204,157,2.315,161,1.509,175,2.742,176,1.44,183,1.583,196,1.953,250,1.754,265,2.719,280,3.078,341,3.301,343,2.719,375,4.44,376,2.804,377,4.44,378,4.107,379,4.44,380,4.44,381,4.44,382,4.834,383,4.355,384,3.569,385,2.719,386,3.569,387,3.569,388,3.301,389,4.355,390,4.355,391,4.355,392,3.569,393,3.905,394,3.569,395,3.905,396,3.569,397,4.858,398,2.073,399,2.371,400,2.21,401,2.804,402,2.371,403,2.804,404,2.563,405,2.21,406,2.563,407,2.804,408,2.21,409,2.804,410,2.804]],["title/directives/NgxEditorJSDirective.html",[237,2.071,411,2.19]],["body/directives/NgxEditorJSDirective.html",[1,0.675,3,0.123,4,0.123,5,0.091,6,0.435,8,0.387,10,0.772,11,0.23,12,0.322,14,0.596,17,1.121,18,2.545,22,0.017,23,0.107,24,0.871,31,1.703,33,0.458,36,1.042,37,0.596,40,0.835,41,1.767,47,1.752,51,0.627,54,1.466,56,1.752,64,0.003,65,0.005,66,0.003,70,0.594,72,0.237,75,0.433,83,1.682,92,1.86,95,1.212,96,1.277,100,1.298,103,1.796,106,1.15,108,2.039,112,1.767,113,0.766,115,0.996,117,1.736,119,1.781,130,0.845,131,1.277,132,1.604,133,1.928,135,0.561,136,0.752,137,2.156,140,0.587,141,1.682,142,1.664,145,0.911,148,1.714,153,3.21,154,4.246,155,2.956,157,2.152,162,0.283,163,1.864,165,0.677,166,1.962,167,0.621,175,2.618,176,0.996,180,0.752,186,1.86,187,0.796,199,1.277,218,2.529,220,2.981,221,2.895,225,3.825,226,2.724,234,2.311,235,1.274,236,1.143,237,1.277,240,2.681,241,1.143,250,1.339,255,1.529,256,1.94,264,1.94,265,2.836,267,3.698,269,1.529,273,3.06,274,2.683,276,2.631,280,1.993,281,2.203,286,1.94,305,1.94,313,2.52,315,2.164,319,1.94,329,1.351,334,3.723,338,1.529,340,3.324,341,1.64,343,3.472,345,2.529,348,1.962,349,2.82,351,2.981,354,1.143,356,1.773,359,1.64,360,2.164,362,1.143,364,3.324,367,2.82,377,3.537,378,2.52,379,3.052,380,3.052,381,3.052,382,3.537,385,1.351,386,3.317,387,1.773,388,1.64,392,1.773,394,1.773,397,3.339,411,3.561,412,1.274,413,7.039,414,1.474,415,2.164,416,1.773,417,2.52,418,1.94,419,2.82,420,1.274,421,1.94,422,1.351,423,4.735,424,2.503,425,3.324,426,3.845,427,2.164,428,2.503,429,2.82,430,3.324,431,3.262,432,3.324,433,3.262,434,2.503,435,2.503,436,2.683,437,5.477,438,1.474,439,3.845,440,1.474,441,1.761,442,3.262,443,3.324,444,1.474,445,2.164,446,1.474,447,1.64,448,1.773,449,2.503,450,2.503,451,1.94,452,2.503,453,2.503,454,2.503,455,2.503,456,1.94,457,2.503,458,1.474,459,2.503,460,2.164,461,4.542,462,1.474,463,1.474,464,2.981,465,2.164,466,1.474,467,2.164,468,1.474,469,1.474,470,2.503,471,2.503,472,2.164,473,1.474,474,2.503,475,1.474,476,2.164,477,5.837,478,1.474,479,5.669,480,1.94,481,1.474,482,2.503,483,1.474,484,1.474,485,1.474,486,1.474,487,2.503,488,1.474,489,1.044,490,3.324,491,1.474,492,1.773,493,2.822,494,2.503,495,2.503,496,3.845,497,1.474,498,1.94,499,2.503,500,2.52,501,1.94,502,2.164,503,2.503,504,2.164,505,2.164,506,2.503,507,2.503,508,2.468,509,1.474,510,2.164,511,2.164,512,1.274,513,1.474,514,2.82,515,1.474,516,1.474,517,1.474,518,1.474,519,1.474,520,1.474,521,1.474,522,1.94,523,1.474,524,1.474,525,1.274,526,0.966,527,1.274,528,1.529,529,1.474,530,1.044,531,1.474,532,1.474,533,1.474,534,1.474,535,3.324,536,1.474,537,4.682,538,1.474,539,1.474,540,1.474,541,2.82,542,1.474,543,1.474,544,1.474,545,1.474,546,1.474,547,1.474,548,1.474,549,1.474,550,1.474,551,4.307,552,1.474,553,1.474,554,1.474,555,1.274,556,1.474,557,1.474,558,1.474,559,2.503,560,1.474,561,1.274,562,1.474,563,1.474,564,3.262,565,1.474,566,1.474,567,1.274,568,1.474,569,1.474,570,1.474,571,1.474,572,1.274,573,1.274,574,1.474,575,1.474,576,1.474,577,1.474,578,1.474,579,1.474,580,1.474,581,1.474,582,2.503,583,1.474,584,1.474,585,1.143]],["title/modules/NgxEditorJSModule.html",[114,0.408,586,2.479]],["body/modules/NgxEditorJSModule.html",[3,0.264,4,0.264,5,0.196,6,0.284,8,0.461,9,1.939,10,0.358,11,0.224,18,1.155,22,0.017,23,0.332,33,0.547,36,1.466,51,1.352,64,0.007,65,0.009,66,0.007,70,0.897,72,0.509,75,0.932,77,1.014,95,1.663,100,2.747,103,1.324,114,0.63,119,2.563,133,1.663,162,0.882,163,1.263,164,2.63,167,1.14,171,2.22,176,2.352,190,3.09,193,2.478,199,3.015,209,2.805,210,2.46,231,2.08,232,2.744,233,1.819,237,3.73,238,2.744,239,2.744,240,3.335,241,2.46,242,3.945,246,1.84,248,4.466,261,1.663,269,2.805,274,3.09,276,1.939,338,1.939,348,2.342,399,3.008,400,3.993,402,3.008,405,1.939,406,3.821,408,2.805,422,1.713,441,1.713,448,3.252,489,2.249,586,4.669,587,0.932,588,1.324,589,1.713,590,2.911,591,1.713,592,2.752,593,2.744,594,2.744,595,2.744,596,2.744,597,2.744,598,4.282,599,2.63,600,1.819,601,1.535,602,3.968,603,2.744,604,3.09,605,3.968,606,3.968,607,4.591,608,3.872,609,3.19,610,4.662,611,3.559,612,2.805,613,3.174,614,3.174,615,5.909,616,5.393,617,3.252,618,2.08,619,1.723,620,4.591,621,3.968,622,4.591,623,4.591,624,3.174,625,3.968,626,3.174,627,3.174,628,3.174,629,3.174,630,2.744,631,2.744,632,2.744,633,3.174,634,2.11,635,3.559,636,2.744,637,3.968,638,3.174,639,3.174]],["title/interfaces/NgxEditorJSModuleConfig.html",[0,0.06,400,2.479]],["body/interfaces/NgxEditorJSModuleConfig.html",[0,0.082,1,0.668,2,0.883,3,0.351,4,0.351,5,0.26,6,0.26,8,0.424,10,0.475,11,0.246,12,0.922,13,1.508,14,1.33,17,1.054,22,0.017,23,0.502,33,0.746,40,1.405,47,1.405,51,1.074,56,1.863,64,0.009,65,0.011,66,0.009,70,0.665,71,1.936,72,0.676,75,1.237,95,2.01,103,1.757,107,2.574,110,1.677,111,2.444,112,2.568,115,2.495,117,1.919,119,2.125,131,2.15,133,1.573,135,2.125,152,2.33,155,1.936,156,1.843,157,3.068,161,1.757,175,1.843,176,2.224,183,1.843,196,3.016,250,1.467,265,2.274,280,2.574,341,2.761,343,2.274,375,4.441,376,3.266,377,2.985,378,2.761,379,2.985,380,2.985,381,2.985,382,3.959,383,3.642,384,2.985,385,2.274,386,2.985,387,2.985,388,2.761,389,3.642,390,3.642,391,3.642,392,2.985,393,3.266,394,2.985,395,3.266,396,2.985,397,4.331,398,3.201,399,3.661,400,3.413,401,3.266,402,2.761,403,3.266,404,2.985,405,2.574,406,2.985,407,3.266,408,2.574,409,3.266,410,3.266]],["title/injectables/NgxEditorJSPluginService.html",[640,2.479,641,1.963]],["body/injectables/NgxEditorJSPluginService.html",[3,0.272,4,0.272,5,0.202,6,0.408,8,0.551,10,0.675,11,0.226,12,0.715,16,1.413,17,1.19,18,2.307,22,0.017,23,0.236,25,2.53,33,0.558,36,1.913,37,1.819,51,1.151,64,0.007,65,0.01,66,0.007,70,0.558,72,0.524,77,2.387,83,2.05,91,1.858,95,1.858,97,3.874,103,2.497,123,4.53,125,1.3,158,2.685,161,2.497,162,0.628,163,2.627,261,1.319,267,3.967,273,2.53,274,3.985,276,3.659,281,1.872,313,2.141,338,1.996,398,2.685,422,2.53,436,2.154,441,3.232,500,3.071,608,3.592,609,2.53,619,1.497,640,2.863,641,2.897,642,2.532,643,5.705,644,3.267,645,3.633,646,3.431,647,4.738,648,4.687,649,5.177,650,4.687,651,4.687,652,3.267,653,3.267,654,4.052,655,3.267,656,3.267,657,3.071,658,4.052,659,3.267,660,5.989,661,3.633,662,4.687,663,4.052,664,3.267,665,4.687,666,1.501,667,4.249,668,3.267,669,2.532,670,3.267,671,3.267,672,2.824,673,3.267,674,3.267,675,3.267,676,4.687,677,4.687,678,3.267,679,4.687,680,4.687,681,3.267]],["title/injectables/NgxEditorJSService.html",[240,2.071,640,2.479]],["body/injectables/NgxEditorJSService.html",[3,0.086,4,0.086,5,0.064,6,0.341,8,0.525,10,0.606,11,0.24,12,0.226,14,0.59,16,0.476,17,0.641,18,1.957,20,0.667,21,0.392,22,0.017,23,0.075,31,0.667,33,0.295,36,1.219,37,0.59,51,1.085,64,0.011,65,0.004,66,0.002,70,0.554,72,0.165,75,0.303,77,1.32,80,0.887,91,0.969,92,1.453,93,1.121,95,0.846,96,0.936,100,0.73,103,2.301,105,0.526,106,1.753,108,2.175,109,1.968,115,1.519,117,1.728,119,1.451,127,1.051,130,1.973,132,2.179,133,1.787,135,1.31,136,0.526,137,1.769,138,2.035,139,1.419,140,1.755,141,1.314,142,2.109,143,1.051,144,1.051,145,2.053,148,0.73,149,2.329,152,3.045,155,2.323,156,0.451,157,1.138,159,1.721,161,1.253,162,0.662,163,2.334,165,0.843,166,0.936,167,0.455,170,0.526,171,0.887,174,0.802,175,2.519,176,2.9,177,3.576,179,1.121,180,1.757,181,1.121,183,1.808,184,0.591,185,0.591,186,0.887,188,0.591,189,0.591,193,0.557,195,3.708,199,1.264,201,2.145,202,1.721,203,2.331,204,1.051,205,1.419,206,2.103,212,1.3,226,0.731,234,2.439,236,0.799,240,0.936,246,0.29,250,0.639,265,0.99,267,3.743,273,2.059,274,3.082,276,3.794,281,3.299,310,1.202,313,3.188,319,2.329,333,1.422,338,1.121,346,1.586,347,2.597,348,2.666,351,1.92,354,1.422,359,2.256,361,1.586,362,3.204,385,1.621,387,1.755,388,0.676,396,2.128,398,3.359,399,1.202,400,1.835,402,0.676,422,2.231,423,2.597,429,0.891,430,3.573,432,4.206,436,2.236,441,2.903,445,0.891,448,1.755,451,3.419,456,1.422,464,0.799,490,3.298,492,3.447,493,2.5,500,1.202,510,3.573,511,1.586,512,1.586,514,5.43,525,0.891,527,2.142,528,1.121,541,3.573,561,0.891,567,4.022,572,0.891,573,0.891,585,0.799,604,0.591,608,0.676,609,2.059,630,0.891,631,0.891,640,1.121,641,1.453,642,0.799,646,1.051,647,0.891,661,0.799,667,5.098,672,0.891,682,1.031,683,1.92,684,1.586,685,1.834,686,3.815,687,3.815,688,1.586,689,1.834,690,2.128,691,1.3,692,1.834,693,1.834,694,1.834,695,1.968,696,3.573,697,4.41,698,2.976,699,2.976,700,1.834,701,1.834,702,1.834,703,1.834,704,1.031,705,4.41,706,3.815,707,1.031,708,1.586,709,1.834,710,1.834,711,1.031,712,1.834,713,1.422,714,3.004,715,2.597,716,1.834,717,1.586,718,1.586,719,3.004,720,1.834,721,1.031,722,5.643,723,5.643,724,3.447,725,1.834,726,1.031,727,1.834,728,1.031,729,1.834,730,1.834,731,1.031,732,1.834,733,1.834,734,1.031,735,1.834,736,1.031,737,1.834,738,1.031,739,1.834,740,1.031,741,1.834,742,1.031,743,1.586,744,1.834,745,1.031,746,1.834,747,1.031,748,1.834,749,1.422,750,1.586,751,1.834,752,1.834,753,1.031,754,1.031,755,1.031,756,0.799,757,1.031,758,1.031,759,1.031,760,5.863,761,1.031,762,1.031,763,1.834,764,1.031,765,1.031,766,1.031,767,1.031,768,0.891,769,0.891,770,1.031,771,1.031,772,1.031,773,1.834,774,1.422,775,1.834,776,1.031,777,3.004,778,3.815,779,1.031,780,2.477,781,1.031,782,3.004,783,1.031,784,1.834,785,1.031,786,1.031,787,1.834,788,1.031,789,1.834,790,1.031,791,1.031,792,1.031,793,1.834,794,1.031,795,1.031,796,0.891,797,1.031,798,3.004,799,1.031,800,2.477,801,1.031,802,1.031,803,1.031,804,1.031,805,3.815,806,1.031,807,1.031,808,1.834,809,3.004,810,3.443,811,1.031,812,1.834,813,1.031,814,1.031,815,1.031,816,1.834,817,1.834,818,1.834,819,1.834,820,1.834,821,1.031,822,1.031,823,1.031,824,1.031,825,0.891,826,1.031,827,3.004,828,1.031,829,1.031,830,3.004,831,1.031,832,3.004,833,1.031,834,1.031,835,2.477,836,2.477,837,1.834,838,1.031,839,1.834,840,1.031,841,1.031,842,1.031,843,1.031,844,1.031,845,1.031,846,1.031,847,1.031,848,1.031,849,1.031,850,1.586,851,1.031,852,1.031,853,1.031,854,1.031,855,1.031,856,1.031,857,1.834,858,1.834,859,3.443,860,1.031,861,1.031,862,1.031,863,1.031,864,1.031,865,1.031,866,1.834,867,1.031,868,1.031,869,1.031,870,1.031,871,1.031,872,2.477,873,1.834,874,1.834,875,1.834,876,1.834]],["title/modules/NgxEditorjsPluginsModule.html",[114,0.408,598,2.659]],["body/modules/NgxEditorjsPluginsModule.html",[1,0.52,3,0.288,4,0.288,5,0.213,6,0.213,8,0.347,11,0.2,20,1.774,22,0.017,23,0.25,64,0.007,65,0.01,66,0.007,70,0.897,72,0.554,80,2.359,92,2.359,114,0.568,158,2.795,162,0.664,167,1.211,174,2.134,182,2.359,246,1.373,261,0.973,416,3.456,587,1.902,588,1.441,589,1.865,590,1.865,591,1.865,592,2.885,598,5.24,599,2.795,600,1.98,601,1.671,612,2.98,617,3.456,618,2.264,619,1.558,691,3.456,877,2.987,878,2.987,879,2.987,880,4.866,881,4.536,882,4.255,883,4.536,884,4.866,885,4.536,886,4.536,887,4.536,888,4.255,889,4.536,890,3.455,891,3.455,892,4.216,893,4.878,894,4.878,895,4.878,896,4.216,897,3.455,898,3.455,899,3.455,900,3.455,901,3.455,902,3.455,903,3.455,904,3.455,905,2.987,906,3.455,907,3.455,908,3.455,909,3.455,910,2.987,911,3.455]],["title/modules/NgxPluginServiceModule.html",[114,0.408,880,2.659]],["body/modules/NgxPluginServiceModule.html",[3,0.44,4,0.44,5,0.326,6,0.326,11,0.172,22,0.016,23,0.382,37,1.257,64,0.011,65,0.013,66,0.011,70,0.864,72,0.848,114,0.531,116,2.247,120,2.247,125,2.569,162,1.015,246,1.487,261,1.961,587,1.55,588,2.202,589,2.851,590,2.851,591,2.851,592,2.695,599,3.697,600,3.026,601,2.555,619,2.061,635,4.094,637,4.566,641,3.663,643,4.566,666,2.427,880,4.962,912,4.566,913,4.566,914,5.282,915,3.293,916,2.851,917,5.282]],["title/modules/NgxTinynodesComponentsModule.html",[114,0.408,918,2.875]],["body/modules/NgxTinynodesComponentsModule.html",[3,0.42,4,0.42,5,0.312,6,0.312,22,0.016,23,0.365,64,0.01,65,0.013,66,0.01,70,0.813,72,0.809,114,0.507,162,0.969,261,1.42,587,1.48,588,2.103,589,2.722,590,2.722,591,2.722,592,3.483,599,3.594,600,2.89,601,2.439,612,3.832,619,2.003,918,5.519,919,4.36,920,4.36,921,4.36,922,5.156,923,5.156,924,2.743,925,5.043,926,5.043,927,6.272,928,4.444,929,3.909,930,5.043,931,4.444,932,3.909,933,5.043]],["title/interfaces/NgxTinynodesMatFieldComponent.html",[0,0.06,934,3.508]],["body/interfaces/NgxTinynodesMatFieldComponent.html",[0,0.084,2,1.194,3,0.474,4,0.474,5,0.352,6,0.352,22,0.016,23,0.412,39,2.457,64,0.012,65,0.014,66,0.012,70,0.857,72,0.914,213,5.236,218,5.236,222,5.839,226,4.785,227,5.839,231,3.734,924,2.492,934,5.839,935,5.698,936,6.223,937,4.037]],["title/components/NgxTinynodesMatJsonOutputComponent.html",[221,1.963,938,2.875]],["body/components/NgxTinynodesMatJsonOutputComponent.html",[3,0.326,4,0.326,5,0.242,6,0.432,10,0.599,11,0.196,12,0.856,14,1.265,18,2.464,22,0.016,23,0.283,33,0.466,51,0.752,64,0.008,65,0.011,66,0.008,70,0.466,72,0.628,103,2.701,113,2.139,133,1.496,162,0.752,163,2.116,180,3.081,209,4.367,219,3.381,220,5.022,221,2.92,225,4.245,237,1.996,242,2.111,248,2.39,250,1.851,256,5.541,257,4.595,262,4.595,263,4.595,264,4.12,267,3.259,273,2.111,313,2.563,329,2.869,338,2.39,343,2.869,345,4.12,386,4.59,411,2.111,412,3.381,419,5.219,420,3.381,421,3.032,422,2.869,425,5.6,427,4.595,441,2.111,476,4.595,528,2.39,535,3.381,589,2.111,924,3.262,928,2.771,931,5.613,932,5.417,938,4.59,939,3.381,940,3.911,941,4.951,942,3.911,943,5.315,944,6.478,945,7.148,946,3.911,947,5.315,948,3.911,949,3.911,950,3.911,951,3.911,952,5.315,953,5.315,954,6.478,955,3.911,956,3.911,957,3.911,958,3.911,959,2.771,960,3.911]],["title/modules/NgxTinynodesMatJsonOutputModule.html",[114,0.408,922,2.659]],["body/modules/NgxTinynodesMatJsonOutputModule.html",[3,0.421,4,0.421,5,0.313,6,0.313,22,0.016,23,0.366,64,0.01,65,0.013,66,0.01,70,0.876,72,0.813,113,1.55,114,0.509,162,0.973,209,3.094,261,1.425,587,1.486,588,2.112,589,2.733,590,3.691,591,2.733,592,3.489,599,3.603,600,2.901,601,2.449,612,3.094,617,4.455,618,3.318,619,2.009,922,4.98,924,2.215,931,5.067,932,3.925,937,3.588,938,5.578,941,3.588,961,4.378,962,4.378,963,4.378,964,5.064,965,5.064,966,6.288,967,6.288,968,6.288,969,4.378]],["title/modules/NgxTinynodesMatTagInputModule.html",[114,0.408,923,2.659]],["body/modules/NgxTinynodesMatTagInputModule.html",[3,0.413,4,0.413,5,0.306,6,0.306,22,0.017,23,0.359,64,0.01,65,0.013,66,0.01,70,0.87,72,0.796,114,0.499,162,0.954,209,3.031,231,3.251,261,1.397,587,1.456,588,2.069,589,2.678,590,3.657,591,2.678,592,3.457,599,3.557,600,2.843,601,2.4,612,3.031,617,3.515,618,3.251,619,1.983,621,4.289,923,4.958,924,2.17,928,4.801,929,3.846,937,3.515,941,3.515,959,5.638,970,4.289,971,4.289,972,4.289,973,4.289,974,5.253,975,5.253,976,4.962,977,4.962,978,6.208,979,6.208,980,4.962]],["title/interfaces/Paragraph.html",[0,0.06,40,1.353]],["body/interfaces/Paragraph.html",[0,0.11,1,0.832,2,0.731,3,0.29,4,0.29,5,0.216,6,0.216,7,1.688,8,0.351,10,0.882,11,0.219,12,0.763,13,1.534,14,1.65,16,0.671,17,1.225,20,1.269,21,2.162,22,0.017,23,0.52,24,1.215,25,2.574,26,1.688,27,1.604,28,2.376,29,2.376,30,1.526,31,1.269,32,2.376,33,0.803,34,2.506,35,2.506,36,1.115,37,0.831,38,2.257,39,2.244,40,2.359,41,3.251,42,2.257,43,2.758,44,2.257,45,1.688,46,1.688,47,1.163,48,2.257,49,2.844,50,2.506,51,1.186,52,2.506,53,1.78,54,1.668,55,1.78,56,1.895,57,1.78,58,1.78,59,1.78,60,1.78,61,2.257,62,1.688,63,1.688,64,0.007,65,0.01,66,0.007]],["title/interfaces/ParagraphBlock.html",[0,0.06,42,1.865]],["body/interfaces/ParagraphBlock.html",[0,0.111,1,0.836,2,0.735,3,0.292,4,0.292,5,0.216,6,0.216,7,1.695,8,0.352,10,0.886,11,0.226,12,0.767,13,1.538,14,1.608,16,0.674,17,1.19,20,1.275,21,2.167,22,0.017,23,0.52,24,1.22,25,2.576,26,1.695,27,1.61,28,2.383,29,2.383,30,1.533,31,1.275,32,2.383,33,0.775,34,2.514,35,2.514,36,1.119,37,0.834,38,2.264,39,2.369,40,2.252,41,2.84,42,2.618,43,2.762,44,2.264,45,1.695,46,1.695,47,1.168,48,2.264,49,2.849,50,2.514,51,1.188,52,2.514,53,1.788,54,1.672,55,1.788,56,1.9,57,1.788,58,1.788,59,1.788,60,1.788,61,2.264,62,1.695,63,1.695,64,0.007,65,0.01,66,0.007]],["title/modules/PluginCodeModule.html",[114,0.408,881,2.479]],["body/modules/PluginCodeModule.html",[1,0.673,3,0.424,4,0.424,5,0.315,6,0.315,8,0.512,10,0.574,11,0.233,16,0.979,22,0.017,23,0.368,33,0.751,64,0.01,65,0.013,66,0.01,70,0.853,72,0.818,82,1.938,85,2.125,88,2.401,104,2.028,114,0.635,116,2.198,120,2.198,125,2.028,162,0.979,167,1.567,201,2.016,246,1.777,249,2.513,250,2.198,261,1.434,587,1.496,619,2.016,634,2.901,666,2.342,881,3.856,915,2.6,916,2.75,981,5.095,982,2.632,983,2.761,984,2.465,985,2.513,986,5.556,987,5.095,988,2.6,989,5.095]],["title/interfaces/PluginConfig.html",[0,0.06,97,2.479]],["body/interfaces/PluginConfig.html",[0,0.093,1,0.752,2,0.677,3,0.269,4,0.269,5,0.199,6,0.199,8,0.681,10,0.863,11,0.205,12,0.706,13,1.254,14,1.503,16,1.395,17,1.061,18,1.174,22,0.017,23,0.525,33,0.553,37,1.879,51,1.409,54,1.364,64,0.007,65,0.01,66,0.007,67,4.235,68,1.85,70,0.553,71,1.483,72,0.518,73,3.045,74,3.045,75,0.948,76,2.663,77,1.739,78,2.663,79,1.742,80,2.881,81,2.287,82,1.228,83,1.412,84,2.115,85,1.346,86,1.85,87,4.948,88,1.768,89,3.568,90,3.856,91,1.533,92,1.561,93,1.972,94,2.115,95,1.308,96,2.371,97,3.326,98,3.292,99,2.508,100,1.85,101,3.045,102,3.292,103,1.938,104,2.371,105,3.354,106,2.737,107,2.839,108,1.549,109,3.568,110,2.167,111,2.382,112,1.483,113,0.988,114,0.325,115,2.167,116,1.124,117,1.667,118,2.115,119,2.071,120,1.124,121,2.115,122,2.287,123,1.972,124,2.287,125,1.285,126,2.115]],["title/interfaces/PluginConfigMap.html",[0,0.06,123,2.479]],["body/interfaces/PluginConfigMap.html",[0,0.097,1,0.745,2,0.756,3,0.3,4,0.3,5,0.223,6,0.311,8,0.582,10,0.788,11,0.222,14,1.378,15,1.947,16,1.393,17,1.146,18,1.829,22,0.017,23,0.536,33,0.429,37,1.864,51,1.112,54,1.476,64,0.007,65,0.01,66,0.007,67,3.535,68,2.067,70,0.598,71,1.658,72,0.579,73,3.294,74,3.294,75,1.059,76,2.88,77,1.849,78,2.88,79,1.947,80,3.028,81,2.556,82,1.372,83,1.578,84,2.364,85,1.504,86,2.067,87,4.466,88,1.912,89,3.792,90,3.535,91,1.762,92,1.745,93,2.204,94,2.364,95,1.015,96,1.841,97,3.535,98,2.556,99,1.947,100,1.436,101,2.364,102,2.556,103,1.504,104,1.436,105,2.565,106,2.31,107,2.204,108,1.203,109,2.364,110,2.303,111,2.531,112,1.658,113,1.104,114,0.363,115,2.303,116,1.256,117,1.772,118,2.364,119,2.381,120,1.256,121,2.364,122,3.562,123,3.071,124,3.562,125,1.436,126,2.364,990,3.607]],["title/modules/PluginHeaderModule.html",[114,0.408,882,2.325]],["body/modules/PluginHeaderModule.html",[1,0.672,3,0.423,4,0.423,5,0.314,6,0.314,8,0.511,10,0.573,11,0.233,16,0.977,22,0.017,23,0.368,33,0.75,43,2.987,64,0.01,65,0.013,66,0.01,70,0.853,72,0.816,82,1.934,85,2.12,88,2.398,104,2.024,114,0.634,116,2.195,120,2.195,125,2.024,162,0.977,167,1.565,201,2.014,246,1.774,249,2.509,250,2.195,261,1.431,587,1.493,619,2.014,634,2.897,666,2.337,882,3.612,915,2.595,916,2.745,982,2.629,983,2.758,984,2.46,985,2.509,988,2.595,991,5.085,992,4.396,993,5.085]],["title/modules/PluginImageModule.html",[114,0.408,883,2.479]],["body/modules/PluginImageModule.html",[1,0.673,3,0.424,4,0.424,5,0.315,6,0.315,8,0.512,10,0.574,11,0.233,16,0.979,22,0.017,23,0.368,33,0.751,49,3.135,64,0.01,65,0.013,66,0.01,70,0.853,72,0.818,82,1.938,85,2.125,88,2.401,104,2.028,114,0.635,116,2.198,120,2.198,125,2.028,162,0.979,167,1.567,201,2.016,246,1.777,249,2.513,250,2.198,261,1.434,587,1.496,619,2.016,634,2.901,666,2.342,883,3.856,915,2.6,916,2.75,982,2.632,983,2.761,984,2.465,985,2.513,988,2.6,994,5.095,995,5.095,996,3.61]],["title/modules/PluginInlineCodeModule.html",[114,0.408,884,2.659]],["body/modules/PluginInlineCodeModule.html",[1,0.671,3,0.422,4,0.422,5,0.313,6,0.313,8,0.51,10,0.572,11,0.233,16,0.975,22,0.017,23,0.367,33,0.75,64,0.01,65,0.013,66,0.01,70,0.815,72,0.814,80,3.045,82,1.93,86,2.907,88,2.395,104,2.02,105,2.589,114,0.633,116,2.192,120,2.192,162,0.975,167,1.563,201,2.011,246,1.772,249,2.506,250,2.192,261,1.428,587,1.49,619,2.011,634,2.893,666,2.332,884,4.125,910,4.387,982,2.625,983,2.754,984,2.454,985,2.506,986,5.306,988,2.589,997,5.074,998,5.074,999,6.296,1000,5.074,1001,3.934,1002,5.074]],["title/modules/PluginLinkModule.html",[114,0.408,885,2.479]],["body/modules/PluginLinkModule.html",[1,0.673,3,0.424,4,0.424,5,0.315,6,0.315,8,0.512,10,0.574,11,0.233,16,0.979,22,0.017,23,0.368,33,0.751,64,0.01,65,0.013,66,0.01,70,0.853,72,0.818,82,1.938,85,2.125,88,2.401,104,2.028,114,0.635,116,2.198,120,2.198,125,2.028,162,0.979,167,1.567,201,2.016,246,1.777,249,2.513,250,2.198,261,1.434,587,1.496,619,2.016,634,2.901,666,2.342,667,5.556,885,3.856,915,2.6,916,2.75,982,2.632,983,2.761,984,2.465,985,2.513,988,2.6,996,3.61,1003,5.095,1004,5.095]],["title/modules/PluginListModule.html",[114,0.408,886,2.479]],["body/modules/PluginListModule.html",[1,0.673,3,0.424,4,0.424,5,0.315,6,0.315,8,0.512,10,0.574,11,0.233,16,0.979,22,0.017,23,0.368,25,2.607,33,0.751,64,0.01,65,0.013,66,0.01,70,0.853,72,0.818,82,1.938,85,2.125,88,2.401,104,2.028,114,0.635,116,2.198,120,2.198,125,2.028,162,0.979,167,1.567,201,2.016,246,1.777,249,2.513,250,2.198,261,1.434,587,1.496,619,2.016,634,2.901,666,2.342,886,3.856,915,2.6,916,2.75,982,2.632,983,2.761,984,2.465,985,2.513,988,2.6,996,3.61,1005,5.095,1006,5.095]],["title/modules/PluginMarkerModule.html",[114,0.408,887,2.479]],["body/modules/PluginMarkerModule.html",[1,0.671,3,0.422,4,0.422,5,0.313,6,0.313,8,0.51,10,0.572,11,0.233,16,0.975,22,0.017,23,0.367,33,0.75,40,1.692,64,0.01,65,0.013,66,0.01,70,0.852,72,0.814,82,1.93,86,2.907,88,2.395,104,2.02,105,2.589,114,0.633,116,2.192,120,2.192,125,2.02,162,0.975,167,1.563,201,2.011,246,1.772,249,2.506,250,2.192,261,1.428,587,1.49,619,2.011,634,2.893,666,2.332,887,3.846,915,2.589,916,2.739,982,2.625,983,2.754,984,2.454,985,2.506,988,2.589,1001,3.934,1007,5.074,1008,6.845,1009,3.595,1010,5.074]],["title/modules/PluginParagraphModule.html",[114,0.408,888,2.325]],["body/modules/PluginParagraphModule.html",[1,0.678,3,0.429,4,0.429,5,0.319,6,0.319,8,0.519,10,0.582,11,0.234,16,0.992,22,0.017,23,0.373,33,0.757,40,2.4,64,0.011,65,0.013,66,0.011,70,0.821,72,0.828,82,1.963,85,2.152,88,2.419,104,2.054,114,0.639,116,2.215,120,2.215,162,0.992,167,1.579,201,2.032,246,1.79,249,2.532,250,2.215,261,1.452,587,1.515,619,2.032,634,2.923,666,2.371,888,3.645,982,2.653,983,2.783,984,2.496,985,2.532,988,2.633,1001,4,1009,3.656,1011,5.16]],["title/modules/PluginSimpleImageModule.html",[114,0.408,889,2.479]],["body/modules/PluginSimpleImageModule.html",[1,0.669,3,0.421,4,0.421,5,0.312,6,0.312,8,0.508,10,0.57,11,0.232,16,0.971,22,0.017,23,0.365,33,0.748,49,2.747,64,0.01,65,0.013,66,0.01,70,0.851,72,0.811,82,1.922,85,2.107,88,2.389,104,2.012,114,0.631,116,2.186,120,2.186,125,2.012,162,0.971,167,1.559,201,2.006,246,1.768,249,2.5,250,2.186,261,1.422,587,1.483,619,2.006,634,2.886,666,2.322,889,3.837,905,4.369,915,2.579,916,2.728,982,2.619,983,2.747,984,2.444,985,2.5,988,2.579,996,3.58,1012,5.054,1013,5.054,1014,6.832,1015,5.054,1016,4.369]],["title/interfaces/ReadyMap.html",[0,0.06,143,2.325]],["body/interfaces/ReadyMap.html",[0,0.104,1,0.615,2,0.928,3,0.368,4,0.368,5,0.273,6,0.356,8,0.445,11,0.235,15,2.389,16,1.466,17,1.186,18,1.61,22,0.017,23,0.51,47,1.476,64,0.009,65,0.012,66,0.009,70,0.765,75,1.299,91,2.146,127,2.536,128,2.9,129,4.997,130,4.505,131,2.258,132,2.407,133,1.246,135,1.683,136,2.258,137,2.443,138,1.936,139,2.536,140,2.556,141,2.524,142,3.277,143,3.307,144,2.536,145,2.336,146,2.389,147,2.704,148,2.297,1017,4.426]],["title/interfaces/SavedMap.html",[0,0.06,144,2.325]],["body/interfaces/SavedMap.html",[0,0.104,1,0.615,2,0.928,3,0.368,4,0.368,5,0.273,6,0.356,8,0.445,11,0.235,15,2.389,16,1.466,17,1.186,18,1.61,22,0.017,23,0.51,47,1.476,64,0.009,65,0.012,66,0.009,70,0.765,75,1.299,91,2.146,127,2.536,128,2.9,129,4.997,130,4.505,131,2.258,132,2.678,133,1.246,135,1.683,136,2.258,137,2.443,138,1.936,139,2.536,140,2.556,141,1.936,142,3.277,143,2.536,144,3.307,145,2.336,146,2.389,147,2.704,148,2.297,1018,4.426]],["title/interfaces/ToolSettingsMap.html",[0,0.06,93,2.479]],["body/interfaces/ToolSettingsMap.html",[0,0.097,1,0.745,2,0.754,3,0.299,4,0.299,5,0.222,6,0.31,8,0.581,10,0.788,11,0.222,14,1.375,15,1.941,16,1.392,17,1.145,18,1.825,22,0.017,23,0.536,33,0.428,37,1.863,51,1.11,54,1.473,64,0.007,65,0.01,66,0.007,67,3.53,68,2.061,70,0.597,71,1.653,72,0.577,73,3.287,74,3.287,75,1.056,76,2.875,77,1.846,78,2.875,79,1.941,80,3.024,81,2.548,82,1.368,83,1.573,84,2.357,85,1.5,86,2.061,87,4.462,88,2.198,89,4.308,90,3.819,91,1.76,92,2.427,93,3.065,94,3.287,95,1.012,96,1.835,97,3.065,98,2.548,99,1.941,100,1.432,101,2.357,102,2.548,103,1.5,104,1.432,105,2.56,106,2.306,107,2.197,108,1.199,109,2.357,110,2.3,111,2.527,112,1.653,113,1.101,114,0.362,115,2.3,116,1.252,117,1.769,118,2.357,119,2.198,120,1.252,121,2.357,122,2.548,123,2.197,124,2.548,125,1.432,126,2.357,1019,3.597]],["title/changelog.html",[1020,2.098,1021,2.25,1022,1.752]],["body/changelog.html",[0,0.058,1,0.421,11,0.221,22,0.011,31,1.946,33,0.47,36,1.262,37,1.274,44,1.815,64,0.008,65,0.011,66,0.008,77,2.289,79,2.132,88,1.502,91,1.112,95,1.112,114,0.61,117,2.146,133,1.506,138,1.727,145,1.946,152,1.647,165,1.815,167,1.506,192,2.132,201,1.262,221,3.288,233,2.263,244,3.707,246,1.112,249,1.572,255,2.413,261,1.112,269,2.413,310,3.506,329,2.132,348,2.73,359,2.588,384,2.798,385,2.132,404,2.798,408,3.269,415,3.414,422,2.132,436,1.815,447,3.506,451,3.061,492,2.798,501,4.704,502,3.414,508,2.263,526,2.588,555,4.625,592,2.015,604,4.015,609,2.888,619,1.262,641,1.91,645,3.061,646,3.065,691,2.798,724,2.413,743,4.625,749,3.061,769,3.414,796,3.414,924,1.727,982,1.647,1020,2.413,1022,2.73,1023,3.949,1024,4.704,1025,2.798,1026,3.949,1027,2.798,1028,3.949,1029,2.588,1030,2.588,1031,3.949,1032,6.504,1033,3.949,1034,5.876,1035,4.625,1036,3.949,1037,3.414,1038,3.949,1039,3.949,1040,3.949,1041,3.949,1042,5.042,1043,2.798,1044,3.065,1045,5.35,1046,3.949,1047,5.35,1048,4.592,1049,3.949,1050,4.625,1051,5.35,1052,3.949,1053,4.608,1054,3.949,1055,3.414,1056,3.949,1057,4.625,1058,3.949,1059,3.949,1060,3.414,1061,3.949,1062,4.704,1063,3.949,1064,3.414,1065,5.35,1066,3.949,1067,3.061,1068,3.949,1069,3.949,1070,3.061,1071,3.949,1072,5.35,1073,3.949,1074,3.949,1075,3.949,1076,2.413,1077,3.949,1078,3.949,1079,3.949,1080,3.949,1081,2.798,1082,3.061,1083,3.949,1084,3.949,1085,3.949,1086,5.35,1087,5.35,1088,3.949,1089,4.625,1090,3.414,1091,3.061,1092,3.949,1093,3.949,1094,3.949,1095,3.949,1096,3.949,1097,3.949,1098,3.949,1099,3.949,1100,3.949,1101,3.949,1102,3.949,1103,3.949,1104,3.949,1105,3.414,1106,2.798,1107,3.414]],["title/contributing.html",[1020,2.098,1021,2.25,1108,2.968]],["body/contributing.html",[0,0.049,5,0.208,18,1.222,22,0.01,24,1.17,44,1.544,64,0.01,65,0.01,66,0.007,83,2.092,100,1.904,117,1.464,138,2.092,145,1.74,146,1.814,158,3.19,165,2.559,170,1.715,172,1.925,176,1.338,204,2.74,267,2.581,281,2.74,333,2.605,385,1.814,441,1.814,460,4.134,498,2.605,504,2.905,508,1.925,588,1.401,646,2.74,688,2.905,690,2.381,695,2.202,696,2.905,713,2.605,715,2.905,718,2.905,749,2.605,750,2.905,756,2.605,774,2.605,825,2.905,850,5.244,896,2.905,985,1.904,986,5.314,1044,4.269,1070,2.605,1081,2.381,1089,4.134,1090,2.905,1105,4.134,1107,2.905,1108,4.134,1109,4.134,1110,4.316,1111,3.36,1112,3.36,1113,2.905,1114,3.36,1115,3.36,1116,2.605,1117,6.855,1118,4.783,1119,3.36,1120,5.568,1121,2.381,1122,3.36,1123,3.36,1124,3.707,1125,2.905,1126,5.568,1127,2.605,1128,3.36,1129,3.36,1130,3.36,1131,3.36,1132,3.36,1133,6.066,1134,2.605,1135,3.36,1136,2.605,1137,3.36,1138,3.36,1139,4.134,1140,3.36,1141,3.36,1142,4.134,1143,3.36,1144,4.783,1145,3.36,1146,3.36,1147,4.783,1148,3.36,1149,6.41,1150,3.36,1151,6.41,1152,4.783,1153,2.905,1154,4.783,1155,3.36,1156,3.36,1157,3.36,1158,3.36,1159,3.36,1160,3.36,1161,3.36,1162,3.36,1163,4.783,1164,3.36,1165,3.36,1166,4.783,1167,3.36,1168,3.36,1169,3.36,1170,4.783,1171,3.36,1172,4.783,1173,6.41,1174,3.36,1175,3.36,1176,3.36,1177,4.783,1178,3.36,1179,3.36,1180,3.36,1181,3.36,1182,3.36,1183,3.36,1184,3.36,1185,3.36,1186,3.36,1187,3.36,1188,2.905,1189,3.36,1190,3.36,1191,3.36,1192,4.783,1193,5.568,1194,3.36,1195,3.36,1196,3.36,1197,3.36,1198,3.36,1199,3.36,1200,3.36,1201,3.36,1202,4.783,1203,3.36,1204,3.36,1205,2.905,1206,3.36,1207,3.36,1208,3.36,1209,4.783,1210,3.36,1211,3.36,1212,3.36,1213,4.783,1214,3.36,1215,2.905,1216,3.36,1217,3.36,1218,3.36,1219,3.36,1220,3.36,1221,4.783,1222,3.36,1223,3.36,1224,2.605,1225,3.36,1226,2.905,1227,3.36,1228,3.36,1229,3.36,1230,3.36,1231,3.36,1232,3.36,1233,3.36,1234,3.36,1235,3.36,1236,3.36,1237,3.36,1238,4.783,1239,3.36,1240,3.36,1241,3.36,1242,3.36,1243,3.36,1244,3.36,1245,3.36,1246,2.605,1247,4.783,1248,4.783,1249,4.783,1250,3.36,1251,3.36,1252,3.36,1253,3.36,1254,3.36,1255,3.36,1256,3.36,1257,3.36,1258,3.36,1259,3.36,1260,3.36,1261,3.36,1262,4.783,1263,3.36,1264,4.783,1265,3.36,1266,3.36,1267,3.36,1268,3.36,1269,4.783,1270,2.905,1271,3.36,1272,3.36,1273,3.36,1274,3.36,1275,3.36,1276,3.36,1277,3.36,1278,3.36,1279,3.36,1280,3.36,1281,3.36,1282,3.36,1283,2.905,1284,3.36,1285,3.36,1286,3.36,1287,3.36,1288,3.36,1289,3.36,1290,3.36,1291,3.36,1292,3.36,1293,3.36,1294,3.36,1295,3.36,1296,3.36,1297,3.36,1298,3.36,1299,3.36,1300,3.36,1301,3.36]],["title/dependencies.html",[588,2.025,1082,2.662]],["body/dependencies.html",[22,0.017,43,2.102,64,0.011,65,0.013,66,0.011,72,0.848,113,1.976,136,2.695,231,3.461,588,2.202,618,3.461,669,4.094,724,3.227,931,3.742,937,3.742,969,4.566,1121,3.742,1302,5.282,1303,7.883,1304,5.282,1305,5.282,1306,5.282,1307,5.282,1308,5.282,1309,5.578,1310,5.002,1311,5.282,1312,5.282,1313,4.566,1314,6.453,1315,5.282,1316,5.282,1317,5.282,1318,5.282,1319,5.282,1320,5.282,1321,5.282,1322,5.282,1323,3.227,1324,5.282,1325,5.282,1326,5.282,1327,5.282]],["title/miscellaneous/enumerations.html",[1328,1.853,1329,4.198]],["body/miscellaneous/enumerations.html",[1,0.78,6,0.366,11,0.193,12,1.298,22,0.015,64,0.012,65,0.014,66,0.012,68,3.399,76,3.399,77,1.895,78,3.399,79,3.202,80,3.541,82,2.631,273,3.733,1328,3.202,1329,5.128,1330,4.598]],["title/miscellaneous/functions.html",[1328,1.853,1331,4.198]],["body/miscellaneous/functions.html",[6,0.436,8,0.677,9,2.989,10,0.552,11,0.237,12,1.07,22,0.016,37,1.603,51,1.428,64,0.01,65,0.013,66,0.01,77,2.151,91,1.377,95,1.895,100,1.947,103,2.946,114,0.619,119,2.561,140,1.947,155,2.828,157,2.248,162,0.94,163,2.45,166,2.496,171,2.977,176,1.947,274,3.526,398,3.526,400,2.989,405,4.316,436,2.248,441,3.813,464,4.77,465,4.229,489,4.36,493,3.206,522,4.77,602,4.229,603,5.32,625,5.32,632,4.229,636,5.32,657,3.206,915,3.14,1328,2.641,1331,4.229,1332,4.229,1333,6.107,1334,4.893,1335,4.893,1336,4.893,1337,4.229,1338,4.893,1339,4.893,1340,4.893,1341,4.893,1342,4.893,1343,4.893,1344,4.893,1345,4.893,1346,4.893]],["title/index.html",[12,0.751,1020,2.098,1021,2.25]],["body/index.html",[0,0.065,1,0.468,11,0.248,13,1.186,22,0.012,33,0.523,37,1.046,64,0.009,65,0.012,66,0.009,77,2.044,83,1.922,100,2.547,106,2.019,113,1.759,114,0.643,117,1.345,133,1.617,138,1.922,155,2.64,161,1.832,167,1.685,170,2.242,174,2.513,201,1.835,221,2.778,233,2.518,237,2.242,240,2.242,242,2.372,244,2.684,246,1.237,252,3.406,253,3.113,255,2.684,281,3.291,309,3.406,310,2.879,329,3.454,343,2.372,348,3.686,356,3.113,357,3.113,358,3.406,411,2.372,417,2.879,418,3.406,436,2.64,447,2.879,526,3.764,528,2.684,588,1.832,592,2.242,601,2.125,604,3.667,605,4.965,606,3.798,609,3.1,641,2.778,646,3.291,683,3.406,695,3.764,708,3.798,892,3.798,924,1.922,982,2.669,1022,3.265,1024,4.453,1025,4.07,1027,4.07,1029,3.764,1030,2.879,1044,3.889,1048,4.193,1067,4.453,1076,4.302,1109,5.532,1323,2.684,1347,5.744,1348,4.394,1349,4.394,1350,4.394,1351,4.394,1352,4.394,1353,3.406,1354,2.518,1355,3.798,1356,3.406,1357,3.798,1358,3.798,1359,3.798,1360,3.798,1361,4.394,1362,5.744,1363,3.406,1364,3.406,1365,3.406,1366,4.394,1367,3.291,1368,5.744,1369,4.394,1370,3.113,1371,3.798,1372,3.798,1373,3.798,1374,3.406,1375,4.394]],["title/license.html",[1020,2.098,1021,2.25,1376,3.434]],["body/license.html",[22,0.013,36,1.614,64,0.01,65,0.013,66,0.01,100,2.5,146,2.728,234,3.58,601,2.444,774,3.917,924,2.211,1053,3.58,1070,5.296,1076,3.087,1134,3.917,1139,4.369,1142,5.429,1153,4.369,1224,3.917,1270,4.369,1372,4.369,1373,4.369,1377,4.369,1378,5.054,1379,5.054,1380,6.832,1381,5.054,1382,5.054,1383,5.054,1384,5.054,1385,5.054,1386,6.28,1387,7.741,1388,5.054,1389,5.054,1390,5.054,1391,6.28,1392,5.054,1393,5.054,1394,5.054,1395,4.369,1396,5.054,1397,5.054,1398,5.054,1399,5.054,1400,6.28,1401,5.054,1402,5.054,1403,5.054,1404,5.054,1405,5.054,1406,5.054,1407,6.28,1408,6.28,1409,4.369,1410,5.054,1411,5.054,1412,5.054,1413,5.054,1414,5.054,1415,5.054,1416,5.054,1417,5.054,1418,5.054,1419,5.054,1420,5.054,1421,5.054,1422,5.054,1423,5.054,1424,5.054,1425,5.054,1426,5.054,1427,5.054,1428,5.054,1429,5.054,1430,5.054,1431,5.054,1432,5.054,1433,5.054,1434,5.054]],["title/modules.html",[587,1.6]],["body/modules.html",[22,0.013,24,2.722,64,0.011,65,0.013,66,0.011,586,3.276,587,1.574,598,3.514,880,3.514,881,3.276,882,3.072,883,3.276,884,3.514,885,3.276,886,3.276,887,3.276,888,3.072,889,3.276,918,3.799,922,3.514,923,3.514,1310,5.891,1354,4.354,1435,7.6,1436,8,1437,7.817]],["title/overview.html",[1438,4.711]],["body/overview.html",[2,0.767,22,0.016,45,1.771,64,0.008,65,0.01,66,0.008,114,0.368,237,3.583,240,2.976,242,3.791,248,4.29,261,1.03,329,1.976,411,1.976,586,4.672,587,1.075,588,1.527,589,1.976,590,1.976,591,1.976,592,1.868,593,3.165,594,3.165,595,3.165,596,3.165,597,3.165,598,5.233,599,2.91,600,2.098,601,1.771,641,2.821,642,2.838,877,3.165,878,3.165,879,3.165,880,4.764,881,4.29,882,4.024,883,4.29,884,4.602,885,4.29,886,4.29,887,4.29,888,4.024,889,4.29,912,3.165,913,3.165,918,5.073,919,3.165,920,3.165,921,3.165,922,4.823,923,4.823,938,4.976,959,5.269,961,3.165,962,3.165,963,3.165,970,3.165,971,3.165,972,3.165,973,3.165,974,4.521,975,4.521,1438,3.165,1439,2.838,1440,3.661,1441,3.661,1442,3.661]],["title/todo.html",[1020,2.098,1021,2.25,1443,2.968]],["body/todo.html",[11,0.237,22,0.013,64,0.011,65,0.013,66,0.011,83,2.853,108,1.792,113,2.15,114,0.54,119,2.671,132,2.241,137,2.044,152,2.241,153,3.283,196,2.901,221,2.599,225,3.521,246,1.513,253,3.807,269,3.283,411,2.901,436,2.997,508,3.079,530,3.807,587,1.577,717,4.646,924,2.351,984,2.599,1029,3.521,1043,3.807,1048,3.521,1205,4.646,1215,4.646,1313,4.646,1354,3.737,1370,5.452,1377,4.646,1395,4.646,1443,4.646,1444,5.374,1445,5.374,1446,5.374,1447,4.646,1448,5.374,1449,5.374,1450,5.374,1451,5.374,1452,4.646,1453,5.374,1454,4.646,1455,5.374,1456,3.283,1457,5.374,1458,4.646]],["title/miscellaneous/typealiases.html",[1328,1.853,1459,4.856]],["body/miscellaneous/typealiases.html",[1,0.689,6,0.399,7,2.56,10,0.819,11,0.21,12,1.158,17,1.221,22,0.016,24,1.843,25,1.925,26,2.56,27,2.432,28,3.125,29,3.125,30,2.315,31,1.925,32,3.125,37,1.66,38,2.432,42,2.432,48,2.432,54,1.897,61,2.432,62,2.56,63,3.125,64,0.011,65,0.013,66,0.011,68,3.033,73,3.468,74,3.468,76,3.033,77,1.691,78,3.033,83,2.315,84,4.234,85,2.207,86,3.033,87,4.234,88,2.013,89,3.468,90,3.947,1328,2.857,1330,5.407,1460,5.293,1461,6.461]],["title/miscellaneous/variables.html",[1127,3.764,1328,1.853]],["body/miscellaneous/variables.html",[6,0.441,10,0.788,11,0.228,12,0.789,17,0.606,18,1.312,22,0.016,33,0.917,37,1.197,64,0.007,65,0.01,66,0.007,68,2.067,77,1.152,91,1.415,99,3.775,108,1.203,110,2.62,111,2.982,112,1.658,113,1.104,114,0.363,116,1.75,117,2.184,118,2.364,119,2.201,120,1.75,121,2.364,125,2.001,126,2.364,133,1.015,137,1.372,140,1.436,148,1.436,156,2.199,160,2.204,161,1.504,162,0.966,165,1.658,175,1.578,182,1.745,183,2.199,184,2.88,185,2.067,186,1.745,187,1.947,188,2.067,189,2.067,190,2.88,191,2.204,192,1.947,193,2.714,194,2.204,208,3.118,209,3.535,210,2.796,211,4.346,213,3.897,221,1.745,223,5.411,233,2.88,242,1.947,244,3.071,245,4.346,246,1.762,247,5.411,248,2.204,249,2.492,250,2.292,265,1.947,273,4.14,375,3.562,376,2.796,401,2.796,402,3.294,403,2.796,404,2.556,405,2.204,406,3.562,407,2.796,408,2.204,409,3.897,410,2.796,417,2.364,669,2.796,924,2.199,928,4.663,929,2.796,941,2.556,959,3.562,974,3.897,975,3.897,1127,2.796,1328,1.947,1330,4.486,1332,3.118,1333,4.346,1337,3.118,1354,2.067,1462,5.027,1463,5.027,1464,5.027,1465,5.787,1466,5.027,1467,3.607,1468,3.607,1469,5.787,1470,5.027,1471,5.027,1472,5.787,1473,3.607,1474,3.607,1475,3.607,1476,3.607,1477,5.787,1478,3.118,1479,3.607]],["title/additional-documentation/tinynodes-library-docs.html",[20,0.955,924,1.149,1029,1.72,1030,1.72,1456,1.604]],["body/additional-documentation/tinynodes-library-docs.html",[22,0.014,64,0.012,65,0.014,66,0.012,79,3.186,113,1.807,924,2.582,983,2.582,985,2.35,1022,3.012,1025,4.182,1027,4.182,1034,5.103,1057,5.103,1091,4.576,1110,4.576,1116,4.576,1124,4.576,1134,4.576,1323,4.213,1367,3.382,1374,4.576,1480,5.103,1481,5.903,1482,5.103,1483,6.896,1484,5.903]],["title/additional-documentation/tinynodes-library-docs/ngx-editorjs-readme.html",[11,0.085,20,0.955,113,0.804,1367,1.504,1456,1.604]],["body/additional-documentation/tinynodes-library-docs/ngx-editorjs-readme.html",[0,0.045,1,0.616,8,0.305,9,1.853,10,0.342,11,0.251,13,0.819,14,1.251,16,1.01,22,0.017,23,0.321,24,1.056,25,1.616,30,2.299,31,1.103,33,0.689,36,0.969,37,1.251,40,1.481,43,1.207,51,0.583,64,0.006,65,0.009,66,0.006,70,0.766,72,0.487,75,1.304,77,2.055,83,1.327,91,0.854,92,2.542,95,1.733,96,1.548,99,1.637,100,2.451,106,2.415,108,1.752,112,1.394,113,0.929,114,0.668,117,1.609,119,1.689,131,1.548,133,1.628,135,1.154,137,1.154,138,1.943,148,1.768,152,2.191,153,2.713,154,2.351,155,2.415,156,1.327,158,1.738,161,1.265,162,0.583,163,1.207,165,1.394,167,1.103,168,1.853,170,1.548,171,2.148,174,1.943,175,2.299,176,1.207,182,2.148,186,1.467,187,1.637,199,2.266,201,0.969,221,2.798,233,1.738,237,1.548,240,1.548,242,1.637,244,1.853,246,1.479,252,3.443,255,2.713,261,0.854,265,1.637,273,2.397,274,1.738,280,1.853,286,2.351,305,2.351,309,2.351,310,1.987,329,1.637,341,1.987,343,2.397,348,3.282,356,2.149,357,2.149,358,2.351,377,3.723,378,1.987,379,2.149,380,3.147,381,2.149,382,3.147,385,1.637,388,1.987,392,2.149,393,2.351,394,2.149,395,2.351,396,3.147,398,1.738,399,1.987,405,1.853,411,1.637,417,1.987,436,2.041,447,2.91,448,2.149,456,2.351,461,3.839,472,3.839,493,1.987,500,1.987,505,3.839,508,1.738,526,3.443,528,1.853,585,2.351,586,2.713,590,1.637,591,1.637,601,1.467,604,3.314,609,2.836,610,3.839,611,2.351,612,1.853,619,1.419,635,2.351,657,1.987,690,2.149,695,1.987,882,1.738,886,1.853,888,1.738,939,2.622,982,2.842,983,1.943,985,1.207,1009,2.149,1022,1.548,1025,2.149,1029,2.91,1030,3.79,1035,2.622,1043,2.149,1044,1.738,1048,3.79,1076,1.853,1106,3.147,1121,3.723,1224,2.351,1309,2.622,1310,2.351,1323,3.21,1353,2.351,1354,1.738,1355,2.622,1356,4.073,1357,2.622,1358,2.622,1359,3.839,1360,2.622,1364,2.351,1365,2.351,1370,2.149,1458,2.622,1478,2.622,1485,3.033,1486,3.033,1487,3.033,1488,3.033,1489,3.033,1490,2.622,1491,3.033,1492,2.622,1493,3.033,1494,3.033,1495,4.441,1496,5.255,1497,3.033,1498,3.839,1499,4.441,1500,4.441,1501,4.441,1502,3.033,1503,3.033,1504,3.033,1505,2.622,1506,3.033,1507,3.033,1508,4.441,1509,3.033,1510,3.033,1511,3.033]],["title/additional-documentation/tinynodes-library-docs/ngx-editorjs-readme/ngx-editorjs-changelog.html",[11,0.085,20,0.955,113,0.804,1022,1.34,1456,1.604]],["body/additional-documentation/tinynodes-library-docs/ngx-editorjs-readme/ngx-editorjs-changelog.html",[0,0.044,5,0.185,9,1.826,11,0.244,13,0.807,14,0.711,17,0.502,22,0.009,24,1.814,25,1.087,27,1.373,30,1.307,31,2.628,33,0.729,36,1.955,37,1.523,40,0.996,43,1.19,46,1.446,51,0.574,54,1.29,64,0.006,65,0.009,66,0.006,70,0.356,76,1.712,77,2.25,80,1.446,83,2.512,90,1.826,92,2.52,94,1.958,95,1.467,96,1.525,99,1.613,100,2.074,105,2.242,106,2.019,108,1.737,110,1.19,112,1.373,113,0.915,114,0.643,117,0.915,119,1.137,133,1.862,138,2.279,142,1.525,152,1.246,153,1.826,155,2.019,158,1.712,162,0.844,163,1.19,167,0.742,171,1.446,174,1.307,175,1.307,176,2.547,177,1.613,183,2.279,192,1.613,195,1.613,200,1.826,201,1.404,212,2.117,221,3.2,225,1.958,233,1.712,237,1.525,240,2.658,242,2.812,244,3.739,246,0.841,248,1.826,265,1.613,267,1.613,269,1.826,280,1.826,281,2.517,329,2.812,343,2.371,348,2.931,357,2.117,359,1.958,369,2.317,378,1.958,384,2.117,385,1.613,411,2.812,416,3.113,417,1.958,418,2.317,422,2.371,436,3.183,443,2.584,447,1.958,467,3.798,480,5.261,493,1.958,500,2.879,501,3.406,508,2.517,522,2.317,526,1.958,528,1.826,530,2.117,586,1.826,604,2.517,608,2.879,609,1.613,640,1.826,641,1.446,646,1.712,657,1.958,683,2.317,684,2.584,698,2.584,713,2.317,724,1.826,756,3.406,768,2.584,936,2.584,1022,2.658,1024,2.317,1030,4.01,1037,2.584,1042,5.705,1043,3.113,1044,3.667,1048,2.879,1050,3.798,1053,4.989,1055,2.584,1060,3.798,1062,3.406,1064,2.584,1067,2.317,1076,3.183,1081,4.808,1082,3.406,1091,3.406,1106,3.113,1113,3.798,1125,2.584,1136,2.317,1188,2.584,1226,2.584,1246,2.317,1323,2.684,1354,2.517,1356,2.317,1363,2.317,1367,1.712,1370,3.113,1374,4.452,1409,3.798,1439,3.406,1447,2.584,1482,2.584,1512,2.584,1513,2.584,1514,2.317,1515,2.584,1516,2.584,1517,2.584,1518,2.989,1519,2.989,1520,6.088,1521,2.989,1522,4.394,1523,5.21,1524,2.584,1525,2.989,1526,5.21,1527,2.989,1528,2.989,1529,2.989,1530,2.989,1531,2.989,1532,2.989,1533,4.394,1534,2.989,1535,2.989,1536,2.584,1537,2.989,1538,2.989,1539,2.989,1540,2.989,1541,4.394,1542,2.989,1543,2.989,1544,2.989,1545,2.989,1546,2.989,1547,2.989,1548,2.989,1549,2.989,1550,2.989,1551,4.394,1552,2.989,1553,2.584,1554,2.989,1555,2.989,1556,2.584,1557,2.584,1558,2.584,1559,5.21,1560,2.989,1561,2.584,1562,2.989,1563,2.989,1564,2.989,1565,2.989,1566,2.989,1567,2.989,1568,2.989,1569,2.989,1570,2.989,1571,2.584,1572,2.989,1573,2.989]],["title/additional-documentation/tinynodes-library-docs/ngx-editorjs-plugins-readme.html",[11,0.076,20,0.855,77,0.75,113,0.719,1367,1.346,1456,1.435]],["body/additional-documentation/tinynodes-library-docs/ngx-editorjs-plugins-readme.html",[1,0.757,5,0.191,8,0.587,10,0.659,11,0.223,14,0.737,16,1.123,17,1.175,22,0.017,23,0.224,24,1.57,25,1.935,33,0.633,36,1.441,37,1.814,40,2.07,41,1.424,51,1.022,64,0.006,65,0.009,66,0.006,67,1.893,70,0.696,72,0.497,77,2.233,78,1.775,79,1.672,80,2.573,82,1.178,85,1.292,91,1.824,95,1.27,96,2.301,100,1.795,103,2.218,104,1.795,105,2.301,106,2.073,108,2.286,110,1.795,113,0.948,114,0.587,116,1.57,120,1.57,138,1.355,155,2.444,158,1.775,162,0.595,166,1.581,167,1.823,172,2.584,174,1.355,212,2.195,246,1.27,249,2.117,250,1.852,253,2.195,255,1.893,261,1.27,276,1.893,348,2.714,398,1.775,408,1.893,421,2.401,422,1.672,436,2.854,441,1.672,489,3.769,587,1.324,588,1.881,604,3.048,608,2.956,609,2.871,611,2.401,619,1.441,634,2.073,641,1.498,646,1.775,649,2.678,654,2.678,657,2.03,658,2.678,661,2.401,663,2.678,690,2.195,691,2.195,695,3.485,724,1.893,881,1.893,882,1.775,883,1.893,885,1.893,887,1.893,888,2.584,889,1.893,983,2.999,985,1.233,992,2.678,1009,3.196,1016,2.678,1027,2.195,1044,1.775,1110,2.401,1116,2.401,1121,3.196,1246,2.401,1283,2.678,1323,1.893,1353,2.401,1354,2.584,1363,2.401,1364,2.401,1365,2.401,1367,3.928,1371,3.899,1452,2.678,1454,2.678,1480,2.678,1490,2.678,1492,2.678,1498,2.678,1505,2.678,1514,2.401,1574,4.511,1575,3.098,1576,2.678,1577,2.678,1578,3.098,1579,3.098,1580,3.098,1581,3.098,1582,3.098,1583,4.511,1584,4.511,1585,3.098,1586,3.098,1587,3.098,1588,3.098,1589,3.098,1590,3.098,1591,3.098,1592,3.098,1593,3.098,1594,3.098]],["title/additional-documentation/tinynodes-library-docs/ngx-editorjs-plugins-readme/ngx-editorjs-plugins-changelog.html",[11,0.076,20,0.855,77,0.75,113,0.719,1022,1.199,1456,1.435]],["body/additional-documentation/tinynodes-library-docs/ngx-editorjs-plugins-readme/ngx-editorjs-plugins-changelog.html",[5,0.307,22,0.013,24,1.731,31,2.261,33,0.592,36,1.588,37,1.615,64,0.01,65,0.013,66,0.01,77,2.383,91,1.399,95,1.399,108,1.658,112,2.285,114,0.735,116,1.731,120,1.731,161,2.073,162,0.956,163,1.979,167,1.543,182,2.405,183,2.175,246,1.75,249,1.979,261,1.399,267,2.684,369,3.854,416,3.522,436,2.857,480,4.819,492,3.522,498,3.854,508,2.849,530,3.522,587,1.459,588,2.073,640,3.798,641,3.28,645,3.854,699,4.298,724,3.037,982,2.592,985,2.474,1022,3.172,1042,3.854,1044,3.562,1053,4.805,1062,3.854,1076,3.037,1081,4.404,1106,3.522,1124,3.854,1136,3.854,1367,2.849,1439,3.854,1512,4.298,1513,4.298,1514,3.854,1515,4.298,1516,4.298,1517,4.298,1520,5.863,1524,4.298,1536,4.298,1553,4.298,1556,4.298,1557,4.298,1558,4.298,1561,4.298,1571,4.298,1576,4.298,1577,4.298,1595,4.972,1596,4.972,1597,4.972,1598,4.972,1599,4.972]]],"invertedIndex":[["",{"_index":22,"title":{},"body":{"interfaces/Block.html":{},"interfaces/BlockData.html":{},"interfaces/ChangeMap.html":{},"interfaces/CreateEditorJSOptions.html":{},"interfaces/EditorJSChange.html":{},"interfaces/EditorJSClass.html":{},"interfaces/EditorJSInstanceConfig.html":{},"interfaces/EditorJSMaterialForm.html":{},"interfaces/EditorMap.html":{},"interfaces/Header.html":{},"interfaces/HeaderBlock.html":{},"interfaces/Image.html":{},"interfaces/ImageBlock.html":{},"interfaces/InjectorApiCallOptions.html":{},"interfaces/InjectorApiCallResponse.html":{},"interfaces/InjectorMethodOption.html":{},"interfaces/List.html":{},"interfaces/ListBlock.html":{},"interfaces/NgxEditorJSConfig.html":{},"directives/NgxEditorJSDirective.html":{},"modules/NgxEditorJSModule.html":{},"interfaces/NgxEditorJSModuleConfig.html":{},"injectables/NgxEditorJSPluginService.html":{},"injectables/NgxEditorJSService.html":{},"modules/NgxEditorjsPluginsModule.html":{},"modules/NgxPluginServiceModule.html":{},"modules/NgxTinynodesComponentsModule.html":{},"interfaces/NgxTinynodesMatFieldComponent.html":{},"components/NgxTinynodesMatJsonOutputComponent.html":{},"modules/NgxTinynodesMatJsonOutputModule.html":{},"modules/NgxTinynodesMatTagInputModule.html":{},"interfaces/Paragraph.html":{},"interfaces/ParagraphBlock.html":{},"modules/PluginCodeModule.html":{},"interfaces/PluginConfig.html":{},"interfaces/PluginConfigMap.html":{},"modules/PluginHeaderModule.html":{},"modules/PluginImageModule.html":{},"modules/PluginInlineCodeModule.html":{},"modules/PluginLinkModule.html":{},"modules/PluginListModule.html":{},"modules/PluginMarkerModule.html":{},"modules/PluginParagraphModule.html":{},"modules/PluginSimpleImageModule.html":{},"interfaces/ReadyMap.html":{},"interfaces/SavedMap.html":{},"interfaces/ToolSettingsMap.html":{},"changelog.html":{},"contributing.html":{},"dependencies.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"index.html":{},"license.html":{},"modules.html":{},"overview.html":{},"todo.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{},"additional-documentation/tinynodes-library-docs.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-readme.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-readme/ngx-editorjs-changelog.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-plugins-readme.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-plugins-readme/ngx-editorjs-plugins-changelog.html":{}}}],["0",{"_index":186,"title":{},"body":{"interfaces/EditorJSClass.html":{},"interfaces/EditorJSInstanceConfig.html":{},"interfaces/EditorJSMaterialForm.html":{},"interfaces/InjectorApiCallOptions.html":{},"interfaces/InjectorApiCallResponse.html":{},"interfaces/InjectorMethodOption.html":{},"directives/NgxEditorJSDirective.html":{},"injectables/NgxEditorJSService.html":{},"miscellaneous/variables.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-readme.html":{}}}],["0.0.5",{"_index":1321,"title":{},"body":{"dependencies.html":{}}}],["0.12.2",{"_index":1319,"title":{},"body":{"dependencies.html":{}}}],["0.9.1",{"_index":1327,"title":{},"body":{"dependencies.html":{}}}],["05",{"_index":1520,"title":{},"body":{"additional-documentation/tinynodes-library-docs/ngx-editorjs-readme/ngx-editorjs-changelog.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-plugins-readme/ngx-editorjs-plugins-changelog.html":{}}}],["06",{"_index":1519,"title":{},"body":{"additional-documentation/tinynodes-library-docs/ngx-editorjs-readme/ngx-editorjs-changelog.html":{}}}],["1",{"_index":45,"title":{},"body":{"interfaces/Block.html":{},"interfaces/Header.html":{},"interfaces/HeaderBlock.html":{},"interfaces/Image.html":{},"interfaces/ImageBlock.html":{},"interfaces/List.html":{},"interfaces/ListBlock.html":{},"interfaces/Paragraph.html":{},"interfaces/ParagraphBlock.html":{},"overview.html":{}}}],["1.0.0",{"_index":1571,"title":{},"body":{"additional-documentation/tinynodes-library-docs/ngx-editorjs-readme/ngx-editorjs-changelog.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-plugins-readme/ngx-editorjs-plugins-changelog.html":{}}}],["1.1.0",{"_index":1561,"title":{},"body":{"additional-documentation/tinynodes-library-docs/ngx-editorjs-readme/ngx-editorjs-changelog.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-plugins-readme/ngx-editorjs-plugins-changelog.html":{}}}],["1.1.1",{"_index":1558,"title":{},"body":{"additional-documentation/tinynodes-library-docs/ngx-editorjs-readme/ngx-editorjs-changelog.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-plugins-readme/ngx-editorjs-plugins-changelog.html":{}}}],["1.1.2",{"_index":1555,"title":{},"body":{"additional-documentation/tinynodes-library-docs/ngx-editorjs-readme/ngx-editorjs-changelog.html":{}}}],["1.2",{"_index":1087,"title":{},"body":{"changelog.html":{}}}],["1.2.0",{"_index":1552,"title":{},"body":{"additional-documentation/tinynodes-library-docs/ngx-editorjs-readme/ngx-editorjs-changelog.html":{}}}],["1.3.0",{"_index":1546,"title":{},"body":{"additional-documentation/tinynodes-library-docs/ngx-editorjs-readme/ngx-editorjs-changelog.html":{}}}],["1.3.2",{"_index":1542,"title":{},"body":{"additional-documentation/tinynodes-library-docs/ngx-editorjs-readme/ngx-editorjs-changelog.html":{}}}],["1.4",{"_index":1299,"title":{},"body":{"contributing.html":{}}}],["10",{"_index":1559,"title":{},"body":{"additional-documentation/tinynodes-library-docs/ngx-editorjs-readme/ngx-editorjs-changelog.html":{}}}],["11",{"_index":1556,"title":{},"body":{"additional-documentation/tinynodes-library-docs/ngx-editorjs-readme/ngx-editorjs-changelog.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-plugins-readme/ngx-editorjs-plugins-changelog.html":{}}}],["12th",{"_index":1084,"title":{},"body":{"changelog.html":{}}}],["13",{"_index":1553,"title":{},"body":{"additional-documentation/tinynodes-library-docs/ngx-editorjs-readme/ngx-editorjs-changelog.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-plugins-readme/ngx-editorjs-plugins-changelog.html":{}}}],["13th",{"_index":1079,"title":{},"body":{"changelog.html":{}}}],["15",{"_index":1439,"title":{},"body":{"overview.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-readme/ngx-editorjs-changelog.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-plugins-readme/ngx-editorjs-plugins-changelog.html":{}}}],["15th",{"_index":1068,"title":{},"body":{"changelog.html":{}}}],["2",{"_index":1441,"title":{},"body":{"overview.html":{}}}],["2.0.0",{"_index":1536,"title":{},"body":{"additional-documentation/tinynodes-library-docs/ngx-editorjs-readme/ngx-editorjs-changelog.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-plugins-readme/ngx-editorjs-plugins-changelog.html":{}}}],["2.0.8",{"_index":1318,"title":{},"body":{"dependencies.html":{}}}],["2.1.0",{"_index":1529,"title":{},"body":{"additional-documentation/tinynodes-library-docs/ngx-editorjs-readme/ngx-editorjs-changelog.html":{}}}],["2.4.0",{"_index":1322,"title":{},"body":{"dependencies.html":{}}}],["2019",{"_index":1053,"title":{},"body":{"changelog.html":{},"license.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-readme/ngx-editorjs-changelog.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-plugins-readme/ngx-editorjs-plugins-changelog.html":{}}}],["22",{"_index":1537,"title":{},"body":{"additional-documentation/tinynodes-library-docs/ngx-editorjs-readme/ngx-editorjs-changelog.html":{}}}],["22nd",{"_index":1052,"title":{},"body":{"changelog.html":{}}}],["23",{"_index":1530,"title":{},"body":{"additional-documentation/tinynodes-library-docs/ngx-editorjs-readme/ngx-editorjs-changelog.html":{}}}],["28",{"_index":1442,"title":{},"body":{"overview.html":{}}}],["3.0.0",{"_index":1518,"title":{},"body":{"additional-documentation/tinynodes-library-docs/ngx-editorjs-readme/ngx-editorjs-changelog.html":{}}}],["3.1.3",{"_index":1316,"title":{},"body":{"dependencies.html":{}}}],["4",{"_index":1440,"title":{},"body":{"overview.html":{}}}],["6",{"_index":46,"title":{},"body":{"interfaces/Block.html":{},"interfaces/Header.html":{},"interfaces/HeaderBlock.html":{},"interfaces/Image.html":{},"interfaces/ImageBlock.html":{},"interfaces/List.html":{},"interfaces/ListBlock.html":{},"interfaces/Paragraph.html":{},"interfaces/ParagraphBlock.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-readme/ngx-editorjs-changelog.html":{}}}],["6.5.2",{"_index":1325,"title":{},"body":{"dependencies.html":{}}}],["6.9.0",{"_index":1324,"title":{},"body":{"dependencies.html":{}}}],["7",{"_index":1366,"title":{},"body":{"index.html":{}}}],["7.4.0",{"_index":1314,"title":{},"body":{"dependencies.html":{}}}],["8",{"_index":1521,"title":{},"body":{"additional-documentation/tinynodes-library-docs/ngx-editorjs-readme/ngx-editorjs-changelog.html":{}}}],["8.0.0",{"_index":1303,"title":{},"body":{"dependencies.html":{}}}],["_disabled",{"_index":300,"title":{},"body":{"interfaces/EditorJSMaterialForm.html":{}}}],["_empty",{"_index":306,"title":{},"body":{"interfaces/EditorJSMaterialForm.html":{}}}],["_focused",{"_index":287,"title":{},"body":{"interfaces/EditorJSMaterialForm.html":{}}}],["_placeholder",{"_index":282,"title":{},"body":{"interfaces/EditorJSMaterialForm.html":{}}}],["_required",{"_index":293,"title":{},"body":{"interfaces/EditorJSMaterialForm.html":{}}}],["a.time",{"_index":837,"title":{},"body":{"injectables/NgxEditorJSService.html":{}}}],["above",{"_index":1406,"title":{},"body":{"license.html":{}}}],["abusive",{"_index":1265,"title":{},"body":{"contributing.html":{}}}],["acceptable",{"_index":1219,"title":{},"body":{"contributing.html":{}}}],["accepting",{"_index":1184,"title":{},"body":{"contributing.html":{}}}],["access",{"_index":309,"title":{},"body":{"interfaces/EditorJSMaterialForm.html":{},"index.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-readme.html":{}}}],["accessor",{"_index":1479,"title":{},"body":{"miscellaneous/variables.html":{}}}],["accessors",{"_index":435,"title":{},"body":{"directives/NgxEditorJSDirective.html":{}}}],["account",{"_index":1255,"title":{},"body":{"contributing.html":{}}}],["acting",{"_index":1256,"title":{},"body":{"contributing.html":{}}}],["action",{"_index":1224,"title":{},"body":{"contributing.html":{},"license.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-readme.html":{}}}],["actions",{"_index":751,"title":{},"body":{"injectables/NgxEditorJSService.html":{}}}],["active",{"_index":450,"title":{},"body":{"directives/NgxEditorJSDirective.html":{}}}],["actual_component",{"_index":960,"title":{},"body":{"components/NgxTinynodesMatJsonOutputComponent.html":{}}}],["adapted",{"_index":1297,"title":{},"body":{"contributing.html":{}}}],["add",{"_index":1370,"title":{},"body":{"index.html":{},"todo.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-readme.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-readme/ngx-editorjs-changelog.html":{}}}],["added",{"_index":31,"title":{},"body":{"interfaces/Block.html":{},"interfaces/Header.html":{},"interfaces/HeaderBlock.html":{},"interfaces/Image.html":{},"interfaces/ImageBlock.html":{},"interfaces/List.html":{},"interfaces/ListBlock.html":{},"directives/NgxEditorJSDirective.html":{},"injectables/NgxEditorJSService.html":{},"interfaces/Paragraph.html":{},"interfaces/ParagraphBlock.html":{},"changelog.html":{},"miscellaneous/typealiases.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-readme.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-readme/ngx-editorjs-changelog.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-plugins-readme/ngx-editorjs-plugins-changelog.html":{}}}],["adding",{"_index":1511,"title":{},"body":{"additional-documentation/tinynodes-library-docs/ngx-editorjs-readme.html":{}}}],["additional",{"_index":20,"title":{"additional-documentation/tinynodes-library-docs.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-readme.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-readme/ngx-editorjs-changelog.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-plugins-readme.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-plugins-readme/ngx-editorjs-plugins-changelog.html":{}},"body":{"interfaces/Block.html":{},"interfaces/Header.html":{},"interfaces/HeaderBlock.html":{},"interfaces/Image.html":{},"interfaces/ImageBlock.html":{},"interfaces/List.html":{},"interfaces/ListBlock.html":{},"injectables/NgxEditorJSService.html":{},"modules/NgxEditorjsPluginsModule.html":{},"interfaces/Paragraph.html":{},"interfaces/ParagraphBlock.html":{}}}],["address",{"_index":1209,"title":{},"body":{"contributing.html":{}}}],["adds",{"_index":727,"title":{},"body":{"injectables/NgxEditorJSService.html":{}}}],["adheres",{"_index":1516,"title":{},"body":{"additional-documentation/tinynodes-library-docs/ngx-editorjs-readme/ngx-editorjs-changelog.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-plugins-readme/ngx-editorjs-plugins-changelog.html":{}}}],["advances",{"_index":1199,"title":{},"body":{"contributing.html":{}}}],["aftercontentinit",{"_index":218,"title":{},"body":{"interfaces/EditorJSMaterialForm.html":{},"directives/NgxEditorJSDirective.html":{},"interfaces/NgxTinynodesMatFieldComponent.html":{}}}],["against",{"_index":723,"title":{},"body":{"injectables/NgxEditorJSService.html":{}}}],["age",{"_index":1157,"title":{},"body":{"contributing.html":{}}}],["aliases",{"_index":1460,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["aligned",{"_index":1234,"title":{},"body":{"contributing.html":{}}}],["allow",{"_index":607,"title":{},"body":{"modules/NgxEditorJSModule.html":{}}}],["allows",{"_index":396,"title":{},"body":{"interfaces/NgxEditorJSConfig.html":{},"interfaces/NgxEditorJSModuleConfig.html":{},"injectables/NgxEditorJSService.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-readme.html":{}}}],["along",{"_index":1035,"title":{},"body":{"changelog.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-readme.html":{}}}],["alongside",{"_index":1580,"title":{},"body":{"additional-documentation/tinynodes-library-docs/ngx-editorjs-plugins-readme.html":{}}}],["and/or",{"_index":1398,"title":{},"body":{"license.html":{}}}],["angular",{"_index":348,"title":{},"body":{"interfaces/EditorJSMaterialForm.html":{},"directives/NgxEditorJSDirective.html":{},"modules/NgxEditorJSModule.html":{},"injectables/NgxEditorJSService.html":{},"changelog.html":{},"index.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-readme.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-readme/ngx-editorjs-changelog.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-plugins-readme.html":{}}}],["angular's",{"_index":1528,"title":{},"body":{"additional-documentation/tinynodes-library-docs/ngx-editorjs-readme/ngx-editorjs-changelog.html":{}}}],["angular/animations",{"_index":1302,"title":{},"body":{"dependencies.html":{}}}],["angular/cdk",{"_index":1304,"title":{},"body":{"dependencies.html":{}}}],["angular/cdk/a11y",{"_index":215,"title":{},"body":{"interfaces/EditorJSMaterialForm.html":{}}}],["angular/cdk/coercion",{"_index":217,"title":{},"body":{"interfaces/EditorJSMaterialForm.html":{}}}],["angular/common",{"_index":618,"title":{},"body":{"modules/NgxEditorJSModule.html":{},"modules/NgxEditorjsPluginsModule.html":{},"modules/NgxTinynodesMatJsonOutputModule.html":{},"modules/NgxTinynodesMatTagInputModule.html":{},"dependencies.html":{}}}],["angular/compiler",{"_index":1305,"title":{},"body":{"dependencies.html":{}}}],["angular/core",{"_index":72,"title":{},"body":{"interfaces/BlockData.html":{},"interfaces/EditorJSClass.html":{},"interfaces/EditorJSInstanceConfig.html":{},"interfaces/EditorJSMaterialForm.html":{},"interfaces/InjectorApiCallOptions.html":{},"interfaces/InjectorApiCallResponse.html":{},"interfaces/InjectorMethodOption.html":{},"interfaces/NgxEditorJSConfig.html":{},"directives/NgxEditorJSDirective.html":{},"modules/NgxEditorJSModule.html":{},"interfaces/NgxEditorJSModuleConfig.html":{},"injectables/NgxEditorJSPluginService.html":{},"injectables/NgxEditorJSService.html":{},"modules/NgxEditorjsPluginsModule.html":{},"modules/NgxPluginServiceModule.html":{},"modules/NgxTinynodesComponentsModule.html":{},"interfaces/NgxTinynodesMatFieldComponent.html":{},"components/NgxTinynodesMatJsonOutputComponent.html":{},"modules/NgxTinynodesMatJsonOutputModule.html":{},"modules/NgxTinynodesMatTagInputModule.html":{},"modules/PluginCodeModule.html":{},"interfaces/PluginConfig.html":{},"interfaces/PluginConfigMap.html":{},"modules/PluginHeaderModule.html":{},"modules/PluginImageModule.html":{},"modules/PluginInlineCodeModule.html":{},"modules/PluginLinkModule.html":{},"modules/PluginListModule.html":{},"modules/PluginMarkerModule.html":{},"modules/PluginParagraphModule.html":{},"modules/PluginSimpleImageModule.html":{},"interfaces/ToolSettingsMap.html":{},"dependencies.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-readme.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-plugins-readme.html":{}}}],["angular/flex",{"_index":1306,"title":{},"body":{"dependencies.html":{}}}],["angular/forms",{"_index":231,"title":{},"body":{"interfaces/EditorJSMaterialForm.html":{},"modules/NgxEditorJSModule.html":{},"interfaces/NgxTinynodesMatFieldComponent.html":{},"modules/NgxTinynodesMatTagInputModule.html":{},"dependencies.html":{}}}],["angular/material",{"_index":937,"title":{},"body":{"interfaces/NgxTinynodesMatFieldComponent.html":{},"modules/NgxTinynodesMatJsonOutputModule.html":{},"modules/NgxTinynodesMatTagInputModule.html":{},"dependencies.html":{}}}],["angular/material/form",{"_index":232,"title":{},"body":{"interfaces/EditorJSMaterialForm.html":{},"modules/NgxEditorJSModule.html":{}}}],["angular/material/input",{"_index":624,"title":{},"body":{"modules/NgxEditorJSModule.html":{}}}],["angular/platform",{"_index":1309,"title":{},"body":{"dependencies.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-readme.html":{}}}],["angular/router",{"_index":1312,"title":{},"body":{"dependencies.html":{}}}],["aot",{"_index":1526,"title":{},"body":{"additional-documentation/tinynodes-library-docs/ngx-editorjs-readme/ngx-editorjs-changelog.html":{}}}],["api",{"_index":201,"title":{},"body":{"interfaces/EditorJSClass.html":{},"interfaces/EditorJSInstanceConfig.html":{},"interfaces/InjectorApiCallOptions.html":{},"interfaces/InjectorApiCallResponse.html":{},"interfaces/InjectorMethodOption.html":{},"injectables/NgxEditorJSService.html":{},"modules/PluginCodeModule.html":{},"modules/PluginHeaderModule.html":{},"modules/PluginImageModule.html":{},"modules/PluginInlineCodeModule.html":{},"modules/PluginLinkModule.html":{},"modules/PluginListModule.html":{},"modules/PluginMarkerModule.html":{},"modules/PluginParagraphModule.html":{},"modules/PluginSimpleImageModule.html":{},"changelog.html":{},"index.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-readme.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-readme/ngx-editorjs-changelog.html":{}}}],["apicall",{"_index":698,"title":{},"body":{"injectables/NgxEditorJSService.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-readme/ngx-editorjs-changelog.html":{}}}],["apicall(options",{"_index":710,"title":{},"body":{"injectables/NgxEditorJSService.html":{}}}],["app",{"_index":408,"title":{},"body":{"interfaces/NgxEditorJSConfig.html":{},"modules/NgxEditorJSModule.html":{},"interfaces/NgxEditorJSModuleConfig.html":{},"changelog.html":{},"miscellaneous/variables.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-plugins-readme.html":{}}}],["app.component",{"_index":1497,"title":{},"body":{"additional-documentation/tinynodes-library-docs/ngx-editorjs-readme.html":{}}}],["appcomponent",{"_index":1496,"title":{},"body":{"additional-documentation/tinynodes-library-docs/ngx-editorjs-readme.html":{}}}],["appearance",{"_index":1167,"title":{},"body":{"contributing.html":{}}}],["application",{"_index":609,"title":{},"body":{"modules/NgxEditorJSModule.html":{},"injectables/NgxEditorJSPluginService.html":{},"injectables/NgxEditorJSService.html":{},"changelog.html":{},"index.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-readme.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-readme/ngx-editorjs-changelog.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-plugins-readme.html":{}}}],["applicationref",{"_index":706,"title":{},"body":{"injectables/NgxEditorJSService.html":{}}}],["applies",{"_index":1245,"title":{},"body":{"contributing.html":{}}}],["appmodule",{"_index":1502,"title":{},"body":{"additional-documentation/tinynodes-library-docs/ngx-editorjs-readme.html":{}}}],["appointed",{"_index":1257,"title":{},"body":{"contributing.html":{}}}],["appropriate",{"_index":1221,"title":{},"body":{"contributing.html":{}}}],["architecture",{"_index":1037,"title":{},"body":{"changelog.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-readme/ngx-editorjs-changelog.html":{}}}],["area",{"_index":395,"title":{},"body":{"interfaces/NgxEditorJSConfig.html":{},"interfaces/NgxEditorJSModuleConfig.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-readme.html":{}}}],["args",{"_index":206,"title":{},"body":{"interfaces/EditorJSClass.html":{},"interfaces/EditorJSInstanceConfig.html":{},"interfaces/InjectorApiCallOptions.html":{},"interfaces/InjectorApiCallResponse.html":{},"interfaces/InjectorMethodOption.html":{},"injectables/NgxEditorJSService.html":{}}}],["argument",{"_index":714,"title":{},"body":{"injectables/NgxEditorJSService.html":{}}}],["arguments",{"_index":719,"title":{},"body":{"injectables/NgxEditorJSService.html":{}}}],["aria",{"_index":325,"title":{},"body":{"interfaces/EditorJSMaterialForm.html":{}}}],["arising",{"_index":1432,"title":{},"body":{"license.html":{}}}],["array",{"_index":464,"title":{},"body":{"directives/NgxEditorJSDirective.html":{},"injectables/NgxEditorJSService.html":{},"miscellaneous/functions.html":{}}}],["associated",{"_index":1388,"title":{},"body":{"license.html":{}}}],["async",{"_index":423,"title":{},"body":{"directives/NgxEditorJSDirective.html":{},"injectables/NgxEditorJSService.html":{}}}],["async/await",{"_index":769,"title":{},"body":{"injectables/NgxEditorJSService.html":{},"changelog.html":{}}}],["attach",{"_index":417,"title":{},"body":{"directives/NgxEditorJSDirective.html":{},"index.html":{},"miscellaneous/variables.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-readme.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-readme/ngx-editorjs-changelog.html":{}}}],["attached",{"_index":443,"title":{},"body":{"directives/NgxEditorJSDirective.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-readme/ngx-editorjs-changelog.html":{}}}],["attacks",{"_index":1204,"title":{},"body":{"contributing.html":{}}}],["attention",{"_index":1198,"title":{},"body":{"contributing.html":{}}}],["attribution",{"_index":1296,"title":{},"body":{"contributing.html":{}}}],["authors",{"_index":1423,"title":{},"body":{"license.html":{}}}],["autofocus",{"_index":377,"title":{},"body":{"interfaces/NgxEditorJSConfig.html":{},"directives/NgxEditorJSDirective.html":{},"interfaces/NgxEditorJSModuleConfig.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-readme.html":{}}}],["autofocused",{"_index":383,"title":{},"body":{"interfaces/NgxEditorJSConfig.html":{},"interfaces/NgxEditorJSModuleConfig.html":{}}}],["autosave",{"_index":153,"title":{},"body":{"interfaces/CreateEditorJSOptions.html":{},"interfaces/EditorJSMaterialForm.html":{},"directives/NgxEditorJSDirective.html":{},"todo.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-readme.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-readme/ngx-editorjs-changelog.html":{}}}],["autosaves",{"_index":455,"title":{},"body":{"directives/NgxEditorJSDirective.html":{}}}],["available",{"_index":24,"title":{},"body":{"interfaces/Block.html":{},"interfaces/Header.html":{},"interfaces/HeaderBlock.html":{},"interfaces/Image.html":{},"interfaces/ImageBlock.html":{},"interfaces/List.html":{},"interfaces/ListBlock.html":{},"directives/NgxEditorJSDirective.html":{},"interfaces/Paragraph.html":{},"interfaces/ParagraphBlock.html":{},"contributing.html":{},"modules.html":{},"miscellaneous/typealiases.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-readme.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-readme/ngx-editorjs-changelog.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-plugins-readme.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-plugins-readme/ngx-editorjs-plugins-changelog.html":{}}}],["avoid",{"_index":1576,"title":{},"body":{"additional-documentation/tinynodes-library-docs/ngx-editorjs-plugins-readme.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-plugins-readme/ngx-editorjs-plugins-changelog.html":{}}}],["await",{"_index":541,"title":{},"body":{"directives/NgxEditorJSDirective.html":{},"injectables/NgxEditorJSService.html":{}}}],["b",{"_index":835,"title":{},"body":{"injectables/NgxEditorJSService.html":{}}}],["b.time",{"_index":836,"title":{},"body":{"injectables/NgxEditorJSService.html":{}}}],["back",{"_index":530,"title":{},"body":{"directives/NgxEditorJSDirective.html":{},"todo.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-readme/ngx-editorjs-changelog.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-plugins-readme/ngx-editorjs-plugins-changelog.html":{}}}],["background",{"_index":57,"title":{},"body":{"interfaces/Block.html":{},"interfaces/Header.html":{},"interfaces/HeaderBlock.html":{},"interfaces/Image.html":{},"interfaces/ImageBlock.html":{},"interfaces/List.html":{},"interfaces/ListBlock.html":{},"interfaces/Paragraph.html":{},"interfaces/ParagraphBlock.html":{}}}],["ban",{"_index":1235,"title":{},"body":{"contributing.html":{}}}],["base",{"_index":9,"title":{},"body":{"interfaces/Block.html":{},"interfaces/EditorJSMaterialForm.html":{},"modules/NgxEditorJSModule.html":{},"miscellaneous/functions.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-readme.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-readme/ngx-editorjs-changelog.html":{}}}],["based",{"_index":369,"title":{},"body":{"interfaces/EditorJSMaterialForm.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-readme/ngx-editorjs-changelog.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-plugins-readme/ngx-editorjs-plugins-changelog.html":{}}}],["baseplugin",{"_index":1570,"title":{},"body":{"additional-documentation/tinynodes-library-docs/ngx-editorjs-readme/ngx-editorjs-changelog.html":{}}}],["bash",{"_index":1492,"title":{},"body":{"additional-documentation/tinynodes-library-docs/ngx-editorjs-readme.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-plugins-readme.html":{}}}],["basic",{"_index":62,"title":{},"body":{"interfaces/Block.html":{},"interfaces/Header.html":{},"interfaces/HeaderBlock.html":{},"interfaces/Image.html":{},"interfaces/ImageBlock.html":{},"interfaces/List.html":{},"interfaces/ListBlock.html":{},"interfaces/Paragraph.html":{},"interfaces/ParagraphBlock.html":{},"miscellaneous/typealiases.html":{}}}],["before",{"_index":460,"title":{},"body":{"directives/NgxEditorJSDirective.html":{},"contributing.html":{}}}],["behavior",{"_index":1173,"title":{},"body":{"contributing.html":{}}}],["behaviors",{"_index":1239,"title":{},"body":{"contributing.html":{}}}],["behaviorsubject",{"_index":130,"title":{},"body":{"interfaces/ChangeMap.html":{},"interfaces/EditorJSChange.html":{},"interfaces/EditorMap.html":{},"directives/NgxEditorJSDirective.html":{},"injectables/NgxEditorJSService.html":{},"interfaces/ReadyMap.html":{},"interfaces/SavedMap.html":{}}}],["behaviorsubject(editor",{"_index":791,"title":{},"body":{"injectables/NgxEditorJSService.html":{}}}],["behaviorsubject(false",{"_index":527,"title":{},"body":{"directives/NgxEditorJSDirective.html":{},"injectables/NgxEditorJSService.html":{}}}],["behaviorsubject(undefined",{"_index":828,"title":{},"body":{"injectables/NgxEditorJSService.html":{}}}],["behaviorsubject(value",{"_index":860,"title":{},"body":{"injectables/NgxEditorJSService.html":{}}}],["being",{"_index":1178,"title":{},"body":{"contributing.html":{}}}],["below",{"_index":1365,"title":{},"body":{"index.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-readme.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-plugins-readme.html":{}}}],["best",{"_index":1188,"title":{},"body":{"contributing.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-readme/ngx-editorjs-changelog.html":{}}}],["beta.26",{"_index":1308,"title":{},"body":{"dependencies.html":{}}}],["better",{"_index":1047,"title":{},"body":{"changelog.html":{}}}],["big",{"_index":1538,"title":{},"body":{"additional-documentation/tinynodes-library-docs/ngx-editorjs-readme/ngx-editorjs-changelog.html":{}}}],["bind",{"_index":773,"title":{},"body":{"injectables/NgxEditorJSService.html":{}}}],["binding",{"_index":316,"title":{},"body":{"interfaces/EditorJSMaterialForm.html":{}}}],["block",{"_index":1,"title":{"interfaces/Block.html":{}},"body":{"interfaces/Block.html":{},"interfaces/BlockData.html":{},"interfaces/ChangeMap.html":{},"interfaces/EditorJSChange.html":{},"interfaces/EditorJSClass.html":{},"interfaces/EditorJSInstanceConfig.html":{},"interfaces/EditorMap.html":{},"interfaces/Header.html":{},"interfaces/HeaderBlock.html":{},"interfaces/Image.html":{},"interfaces/ImageBlock.html":{},"interfaces/InjectorApiCallOptions.html":{},"interfaces/InjectorApiCallResponse.html":{},"interfaces/InjectorMethodOption.html":{},"interfaces/List.html":{},"interfaces/ListBlock.html":{},"interfaces/NgxEditorJSConfig.html":{},"directives/NgxEditorJSDirective.html":{},"interfaces/NgxEditorJSModuleConfig.html":{},"modules/NgxEditorjsPluginsModule.html":{},"interfaces/Paragraph.html":{},"interfaces/ParagraphBlock.html":{},"modules/PluginCodeModule.html":{},"interfaces/PluginConfig.html":{},"interfaces/PluginConfigMap.html":{},"modules/PluginHeaderModule.html":{},"modules/PluginImageModule.html":{},"modules/PluginInlineCodeModule.html":{},"modules/PluginLinkModule.html":{},"modules/PluginListModule.html":{},"modules/PluginMarkerModule.html":{},"modules/PluginParagraphModule.html":{},"modules/PluginSimpleImageModule.html":{},"interfaces/ReadyMap.html":{},"interfaces/SavedMap.html":{},"interfaces/ToolSettingsMap.html":{},"changelog.html":{},"miscellaneous/enumerations.html":{},"index.html":{},"miscellaneous/typealiases.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-readme.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-plugins-readme.html":{}}}],["blockdata",{"_index":67,"title":{"interfaces/BlockData.html":{}},"body":{"interfaces/BlockData.html":{},"interfaces/PluginConfig.html":{},"interfaces/PluginConfigMap.html":{},"interfaces/ToolSettingsMap.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-plugins-readme.html":{}}}],["blockplaceholder",{"_index":378,"title":{},"body":{"interfaces/NgxEditorJSConfig.html":{},"directives/NgxEditorJSDirective.html":{},"interfaces/NgxEditorJSModuleConfig.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-readme.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-readme/ngx-editorjs-changelog.html":{}}}],["blocks",{"_index":137,"title":{},"body":{"interfaces/ChangeMap.html":{},"interfaces/EditorJSChange.html":{},"interfaces/EditorJSClass.html":{},"interfaces/EditorJSInstanceConfig.html":{},"interfaces/EditorMap.html":{},"interfaces/InjectorApiCallOptions.html":{},"interfaces/InjectorApiCallResponse.html":{},"interfaces/InjectorMethodOption.html":{},"directives/NgxEditorJSDirective.html":{},"injectables/NgxEditorJSService.html":{},"interfaces/ReadyMap.html":{},"interfaces/SavedMap.html":{},"todo.html":{},"miscellaneous/variables.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-readme.html":{}}}],["blocktypes",{"_index":63,"title":{},"body":{"interfaces/Block.html":{},"interfaces/Header.html":{},"interfaces/HeaderBlock.html":{},"interfaces/Image.html":{},"interfaces/ImageBlock.html":{},"interfaces/List.html":{},"interfaces/ListBlock.html":{},"interfaces/Paragraph.html":{},"interfaces/ParagraphBlock.html":{},"miscellaneous/typealiases.html":{}}}],["blur",{"_index":454,"title":{},"body":{"directives/NgxEditorJSDirective.html":{}}}],["body",{"_index":1158,"title":{},"body":{"contributing.html":{}}}],["boolean",{"_index":56,"title":{},"body":{"interfaces/Block.html":{},"interfaces/EditorJSClass.html":{},"interfaces/EditorJSInstanceConfig.html":{},"interfaces/EditorJSMaterialForm.html":{},"interfaces/Header.html":{},"interfaces/HeaderBlock.html":{},"interfaces/Image.html":{},"interfaces/ImageBlock.html":{},"interfaces/InjectorApiCallOptions.html":{},"interfaces/InjectorApiCallResponse.html":{},"interfaces/InjectorMethodOption.html":{},"interfaces/List.html":{},"interfaces/ListBlock.html":{},"interfaces/NgxEditorJSConfig.html":{},"directives/NgxEditorJSDirective.html":{},"interfaces/NgxEditorJSModuleConfig.html":{},"interfaces/Paragraph.html":{},"interfaces/ParagraphBlock.html":{}}}],["bootstrap",{"_index":591,"title":{},"body":{"modules/NgxEditorJSModule.html":{},"modules/NgxEditorjsPluginsModule.html":{},"modules/NgxPluginServiceModule.html":{},"modules/NgxTinynodesComponentsModule.html":{},"modules/NgxTinynodesMatJsonOutputModule.html":{},"modules/NgxTinynodesMatTagInputModule.html":{},"overview.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-readme.html":{}}}],["border",{"_index":53,"title":{},"body":{"interfaces/Block.html":{},"interfaces/Header.html":{},"interfaces/HeaderBlock.html":{},"interfaces/Image.html":{},"interfaces/ImageBlock.html":{},"interfaces/List.html":{},"interfaces/ListBlock.html":{},"interfaces/Paragraph.html":{},"interfaces/ParagraphBlock.html":{}}}],["both",{"_index":1246,"title":{},"body":{"contributing.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-readme/ngx-editorjs-changelog.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-plugins-readme.html":{}}}],["bottom",{"_index":394,"title":{},"body":{"interfaces/NgxEditorJSConfig.html":{},"directives/NgxEditorJSDirective.html":{},"interfaces/NgxEditorJSModuleConfig.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-readme.html":{}}}],["box",{"_index":1355,"title":{},"body":{"index.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-readme.html":{}}}],["break",{"_index":1099,"title":{},"body":{"changelog.html":{}}}],["breaking",{"_index":1058,"title":{},"body":{"changelog.html":{}}}],["browse",{"_index":1436,"title":{},"body":{"modules.html":{}}}],["browser",{"_index":1310,"title":{},"body":{"dependencies.html":{},"modules.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-readme.html":{}}}],["browsermodule",{"_index":1495,"title":{},"body":{"additional-documentation/tinynodes-library-docs/ngx-editorjs-readme.html":{}}}],["bug",{"_index":1091,"title":{},"body":{"changelog.html":{},"additional-documentation/tinynodes-library-docs.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-readme/ngx-editorjs-changelog.html":{}}}],["build",{"_index":1089,"title":{},"body":{"changelog.html":{},"contributing.html":{}}}],["bump",{"_index":1056,"title":{},"body":{"changelog.html":{}}}],["call",{"_index":177,"title":{},"body":{"interfaces/EditorJSClass.html":{},"interfaces/EditorJSInstanceConfig.html":{},"interfaces/EditorJSMaterialForm.html":{},"interfaces/InjectorApiCallOptions.html":{},"interfaces/InjectorApiCallResponse.html":{},"interfaces/InjectorMethodOption.html":{},"injectables/NgxEditorJSService.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-readme/ngx-editorjs-changelog.html":{}}}],["called",{"_index":351,"title":{},"body":{"interfaces/EditorJSMaterialForm.html":{},"directives/NgxEditorJSDirective.html":{},"injectables/NgxEditorJSService.html":{}}}],["calling",{"_index":200,"title":{},"body":{"interfaces/EditorJSClass.html":{},"interfaces/EditorJSInstanceConfig.html":{},"interfaces/InjectorApiCallOptions.html":{},"interfaces/InjectorApiCallResponse.html":{},"interfaces/InjectorMethodOption.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-readme/ngx-editorjs-changelog.html":{}}}],["calls",{"_index":451,"title":{},"body":{"directives/NgxEditorJSDirective.html":{},"injectables/NgxEditorJSService.html":{},"changelog.html":{}}}],["caption",{"_index":52,"title":{},"body":{"interfaces/Block.html":{},"interfaces/Header.html":{},"interfaces/HeaderBlock.html":{},"interfaces/Image.html":{},"interfaces/ImageBlock.html":{},"interfaces/List.html":{},"interfaces/ListBlock.html":{},"interfaces/Paragraph.html":{},"interfaces/ParagraphBlock.html":{}}}],["caret",{"_index":716,"title":{},"body":{"injectables/NgxEditorJSService.html":{}}}],["cd",{"_index":345,"title":{},"body":{"interfaces/EditorJSMaterialForm.html":{},"directives/NgxEditorJSDirective.html":{},"components/NgxTinynodesMatJsonOutputComponent.html":{}}}],["change",{"_index":145,"title":{},"body":{"interfaces/ChangeMap.html":{},"interfaces/CreateEditorJSOptions.html":{},"interfaces/EditorJSChange.html":{},"interfaces/EditorJSClass.html":{},"interfaces/EditorJSInstanceConfig.html":{},"interfaces/EditorJSMaterialForm.html":{},"interfaces/EditorMap.html":{},"interfaces/InjectorApiCallOptions.html":{},"interfaces/InjectorApiCallResponse.html":{},"interfaces/InjectorMethodOption.html":{},"directives/NgxEditorJSDirective.html":{},"injectables/NgxEditorJSService.html":{},"interfaces/ReadyMap.html":{},"interfaces/SavedMap.html":{},"changelog.html":{},"contributing.html":{}}}],["changed",{"_index":480,"title":{},"body":{"directives/NgxEditorJSDirective.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-readme/ngx-editorjs-changelog.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-plugins-readme/ngx-editorjs-plugins-changelog.html":{}}}],["changedetection",{"_index":262,"title":{},"body":{"interfaces/EditorJSMaterialForm.html":{},"components/NgxTinynodesMatJsonOutputComponent.html":{}}}],["changedetectionstrategy",{"_index":219,"title":{},"body":{"interfaces/EditorJSMaterialForm.html":{},"components/NgxTinynodesMatJsonOutputComponent.html":{}}}],["changedetectionstrategy.onpush",{"_index":263,"title":{},"body":{"interfaces/EditorJSMaterialForm.html":{},"components/NgxTinynodesMatJsonOutputComponent.html":{}}}],["changedetectorref",{"_index":220,"title":{},"body":{"interfaces/EditorJSMaterialForm.html":{},"directives/NgxEditorJSDirective.html":{},"components/NgxTinynodesMatJsonOutputComponent.html":{}}}],["changelog",{"_index":1022,"title":{"changelog.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-readme/ngx-editorjs-changelog.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-plugins-readme/ngx-editorjs-plugins-changelog.html":{}},"body":{"changelog.html":{},"index.html":{},"additional-documentation/tinynodes-library-docs.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-readme.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-readme/ngx-editorjs-changelog.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-plugins-readme/ngx-editorjs-plugins-changelog.html":{}}}],["changelog.md",{"_index":1560,"title":{},"body":{"additional-documentation/tinynodes-library-docs/ngx-editorjs-readme/ngx-editorjs-changelog.html":{}}}],["changelogs",{"_index":1026,"title":{},"body":{"changelog.html":{}}}],["changemap",{"_index":127,"title":{"interfaces/ChangeMap.html":{}},"body":{"interfaces/ChangeMap.html":{},"interfaces/EditorJSChange.html":{},"interfaces/EditorMap.html":{},"injectables/NgxEditorJSService.html":{},"interfaces/ReadyMap.html":{},"interfaces/SavedMap.html":{}}}],["changes",{"_index":508,"title":{},"body":{"directives/NgxEditorJSDirective.html":{},"changelog.html":{},"contributing.html":{},"todo.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-readme.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-readme/ngx-editorjs-changelog.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-plugins-readme/ngx-editorjs-plugins-changelog.html":{}}}],["changes.blocks",{"_index":545,"title":{},"body":{"directives/NgxEditorJSDirective.html":{}}}],["changes.blocks.firstchange",{"_index":547,"title":{},"body":{"directives/NgxEditorJSDirective.html":{}}}],["changes.blocks.previousvalue",{"_index":546,"title":{},"body":{"directives/NgxEditorJSDirective.html":{}}}],["changeskeys",{"_index":552,"title":{},"body":{"directives/NgxEditorJSDirective.html":{}}}],["changeskeys.includes(key",{"_index":558,"title":{},"body":{"directives/NgxEditorJSDirective.html":{}}}],["charge",{"_index":1383,"title":{},"body":{"license.html":{}}}],["ci",{"_index":1445,"title":{},"body":{"todo.html":{}}}],["circular",{"_index":1577,"title":{},"body":{"additional-documentation/tinynodes-library-docs/ngx-editorjs-plugins-readme.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-plugins-readme/ngx-editorjs-plugins-changelog.html":{}}}],["circumstances",{"_index":1276,"title":{},"body":{"contributing.html":{}}}],["claim",{"_index":1426,"title":{},"body":{"license.html":{}}}],["clarified",{"_index":1263,"title":{},"body":{"contributing.html":{}}}],["clarifying",{"_index":1218,"title":{},"body":{"contributing.html":{}}}],["clash",{"_index":1539,"title":{},"body":{"additional-documentation/tinynodes-library-docs/ngx-editorjs-readme/ngx-editorjs-changelog.html":{}}}],["class",{"_index":162,"title":{},"body":{"interfaces/EditorJSClass.html":{},"interfaces/EditorJSInstanceConfig.html":{},"interfaces/EditorJSMaterialForm.html":{},"interfaces/InjectorApiCallOptions.html":{},"interfaces/InjectorApiCallResponse.html":{},"interfaces/InjectorMethodOption.html":{},"directives/NgxEditorJSDirective.html":{},"modules/NgxEditorJSModule.html":{},"injectables/NgxEditorJSPluginService.html":{},"injectables/NgxEditorJSService.html":{},"modules/NgxEditorjsPluginsModule.html":{},"modules/NgxPluginServiceModule.html":{},"modules/NgxTinynodesComponentsModule.html":{},"components/NgxTinynodesMatJsonOutputComponent.html":{},"modules/NgxTinynodesMatJsonOutputModule.html":{},"modules/NgxTinynodesMatTagInputModule.html":{},"modules/PluginCodeModule.html":{},"modules/PluginHeaderModule.html":{},"modules/PluginImageModule.html":{},"modules/PluginInlineCodeModule.html":{},"modules/PluginLinkModule.html":{},"modules/PluginListModule.html":{},"modules/PluginMarkerModule.html":{},"modules/PluginParagraphModule.html":{},"modules/PluginSimpleImageModule.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-readme.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-readme/ngx-editorjs-changelog.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-plugins-readme.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-plugins-readme/ngx-editorjs-plugins-changelog.html":{}}}],["classes",{"_index":1040,"title":{},"body":{"changelog.html":{}}}],["clean",{"_index":863,"title":{},"body":{"injectables/NgxEditorJSService.html":{}}}],["cleaning",{"_index":862,"title":{},"body":{"injectables/NgxEditorJSService.html":{}}}],["cleanupsubjects(options",{"_index":864,"title":{},"body":{"injectables/NgxEditorJSService.html":{}}}],["clear",{"_index":697,"title":{},"body":{"injectables/NgxEditorJSService.html":{}}}],["clear(options",{"_index":720,"title":{},"body":{"injectables/NgxEditorJSService.html":{}}}],["click",{"_index":334,"title":{},"body":{"interfaces/EditorJSMaterialForm.html":{},"directives/NgxEditorJSDirective.html":{}}}],["close",{"_index":824,"title":{},"body":{"injectables/NgxEditorJSService.html":{}}}],["cluster_ngxeditorjsmodule",{"_index":593,"title":{},"body":{"modules/NgxEditorJSModule.html":{},"overview.html":{}}}],["cluster_ngxeditorjsmodule_declarations",{"_index":594,"title":{},"body":{"modules/NgxEditorJSModule.html":{},"overview.html":{}}}],["cluster_ngxeditorjsmodule_exports",{"_index":596,"title":{},"body":{"modules/NgxEditorJSModule.html":{},"overview.html":{}}}],["cluster_ngxeditorjsmodule_imports",{"_index":595,"title":{},"body":{"modules/NgxEditorJSModule.html":{},"overview.html":{}}}],["cluster_ngxeditorjsmodule_providers",{"_index":597,"title":{},"body":{"modules/NgxEditorJSModule.html":{},"overview.html":{}}}],["cluster_ngxeditorjspluginsmodule",{"_index":877,"title":{},"body":{"modules/NgxEditorjsPluginsModule.html":{},"overview.html":{}}}],["cluster_ngxeditorjspluginsmodule_exports",{"_index":879,"title":{},"body":{"modules/NgxEditorjsPluginsModule.html":{},"overview.html":{}}}],["cluster_ngxeditorjspluginsmodule_imports",{"_index":878,"title":{},"body":{"modules/NgxEditorjsPluginsModule.html":{},"overview.html":{}}}],["cluster_ngxpluginservicemodule",{"_index":912,"title":{},"body":{"modules/NgxPluginServiceModule.html":{},"overview.html":{}}}],["cluster_ngxpluginservicemodule_providers",{"_index":913,"title":{},"body":{"modules/NgxPluginServiceModule.html":{},"overview.html":{}}}],["cluster_ngxtinynodescomponentsmodule",{"_index":919,"title":{},"body":{"modules/NgxTinynodesComponentsModule.html":{},"overview.html":{}}}],["cluster_ngxtinynodescomponentsmodule_exports",{"_index":921,"title":{},"body":{"modules/NgxTinynodesComponentsModule.html":{},"overview.html":{}}}],["cluster_ngxtinynodescomponentsmodule_imports",{"_index":920,"title":{},"body":{"modules/NgxTinynodesComponentsModule.html":{},"overview.html":{}}}],["cluster_ngxtinynodesmatjsonoutputmodule",{"_index":961,"title":{},"body":{"modules/NgxTinynodesMatJsonOutputModule.html":{},"overview.html":{}}}],["cluster_ngxtinynodesmatjsonoutputmodule_declarations",{"_index":962,"title":{},"body":{"modules/NgxTinynodesMatJsonOutputModule.html":{},"overview.html":{}}}],["cluster_ngxtinynodesmatjsonoutputmodule_exports",{"_index":963,"title":{},"body":{"modules/NgxTinynodesMatJsonOutputModule.html":{},"overview.html":{}}}],["cluster_ngxtinynodesmattaginputmodule",{"_index":970,"title":{},"body":{"modules/NgxTinynodesMatTagInputModule.html":{},"overview.html":{}}}],["cluster_ngxtinynodesmattaginputmodule_declarations",{"_index":971,"title":{},"body":{"modules/NgxTinynodesMatTagInputModule.html":{},"overview.html":{}}}],["cluster_ngxtinynodesmattaginputmodule_exports",{"_index":973,"title":{},"body":{"modules/NgxTinynodesMatTagInputModule.html":{},"overview.html":{}}}],["cluster_ngxtinynodesmattaginputmodule_ngxtinynodesmattaginputcomponent_providers",{"_index":972,"title":{},"body":{"modules/NgxTinynodesMatTagInputModule.html":{},"overview.html":{}}}],["code",{"_index":986,"title":{},"body":{"modules/PluginCodeModule.html":{},"modules/PluginInlineCodeModule.html":{},"contributing.html":{}}}],["code.module",{"_index":911,"title":{},"body":{"modules/NgxEditorjsPluginsModule.html":{}}}],["code.module.ts",{"_index":998,"title":{},"body":{"modules/PluginInlineCodeModule.html":{}}}],["code/inline",{"_index":910,"title":{},"body":{"modules/NgxEditorjsPluginsModule.html":{},"modules/PluginInlineCodeModule.html":{}}}],["coercebooleanproperty",{"_index":216,"title":{},"body":{"interfaces/EditorJSMaterialForm.html":{}}}],["coercebooleanproperty(disabled",{"_index":304,"title":{},"body":{"interfaces/EditorJSMaterialForm.html":{}}}],["coercebooleanproperty(focused",{"_index":291,"title":{},"body":{"interfaces/EditorJSMaterialForm.html":{}}}],["coercebooleanproperty(required",{"_index":298,"title":{},"body":{"interfaces/EditorJSMaterialForm.html":{}}}],["collapse",{"_index":953,"title":{},"body":{"components/NgxTinynodesMatJsonOutputComponent.html":{}}}],["collection",{"_index":605,"title":{},"body":{"modules/NgxEditorJSModule.html":{},"index.html":{}}}],["comments",{"_index":1202,"title":{},"body":{"contributing.html":{}}}],["commits",{"_index":1230,"title":{},"body":{"contributing.html":{}}}],["common",{"_index":1094,"title":{},"body":{"changelog.html":{}}}],["commonmodule",{"_index":617,"title":{},"body":{"modules/NgxEditorJSModule.html":{},"modules/NgxEditorjsPluginsModule.html":{},"modules/NgxTinynodesMatJsonOutputModule.html":{},"modules/NgxTinynodesMatTagInputModule.html":{}}}],["community",{"_index":1151,"title":{},"body":{"contributing.html":{}}}],["compatible",{"_index":252,"title":{},"body":{"interfaces/EditorJSMaterialForm.html":{},"index.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-readme.html":{}}}],["complaints",{"_index":1271,"title":{},"body":{"contributing.html":{}}}],["completly",{"_index":1077,"title":{},"body":{"changelog.html":{}}}],["compodoc",{"_index":1482,"title":{},"body":{"additional-documentation/tinynodes-library-docs.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-readme/ngx-editorjs-changelog.html":{}}}],["component",{"_index":221,"title":{"components/NgxTinynodesMatJsonOutputComponent.html":{}},"body":{"interfaces/EditorJSMaterialForm.html":{},"directives/NgxEditorJSDirective.html":{},"components/NgxTinynodesMatJsonOutputComponent.html":{},"changelog.html":{},"index.html":{},"todo.html":{},"miscellaneous/variables.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-readme.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-readme/ngx-editorjs-changelog.html":{}}}],["component_template",{"_index":955,"title":{},"body":{"components/NgxTinynodesMatJsonOutputComponent.html":{}}}],["components",{"_index":329,"title":{},"body":{"interfaces/EditorJSMaterialForm.html":{},"directives/NgxEditorJSDirective.html":{},"components/NgxTinynodesMatJsonOutputComponent.html":{},"changelog.html":{},"index.html":{},"overview.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-readme.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-readme/ngx-editorjs-changelog.html":{}}}],["components.module.ts",{"_index":926,"title":{},"body":{"modules/NgxTinynodesComponentsModule.html":{}}}],["components/mat",{"_index":927,"title":{},"body":{"modules/NgxTinynodesComponentsModule.html":{}}}],["components/src/lib/components/mat",{"_index":941,"title":{},"body":{"components/NgxTinynodesMatJsonOutputComponent.html":{},"modules/NgxTinynodesMatJsonOutputModule.html":{},"modules/NgxTinynodesMatTagInputModule.html":{},"miscellaneous/variables.html":{}}}],["components/src/lib/ngx",{"_index":925,"title":{},"body":{"modules/NgxTinynodesComponentsModule.html":{}}}],["components/src/lib/types/components.ts",{"_index":935,"title":{},"body":{"interfaces/NgxTinynodesMatFieldComponent.html":{}}}],["components/src/test.ts",{"_index":1473,"title":{},"body":{"miscellaneous/variables.html":{}}}],["conditions",{"_index":1405,"title":{},"body":{"license.html":{}}}],["conduct",{"_index":1117,"title":{},"body":{"contributing.html":{}}}],["confidentiality",{"_index":1279,"title":{},"body":{"contributing.html":{}}}],["config",{"_index":119,"title":{},"body":{"interfaces/BlockData.html":{},"interfaces/CreateEditorJSOptions.html":{},"interfaces/NgxEditorJSConfig.html":{},"directives/NgxEditorJSDirective.html":{},"modules/NgxEditorJSModule.html":{},"interfaces/NgxEditorJSModuleConfig.html":{},"injectables/NgxEditorJSService.html":{},"interfaces/PluginConfig.html":{},"interfaces/PluginConfigMap.html":{},"interfaces/ToolSettingsMap.html":{},"miscellaneous/functions.html":{},"todo.html":{},"miscellaneous/variables.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-readme.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-readme/ngx-editorjs-changelog.html":{}}}],["config.data",{"_index":584,"title":{},"body":{"directives/NgxEditorJSDirective.html":{}}}],["config.ts",{"_index":1333,"title":{},"body":{"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["config/editor",{"_index":523,"title":{},"body":{"directives/NgxEditorJSDirective.html":{}}}],["config/module",{"_index":626,"title":{},"body":{"modules/NgxEditorJSModule.html":{}}}],["configs",{"_index":122,"title":{},"body":{"interfaces/BlockData.html":{},"interfaces/PluginConfig.html":{},"interfaces/PluginConfigMap.html":{},"interfaces/ToolSettingsMap.html":{}}}],["configuration",{"_index":95,"title":{},"body":{"interfaces/BlockData.html":{},"interfaces/CreateEditorJSOptions.html":{},"interfaces/EditorJSClass.html":{},"interfaces/EditorJSInstanceConfig.html":{},"interfaces/InjectorApiCallOptions.html":{},"interfaces/InjectorApiCallResponse.html":{},"interfaces/InjectorMethodOption.html":{},"interfaces/NgxEditorJSConfig.html":{},"directives/NgxEditorJSDirective.html":{},"modules/NgxEditorJSModule.html":{},"interfaces/NgxEditorJSModuleConfig.html":{},"injectables/NgxEditorJSPluginService.html":{},"injectables/NgxEditorJSService.html":{},"interfaces/PluginConfig.html":{},"interfaces/PluginConfigMap.html":{},"interfaces/ToolSettingsMap.html":{},"changelog.html":{},"miscellaneous/functions.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-readme.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-readme/ngx-editorjs-changelog.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-plugins-readme.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-plugins-readme/ngx-editorjs-plugins-changelog.html":{}}}],["configurations",{"_index":657,"title":{},"body":{"injectables/NgxEditorJSPluginService.html":{},"miscellaneous/functions.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-readme.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-readme/ngx-editorjs-changelog.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-plugins-readme.html":{}}}],["configure",{"_index":722,"title":{},"body":{"injectables/NgxEditorJSService.html":{}}}],["configured",{"_index":1573,"title":{},"body":{"additional-documentation/tinynodes-library-docs/ngx-editorjs-readme/ngx-editorjs-changelog.html":{}}}],["configuring",{"_index":1507,"title":{},"body":{"additional-documentation/tinynodes-library-docs/ngx-editorjs-readme.html":{}}}],["conform",{"_index":1579,"title":{},"body":{"additional-documentation/tinynodes-library-docs/ngx-editorjs-plugins-readme.html":{}}}],["connection",{"_index":1433,"title":{},"body":{"license.html":{}}}],["considered",{"_index":1212,"title":{},"body":{"contributing.html":{}}}],["console.log",{"_index":1545,"title":{},"body":{"additional-documentation/tinynodes-library-docs/ngx-editorjs-readme/ngx-editorjs-changelog.html":{}}}],["const",{"_index":115,"title":{},"body":{"interfaces/BlockData.html":{},"interfaces/EditorJSClass.html":{},"interfaces/EditorJSInstanceConfig.html":{},"interfaces/EditorJSMaterialForm.html":{},"interfaces/InjectorApiCallOptions.html":{},"interfaces/InjectorApiCallResponse.html":{},"interfaces/InjectorMethodOption.html":{},"interfaces/NgxEditorJSConfig.html":{},"directives/NgxEditorJSDirective.html":{},"interfaces/NgxEditorJSModuleConfig.html":{},"injectables/NgxEditorJSService.html":{},"interfaces/PluginConfig.html":{},"interfaces/PluginConfigMap.html":{},"interfaces/ToolSettingsMap.html":{}}}],["constructive",{"_index":1185,"title":{},"body":{"contributing.html":{}}}],["constructor",{"_index":338,"title":{},"body":{"interfaces/EditorJSMaterialForm.html":{},"directives/NgxEditorJSDirective.html":{},"modules/NgxEditorJSModule.html":{},"injectables/NgxEditorJSPluginService.html":{},"injectables/NgxEditorJSService.html":{},"components/NgxTinynodesMatJsonOutputComponent.html":{}}}],["constructor(@inject(pluginclasses",{"_index":673,"title":{},"body":{"injectables/NgxEditorJSPluginService.html":{}}}],["constructor(cd",{"_index":946,"title":{},"body":{"components/NgxTinynodesMatJsonOutputComponent.html":{}}}],["constructor(editorjs",{"_index":704,"title":{},"body":{"injectables/NgxEditorJSService.html":{}}}],["constructor(el",{"_index":438,"title":{},"body":{"directives/NgxEditorJSDirective.html":{}}}],["constructor(pluginconfigmap",{"_index":652,"title":{},"body":{"injectables/NgxEditorJSPluginService.html":{}}}],["constructor(private",{"_index":951,"title":{},"body":{"components/NgxTinynodesMatJsonOutputComponent.html":{}}}],["contacting",{"_index":1268,"title":{},"body":{"contributing.html":{}}}],["container",{"_index":333,"title":{},"body":{"interfaces/EditorJSMaterialForm.html":{},"injectables/NgxEditorJSService.html":{},"contributing.html":{}}}],["containers",{"_index":1487,"title":{},"body":{"additional-documentation/tinynodes-library-docs/ngx-editorjs-readme.html":{}}}],["containers/editorjs",{"_index":627,"title":{},"body":{"modules/NgxEditorJSModule.html":{}}}],["containers/editorjs/editorjs.component",{"_index":629,"title":{},"body":{"modules/NgxEditorJSModule.html":{}}}],["containing",{"_index":129,"title":{},"body":{"interfaces/ChangeMap.html":{},"interfaces/EditorJSChange.html":{},"interfaces/EditorMap.html":{},"interfaces/ReadyMap.html":{},"interfaces/SavedMap.html":{}}}],["contains",{"_index":693,"title":{},"body":{"injectables/NgxEditorJSService.html":{}}}],["content",{"_index":461,"title":{},"body":{"directives/NgxEditorJSDirective.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-readme.html":{}}}],["context",{"_index":1462,"title":{},"body":{"miscellaneous/variables.html":{}}}],["continue",{"_index":1103,"title":{},"body":{"changelog.html":{}}}],["contract",{"_index":1430,"title":{},"body":{"license.html":{}}}],["contributes",{"_index":1174,"title":{},"body":{"contributing.html":{}}}],["contributing",{"_index":1108,"title":{"contributing.html":{}},"body":{"contributing.html":{}}}],["contributions",{"_index":1233,"title":{},"body":{"contributing.html":{}}}],["contributor",{"_index":1238,"title":{},"body":{"contributing.html":{}}}],["contributors",{"_index":1148,"title":{},"body":{"contributing.html":{}}}],["control",{"_index":269,"title":{},"body":{"interfaces/EditorJSMaterialForm.html":{},"directives/NgxEditorJSDirective.html":{},"modules/NgxEditorJSModule.html":{},"changelog.html":{},"todo.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-readme/ngx-editorjs-changelog.html":{}}}],["controlling",{"_index":1551,"title":{},"body":{"additional-documentation/tinynodes-library-docs/ngx-editorjs-readme/ngx-editorjs-changelog.html":{}}}],["controls",{"_index":1457,"title":{},"body":{"todo.html":{}}}],["controltype",{"_index":270,"title":{},"body":{"interfaces/EditorJSMaterialForm.html":{}}}],["controlvalueaccessor",{"_index":936,"title":{},"body":{"interfaces/NgxTinynodesMatFieldComponent.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-readme/ngx-editorjs-changelog.html":{}}}],["copies",{"_index":1400,"title":{},"body":{"license.html":{}}}],["copy",{"_index":1386,"title":{},"body":{"license.html":{}}}],["copyright",{"_index":1380,"title":{},"body":{"license.html":{}}}],["core",{"_index":724,"title":{},"body":{"injectables/NgxEditorJSService.html":{},"changelog.html":{},"dependencies.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-readme/ngx-editorjs-changelog.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-plugins-readme.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-plugins-readme/ngx-editorjs-plugins-changelog.html":{}}}],["coreapi",{"_index":1450,"title":{},"body":{"todo.html":{}}}],["corrective",{"_index":1223,"title":{},"body":{"contributing.html":{}}}],["correctly",{"_index":1483,"title":{},"body":{"additional-documentation/tinynodes-library-docs.html":{}}}],["covenant",{"_index":1298,"title":{},"body":{"contributing.html":{}}}],["covenant.org/version/1/4",{"_index":1301,"title":{},"body":{"contributing.html":{}}}],["cover",{"_index":1096,"title":{},"body":{"changelog.html":{}}}],["create",{"_index":493,"title":{},"body":{"directives/NgxEditorJSDirective.html":{},"injectables/NgxEditorJSService.html":{},"miscellaneous/functions.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-readme.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-readme/ngx-editorjs-changelog.html":{}}}],["createconfig",{"_index":575,"title":{},"body":{"directives/NgxEditorJSDirective.html":{}}}],["created",{"_index":492,"title":{},"body":{"directives/NgxEditorJSDirective.html":{},"injectables/NgxEditorJSService.html":{},"changelog.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-plugins-readme/ngx-editorjs-plugins-changelog.html":{}}}],["createeditor",{"_index":424,"title":{},"body":{"directives/NgxEditorJSDirective.html":{}}}],["createeditor(config",{"_index":487,"title":{},"body":{"directives/NgxEditorJSDirective.html":{}}}],["createeditorjsconfig",{"_index":522,"title":{},"body":{"directives/NgxEditorJSDirective.html":{},"miscellaneous/functions.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-readme/ngx-editorjs-changelog.html":{}}}],["createeditorjsconfig(inputconfig",{"_index":1338,"title":{},"body":{"miscellaneous/functions.html":{}}}],["createeditorjsinstance",{"_index":636,"title":{},"body":{"modules/NgxEditorJSModule.html":{},"miscellaneous/functions.html":{}}}],["createeditorjsinstance(editorjs",{"_index":632,"title":{},"body":{"modules/NgxEditorJSModule.html":{},"miscellaneous/functions.html":{}}}],["createeditorjsoptions",{"_index":149,"title":{"interfaces/CreateEditorJSOptions.html":{}},"body":{"interfaces/CreateEditorJSOptions.html":{},"injectables/NgxEditorJSService.html":{}}}],["createinstance",{"_index":701,"title":{},"body":{"injectables/NgxEditorJSService.html":{}}}],["createinstance(options",{"_index":725,"title":{},"body":{"injectables/NgxEditorJSService.html":{}}}],["createmoduleconfig",{"_index":625,"title":{},"body":{"modules/NgxEditorJSModule.html":{},"miscellaneous/functions.html":{}}}],["createmoduleconfig(config",{"_index":1342,"title":{},"body":{"miscellaneous/functions.html":{}}}],["createonchange",{"_index":776,"title":{},"body":{"injectables/NgxEditorJSService.html":{}}}],["createonchange(options",{"_index":851,"title":{},"body":{"injectables/NgxEditorJSService.html":{}}}],["createonready",{"_index":781,"title":{},"body":{"injectables/NgxEditorJSService.html":{}}}],["createonready(options",{"_index":853,"title":{},"body":{"injectables/NgxEditorJSService.html":{}}}],["createpluginconfig",{"_index":915,"title":{},"body":{"modules/NgxPluginServiceModule.html":{},"modules/PluginCodeModule.html":{},"modules/PluginHeaderModule.html":{},"modules/PluginImageModule.html":{},"modules/PluginLinkModule.html":{},"modules/PluginListModule.html":{},"modules/PluginMarkerModule.html":{},"modules/PluginSimpleImageModule.html":{},"miscellaneous/functions.html":{}}}],["createpluginconfig(pluginconfigs",{"_index":1344,"title":{},"body":{"miscellaneous/functions.html":{}}}],["creates",{"_index":166,"title":{},"body":{"interfaces/EditorJSClass.html":{},"interfaces/EditorJSInstanceConfig.html":{},"interfaces/InjectorApiCallOptions.html":{},"interfaces/InjectorApiCallResponse.html":{},"interfaces/InjectorMethodOption.html":{},"directives/NgxEditorJSDirective.html":{},"injectables/NgxEditorJSService.html":{},"miscellaneous/functions.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-plugins-readme.html":{}}}],["createtools",{"_index":1501,"title":{},"body":{"additional-documentation/tinynodes-library-docs/ngx-editorjs-readme.html":{}}}],["creating",{"_index":172,"title":{},"body":{"interfaces/EditorJSClass.html":{},"interfaces/EditorJSInstanceConfig.html":{},"interfaces/InjectorApiCallOptions.html":{},"interfaces/InjectorApiCallResponse.html":{},"interfaces/InjectorMethodOption.html":{},"contributing.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-plugins-readme.html":{}}}],["creation",{"_index":384,"title":{},"body":{"interfaces/NgxEditorJSConfig.html":{},"interfaces/NgxEditorJSModuleConfig.html":{},"changelog.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-readme/ngx-editorjs-changelog.html":{}}}],["criticism",{"_index":1186,"title":{},"body":{"contributing.html":{}}}],["ctrl+shift+c",{"_index":1002,"title":{},"body":{"modules/PluginInlineCodeModule.html":{}}}],["ctrl+shift+m",{"_index":1010,"title":{},"body":{"modules/PluginMarkerModule.html":{}}}],["current",{"_index":743,"title":{},"body":{"injectables/NgxEditorJSService.html":{},"changelog.html":{}}}],["currently",{"_index":79,"title":{},"body":{"interfaces/BlockData.html":{},"interfaces/PluginConfig.html":{},"interfaces/PluginConfigMap.html":{},"interfaces/ToolSettingsMap.html":{},"changelog.html":{},"miscellaneous/enumerations.html":{},"additional-documentation/tinynodes-library-docs.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-plugins-readme.html":{}}}],["custom",{"_index":30,"title":{},"body":{"interfaces/Block.html":{},"interfaces/Header.html":{},"interfaces/HeaderBlock.html":{},"interfaces/Image.html":{},"interfaces/ImageBlock.html":{},"interfaces/List.html":{},"interfaces/ListBlock.html":{},"interfaces/Paragraph.html":{},"interfaces/ParagraphBlock.html":{},"miscellaneous/typealiases.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-readme.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-readme/ngx-editorjs-changelog.html":{}}}],["cycle",{"_index":358,"title":{},"body":{"interfaces/EditorJSMaterialForm.html":{},"index.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-readme.html":{}}}],["cycles",{"_index":1532,"title":{},"body":{"additional-documentation/tinynodes-library-docs/ngx-editorjs-readme/ngx-editorjs-changelog.html":{}}}],["damages",{"_index":1427,"title":{},"body":{"license.html":{}}}],["data",{"_index":14,"title":{},"body":{"interfaces/Block.html":{},"interfaces/BlockData.html":{},"interfaces/EditorJSClass.html":{},"interfaces/EditorJSInstanceConfig.html":{},"interfaces/Header.html":{},"interfaces/HeaderBlock.html":{},"interfaces/Image.html":{},"interfaces/ImageBlock.html":{},"interfaces/InjectorApiCallOptions.html":{},"interfaces/InjectorApiCallResponse.html":{},"interfaces/InjectorMethodOption.html":{},"interfaces/List.html":{},"interfaces/ListBlock.html":{},"interfaces/NgxEditorJSConfig.html":{},"directives/NgxEditorJSDirective.html":{},"interfaces/NgxEditorJSModuleConfig.html":{},"injectables/NgxEditorJSService.html":{},"components/NgxTinynodesMatJsonOutputComponent.html":{},"interfaces/Paragraph.html":{},"interfaces/ParagraphBlock.html":{},"interfaces/PluginConfig.html":{},"interfaces/PluginConfigMap.html":{},"interfaces/ToolSettingsMap.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-readme.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-readme/ngx-editorjs-changelog.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-plugins-readme.html":{}}}],["data).pipe",{"_index":822,"title":{},"body":{"injectables/NgxEditorJSService.html":{}}}],["date.now",{"_index":585,"title":{},"body":{"directives/NgxEditorJSDirective.html":{},"injectables/NgxEditorJSService.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-readme.html":{}}}],["deal",{"_index":1389,"title":{},"body":{"license.html":{}}}],["dealings",{"_index":1434,"title":{},"body":{"license.html":{}}}],["declarations",{"_index":590,"title":{},"body":{"modules/NgxEditorJSModule.html":{},"modules/NgxEditorjsPluginsModule.html":{},"modules/NgxPluginServiceModule.html":{},"modules/NgxTinynodesComponentsModule.html":{},"modules/NgxTinynodesMatJsonOutputModule.html":{},"modules/NgxTinynodesMatTagInputModule.html":{},"overview.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-readme.html":{}}}],["deem",{"_index":1240,"title":{},"body":{"contributing.html":{}}}],["deemed",{"_index":1274,"title":{},"body":{"contributing.html":{}}}],["default",{"_index":33,"title":{},"body":{"interfaces/Block.html":{},"interfaces/BlockData.html":{},"interfaces/EditorJSClass.html":{},"interfaces/EditorJSInstanceConfig.html":{},"interfaces/Header.html":{},"interfaces/HeaderBlock.html":{},"interfaces/Image.html":{},"interfaces/ImageBlock.html":{},"interfaces/InjectorApiCallOptions.html":{},"interfaces/InjectorApiCallResponse.html":{},"interfaces/InjectorMethodOption.html":{},"interfaces/List.html":{},"interfaces/ListBlock.html":{},"interfaces/NgxEditorJSConfig.html":{},"directives/NgxEditorJSDirective.html":{},"modules/NgxEditorJSModule.html":{},"interfaces/NgxEditorJSModuleConfig.html":{},"injectables/NgxEditorJSPluginService.html":{},"injectables/NgxEditorJSService.html":{},"components/NgxTinynodesMatJsonOutputComponent.html":{},"interfaces/Paragraph.html":{},"interfaces/ParagraphBlock.html":{},"modules/PluginCodeModule.html":{},"interfaces/PluginConfig.html":{},"interfaces/PluginConfigMap.html":{},"modules/PluginHeaderModule.html":{},"modules/PluginImageModule.html":{},"modules/PluginInlineCodeModule.html":{},"modules/PluginLinkModule.html":{},"modules/PluginListModule.html":{},"modules/PluginMarkerModule.html":{},"modules/PluginParagraphModule.html":{},"modules/PluginSimpleImageModule.html":{},"interfaces/ToolSettingsMap.html":{},"changelog.html":{},"index.html":{},"miscellaneous/variables.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-readme.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-readme/ngx-editorjs-changelog.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-plugins-readme.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-plugins-readme/ngx-editorjs-plugins-changelog.html":{}}}],["default_holder_id",{"_index":1464,"title":{},"body":{"miscellaneous/variables.html":{}}}],["defaults",{"_index":615,"title":{},"body":{"modules/NgxEditorJSModule.html":{}}}],["define",{"_index":107,"title":{},"body":{"interfaces/BlockData.html":{},"interfaces/NgxEditorJSConfig.html":{},"interfaces/NgxEditorJSModuleConfig.html":{},"interfaces/PluginConfig.html":{},"interfaces/PluginConfigMap.html":{},"interfaces/ToolSettingsMap.html":{}}}],["defined",{"_index":18,"title":{},"body":{"interfaces/Block.html":{},"interfaces/BlockData.html":{},"interfaces/ChangeMap.html":{},"interfaces/EditorMap.html":{},"directives/NgxEditorJSDirective.html":{},"modules/NgxEditorJSModule.html":{},"injectables/NgxEditorJSPluginService.html":{},"injectables/NgxEditorJSService.html":{},"components/NgxTinynodesMatJsonOutputComponent.html":{},"interfaces/PluginConfig.html":{},"interfaces/PluginConfigMap.html":{},"interfaces/ReadyMap.html":{},"interfaces/SavedMap.html":{},"interfaces/ToolSettingsMap.html":{},"contributing.html":{},"miscellaneous/variables.html":{}}}],["deigned",{"_index":1503,"title":{},"body":{"additional-documentation/tinynodes-library-docs/ngx-editorjs-readme.html":{}}}],["delayed",{"_index":1088,"title":{},"body":{"changelog.html":{}}}],["delete",{"_index":866,"title":{},"body":{"injectables/NgxEditorJSService.html":{}}}],["demo",{"_index":1048,"title":{},"body":{"changelog.html":{},"index.html":{},"todo.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-readme.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-readme/ngx-editorjs-changelog.html":{}}}],["demos",{"_index":606,"title":{},"body":{"modules/NgxEditorJSModule.html":{},"index.html":{}}}],["dependencies",{"_index":588,"title":{"dependencies.html":{}},"body":{"modules/NgxEditorJSModule.html":{},"modules/NgxEditorjsPluginsModule.html":{},"modules/NgxPluginServiceModule.html":{},"modules/NgxTinynodesComponentsModule.html":{},"modules/NgxTinynodesMatJsonOutputModule.html":{},"modules/NgxTinynodesMatTagInputModule.html":{},"contributing.html":{},"dependencies.html":{},"index.html":{},"overview.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-plugins-readme.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-plugins-readme/ngx-editorjs-plugins-changelog.html":{}}}],["dependency",{"_index":1043,"title":{},"body":{"changelog.html":{},"todo.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-readme.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-readme/ngx-editorjs-changelog.html":{}}}],["deps",{"_index":637,"title":{},"body":{"modules/NgxEditorJSModule.html":{},"modules/NgxPluginServiceModule.html":{}}}],["describedby",{"_index":327,"title":{},"body":{"interfaces/EditorJSMaterialForm.html":{}}}],["description",{"_index":8,"title":{},"body":{"interfaces/Block.html":{},"interfaces/BlockData.html":{},"interfaces/ChangeMap.html":{},"interfaces/CreateEditorJSOptions.html":{},"interfaces/EditorJSChange.html":{},"interfaces/EditorJSClass.html":{},"interfaces/EditorJSInstanceConfig.html":{},"interfaces/EditorJSMaterialForm.html":{},"interfaces/EditorMap.html":{},"interfaces/Header.html":{},"interfaces/HeaderBlock.html":{},"interfaces/Image.html":{},"interfaces/ImageBlock.html":{},"interfaces/InjectorApiCallOptions.html":{},"interfaces/InjectorApiCallResponse.html":{},"interfaces/InjectorMethodOption.html":{},"interfaces/List.html":{},"interfaces/ListBlock.html":{},"interfaces/NgxEditorJSConfig.html":{},"directives/NgxEditorJSDirective.html":{},"modules/NgxEditorJSModule.html":{},"interfaces/NgxEditorJSModuleConfig.html":{},"injectables/NgxEditorJSPluginService.html":{},"injectables/NgxEditorJSService.html":{},"modules/NgxEditorjsPluginsModule.html":{},"interfaces/Paragraph.html":{},"interfaces/ParagraphBlock.html":{},"modules/PluginCodeModule.html":{},"interfaces/PluginConfig.html":{},"interfaces/PluginConfigMap.html":{},"modules/PluginHeaderModule.html":{},"modules/PluginImageModule.html":{},"modules/PluginInlineCodeModule.html":{},"modules/PluginLinkModule.html":{},"modules/PluginListModule.html":{},"modules/PluginMarkerModule.html":{},"modules/PluginParagraphModule.html":{},"modules/PluginSimpleImageModule.html":{},"interfaces/ReadyMap.html":{},"interfaces/SavedMap.html":{},"interfaces/ToolSettingsMap.html":{},"miscellaneous/functions.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-readme.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-plugins-readme.html":{}}}],["descriptive",{"_index":1586,"title":{},"body":{"additional-documentation/tinynodes-library-docs/ngx-editorjs-plugins-readme.html":{}}}],["destroy",{"_index":510,"title":{},"body":{"directives/NgxEditorJSDirective.html":{},"injectables/NgxEditorJSService.html":{}}}],["destroyed",{"_index":525,"title":{},"body":{"directives/NgxEditorJSDirective.html":{},"injectables/NgxEditorJSService.html":{}}}],["destroyinstance",{"_index":702,"title":{},"body":{"injectables/NgxEditorJSService.html":{}}}],["destroyinstance(options",{"_index":730,"title":{},"body":{"injectables/NgxEditorJSService.html":{}}}],["destroys",{"_index":732,"title":{},"body":{"injectables/NgxEditorJSService.html":{}}}],["destructive",{"_index":503,"title":{},"body":{"directives/NgxEditorJSDirective.html":{}}}],["details",{"_index":985,"title":{},"body":{"modules/PluginCodeModule.html":{},"modules/PluginHeaderModule.html":{},"modules/PluginImageModule.html":{},"modules/PluginInlineCodeModule.html":{},"modules/PluginLinkModule.html":{},"modules/PluginListModule.html":{},"modules/PluginMarkerModule.html":{},"modules/PluginParagraphModule.html":{},"modules/PluginSimpleImageModule.html":{},"contributing.html":{},"additional-documentation/tinynodes-library-docs.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-readme.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-plugins-readme.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-plugins-readme/ngx-editorjs-plugins-changelog.html":{}}}],["detection",{"_index":346,"title":{},"body":{"interfaces/EditorJSMaterialForm.html":{},"injectables/NgxEditorJSService.html":{}}}],["determined",{"_index":1293,"title":{},"body":{"contributing.html":{}}}],["developers",{"_index":1141,"title":{},"body":{"contributing.html":{}}}],["development",{"_index":1347,"title":{},"body":{"index.html":{}}}],["devlog",{"_index":1085,"title":{},"body":{"changelog.html":{}}}],["diary",{"_index":1348,"title":{},"body":{"index.html":{}}}],["differing",{"_index":1180,"title":{},"body":{"contributing.html":{}}}],["directive",{"_index":411,"title":{"directives/NgxEditorJSDirective.html":{}},"body":{"directives/NgxEditorJSDirective.html":{},"components/NgxTinynodesMatJsonOutputComponent.html":{},"index.html":{},"overview.html":{},"todo.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-readme.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-readme/ngx-editorjs-changelog.html":{}}}],["directives",{"_index":412,"title":{},"body":{"directives/NgxEditorJSDirective.html":{},"components/NgxTinynodesMatJsonOutputComponent.html":{}}}],["directives/ngx",{"_index":238,"title":{},"body":{"interfaces/EditorJSMaterialForm.html":{},"modules/NgxEditorJSModule.html":{}}}],["disability",{"_index":1160,"title":{},"body":{"contributing.html":{}}}],["disable",{"_index":456,"title":{},"body":{"directives/NgxEditorJSDirective.html":{},"injectables/NgxEditorJSService.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-readme.html":{}}}],["disabled",{"_index":299,"title":{},"body":{"interfaces/EditorJSMaterialForm.html":{}}}],["disabled(disabled",{"_index":303,"title":{},"body":{"interfaces/EditorJSMaterialForm.html":{}}}],["discuss",{"_index":1111,"title":{},"body":{"contributing.html":{}}}],["display",{"_index":459,"title":{},"body":{"directives/NgxEditorJSDirective.html":{}}}],["displaying",{"_index":102,"title":{},"body":{"interfaces/BlockData.html":{},"interfaces/PluginConfig.html":{},"interfaces/PluginConfigMap.html":{},"interfaces/ToolSettingsMap.html":{}}}],["distinctuntilchanged",{"_index":753,"title":{},"body":{"injectables/NgxEditorJSService.html":{}}}],["distinctuntilchanged((a",{"_index":834,"title":{},"body":{"injectables/NgxEditorJSService.html":{}}}],["distribute",{"_index":1396,"title":{},"body":{"license.html":{}}}],["doc",{"_index":1447,"title":{},"body":{"todo.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-readme/ngx-editorjs-changelog.html":{}}}],["docheck",{"_index":222,"title":{},"body":{"interfaces/EditorJSMaterialForm.html":{},"interfaces/NgxTinynodesMatFieldComponent.html":{}}}],["docs",{"_index":1030,"title":{"additional-documentation/tinynodes-library-docs.html":{}},"body":{"changelog.html":{},"index.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-readme.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-readme/ngx-editorjs-changelog.html":{}}}],["documentation",{"_index":1076,"title":{},"body":{"changelog.html":{},"index.html":{},"license.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-readme.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-readme/ngx-editorjs-changelog.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-plugins-readme/ngx-editorjs-plugins-changelog.html":{}}}],["documented",{"_index":1513,"title":{},"body":{"additional-documentation/tinynodes-library-docs/ngx-editorjs-readme/ngx-editorjs-changelog.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-plugins-readme/ngx-editorjs-plugins-changelog.html":{}}}],["doing",{"_index":750,"title":{},"body":{"injectables/NgxEditorJSService.html":{},"contributing.html":{}}}],["dom",{"_index":528,"title":{},"body":{"directives/NgxEditorJSDirective.html":{},"injectables/NgxEditorJSService.html":{},"components/NgxTinynodesMatJsonOutputComponent.html":{},"index.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-readme.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-readme/ngx-editorjs-changelog.html":{}}}],["don't",{"_index":197,"title":{},"body":{"interfaces/EditorJSClass.html":{},"interfaces/EditorJSInstanceConfig.html":{},"interfaces/InjectorApiCallOptions.html":{},"interfaces/InjectorApiCallResponse.html":{},"interfaces/InjectorMethodOption.html":{}}}],["download",{"_index":1489,"title":{},"body":{"additional-documentation/tinynodes-library-docs/ngx-editorjs-readme.html":{}}}],["due",{"_index":1057,"title":{},"body":{"changelog.html":{},"additional-documentation/tinynodes-library-docs.html":{}}}],["dynamic",{"_index":1311,"title":{},"body":{"dependencies.html":{}}}],["e",{"_index":1250,"title":{},"body":{"contributing.html":{}}}],["e.g",{"_index":1452,"title":{},"body":{"todo.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-plugins-readme.html":{}}}],["each",{"_index":182,"title":{},"body":{"interfaces/EditorJSClass.html":{},"interfaces/EditorJSInstanceConfig.html":{},"interfaces/EditorJSMaterialForm.html":{},"interfaces/InjectorApiCallOptions.html":{},"interfaces/InjectorApiCallResponse.html":{},"interfaces/InjectorMethodOption.html":{},"modules/NgxEditorjsPluginsModule.html":{},"miscellaneous/variables.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-readme.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-plugins-readme/ngx-editorjs-plugins-changelog.html":{}}}],["easily",{"_index":892,"title":{},"body":{"modules/NgxEditorjsPluginsModule.html":{},"index.html":{}}}],["easy",{"_index":1525,"title":{},"body":{"additional-documentation/tinynodes-library-docs/ngx-editorjs-readme/ngx-editorjs-changelog.html":{}}}],["edit",{"_index":1228,"title":{},"body":{"contributing.html":{}}}],["editior_js_instance",{"_index":409,"title":{},"body":{"interfaces/NgxEditorJSConfig.html":{},"interfaces/NgxEditorJSModuleConfig.html":{},"miscellaneous/variables.html":{}}}],["editor",{"_index":108,"title":{},"body":{"interfaces/BlockData.html":{},"interfaces/EditorJSClass.html":{},"interfaces/EditorJSInstanceConfig.html":{},"interfaces/EditorJSMaterialForm.html":{},"interfaces/InjectorApiCallOptions.html":{},"interfaces/InjectorApiCallResponse.html":{},"interfaces/InjectorMethodOption.html":{},"directives/NgxEditorJSDirective.html":{},"injectables/NgxEditorJSService.html":{},"interfaces/PluginConfig.html":{},"interfaces/PluginConfigMap.html":{},"interfaces/ToolSettingsMap.html":{},"todo.html":{},"miscellaneous/variables.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-readme.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-readme/ngx-editorjs-changelog.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-plugins-readme.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-plugins-readme/ngx-editorjs-plugins-changelog.html":{}}}],["editor's",{"_index":393,"title":{},"body":{"interfaces/NgxEditorJSConfig.html":{},"interfaces/NgxEditorJSModuleConfig.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-readme.html":{}}}],["editor.destroy",{"_index":845,"title":{},"body":{"injectables/NgxEditorJSService.html":{}}}],["editor.isready",{"_index":786,"title":{},"body":{"injectables/NgxEditorJSService.html":{}}}],["editor[options.method",{"_index":801,"title":{},"body":{"injectables/NgxEditorJSService.html":{}}}],["editor[options.namespace][options.method",{"_index":802,"title":{},"body":{"injectables/NgxEditorJSService.html":{}}}],["editor_js_tool_injector",{"_index":116,"title":{},"body":{"interfaces/BlockData.html":{},"modules/NgxPluginServiceModule.html":{},"modules/PluginCodeModule.html":{},"interfaces/PluginConfig.html":{},"interfaces/PluginConfigMap.html":{},"modules/PluginHeaderModule.html":{},"modules/PluginImageModule.html":{},"modules/PluginInlineCodeModule.html":{},"modules/PluginLinkModule.html":{},"modules/PluginListModule.html":{},"modules/PluginMarkerModule.html":{},"modules/PluginParagraphModule.html":{},"modules/PluginSimpleImageModule.html":{},"interfaces/ToolSettingsMap.html":{},"miscellaneous/variables.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-plugins-readme.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-plugins-readme/ngx-editorjs-plugins-changelog.html":{}}}],["editorconfig",{"_index":157,"title":{},"body":{"interfaces/CreateEditorJSOptions.html":{},"interfaces/EditorJSClass.html":{},"interfaces/EditorJSInstanceConfig.html":{},"interfaces/InjectorApiCallOptions.html":{},"interfaces/InjectorApiCallResponse.html":{},"interfaces/InjectorMethodOption.html":{},"interfaces/NgxEditorJSConfig.html":{},"directives/NgxEditorJSDirective.html":{},"interfaces/NgxEditorJSModuleConfig.html":{},"injectables/NgxEditorJSService.html":{},"miscellaneous/functions.html":{}}}],["editorconfig.holder",{"_index":780,"title":{},"body":{"injectables/NgxEditorJSService.html":{}}}],["editorconfig.onchange",{"_index":777,"title":{},"body":{"injectables/NgxEditorJSService.html":{}}}],["editorconfig.onready",{"_index":782,"title":{},"body":{"injectables/NgxEditorJSService.html":{}}}],["editorinstance",{"_index":314,"title":{},"body":{"interfaces/EditorJSMaterialForm.html":{}}}],["editorjs",{"_index":11,"title":{"additional-documentation/tinynodes-library-docs/ngx-editorjs-readme.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-readme/ngx-editorjs-changelog.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-plugins-readme.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-plugins-readme/ngx-editorjs-plugins-changelog.html":{}},"body":{"interfaces/Block.html":{},"interfaces/BlockData.html":{},"interfaces/ChangeMap.html":{},"interfaces/CreateEditorJSOptions.html":{},"interfaces/EditorJSChange.html":{},"interfaces/EditorJSClass.html":{},"interfaces/EditorJSInstanceConfig.html":{},"interfaces/EditorJSMaterialForm.html":{},"interfaces/EditorMap.html":{},"interfaces/Header.html":{},"interfaces/HeaderBlock.html":{},"interfaces/Image.html":{},"interfaces/ImageBlock.html":{},"interfaces/InjectorApiCallOptions.html":{},"interfaces/InjectorApiCallResponse.html":{},"interfaces/InjectorMethodOption.html":{},"interfaces/List.html":{},"interfaces/ListBlock.html":{},"interfaces/NgxEditorJSConfig.html":{},"directives/NgxEditorJSDirective.html":{},"modules/NgxEditorJSModule.html":{},"interfaces/NgxEditorJSModuleConfig.html":{},"injectables/NgxEditorJSPluginService.html":{},"injectables/NgxEditorJSService.html":{},"modules/NgxEditorjsPluginsModule.html":{},"modules/NgxPluginServiceModule.html":{},"components/NgxTinynodesMatJsonOutputComponent.html":{},"interfaces/Paragraph.html":{},"interfaces/ParagraphBlock.html":{},"modules/PluginCodeModule.html":{},"interfaces/PluginConfig.html":{},"interfaces/PluginConfigMap.html":{},"modules/PluginHeaderModule.html":{},"modules/PluginImageModule.html":{},"modules/PluginInlineCodeModule.html":{},"modules/PluginLinkModule.html":{},"modules/PluginListModule.html":{},"modules/PluginMarkerModule.html":{},"modules/PluginParagraphModule.html":{},"modules/PluginSimpleImageModule.html":{},"interfaces/ReadyMap.html":{},"interfaces/SavedMap.html":{},"interfaces/ToolSettingsMap.html":{},"changelog.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"index.html":{},"todo.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-readme.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-readme/ngx-editorjs-changelog.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-plugins-readme.html":{}}}],["editorjs'},{'name",{"_index":956,"title":{},"body":{"components/NgxTinynodesMatJsonOutputComponent.html":{}}}],["editorjs.directive",{"_index":239,"title":{},"body":{"interfaces/EditorJSMaterialForm.html":{},"modules/NgxEditorJSModule.html":{}}}],["editorjs.directive.ts",{"_index":414,"title":{},"body":{"directives/NgxEditorJSDirective.html":{}}}],["editorjs.directive.ts:106",{"_index":446,"title":{},"body":{"directives/NgxEditorJSDirective.html":{}}}],["editorjs.directive.ts:112",{"_index":462,"title":{},"body":{"directives/NgxEditorJSDirective.html":{}}}],["editorjs.directive.ts:118",{"_index":481,"title":{},"body":{"directives/NgxEditorJSDirective.html":{}}}],["editorjs.directive.ts:124",{"_index":485,"title":{},"body":{"directives/NgxEditorJSDirective.html":{}}}],["editorjs.directive.ts:130",{"_index":483,"title":{},"body":{"directives/NgxEditorJSDirective.html":{}}}],["editorjs.directive.ts:136",{"_index":478,"title":{},"body":{"directives/NgxEditorJSDirective.html":{}}}],["editorjs.directive.ts:142",{"_index":484,"title":{},"body":{"directives/NgxEditorJSDirective.html":{}}}],["editorjs.directive.ts:148",{"_index":486,"title":{},"body":{"directives/NgxEditorJSDirective.html":{}}}],["editorjs.directive.ts:152",{"_index":440,"title":{},"body":{"directives/NgxEditorJSDirective.html":{}}}],["editorjs.directive.ts:168",{"_index":513,"title":{},"body":{"directives/NgxEditorJSDirective.html":{}}}],["editorjs.directive.ts:175",{"_index":516,"title":{},"body":{"directives/NgxEditorJSDirective.html":{}}}],["editorjs.directive.ts:182",{"_index":518,"title":{},"body":{"directives/NgxEditorJSDirective.html":{}}}],["editorjs.directive.ts:189",{"_index":520,"title":{},"body":{"directives/NgxEditorJSDirective.html":{}}}],["editorjs.directive.ts:198",{"_index":488,"title":{},"body":{"directives/NgxEditorJSDirective.html":{}}}],["editorjs.directive.ts:215",{"_index":497,"title":{},"body":{"directives/NgxEditorJSDirective.html":{}}}],["editorjs.directive.ts:252",{"_index":491,"title":{},"body":{"directives/NgxEditorJSDirective.html":{}}}],["editorjs.directive.ts:285",{"_index":509,"title":{},"body":{"directives/NgxEditorJSDirective.html":{}}}],["editorjs.directive.ts:53",{"_index":444,"title":{},"body":{"directives/NgxEditorJSDirective.html":{}}}],["editorjs.directive.ts:59",{"_index":466,"title":{},"body":{"directives/NgxEditorJSDirective.html":{}}}],["editorjs.directive.ts:65",{"_index":468,"title":{},"body":{"directives/NgxEditorJSDirective.html":{}}}],["editorjs.directive.ts:72",{"_index":469,"title":{},"body":{"directives/NgxEditorJSDirective.html":{}}}],["editorjs.directive.ts:78",{"_index":473,"title":{},"body":{"directives/NgxEditorJSDirective.html":{}}}],["editorjs.directive.ts:84",{"_index":458,"title":{},"body":{"directives/NgxEditorJSDirective.html":{}}}],["editorjs.directive.ts:90",{"_index":475,"title":{},"body":{"directives/NgxEditorJSDirective.html":{}}}],["editorjs.directive.ts:97",{"_index":463,"title":{},"body":{"directives/NgxEditorJSDirective.html":{}}}],["editorjs.module.ts",{"_index":603,"title":{},"body":{"modules/NgxEditorJSModule.html":{},"miscellaneous/functions.html":{}}}],["editorjs.module.ts:60",{"_index":614,"title":{},"body":{"modules/NgxEditorJSModule.html":{}}}],["editorjs.version",{"_index":187,"title":{},"body":{"interfaces/EditorJSClass.html":{},"interfaces/EditorJSInstanceConfig.html":{},"interfaces/InjectorApiCallOptions.html":{},"interfaces/InjectorApiCallResponse.html":{},"interfaces/InjectorMethodOption.html":{},"directives/NgxEditorJSDirective.html":{},"miscellaneous/variables.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-readme.html":{}}}],["editorjs/code",{"_index":987,"title":{},"body":{"modules/PluginCodeModule.html":{}}}],["editorjs/editorjs",{"_index":75,"title":{},"body":{"interfaces/BlockData.html":{},"interfaces/ChangeMap.html":{},"interfaces/CreateEditorJSOptions.html":{},"interfaces/EditorJSChange.html":{},"interfaces/EditorJSClass.html":{},"interfaces/EditorJSInstanceConfig.html":{},"interfaces/EditorMap.html":{},"interfaces/InjectorApiCallOptions.html":{},"interfaces/InjectorApiCallResponse.html":{},"interfaces/InjectorMethodOption.html":{},"interfaces/NgxEditorJSConfig.html":{},"directives/NgxEditorJSDirective.html":{},"modules/NgxEditorJSModule.html":{},"interfaces/NgxEditorJSModuleConfig.html":{},"injectables/NgxEditorJSService.html":{},"interfaces/PluginConfig.html":{},"interfaces/PluginConfigMap.html":{},"interfaces/ReadyMap.html":{},"interfaces/SavedMap.html":{},"interfaces/ToolSettingsMap.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-readme.html":{}}}],["editorjs/editorjs.component",{"_index":243,"title":{},"body":{"interfaces/EditorJSMaterialForm.html":{}}}],["editorjs/header",{"_index":992,"title":{},"body":{"modules/PluginHeaderModule.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-plugins-readme.html":{}}}],["editorjs/image",{"_index":995,"title":{},"body":{"modules/PluginImageModule.html":{}}}],["editorjs/inline",{"_index":1000,"title":{},"body":{"modules/PluginInlineCodeModule.html":{}}}],["editorjs/link",{"_index":1004,"title":{},"body":{"modules/PluginLinkModule.html":{}}}],["editorjs/list",{"_index":1006,"title":{},"body":{"modules/PluginListModule.html":{}}}],["editorjs/paragraph",{"_index":1009,"title":{},"body":{"modules/PluginMarkerModule.html":{},"modules/PluginParagraphModule.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-readme.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-plugins-readme.html":{}}}],["editorjs/simple",{"_index":1015,"title":{},"body":{"modules/PluginSimpleImageModule.html":{}}}],["editorjs/src/lib/config/editor",{"_index":1337,"title":{},"body":{"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["editorjs/src/lib/config/module",{"_index":1341,"title":{},"body":{"miscellaneous/functions.html":{}}}],["editorjs/src/lib/containers/editorjs",{"_index":208,"title":{},"body":{"interfaces/EditorJSMaterialForm.html":{},"miscellaneous/variables.html":{}}}],["editorjs/src/lib/containers/editorjs/editorjs.component.ts",{"_index":1476,"title":{},"body":{"miscellaneous/variables.html":{}}}],["editorjs/src/lib/directives/ngx",{"_index":413,"title":{},"body":{"directives/NgxEditorJSDirective.html":{}}}],["editorjs/src/lib/ngx",{"_index":602,"title":{},"body":{"modules/NgxEditorJSModule.html":{},"miscellaneous/functions.html":{}}}],["editorjs/src/lib/services/editorjs.service.ts",{"_index":682,"title":{},"body":{"injectables/NgxEditorJSService.html":{}}}],["editorjs/src/lib/services/editorjs.service.ts:139",{"_index":711,"title":{},"body":{"injectables/NgxEditorJSService.html":{}}}],["editorjs/src/lib/services/editorjs.service.ts:178",{"_index":742,"title":{},"body":{"injectables/NgxEditorJSService.html":{}}}],["editorjs/src/lib/services/editorjs.service.ts:192",{"_index":721,"title":{},"body":{"injectables/NgxEditorJSService.html":{}}}],["editorjs/src/lib/services/editorjs.service.ts:205",{"_index":747,"title":{},"body":{"injectables/NgxEditorJSService.html":{}}}],["editorjs/src/lib/services/editorjs.service.ts:218",{"_index":745,"title":{},"body":{"injectables/NgxEditorJSService.html":{}}}],["editorjs/src/lib/services/editorjs.service.ts:230",{"_index":734,"title":{},"body":{"injectables/NgxEditorJSService.html":{}}}],["editorjs/src/lib/services/editorjs.service.ts:241",{"_index":738,"title":{},"body":{"injectables/NgxEditorJSService.html":{}}}],["editorjs/src/lib/services/editorjs.service.ts:252",{"_index":740,"title":{},"body":{"injectables/NgxEditorJSService.html":{}}}],["editorjs/src/lib/services/editorjs.service.ts:270",{"_index":736,"title":{},"body":{"injectables/NgxEditorJSService.html":{}}}],["editorjs/src/lib/services/editorjs.service.ts:281",{"_index":731,"title":{},"body":{"injectables/NgxEditorJSService.html":{}}}],["editorjs/src/lib/services/editorjs.service.ts:298",{"_index":728,"title":{},"body":{"injectables/NgxEditorJSService.html":{}}}],["editorjs/src/lib/services/editorjs.service.ts:61",{"_index":707,"title":{},"body":{"injectables/NgxEditorJSService.html":{}}}],["editorjs/src/lib/services/editorjs.service.ts:88",{"_index":726,"title":{},"body":{"injectables/NgxEditorJSService.html":{}}}],["editorjs/src/lib/types/blocks.ts",{"_index":7,"title":{},"body":{"interfaces/Block.html":{},"interfaces/Header.html":{},"interfaces/HeaderBlock.html":{},"interfaces/Image.html":{},"interfaces/ImageBlock.html":{},"interfaces/List.html":{},"interfaces/ListBlock.html":{},"interfaces/Paragraph.html":{},"interfaces/ParagraphBlock.html":{},"miscellaneous/typealiases.html":{}}}],["editorjs/src/lib/types/blocks.ts:13",{"_index":19,"title":{},"body":{"interfaces/Block.html":{}}}],["editorjs/src/lib/types/config.ts",{"_index":376,"title":{},"body":{"interfaces/NgxEditorJSConfig.html":{},"interfaces/NgxEditorJSModuleConfig.html":{},"miscellaneous/variables.html":{}}}],["editorjs/src/lib/types/editorjs",{"_index":150,"title":{},"body":{"interfaces/CreateEditorJSOptions.html":{}}}],["editorjs/src/lib/types/injector.ts",{"_index":160,"title":{},"body":{"interfaces/EditorJSClass.html":{},"interfaces/EditorJSInstanceConfig.html":{},"interfaces/InjectorApiCallOptions.html":{},"interfaces/InjectorApiCallResponse.html":{},"interfaces/InjectorMethodOption.html":{},"miscellaneous/variables.html":{}}}],["editorjs/src/lib/types/maps.ts",{"_index":128,"title":{},"body":{"interfaces/ChangeMap.html":{},"interfaces/EditorJSChange.html":{},"interfaces/EditorMap.html":{},"interfaces/ReadyMap.html":{},"interfaces/SavedMap.html":{}}}],["editorjs/src/lib/types/maps.ts:18",{"_index":1017,"title":{},"body":{"interfaces/ReadyMap.html":{}}}],["editorjs/src/lib/types/maps.ts:28",{"_index":1018,"title":{},"body":{"interfaces/SavedMap.html":{}}}],["editorjs/src/lib/types/maps.ts:52",{"_index":134,"title":{},"body":{"interfaces/ChangeMap.html":{}}}],["editorjs/src/lib/types/maps.ts:8",{"_index":374,"title":{},"body":{"interfaces/EditorMap.html":{}}}],["editorjs@1.2.0",{"_index":1080,"title":{},"body":{"changelog.html":{}}}],["editorjs@1.3.2",{"_index":1069,"title":{},"body":{"changelog.html":{}}}],["editorjs@2.0.0",{"_index":1054,"title":{},"body":{"changelog.html":{}}}],["editorjs@3.0.0",{"_index":1033,"title":{},"body":{"changelog.html":{}}}],["editorjs](http://editorjs.io",{"_index":633,"title":{},"body":{"modules/NgxEditorJSModule.html":{}}}],["editorjs_form_value_accessor",{"_index":1466,"title":{},"body":{"miscellaneous/variables.html":{}}}],["editorjs_material_field_control",{"_index":245,"title":{},"body":{"interfaces/EditorJSMaterialForm.html":{},"miscellaneous/variables.html":{}}}],["editorjs_module_import",{"_index":190,"title":{},"body":{"interfaces/EditorJSClass.html":{},"interfaces/EditorJSInstanceConfig.html":{},"interfaces/InjectorApiCallOptions.html":{},"interfaces/InjectorApiCallResponse.html":{},"interfaces/InjectorMethodOption.html":{},"modules/NgxEditorJSModule.html":{},"miscellaneous/variables.html":{}}}],["editorjsbasecomponent",{"_index":1533,"title":{},"body":{"additional-documentation/tinynodes-library-docs/ngx-editorjs-readme/ngx-editorjs-changelog.html":{}}}],["editorjschange",{"_index":147,"title":{"interfaces/EditorJSChange.html":{}},"body":{"interfaces/ChangeMap.html":{},"interfaces/EditorJSChange.html":{},"interfaces/EditorMap.html":{},"interfaces/ReadyMap.html":{},"interfaces/SavedMap.html":{}}}],["editorjsclass",{"_index":159,"title":{"interfaces/EditorJSClass.html":{}},"body":{"interfaces/EditorJSClass.html":{},"interfaces/EditorJSInstanceConfig.html":{},"interfaces/InjectorApiCallOptions.html":{},"interfaces/InjectorApiCallResponse.html":{},"interfaces/InjectorMethodOption.html":{},"injectables/NgxEditorJSService.html":{}}}],["editorjsinstance",{"_index":193,"title":{},"body":{"interfaces/EditorJSClass.html":{},"interfaces/EditorJSInstanceConfig.html":{},"interfaces/InjectorApiCallOptions.html":{},"interfaces/InjectorApiCallResponse.html":{},"interfaces/InjectorMethodOption.html":{},"modules/NgxEditorJSModule.html":{},"injectables/NgxEditorJSService.html":{},"miscellaneous/variables.html":{}}}],["editorjsinstanceconfig",{"_index":173,"title":{"interfaces/EditorJSInstanceConfig.html":{}},"body":{"interfaces/EditorJSClass.html":{},"interfaces/EditorJSInstanceConfig.html":{},"interfaces/InjectorApiCallOptions.html":{},"interfaces/InjectorApiCallResponse.html":{},"interfaces/InjectorMethodOption.html":{}}}],["editorjsmaterialform",{"_index":207,"title":{"interfaces/EditorJSMaterialForm.html":{}},"body":{"interfaces/EditorJSMaterialForm.html":{}}}],["editorjsplugin",{"_index":90,"title":{},"body":{"interfaces/BlockData.html":{},"interfaces/PluginConfig.html":{},"interfaces/PluginConfigMap.html":{},"interfaces/ToolSettingsMap.html":{},"miscellaneous/typealiases.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-readme/ngx-editorjs-changelog.html":{}}}],["editormap",{"_index":139,"title":{"interfaces/EditorMap.html":{}},"body":{"interfaces/ChangeMap.html":{},"interfaces/EditorJSChange.html":{},"interfaces/EditorMap.html":{},"injectables/NgxEditorJSService.html":{},"interfaces/ReadyMap.html":{},"interfaces/SavedMap.html":{}}}],["editorservice",{"_index":340,"title":{},"body":{"interfaces/EditorJSMaterialForm.html":{},"directives/NgxEditorJSDirective.html":{}}}],["edits",{"_index":1232,"title":{},"body":{"contributing.html":{}}}],["el",{"_index":442,"title":{},"body":{"directives/NgxEditorJSDirective.html":{}}}],["electronic",{"_index":1208,"title":{},"body":{"contributing.html":{}}}],["element",{"_index":343,"title":{},"body":{"interfaces/EditorJSMaterialForm.html":{},"interfaces/NgxEditorJSConfig.html":{},"directives/NgxEditorJSDirective.html":{},"interfaces/NgxEditorJSModuleConfig.html":{},"components/NgxTinynodesMatJsonOutputComponent.html":{},"index.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-readme.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-readme/ngx-editorjs-changelog.html":{}}}],["elementref",{"_index":439,"title":{},"body":{"directives/NgxEditorJSDirective.html":{}}}],["email",{"_index":1114,"title":{},"body":{"contributing.html":{}}}],["emits",{"_index":479,"title":{},"body":{"directives/NgxEditorJSDirective.html":{}}}],["empathy",{"_index":1190,"title":{},"body":{"contributing.html":{}}}],["empty",{"_index":305,"title":{},"body":{"interfaces/EditorJSMaterialForm.html":{},"directives/NgxEditorJSDirective.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-readme.html":{}}}],["empty(empty",{"_index":308,"title":{},"body":{"interfaces/EditorJSMaterialForm.html":{}}}],["end",{"_index":1122,"title":{},"body":{"contributing.html":{}}}],["enforce",{"_index":1287,"title":{},"body":{"contributing.html":{}}}],["enforcement",{"_index":1264,"title":{},"body":{"contributing.html":{}}}],["ensure",{"_index":688,"title":{},"body":{"injectables/NgxEditorJSService.html":{},"contributing.html":{}}}],["entire",{"_index":1059,"title":{},"body":{"changelog.html":{}}}],["enum",{"_index":81,"title":{},"body":{"interfaces/BlockData.html":{},"interfaces/PluginConfig.html":{},"interfaces/PluginConfigMap.html":{},"interfaces/ToolSettingsMap.html":{}}}],["enumerations",{"_index":1329,"title":{"miscellaneous/enumerations.html":{}},"body":{"miscellaneous/enumerations.html":{}}}],["environment",{"_index":1126,"title":{},"body":{"contributing.html":{}}}],["error",{"_index":271,"title":{},"body":{"interfaces/EditorJSMaterialForm.html":{}}}],["error('error",{"_index":562,"title":{},"body":{"directives/NgxEditorJSDirective.html":{}}}],["error(`no",{"_index":803,"title":{},"body":{"injectables/NgxEditorJSService.html":{}}}],["errorstate",{"_index":272,"title":{},"body":{"interfaces/EditorJSMaterialForm.html":{}}}],["etc",{"_index":717,"title":{},"body":{"injectables/NgxEditorJSService.html":{},"todo.html":{}}}],["ethnicity",{"_index":1161,"title":{},"body":{"contributing.html":{}}}],["event",{"_index":146,"title":{},"body":{"interfaces/ChangeMap.html":{},"interfaces/EditorJSChange.html":{},"interfaces/EditorJSMaterialForm.html":{},"interfaces/EditorMap.html":{},"interfaces/ReadyMap.html":{},"interfaces/SavedMap.html":{},"contributing.html":{},"license.html":{}}}],["eventemitter",{"_index":477,"title":{},"body":{"directives/NgxEditorJSDirective.html":{}}}],["events",{"_index":1358,"title":{},"body":{"index.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-readme.html":{}}}],["everyone",{"_index":1155,"title":{},"body":{"contributing.html":{}}}],["example",{"_index":255,"title":{},"body":{"interfaces/EditorJSMaterialForm.html":{},"directives/NgxEditorJSDirective.html":{},"changelog.html":{},"index.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-readme.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-plugins-readme.html":{}}}],["examples",{"_index":1133,"title":{},"body":{"contributing.html":{}}}],["exclude",{"_index":661,"title":{},"body":{"injectables/NgxEditorJSPluginService.html":{},"injectables/NgxEditorJSService.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-plugins-readme.html":{}}}],["excludelist",{"_index":662,"title":{},"body":{"injectables/NgxEditorJSPluginService.html":{}}}],["excludelist.includes(key",{"_index":678,"title":{},"body":{"injectables/NgxEditorJSPluginService.html":{}}}],["excludes",{"_index":1510,"title":{},"body":{"additional-documentation/tinynodes-library-docs/ngx-editorjs-readme.html":{}}}],["excludetools",{"_index":154,"title":{},"body":{"interfaces/CreateEditorJSOptions.html":{},"directives/NgxEditorJSDirective.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-readme.html":{}}}],["excudetools",{"_index":868,"title":{},"body":{"injectables/NgxEditorJSService.html":{}}}],["existing",{"_index":507,"title":{},"body":{"directives/NgxEditorJSDirective.html":{}}}],["exiting",{"_index":1063,"title":{},"body":{"changelog.html":{}}}],["expand",{"_index":945,"title":{},"body":{"components/NgxTinynodesMatJsonOutputComponent.html":{}}}],["expanded",{"_index":1095,"title":{},"body":{"changelog.html":{}}}],["expected",{"_index":1220,"title":{},"body":{"contributing.html":{}}}],["experience",{"_index":1154,"title":{},"body":{"contributing.html":{}}}],["experiences",{"_index":1182,"title":{},"body":{"contributing.html":{}}}],["explicit",{"_index":1210,"title":{},"body":{"contributing.html":{}}}],["export",{"_index":23,"title":{},"body":{"interfaces/Block.html":{},"interfaces/BlockData.html":{},"interfaces/ChangeMap.html":{},"interfaces/CreateEditorJSOptions.html":{},"interfaces/EditorJSChange.html":{},"interfaces/EditorJSClass.html":{},"interfaces/EditorJSInstanceConfig.html":{},"interfaces/EditorJSMaterialForm.html":{},"interfaces/EditorMap.html":{},"interfaces/Header.html":{},"interfaces/HeaderBlock.html":{},"interfaces/Image.html":{},"interfaces/ImageBlock.html":{},"interfaces/InjectorApiCallOptions.html":{},"interfaces/InjectorApiCallResponse.html":{},"interfaces/InjectorMethodOption.html":{},"interfaces/List.html":{},"interfaces/ListBlock.html":{},"interfaces/NgxEditorJSConfig.html":{},"directives/NgxEditorJSDirective.html":{},"modules/NgxEditorJSModule.html":{},"interfaces/NgxEditorJSModuleConfig.html":{},"injectables/NgxEditorJSPluginService.html":{},"injectables/NgxEditorJSService.html":{},"modules/NgxEditorjsPluginsModule.html":{},"modules/NgxPluginServiceModule.html":{},"modules/NgxTinynodesComponentsModule.html":{},"interfaces/NgxTinynodesMatFieldComponent.html":{},"components/NgxTinynodesMatJsonOutputComponent.html":{},"modules/NgxTinynodesMatJsonOutputModule.html":{},"modules/NgxTinynodesMatTagInputModule.html":{},"interfaces/Paragraph.html":{},"interfaces/ParagraphBlock.html":{},"modules/PluginCodeModule.html":{},"interfaces/PluginConfig.html":{},"interfaces/PluginConfigMap.html":{},"modules/PluginHeaderModule.html":{},"modules/PluginImageModule.html":{},"modules/PluginInlineCodeModule.html":{},"modules/PluginLinkModule.html":{},"modules/PluginListModule.html":{},"modules/PluginMarkerModule.html":{},"modules/PluginParagraphModule.html":{},"modules/PluginSimpleImageModule.html":{},"interfaces/ReadyMap.html":{},"interfaces/SavedMap.html":{},"interfaces/ToolSettingsMap.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-readme.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-plugins-readme.html":{}}}],["exported",{"_index":94,"title":{},"body":{"interfaces/BlockData.html":{},"interfaces/PluginConfig.html":{},"interfaces/PluginConfigMap.html":{},"interfaces/ToolSettingsMap.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-readme/ngx-editorjs-changelog.html":{}}}],["exports",{"_index":592,"title":{},"body":{"modules/NgxEditorJSModule.html":{},"modules/NgxEditorjsPluginsModule.html":{},"modules/NgxPluginServiceModule.html":{},"modules/NgxTinynodesComponentsModule.html":{},"modules/NgxTinynodesMatJsonOutputModule.html":{},"modules/NgxTinynodesMatTagInputModule.html":{},"changelog.html":{},"index.html":{},"overview.html":{}}}],["expose",{"_index":1449,"title":{},"body":{"todo.html":{}}}],["exposed",{"_index":1128,"title":{},"body":{"contributing.html":{}}}],["express",{"_index":1414,"title":{},"body":{"license.html":{}}}],["expression",{"_index":1164,"title":{},"body":{"contributing.html":{}}}],["extendable",{"_index":1504,"title":{},"body":{"additional-documentation/tinynodes-library-docs/ngx-editorjs-readme.html":{}}}],["extends",{"_index":39,"title":{},"body":{"interfaces/Block.html":{},"interfaces/EditorJSClass.html":{},"interfaces/EditorJSInstanceConfig.html":{},"interfaces/EditorJSMaterialForm.html":{},"interfaces/Header.html":{},"interfaces/HeaderBlock.html":{},"interfaces/Image.html":{},"interfaces/ImageBlock.html":{},"interfaces/InjectorApiCallOptions.html":{},"interfaces/InjectorApiCallResponse.html":{},"interfaces/InjectorMethodOption.html":{},"interfaces/List.html":{},"interfaces/ListBlock.html":{},"interfaces/NgxTinynodesMatFieldComponent.html":{},"interfaces/Paragraph.html":{},"interfaces/ParagraphBlock.html":{}}}],["face",{"_index":1289,"title":{},"body":{"contributing.html":{}}}],["factory",{"_index":405,"title":{},"body":{"interfaces/NgxEditorJSConfig.html":{},"modules/NgxEditorJSModule.html":{},"interfaces/NgxEditorJSModuleConfig.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-readme.html":{}}}],["failed",{"_index":1564,"title":{},"body":{"additional-documentation/tinynodes-library-docs/ngx-editorjs-readme/ngx-editorjs-changelog.html":{}}}],["fair",{"_index":1222,"title":{},"body":{"contributing.html":{}}}],["faith",{"_index":1288,"title":{},"body":{"contributing.html":{}}}],["falls",{"_index":529,"title":{},"body":{"directives/NgxEditorJSDirective.html":{}}}],["false",{"_index":156,"title":{},"body":{"interfaces/CreateEditorJSOptions.html":{},"interfaces/EditorJSClass.html":{},"interfaces/EditorJSInstanceConfig.html":{},"interfaces/EditorJSMaterialForm.html":{},"interfaces/InjectorApiCallOptions.html":{},"interfaces/InjectorApiCallResponse.html":{},"interfaces/InjectorMethodOption.html":{},"interfaces/NgxEditorJSConfig.html":{},"interfaces/NgxEditorJSModuleConfig.html":{},"injectables/NgxEditorJSService.html":{},"miscellaneous/variables.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-readme.html":{}}}],["feature",{"_index":1458,"title":{},"body":{"todo.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-readme.html":{}}}],["features",{"_index":1067,"title":{},"body":{"changelog.html":{},"index.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-readme/ngx-editorjs-changelog.html":{}}}],["field",{"_index":233,"title":{},"body":{"interfaces/EditorJSMaterialForm.html":{},"modules/NgxEditorJSModule.html":{},"changelog.html":{},"index.html":{},"miscellaneous/variables.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-readme.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-readme/ngx-editorjs-changelog.html":{}}}],["field'},{'name",{"_index":957,"title":{},"body":{"components/NgxTinynodesMatJsonOutputComponent.html":{}}}],["field.component",{"_index":628,"title":{},"body":{"modules/NgxEditorJSModule.html":{}}}],["field.component.html",{"_index":258,"title":{},"body":{"interfaces/EditorJSMaterialForm.html":{}}}],["field.component.scss",{"_index":260,"title":{},"body":{"interfaces/EditorJSMaterialForm.html":{}}}],["field.component.ts",{"_index":211,"title":{},"body":{"interfaces/EditorJSMaterialForm.html":{},"miscellaneous/variables.html":{}}}],["field/editorjs",{"_index":210,"title":{},"body":{"interfaces/EditorJSMaterialForm.html":{},"modules/NgxEditorJSModule.html":{},"miscellaneous/variables.html":{}}}],["file",{"_index":5,"title":{},"body":{"interfaces/Block.html":{},"interfaces/BlockData.html":{},"interfaces/ChangeMap.html":{},"interfaces/CreateEditorJSOptions.html":{},"interfaces/EditorJSChange.html":{},"interfaces/EditorJSClass.html":{},"interfaces/EditorJSInstanceConfig.html":{},"interfaces/EditorJSMaterialForm.html":{},"interfaces/EditorMap.html":{},"interfaces/Header.html":{},"interfaces/HeaderBlock.html":{},"interfaces/Image.html":{},"interfaces/ImageBlock.html":{},"interfaces/InjectorApiCallOptions.html":{},"interfaces/InjectorApiCallResponse.html":{},"interfaces/InjectorMethodOption.html":{},"interfaces/List.html":{},"interfaces/ListBlock.html":{},"interfaces/NgxEditorJSConfig.html":{},"directives/NgxEditorJSDirective.html":{},"modules/NgxEditorJSModule.html":{},"interfaces/NgxEditorJSModuleConfig.html":{},"injectables/NgxEditorJSPluginService.html":{},"injectables/NgxEditorJSService.html":{},"modules/NgxEditorjsPluginsModule.html":{},"modules/NgxPluginServiceModule.html":{},"modules/NgxTinynodesComponentsModule.html":{},"interfaces/NgxTinynodesMatFieldComponent.html":{},"components/NgxTinynodesMatJsonOutputComponent.html":{},"modules/NgxTinynodesMatJsonOutputModule.html":{},"modules/NgxTinynodesMatTagInputModule.html":{},"interfaces/Paragraph.html":{},"interfaces/ParagraphBlock.html":{},"modules/PluginCodeModule.html":{},"interfaces/PluginConfig.html":{},"interfaces/PluginConfigMap.html":{},"modules/PluginHeaderModule.html":{},"modules/PluginImageModule.html":{},"modules/PluginInlineCodeModule.html":{},"modules/PluginLinkModule.html":{},"modules/PluginListModule.html":{},"modules/PluginMarkerModule.html":{},"modules/PluginParagraphModule.html":{},"modules/PluginSimpleImageModule.html":{},"interfaces/ReadyMap.html":{},"interfaces/SavedMap.html":{},"interfaces/ToolSettingsMap.html":{},"contributing.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-readme/ngx-editorjs-changelog.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-plugins-readme.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-plugins-readme/ngx-editorjs-plugins-changelog.html":{}}}],["filed",{"_index":1092,"title":{},"body":{"changelog.html":{}}}],["files",{"_index":1134,"title":{},"body":{"contributing.html":{},"license.html":{},"additional-documentation/tinynodes-library-docs.html":{}}}],["filter",{"_index":754,"title":{},"body":{"injectables/NgxEditorJSService.html":{}}}],["filter(([key",{"_index":677,"title":{},"body":{"injectables/NgxEditorJSPluginService.html":{}}}],["filter(haschanged",{"_index":838,"title":{},"body":{"injectables/NgxEditorJSService.html":{}}}],["filtering",{"_index":660,"title":{},"body":{"injectables/NgxEditorJSPluginService.html":{}}}],["finaltools",{"_index":872,"title":{},"body":{"injectables/NgxEditorJSService.html":{}}}],["find",{"_index":1025,"title":{},"body":{"changelog.html":{},"index.html":{},"additional-documentation/tinynodes-library-docs.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-readme.html":{}}}],["find(key",{"_index":557,"title":{},"body":{"directives/NgxEditorJSDirective.html":{}}}],["first",{"_index":385,"title":{},"body":{"interfaces/NgxEditorJSConfig.html":{},"directives/NgxEditorJSDirective.html":{},"interfaces/NgxEditorJSModuleConfig.html":{},"injectables/NgxEditorJSService.html":{},"changelog.html":{},"contributing.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-readme.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-readme/ngx-editorjs-changelog.html":{}}}],["fitness",{"_index":1419,"title":{},"body":{"license.html":{}}}],["fixed",{"_index":1523,"title":{},"body":{"additional-documentation/tinynodes-library-docs/ngx-editorjs-readme/ngx-editorjs-changelog.html":{}}}],["fixes",{"_index":1562,"title":{},"body":{"additional-documentation/tinynodes-library-docs/ngx-editorjs-readme/ngx-editorjs-changelog.html":{}}}],["float",{"_index":320,"title":{},"body":{"interfaces/EditorJSMaterialForm.html":{}}}],["focus",{"_index":341,"title":{},"body":{"interfaces/EditorJSMaterialForm.html":{},"interfaces/NgxEditorJSConfig.html":{},"directives/NgxEditorJSDirective.html":{},"interfaces/NgxEditorJSModuleConfig.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-readme.html":{}}}],["focused",{"_index":286,"title":{},"body":{"interfaces/EditorJSMaterialForm.html":{},"directives/NgxEditorJSDirective.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-readme.html":{}}}],["focused(focused",{"_index":290,"title":{},"body":{"interfaces/EditorJSMaterialForm.html":{}}}],["focusing",{"_index":1187,"title":{},"body":{"contributing.html":{}}}],["focusmonitor",{"_index":214,"title":{},"body":{"interfaces/EditorJSMaterialForm.html":{}}}],["folder",{"_index":1368,"title":{},"body":{"index.html":{}}}],["follow",{"_index":1118,"title":{},"body":{"contributing.html":{}}}],["following",{"_index":1404,"title":{},"body":{"license.html":{}}}],["for_root_options_token",{"_index":406,"title":{},"body":{"interfaces/NgxEditorJSConfig.html":{},"modules/NgxEditorJSModule.html":{},"interfaces/NgxEditorJSModuleConfig.html":{},"miscellaneous/variables.html":{}}}],["form",{"_index":526,"title":{},"body":{"directives/NgxEditorJSDirective.html":{},"changelog.html":{},"index.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-readme.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-readme/ngx-editorjs-changelog.html":{}}}],["format",{"_index":1514,"title":{},"body":{"additional-documentation/tinynodes-library-docs/ngx-editorjs-readme/ngx-editorjs-changelog.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-plugins-readme.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-plugins-readme/ngx-editorjs-plugins-changelog.html":{}}}],["formcontrol",{"_index":453,"title":{},"body":{"directives/NgxEditorJSDirective.html":{}}}],["forms",{"_index":447,"title":{},"body":{"directives/NgxEditorJSDirective.html":{},"changelog.html":{},"index.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-readme.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-readme/ngx-editorjs-changelog.html":{}}}],["formsmodule",{"_index":621,"title":{},"body":{"modules/NgxEditorJSModule.html":{},"modules/NgxTinynodesMatTagInputModule.html":{}}}],["formsmodule,commonmodule",{"_index":980,"title":{},"body":{"modules/NgxTinynodesMatTagInputModule.html":{}}}],["forroot",{"_index":610,"title":{},"body":{"modules/NgxEditorJSModule.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-readme.html":{}}}],["forroot(@optional",{"_index":639,"title":{},"body":{"modules/NgxEditorJSModule.html":{}}}],["forroot(config",{"_index":613,"title":{},"body":{"modules/NgxEditorJSModule.html":{}}}],["forwardref",{"_index":223,"title":{},"body":{"interfaces/EditorJSMaterialForm.html":{},"miscellaneous/variables.html":{}}}],["fostering",{"_index":1146,"title":{},"body":{"contributing.html":{}}}],["framework",{"_index":1486,"title":{},"body":{"additional-documentation/tinynodes-library-docs/ngx-editorjs-readme.html":{}}}],["free",{"_index":1153,"title":{},"body":{"contributing.html":{},"license.html":{}}}],["friendly",{"_index":1527,"title":{},"body":{"additional-documentation/tinynodes-library-docs/ngx-editorjs-readme/ngx-editorjs-changelog.html":{}}}],["full",{"_index":253,"title":{},"body":{"interfaces/EditorJSMaterialForm.html":{},"index.html":{},"todo.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-plugins-readme.html":{}}}],["fully",{"_index":1350,"title":{},"body":{"index.html":{}}}],["function",{"_index":171,"title":{},"body":{"interfaces/EditorJSClass.html":{},"interfaces/EditorJSInstanceConfig.html":{},"interfaces/InjectorApiCallOptions.html":{},"interfaces/InjectorApiCallResponse.html":{},"interfaces/InjectorMethodOption.html":{},"modules/NgxEditorJSModule.html":{},"injectables/NgxEditorJSService.html":{},"miscellaneous/functions.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-readme.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-readme/ngx-editorjs-changelog.html":{}}}],["functions",{"_index":1331,"title":{"miscellaneous/functions.html":{}},"body":{"miscellaneous/functions.html":{}}}],["furnished",{"_index":1403,"title":{},"body":{"license.html":{}}}],["further",{"_index":1262,"title":{},"body":{"contributing.html":{}}}],["future",{"_index":1505,"title":{},"body":{"additional-documentation/tinynodes-library-docs/ngx-editorjs-readme.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-plugins-readme.html":{}}}],["gender",{"_index":1162,"title":{},"body":{"contributing.html":{}}}],["general",{"_index":1377,"title":{},"body":{"license.html":{},"todo.html":{}}}],["generate",{"_index":1548,"title":{},"body":{"additional-documentation/tinynodes-library-docs/ngx-editorjs-readme/ngx-editorjs-changelog.html":{}}}],["generated",{"_index":1374,"title":{},"body":{"index.html":{},"additional-documentation/tinynodes-library-docs.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-readme/ngx-editorjs-changelog.html":{}}}],["geteditor",{"_index":512,"title":{},"body":{"directives/NgxEditorJSDirective.html":{},"injectables/NgxEditorJSService.html":{}}}],["geteditor(options",{"_index":733,"title":{},"body":{"injectables/NgxEditorJSService.html":{}}}],["getelement",{"_index":515,"title":{},"body":{"directives/NgxEditorJSDirective.html":{}}}],["getplugin",{"_index":648,"title":{},"body":{"injectables/NgxEditorJSPluginService.html":{}}}],["getplugin(key",{"_index":654,"title":{},"body":{"injectables/NgxEditorJSPluginService.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-plugins-readme.html":{}}}],["getplugins",{"_index":649,"title":{},"body":{"injectables/NgxEditorJSPluginService.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-plugins-readme.html":{}}}],["getpluginswithexclude",{"_index":650,"title":{},"body":{"injectables/NgxEditorJSPluginService.html":{}}}],["getpluginswithexclude(excludelist",{"_index":658,"title":{},"body":{"injectables/NgxEditorJSPluginService.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-plugins-readme.html":{}}}],["getpluginswithinclude",{"_index":651,"title":{},"body":{"injectables/NgxEditorJSPluginService.html":{}}}],["getpluginswithinclude(includelist",{"_index":663,"title":{},"body":{"injectables/NgxEditorJSPluginService.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-plugins-readme.html":{}}}],["gets",{"_index":319,"title":{},"body":{"interfaces/EditorJSMaterialForm.html":{},"directives/NgxEditorJSDirective.html":{},"injectables/NgxEditorJSService.html":{}}}],["getservice",{"_index":517,"title":{},"body":{"directives/NgxEditorJSDirective.html":{}}}],["getters",{"_index":1567,"title":{},"body":{"additional-documentation/tinynodes-library-docs/ngx-editorjs-readme/ngx-editorjs-changelog.html":{}}}],["getting",{"_index":1020,"title":{"changelog.html":{},"contributing.html":{},"index.html":{},"license.html":{},"todo.html":{}},"body":{"changelog.html":{}}}],["gettools(excudetools",{"_index":869,"title":{},"body":{"injectables/NgxEditorJSService.html":{}}}],["gettouched",{"_index":519,"title":{},"body":{"directives/NgxEditorJSDirective.html":{}}}],["github",{"_index":983,"title":{},"body":{"modules/PluginCodeModule.html":{},"modules/PluginHeaderModule.html":{},"modules/PluginImageModule.html":{},"modules/PluginInlineCodeModule.html":{},"modules/PluginLinkModule.html":{},"modules/PluginListModule.html":{},"modules/PluginMarkerModule.html":{},"modules/PluginParagraphModule.html":{},"modules/PluginSimpleImageModule.html":{},"additional-documentation/tinynodes-library-docs.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-readme.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-plugins-readme.html":{}}}],["good",{"_index":1107,"title":{},"body":{"changelog.html":{},"contributing.html":{}}}],["gracefully",{"_index":1183,"title":{},"body":{"contributing.html":{}}}],["granted",{"_index":1382,"title":{},"body":{"license.html":{}}}],["graph",{"_index":1437,"title":{},"body":{"modules.html":{}}}],["hammerjs",{"_index":1317,"title":{},"body":{"dependencies.html":{}}}],["handle",{"_index":1073,"title":{},"body":{"changelog.html":{}}}],["handles",{"_index":683,"title":{},"body":{"injectables/NgxEditorJSService.html":{},"index.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-readme/ngx-editorjs-changelog.html":{}}}],["handling",{"_index":645,"title":{},"body":{"injectables/NgxEditorJSPluginService.html":{},"changelog.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-plugins-readme/ngx-editorjs-plugins-changelog.html":{}}}],["happens",{"_index":692,"title":{},"body":{"injectables/NgxEditorJSService.html":{}}}],["harassing",{"_index":1266,"title":{},"body":{"contributing.html":{}}}],["harassment",{"_index":1152,"title":{},"body":{"contributing.html":{}}}],["harmful",{"_index":1243,"title":{},"body":{"contributing.html":{}}}],["haschanged",{"_index":429,"title":{},"body":{"directives/NgxEditorJSDirective.html":{},"injectables/NgxEditorJSService.html":{}}}],["hassaved",{"_index":430,"title":{},"body":{"directives/NgxEditorJSDirective.html":{},"injectables/NgxEditorJSService.html":{}}}],["hassaved(options",{"_index":735,"title":{},"body":{"injectables/NgxEditorJSService.html":{}}}],["hassavedmap",{"_index":189,"title":{},"body":{"interfaces/EditorJSClass.html":{},"interfaces/EditorJSInstanceConfig.html":{},"interfaces/InjectorApiCallOptions.html":{},"interfaces/InjectorApiCallResponse.html":{},"interfaces/InjectorMethodOption.html":{},"injectables/NgxEditorJSService.html":{},"miscellaneous/variables.html":{}}}],["header",{"_index":43,"title":{"interfaces/Header.html":{}},"body":{"interfaces/Block.html":{},"interfaces/Header.html":{},"interfaces/HeaderBlock.html":{},"interfaces/Image.html":{},"interfaces/ImageBlock.html":{},"interfaces/List.html":{},"interfaces/ListBlock.html":{},"interfaces/Paragraph.html":{},"interfaces/ParagraphBlock.html":{},"modules/PluginHeaderModule.html":{},"dependencies.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-readme.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-readme/ngx-editorjs-changelog.html":{}}}],["headerblock",{"_index":48,"title":{"interfaces/HeaderBlock.html":{}},"body":{"interfaces/Block.html":{},"interfaces/Header.html":{},"interfaces/HeaderBlock.html":{},"interfaces/Image.html":{},"interfaces/ImageBlock.html":{},"interfaces/List.html":{},"interfaces/ListBlock.html":{},"interfaces/Paragraph.html":{},"interfaces/ParagraphBlock.html":{},"miscellaneous/typealiases.html":{}}}],["height",{"_index":392,"title":{},"body":{"interfaces/NgxEditorJSConfig.html":{},"directives/NgxEditorJSDirective.html":{},"interfaces/NgxEditorJSModuleConfig.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-readme.html":{}}}],["helper",{"_index":712,"title":{},"body":{"injectables/NgxEditorJSService.html":{}}}],["helpers",{"_index":1451,"title":{},"body":{"todo.html":{}}}],["here",{"_index":1480,"title":{},"body":{"additional-documentation/tinynodes-library-docs.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-plugins-readme.html":{}}}],["hereby",{"_index":1381,"title":{},"body":{"license.html":{}}}],["hideable",{"_index":1320,"title":{},"body":{"dependencies.html":{}}}],["hides",{"_index":1509,"title":{},"body":{"additional-documentation/tinynodes-library-docs/ngx-editorjs-readme.html":{}}}],["hidetoolbar",{"_index":379,"title":{},"body":{"interfaces/NgxEditorJSConfig.html":{},"directives/NgxEditorJSDirective.html":{},"interfaces/NgxEditorJSModuleConfig.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-readme.html":{}}}],["hold",{"_index":391,"title":{},"body":{"interfaces/NgxEditorJSConfig.html":{},"interfaces/NgxEditorJSModuleConfig.html":{}}}],["holder",{"_index":175,"title":{},"body":{"interfaces/EditorJSClass.html":{},"interfaces/EditorJSInstanceConfig.html":{},"interfaces/InjectorApiCallOptions.html":{},"interfaces/InjectorApiCallResponse.html":{},"interfaces/InjectorMethodOption.html":{},"interfaces/NgxEditorJSConfig.html":{},"directives/NgxEditorJSDirective.html":{},"interfaces/NgxEditorJSModuleConfig.html":{},"injectables/NgxEditorJSService.html":{},"miscellaneous/variables.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-readme.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-readme/ngx-editorjs-changelog.html":{}}}],["holders",{"_index":1424,"title":{},"body":{"license.html":{}}}],["host",{"_index":315,"title":{},"body":{"interfaces/EditorJSMaterialForm.html":{},"directives/NgxEditorJSDirective.html":{}}}],["hostbinding",{"_index":224,"title":{},"body":{"interfaces/EditorJSMaterialForm.html":{}}}],["hostbinding('attr.aria",{"_index":326,"title":{},"body":{"interfaces/EditorJSMaterialForm.html":{}}}],["hostbinding('class.floating",{"_index":321,"title":{},"body":{"interfaces/EditorJSMaterialForm.html":{}}}],["hostlistener",{"_index":521,"title":{},"body":{"directives/NgxEditorJSDirective.html":{}}}],["hostlistener('click",{"_index":531,"title":{},"body":{"directives/NgxEditorJSDirective.html":{}}}],["hostlisteners",{"_index":434,"title":{},"body":{"directives/NgxEditorJSDirective.html":{}}}],["html",{"_index":476,"title":{},"body":{"directives/NgxEditorJSDirective.html":{},"components/NgxTinynodesMatJsonOutputComponent.html":{}}}],["http://contributor",{"_index":1300,"title":{},"body":{"contributing.html":{}}}],["https://angular.io/api/core/ngmodule",{"_index":670,"title":{},"body":{"injectables/NgxEditorJSPluginService.html":{}}}],["https://angular.io/api/core/ngzone",{"_index":761,"title":{},"body":{"injectables/NgxEditorJSService.html":{}}}],["https://angular.io/guide/observables",{"_index":762,"title":{},"body":{"injectables/NgxEditorJSService.html":{}}}],["https://editorjs.io/api",{"_index":760,"title":{},"body":{"injectables/NgxEditorJSService.html":{}}}],["https://github.com/editor",{"_index":668,"title":{},"body":{"injectables/NgxEditorJSPluginService.html":{}}}],["i'll",{"_index":1102,"title":{},"body":{"changelog.html":{}}}],["i'm",{"_index":1071,"title":{},"body":{"changelog.html":{}}}],["i've",{"_index":1072,"title":{},"body":{"changelog.html":{}}}],["id",{"_index":265,"title":{},"body":{"interfaces/EditorJSMaterialForm.html":{},"interfaces/NgxEditorJSConfig.html":{},"directives/NgxEditorJSDirective.html":{},"interfaces/NgxEditorJSModuleConfig.html":{},"injectables/NgxEditorJSService.html":{},"miscellaneous/variables.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-readme.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-readme/ngx-editorjs-changelog.html":{}}}],["identity",{"_index":1163,"title":{},"body":{"contributing.html":{}}}],["ids",{"_index":328,"title":{},"body":{"interfaces/EditorJSMaterialForm.html":{}}}],["ids.join",{"_index":332,"title":{},"body":{"interfaces/EditorJSMaterialForm.html":{}}}],["ignore",{"_index":554,"title":{},"body":{"directives/NgxEditorJSDirective.html":{}}}],["image",{"_index":49,"title":{"interfaces/Image.html":{}},"body":{"interfaces/Block.html":{},"interfaces/Header.html":{},"interfaces/HeaderBlock.html":{},"interfaces/Image.html":{},"interfaces/ImageBlock.html":{},"interfaces/List.html":{},"interfaces/ListBlock.html":{},"interfaces/Paragraph.html":{},"interfaces/ParagraphBlock.html":{},"modules/PluginImageModule.html":{},"modules/PluginSimpleImageModule.html":{}}}],["image.module",{"_index":906,"title":{},"body":{"modules/NgxEditorjsPluginsModule.html":{}}}],["image.module.ts",{"_index":1013,"title":{},"body":{"modules/PluginSimpleImageModule.html":{}}}],["image/simple",{"_index":905,"title":{},"body":{"modules/NgxEditorjsPluginsModule.html":{},"modules/PluginSimpleImageModule.html":{}}}],["imageblock",{"_index":61,"title":{"interfaces/ImageBlock.html":{}},"body":{"interfaces/Block.html":{},"interfaces/Header.html":{},"interfaces/HeaderBlock.html":{},"interfaces/Image.html":{},"interfaces/ImageBlock.html":{},"interfaces/List.html":{},"interfaces/ListBlock.html":{},"interfaces/Paragraph.html":{},"interfaces/ParagraphBlock.html":{},"miscellaneous/typealiases.html":{}}}],["imagery",{"_index":1196,"title":{},"body":{"contributing.html":{}}}],["implementation",{"_index":254,"title":{},"body":{"interfaces/EditorJSMaterialForm.html":{}}}],["implemented",{"_index":1490,"title":{},"body":{"additional-documentation/tinynodes-library-docs/ngx-editorjs-readme.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-plugins-readme.html":{}}}],["implements",{"_index":264,"title":{},"body":{"interfaces/EditorJSMaterialForm.html":{},"directives/NgxEditorJSDirective.html":{},"components/NgxTinynodesMatJsonOutputComponent.html":{}}}],["implied",{"_index":1415,"title":{},"body":{"license.html":{}}}],["import",{"_index":70,"title":{},"body":{"interfaces/BlockData.html":{},"interfaces/ChangeMap.html":{},"interfaces/CreateEditorJSOptions.html":{},"interfaces/EditorJSChange.html":{},"interfaces/EditorJSClass.html":{},"interfaces/EditorJSInstanceConfig.html":{},"interfaces/EditorJSMaterialForm.html":{},"interfaces/EditorMap.html":{},"interfaces/InjectorApiCallOptions.html":{},"interfaces/InjectorApiCallResponse.html":{},"interfaces/InjectorMethodOption.html":{},"interfaces/NgxEditorJSConfig.html":{},"directives/NgxEditorJSDirective.html":{},"modules/NgxEditorJSModule.html":{},"interfaces/NgxEditorJSModuleConfig.html":{},"injectables/NgxEditorJSPluginService.html":{},"injectables/NgxEditorJSService.html":{},"modules/NgxEditorjsPluginsModule.html":{},"modules/NgxPluginServiceModule.html":{},"modules/NgxTinynodesComponentsModule.html":{},"interfaces/NgxTinynodesMatFieldComponent.html":{},"components/NgxTinynodesMatJsonOutputComponent.html":{},"modules/NgxTinynodesMatJsonOutputModule.html":{},"modules/NgxTinynodesMatTagInputModule.html":{},"modules/PluginCodeModule.html":{},"interfaces/PluginConfig.html":{},"interfaces/PluginConfigMap.html":{},"modules/PluginHeaderModule.html":{},"modules/PluginImageModule.html":{},"modules/PluginInlineCodeModule.html":{},"modules/PluginLinkModule.html":{},"modules/PluginListModule.html":{},"modules/PluginMarkerModule.html":{},"modules/PluginParagraphModule.html":{},"modules/PluginSimpleImageModule.html":{},"interfaces/ReadyMap.html":{},"interfaces/SavedMap.html":{},"interfaces/ToolSettingsMap.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-readme.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-readme/ngx-editorjs-changelog.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-plugins-readme.html":{}}}],["important",{"_index":1583,"title":{},"body":{"additional-documentation/tinynodes-library-docs/ngx-editorjs-plugins-readme.html":{}}}],["imported",{"_index":1363,"title":{},"body":{"index.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-readme/ngx-editorjs-changelog.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-plugins-readme.html":{}}}],["importing",{"_index":894,"title":{},"body":{"modules/NgxEditorjsPluginsModule.html":{}}}],["imports",{"_index":612,"title":{},"body":{"modules/NgxEditorJSModule.html":{},"modules/NgxEditorjsPluginsModule.html":{},"modules/NgxTinynodesComponentsModule.html":{},"modules/NgxTinynodesMatJsonOutputModule.html":{},"modules/NgxTinynodesMatTagInputModule.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-readme.html":{}}}],["improved",{"_index":1060,"title":{},"body":{"changelog.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-readme/ngx-editorjs-changelog.html":{}}}],["improvements",{"_index":1050,"title":{},"body":{"changelog.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-readme/ngx-editorjs-changelog.html":{}}}],["inappropriate",{"_index":1213,"title":{},"body":{"contributing.html":{}}}],["incident",{"_index":1282,"title":{},"body":{"contributing.html":{}}}],["include",{"_index":158,"title":{},"body":{"interfaces/CreateEditorJSOptions.html":{},"injectables/NgxEditorJSPluginService.html":{},"modules/NgxEditorjsPluginsModule.html":{},"contributing.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-readme.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-readme/ngx-editorjs-changelog.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-plugins-readme.html":{}}}],["included",{"_index":1409,"title":{},"body":{"license.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-readme/ngx-editorjs-changelog.html":{}}}],["includelist",{"_index":665,"title":{},"body":{"injectables/NgxEditorJSPluginService.html":{}}}],["includelist.includes(key",{"_index":681,"title":{},"body":{"injectables/NgxEditorJSPluginService.html":{}}}],["includes",{"_index":1125,"title":{},"body":{"contributing.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-readme/ngx-editorjs-changelog.html":{}}}],["includetools",{"_index":556,"title":{},"body":{"directives/NgxEditorJSDirective.html":{}}}],["including",{"_index":1391,"title":{},"body":{"license.html":{}}}],["inclusive",{"_index":1176,"title":{},"body":{"contributing.html":{}}}],["increase",{"_index":1131,"title":{},"body":{"contributing.html":{}}}],["index",{"_index":12,"title":{"index.html":{}},"body":{"interfaces/Block.html":{},"interfaces/CreateEditorJSOptions.html":{},"interfaces/EditorJSChange.html":{},"interfaces/EditorJSClass.html":{},"interfaces/EditorJSInstanceConfig.html":{},"interfaces/Header.html":{},"interfaces/HeaderBlock.html":{},"interfaces/Image.html":{},"interfaces/ImageBlock.html":{},"interfaces/InjectorApiCallOptions.html":{},"interfaces/InjectorApiCallResponse.html":{},"interfaces/InjectorMethodOption.html":{},"interfaces/List.html":{},"interfaces/ListBlock.html":{},"interfaces/NgxEditorJSConfig.html":{},"directives/NgxEditorJSDirective.html":{},"interfaces/NgxEditorJSModuleConfig.html":{},"injectables/NgxEditorJSPluginService.html":{},"injectables/NgxEditorJSService.html":{},"components/NgxTinynodesMatJsonOutputComponent.html":{},"interfaces/Paragraph.html":{},"interfaces/ParagraphBlock.html":{},"interfaces/PluginConfig.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["indexable",{"_index":15,"title":{},"body":{"interfaces/Block.html":{},"interfaces/BlockData.html":{},"interfaces/ChangeMap.html":{},"interfaces/EditorMap.html":{},"interfaces/PluginConfigMap.html":{},"interfaces/ReadyMap.html":{},"interfaces/SavedMap.html":{},"interfaces/ToolSettingsMap.html":{}}}],["individual",{"_index":896,"title":{},"body":{"modules/NgxEditorjsPluginsModule.html":{},"contributing.html":{}}}],["info",{"_index":3,"title":{},"body":{"interfaces/Block.html":{},"interfaces/BlockData.html":{},"interfaces/ChangeMap.html":{},"interfaces/CreateEditorJSOptions.html":{},"interfaces/EditorJSChange.html":{},"interfaces/EditorJSClass.html":{},"interfaces/EditorJSInstanceConfig.html":{},"interfaces/EditorJSMaterialForm.html":{},"interfaces/EditorMap.html":{},"interfaces/Header.html":{},"interfaces/HeaderBlock.html":{},"interfaces/Image.html":{},"interfaces/ImageBlock.html":{},"interfaces/InjectorApiCallOptions.html":{},"interfaces/InjectorApiCallResponse.html":{},"interfaces/InjectorMethodOption.html":{},"interfaces/List.html":{},"interfaces/ListBlock.html":{},"interfaces/NgxEditorJSConfig.html":{},"directives/NgxEditorJSDirective.html":{},"modules/NgxEditorJSModule.html":{},"interfaces/NgxEditorJSModuleConfig.html":{},"injectables/NgxEditorJSPluginService.html":{},"injectables/NgxEditorJSService.html":{},"modules/NgxEditorjsPluginsModule.html":{},"modules/NgxPluginServiceModule.html":{},"modules/NgxTinynodesComponentsModule.html":{},"interfaces/NgxTinynodesMatFieldComponent.html":{},"components/NgxTinynodesMatJsonOutputComponent.html":{},"modules/NgxTinynodesMatJsonOutputModule.html":{},"modules/NgxTinynodesMatTagInputModule.html":{},"interfaces/Paragraph.html":{},"interfaces/ParagraphBlock.html":{},"modules/PluginCodeModule.html":{},"interfaces/PluginConfig.html":{},"interfaces/PluginConfigMap.html":{},"modules/PluginHeaderModule.html":{},"modules/PluginImageModule.html":{},"modules/PluginInlineCodeModule.html":{},"modules/PluginLinkModule.html":{},"modules/PluginListModule.html":{},"modules/PluginMarkerModule.html":{},"modules/PluginParagraphModule.html":{},"modules/PluginSimpleImageModule.html":{},"interfaces/ReadyMap.html":{},"interfaces/SavedMap.html":{},"interfaces/ToolSettingsMap.html":{}}}],["information",{"_index":170,"title":{},"body":{"interfaces/EditorJSClass.html":{},"interfaces/EditorJSInstanceConfig.html":{},"interfaces/InjectorApiCallOptions.html":{},"interfaces/InjectorApiCallResponse.html":{},"interfaces/InjectorMethodOption.html":{},"injectables/NgxEditorJSService.html":{},"contributing.html":{},"index.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-readme.html":{}}}],["initial",{"_index":112,"title":{},"body":{"interfaces/BlockData.html":{},"interfaces/NgxEditorJSConfig.html":{},"directives/NgxEditorJSDirective.html":{},"interfaces/NgxEditorJSModuleConfig.html":{},"interfaces/PluginConfig.html":{},"interfaces/PluginConfigMap.html":{},"interfaces/ToolSettingsMap.html":{},"miscellaneous/variables.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-readme.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-readme/ngx-editorjs-changelog.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-plugins-readme/ngx-editorjs-plugins-changelog.html":{}}}],["initialblock",{"_index":380,"title":{},"body":{"interfaces/NgxEditorJSConfig.html":{},"directives/NgxEditorJSDirective.html":{},"interfaces/NgxEditorJSModuleConfig.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-readme.html":{}}}],["initialised",{"_index":1581,"title":{},"body":{"additional-documentation/tinynodes-library-docs/ngx-editorjs-plugins-readme.html":{}}}],["initialized",{"_index":445,"title":{},"body":{"directives/NgxEditorJSDirective.html":{},"injectables/NgxEditorJSService.html":{}}}],["inject",{"_index":647,"title":{},"body":{"injectables/NgxEditorJSPluginService.html":{},"injectables/NgxEditorJSService.html":{}}}],["inject(editorjsinstance",{"_index":765,"title":{},"body":{"injectables/NgxEditorJSService.html":{}}}],["inject(ngx_editorjs_config",{"_index":766,"title":{},"body":{"injectables/NgxEditorJSService.html":{}}}],["injectable",{"_index":640,"title":{"injectables/NgxEditorJSPluginService.html":{},"injectables/NgxEditorJSService.html":{}},"body":{"injectables/NgxEditorJSPluginService.html":{},"injectables/NgxEditorJSService.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-readme/ngx-editorjs-changelog.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-plugins-readme/ngx-editorjs-plugins-changelog.html":{}}}],["injectables",{"_index":642,"title":{},"body":{"injectables/NgxEditorJSPluginService.html":{},"injectables/NgxEditorJSService.html":{},"overview.html":{}}}],["injected",{"_index":161,"title":{},"body":{"interfaces/EditorJSClass.html":{},"interfaces/EditorJSInstanceConfig.html":{},"interfaces/InjectorApiCallOptions.html":{},"interfaces/InjectorApiCallResponse.html":{},"interfaces/InjectorMethodOption.html":{},"interfaces/NgxEditorJSConfig.html":{},"interfaces/NgxEditorJSModuleConfig.html":{},"injectables/NgxEditorJSPluginService.html":{},"injectables/NgxEditorJSService.html":{},"index.html":{},"miscellaneous/variables.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-readme.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-plugins-readme/ngx-editorjs-plugins-changelog.html":{}}}],["injecting",{"_index":404,"title":{},"body":{"interfaces/NgxEditorJSConfig.html":{},"interfaces/NgxEditorJSModuleConfig.html":{},"changelog.html":{},"miscellaneous/variables.html":{}}}],["injection",{"_index":110,"title":{},"body":{"interfaces/BlockData.html":{},"interfaces/EditorJSClass.html":{},"interfaces/EditorJSInstanceConfig.html":{},"interfaces/InjectorApiCallOptions.html":{},"interfaces/InjectorApiCallResponse.html":{},"interfaces/InjectorMethodOption.html":{},"interfaces/NgxEditorJSConfig.html":{},"interfaces/NgxEditorJSModuleConfig.html":{},"interfaces/PluginConfig.html":{},"interfaces/PluginConfigMap.html":{},"interfaces/ToolSettingsMap.html":{},"miscellaneous/variables.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-readme/ngx-editorjs-changelog.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-plugins-readme.html":{}}}],["injectiontoken",{"_index":71,"title":{},"body":{"interfaces/BlockData.html":{},"interfaces/EditorJSClass.html":{},"interfaces/EditorJSInstanceConfig.html":{},"interfaces/InjectorApiCallOptions.html":{},"interfaces/InjectorApiCallResponse.html":{},"interfaces/InjectorMethodOption.html":{},"interfaces/NgxEditorJSConfig.html":{},"interfaces/NgxEditorJSModuleConfig.html":{},"interfaces/PluginConfig.html":{},"interfaces/PluginConfigMap.html":{},"interfaces/ToolSettingsMap.html":{}}}],["injectiontoken('editior_js_instance",{"_index":410,"title":{},"body":{"interfaces/NgxEditorJSConfig.html":{},"interfaces/NgxEditorJSModuleConfig.html":{},"miscellaneous/variables.html":{}}}],["injectiontoken('editor_js_tool_injector",{"_index":118,"title":{},"body":{"interfaces/BlockData.html":{},"interfaces/PluginConfig.html":{},"interfaces/PluginConfigMap.html":{},"interfaces/ToolSettingsMap.html":{},"miscellaneous/variables.html":{}}}],["injectiontoken('editorjs_module_import",{"_index":191,"title":{},"body":{"interfaces/EditorJSClass.html":{},"interfaces/EditorJSInstanceConfig.html":{},"interfaces/InjectorApiCallOptions.html":{},"interfaces/InjectorApiCallResponse.html":{},"interfaces/InjectorMethodOption.html":{},"miscellaneous/variables.html":{}}}],["injectiontoken('editorjsinstance",{"_index":194,"title":{},"body":{"interfaces/EditorJSClass.html":{},"interfaces/EditorJSInstanceConfig.html":{},"interfaces/InjectorApiCallOptions.html":{},"interfaces/InjectorApiCallResponse.html":{},"interfaces/InjectorMethodOption.html":{},"miscellaneous/variables.html":{}}}],["injectiontoken('for_root_options_token",{"_index":407,"title":{},"body":{"interfaces/NgxEditorJSConfig.html":{},"interfaces/NgxEditorJSModuleConfig.html":{},"miscellaneous/variables.html":{}}}],["injectiontoken('ngx_editorjs_config",{"_index":403,"title":{},"body":{"interfaces/NgxEditorJSConfig.html":{},"interfaces/NgxEditorJSModuleConfig.html":{},"miscellaneous/variables.html":{}}}],["injectiontoken('plugin_config",{"_index":121,"title":{},"body":{"interfaces/BlockData.html":{},"interfaces/PluginConfig.html":{},"interfaces/PluginConfigMap.html":{},"interfaces/ToolSettingsMap.html":{},"miscellaneous/variables.html":{}}}],["injectiontoken('pluginclasses",{"_index":126,"title":{},"body":{"interfaces/BlockData.html":{},"interfaces/PluginConfig.html":{},"interfaces/PluginConfigMap.html":{},"interfaces/ToolSettingsMap.html":{},"miscellaneous/variables.html":{}}}],["injector",{"_index":192,"title":{},"body":{"interfaces/EditorJSClass.html":{},"interfaces/EditorJSInstanceConfig.html":{},"interfaces/InjectorApiCallOptions.html":{},"interfaces/InjectorApiCallResponse.html":{},"interfaces/InjectorMethodOption.html":{},"changelog.html":{},"miscellaneous/variables.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-readme/ngx-editorjs-changelog.html":{}}}],["injectorapicalloptions",{"_index":202,"title":{"interfaces/InjectorApiCallOptions.html":{}},"body":{"interfaces/EditorJSClass.html":{},"interfaces/EditorJSInstanceConfig.html":{},"interfaces/InjectorApiCallOptions.html":{},"interfaces/InjectorApiCallResponse.html":{},"interfaces/InjectorMethodOption.html":{},"injectables/NgxEditorJSService.html":{}}}],["injectorapicallresponse",{"_index":205,"title":{"interfaces/InjectorApiCallResponse.html":{}},"body":{"interfaces/EditorJSClass.html":{},"interfaces/EditorJSInstanceConfig.html":{},"interfaces/InjectorApiCallOptions.html":{},"interfaces/InjectorApiCallResponse.html":{},"interfaces/InjectorMethodOption.html":{},"injectables/NgxEditorJSService.html":{}}}],["injectormethodoption",{"_index":195,"title":{"interfaces/InjectorMethodOption.html":{}},"body":{"interfaces/EditorJSClass.html":{},"interfaces/EditorJSInstanceConfig.html":{},"interfaces/InjectorApiCallOptions.html":{},"interfaces/InjectorApiCallResponse.html":{},"interfaces/InjectorMethodOption.html":{},"injectables/NgxEditorJSService.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-readme/ngx-editorjs-changelog.html":{}}}],["inline",{"_index":80,"title":{},"body":{"interfaces/BlockData.html":{},"injectables/NgxEditorJSService.html":{},"modules/NgxEditorjsPluginsModule.html":{},"interfaces/PluginConfig.html":{},"interfaces/PluginConfigMap.html":{},"modules/PluginInlineCodeModule.html":{},"interfaces/ToolSettingsMap.html":{},"miscellaneous/enumerations.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-readme/ngx-editorjs-changelog.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-plugins-readme.html":{}}}],["inlinecode",{"_index":999,"title":{},"body":{"modules/PluginInlineCodeModule.html":{}}}],["inlinetoolbar",{"_index":875,"title":{},"body":{"injectables/NgxEditorJSService.html":{}}}],["input",{"_index":225,"title":{},"body":{"interfaces/EditorJSMaterialForm.html":{},"directives/NgxEditorJSDirective.html":{},"components/NgxTinynodesMatJsonOutputComponent.html":{},"todo.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-readme/ngx-editorjs-changelog.html":{}}}],["input('disabled",{"_index":302,"title":{},"body":{"interfaces/EditorJSMaterialForm.html":{}}}],["input('focused",{"_index":289,"title":{},"body":{"interfaces/EditorJSMaterialForm.html":{}}}],["input('placeholder",{"_index":284,"title":{},"body":{"interfaces/EditorJSMaterialForm.html":{}}}],["input('required",{"_index":296,"title":{},"body":{"interfaces/EditorJSMaterialForm.html":{}}}],["input('value",{"_index":277,"title":{},"body":{"interfaces/EditorJSMaterialForm.html":{}}}],["input.component",{"_index":977,"title":{},"body":{"modules/NgxTinynodesMatTagInputModule.html":{}}}],["input.component.ts",{"_index":1472,"title":{},"body":{"miscellaneous/variables.html":{}}}],["input.module",{"_index":930,"title":{},"body":{"modules/NgxTinynodesComponentsModule.html":{}}}],["input.module.ts",{"_index":976,"title":{},"body":{"modules/NgxTinynodesMatTagInputModule.html":{}}}],["input/mat",{"_index":929,"title":{},"body":{"modules/NgxTinynodesComponentsModule.html":{},"modules/NgxTinynodesMatTagInputModule.html":{},"miscellaneous/variables.html":{}}}],["inputconfig",{"_index":1340,"title":{},"body":{"miscellaneous/functions.html":{}}}],["inputs",{"_index":427,"title":{},"body":{"directives/NgxEditorJSDirective.html":{},"components/NgxTinynodesMatJsonOutputComponent.html":{}}}],["inside",{"_index":356,"title":{},"body":{"interfaces/EditorJSMaterialForm.html":{},"directives/NgxEditorJSDirective.html":{},"index.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-readme.html":{}}}],["install",{"_index":1121,"title":{},"body":{"contributing.html":{},"dependencies.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-readme.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-plugins-readme.html":{}}}],["installed",{"_index":1493,"title":{},"body":{"additional-documentation/tinynodes-library-docs/ngx-editorjs-readme.html":{}}}],["installing",{"_index":1491,"title":{},"body":{"additional-documentation/tinynodes-library-docs/ngx-editorjs-readme.html":{}}}],["instance",{"_index":133,"title":{},"body":{"interfaces/ChangeMap.html":{},"interfaces/EditorJSChange.html":{},"interfaces/EditorJSClass.html":{},"interfaces/EditorJSInstanceConfig.html":{},"interfaces/EditorJSMaterialForm.html":{},"interfaces/EditorMap.html":{},"interfaces/InjectorApiCallOptions.html":{},"interfaces/InjectorApiCallResponse.html":{},"interfaces/InjectorMethodOption.html":{},"interfaces/NgxEditorJSConfig.html":{},"directives/NgxEditorJSDirective.html":{},"modules/NgxEditorJSModule.html":{},"interfaces/NgxEditorJSModuleConfig.html":{},"injectables/NgxEditorJSService.html":{},"components/NgxTinynodesMatJsonOutputComponent.html":{},"interfaces/ReadyMap.html":{},"interfaces/SavedMap.html":{},"changelog.html":{},"index.html":{},"miscellaneous/variables.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-readme.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-readme/ngx-editorjs-changelog.html":{}}}],["instances",{"_index":138,"title":{},"body":{"interfaces/ChangeMap.html":{},"interfaces/EditorJSChange.html":{},"interfaces/EditorMap.html":{},"injectables/NgxEditorJSService.html":{},"interfaces/ReadyMap.html":{},"interfaces/SavedMap.html":{},"changelog.html":{},"contributing.html":{},"index.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-readme.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-readme/ngx-editorjs-changelog.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-plugins-readme.html":{}}}],["insulting/derogatory",{"_index":1201,"title":{},"body":{"contributing.html":{}}}],["interact",{"_index":1360,"title":{},"body":{"index.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-readme.html":{}}}],["interactions",{"_index":1119,"title":{},"body":{"contributing.html":{}}}],["interest",{"_index":1145,"title":{},"body":{"contributing.html":{}}}],["interface",{"_index":0,"title":{"interfaces/Block.html":{},"interfaces/BlockData.html":{},"interfaces/ChangeMap.html":{},"interfaces/CreateEditorJSOptions.html":{},"interfaces/EditorJSChange.html":{},"interfaces/EditorJSClass.html":{},"interfaces/EditorJSInstanceConfig.html":{},"interfaces/EditorJSMaterialForm.html":{},"interfaces/EditorMap.html":{},"interfaces/Header.html":{},"interfaces/HeaderBlock.html":{},"interfaces/Image.html":{},"interfaces/ImageBlock.html":{},"interfaces/InjectorApiCallOptions.html":{},"interfaces/InjectorApiCallResponse.html":{},"interfaces/InjectorMethodOption.html":{},"interfaces/List.html":{},"interfaces/ListBlock.html":{},"interfaces/NgxEditorJSConfig.html":{},"interfaces/NgxEditorJSModuleConfig.html":{},"interfaces/NgxTinynodesMatFieldComponent.html":{},"interfaces/Paragraph.html":{},"interfaces/ParagraphBlock.html":{},"interfaces/PluginConfig.html":{},"interfaces/PluginConfigMap.html":{},"interfaces/ReadyMap.html":{},"interfaces/SavedMap.html":{},"interfaces/ToolSettingsMap.html":{}},"body":{"interfaces/Block.html":{},"interfaces/BlockData.html":{},"interfaces/ChangeMap.html":{},"interfaces/CreateEditorJSOptions.html":{},"interfaces/EditorJSChange.html":{},"interfaces/EditorJSClass.html":{},"interfaces/EditorJSInstanceConfig.html":{},"interfaces/EditorJSMaterialForm.html":{},"interfaces/EditorMap.html":{},"interfaces/Header.html":{},"interfaces/HeaderBlock.html":{},"interfaces/Image.html":{},"interfaces/ImageBlock.html":{},"interfaces/InjectorApiCallOptions.html":{},"interfaces/InjectorApiCallResponse.html":{},"interfaces/InjectorMethodOption.html":{},"interfaces/List.html":{},"interfaces/ListBlock.html":{},"interfaces/NgxEditorJSConfig.html":{},"interfaces/NgxEditorJSModuleConfig.html":{},"interfaces/NgxTinynodesMatFieldComponent.html":{},"interfaces/Paragraph.html":{},"interfaces/ParagraphBlock.html":{},"interfaces/PluginConfig.html":{},"interfaces/PluginConfigMap.html":{},"interfaces/ReadyMap.html":{},"interfaces/SavedMap.html":{},"interfaces/ToolSettingsMap.html":{},"changelog.html":{},"contributing.html":{},"index.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-readme.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-readme/ngx-editorjs-changelog.html":{}}}],["interfaces",{"_index":2,"title":{},"body":{"interfaces/Block.html":{},"interfaces/BlockData.html":{},"interfaces/ChangeMap.html":{},"interfaces/CreateEditorJSOptions.html":{},"interfaces/EditorJSChange.html":{},"interfaces/EditorJSClass.html":{},"interfaces/EditorJSInstanceConfig.html":{},"interfaces/EditorJSMaterialForm.html":{},"interfaces/EditorMap.html":{},"interfaces/Header.html":{},"interfaces/HeaderBlock.html":{},"interfaces/Image.html":{},"interfaces/ImageBlock.html":{},"interfaces/InjectorApiCallOptions.html":{},"interfaces/InjectorApiCallResponse.html":{},"interfaces/InjectorMethodOption.html":{},"interfaces/List.html":{},"interfaces/ListBlock.html":{},"interfaces/NgxEditorJSConfig.html":{},"interfaces/NgxEditorJSModuleConfig.html":{},"interfaces/NgxTinynodesMatFieldComponent.html":{},"interfaces/Paragraph.html":{},"interfaces/ParagraphBlock.html":{},"interfaces/PluginConfig.html":{},"interfaces/PluginConfigMap.html":{},"interfaces/ReadyMap.html":{},"interfaces/SavedMap.html":{},"interfaces/ToolSettingsMap.html":{},"overview.html":{}}}],["interfaces/pluginconfig.html",{"_index":671,"title":{},"body":{"injectables/NgxEditorJSPluginService.html":{}}}],["internal",{"_index":183,"title":{},"body":{"interfaces/EditorJSClass.html":{},"interfaces/EditorJSInstanceConfig.html":{},"interfaces/EditorJSMaterialForm.html":{},"interfaces/InjectorApiCallOptions.html":{},"interfaces/InjectorApiCallResponse.html":{},"interfaces/InjectorMethodOption.html":{},"interfaces/NgxEditorJSConfig.html":{},"interfaces/NgxEditorJSModuleConfig.html":{},"injectables/NgxEditorJSService.html":{},"miscellaneous/variables.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-readme/ngx-editorjs-changelog.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-plugins-readme/ngx-editorjs-plugins-changelog.html":{}}}],["internally",{"_index":1045,"title":{},"body":{"changelog.html":{}}}],["investigated",{"_index":1273,"title":{},"body":{"contributing.html":{}}}],["isfocused",{"_index":431,"title":{},"body":{"directives/NgxEditorJSDirective.html":{}}}],["isready",{"_index":432,"title":{},"body":{"directives/NgxEditorJSDirective.html":{},"injectables/NgxEditorJSService.html":{}}}],["isready(options",{"_index":737,"title":{},"body":{"injectables/NgxEditorJSService.html":{}}}],["isreadymap",{"_index":188,"title":{},"body":{"interfaces/EditorJSClass.html":{},"interfaces/EditorJSInstanceConfig.html":{},"interfaces/InjectorApiCallOptions.html":{},"interfaces/InjectorApiCallResponse.html":{},"interfaces/InjectorMethodOption.html":{},"injectables/NgxEditorJSService.html":{},"miscellaneous/variables.html":{}}}],["issue",{"_index":1113,"title":{},"body":{"contributing.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-readme/ngx-editorjs-changelog.html":{}}}],["issues",{"_index":1090,"title":{},"body":{"changelog.html":{},"contributing.html":{}}}],["istouched",{"_index":433,"title":{},"body":{"directives/NgxEditorJSDirective.html":{}}}],["it's",{"_index":500,"title":{},"body":{"directives/NgxEditorJSDirective.html":{},"injectables/NgxEditorJSPluginService.html":{},"injectables/NgxEditorJSService.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-readme.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-readme/ngx-editorjs-changelog.html":{}}}],["items",{"_index":35,"title":{},"body":{"interfaces/Block.html":{},"interfaces/Header.html":{},"interfaces/HeaderBlock.html":{},"interfaces/Image.html":{},"interfaces/ImageBlock.html":{},"interfaces/List.html":{},"interfaces/ListBlock.html":{},"interfaces/Paragraph.html":{},"interfaces/ParagraphBlock.html":{}}}],["js",{"_index":669,"title":{},"body":{"injectables/NgxEditorJSPluginService.html":{},"dependencies.html":{},"miscellaneous/variables.html":{}}}],["js/code",{"_index":989,"title":{},"body":{"modules/PluginCodeModule.html":{}}}],["js/header",{"_index":993,"title":{},"body":{"modules/PluginHeaderModule.html":{}}}],["js/image",{"_index":996,"title":{},"body":{"modules/PluginImageModule.html":{},"modules/PluginLinkModule.html":{},"modules/PluginListModule.html":{},"modules/PluginSimpleImageModule.html":{}}}],["js/paragraph",{"_index":1001,"title":{},"body":{"modules/PluginInlineCodeModule.html":{},"modules/PluginMarkerModule.html":{},"modules/PluginParagraphModule.html":{}}}],["json",{"_index":931,"title":{},"body":{"modules/NgxTinynodesComponentsModule.html":{},"components/NgxTinynodesMatJsonOutputComponent.html":{},"modules/NgxTinynodesMatJsonOutputModule.html":{},"dependencies.html":{}}}],["json.stringify(changes.blocks.currentvalue",{"_index":549,"title":{},"body":{"directives/NgxEditorJSDirective.html":{}}}],["json.stringify(changes.blocks.previousvalue",{"_index":548,"title":{},"body":{"directives/NgxEditorJSDirective.html":{}}}],["keep",{"_index":1515,"title":{},"body":{"additional-documentation/tinynodes-library-docs/ngx-editorjs-readme/ngx-editorjs-changelog.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-plugins-readme/ngx-editorjs-plugins-changelog.html":{}}}],["key",{"_index":16,"title":{},"body":{"interfaces/Block.html":{},"interfaces/BlockData.html":{},"interfaces/ChangeMap.html":{},"interfaces/EditorJSChange.html":{},"interfaces/EditorMap.html":{},"interfaces/Header.html":{},"interfaces/HeaderBlock.html":{},"interfaces/Image.html":{},"interfaces/ImageBlock.html":{},"interfaces/List.html":{},"interfaces/ListBlock.html":{},"injectables/NgxEditorJSPluginService.html":{},"injectables/NgxEditorJSService.html":{},"interfaces/Paragraph.html":{},"interfaces/ParagraphBlock.html":{},"modules/PluginCodeModule.html":{},"interfaces/PluginConfig.html":{},"interfaces/PluginConfigMap.html":{},"modules/PluginHeaderModule.html":{},"modules/PluginImageModule.html":{},"modules/PluginInlineCodeModule.html":{},"modules/PluginLinkModule.html":{},"modules/PluginListModule.html":{},"modules/PluginMarkerModule.html":{},"modules/PluginParagraphModule.html":{},"modules/PluginSimpleImageModule.html":{},"interfaces/ReadyMap.html":{},"interfaces/SavedMap.html":{},"interfaces/ToolSettingsMap.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-readme.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-plugins-readme.html":{}}}],["keyboard",{"_index":1587,"title":{},"body":{"additional-documentation/tinynodes-library-docs/ngx-editorjs-plugins-readme.html":{}}}],["keys",{"_index":465,"title":{},"body":{"directives/NgxEditorJSDirective.html":{},"miscellaneous/functions.html":{}}}],["kind",{"_index":1413,"title":{},"body":{"license.html":{}}}],["label",{"_index":101,"title":{},"body":{"interfaces/BlockData.html":{},"interfaces/EditorJSMaterialForm.html":{},"interfaces/PluginConfig.html":{},"interfaces/PluginConfigMap.html":{},"interfaces/ToolSettingsMap.html":{}}}],["language",{"_index":1177,"title":{},"body":{"contributing.html":{}}}],["last",{"_index":131,"title":{},"body":{"interfaces/ChangeMap.html":{},"interfaces/EditorJSChange.html":{},"interfaces/EditorMap.html":{},"interfaces/NgxEditorJSConfig.html":{},"directives/NgxEditorJSDirective.html":{},"interfaces/NgxEditorJSModuleConfig.html":{},"interfaces/ReadyMap.html":{},"interfaces/SavedMap.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-readme.html":{}}}],["lastchange",{"_index":567,"title":{},"body":{"directives/NgxEditorJSDirective.html":{},"injectables/NgxEditorJSService.html":{}}}],["lastchange(options",{"_index":739,"title":{},"body":{"injectables/NgxEditorJSService.html":{}}}],["lastchangemap",{"_index":185,"title":{},"body":{"interfaces/EditorJSClass.html":{},"interfaces/EditorJSInstanceConfig.html":{},"interfaces/InjectorApiCallOptions.html":{},"interfaces/InjectorApiCallResponse.html":{},"interfaces/InjectorMethodOption.html":{},"injectables/NgxEditorJSService.html":{},"miscellaneous/variables.html":{}}}],["layer",{"_index":1123,"title":{},"body":{"contributing.html":{}}}],["layout",{"_index":1307,"title":{},"body":{"dependencies.html":{}}}],["leadership",{"_index":1295,"title":{},"body":{"contributing.html":{}}}],["legend",{"_index":589,"title":{},"body":{"modules/NgxEditorJSModule.html":{},"modules/NgxEditorjsPluginsModule.html":{},"modules/NgxPluginServiceModule.html":{},"modules/NgxTinynodesComponentsModule.html":{},"components/NgxTinynodesMatJsonOutputComponent.html":{},"modules/NgxTinynodesMatJsonOutputModule.html":{},"modules/NgxTinynodesMatTagInputModule.html":{},"overview.html":{}}}],["level",{"_index":44,"title":{},"body":{"interfaces/Block.html":{},"interfaces/Header.html":{},"interfaces/HeaderBlock.html":{},"interfaces/Image.html":{},"interfaces/ImageBlock.html":{},"interfaces/List.html":{},"interfaces/ListBlock.html":{},"interfaces/Paragraph.html":{},"interfaces/ParagraphBlock.html":{},"changelog.html":{},"contributing.html":{}}}],["liability",{"_index":1428,"title":{},"body":{"license.html":{}}}],["liable",{"_index":1425,"title":{},"body":{"license.html":{}}}],["libraries",{"_index":1027,"title":{},"body":{"changelog.html":{},"index.html":{},"additional-documentation/tinynodes-library-docs.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-plugins-readme.html":{}}}],["library",{"_index":1029,"title":{"additional-documentation/tinynodes-library-docs.html":{}},"body":{"changelog.html":{},"index.html":{},"todo.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-readme.html":{}}}],["libs/.../blocks.ts",{"_index":1461,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["libs/.../config.ts",{"_index":1465,"title":{},"body":{"miscellaneous/variables.html":{}}}],["libs/.../editor",{"_index":1332,"title":{},"body":{"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["libs/.../editorjs",{"_index":1468,"title":{},"body":{"miscellaneous/variables.html":{}}}],["libs/.../editorjs.component.ts",{"_index":1467,"title":{},"body":{"miscellaneous/variables.html":{}}}],["libs/.../injector.ts",{"_index":1469,"title":{},"body":{"miscellaneous/variables.html":{}}}],["libs/.../mat",{"_index":1471,"title":{},"body":{"miscellaneous/variables.html":{}}}],["libs/.../module",{"_index":1335,"title":{},"body":{"miscellaneous/functions.html":{}}}],["libs/.../ngx",{"_index":1334,"title":{},"body":{"miscellaneous/functions.html":{}}}],["libs/.../plugin.ts",{"_index":1336,"title":{},"body":{"miscellaneous/functions.html":{}}}],["libs/.../plugins.ts",{"_index":1330,"title":{},"body":{"miscellaneous/enumerations.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["libs/.../test.ts",{"_index":1463,"title":{},"body":{"miscellaneous/variables.html":{}}}],["libs/ngx",{"_index":6,"title":{},"body":{"interfaces/Block.html":{},"interfaces/BlockData.html":{},"interfaces/ChangeMap.html":{},"interfaces/CreateEditorJSOptions.html":{},"interfaces/EditorJSChange.html":{},"interfaces/EditorJSClass.html":{},"interfaces/EditorJSInstanceConfig.html":{},"interfaces/EditorJSMaterialForm.html":{},"interfaces/EditorMap.html":{},"interfaces/Header.html":{},"interfaces/HeaderBlock.html":{},"interfaces/Image.html":{},"interfaces/ImageBlock.html":{},"interfaces/InjectorApiCallOptions.html":{},"interfaces/InjectorApiCallResponse.html":{},"interfaces/InjectorMethodOption.html":{},"interfaces/List.html":{},"interfaces/ListBlock.html":{},"interfaces/NgxEditorJSConfig.html":{},"directives/NgxEditorJSDirective.html":{},"modules/NgxEditorJSModule.html":{},"interfaces/NgxEditorJSModuleConfig.html":{},"injectables/NgxEditorJSPluginService.html":{},"injectables/NgxEditorJSService.html":{},"modules/NgxEditorjsPluginsModule.html":{},"modules/NgxPluginServiceModule.html":{},"modules/NgxTinynodesComponentsModule.html":{},"interfaces/NgxTinynodesMatFieldComponent.html":{},"components/NgxTinynodesMatJsonOutputComponent.html":{},"modules/NgxTinynodesMatJsonOutputModule.html":{},"modules/NgxTinynodesMatTagInputModule.html":{},"interfaces/Paragraph.html":{},"interfaces/ParagraphBlock.html":{},"modules/PluginCodeModule.html":{},"interfaces/PluginConfig.html":{},"interfaces/PluginConfigMap.html":{},"modules/PluginHeaderModule.html":{},"modules/PluginImageModule.html":{},"modules/PluginInlineCodeModule.html":{},"modules/PluginLinkModule.html":{},"modules/PluginListModule.html":{},"modules/PluginMarkerModule.html":{},"modules/PluginParagraphModule.html":{},"modules/PluginSimpleImageModule.html":{},"interfaces/ReadyMap.html":{},"interfaces/SavedMap.html":{},"interfaces/ToolSettingsMap.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["licence",{"_index":1379,"title":{},"body":{"license.html":{}}}],["license",{"_index":1376,"title":{"license.html":{}},"body":{}}],["life",{"_index":357,"title":{},"body":{"interfaces/EditorJSMaterialForm.html":{},"index.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-readme.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-readme/ngx-editorjs-changelog.html":{}}}],["lifecycle",{"_index":685,"title":{},"body":{"injectables/NgxEditorJSService.html":{}}}],["limitation",{"_index":1392,"title":{},"body":{"license.html":{}}}],["limited",{"_index":1416,"title":{},"body":{"license.html":{}}}],["link",{"_index":667,"title":{},"body":{"injectables/NgxEditorJSPluginService.html":{},"injectables/NgxEditorJSService.html":{},"modules/PluginLinkModule.html":{}}}],["links",{"_index":1353,"title":{},"body":{"index.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-readme.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-plugins-readme.html":{}}}],["list",{"_index":25,"title":{"interfaces/List.html":{}},"body":{"interfaces/Block.html":{},"interfaces/Header.html":{},"interfaces/HeaderBlock.html":{},"interfaces/Image.html":{},"interfaces/ImageBlock.html":{},"interfaces/List.html":{},"interfaces/ListBlock.html":{},"injectables/NgxEditorJSPluginService.html":{},"interfaces/Paragraph.html":{},"interfaces/ParagraphBlock.html":{},"modules/PluginListModule.html":{},"miscellaneous/typealiases.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-readme.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-readme/ngx-editorjs-changelog.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-plugins-readme.html":{}}}],["listblock",{"_index":38,"title":{"interfaces/ListBlock.html":{}},"body":{"interfaces/Block.html":{},"interfaces/Header.html":{},"interfaces/HeaderBlock.html":{},"interfaces/Image.html":{},"interfaces/ImageBlock.html":{},"interfaces/List.html":{},"interfaces/ListBlock.html":{},"interfaces/Paragraph.html":{},"interfaces/ParagraphBlock.html":{},"miscellaneous/typealiases.html":{}}}],["listed",{"_index":1584,"title":{},"body":{"additional-documentation/tinynodes-library-docs/ngx-editorjs-plugins-readme.html":{}}}],["listener",{"_index":360,"title":{},"body":{"interfaces/EditorJSMaterialForm.html":{},"directives/NgxEditorJSDirective.html":{}}}],["listners",{"_index":494,"title":{},"body":{"directives/NgxEditorJSDirective.html":{}}}],["liststyle",{"_index":32,"title":{},"body":{"interfaces/Block.html":{},"interfaces/Header.html":{},"interfaces/HeaderBlock.html":{},"interfaces/Image.html":{},"interfaces/ImageBlock.html":{},"interfaces/List.html":{},"interfaces/ListBlock.html":{},"interfaces/Paragraph.html":{},"interfaces/ParagraphBlock.html":{},"miscellaneous/typealiases.html":{}}}],["load",{"_index":1508,"title":{},"body":{"additional-documentation/tinynodes-library-docs/ngx-editorjs-readme.html":{}}}],["local",{"_index":775,"title":{},"body":{"injectables/NgxEditorJSService.html":{}}}],["locations",{"_index":1130,"title":{},"body":{"contributing.html":{}}}],["longer",{"_index":1557,"title":{},"body":{"additional-documentation/tinynodes-library-docs/ngx-editorjs-readme/ngx-editorjs-changelog.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-plugins-readme/ngx-editorjs-plugins-changelog.html":{}}}],["lot",{"_index":1075,"title":{},"body":{"changelog.html":{}}}],["lots",{"_index":1549,"title":{},"body":{"additional-documentation/tinynodes-library-docs/ngx-editorjs-readme/ngx-editorjs-changelog.html":{}}}],["made",{"_index":699,"title":{},"body":{"injectables/NgxEditorJSService.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-plugins-readme/ngx-editorjs-plugins-changelog.html":{}}}],["mail",{"_index":1251,"title":{},"body":{"contributing.html":{}}}],["main",{"_index":415,"title":{},"body":{"directives/NgxEditorJSDirective.html":{},"changelog.html":{}}}],["maintain",{"_index":1278,"title":{},"body":{"contributing.html":{}}}],["maintainers",{"_index":1149,"title":{},"body":{"contributing.html":{}}}],["major",{"_index":1055,"title":{},"body":{"changelog.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-readme/ngx-editorjs-changelog.html":{}}}],["make",{"_index":713,"title":{},"body":{"injectables/NgxEditorJSService.html":{},"contributing.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-readme/ngx-editorjs-changelog.html":{}}}],["makes",{"_index":178,"title":{},"body":{"interfaces/EditorJSClass.html":{},"interfaces/EditorJSInstanceConfig.html":{},"interfaces/InjectorApiCallOptions.html":{},"interfaces/InjectorApiCallResponse.html":{},"interfaces/InjectorMethodOption.html":{}}}],["making",{"_index":1105,"title":{},"body":{"changelog.html":{},"contributing.html":{}}}],["manage",{"_index":1488,"title":{},"body":{"additional-documentation/tinynodes-library-docs/ngx-editorjs-readme.html":{}}}],["management",{"_index":684,"title":{},"body":{"injectables/NgxEditorJSService.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-readme/ngx-editorjs-changelog.html":{}}}],["managing",{"_index":1074,"title":{},"body":{"changelog.html":{}}}],["manually",{"_index":1590,"title":{},"body":{"additional-documentation/tinynodes-library-docs/ngx-editorjs-plugins-readme.html":{}}}],["map",{"_index":91,"title":{},"body":{"interfaces/BlockData.html":{},"interfaces/ChangeMap.html":{},"interfaces/EditorJSChange.html":{},"interfaces/EditorJSClass.html":{},"interfaces/EditorJSInstanceConfig.html":{},"interfaces/EditorMap.html":{},"interfaces/InjectorApiCallOptions.html":{},"interfaces/InjectorApiCallResponse.html":{},"interfaces/InjectorMethodOption.html":{},"injectables/NgxEditorJSPluginService.html":{},"injectables/NgxEditorJSService.html":{},"interfaces/PluginConfig.html":{},"interfaces/PluginConfigMap.html":{},"interfaces/ReadyMap.html":{},"interfaces/SavedMap.html":{},"interfaces/ToolSettingsMap.html":{},"changelog.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-readme.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-plugins-readme.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-plugins-readme/ngx-editorjs-plugins-changelog.html":{}}}],["map_defaults",{"_index":184,"title":{},"body":{"interfaces/EditorJSClass.html":{},"interfaces/EditorJSInstanceConfig.html":{},"interfaces/InjectorApiCallOptions.html":{},"interfaces/InjectorApiCallResponse.html":{},"interfaces/InjectorMethodOption.html":{},"injectables/NgxEditorJSService.html":{},"miscellaneous/variables.html":{}}}],["map_defaults.foreach",{"_index":857,"title":{},"body":{"injectables/NgxEditorJSService.html":{}}}],["mapkey",{"_index":858,"title":{},"body":{"injectables/NgxEditorJSService.html":{}}}],["marker",{"_index":1008,"title":{},"body":{"modules/PluginMarkerModule.html":{}}}],["marking",{"_index":1593,"title":{},"body":{"additional-documentation/tinynodes-library-docs/ngx-editorjs-plugins-readme.html":{}}}],["mat",{"_index":209,"title":{},"body":{"interfaces/EditorJSMaterialForm.html":{},"modules/NgxEditorJSModule.html":{},"components/NgxTinynodesMatJsonOutputComponent.html":{},"modules/NgxTinynodesMatJsonOutputModule.html":{},"modules/NgxTinynodesMatTagInputModule.html":{},"miscellaneous/variables.html":{}}}],["matbuttonmodule",{"_index":966,"title":{},"body":{"modules/NgxTinynodesMatJsonOutputModule.html":{}}}],["matcardmodule",{"_index":967,"title":{},"body":{"modules/NgxTinynodesMatJsonOutputModule.html":{}}}],["match",{"_index":471,"title":{},"body":{"directives/NgxEditorJSDirective.html":{}}}],["matches",{"_index":700,"title":{},"body":{"injectables/NgxEditorJSService.html":{}}}],["matching",{"_index":65,"title":{},"body":{"interfaces/Block.html":{},"interfaces/BlockData.html":{},"interfaces/ChangeMap.html":{},"interfaces/CreateEditorJSOptions.html":{},"interfaces/EditorJSChange.html":{},"interfaces/EditorJSClass.html":{},"interfaces/EditorJSInstanceConfig.html":{},"interfaces/EditorJSMaterialForm.html":{},"interfaces/EditorMap.html":{},"interfaces/Header.html":{},"interfaces/HeaderBlock.html":{},"interfaces/Image.html":{},"interfaces/ImageBlock.html":{},"interfaces/InjectorApiCallOptions.html":{},"interfaces/InjectorApiCallResponse.html":{},"interfaces/InjectorMethodOption.html":{},"interfaces/List.html":{},"interfaces/ListBlock.html":{},"interfaces/NgxEditorJSConfig.html":{},"directives/NgxEditorJSDirective.html":{},"modules/NgxEditorJSModule.html":{},"interfaces/NgxEditorJSModuleConfig.html":{},"injectables/NgxEditorJSPluginService.html":{},"injectables/NgxEditorJSService.html":{},"modules/NgxEditorjsPluginsModule.html":{},"modules/NgxPluginServiceModule.html":{},"modules/NgxTinynodesComponentsModule.html":{},"interfaces/NgxTinynodesMatFieldComponent.html":{},"components/NgxTinynodesMatJsonOutputComponent.html":{},"modules/NgxTinynodesMatJsonOutputModule.html":{},"modules/NgxTinynodesMatTagInputModule.html":{},"interfaces/Paragraph.html":{},"interfaces/ParagraphBlock.html":{},"modules/PluginCodeModule.html":{},"interfaces/PluginConfig.html":{},"interfaces/PluginConfigMap.html":{},"modules/PluginHeaderModule.html":{},"modules/PluginImageModule.html":{},"modules/PluginInlineCodeModule.html":{},"modules/PluginLinkModule.html":{},"modules/PluginListModule.html":{},"modules/PluginMarkerModule.html":{},"modules/PluginParagraphModule.html":{},"modules/PluginSimpleImageModule.html":{},"interfaces/ReadyMap.html":{},"interfaces/SavedMap.html":{},"interfaces/ToolSettingsMap.html":{},"changelog.html":{},"contributing.html":{},"dependencies.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"index.html":{},"license.html":{},"modules.html":{},"overview.html":{},"todo.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{},"additional-documentation/tinynodes-library-docs.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-readme.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-readme/ngx-editorjs-changelog.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-plugins-readme.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-plugins-readme/ngx-editorjs-plugins-changelog.html":{}}}],["matchipsmodule",{"_index":978,"title":{},"body":{"modules/NgxTinynodesMatTagInputModule.html":{}}}],["material",{"_index":244,"title":{},"body":{"interfaces/EditorJSMaterialForm.html":{},"changelog.html":{},"index.html":{},"miscellaneous/variables.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-readme.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-readme/ngx-editorjs-changelog.html":{}}}],["material](https://material.angular.io",{"_index":251,"title":{},"body":{"interfaces/EditorJSMaterialForm.html":{}}}],["matformfieldcontrol",{"_index":213,"title":{},"body":{"interfaces/EditorJSMaterialForm.html":{},"interfaces/NgxTinynodesMatFieldComponent.html":{},"miscellaneous/variables.html":{}}}],["matformfieldmodule",{"_index":622,"title":{},"body":{"modules/NgxEditorJSModule.html":{}}}],["maticonmodule",{"_index":979,"title":{},"body":{"modules/NgxTinynodesMatTagInputModule.html":{}}}],["matinputmodule",{"_index":623,"title":{},"body":{"modules/NgxEditorJSModule.html":{}}}],["me@tane.dev",{"_index":1270,"title":{},"body":{"contributing.html":{},"license.html":{}}}],["means",{"_index":502,"title":{},"body":{"directives/NgxEditorJSDirective.html":{},"changelog.html":{}}}],["meantime",{"_index":1101,"title":{},"body":{"changelog.html":{}}}],["media",{"_index":1254,"title":{},"body":{"contributing.html":{}}}],["members",{"_index":1192,"title":{},"body":{"contributing.html":{}}}],["merchantability",{"_index":1418,"title":{},"body":{"license.html":{}}}],["merge",{"_index":1139,"title":{},"body":{"contributing.html":{},"license.html":{}}}],["merged",{"_index":1041,"title":{},"body":{"changelog.html":{}}}],["metadata",{"_index":420,"title":{},"body":{"directives/NgxEditorJSDirective.html":{},"components/NgxTinynodesMatJsonOutputComponent.html":{}}}],["method",{"_index":176,"title":{},"body":{"interfaces/EditorJSClass.html":{},"interfaces/EditorJSInstanceConfig.html":{},"interfaces/InjectorApiCallOptions.html":{},"interfaces/InjectorApiCallResponse.html":{},"interfaces/InjectorMethodOption.html":{},"interfaces/NgxEditorJSConfig.html":{},"directives/NgxEditorJSDirective.html":{},"modules/NgxEditorJSModule.html":{},"interfaces/NgxEditorJSModuleConfig.html":{},"injectables/NgxEditorJSService.html":{},"contributing.html":{},"miscellaneous/functions.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-readme.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-readme/ngx-editorjs-changelog.html":{}}}],["method.call(editor",{"_index":806,"title":{},"body":{"injectables/NgxEditorJSService.html":{}}}],["methodcall",{"_index":805,"title":{},"body":{"injectables/NgxEditorJSService.html":{}}}],["methodcall.then",{"_index":807,"title":{},"body":{"injectables/NgxEditorJSService.html":{}}}],["methods",{"_index":422,"title":{},"body":{"directives/NgxEditorJSDirective.html":{},"modules/NgxEditorJSModule.html":{},"injectables/NgxEditorJSPluginService.html":{},"injectables/NgxEditorJSService.html":{},"components/NgxTinynodesMatJsonOutputComponent.html":{},"changelog.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-readme/ngx-editorjs-changelog.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-plugins-readme.html":{}}}],["minheight",{"_index":381,"title":{},"body":{"interfaces/NgxEditorJSConfig.html":{},"directives/NgxEditorJSDirective.html":{},"interfaces/NgxEditorJSModuleConfig.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-readme.html":{}}}],["minimum",{"_index":474,"title":{},"body":{"directives/NgxEditorJSDirective.html":{}}}],["miscellaneous",{"_index":1328,"title":{"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}},"body":{"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["mit",{"_index":1378,"title":{},"body":{"license.html":{}}}],["modify",{"_index":1394,"title":{},"body":{"license.html":{}}}],["module",{"_index":114,"title":{"modules/NgxEditorJSModule.html":{},"modules/NgxEditorjsPluginsModule.html":{},"modules/NgxPluginServiceModule.html":{},"modules/NgxTinynodesComponentsModule.html":{},"modules/NgxTinynodesMatJsonOutputModule.html":{},"modules/NgxTinynodesMatTagInputModule.html":{},"modules/PluginCodeModule.html":{},"modules/PluginHeaderModule.html":{},"modules/PluginImageModule.html":{},"modules/PluginInlineCodeModule.html":{},"modules/PluginLinkModule.html":{},"modules/PluginListModule.html":{},"modules/PluginMarkerModule.html":{},"modules/PluginParagraphModule.html":{},"modules/PluginSimpleImageModule.html":{}},"body":{"interfaces/BlockData.html":{},"modules/NgxEditorJSModule.html":{},"modules/NgxEditorjsPluginsModule.html":{},"modules/NgxPluginServiceModule.html":{},"modules/NgxTinynodesComponentsModule.html":{},"modules/NgxTinynodesMatJsonOutputModule.html":{},"modules/NgxTinynodesMatTagInputModule.html":{},"modules/PluginCodeModule.html":{},"interfaces/PluginConfig.html":{},"interfaces/PluginConfigMap.html":{},"modules/PluginHeaderModule.html":{},"modules/PluginImageModule.html":{},"modules/PluginInlineCodeModule.html":{},"modules/PluginLinkModule.html":{},"modules/PluginListModule.html":{},"modules/PluginMarkerModule.html":{},"modules/PluginParagraphModule.html":{},"modules/PluginSimpleImageModule.html":{},"interfaces/ToolSettingsMap.html":{},"changelog.html":{},"miscellaneous/functions.html":{},"index.html":{},"overview.html":{},"todo.html":{},"miscellaneous/variables.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-readme.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-readme/ngx-editorjs-changelog.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-plugins-readme.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-plugins-readme/ngx-editorjs-plugins-changelog.html":{}}}],["modules",{"_index":587,"title":{"modules.html":{}},"body":{"modules/NgxEditorJSModule.html":{},"modules/NgxEditorjsPluginsModule.html":{},"modules/NgxPluginServiceModule.html":{},"modules/NgxTinynodesComponentsModule.html":{},"modules/NgxTinynodesMatJsonOutputModule.html":{},"modules/NgxTinynodesMatTagInputModule.html":{},"modules/PluginCodeModule.html":{},"modules/PluginHeaderModule.html":{},"modules/PluginImageModule.html":{},"modules/PluginInlineCodeModule.html":{},"modules/PluginLinkModule.html":{},"modules/PluginListModule.html":{},"modules/PluginMarkerModule.html":{},"modules/PluginParagraphModule.html":{},"modules/PluginSimpleImageModule.html":{},"modules.html":{},"overview.html":{},"todo.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-plugins-readme.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-plugins-readme/ngx-editorjs-plugins-changelog.html":{}}}],["modulewithproviders",{"_index":616,"title":{},"body":{"modules/NgxEditorJSModule.html":{}}}],["monday",{"_index":1078,"title":{},"body":{"changelog.html":{}}}],["monitor",{"_index":342,"title":{},"body":{"interfaces/EditorJSMaterialForm.html":{}}}],["more",{"_index":1106,"title":{},"body":{"changelog.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-readme.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-readme/ngx-editorjs-changelog.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-plugins-readme/ngx-editorjs-plugins-changelog.html":{}}}],["mouseevent",{"_index":335,"title":{},"body":{"interfaces/EditorJSMaterialForm.html":{}}}],["moved",{"_index":1524,"title":{},"body":{"additional-documentation/tinynodes-library-docs/ngx-editorjs-readme/ngx-editorjs-changelog.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-plugins-readme/ngx-editorjs-plugins-changelog.html":{}}}],["ms",{"_index":457,"title":{},"body":{"directives/NgxEditorJSDirective.html":{}}}],["multi",{"_index":249,"title":{},"body":{"interfaces/EditorJSMaterialForm.html":{},"modules/PluginCodeModule.html":{},"modules/PluginHeaderModule.html":{},"modules/PluginImageModule.html":{},"modules/PluginInlineCodeModule.html":{},"modules/PluginLinkModule.html":{},"modules/PluginListModule.html":{},"modules/PluginMarkerModule.html":{},"modules/PluginParagraphModule.html":{},"modules/PluginSimpleImageModule.html":{},"changelog.html":{},"miscellaneous/variables.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-plugins-readme.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-plugins-readme/ngx-editorjs-plugins-changelog.html":{}}}],["multiple",{"_index":1566,"title":{},"body":{"additional-documentation/tinynodes-library-docs/ngx-editorjs-readme/ngx-editorjs-changelog.html":{}}}],["name",{"_index":103,"title":{},"body":{"interfaces/BlockData.html":{},"interfaces/NgxEditorJSConfig.html":{},"directives/NgxEditorJSDirective.html":{},"modules/NgxEditorJSModule.html":{},"interfaces/NgxEditorJSModuleConfig.html":{},"injectables/NgxEditorJSPluginService.html":{},"injectables/NgxEditorJSService.html":{},"components/NgxTinynodesMatJsonOutputComponent.html":{},"interfaces/PluginConfig.html":{},"interfaces/PluginConfigMap.html":{},"interfaces/ToolSettingsMap.html":{},"miscellaneous/functions.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-plugins-readme.html":{}}}],["namespace",{"_index":203,"title":{},"body":{"interfaces/EditorJSClass.html":{},"interfaces/EditorJSInstanceConfig.html":{},"interfaces/InjectorApiCallOptions.html":{},"interfaces/InjectorApiCallResponse.html":{},"interfaces/InjectorMethodOption.html":{},"injectables/NgxEditorJSService.html":{}}}],["nationality",{"_index":1165,"title":{},"body":{"contributing.html":{}}}],["necessary",{"_index":1275,"title":{},"body":{"contributing.html":{}}}],["need",{"_index":505,"title":{},"body":{"directives/NgxEditorJSDirective.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-readme.html":{}}}],["needs",{"_index":470,"title":{},"body":{"directives/NgxEditorJSDirective.html":{}}}],["new",{"_index":117,"title":{},"body":{"interfaces/BlockData.html":{},"interfaces/EditorJSClass.html":{},"interfaces/EditorJSInstanceConfig.html":{},"interfaces/EditorJSMaterialForm.html":{},"interfaces/InjectorApiCallOptions.html":{},"interfaces/InjectorApiCallResponse.html":{},"interfaces/InjectorMethodOption.html":{},"interfaces/NgxEditorJSConfig.html":{},"directives/NgxEditorJSDirective.html":{},"interfaces/NgxEditorJSModuleConfig.html":{},"injectables/NgxEditorJSService.html":{},"interfaces/PluginConfig.html":{},"interfaces/PluginConfigMap.html":{},"interfaces/ToolSettingsMap.html":{},"changelog.html":{},"contributing.html":{},"index.html":{},"miscellaneous/variables.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-readme.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-readme/ngx-editorjs-changelog.html":{}}}],["nextid",{"_index":266,"title":{},"body":{"interfaces/EditorJSMaterialForm.html":{}}}],["ng_value_accessor",{"_index":1477,"title":{},"body":{"miscellaneous/variables.html":{}}}],["ngaftercontentinit",{"_index":364,"title":{},"body":{"interfaces/EditorJSMaterialForm.html":{},"directives/NgxEditorJSDirective.html":{}}}],["ngcontrol",{"_index":230,"title":{},"body":{"interfaces/EditorJSMaterialForm.html":{}}}],["ngdocheck",{"_index":370,"title":{},"body":{"interfaces/EditorJSMaterialForm.html":{}}}],["ngmodule",{"_index":619,"title":{},"body":{"modules/NgxEditorJSModule.html":{},"injectables/NgxEditorJSPluginService.html":{},"modules/NgxEditorjsPluginsModule.html":{},"modules/NgxPluginServiceModule.html":{},"modules/NgxTinynodesComponentsModule.html":{},"modules/NgxTinynodesMatJsonOutputModule.html":{},"modules/NgxTinynodesMatTagInputModule.html":{},"modules/PluginCodeModule.html":{},"modules/PluginHeaderModule.html":{},"modules/PluginImageModule.html":{},"modules/PluginInlineCodeModule.html":{},"modules/PluginLinkModule.html":{},"modules/PluginListModule.html":{},"modules/PluginMarkerModule.html":{},"modules/PluginParagraphModule.html":{},"modules/PluginSimpleImageModule.html":{},"changelog.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-readme.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-plugins-readme.html":{}}}],["ngonchanges",{"_index":425,"title":{},"body":{"directives/NgxEditorJSDirective.html":{},"components/NgxTinynodesMatJsonOutputComponent.html":{}}}],["ngonchanges(changes",{"_index":495,"title":{},"body":{"directives/NgxEditorJSDirective.html":{}}}],["ngondestroy",{"_index":426,"title":{},"body":{"directives/NgxEditorJSDirective.html":{}}}],["ngoninit",{"_index":352,"title":{},"body":{"interfaces/EditorJSMaterialForm.html":{}}}],["ngrx/effects",{"_index":1313,"title":{},"body":{"dependencies.html":{},"todo.html":{}}}],["ngrx/store",{"_index":1315,"title":{},"body":{"dependencies.html":{}}}],["ngx",{"_index":113,"title":{"additional-documentation/tinynodes-library-docs/ngx-editorjs-readme.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-readme/ngx-editorjs-changelog.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-plugins-readme.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-plugins-readme/ngx-editorjs-plugins-changelog.html":{}},"body":{"interfaces/BlockData.html":{},"interfaces/EditorJSMaterialForm.html":{},"directives/NgxEditorJSDirective.html":{},"components/NgxTinynodesMatJsonOutputComponent.html":{},"modules/NgxTinynodesMatJsonOutputModule.html":{},"interfaces/PluginConfig.html":{},"interfaces/PluginConfigMap.html":{},"interfaces/ToolSettingsMap.html":{},"dependencies.html":{},"index.html":{},"todo.html":{},"miscellaneous/variables.html":{},"additional-documentation/tinynodes-library-docs.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-readme.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-readme/ngx-editorjs-changelog.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-plugins-readme.html":{}}}],["ngx_editorjs_config",{"_index":402,"title":{},"body":{"interfaces/NgxEditorJSConfig.html":{},"modules/NgxEditorJSModule.html":{},"interfaces/NgxEditorJSModuleConfig.html":{},"injectables/NgxEditorJSService.html":{},"miscellaneous/variables.html":{}}}],["ngxeditorjs",{"_index":421,"title":{},"body":{"directives/NgxEditorJSDirective.html":{},"components/NgxTinynodesMatJsonOutputComponent.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-plugins-readme.html":{}}}],["ngxeditorjsbasecomponent",{"_index":1478,"title":{},"body":{"miscellaneous/variables.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-readme.html":{}}}],["ngxeditorjscomponent",{"_index":242,"title":{},"body":{"interfaces/EditorJSMaterialForm.html":{},"modules/NgxEditorJSModule.html":{},"components/NgxTinynodesMatJsonOutputComponent.html":{},"index.html":{},"overview.html":{},"miscellaneous/variables.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-readme.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-readme/ngx-editorjs-changelog.html":{}}}],["ngxeditorjsconfig",{"_index":375,"title":{"interfaces/NgxEditorJSConfig.html":{}},"body":{"interfaces/NgxEditorJSConfig.html":{},"interfaces/NgxEditorJSModuleConfig.html":{},"miscellaneous/variables.html":{}}}],["ngxeditorjsdirective",{"_index":237,"title":{"directives/NgxEditorJSDirective.html":{}},"body":{"interfaces/EditorJSMaterialForm.html":{},"directives/NgxEditorJSDirective.html":{},"modules/NgxEditorJSModule.html":{},"components/NgxTinynodesMatJsonOutputComponent.html":{},"index.html":{},"overview.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-readme.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-readme/ngx-editorjs-changelog.html":{}}}],["ngxeditorjsdirective::ngaftercontentinit",{"_index":563,"title":{},"body":{"directives/NgxEditorJSDirective.html":{}}}],["ngxeditorjsinstanceservice",{"_index":1362,"title":{},"body":{"index.html":{}}}],["ngxeditorjsmaterialfieldcomponent",{"_index":1357,"title":{},"body":{"index.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-readme.html":{}}}],["ngxeditorjsmatfieldcomponent",{"_index":248,"title":{},"body":{"interfaces/EditorJSMaterialForm.html":{},"modules/NgxEditorJSModule.html":{},"components/NgxTinynodesMatJsonOutputComponent.html":{},"overview.html":{},"miscellaneous/variables.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-readme/ngx-editorjs-changelog.html":{}}}],["ngxeditorjsmatfieldcomponent.nextid",{"_index":318,"title":{},"body":{"interfaces/EditorJSMaterialForm.html":{}}}],["ngxeditorjsmodule",{"_index":586,"title":{"modules/NgxEditorJSModule.html":{}},"body":{"modules/NgxEditorJSModule.html":{},"modules.html":{},"overview.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-readme.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-readme/ngx-editorjs-changelog.html":{}}}],["ngxeditorjsmodule.forroot",{"_index":399,"title":{},"body":{"interfaces/NgxEditorJSConfig.html":{},"modules/NgxEditorJSModule.html":{},"interfaces/NgxEditorJSModuleConfig.html":{},"injectables/NgxEditorJSService.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-readme.html":{}}}],["ngxeditorjsmoduleconfig",{"_index":400,"title":{"interfaces/NgxEditorJSModuleConfig.html":{}},"body":{"interfaces/NgxEditorJSConfig.html":{},"modules/NgxEditorJSModule.html":{},"interfaces/NgxEditorJSModuleConfig.html":{},"injectables/NgxEditorJSService.html":{},"miscellaneous/functions.html":{}}}],["ngxeditorjspluginservice",{"_index":641,"title":{"injectables/NgxEditorJSPluginService.html":{}},"body":{"injectables/NgxEditorJSPluginService.html":{},"injectables/NgxEditorJSService.html":{},"modules/NgxPluginServiceModule.html":{},"changelog.html":{},"index.html":{},"overview.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-readme/ngx-editorjs-changelog.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-plugins-readme.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-plugins-readme/ngx-editorjs-plugins-changelog.html":{}}}],["ngxeditorjspluginsmodule",{"_index":598,"title":{"modules/NgxEditorjsPluginsModule.html":{}},"body":{"modules/NgxEditorJSModule.html":{},"modules/NgxEditorjsPluginsModule.html":{},"modules.html":{},"overview.html":{}}}],["ngxeditorjsservice",{"_index":240,"title":{"injectables/NgxEditorJSService.html":{}},"body":{"interfaces/EditorJSMaterialForm.html":{},"directives/NgxEditorJSDirective.html":{},"modules/NgxEditorJSModule.html":{},"injectables/NgxEditorJSService.html":{},"index.html":{},"overview.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-readme.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-readme/ngx-editorjs-changelog.html":{}}}],["ngxeditorjsservice.apicall",{"_index":1531,"title":{},"body":{"additional-documentation/tinynodes-library-docs/ngx-editorjs-readme/ngx-editorjs-changelog.html":{}}}],["ngxjsonviewermodule",{"_index":968,"title":{},"body":{"modules/NgxTinynodesMatJsonOutputModule.html":{}}}],["ngxpluginservicemodule",{"_index":880,"title":{"modules/NgxPluginServiceModule.html":{}},"body":{"modules/NgxEditorjsPluginsModule.html":{},"modules/NgxPluginServiceModule.html":{},"modules.html":{},"overview.html":{}}}],["ngxtinynodescomponentsmodule",{"_index":918,"title":{"modules/NgxTinynodesComponentsModule.html":{}},"body":{"modules/NgxTinynodesComponentsModule.html":{},"modules.html":{},"overview.html":{}}}],["ngxtinynodesmatfieldcomponent",{"_index":934,"title":{"interfaces/NgxTinynodesMatFieldComponent.html":{}},"body":{"interfaces/NgxTinynodesMatFieldComponent.html":{}}}],["ngxtinynodesmatjsonoutputcomponent",{"_index":938,"title":{"components/NgxTinynodesMatJsonOutputComponent.html":{}},"body":{"components/NgxTinynodesMatJsonOutputComponent.html":{},"modules/NgxTinynodesMatJsonOutputModule.html":{},"overview.html":{}}}],["ngxtinynodesmatjsonoutputmodule",{"_index":922,"title":{"modules/NgxTinynodesMatJsonOutputModule.html":{}},"body":{"modules/NgxTinynodesComponentsModule.html":{},"modules/NgxTinynodesMatJsonOutputModule.html":{},"modules.html":{},"overview.html":{}}}],["ngxtinynodesmattaginputcomponent",{"_index":959,"title":{},"body":{"components/NgxTinynodesMatJsonOutputComponent.html":{},"modules/NgxTinynodesMatTagInputModule.html":{},"overview.html":{},"miscellaneous/variables.html":{}}}],["ngxtinynodesmattaginputmodule",{"_index":923,"title":{"modules/NgxTinynodesMatTagInputModule.html":{}},"body":{"modules/NgxTinynodesComponentsModule.html":{},"modules/NgxTinynodesMatTagInputModule.html":{},"modules.html":{},"overview.html":{}}}],["ngzone",{"_index":687,"title":{},"body":{"injectables/NgxEditorJSService.html":{}}}],["noninfringement",{"_index":1422,"title":{},"body":{"license.html":{}}}],["notable",{"_index":1512,"title":{},"body":{"additional-documentation/tinynodes-library-docs/ngx-editorjs-readme/ngx-editorjs-changelog.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-plugins-readme/ngx-editorjs-plugins-changelog.html":{}}}],["note",{"_index":1116,"title":{},"body":{"contributing.html":{},"additional-documentation/tinynodes-library-docs.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-plugins-readme.html":{}}}],["notice",{"_index":1407,"title":{},"body":{"license.html":{}}}],["now",{"_index":1042,"title":{},"body":{"changelog.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-readme/ngx-editorjs-changelog.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-plugins-readme/ngx-editorjs-plugins-changelog.html":{}}}],["npm",{"_index":1323,"title":{},"body":{"dependencies.html":{},"index.html":{},"additional-documentation/tinynodes-library-docs.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-readme.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-readme/ngx-editorjs-changelog.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-plugins-readme.html":{}}}],["nrwl/nx",{"_index":1093,"title":{},"body":{"changelog.html":{}}}],["null",{"_index":354,"title":{},"body":{"interfaces/EditorJSMaterialForm.html":{},"directives/NgxEditorJSDirective.html":{},"injectables/NgxEditorJSService.html":{}}}],["number",{"_index":47,"title":{},"body":{"interfaces/Block.html":{},"interfaces/ChangeMap.html":{},"interfaces/CreateEditorJSOptions.html":{},"interfaces/EditorJSChange.html":{},"interfaces/EditorMap.html":{},"interfaces/Header.html":{},"interfaces/HeaderBlock.html":{},"interfaces/Image.html":{},"interfaces/ImageBlock.html":{},"interfaces/List.html":{},"interfaces/ListBlock.html":{},"interfaces/NgxEditorJSConfig.html":{},"directives/NgxEditorJSDirective.html":{},"interfaces/NgxEditorJSModuleConfig.html":{},"interfaces/Paragraph.html":{},"interfaces/ParagraphBlock.html":{},"interfaces/ReadyMap.html":{},"interfaces/SavedMap.html":{}}}],["numbers",{"_index":1132,"title":{},"body":{"contributing.html":{}}}],["nx",{"_index":1375,"title":{},"body":{"index.html":{}}}],["object",{"_index":96,"title":{},"body":{"interfaces/BlockData.html":{},"directives/NgxEditorJSDirective.html":{},"injectables/NgxEditorJSService.html":{},"interfaces/PluginConfig.html":{},"interfaces/PluginConfigMap.html":{},"interfaces/ToolSettingsMap.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-readme.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-readme/ngx-editorjs-changelog.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-plugins-readme.html":{}}}],["object.entries(this.pluginconfigmap",{"_index":676,"title":{},"body":{"injectables/NgxEditorJSPluginService.html":{}}}],["object.entries(this.plugins.getpluginswithexclude(excudetools",{"_index":870,"title":{},"body":{"injectables/NgxEditorJSService.html":{}}}],["object.keys(changes",{"_index":553,"title":{},"body":{"directives/NgxEditorJSDirective.html":{}}}],["object.keys(this.editormap).foreach(holder",{"_index":848,"title":{},"body":{"injectables/NgxEditorJSService.html":{}}}],["objects",{"_index":1346,"title":{},"body":{"miscellaneous/functions.html":{}}}],["obligated",{"_index":1277,"title":{},"body":{"contributing.html":{}}}],["observable",{"_index":514,"title":{},"body":{"directives/NgxEditorJSDirective.html":{},"injectables/NgxEditorJSService.html":{}}}],["obtaining",{"_index":1385,"title":{},"body":{"license.html":{}}}],["of(response",{"_index":818,"title":{},"body":{"injectables/NgxEditorJSService.html":{}}}],["offensive",{"_index":1242,"title":{},"body":{"contributing.html":{}}}],["official",{"_index":1249,"title":{},"body":{"contributing.html":{}}}],["officially",{"_index":1097,"title":{},"body":{"changelog.html":{}}}],["offline",{"_index":1260,"title":{},"body":{"contributing.html":{}}}],["once",{"_index":690,"title":{},"body":{"injectables/NgxEditorJSService.html":{},"contributing.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-readme.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-plugins-readme.html":{}}}],["onchange",{"_index":179,"title":{},"body":{"interfaces/EditorJSClass.html":{},"interfaces/EditorJSInstanceConfig.html":{},"interfaces/InjectorApiCallOptions.html":{},"interfaces/InjectorApiCallResponse.html":{},"interfaces/InjectorMethodOption.html":{},"injectables/NgxEditorJSService.html":{}}}],["onchanges",{"_index":419,"title":{},"body":{"directives/NgxEditorJSDirective.html":{},"components/NgxTinynodesMatJsonOutputComponent.html":{}}}],["onclick",{"_index":532,"title":{},"body":{"directives/NgxEditorJSDirective.html":{}}}],["oncontainerclick(event",{"_index":336,"title":{},"body":{"interfaces/EditorJSMaterialForm.html":{}}}],["ondestroy",{"_index":226,"title":{},"body":{"interfaces/EditorJSMaterialForm.html":{},"directives/NgxEditorJSDirective.html":{},"injectables/NgxEditorJSService.html":{},"interfaces/NgxTinynodesMatFieldComponent.html":{}}}],["ones",{"_index":1371,"title":{},"body":{"index.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-plugins-readme.html":{}}}],["oninit",{"_index":227,"title":{},"body":{"interfaces/EditorJSMaterialForm.html":{},"interfaces/NgxTinynodesMatFieldComponent.html":{}}}],["online",{"_index":1259,"title":{},"body":{"contributing.html":{}}}],["onready",{"_index":181,"title":{},"body":{"interfaces/EditorJSClass.html":{},"interfaces/EditorJSInstanceConfig.html":{},"interfaces/InjectorApiCallOptions.html":{},"interfaces/InjectorApiCallResponse.html":{},"interfaces/InjectorMethodOption.html":{},"injectables/NgxEditorJSService.html":{}}}],["open",{"_index":825,"title":{},"body":{"injectables/NgxEditorJSService.html":{},"contributing.html":{}}}],["option",{"_index":196,"title":{},"body":{"interfaces/EditorJSClass.html":{},"interfaces/EditorJSInstanceConfig.html":{},"interfaces/InjectorApiCallOptions.html":{},"interfaces/InjectorApiCallResponse.html":{},"interfaces/InjectorMethodOption.html":{},"interfaces/NgxEditorJSConfig.html":{},"interfaces/NgxEditorJSModuleConfig.html":{},"todo.html":{}}}],["optional",{"_index":51,"title":{},"body":{"interfaces/Block.html":{},"interfaces/BlockData.html":{},"interfaces/CreateEditorJSOptions.html":{},"interfaces/EditorJSClass.html":{},"interfaces/EditorJSInstanceConfig.html":{},"interfaces/EditorJSMaterialForm.html":{},"interfaces/Header.html":{},"interfaces/HeaderBlock.html":{},"interfaces/Image.html":{},"interfaces/ImageBlock.html":{},"interfaces/InjectorApiCallOptions.html":{},"interfaces/InjectorApiCallResponse.html":{},"interfaces/InjectorMethodOption.html":{},"interfaces/List.html":{},"interfaces/ListBlock.html":{},"interfaces/NgxEditorJSConfig.html":{},"directives/NgxEditorJSDirective.html":{},"modules/NgxEditorJSModule.html":{},"interfaces/NgxEditorJSModuleConfig.html":{},"injectables/NgxEditorJSPluginService.html":{},"injectables/NgxEditorJSService.html":{},"components/NgxTinynodesMatJsonOutputComponent.html":{},"interfaces/Paragraph.html":{},"interfaces/ParagraphBlock.html":{},"interfaces/PluginConfig.html":{},"interfaces/PluginConfigMap.html":{},"interfaces/ToolSettingsMap.html":{},"miscellaneous/functions.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-readme.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-readme/ngx-editorjs-changelog.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-plugins-readme.html":{}}}],["optionally",{"_index":748,"title":{},"body":{"injectables/NgxEditorJSService.html":{}}}],["options",{"_index":152,"title":{},"body":{"interfaces/CreateEditorJSOptions.html":{},"interfaces/EditorJSClass.html":{},"interfaces/EditorJSInstanceConfig.html":{},"interfaces/InjectorApiCallOptions.html":{},"interfaces/InjectorApiCallResponse.html":{},"interfaces/InjectorMethodOption.html":{},"interfaces/NgxEditorJSConfig.html":{},"interfaces/NgxEditorJSModuleConfig.html":{},"injectables/NgxEditorJSService.html":{},"changelog.html":{},"todo.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-readme.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-readme/ngx-editorjs-changelog.html":{}}}],["options.config",{"_index":771,"title":{},"body":{"injectables/NgxEditorJSService.html":{}}}],["options.data",{"_index":821,"title":{},"body":{"injectables/NgxEditorJSService.html":{}}}],["options.holder",{"_index":810,"title":{},"body":{"injectables/NgxEditorJSService.html":{}}}],["options.method",{"_index":804,"title":{},"body":{"injectables/NgxEditorJSService.html":{}}}],["options.namespace",{"_index":800,"title":{},"body":{"injectables/NgxEditorJSService.html":{}}}],["options.skipsave",{"_index":817,"title":{},"body":{"injectables/NgxEditorJSService.html":{}}}],["ordered",{"_index":28,"title":{},"body":{"interfaces/Block.html":{},"interfaces/Header.html":{},"interfaces/HeaderBlock.html":{},"interfaces/Image.html":{},"interfaces/ImageBlock.html":{},"interfaces/List.html":{},"interfaces/ListBlock.html":{},"interfaces/Paragraph.html":{},"interfaces/ParagraphBlock.html":{},"miscellaneous/typealiases.html":{}}}],["orientation",{"_index":1171,"title":{},"body":{"contributing.html":{}}}],["others",{"_index":1206,"title":{},"body":{"contributing.html":{}}}],["otherwise",{"_index":774,"title":{},"body":{"injectables/NgxEditorJSService.html":{},"contributing.html":{},"license.html":{}}}],["out",{"_index":601,"title":{},"body":{"modules/NgxEditorJSModule.html":{},"modules/NgxEditorjsPluginsModule.html":{},"modules/NgxPluginServiceModule.html":{},"modules/NgxTinynodesComponentsModule.html":{},"modules/NgxTinynodesMatJsonOutputModule.html":{},"modules/NgxTinynodesMatTagInputModule.html":{},"index.html":{},"license.html":{},"overview.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-readme.html":{}}}],["output",{"_index":386,"title":{},"body":{"interfaces/NgxEditorJSConfig.html":{},"directives/NgxEditorJSDirective.html":{},"interfaces/NgxEditorJSModuleConfig.html":{},"components/NgxTinynodesMatJsonOutputComponent.html":{}}}],["output'},{'name",{"_index":958,"title":{},"body":{"components/NgxTinynodesMatJsonOutputComponent.html":{}}}],["output.component",{"_index":965,"title":{},"body":{"modules/NgxTinynodesMatJsonOutputModule.html":{}}}],["output.component.html",{"_index":943,"title":{},"body":{"components/NgxTinynodesMatJsonOutputComponent.html":{}}}],["output.component.ts",{"_index":942,"title":{},"body":{"components/NgxTinynodesMatJsonOutputComponent.html":{}}}],["output.component.ts:11",{"_index":948,"title":{},"body":{"components/NgxTinynodesMatJsonOutputComponent.html":{}}}],["output.component.ts:14",{"_index":947,"title":{},"body":{"components/NgxTinynodesMatJsonOutputComponent.html":{}}}],["output.component.ts:19",{"_index":950,"title":{},"body":{"components/NgxTinynodesMatJsonOutputComponent.html":{}}}],["output.component.ts:23",{"_index":949,"title":{},"body":{"components/NgxTinynodesMatJsonOutputComponent.html":{}}}],["output.module",{"_index":933,"title":{},"body":{"modules/NgxTinynodesComponentsModule.html":{}}}],["output.module.ts",{"_index":964,"title":{},"body":{"modules/NgxTinynodesMatJsonOutputModule.html":{}}}],["output/mat",{"_index":932,"title":{},"body":{"modules/NgxTinynodesComponentsModule.html":{},"components/NgxTinynodesMatJsonOutputComponent.html":{},"modules/NgxTinynodesMatJsonOutputModule.html":{}}}],["outputdata",{"_index":135,"title":{},"body":{"interfaces/ChangeMap.html":{},"interfaces/EditorJSChange.html":{},"interfaces/EditorJSClass.html":{},"interfaces/EditorJSInstanceConfig.html":{},"interfaces/EditorMap.html":{},"interfaces/InjectorApiCallOptions.html":{},"interfaces/InjectorApiCallResponse.html":{},"interfaces/InjectorMethodOption.html":{},"interfaces/NgxEditorJSConfig.html":{},"directives/NgxEditorJSDirective.html":{},"interfaces/NgxEditorJSModuleConfig.html":{},"injectables/NgxEditorJSService.html":{},"interfaces/ReadyMap.html":{},"interfaces/SavedMap.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-readme.html":{}}}],["outputs",{"_index":428,"title":{},"body":{"directives/NgxEditorJSDirective.html":{}}}],["outside",{"_index":686,"title":{},"body":{"injectables/NgxEditorJSService.html":{}}}],["over",{"_index":1061,"title":{},"body":{"changelog.html":{}}}],["overall",{"_index":1023,"title":{},"body":{"changelog.html":{}}}],["overview",{"_index":1438,"title":{"overview.html":{}},"body":{"overview.html":{}}}],["owners",{"_index":1115,"title":{},"body":{"contributing.html":{}}}],["package",{"_index":1082,"title":{"dependencies.html":{}},"body":{"changelog.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-readme/ngx-editorjs-changelog.html":{}}}],["page",{"_index":1456,"title":{"additional-documentation/tinynodes-library-docs.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-readme.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-readme/ngx-editorjs-changelog.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-plugins-readme.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-plugins-readme/ngx-editorjs-plugins-changelog.html":{}},"body":{"todo.html":{}}}],["paragraph",{"_index":40,"title":{"interfaces/Paragraph.html":{}},"body":{"interfaces/Block.html":{},"interfaces/Header.html":{},"interfaces/HeaderBlock.html":{},"interfaces/Image.html":{},"interfaces/ImageBlock.html":{},"interfaces/List.html":{},"interfaces/ListBlock.html":{},"interfaces/NgxEditorJSConfig.html":{},"directives/NgxEditorJSDirective.html":{},"interfaces/NgxEditorJSModuleConfig.html":{},"interfaces/Paragraph.html":{},"interfaces/ParagraphBlock.html":{},"modules/PluginMarkerModule.html":{},"modules/PluginParagraphModule.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-readme.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-readme/ngx-editorjs-changelog.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-plugins-readme.html":{}}}],["paragraphblock",{"_index":42,"title":{"interfaces/ParagraphBlock.html":{}},"body":{"interfaces/Block.html":{},"interfaces/Header.html":{},"interfaces/HeaderBlock.html":{},"interfaces/Image.html":{},"interfaces/ImageBlock.html":{},"interfaces/List.html":{},"interfaces/ListBlock.html":{},"interfaces/Paragraph.html":{},"interfaces/ParagraphBlock.html":{},"miscellaneous/typealiases.html":{}}}],["param",{"_index":276,"title":{},"body":{"interfaces/EditorJSMaterialForm.html":{},"directives/NgxEditorJSDirective.html":{},"modules/NgxEditorJSModule.html":{},"injectables/NgxEditorJSPluginService.html":{},"injectables/NgxEditorJSService.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-plugins-readme.html":{}}}],["parameter",{"_index":1541,"title":{},"body":{"additional-documentation/tinynodes-library-docs/ngx-editorjs-readme/ngx-editorjs-changelog.html":{}}}],["parameters",{"_index":441,"title":{},"body":{"directives/NgxEditorJSDirective.html":{},"modules/NgxEditorJSModule.html":{},"injectables/NgxEditorJSPluginService.html":{},"injectables/NgxEditorJSService.html":{},"components/NgxTinynodesMatJsonOutputComponent.html":{},"contributing.html":{},"miscellaneous/functions.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-plugins-readme.html":{}}}],["parentmodule",{"_index":638,"title":{},"body":{"modules/NgxEditorJSModule.html":{}}}],["parma",{"_index":344,"title":{},"body":{"interfaces/EditorJSMaterialForm.html":{}}}],["parse",{"_index":169,"title":{},"body":{"interfaces/EditorJSClass.html":{},"interfaces/EditorJSInstanceConfig.html":{},"interfaces/InjectorApiCallOptions.html":{},"interfaces/InjectorApiCallResponse.html":{},"interfaces/InjectorMethodOption.html":{}}}],["participants",{"_index":1194,"title":{},"body":{"contributing.html":{}}}],["participation",{"_index":1150,"title":{},"body":{"contributing.html":{}}}],["particular",{"_index":1420,"title":{},"body":{"license.html":{}}}],["pass",{"_index":199,"title":{},"body":{"interfaces/EditorJSClass.html":{},"interfaces/EditorJSInstanceConfig.html":{},"interfaces/InjectorApiCallOptions.html":{},"interfaces/InjectorApiCallResponse.html":{},"interfaces/InjectorMethodOption.html":{},"directives/NgxEditorJSDirective.html":{},"modules/NgxEditorJSModule.html":{},"injectables/NgxEditorJSService.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-readme.html":{}}}],["passed",{"_index":398,"title":{},"body":{"interfaces/NgxEditorJSConfig.html":{},"interfaces/NgxEditorJSModuleConfig.html":{},"injectables/NgxEditorJSPluginService.html":{},"injectables/NgxEditorJSService.html":{},"miscellaneous/functions.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-readme.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-plugins-readme.html":{}}}],["passing",{"_index":1543,"title":{},"body":{"additional-documentation/tinynodes-library-docs/ngx-editorjs-readme/ngx-editorjs-changelog.html":{}}}],["paste",{"_index":1594,"title":{},"body":{"additional-documentation/tinynodes-library-docs/ngx-editorjs-plugins-readme.html":{}}}],["patches",{"_index":452,"title":{},"body":{"directives/NgxEditorJSDirective.html":{}}}],["paths",{"_index":499,"title":{},"body":{"directives/NgxEditorJSDirective.html":{}}}],["peer",{"_index":1454,"title":{},"body":{"todo.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-plugins-readme.html":{}}}],["peerdependencies",{"_index":1588,"title":{},"body":{"additional-documentation/tinynodes-library-docs/ngx-editorjs-plugins-readme.html":{}}}],["per",{"_index":124,"title":{},"body":{"interfaces/BlockData.html":{},"interfaces/PluginConfig.html":{},"interfaces/PluginConfigMap.html":{},"interfaces/ToolSettingsMap.html":{}}}],["permanent",{"_index":1291,"title":{},"body":{"contributing.html":{}}}],["permanently",{"_index":1237,"title":{},"body":{"contributing.html":{}}}],["permission",{"_index":1142,"title":{},"body":{"contributing.html":{},"license.html":{}}}],["permit",{"_index":1401,"title":{},"body":{"license.html":{}}}],["person",{"_index":1384,"title":{},"body":{"license.html":{}}}],["personal",{"_index":1166,"title":{},"body":{"contributing.html":{}}}],["persons",{"_index":1402,"title":{},"body":{"license.html":{}}}],["physical",{"_index":1207,"title":{},"body":{"contributing.html":{}}}],["pipe",{"_index":812,"title":{},"body":{"injectables/NgxEditorJSService.html":{}}}],["pipe(take(1",{"_index":842,"title":{},"body":{"injectables/NgxEditorJSService.html":{}}}],["pipe(take(1)).subscribe",{"_index":826,"title":{},"body":{"injectables/NgxEditorJSService.html":{}}}],["pipe(takeuntil(this.ondestroy",{"_index":367,"title":{},"body":{"interfaces/EditorJSMaterialForm.html":{},"directives/NgxEditorJSDirective.html":{}}}],["pipeline",{"_index":1446,"title":{},"body":{"todo.html":{}}}],["piper",{"_index":1373,"title":{},"body":{"index.html":{},"license.html":{}}}],["placeholder",{"_index":280,"title":{},"body":{"interfaces/EditorJSMaterialForm.html":{},"interfaces/NgxEditorJSConfig.html":{},"directives/NgxEditorJSDirective.html":{},"interfaces/NgxEditorJSModuleConfig.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-readme.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-readme/ngx-editorjs-changelog.html":{}}}],["placeholder(placeholder",{"_index":285,"title":{},"body":{"interfaces/EditorJSMaterialForm.html":{}}}],["please",{"_index":1110,"title":{},"body":{"contributing.html":{},"additional-documentation/tinynodes-library-docs.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-plugins-readme.html":{}}}],["pledge",{"_index":1144,"title":{},"body":{"contributing.html":{}}}],["plug",{"_index":893,"title":{},"body":{"modules/NgxEditorjsPluginsModule.html":{}}}],["plugin",{"_index":37,"title":{},"body":{"interfaces/Block.html":{},"interfaces/BlockData.html":{},"interfaces/Header.html":{},"interfaces/HeaderBlock.html":{},"interfaces/Image.html":{},"interfaces/ImageBlock.html":{},"interfaces/List.html":{},"interfaces/ListBlock.html":{},"directives/NgxEditorJSDirective.html":{},"injectables/NgxEditorJSPluginService.html":{},"injectables/NgxEditorJSService.html":{},"modules/NgxPluginServiceModule.html":{},"interfaces/Paragraph.html":{},"interfaces/ParagraphBlock.html":{},"interfaces/PluginConfig.html":{},"interfaces/PluginConfigMap.html":{},"interfaces/ToolSettingsMap.html":{},"changelog.html":{},"miscellaneous/functions.html":{},"index.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-readme.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-readme/ngx-editorjs-changelog.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-plugins-readme.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-plugins-readme/ngx-editorjs-plugins-changelog.html":{}}}],["plugin.plugin",{"_index":874,"title":{},"body":{"injectables/NgxEditorJSService.html":{}}}],["plugin.shortcut",{"_index":873,"title":{},"body":{"injectables/NgxEditorJSService.html":{}}}],["plugin.type",{"_index":876,"title":{},"body":{"injectables/NgxEditorJSService.html":{}}}],["plugin_config",{"_index":120,"title":{},"body":{"interfaces/BlockData.html":{},"modules/NgxPluginServiceModule.html":{},"modules/PluginCodeModule.html":{},"interfaces/PluginConfig.html":{},"interfaces/PluginConfigMap.html":{},"modules/PluginHeaderModule.html":{},"modules/PluginImageModule.html":{},"modules/PluginInlineCodeModule.html":{},"modules/PluginLinkModule.html":{},"modules/PluginListModule.html":{},"modules/PluginMarkerModule.html":{},"modules/PluginParagraphModule.html":{},"modules/PluginSimpleImageModule.html":{},"interfaces/ToolSettingsMap.html":{},"miscellaneous/variables.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-plugins-readme.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-plugins-readme/ngx-editorjs-plugins-changelog.html":{}}}],["pluginclasses",{"_index":125,"title":{},"body":{"interfaces/BlockData.html":{},"injectables/NgxEditorJSPluginService.html":{},"modules/NgxPluginServiceModule.html":{},"modules/PluginCodeModule.html":{},"interfaces/PluginConfig.html":{},"interfaces/PluginConfigMap.html":{},"modules/PluginHeaderModule.html":{},"modules/PluginImageModule.html":{},"modules/PluginLinkModule.html":{},"modules/PluginListModule.html":{},"modules/PluginMarkerModule.html":{},"modules/PluginSimpleImageModule.html":{},"interfaces/ToolSettingsMap.html":{},"miscellaneous/variables.html":{}}}],["plugincodemodule",{"_index":881,"title":{"modules/PluginCodeModule.html":{}},"body":{"modules/NgxEditorjsPluginsModule.html":{},"modules/PluginCodeModule.html":{},"modules.html":{},"overview.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-plugins-readme.html":{}}}],["pluginconfig",{"_index":97,"title":{"interfaces/PluginConfig.html":{}},"body":{"interfaces/BlockData.html":{},"injectables/NgxEditorJSPluginService.html":{},"interfaces/PluginConfig.html":{},"interfaces/PluginConfigMap.html":{},"interfaces/ToolSettingsMap.html":{}}}],["pluginconfigmap",{"_index":123,"title":{"interfaces/PluginConfigMap.html":{}},"body":{"interfaces/BlockData.html":{},"injectables/NgxEditorJSPluginService.html":{},"interfaces/PluginConfig.html":{},"interfaces/PluginConfigMap.html":{},"interfaces/ToolSettingsMap.html":{}}}],["pluginconfigs",{"_index":1345,"title":{},"body":{"miscellaneous/functions.html":{}}}],["pluginheader",{"_index":1499,"title":{},"body":{"additional-documentation/tinynodes-library-docs/ngx-editorjs-readme.html":{}}}],["pluginheadermodule",{"_index":882,"title":{"modules/PluginHeaderModule.html":{}},"body":{"modules/NgxEditorjsPluginsModule.html":{},"modules/PluginHeaderModule.html":{},"modules.html":{},"overview.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-readme.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-plugins-readme.html":{}}}],["pluginilistmodule",{"_index":1592,"title":{},"body":{"additional-documentation/tinynodes-library-docs/ngx-editorjs-plugins-readme.html":{}}}],["pluginimagemodule",{"_index":883,"title":{"modules/PluginImageModule.html":{}},"body":{"modules/NgxEditorjsPluginsModule.html":{},"modules/PluginImageModule.html":{},"modules.html":{},"overview.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-plugins-readme.html":{}}}],["plugininlinecodemodule",{"_index":884,"title":{"modules/PluginInlineCodeModule.html":{}},"body":{"modules/NgxEditorjsPluginsModule.html":{},"modules/PluginInlineCodeModule.html":{},"modules.html":{},"overview.html":{}}}],["pluginlinkmodule",{"_index":885,"title":{"modules/PluginLinkModule.html":{}},"body":{"modules/NgxEditorjsPluginsModule.html":{},"modules/PluginLinkModule.html":{},"modules.html":{},"overview.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-plugins-readme.html":{}}}],["pluginlist",{"_index":1500,"title":{},"body":{"additional-documentation/tinynodes-library-docs/ngx-editorjs-readme.html":{}}}],["pluginlistmodule",{"_index":886,"title":{"modules/PluginListModule.html":{}},"body":{"modules/NgxEditorjsPluginsModule.html":{},"modules/PluginListModule.html":{},"modules.html":{},"overview.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-readme.html":{}}}],["pluginmap",{"_index":680,"title":{},"body":{"injectables/NgxEditorJSPluginService.html":{}}}],["pluginmarkermodule",{"_index":887,"title":{"modules/PluginMarkerModule.html":{}},"body":{"modules/NgxEditorjsPluginsModule.html":{},"modules/PluginMarkerModule.html":{},"modules.html":{},"overview.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-plugins-readme.html":{}}}],["pluginname",{"_index":104,"title":{},"body":{"interfaces/BlockData.html":{},"modules/PluginCodeModule.html":{},"interfaces/PluginConfig.html":{},"interfaces/PluginConfigMap.html":{},"modules/PluginHeaderModule.html":{},"modules/PluginImageModule.html":{},"modules/PluginInlineCodeModule.html":{},"modules/PluginLinkModule.html":{},"modules/PluginListModule.html":{},"modules/PluginMarkerModule.html":{},"modules/PluginParagraphModule.html":{},"modules/PluginSimpleImageModule.html":{},"interfaces/ToolSettingsMap.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-plugins-readme.html":{}}}],["pluginparagraph",{"_index":1498,"title":{},"body":{"additional-documentation/tinynodes-library-docs/ngx-editorjs-readme.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-plugins-readme.html":{}}}],["pluginparagraphmodule",{"_index":888,"title":{"modules/PluginParagraphModule.html":{}},"body":{"modules/NgxEditorjsPluginsModule.html":{},"modules/PluginParagraphModule.html":{},"modules.html":{},"overview.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-readme.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-plugins-readme.html":{}}}],["pluginproperty",{"_index":87,"title":{},"body":{"interfaces/BlockData.html":{},"interfaces/PluginConfig.html":{},"interfaces/PluginConfigMap.html":{},"interfaces/ToolSettingsMap.html":{},"miscellaneous/typealiases.html":{}}}],["plugins",{"_index":77,"title":{"additional-documentation/tinynodes-library-docs/ngx-editorjs-plugins-readme.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-plugins-readme/ngx-editorjs-plugins-changelog.html":{}},"body":{"interfaces/BlockData.html":{},"modules/NgxEditorJSModule.html":{},"injectables/NgxEditorJSPluginService.html":{},"injectables/NgxEditorJSService.html":{},"interfaces/PluginConfig.html":{},"interfaces/PluginConfigMap.html":{},"interfaces/ToolSettingsMap.html":{},"changelog.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"index.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-readme.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-readme/ngx-editorjs-changelog.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-plugins-readme.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-plugins-readme/ngx-editorjs-plugins-changelog.html":{}}}],["plugins.module.ts",{"_index":891,"title":{},"body":{"modules/NgxEditorjsPluginsModule.html":{}}}],["plugins/code/code.module",{"_index":897,"title":{},"body":{"modules/NgxEditorjsPluginsModule.html":{}}}],["plugins/header/header.module",{"_index":898,"title":{},"body":{"modules/NgxEditorjsPluginsModule.html":{}}}],["plugins/image/image.module",{"_index":899,"title":{},"body":{"modules/NgxEditorjsPluginsModule.html":{}}}],["plugins/inline",{"_index":909,"title":{},"body":{"modules/NgxEditorjsPluginsModule.html":{}}}],["plugins/link/link.module",{"_index":900,"title":{},"body":{"modules/NgxEditorjsPluginsModule.html":{}}}],["plugins/list/list.module",{"_index":901,"title":{},"body":{"modules/NgxEditorjsPluginsModule.html":{}}}],["plugins/marker/marker.module",{"_index":902,"title":{},"body":{"modules/NgxEditorjsPluginsModule.html":{}}}],["plugins/paragraph/paragraph.module",{"_index":903,"title":{},"body":{"modules/NgxEditorjsPluginsModule.html":{}}}],["plugins/simple",{"_index":904,"title":{},"body":{"modules/NgxEditorjsPluginsModule.html":{}}}],["plugins/src/lib/ngx",{"_index":890,"title":{},"body":{"modules/NgxEditorjsPluginsModule.html":{}}}],["plugins/src/lib/plugins/code/code.module.ts",{"_index":981,"title":{},"body":{"modules/PluginCodeModule.html":{}}}],["plugins/src/lib/plugins/header/header.module.ts",{"_index":991,"title":{},"body":{"modules/PluginHeaderModule.html":{}}}],["plugins/src/lib/plugins/image/image.module.ts",{"_index":994,"title":{},"body":{"modules/PluginImageModule.html":{}}}],["plugins/src/lib/plugins/inline",{"_index":997,"title":{},"body":{"modules/PluginInlineCodeModule.html":{}}}],["plugins/src/lib/plugins/link/link.module.ts",{"_index":1003,"title":{},"body":{"modules/PluginLinkModule.html":{}}}],["plugins/src/lib/plugins/list/list.module.ts",{"_index":1005,"title":{},"body":{"modules/PluginListModule.html":{}}}],["plugins/src/lib/plugins/marker/marker.module.ts",{"_index":1007,"title":{},"body":{"modules/PluginMarkerModule.html":{}}}],["plugins/src/lib/plugins/paragraph/paragraph.module.ts",{"_index":1011,"title":{},"body":{"modules/PluginParagraphModule.html":{}}}],["plugins/src/lib/plugins/simple",{"_index":1012,"title":{},"body":{"modules/PluginSimpleImageModule.html":{}}}],["plugins/src/lib/services/plugin",{"_index":643,"title":{},"body":{"injectables/NgxEditorJSPluginService.html":{},"modules/NgxPluginServiceModule.html":{}}}],["plugins/src/lib/types/plugins.ts",{"_index":68,"title":{},"body":{"interfaces/BlockData.html":{},"interfaces/PluginConfig.html":{},"interfaces/PluginConfigMap.html":{},"interfaces/ToolSettingsMap.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["plugins/src/lib/types/plugins.ts:43",{"_index":1019,"title":{},"body":{"interfaces/ToolSettingsMap.html":{}}}],["plugins/src/lib/types/plugins.ts:7",{"_index":69,"title":{},"body":{"interfaces/BlockData.html":{}}}],["plugins/src/lib/types/plugins.ts:98",{"_index":990,"title":{},"body":{"interfaces/PluginConfigMap.html":{}}}],["plugins/src/lib/util/plugin.ts",{"_index":1343,"title":{},"body":{"miscellaneous/functions.html":{}}}],["plugins@2.0.0",{"_index":1036,"title":{},"body":{"changelog.html":{}}}],["pluginservice",{"_index":1599,"title":{},"body":{"additional-documentation/tinynodes-library-docs/ngx-editorjs-plugins-readme/ngx-editorjs-plugins-changelog.html":{}}}],["pluginsimpleimagemodule",{"_index":889,"title":{"modules/PluginSimpleImageModule.html":{}},"body":{"modules/NgxEditorjsPluginsModule.html":{},"modules/PluginSimpleImageModule.html":{},"modules.html":{},"overview.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-plugins-readme.html":{}}}],["plugintype",{"_index":84,"title":{},"body":{"interfaces/BlockData.html":{},"interfaces/PluginConfig.html":{},"interfaces/PluginConfigMap.html":{},"interfaces/ToolSettingsMap.html":{},"miscellaneous/typealiases.html":{}}}],["plugintypes",{"_index":82,"title":{},"body":{"interfaces/BlockData.html":{},"modules/PluginCodeModule.html":{},"interfaces/PluginConfig.html":{},"interfaces/PluginConfigMap.html":{},"modules/PluginHeaderModule.html":{},"modules/PluginImageModule.html":{},"modules/PluginInlineCodeModule.html":{},"modules/PluginLinkModule.html":{},"modules/PluginListModule.html":{},"modules/PluginMarkerModule.html":{},"modules/PluginParagraphModule.html":{},"modules/PluginSimpleImageModule.html":{},"interfaces/ToolSettingsMap.html":{},"miscellaneous/enumerations.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-plugins-readme.html":{}}}],["plugintypes.block",{"_index":85,"title":{},"body":{"interfaces/BlockData.html":{},"modules/PluginCodeModule.html":{},"interfaces/PluginConfig.html":{},"interfaces/PluginConfigMap.html":{},"modules/PluginHeaderModule.html":{},"modules/PluginImageModule.html":{},"modules/PluginLinkModule.html":{},"modules/PluginListModule.html":{},"modules/PluginParagraphModule.html":{},"modules/PluginSimpleImageModule.html":{},"interfaces/ToolSettingsMap.html":{},"miscellaneous/typealiases.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-plugins-readme.html":{}}}],["plugintypes.inline",{"_index":86,"title":{},"body":{"interfaces/BlockData.html":{},"interfaces/PluginConfig.html":{},"interfaces/PluginConfigMap.html":{},"modules/PluginInlineCodeModule.html":{},"modules/PluginMarkerModule.html":{},"interfaces/ToolSettingsMap.html":{},"miscellaneous/typealiases.html":{}}}],["policies",{"_index":1284,"title":{},"body":{"contributing.html":{}}}],["political",{"_index":1203,"title":{},"body":{"contributing.html":{}}}],["portions",{"_index":1411,"title":{},"body":{"license.html":{}}}],["ports",{"_index":1129,"title":{},"body":{"contributing.html":{}}}],["positive",{"_index":1175,"title":{},"body":{"contributing.html":{}}}],["possible",{"_index":895,"title":{},"body":{"modules/NgxEditorjsPluginsModule.html":{}}}],["posted",{"_index":1285,"title":{},"body":{"contributing.html":{}}}],["posting",{"_index":1252,"title":{},"body":{"contributing.html":{}}}],["potential",{"_index":1506,"title":{},"body":{"additional-documentation/tinynodes-library-docs/ngx-editorjs-readme.html":{}}}],["pre",{"_index":1572,"title":{},"body":{"additional-documentation/tinynodes-library-docs/ngx-editorjs-readme/ngx-editorjs-changelog.html":{}}}],["private",{"_index":281,"title":{},"body":{"interfaces/EditorJSMaterialForm.html":{},"directives/NgxEditorJSDirective.html":{},"injectables/NgxEditorJSPluginService.html":{},"injectables/NgxEditorJSService.html":{},"contributing.html":{},"index.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-readme/ngx-editorjs-changelog.html":{}}}],["process",{"_index":504,"title":{},"body":{"directives/NgxEditorJSDirective.html":{},"contributing.html":{}}}],["professional",{"_index":1214,"title":{},"body":{"contributing.html":{}}}],["project",{"_index":1044,"title":{},"body":{"changelog.html":{},"contributing.html":{},"index.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-readme.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-readme/ngx-editorjs-changelog.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-plugins-readme.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-plugins-readme/ngx-editorjs-plugins-changelog.html":{}}}],["project's",{"_index":1294,"title":{},"body":{"contributing.html":{}}}],["projects",{"_index":1481,"title":{},"body":{"additional-documentation/tinynodes-library-docs.html":{}}}],["promise",{"_index":490,"title":{},"body":{"directives/NgxEditorJSDirective.html":{},"injectables/NgxEditorJSService.html":{}}}],["properties",{"_index":13,"title":{},"body":{"interfaces/Block.html":{},"interfaces/CreateEditorJSOptions.html":{},"interfaces/EditorJSChange.html":{},"interfaces/EditorJSClass.html":{},"interfaces/EditorJSInstanceConfig.html":{},"interfaces/EditorJSMaterialForm.html":{},"interfaces/Header.html":{},"interfaces/HeaderBlock.html":{},"interfaces/Image.html":{},"interfaces/ImageBlock.html":{},"interfaces/InjectorApiCallOptions.html":{},"interfaces/InjectorApiCallResponse.html":{},"interfaces/InjectorMethodOption.html":{},"interfaces/List.html":{},"interfaces/ListBlock.html":{},"interfaces/NgxEditorJSConfig.html":{},"interfaces/NgxEditorJSModuleConfig.html":{},"interfaces/Paragraph.html":{},"interfaces/ParagraphBlock.html":{},"interfaces/PluginConfig.html":{},"index.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-readme.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-readme/ngx-editorjs-changelog.html":{}}}],["property",{"_index":54,"title":{},"body":{"interfaces/Block.html":{},"interfaces/BlockData.html":{},"interfaces/EditorJSClass.html":{},"interfaces/EditorJSInstanceConfig.html":{},"interfaces/Header.html":{},"interfaces/HeaderBlock.html":{},"interfaces/Image.html":{},"interfaces/ImageBlock.html":{},"interfaces/InjectorApiCallOptions.html":{},"interfaces/InjectorApiCallResponse.html":{},"interfaces/InjectorMethodOption.html":{},"interfaces/List.html":{},"interfaces/ListBlock.html":{},"directives/NgxEditorJSDirective.html":{},"interfaces/Paragraph.html":{},"interfaces/ParagraphBlock.html":{},"interfaces/PluginConfig.html":{},"interfaces/PluginConfigMap.html":{},"interfaces/ToolSettingsMap.html":{},"miscellaneous/typealiases.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-readme/ngx-editorjs-changelog.html":{}}}],["protected",{"_index":349,"title":{},"body":{"interfaces/EditorJSMaterialForm.html":{},"directives/NgxEditorJSDirective.html":{}}}],["provide",{"_index":246,"title":{},"body":{"interfaces/EditorJSMaterialForm.html":{},"modules/NgxEditorJSModule.html":{},"injectables/NgxEditorJSService.html":{},"modules/NgxEditorjsPluginsModule.html":{},"modules/NgxPluginServiceModule.html":{},"modules/PluginCodeModule.html":{},"modules/PluginHeaderModule.html":{},"modules/PluginImageModule.html":{},"modules/PluginInlineCodeModule.html":{},"modules/PluginLinkModule.html":{},"modules/PluginListModule.html":{},"modules/PluginMarkerModule.html":{},"modules/PluginParagraphModule.html":{},"modules/PluginSimpleImageModule.html":{},"changelog.html":{},"index.html":{},"todo.html":{},"miscellaneous/variables.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-readme.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-readme/ngx-editorjs-changelog.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-plugins-readme.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-plugins-readme/ngx-editorjs-plugins-changelog.html":{}}}],["provided",{"_index":36,"title":{},"body":{"interfaces/Block.html":{},"interfaces/Header.html":{},"interfaces/HeaderBlock.html":{},"interfaces/Image.html":{},"interfaces/ImageBlock.html":{},"interfaces/List.html":{},"interfaces/ListBlock.html":{},"directives/NgxEditorJSDirective.html":{},"modules/NgxEditorJSModule.html":{},"injectables/NgxEditorJSPluginService.html":{},"injectables/NgxEditorJSService.html":{},"interfaces/Paragraph.html":{},"interfaces/ParagraphBlock.html":{},"changelog.html":{},"license.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-readme.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-readme/ngx-editorjs-changelog.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-plugins-readme.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-plugins-readme/ngx-editorjs-plugins-changelog.html":{}}}],["providedin",{"_index":672,"title":{},"body":{"injectables/NgxEditorJSPluginService.html":{},"injectables/NgxEditorJSService.html":{}}}],["provider",{"_index":99,"title":{},"body":{"interfaces/BlockData.html":{},"interfaces/EditorJSMaterialForm.html":{},"interfaces/PluginConfig.html":{},"interfaces/PluginConfigMap.html":{},"interfaces/ToolSettingsMap.html":{},"miscellaneous/variables.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-readme.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-readme/ngx-editorjs-changelog.html":{}}}],["providers",{"_index":261,"title":{},"body":{"interfaces/EditorJSMaterialForm.html":{},"modules/NgxEditorJSModule.html":{},"injectables/NgxEditorJSPluginService.html":{},"modules/NgxEditorjsPluginsModule.html":{},"modules/NgxPluginServiceModule.html":{},"modules/NgxTinynodesComponentsModule.html":{},"modules/NgxTinynodesMatJsonOutputModule.html":{},"modules/NgxTinynodesMatTagInputModule.html":{},"modules/PluginCodeModule.html":{},"modules/PluginHeaderModule.html":{},"modules/PluginImageModule.html":{},"modules/PluginInlineCodeModule.html":{},"modules/PluginLinkModule.html":{},"modules/PluginListModule.html":{},"modules/PluginMarkerModule.html":{},"modules/PluginParagraphModule.html":{},"modules/PluginSimpleImageModule.html":{},"changelog.html":{},"overview.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-readme.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-plugins-readme.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-plugins-readme/ngx-editorjs-plugins-changelog.html":{}}}],["provides",{"_index":167,"title":{},"body":{"interfaces/EditorJSClass.html":{},"interfaces/EditorJSInstanceConfig.html":{},"interfaces/EditorJSMaterialForm.html":{},"interfaces/InjectorApiCallOptions.html":{},"interfaces/InjectorApiCallResponse.html":{},"interfaces/InjectorMethodOption.html":{},"directives/NgxEditorJSDirective.html":{},"modules/NgxEditorJSModule.html":{},"injectables/NgxEditorJSService.html":{},"modules/NgxEditorjsPluginsModule.html":{},"modules/PluginCodeModule.html":{},"modules/PluginHeaderModule.html":{},"modules/PluginImageModule.html":{},"modules/PluginInlineCodeModule.html":{},"modules/PluginLinkModule.html":{},"modules/PluginListModule.html":{},"modules/PluginMarkerModule.html":{},"modules/PluginParagraphModule.html":{},"modules/PluginSimpleImageModule.html":{},"changelog.html":{},"index.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-readme.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-readme/ngx-editorjs-changelog.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-plugins-readme.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-plugins-readme/ngx-editorjs-plugins-changelog.html":{}}}],["providing",{"_index":1547,"title":{},"body":{"additional-documentation/tinynodes-library-docs/ngx-editorjs-readme/ngx-editorjs-changelog.html":{}}}],["provied",{"_index":401,"title":{},"body":{"interfaces/NgxEditorJSConfig.html":{},"interfaces/NgxEditorJSModuleConfig.html":{},"miscellaneous/variables.html":{}}}],["public",{"_index":267,"title":{},"body":{"interfaces/EditorJSMaterialForm.html":{},"directives/NgxEditorJSDirective.html":{},"injectables/NgxEditorJSPluginService.html":{},"injectables/NgxEditorJSService.html":{},"components/NgxTinynodesMatJsonOutputComponent.html":{},"contributing.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-readme/ngx-editorjs-changelog.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-plugins-readme/ngx-editorjs-plugins-changelog.html":{}}}],["publish",{"_index":1395,"title":{},"body":{"license.html":{},"todo.html":{}}}],["publishing",{"_index":1205,"title":{},"body":{"contributing.html":{},"todo.html":{}}}],["pull",{"_index":1120,"title":{},"body":{"contributing.html":{}}}],["purpose",{"_index":1421,"title":{},"body":{"license.html":{}}}],["r",{"_index":808,"title":{},"body":{"injectables/NgxEditorJSService.html":{}}}],["race",{"_index":1168,"title":{},"body":{"contributing.html":{}}}],["re",{"_index":1038,"title":{},"body":{"changelog.html":{}}}],["reactive",{"_index":1356,"title":{},"body":{"index.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-readme.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-readme/ngx-editorjs-changelog.html":{}}}],["read",{"_index":312,"title":{},"body":{"interfaces/EditorJSMaterialForm.html":{}}}],["readme",{"_index":1367,"title":{"additional-documentation/tinynodes-library-docs/ngx-editorjs-readme.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-plugins-readme.html":{}},"body":{"index.html":{},"additional-documentation/tinynodes-library-docs.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-readme/ngx-editorjs-changelog.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-plugins-readme.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-plugins-readme/ngx-editorjs-plugins-changelog.html":{}}}],["readme.md",{"_index":1124,"title":{},"body":{"contributing.html":{},"additional-documentation/tinynodes-library-docs.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-plugins-readme/ngx-editorjs-plugins-changelog.html":{}}}],["readonly",{"_index":313,"title":{},"body":{"interfaces/EditorJSMaterialForm.html":{},"directives/NgxEditorJSDirective.html":{},"injectables/NgxEditorJSPluginService.html":{},"injectables/NgxEditorJSService.html":{},"components/NgxTinynodesMatJsonOutputComponent.html":{}}}],["ready",{"_index":141,"title":{},"body":{"interfaces/ChangeMap.html":{},"interfaces/EditorJSChange.html":{},"interfaces/EditorJSClass.html":{},"interfaces/EditorJSInstanceConfig.html":{},"interfaces/EditorMap.html":{},"interfaces/InjectorApiCallOptions.html":{},"interfaces/InjectorApiCallResponse.html":{},"interfaces/InjectorMethodOption.html":{},"directives/NgxEditorJSDirective.html":{},"injectables/NgxEditorJSService.html":{},"interfaces/ReadyMap.html":{},"interfaces/SavedMap.html":{}}}],["readymap",{"_index":143,"title":{"interfaces/ReadyMap.html":{}},"body":{"interfaces/ChangeMap.html":{},"interfaces/EditorJSChange.html":{},"interfaces/EditorMap.html":{},"injectables/NgxEditorJSService.html":{},"interfaces/ReadyMap.html":{},"interfaces/SavedMap.html":{}}}],["reasonably",{"_index":1211,"title":{},"body":{"contributing.html":{}}}],["reduce",{"_index":871,"title":{},"body":{"injectables/NgxEditorJSService.html":{}}}],["reduce((pluginmap",{"_index":679,"title":{},"body":{"injectables/NgxEditorJSPluginService.html":{}}}],["ref",{"_index":347,"title":{},"body":{"interfaces/EditorJSMaterialForm.html":{},"injectables/NgxEditorJSService.html":{}}}],["refactored",{"_index":1540,"title":{},"body":{"additional-documentation/tinynodes-library-docs/ngx-editorjs-readme/ngx-editorjs-changelog.html":{}}}],["reflect",{"_index":1066,"title":{},"body":{"changelog.html":{}}}],["regard",{"_index":1280,"title":{},"body":{"contributing.html":{}}}],["regardless",{"_index":1156,"title":{},"body":{"contributing.html":{}}}],["regenerated",{"_index":1563,"title":{},"body":{"additional-documentation/tinynodes-library-docs/ngx-editorjs-readme/ngx-editorjs-changelog.html":{}}}],["reject",{"_index":1229,"title":{},"body":{"contributing.html":{}}}],["related",{"_index":555,"title":{},"body":{"directives/NgxEditorJSDirective.html":{},"changelog.html":{}}}],["release",{"_index":1062,"title":{},"body":{"changelog.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-readme/ngx-editorjs-changelog.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-plugins-readme/ngx-editorjs-plugins-changelog.html":{}}}],["released",{"_index":1034,"title":{},"body":{"changelog.html":{},"additional-documentation/tinynodes-library-docs.html":{}}}],["releases",{"_index":1585,"title":{},"body":{"additional-documentation/tinynodes-library-docs/ngx-editorjs-plugins-readme.html":{}}}],["reliable",{"_index":1596,"title":{},"body":{"additional-documentation/tinynodes-library-docs/ngx-editorjs-plugins-readme/ngx-editorjs-plugins-changelog.html":{}}}],["religion",{"_index":1169,"title":{},"body":{"contributing.html":{}}}],["remark",{"_index":767,"title":{},"body":{"injectables/NgxEditorJSService.html":{}}}],["remarks",{"_index":794,"title":{},"body":{"injectables/NgxEditorJSService.html":{}}}],["remove",{"_index":1227,"title":{},"body":{"contributing.html":{}}}],["removed",{"_index":1081,"title":{},"body":{"changelog.html":{},"contributing.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-readme/ngx-editorjs-changelog.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-plugins-readme/ngx-editorjs-plugins-changelog.html":{}}}],["renamed",{"_index":1569,"title":{},"body":{"additional-documentation/tinynodes-library-docs/ngx-editorjs-readme/ngx-editorjs-changelog.html":{}}}],["render",{"_index":387,"title":{},"body":{"interfaces/NgxEditorJSConfig.html":{},"directives/NgxEditorJSDirective.html":{},"interfaces/NgxEditorJSModuleConfig.html":{},"injectables/NgxEditorJSService.html":{}}}],["rendered",{"_index":1484,"title":{},"body":{"additional-documentation/tinynodes-library-docs.html":{}}}],["repercussions",{"_index":1292,"title":{},"body":{"contributing.html":{}}}],["replaced",{"_index":1568,"title":{},"body":{"additional-documentation/tinynodes-library-docs/ngx-editorjs-readme/ngx-editorjs-changelog.html":{}}}],["repo",{"_index":984,"title":{},"body":{"modules/PluginCodeModule.html":{},"modules/PluginHeaderModule.html":{},"modules/PluginImageModule.html":{},"modules/PluginInlineCodeModule.html":{},"modules/PluginLinkModule.html":{},"modules/PluginListModule.html":{},"modules/PluginMarkerModule.html":{},"modules/PluginParagraphModule.html":{},"modules/PluginSimpleImageModule.html":{},"todo.html":{}}}],["repo](https://github.com/editor",{"_index":988,"title":{},"body":{"modules/PluginCodeModule.html":{},"modules/PluginHeaderModule.html":{},"modules/PluginImageModule.html":{},"modules/PluginInlineCodeModule.html":{},"modules/PluginLinkModule.html":{},"modules/PluginListModule.html":{},"modules/PluginMarkerModule.html":{},"modules/PluginParagraphModule.html":{},"modules/PluginSimpleImageModule.html":{}}}],["report",{"_index":1086,"title":{},"body":{"changelog.html":{}}}],["reported",{"_index":1267,"title":{},"body":{"contributing.html":{}}}],["reporter",{"_index":1281,"title":{},"body":{"contributing.html":{}}}],["repository",{"_index":1109,"title":{},"body":{"contributing.html":{},"index.html":{}}}],["represent",{"_index":1135,"title":{},"body":{"contributing.html":{}}}],["representation",{"_index":1261,"title":{},"body":{"contributing.html":{}}}],["representative",{"_index":1258,"title":{},"body":{"contributing.html":{}}}],["representing",{"_index":1248,"title":{},"body":{"contributing.html":{}}}],["request",{"_index":850,"title":{},"body":{"injectables/NgxEditorJSService.html":{},"contributing.html":{}}}],["requied",{"_index":295,"title":{},"body":{"interfaces/EditorJSMaterialForm.html":{}}}],["require",{"_index":1470,"title":{},"body":{"miscellaneous/variables.html":{}}}],["require.context",{"_index":1474,"title":{},"body":{"miscellaneous/variables.html":{}}}],["required",{"_index":174,"title":{},"body":{"interfaces/EditorJSClass.html":{},"interfaces/EditorJSInstanceConfig.html":{},"interfaces/EditorJSMaterialForm.html":{},"interfaces/InjectorApiCallOptions.html":{},"interfaces/InjectorApiCallResponse.html":{},"interfaces/InjectorMethodOption.html":{},"injectables/NgxEditorJSService.html":{},"modules/NgxEditorjsPluginsModule.html":{},"index.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-readme.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-readme/ngx-editorjs-changelog.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-plugins-readme.html":{}}}],["required(required",{"_index":297,"title":{},"body":{"interfaces/EditorJSMaterialForm.html":{}}}],["requirement",{"_index":1595,"title":{},"body":{"additional-documentation/tinynodes-library-docs/ngx-editorjs-plugins-readme/ngx-editorjs-plugins-changelog.html":{}}}],["requires",{"_index":1589,"title":{},"body":{"additional-documentation/tinynodes-library-docs/ngx-editorjs-plugins-readme.html":{}}}],["reset",{"_index":600,"title":{},"body":{"modules/NgxEditorJSModule.html":{},"modules/NgxEditorjsPluginsModule.html":{},"modules/NgxPluginServiceModule.html":{},"modules/NgxTinynodesComponentsModule.html":{},"modules/NgxTinynodesMatJsonOutputModule.html":{},"modules/NgxTinynodesMatTagInputModule.html":{},"overview.html":{}}}],["resetting",{"_index":752,"title":{},"body":{"injectables/NgxEditorJSService.html":{}}}],["resolved",{"_index":796,"title":{},"body":{"injectables/NgxEditorJSService.html":{},"changelog.html":{}}}],["respectful",{"_index":1179,"title":{},"body":{"contributing.html":{}}}],["response",{"_index":204,"title":{},"body":{"interfaces/EditorJSClass.html":{},"interfaces/EditorJSInstanceConfig.html":{},"interfaces/InjectorApiCallOptions.html":{},"interfaces/InjectorApiCallResponse.html":{},"interfaces/InjectorMethodOption.html":{},"injectables/NgxEditorJSService.html":{},"contributing.html":{}}}],["responsibilities",{"_index":1216,"title":{},"body":{"contributing.html":{}}}],["responsibility",{"_index":1226,"title":{},"body":{"contributing.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-readme/ngx-editorjs-changelog.html":{}}}],["responsible",{"_index":1217,"title":{},"body":{"contributing.html":{}}}],["restriction",{"_index":1390,"title":{},"body":{"license.html":{}}}],["result",{"_index":64,"title":{},"body":{"interfaces/Block.html":{},"interfaces/BlockData.html":{},"interfaces/ChangeMap.html":{},"interfaces/CreateEditorJSOptions.html":{},"interfaces/EditorJSChange.html":{},"interfaces/EditorJSClass.html":{},"interfaces/EditorJSInstanceConfig.html":{},"interfaces/EditorJSMaterialForm.html":{},"interfaces/EditorMap.html":{},"interfaces/Header.html":{},"interfaces/HeaderBlock.html":{},"interfaces/Image.html":{},"interfaces/ImageBlock.html":{},"interfaces/InjectorApiCallOptions.html":{},"interfaces/InjectorApiCallResponse.html":{},"interfaces/InjectorMethodOption.html":{},"interfaces/List.html":{},"interfaces/ListBlock.html":{},"interfaces/NgxEditorJSConfig.html":{},"directives/NgxEditorJSDirective.html":{},"modules/NgxEditorJSModule.html":{},"interfaces/NgxEditorJSModuleConfig.html":{},"injectables/NgxEditorJSPluginService.html":{},"injectables/NgxEditorJSService.html":{},"modules/NgxEditorjsPluginsModule.html":{},"modules/NgxPluginServiceModule.html":{},"modules/NgxTinynodesComponentsModule.html":{},"interfaces/NgxTinynodesMatFieldComponent.html":{},"components/NgxTinynodesMatJsonOutputComponent.html":{},"modules/NgxTinynodesMatJsonOutputModule.html":{},"modules/NgxTinynodesMatTagInputModule.html":{},"interfaces/Paragraph.html":{},"interfaces/ParagraphBlock.html":{},"modules/PluginCodeModule.html":{},"interfaces/PluginConfig.html":{},"interfaces/PluginConfigMap.html":{},"modules/PluginHeaderModule.html":{},"modules/PluginImageModule.html":{},"modules/PluginInlineCodeModule.html":{},"modules/PluginLinkModule.html":{},"modules/PluginListModule.html":{},"modules/PluginMarkerModule.html":{},"modules/PluginParagraphModule.html":{},"modules/PluginSimpleImageModule.html":{},"interfaces/ReadyMap.html":{},"interfaces/SavedMap.html":{},"interfaces/ToolSettingsMap.html":{},"changelog.html":{},"contributing.html":{},"dependencies.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"index.html":{},"license.html":{},"modules.html":{},"overview.html":{},"todo.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{},"additional-documentation/tinynodes-library-docs.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-readme.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-readme/ngx-editorjs-changelog.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-plugins-readme.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-plugins-readme/ngx-editorjs-plugins-changelog.html":{}}}],["results",{"_index":66,"title":{},"body":{"interfaces/Block.html":{},"interfaces/BlockData.html":{},"interfaces/ChangeMap.html":{},"interfaces/CreateEditorJSOptions.html":{},"interfaces/EditorJSChange.html":{},"interfaces/EditorJSClass.html":{},"interfaces/EditorJSInstanceConfig.html":{},"interfaces/EditorJSMaterialForm.html":{},"interfaces/EditorMap.html":{},"interfaces/Header.html":{},"interfaces/HeaderBlock.html":{},"interfaces/Image.html":{},"interfaces/ImageBlock.html":{},"interfaces/InjectorApiCallOptions.html":{},"interfaces/InjectorApiCallResponse.html":{},"interfaces/InjectorMethodOption.html":{},"interfaces/List.html":{},"interfaces/ListBlock.html":{},"interfaces/NgxEditorJSConfig.html":{},"directives/NgxEditorJSDirective.html":{},"modules/NgxEditorJSModule.html":{},"interfaces/NgxEditorJSModuleConfig.html":{},"injectables/NgxEditorJSPluginService.html":{},"injectables/NgxEditorJSService.html":{},"modules/NgxEditorjsPluginsModule.html":{},"modules/NgxPluginServiceModule.html":{},"modules/NgxTinynodesComponentsModule.html":{},"interfaces/NgxTinynodesMatFieldComponent.html":{},"components/NgxTinynodesMatJsonOutputComponent.html":{},"modules/NgxTinynodesMatJsonOutputModule.html":{},"modules/NgxTinynodesMatTagInputModule.html":{},"interfaces/Paragraph.html":{},"interfaces/ParagraphBlock.html":{},"modules/PluginCodeModule.html":{},"interfaces/PluginConfig.html":{},"interfaces/PluginConfigMap.html":{},"modules/PluginHeaderModule.html":{},"modules/PluginImageModule.html":{},"modules/PluginInlineCodeModule.html":{},"modules/PluginLinkModule.html":{},"modules/PluginListModule.html":{},"modules/PluginMarkerModule.html":{},"modules/PluginParagraphModule.html":{},"modules/PluginSimpleImageModule.html":{},"interfaces/ReadyMap.html":{},"interfaces/SavedMap.html":{},"interfaces/ToolSettingsMap.html":{},"changelog.html":{},"contributing.html":{},"dependencies.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"index.html":{},"license.html":{},"modules.html":{},"overview.html":{},"todo.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{},"additional-documentation/tinynodes-library-docs.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-readme.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-readme/ngx-editorjs-changelog.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-plugins-readme.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-plugins-readme/ngx-editorjs-plugins-changelog.html":{}}}],["return",{"_index":274,"title":{},"body":{"interfaces/EditorJSMaterialForm.html":{},"directives/NgxEditorJSDirective.html":{},"modules/NgxEditorJSModule.html":{},"injectables/NgxEditorJSPluginService.html":{},"injectables/NgxEditorJSService.html":{},"miscellaneous/functions.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-readme.html":{}}}],["returning",{"_index":1339,"title":{},"body":{"miscellaneous/functions.html":{}}}],["returns",{"_index":163,"title":{},"body":{"interfaces/EditorJSClass.html":{},"interfaces/EditorJSInstanceConfig.html":{},"interfaces/InjectorApiCallOptions.html":{},"interfaces/InjectorApiCallResponse.html":{},"interfaces/InjectorMethodOption.html":{},"directives/NgxEditorJSDirective.html":{},"modules/NgxEditorJSModule.html":{},"injectables/NgxEditorJSPluginService.html":{},"injectables/NgxEditorJSService.html":{},"components/NgxTinynodesMatJsonOutputComponent.html":{},"miscellaneous/functions.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-readme.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-readme/ngx-editorjs-changelog.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-plugins-readme/ngx-editorjs-plugins-changelog.html":{}}}],["reviewed",{"_index":1272,"title":{},"body":{"contributing.html":{}}}],["reviewer",{"_index":1143,"title":{},"body":{"contributing.html":{}}}],["right",{"_index":1225,"title":{},"body":{"contributing.html":{}}}],["rights",{"_index":1393,"title":{},"body":{"license.html":{}}}],["robust",{"_index":1550,"title":{},"body":{"additional-documentation/tinynodes-library-docs/ngx-editorjs-readme/ngx-editorjs-changelog.html":{}}}],["rogue",{"_index":1544,"title":{},"body":{"additional-documentation/tinynodes-library-docs/ngx-editorjs-readme/ngx-editorjs-changelog.html":{}}}],["root",{"_index":608,"title":{},"body":{"modules/NgxEditorJSModule.html":{},"injectables/NgxEditorJSPluginService.html":{},"injectables/NgxEditorJSService.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-readme/ngx-editorjs-changelog.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-plugins-readme.html":{}}}],["run",{"_index":708,"title":{},"body":{"injectables/NgxEditorJSService.html":{},"index.html":{}}}],["rxjs",{"_index":136,"title":{},"body":{"interfaces/ChangeMap.html":{},"interfaces/EditorJSChange.html":{},"interfaces/EditorJSMaterialForm.html":{},"interfaces/EditorMap.html":{},"directives/NgxEditorJSDirective.html":{},"injectables/NgxEditorJSService.html":{},"interfaces/ReadyMap.html":{},"interfaces/SavedMap.html":{},"dependencies.html":{}}}],["rxjs/operators",{"_index":236,"title":{},"body":{"interfaces/EditorJSMaterialForm.html":{},"directives/NgxEditorJSDirective.html":{},"injectables/NgxEditorJSService.html":{}}}],["sanitizer",{"_index":382,"title":{},"body":{"interfaces/NgxEditorJSConfig.html":{},"directives/NgxEditorJSDirective.html":{},"interfaces/NgxEditorJSModuleConfig.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-readme.html":{}}}],["sanitizerconfig",{"_index":397,"title":{},"body":{"interfaces/NgxEditorJSConfig.html":{},"directives/NgxEditorJSDirective.html":{},"interfaces/NgxEditorJSModuleConfig.html":{}}}],["save",{"_index":132,"title":{},"body":{"interfaces/ChangeMap.html":{},"interfaces/EditorJSChange.html":{},"interfaces/EditorJSClass.html":{},"interfaces/EditorJSInstanceConfig.html":{},"interfaces/EditorMap.html":{},"interfaces/InjectorApiCallOptions.html":{},"interfaces/InjectorApiCallResponse.html":{},"interfaces/InjectorMethodOption.html":{},"directives/NgxEditorJSDirective.html":{},"injectables/NgxEditorJSService.html":{},"interfaces/ReadyMap.html":{},"interfaces/SavedMap.html":{},"todo.html":{}}}],["save(options",{"_index":741,"title":{},"body":{"injectables/NgxEditorJSService.html":{}}}],["saved",{"_index":482,"title":{},"body":{"directives/NgxEditorJSDirective.html":{}}}],["savedmap",{"_index":144,"title":{"interfaces/SavedMap.html":{}},"body":{"interfaces/ChangeMap.html":{},"interfaces/EditorJSChange.html":{},"interfaces/EditorMap.html":{},"injectables/NgxEditorJSService.html":{},"interfaces/ReadyMap.html":{},"interfaces/SavedMap.html":{}}}],["saver",{"_index":811,"title":{},"body":{"injectables/NgxEditorJSService.html":{}}}],["saving",{"_index":1535,"title":{},"body":{"additional-documentation/tinynodes-library-docs/ngx-editorjs-readme/ngx-editorjs-changelog.html":{}}}],["scheme",{"_index":1137,"title":{},"body":{"contributing.html":{}}}],["scope",{"_index":1244,"title":{},"body":{"contributing.html":{}}}],["scripts",{"_index":1098,"title":{},"body":{"changelog.html":{}}}],["searchable",{"_index":1351,"title":{},"body":{"index.html":{}}}],["second",{"_index":718,"title":{},"body":{"injectables/NgxEditorJSService.html":{},"contributing.html":{}}}],["see",{"_index":982,"title":{},"body":{"modules/PluginCodeModule.html":{},"modules/PluginHeaderModule.html":{},"modules/PluginImageModule.html":{},"modules/PluginInlineCodeModule.html":{},"modules/PluginLinkModule.html":{},"modules/PluginListModule.html":{},"modules/PluginMarkerModule.html":{},"modules/PluginParagraphModule.html":{},"modules/PluginSimpleImageModule.html":{},"changelog.html":{},"index.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-readme.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-plugins-readme/ngx-editorjs-plugins-changelog.html":{}}}],["selection",{"_index":1453,"title":{},"body":{"todo.html":{}}}],["selector",{"_index":256,"title":{},"body":{"interfaces/EditorJSMaterialForm.html":{},"directives/NgxEditorJSDirective.html":{},"components/NgxTinynodesMatJsonOutputComponent.html":{}}}],["self",{"_index":228,"title":{},"body":{"interfaces/EditorJSMaterialForm.html":{}}}],["sell",{"_index":1399,"title":{},"body":{"license.html":{}}}],["semantic",{"_index":1517,"title":{},"body":{"additional-documentation/tinynodes-library-docs/ngx-editorjs-readme/ngx-editorjs-changelog.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-plugins-readme/ngx-editorjs-plugins-changelog.html":{}}}],["semver",{"_index":1138,"title":{},"body":{"contributing.html":{}}}],["separably",{"_index":1575,"title":{},"body":{"additional-documentation/tinynodes-library-docs/ngx-editorjs-plugins-readme.html":{}}}],["separately",{"_index":1286,"title":{},"body":{"contributing.html":{}}}],["service",{"_index":436,"title":{},"body":{"directives/NgxEditorJSDirective.html":{},"injectables/NgxEditorJSPluginService.html":{},"injectables/NgxEditorJSService.html":{},"changelog.html":{},"miscellaneous/functions.html":{},"index.html":{},"todo.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-readme.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-readme/ngx-editorjs-changelog.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-plugins-readme.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-plugins-readme/ngx-editorjs-plugins-changelog.html":{}}}],["service.module",{"_index":908,"title":{},"body":{"modules/NgxEditorjsPluginsModule.html":{}}}],["service.module.ts",{"_index":914,"title":{},"body":{"modules/NgxPluginServiceModule.html":{}}}],["service.service",{"_index":917,"title":{},"body":{"modules/NgxPluginServiceModule.html":{}}}],["service.service.ts",{"_index":644,"title":{},"body":{"injectables/NgxEditorJSPluginService.html":{}}}],["service.service.ts:13",{"_index":653,"title":{},"body":{"injectables/NgxEditorJSPluginService.html":{}}}],["service.service.ts:23",{"_index":656,"title":{},"body":{"injectables/NgxEditorJSPluginService.html":{}}}],["service.service.ts:32",{"_index":655,"title":{},"body":{"injectables/NgxEditorJSPluginService.html":{}}}],["service.service.ts:40",{"_index":659,"title":{},"body":{"injectables/NgxEditorJSPluginService.html":{}}}],["service.service.ts:54",{"_index":664,"title":{},"body":{"injectables/NgxEditorJSPluginService.html":{}}}],["service.ts",{"_index":151,"title":{},"body":{"interfaces/CreateEditorJSOptions.html":{}}}],["services",{"_index":418,"title":{},"body":{"directives/NgxEditorJSDirective.html":{},"index.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-readme/ngx-editorjs-changelog.html":{}}}],["services/editorjs.service",{"_index":241,"title":{},"body":{"interfaces/EditorJSMaterialForm.html":{},"directives/NgxEditorJSDirective.html":{},"modules/NgxEditorJSModule.html":{}}}],["services/plugin",{"_index":907,"title":{},"body":{"modules/NgxEditorjsPluginsModule.html":{}}}],["set",{"_index":155,"title":{},"body":{"interfaces/CreateEditorJSOptions.html":{},"interfaces/EditorJSMaterialForm.html":{},"interfaces/NgxEditorJSConfig.html":{},"directives/NgxEditorJSDirective.html":{},"interfaces/NgxEditorJSModuleConfig.html":{},"injectables/NgxEditorJSService.html":{},"miscellaneous/functions.html":{},"index.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-readme.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-readme/ngx-editorjs-changelog.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-plugins-readme.html":{}}}],["setdescribedbyids(ids",{"_index":330,"title":{},"body":{"interfaces/EditorJSMaterialForm.html":{}}}],["sets",{"_index":448,"title":{},"body":{"directives/NgxEditorJSDirective.html":{},"modules/NgxEditorJSModule.html":{},"injectables/NgxEditorJSService.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-readme.html":{}}}],["setting",{"_index":1215,"title":{},"body":{"contributing.html":{},"todo.html":{}}}],["settings",{"_index":89,"title":{},"body":{"interfaces/BlockData.html":{},"interfaces/PluginConfig.html":{},"interfaces/PluginConfigMap.html":{},"interfaces/ToolSettingsMap.html":{},"miscellaneous/typealiases.html":{}}}],["setup",{"_index":694,"title":{},"body":{"injectables/NgxEditorJSService.html":{}}}],["setupsubjects(options",{"_index":856,"title":{},"body":{"injectables/NgxEditorJSService.html":{}}}],["several",{"_index":691,"title":{},"body":{"injectables/NgxEditorJSService.html":{},"modules/NgxEditorjsPluginsModule.html":{},"changelog.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-plugins-readme.html":{}}}],["sexual",{"_index":1170,"title":{},"body":{"contributing.html":{}}}],["sexualized",{"_index":1195,"title":{},"body":{"contributing.html":{}}}],["shall",{"_index":1408,"title":{},"body":{"license.html":{}}}],["ships",{"_index":1369,"title":{},"body":{"index.html":{}}}],["shortcut",{"_index":105,"title":{},"body":{"interfaces/BlockData.html":{},"injectables/NgxEditorJSService.html":{},"interfaces/PluginConfig.html":{},"interfaces/PluginConfigMap.html":{},"modules/PluginInlineCodeModule.html":{},"modules/PluginMarkerModule.html":{},"interfaces/ToolSettingsMap.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-readme/ngx-editorjs-changelog.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-plugins-readme.html":{}}}],["shouldlabelfloat",{"_index":322,"title":{},"body":{"interfaces/EditorJSMaterialForm.html":{}}}],["show",{"_index":467,"title":{},"body":{"directives/NgxEditorJSDirective.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-readme/ngx-editorjs-changelog.html":{}}}],["showing",{"_index":1189,"title":{},"body":{"contributing.html":{}}}],["shown",{"_index":390,"title":{},"body":{"interfaces/NgxEditorJSConfig.html":{},"interfaces/NgxEditorJSModuleConfig.html":{}}}],["shows",{"_index":1494,"title":{},"body":{"additional-documentation/tinynodes-library-docs/ngx-editorjs-readme.html":{}}}],["sign",{"_index":1140,"title":{},"body":{"contributing.html":{}}}],["simple",{"_index":1016,"title":{},"body":{"modules/PluginSimpleImageModule.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-plugins-readme.html":{}}}],["simplechanges",{"_index":496,"title":{},"body":{"directives/NgxEditorJSDirective.html":{}}}],["simpleimage",{"_index":1014,"title":{},"body":{"modules/PluginSimpleImageModule.html":{}}}],["simplified",{"_index":1522,"title":{},"body":{"additional-documentation/tinynodes-library-docs/ngx-editorjs-readme/ngx-editorjs-changelog.html":{}}}],["single",{"_index":212,"title":{},"body":{"interfaces/EditorJSMaterialForm.html":{},"injectables/NgxEditorJSService.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-readme/ngx-editorjs-changelog.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-plugins-readme.html":{}}}],["site",{"_index":1024,"title":{},"body":{"changelog.html":{},"index.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-readme/ngx-editorjs-changelog.html":{}}}],["size",{"_index":1159,"title":{},"body":{"contributing.html":{}}}],["skipsave",{"_index":198,"title":{},"body":{"interfaces/EditorJSClass.html":{},"interfaces/EditorJSInstanceConfig.html":{},"interfaces/InjectorApiCallOptions.html":{},"interfaces/InjectorApiCallResponse.html":{},"interfaces/InjectorMethodOption.html":{}}}],["skipself",{"_index":620,"title":{},"body":{"modules/NgxEditorJSModule.html":{}}}],["small",{"_index":1104,"title":{},"body":{"changelog.html":{}}}],["social",{"_index":1253,"title":{},"body":{"contributing.html":{}}}],["software",{"_index":1387,"title":{},"body":{"license.html":{}}}],["source",{"_index":4,"title":{},"body":{"interfaces/Block.html":{},"interfaces/BlockData.html":{},"interfaces/ChangeMap.html":{},"interfaces/CreateEditorJSOptions.html":{},"interfaces/EditorJSChange.html":{},"interfaces/EditorJSClass.html":{},"interfaces/EditorJSInstanceConfig.html":{},"interfaces/EditorJSMaterialForm.html":{},"interfaces/EditorMap.html":{},"interfaces/Header.html":{},"interfaces/HeaderBlock.html":{},"interfaces/Image.html":{},"interfaces/ImageBlock.html":{},"interfaces/InjectorApiCallOptions.html":{},"interfaces/InjectorApiCallResponse.html":{},"interfaces/InjectorMethodOption.html":{},"interfaces/List.html":{},"interfaces/ListBlock.html":{},"interfaces/NgxEditorJSConfig.html":{},"directives/NgxEditorJSDirective.html":{},"modules/NgxEditorJSModule.html":{},"interfaces/NgxEditorJSModuleConfig.html":{},"injectables/NgxEditorJSPluginService.html":{},"injectables/NgxEditorJSService.html":{},"modules/NgxEditorjsPluginsModule.html":{},"modules/NgxPluginServiceModule.html":{},"modules/NgxTinynodesComponentsModule.html":{},"interfaces/NgxTinynodesMatFieldComponent.html":{},"components/NgxTinynodesMatJsonOutputComponent.html":{},"modules/NgxTinynodesMatJsonOutputModule.html":{},"modules/NgxTinynodesMatTagInputModule.html":{},"interfaces/Paragraph.html":{},"interfaces/ParagraphBlock.html":{},"modules/PluginCodeModule.html":{},"interfaces/PluginConfig.html":{},"interfaces/PluginConfigMap.html":{},"modules/PluginHeaderModule.html":{},"modules/PluginImageModule.html":{},"modules/PluginInlineCodeModule.html":{},"modules/PluginLinkModule.html":{},"modules/PluginListModule.html":{},"modules/PluginMarkerModule.html":{},"modules/PluginParagraphModule.html":{},"modules/PluginSimpleImageModule.html":{},"interfaces/ReadyMap.html":{},"interfaces/SavedMap.html":{},"interfaces/ToolSettingsMap.html":{}}}],["spaces",{"_index":1247,"title":{},"body":{"contributing.html":{}}}],["spec\\.ts",{"_index":1475,"title":{},"body":{"miscellaneous/variables.html":{}}}],["specific",{"_index":1283,"title":{},"body":{"contributing.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-plugins-readme.html":{}}}],["specifies",{"_index":98,"title":{},"body":{"interfaces/BlockData.html":{},"interfaces/PluginConfig.html":{},"interfaces/PluginConfigMap.html":{},"interfaces/ToolSettingsMap.html":{}}}],["standards",{"_index":1172,"title":{},"body":{"contributing.html":{}}}],["started",{"_index":1021,"title":{"changelog.html":{},"contributing.html":{},"index.html":{},"license.html":{},"todo.html":{}},"body":{}}],["state",{"_index":142,"title":{},"body":{"interfaces/ChangeMap.html":{},"interfaces/EditorJSChange.html":{},"interfaces/EditorJSMaterialForm.html":{},"interfaces/EditorMap.html":{},"directives/NgxEditorJSDirective.html":{},"injectables/NgxEditorJSService.html":{},"interfaces/ReadyMap.html":{},"interfaces/SavedMap.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-readme/ngx-editorjs-changelog.html":{}}}],["statechanges",{"_index":268,"title":{},"body":{"interfaces/EditorJSMaterialForm.html":{}}}],["states",{"_index":763,"title":{},"body":{"injectables/NgxEditorJSService.html":{}}}],["static",{"_index":164,"title":{},"body":{"interfaces/EditorJSClass.html":{},"interfaces/EditorJSInstanceConfig.html":{},"interfaces/EditorJSMaterialForm.html":{},"interfaces/InjectorApiCallOptions.html":{},"interfaces/InjectorApiCallResponse.html":{},"interfaces/InjectorMethodOption.html":{},"modules/NgxEditorJSModule.html":{}}}],["store",{"_index":1455,"title":{},"body":{"todo.html":{}}}],["stores",{"_index":1565,"title":{},"body":{"additional-documentation/tinynodes-library-docs/ngx-editorjs-readme/ngx-editorjs-changelog.html":{}}}],["stretch",{"_index":59,"title":{},"body":{"interfaces/Block.html":{},"interfaces/Header.html":{},"interfaces/HeaderBlock.html":{},"interfaces/Image.html":{},"interfaces/ImageBlock.html":{},"interfaces/List.html":{},"interfaces/ListBlock.html":{},"interfaces/Paragraph.html":{},"interfaces/ParagraphBlock.html":{}}}],["stretched",{"_index":60,"title":{},"body":{"interfaces/Block.html":{},"interfaces/Header.html":{},"interfaces/HeaderBlock.html":{},"interfaces/Image.html":{},"interfaces/ImageBlock.html":{},"interfaces/List.html":{},"interfaces/ListBlock.html":{},"interfaces/Paragraph.html":{},"interfaces/ParagraphBlock.html":{}}}],["string",{"_index":17,"title":{},"body":{"interfaces/Block.html":{},"interfaces/BlockData.html":{},"interfaces/ChangeMap.html":{},"interfaces/CreateEditorJSOptions.html":{},"interfaces/EditorJSChange.html":{},"interfaces/EditorJSClass.html":{},"interfaces/EditorJSInstanceConfig.html":{},"interfaces/EditorJSMaterialForm.html":{},"interfaces/EditorMap.html":{},"interfaces/Header.html":{},"interfaces/HeaderBlock.html":{},"interfaces/Image.html":{},"interfaces/ImageBlock.html":{},"interfaces/InjectorApiCallOptions.html":{},"interfaces/InjectorApiCallResponse.html":{},"interfaces/InjectorMethodOption.html":{},"interfaces/List.html":{},"interfaces/ListBlock.html":{},"interfaces/NgxEditorJSConfig.html":{},"directives/NgxEditorJSDirective.html":{},"interfaces/NgxEditorJSModuleConfig.html":{},"injectables/NgxEditorJSPluginService.html":{},"injectables/NgxEditorJSService.html":{},"interfaces/Paragraph.html":{},"interfaces/ParagraphBlock.html":{},"interfaces/PluginConfig.html":{},"interfaces/PluginConfigMap.html":{},"interfaces/ReadyMap.html":{},"interfaces/SavedMap.html":{},"interfaces/ToolSettingsMap.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-readme/ngx-editorjs-changelog.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-plugins-readme.html":{}}}],["style",{"_index":34,"title":{},"body":{"interfaces/Block.html":{},"interfaces/Header.html":{},"interfaces/HeaderBlock.html":{},"interfaces/Image.html":{},"interfaces/ImageBlock.html":{},"interfaces/List.html":{},"interfaces/ListBlock.html":{},"interfaces/Paragraph.html":{},"interfaces/ParagraphBlock.html":{}}}],["styles",{"_index":26,"title":{},"body":{"interfaces/Block.html":{},"interfaces/Header.html":{},"interfaces/HeaderBlock.html":{},"interfaces/Image.html":{},"interfaces/ImageBlock.html":{},"interfaces/List.html":{},"interfaces/ListBlock.html":{},"interfaces/Paragraph.html":{},"interfaces/ParagraphBlock.html":{},"miscellaneous/typealiases.html":{}}}],["styleurls",{"_index":259,"title":{},"body":{"interfaces/EditorJSMaterialForm.html":{}}}],["subject",{"_index":234,"title":{},"body":{"interfaces/EditorJSMaterialForm.html":{},"directives/NgxEditorJSDirective.html":{},"injectables/NgxEditorJSService.html":{},"license.html":{}}}],["subjects",{"_index":511,"title":{},"body":{"directives/NgxEditorJSDirective.html":{},"injectables/NgxEditorJSService.html":{}}}],["sublicense",{"_index":1397,"title":{},"body":{"license.html":{}}}],["subscribe",{"_index":362,"title":{},"body":{"interfaces/EditorJSMaterialForm.html":{},"directives/NgxEditorJSDirective.html":{},"injectables/NgxEditorJSService.html":{}}}],["subscribe(change",{"_index":568,"title":{},"body":{"directives/NgxEditorJSDirective.html":{}}}],["subscribe(editor",{"_index":843,"title":{},"body":{"injectables/NgxEditorJSService.html":{}}}],["subscribe(focused",{"_index":368,"title":{},"body":{"interfaces/EditorJSMaterialForm.html":{}}}],["subscribe(isready",{"_index":565,"title":{},"body":{"directives/NgxEditorJSDirective.html":{}}}],["subscribe(saved",{"_index":570,"title":{},"body":{"directives/NgxEditorJSDirective.html":{}}}],["subscriptions",{"_index":729,"title":{},"body":{"injectables/NgxEditorJSService.html":{}}}],["substantial",{"_index":1410,"title":{},"body":{"license.html":{}}}],["such",{"_index":715,"title":{},"body":{"injectables/NgxEditorJSService.html":{},"contributing.html":{}}}],["sunday",{"_index":1083,"title":{},"body":{"changelog.html":{}}}],["super",{"_index":339,"title":{},"body":{"interfaces/EditorJSMaterialForm.html":{}}}],["super(editorservice",{"_index":350,"title":{},"body":{"interfaces/EditorJSMaterialForm.html":{}}}],["support",{"_index":1354,"title":{},"body":{"index.html":{},"modules.html":{},"todo.html":{},"miscellaneous/variables.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-readme.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-readme/ngx-editorjs-changelog.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-plugins-readme.html":{}}}],["supported",{"_index":78,"title":{},"body":{"interfaces/BlockData.html":{},"interfaces/PluginConfig.html":{},"interfaces/PluginConfigMap.html":{},"interfaces/ToolSettingsMap.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/typealiases.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-plugins-readme.html":{}}}],["supports",{"_index":27,"title":{},"body":{"interfaces/Block.html":{},"interfaces/Header.html":{},"interfaces/HeaderBlock.html":{},"interfaces/Image.html":{},"interfaces/ImageBlock.html":{},"interfaces/List.html":{},"interfaces/ListBlock.html":{},"interfaces/Paragraph.html":{},"interfaces/ParagraphBlock.html":{},"miscellaneous/typealiases.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-readme/ngx-editorjs-changelog.html":{}}}],["svg",{"_index":1435,"title":{},"body":{"modules.html":{}}}],["switchmap",{"_index":755,"title":{},"body":{"injectables/NgxEditorJSService.html":{}}}],["switchmap((response",{"_index":816,"title":{},"body":{"injectables/NgxEditorJSService.html":{}}}],["switchmap(async",{"_index":799,"title":{},"body":{"injectables/NgxEditorJSService.html":{}}}],["t",{"_index":21,"title":{},"body":{"interfaces/Block.html":{},"interfaces/EditorJSClass.html":{},"interfaces/EditorJSInstanceConfig.html":{},"interfaces/Header.html":{},"interfaces/HeaderBlock.html":{},"interfaces/Image.html":{},"interfaces/ImageBlock.html":{},"interfaces/InjectorApiCallOptions.html":{},"interfaces/InjectorApiCallResponse.html":{},"interfaces/InjectorMethodOption.html":{},"interfaces/List.html":{},"interfaces/ListBlock.html":{},"injectables/NgxEditorJSService.html":{},"interfaces/Paragraph.html":{},"interfaces/ParagraphBlock.html":{}}}],["tag",{"_index":928,"title":{},"body":{"modules/NgxTinynodesComponentsModule.html":{},"components/NgxTinynodesMatJsonOutputComponent.html":{},"modules/NgxTinynodesMatTagInputModule.html":{},"miscellaneous/variables.html":{}}}],["tag_component_field_control",{"_index":975,"title":{},"body":{"modules/NgxTinynodesMatTagInputModule.html":{},"overview.html":{},"miscellaneous/variables.html":{}}}],["tag_component_value_accessor",{"_index":974,"title":{},"body":{"modules/NgxTinynodesMatTagInputModule.html":{},"overview.html":{},"miscellaneous/variables.html":{}}}],["tags",{"_index":1448,"title":{},"body":{"todo.html":{}}}],["take",{"_index":756,"title":{},"body":{"injectables/NgxEditorJSService.html":{},"contributing.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-readme/ngx-editorjs-changelog.html":{}}}],["take(1",{"_index":798,"title":{},"body":{"injectables/NgxEditorJSService.html":{}}}],["takes",{"_index":611,"title":{},"body":{"modules/NgxEditorJSModule.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-readme.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-plugins-readme.html":{}}}],["takeuntil",{"_index":235,"title":{},"body":{"interfaces/EditorJSMaterialForm.html":{},"directives/NgxEditorJSDirective.html":{}}}],["tane",{"_index":1372,"title":{},"body":{"index.html":{},"license.html":{}}}],["tap",{"_index":757,"title":{},"body":{"injectables/NgxEditorJSService.html":{}}}],["tap((response",{"_index":813,"title":{},"body":{"injectables/NgxEditorJSService.html":{}}}],["team",{"_index":1269,"title":{},"body":{"contributing.html":{}}}],["template",{"_index":939,"title":{},"body":{"components/NgxTinynodesMatJsonOutputComponent.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-readme.html":{}}}],["templateurl",{"_index":257,"title":{},"body":{"interfaces/EditorJSMaterialForm.html":{},"components/NgxTinynodesMatJsonOutputComponent.html":{}}}],["temporarily",{"_index":1236,"title":{},"body":{"contributing.html":{}}}],["temporary",{"_index":1290,"title":{},"body":{"contributing.html":{}}}],["text",{"_index":41,"title":{},"body":{"interfaces/Block.html":{},"interfaces/Header.html":{},"interfaces/HeaderBlock.html":{},"interfaces/Image.html":{},"interfaces/ImageBlock.html":{},"interfaces/List.html":{},"interfaces/ListBlock.html":{},"directives/NgxEditorJSDirective.html":{},"interfaces/Paragraph.html":{},"interfaces/ParagraphBlock.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-plugins-readme.html":{}}}],["this._disabled",{"_index":301,"title":{},"body":{"interfaces/EditorJSMaterialForm.html":{}}}],["this._empty",{"_index":307,"title":{},"body":{"interfaces/EditorJSMaterialForm.html":{}}}],["this._focused",{"_index":288,"title":{},"body":{"interfaces/EditorJSMaterialForm.html":{}}}],["this._placeholder",{"_index":283,"title":{},"body":{"interfaces/EditorJSMaterialForm.html":{}}}],["this._required",{"_index":294,"title":{},"body":{"interfaces/EditorJSMaterialForm.html":{}}}],["this._value",{"_index":275,"title":{},"body":{"interfaces/EditorJSMaterialForm.html":{}}}],["this.apicall",{"_index":809,"title":{},"body":{"injectables/NgxEditorJSService.html":{}}}],["this.autofocus",{"_index":576,"title":{},"body":{"directives/NgxEditorJSDirective.html":{}}}],["this.autosave",{"_index":544,"title":{},"body":{"directives/NgxEditorJSDirective.html":{}}}],["this.blockplaceholder",{"_index":579,"title":{},"body":{"directives/NgxEditorJSDirective.html":{}}}],["this.blocks",{"_index":582,"title":{},"body":{"directives/NgxEditorJSDirective.html":{}}}],["this.blocks.length",{"_index":583,"title":{},"body":{"directives/NgxEditorJSDirective.html":{}}}],["this.cd.markforcheck",{"_index":535,"title":{},"body":{"directives/NgxEditorJSDirective.html":{},"components/NgxTinynodesMatJsonOutputComponent.html":{}}}],["this.cleanupsubjects",{"_index":847,"title":{},"body":{"injectables/NgxEditorJSService.html":{}}}],["this.config.editorjs",{"_index":770,"title":{},"body":{"injectables/NgxEditorJSService.html":{}}}],["this.createeditor(this.createconfig",{"_index":559,"title":{},"body":{"directives/NgxEditorJSDirective.html":{}}}],["this.createonchange.call(this",{"_index":779,"title":{},"body":{"injectables/NgxEditorJSService.html":{}}}],["this.createonready.call(this",{"_index":783,"title":{},"body":{"injectables/NgxEditorJSService.html":{}}}],["this.describedby",{"_index":331,"title":{},"body":{"interfaces/EditorJSMaterialForm.html":{}}}],["this.destroyinstance",{"_index":849,"title":{},"body":{"injectables/NgxEditorJSService.html":{}}}],["this.editorjs(editorconfig",{"_index":785,"title":{},"body":{"injectables/NgxEditorJSService.html":{}}}],["this.editorjs.version",{"_index":820,"title":{},"body":{"injectables/NgxEditorJSService.html":{}}}],["this.editormap[holder",{"_index":789,"title":{},"body":{"injectables/NgxEditorJSService.html":{}}}],["this.editormap[holder].next(editor",{"_index":790,"title":{},"body":{"injectables/NgxEditorJSService.html":{}}}],["this.editormap[options.holder",{"_index":827,"title":{},"body":{"injectables/NgxEditorJSService.html":{}}}],["this.editormap[options.holder].complete",{"_index":867,"title":{},"body":{"injectables/NgxEditorJSService.html":{}}}],["this.editormap[options.holder].pipe(filter(editor",{"_index":829,"title":{},"body":{"injectables/NgxEditorJSService.html":{}}}],["this.editorservice",{"_index":539,"title":{},"body":{"directives/NgxEditorJSDirective.html":{}}}],["this.el.nativeelement",{"_index":538,"title":{},"body":{"directives/NgxEditorJSDirective.html":{}}}],["this.el.nativeelement.id",{"_index":560,"title":{},"body":{"directives/NgxEditorJSDirective.html":{}}}],["this.empty",{"_index":324,"title":{},"body":{"interfaces/EditorJSMaterialForm.html":{}}}],["this.errorstate",{"_index":371,"title":{},"body":{"interfaces/EditorJSMaterialForm.html":{}}}],["this.excludetools",{"_index":543,"title":{},"body":{"directives/NgxEditorJSDirective.html":{}}}],["this.expand",{"_index":952,"title":{},"body":{"components/NgxTinynodesMatJsonOutputComponent.html":{}}}],["this.focused",{"_index":323,"title":{},"body":{"interfaces/EditorJSMaterialForm.html":{}}}],["this.geteditor(options",{"_index":841,"title":{},"body":{"injectables/NgxEditorJSService.html":{}}}],["this.geteditor(options).pipe",{"_index":797,"title":{},"body":{"injectables/NgxEditorJSService.html":{}}}],["this.getfocusmonitor(this.editorinstance.element",{"_index":366,"title":{},"body":{"interfaces/EditorJSMaterialForm.html":{}}}],["this.gettools(options.excludetools",{"_index":772,"title":{},"body":{"injectables/NgxEditorJSService.html":{}}}],["this.haschanged.emit(change",{"_index":569,"title":{},"body":{"directives/NgxEditorJSDirective.html":{}}}],["this.hassaved.next(saved",{"_index":571,"title":{},"body":{"directives/NgxEditorJSDirective.html":{}}}],["this.hassavedmap[options.holder",{"_index":839,"title":{},"body":{"injectables/NgxEditorJSService.html":{}}}],["this.hassavedmap[options.holder].asobservable",{"_index":840,"title":{},"body":{"injectables/NgxEditorJSService.html":{}}}],["this.hassavedmap[options.holder].next(true",{"_index":814,"title":{},"body":{"injectables/NgxEditorJSService.html":{}}}],["this.hidetoolbar",{"_index":577,"title":{},"body":{"directives/NgxEditorJSDirective.html":{}}}],["this.holder",{"_index":551,"title":{},"body":{"directives/NgxEditorJSDirective.html":{}}}],["this.id",{"_index":537,"title":{},"body":{"directives/NgxEditorJSDirective.html":{}}}],["this.initialblock",{"_index":578,"title":{},"body":{"directives/NgxEditorJSDirective.html":{}}}],["this.isready.emit(isready",{"_index":566,"title":{},"body":{"directives/NgxEditorJSDirective.html":{}}}],["this.isreadymap[holder].next(true",{"_index":792,"title":{},"body":{"injectables/NgxEditorJSService.html":{}}}],["this.isreadymap[options.holder",{"_index":830,"title":{},"body":{"injectables/NgxEditorJSService.html":{}}}],["this.isreadymap[options.holder].asobservable",{"_index":831,"title":{},"body":{"injectables/NgxEditorJSService.html":{}}}],["this.isreadymap[options.holder].next(true",{"_index":855,"title":{},"body":{"injectables/NgxEditorJSService.html":{}}}],["this.isreadymap[options.holder].value",{"_index":854,"title":{},"body":{"injectables/NgxEditorJSService.html":{}}}],["this.istouched.emit(true",{"_index":534,"title":{},"body":{"directives/NgxEditorJSDirective.html":{}}}],["this.lastchangemap[options.holder",{"_index":832,"title":{},"body":{"injectables/NgxEditorJSService.html":{}}}],["this.lastchangemap[options.holder].next(change",{"_index":852,"title":{},"body":{"injectables/NgxEditorJSService.html":{}}}],["this.lastchangemap[options.holder].next(response.result",{"_index":815,"title":{},"body":{"injectables/NgxEditorJSService.html":{}}}],["this.lastchangemap[options.holder].pipe",{"_index":833,"title":{},"body":{"injectables/NgxEditorJSService.html":{}}}],["this.minheight",{"_index":580,"title":{},"body":{"directives/NgxEditorJSDirective.html":{}}}],["this.ngcontrol",{"_index":353,"title":{},"body":{"interfaces/EditorJSMaterialForm.html":{}}}],["this.ngcontrol.invalid",{"_index":372,"title":{},"body":{"interfaces/EditorJSMaterialForm.html":{}}}],["this.ngcontrol.touched",{"_index":373,"title":{},"body":{"interfaces/EditorJSMaterialForm.html":{}}}],["this.ngcontrol.valueaccessor",{"_index":355,"title":{},"body":{"interfaces/EditorJSMaterialForm.html":{}}}],["this.ondestroy$.complete",{"_index":573,"title":{},"body":{"directives/NgxEditorJSDirective.html":{},"injectables/NgxEditorJSService.html":{}}}],["this.ondestroy$.next(true",{"_index":572,"title":{},"body":{"directives/NgxEditorJSDirective.html":{},"injectables/NgxEditorJSService.html":{}}}],["this.ontouch",{"_index":292,"title":{},"body":{"interfaces/EditorJSMaterialForm.html":{}}}],["this.ontouch(event",{"_index":337,"title":{},"body":{"interfaces/EditorJSMaterialForm.html":{}}}],["this.pluginconfigmap",{"_index":674,"title":{},"body":{"injectables/NgxEditorJSPluginService.html":{}}}],["this.pluginconfigmap[key",{"_index":675,"title":{},"body":{"injectables/NgxEditorJSPluginService.html":{}}}],["this.ref.tick",{"_index":793,"title":{},"body":{"injectables/NgxEditorJSService.html":{}}}],["this.sanitizer",{"_index":581,"title":{},"body":{"directives/NgxEditorJSDirective.html":{}}}],["this.save(options",{"_index":819,"title":{},"body":{"injectables/NgxEditorJSService.html":{}}}],["this.service",{"_index":564,"title":{},"body":{"directives/NgxEditorJSDirective.html":{}}}],["this.service.createinstance",{"_index":542,"title":{},"body":{"directives/NgxEditorJSDirective.html":{}}}],["this.service.destroyinstance",{"_index":574,"title":{},"body":{"directives/NgxEditorJSDirective.html":{}}}],["this.service.geteditor",{"_index":536,"title":{},"body":{"directives/NgxEditorJSDirective.html":{}}}],["this.service.update",{"_index":550,"title":{},"body":{"directives/NgxEditorJSDirective.html":{}}}],["this.setupservicesubscriptions",{"_index":365,"title":{},"body":{"interfaces/EditorJSMaterialForm.html":{}}}],["this.setupsubjects",{"_index":788,"title":{},"body":{"injectables/NgxEditorJSService.html":{}}}],["this.statechanges.next",{"_index":279,"title":{},"body":{"interfaces/EditorJSMaterialForm.html":{}}}],["this.toolbaropen",{"_index":823,"title":{},"body":{"injectables/NgxEditorJSService.html":{}}}],["this.touched$.asobservable",{"_index":540,"title":{},"body":{"directives/NgxEditorJSDirective.html":{}}}],["this.touched$.next(true",{"_index":533,"title":{},"body":{"directives/NgxEditorJSDirective.html":{}}}],["this.zone.run",{"_index":846,"title":{},"body":{"injectables/NgxEditorJSService.html":{}}}],["this.zone.run(async",{"_index":787,"title":{},"body":{"injectables/NgxEditorJSService.html":{}}}],["this.zone.runoutsideangular",{"_index":844,"title":{},"body":{"injectables/NgxEditorJSService.html":{}}}],["this.zone.runoutsideangular(async",{"_index":784,"title":{},"body":{"injectables/NgxEditorJSService.html":{}}}],["this[mapkey][options.holder",{"_index":859,"title":{},"body":{"injectables/NgxEditorJSService.html":{}}}],["this[mapkey][options.holder].complete",{"_index":865,"title":{},"body":{"injectables/NgxEditorJSService.html":{}}}],["this[mapkey][options.holder].next(value",{"_index":861,"title":{},"body":{"injectables/NgxEditorJSService.html":{}}}],["threatening",{"_index":1241,"title":{},"body":{"contributing.html":{}}}],["throw",{"_index":561,"title":{},"body":{"directives/NgxEditorJSDirective.html":{},"injectables/NgxEditorJSService.html":{}}}],["tick",{"_index":709,"title":{},"body":{"injectables/NgxEditorJSService.html":{}}}],["tidy",{"_index":1046,"title":{},"body":{"changelog.html":{}}}],["time",{"_index":148,"title":{},"body":{"interfaces/ChangeMap.html":{},"interfaces/EditorJSChange.html":{},"interfaces/EditorJSClass.html":{},"interfaces/EditorJSInstanceConfig.html":{},"interfaces/EditorMap.html":{},"interfaces/InjectorApiCallOptions.html":{},"interfaces/InjectorApiCallResponse.html":{},"interfaces/InjectorMethodOption.html":{},"directives/NgxEditorJSDirective.html":{},"injectables/NgxEditorJSService.html":{},"interfaces/ReadyMap.html":{},"interfaces/SavedMap.html":{},"miscellaneous/variables.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-readme.html":{}}}],["timer",{"_index":449,"title":{},"body":{"directives/NgxEditorJSDirective.html":{}}}],["tinynode",{"_index":1352,"title":{},"body":{"index.html":{}}}],["tinynodes",{"_index":924,"title":{"additional-documentation/tinynodes-library-docs.html":{}},"body":{"modules/NgxTinynodesComponentsModule.html":{},"interfaces/NgxTinynodesMatFieldComponent.html":{},"components/NgxTinynodesMatJsonOutputComponent.html":{},"modules/NgxTinynodesMatJsonOutputModule.html":{},"modules/NgxTinynodesMatTagInputModule.html":{},"changelog.html":{},"index.html":{},"license.html":{},"todo.html":{},"miscellaneous/variables.html":{},"additional-documentation/tinynodes-library-docs.html":{}}}],["tinynodes/ngx",{"_index":604,"title":{},"body":{"modules/NgxEditorJSModule.html":{},"injectables/NgxEditorJSService.html":{},"changelog.html":{},"index.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-readme.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-readme/ngx-editorjs-changelog.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-plugins-readme.html":{}}}],["today",{"_index":1032,"title":{},"body":{"changelog.html":{}}}],["todo",{"_index":1443,"title":{"todo.html":{}},"body":{"todo.html":{}}}],["todos",{"_index":1444,"title":{},"body":{"todo.html":{}}}],["toggleexpand",{"_index":944,"title":{},"body":{"components/NgxTinynodesMatJsonOutputComponent.html":{}}}],["toggletoolbar",{"_index":703,"title":{},"body":{"injectables/NgxEditorJSService.html":{}}}],["toggletoolbar(options",{"_index":744,"title":{},"body":{"injectables/NgxEditorJSService.html":{}}}],["token",{"_index":111,"title":{},"body":{"interfaces/BlockData.html":{},"interfaces/EditorJSClass.html":{},"interfaces/EditorJSInstanceConfig.html":{},"interfaces/InjectorApiCallOptions.html":{},"interfaces/InjectorApiCallResponse.html":{},"interfaces/InjectorMethodOption.html":{},"interfaces/NgxEditorJSConfig.html":{},"interfaces/NgxEditorJSModuleConfig.html":{},"interfaces/PluginConfig.html":{},"interfaces/PluginConfigMap.html":{},"interfaces/ToolSettingsMap.html":{},"miscellaneous/variables.html":{}}}],["tokens",{"_index":1574,"title":{},"body":{"additional-documentation/tinynodes-library-docs/ngx-editorjs-plugins-readme.html":{}}}],["tool",{"_index":88,"title":{},"body":{"interfaces/BlockData.html":{},"modules/PluginCodeModule.html":{},"interfaces/PluginConfig.html":{},"interfaces/PluginConfigMap.html":{},"modules/PluginHeaderModule.html":{},"modules/PluginImageModule.html":{},"modules/PluginInlineCodeModule.html":{},"modules/PluginLinkModule.html":{},"modules/PluginListModule.html":{},"modules/PluginMarkerModule.html":{},"modules/PluginParagraphModule.html":{},"modules/PluginSimpleImageModule.html":{},"interfaces/ToolSettingsMap.html":{},"changelog.html":{},"miscellaneous/typealiases.html":{}}}],["toolbar",{"_index":388,"title":{},"body":{"interfaces/NgxEditorJSConfig.html":{},"directives/NgxEditorJSDirective.html":{},"interfaces/NgxEditorJSModuleConfig.html":{},"injectables/NgxEditorJSService.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-readme.html":{}}}],["toolbaropen",{"_index":764,"title":{},"body":{"injectables/NgxEditorJSService.html":{}}}],["toolconstructable",{"_index":74,"title":{},"body":{"interfaces/BlockData.html":{},"interfaces/PluginConfig.html":{},"interfaces/PluginConfigMap.html":{},"interfaces/ToolSettingsMap.html":{},"miscellaneous/typealiases.html":{}}}],["tools",{"_index":92,"title":{},"body":{"interfaces/BlockData.html":{},"interfaces/CreateEditorJSOptions.html":{},"directives/NgxEditorJSDirective.html":{},"injectables/NgxEditorJSService.html":{},"modules/NgxEditorjsPluginsModule.html":{},"interfaces/PluginConfig.html":{},"interfaces/PluginConfigMap.html":{},"interfaces/ToolSettingsMap.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-readme.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-readme/ngx-editorjs-changelog.html":{}}}],["toolsettings",{"_index":73,"title":{},"body":{"interfaces/BlockData.html":{},"interfaces/PluginConfig.html":{},"interfaces/PluginConfigMap.html":{},"interfaces/ToolSettingsMap.html":{},"miscellaneous/typealiases.html":{}}}],["toolsettingsmap",{"_index":93,"title":{"interfaces/ToolSettingsMap.html":{}},"body":{"interfaces/BlockData.html":{},"injectables/NgxEditorJSService.html":{},"interfaces/PluginConfig.html":{},"interfaces/PluginConfigMap.html":{},"interfaces/ToolSettingsMap.html":{}}}],["tort",{"_index":1431,"title":{},"body":{"license.html":{}}}],["touched",{"_index":437,"title":{},"body":{"directives/NgxEditorJSDirective.html":{}}}],["towards",{"_index":1191,"title":{},"body":{"contributing.html":{}}}],["tree",{"_index":940,"title":{},"body":{"components/NgxTinynodesMatJsonOutputComponent.html":{}}}],["trigger",{"_index":361,"title":{},"body":{"interfaces/EditorJSMaterialForm.html":{},"injectables/NgxEditorJSService.html":{}}}],["triggered",{"_index":689,"title":{},"body":{"injectables/NgxEditorJSService.html":{}}}],["trolling",{"_index":1200,"title":{},"body":{"contributing.html":{}}}],["true",{"_index":250,"title":{},"body":{"interfaces/EditorJSMaterialForm.html":{},"interfaces/NgxEditorJSConfig.html":{},"directives/NgxEditorJSDirective.html":{},"interfaces/NgxEditorJSModuleConfig.html":{},"injectables/NgxEditorJSService.html":{},"components/NgxTinynodesMatJsonOutputComponent.html":{},"modules/PluginCodeModule.html":{},"modules/PluginHeaderModule.html":{},"modules/PluginImageModule.html":{},"modules/PluginInlineCodeModule.html":{},"modules/PluginLinkModule.html":{},"modules/PluginListModule.html":{},"modules/PluginMarkerModule.html":{},"modules/PluginParagraphModule.html":{},"modules/PluginSimpleImageModule.html":{},"miscellaneous/variables.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-plugins-readme.html":{}}}],["ts",{"_index":1582,"title":{},"body":{"additional-documentation/tinynodes-library-docs/ngx-editorjs-plugins-readme.html":{}}}],["turned",{"_index":1597,"title":{},"body":{"additional-documentation/tinynodes-library-docs/ngx-editorjs-plugins-readme/ngx-editorjs-plugins-changelog.html":{}}}],["two",{"_index":498,"title":{},"body":{"directives/NgxEditorJSDirective.html":{},"contributing.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-plugins-readme/ngx-editorjs-plugins-changelog.html":{}}}],["type",{"_index":10,"title":{},"body":{"interfaces/Block.html":{},"interfaces/BlockData.html":{},"interfaces/CreateEditorJSOptions.html":{},"interfaces/EditorJSChange.html":{},"interfaces/EditorJSClass.html":{},"interfaces/EditorJSInstanceConfig.html":{},"interfaces/EditorJSMaterialForm.html":{},"interfaces/Header.html":{},"interfaces/HeaderBlock.html":{},"interfaces/Image.html":{},"interfaces/ImageBlock.html":{},"interfaces/InjectorApiCallOptions.html":{},"interfaces/InjectorApiCallResponse.html":{},"interfaces/InjectorMethodOption.html":{},"interfaces/List.html":{},"interfaces/ListBlock.html":{},"interfaces/NgxEditorJSConfig.html":{},"directives/NgxEditorJSDirective.html":{},"modules/NgxEditorJSModule.html":{},"interfaces/NgxEditorJSModuleConfig.html":{},"injectables/NgxEditorJSPluginService.html":{},"injectables/NgxEditorJSService.html":{},"components/NgxTinynodesMatJsonOutputComponent.html":{},"interfaces/Paragraph.html":{},"interfaces/ParagraphBlock.html":{},"modules/PluginCodeModule.html":{},"interfaces/PluginConfig.html":{},"interfaces/PluginConfigMap.html":{},"modules/PluginHeaderModule.html":{},"modules/PluginImageModule.html":{},"modules/PluginInlineCodeModule.html":{},"modules/PluginLinkModule.html":{},"modules/PluginListModule.html":{},"modules/PluginMarkerModule.html":{},"modules/PluginParagraphModule.html":{},"modules/PluginSimpleImageModule.html":{},"interfaces/ToolSettingsMap.html":{},"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-readme.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-plugins-readme.html":{}}}],["typealiases",{"_index":1459,"title":{"miscellaneous/typealiases.html":{}},"body":{}}],["typeof",{"_index":778,"title":{},"body":{"injectables/NgxEditorJSService.html":{}}}],["types",{"_index":76,"title":{},"body":{"interfaces/BlockData.html":{},"interfaces/PluginConfig.html":{},"interfaces/PluginConfigMap.html":{},"interfaces/ToolSettingsMap.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/typealiases.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-readme/ngx-editorjs-changelog.html":{}}}],["types/blocks",{"_index":524,"title":{},"body":{"directives/NgxEditorJSDirective.html":{}}}],["types/config",{"_index":630,"title":{},"body":{"modules/NgxEditorJSModule.html":{},"injectables/NgxEditorJSService.html":{}}}],["types/editorjs",{"_index":758,"title":{},"body":{"injectables/NgxEditorJSService.html":{}}}],["types/injector",{"_index":631,"title":{},"body":{"modules/NgxEditorJSModule.html":{},"injectables/NgxEditorJSService.html":{}}}],["types/maps",{"_index":759,"title":{},"body":{"injectables/NgxEditorJSService.html":{}}}],["types/plugins",{"_index":666,"title":{},"body":{"injectables/NgxEditorJSPluginService.html":{},"modules/NgxPluginServiceModule.html":{},"modules/PluginCodeModule.html":{},"modules/PluginHeaderModule.html":{},"modules/PluginImageModule.html":{},"modules/PluginInlineCodeModule.html":{},"modules/PluginLinkModule.html":{},"modules/PluginListModule.html":{},"modules/PluginMarkerModule.html":{},"modules/PluginParagraphModule.html":{},"modules/PluginSimpleImageModule.html":{}}}],["typescript",{"_index":168,"title":{},"body":{"interfaces/EditorJSClass.html":{},"interfaces/EditorJSInstanceConfig.html":{},"interfaces/InjectorApiCallOptions.html":{},"interfaces/InjectorApiCallResponse.html":{},"interfaces/InjectorMethodOption.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-readme.html":{}}}],["ui",{"_index":1485,"title":{},"body":{"additional-documentation/tinynodes-library-docs/ngx-editorjs-readme.html":{}}}],["unacceptable",{"_index":1193,"title":{},"body":{"contributing.html":{}}}],["undefined",{"_index":109,"title":{},"body":{"interfaces/BlockData.html":{},"injectables/NgxEditorJSService.html":{},"interfaces/PluginConfig.html":{},"interfaces/PluginConfigMap.html":{},"interfaces/ToolSettingsMap.html":{}}}],["under",{"_index":1028,"title":{},"body":{"changelog.html":{}}}],["underlying",{"_index":310,"title":{},"body":{"interfaces/EditorJSMaterialForm.html":{},"injectables/NgxEditorJSService.html":{},"changelog.html":{},"index.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-readme.html":{}}}],["underneath",{"_index":1361,"title":{},"body":{"index.html":{}}}],["unique",{"_index":317,"title":{},"body":{"interfaces/EditorJSMaterialForm.html":{}}}],["unlike",{"_index":795,"title":{},"body":{"injectables/NgxEditorJSService.html":{}}}],["unordered",{"_index":29,"title":{},"body":{"interfaces/Block.html":{},"interfaces/Header.html":{},"interfaces/HeaderBlock.html":{},"interfaces/Image.html":{},"interfaces/ImageBlock.html":{},"interfaces/List.html":{},"interfaces/ListBlock.html":{},"interfaces/Paragraph.html":{},"interfaces/ParagraphBlock.html":{},"miscellaneous/typealiases.html":{}}}],["unreleased",{"_index":1031,"title":{},"body":{"changelog.html":{}}}],["unsubscribe",{"_index":363,"title":{},"body":{"interfaces/EditorJSMaterialForm.html":{}}}],["until",{"_index":1100,"title":{},"body":{"changelog.html":{}}}],["unwelcome",{"_index":1197,"title":{},"body":{"contributing.html":{}}}],["up",{"_index":359,"title":{},"body":{"interfaces/EditorJSMaterialForm.html":{},"directives/NgxEditorJSDirective.html":{},"injectables/NgxEditorJSService.html":{},"changelog.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-readme/ngx-editorjs-changelog.html":{}}}],["update",{"_index":696,"title":{},"body":{"injectables/NgxEditorJSService.html":{},"contributing.html":{}}}],["update(options",{"_index":746,"title":{},"body":{"injectables/NgxEditorJSService.html":{}}}],["updated",{"_index":501,"title":{},"body":{"directives/NgxEditorJSDirective.html":{},"changelog.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-readme/ngx-editorjs-changelog.html":{}}}],["updates",{"_index":1598,"title":{},"body":{"additional-documentation/tinynodes-library-docs/ngx-editorjs-plugins-readme/ngx-editorjs-plugins-changelog.html":{}}}],["upgraded",{"_index":1064,"title":{},"body":{"changelog.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-readme/ngx-editorjs-changelog.html":{}}}],["upload",{"_index":1591,"title":{},"body":{"additional-documentation/tinynodes-library-docs/ngx-editorjs-plugins-readme.html":{}}}],["url",{"_index":50,"title":{},"body":{"interfaces/Block.html":{},"interfaces/Header.html":{},"interfaces/HeaderBlock.html":{},"interfaces/Image.html":{},"interfaces/ImageBlock.html":{},"interfaces/List.html":{},"interfaces/ListBlock.html":{},"interfaces/Paragraph.html":{},"interfaces/ParagraphBlock.html":{}}}],["usage",{"_index":1359,"title":{},"body":{"index.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-readme.html":{}}}],["use",{"_index":100,"title":{},"body":{"interfaces/BlockData.html":{},"directives/NgxEditorJSDirective.html":{},"modules/NgxEditorJSModule.html":{},"injectables/NgxEditorJSService.html":{},"interfaces/PluginConfig.html":{},"interfaces/PluginConfigMap.html":{},"interfaces/ToolSettingsMap.html":{},"contributing.html":{},"miscellaneous/functions.html":{},"index.html":{},"license.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-readme.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-readme/ngx-editorjs-changelog.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-plugins-readme.html":{}}}],["used",{"_index":106,"title":{},"body":{"interfaces/BlockData.html":{},"interfaces/CreateEditorJSOptions.html":{},"directives/NgxEditorJSDirective.html":{},"injectables/NgxEditorJSService.html":{},"interfaces/PluginConfig.html":{},"interfaces/PluginConfigMap.html":{},"interfaces/ToolSettingsMap.html":{},"index.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-readme.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-readme/ngx-editorjs-changelog.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-plugins-readme.html":{}}}],["useexisting",{"_index":247,"title":{},"body":{"interfaces/EditorJSMaterialForm.html":{},"miscellaneous/variables.html":{}}}],["usefactory",{"_index":635,"title":{},"body":{"modules/NgxEditorJSModule.html":{},"modules/NgxPluginServiceModule.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-readme.html":{}}}],["useful",{"_index":749,"title":{},"body":{"injectables/NgxEditorJSService.html":{},"changelog.html":{},"contributing.html":{}}}],["userplugin",{"_index":1554,"title":{},"body":{"additional-documentation/tinynodes-library-docs/ngx-editorjs-readme/ngx-editorjs-changelog.html":{}}}],["userplugins",{"_index":472,"title":{},"body":{"directives/NgxEditorJSDirective.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-readme.html":{}}}],["uses",{"_index":768,"title":{},"body":{"injectables/NgxEditorJSService.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-readme/ngx-editorjs-changelog.html":{}}}],["usevalue",{"_index":634,"title":{},"body":{"modules/NgxEditorJSModule.html":{},"modules/PluginCodeModule.html":{},"modules/PluginHeaderModule.html":{},"modules/PluginImageModule.html":{},"modules/PluginInlineCodeModule.html":{},"modules/PluginLinkModule.html":{},"modules/PluginListModule.html":{},"modules/PluginMarkerModule.html":{},"modules/PluginParagraphModule.html":{},"modules/PluginSimpleImageModule.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-plugins-readme.html":{}}}],["using",{"_index":646,"title":{},"body":{"injectables/NgxEditorJSPluginService.html":{},"injectables/NgxEditorJSService.html":{},"changelog.html":{},"contributing.html":{},"index.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-readme/ngx-editorjs-changelog.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-plugins-readme.html":{}}}],["util/plugin",{"_index":916,"title":{},"body":{"modules/NgxPluginServiceModule.html":{},"modules/PluginCodeModule.html":{},"modules/PluginHeaderModule.html":{},"modules/PluginImageModule.html":{},"modules/PluginLinkModule.html":{},"modules/PluginListModule.html":{},"modules/PluginMarkerModule.html":{},"modules/PluginSimpleImageModule.html":{}}}],["value",{"_index":273,"title":{},"body":{"interfaces/EditorJSMaterialForm.html":{},"directives/NgxEditorJSDirective.html":{},"injectables/NgxEditorJSPluginService.html":{},"injectables/NgxEditorJSService.html":{},"components/NgxTinynodesMatJsonOutputComponent.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/variables.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-readme.html":{}}}],["value(value",{"_index":278,"title":{},"body":{"interfaces/EditorJSMaterialForm.html":{}}}],["values",{"_index":140,"title":{},"body":{"interfaces/ChangeMap.html":{},"interfaces/EditorJSChange.html":{},"interfaces/EditorJSClass.html":{},"interfaces/EditorJSInstanceConfig.html":{},"interfaces/EditorMap.html":{},"interfaces/InjectorApiCallOptions.html":{},"interfaces/InjectorApiCallResponse.html":{},"interfaces/InjectorMethodOption.html":{},"directives/NgxEditorJSDirective.html":{},"injectables/NgxEditorJSService.html":{},"interfaces/ReadyMap.html":{},"interfaces/SavedMap.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["var",{"_index":954,"title":{},"body":{"components/NgxTinynodesMatJsonOutputComponent.html":{}}}],["variables",{"_index":1127,"title":{"miscellaneous/variables.html":{}},"body":{"contributing.html":{},"miscellaneous/variables.html":{}}}],["various",{"_index":1534,"title":{},"body":{"additional-documentation/tinynodes-library-docs/ngx-editorjs-readme/ngx-editorjs-changelog.html":{}}}],["version",{"_index":165,"title":{},"body":{"interfaces/EditorJSClass.html":{},"interfaces/EditorJSInstanceConfig.html":{},"interfaces/InjectorApiCallOptions.html":{},"interfaces/InjectorApiCallResponse.html":{},"interfaces/InjectorMethodOption.html":{},"directives/NgxEditorJSDirective.html":{},"injectables/NgxEditorJSService.html":{},"changelog.html":{},"contributing.html":{},"miscellaneous/variables.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-readme.html":{}}}],["versioning",{"_index":1136,"title":{},"body":{"contributing.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-readme/ngx-editorjs-changelog.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-plugins-readme/ngx-editorjs-plugins-changelog.html":{}}}],["very",{"_index":1578,"title":{},"body":{"additional-documentation/tinynodes-library-docs/ngx-editorjs-plugins-readme.html":{}}}],["via",{"_index":83,"title":{},"body":{"interfaces/BlockData.html":{},"directives/NgxEditorJSDirective.html":{},"injectables/NgxEditorJSPluginService.html":{},"interfaces/PluginConfig.html":{},"interfaces/PluginConfigMap.html":{},"interfaces/ToolSettingsMap.html":{},"contributing.html":{},"index.html":{},"todo.html":{},"miscellaneous/typealiases.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-readme.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-readme/ngx-editorjs-changelog.html":{}}}],["viewchild",{"_index":229,"title":{},"body":{"interfaces/EditorJSMaterialForm.html":{}}}],["viewchild('editorinstance",{"_index":311,"title":{},"body":{"interfaces/EditorJSMaterialForm.html":{}}}],["viewer",{"_index":969,"title":{},"body":{"modules/NgxTinynodesMatJsonOutputModule.html":{},"dependencies.html":{}}}],["viewpoints",{"_index":1181,"title":{},"body":{"contributing.html":{}}}],["visit",{"_index":1349,"title":{},"body":{"index.html":{}}}],["void",{"_index":180,"title":{},"body":{"interfaces/EditorJSClass.html":{},"interfaces/EditorJSInstanceConfig.html":{},"interfaces/EditorJSMaterialForm.html":{},"interfaces/InjectorApiCallOptions.html":{},"interfaces/InjectorApiCallResponse.html":{},"interfaces/InjectorMethodOption.html":{},"directives/NgxEditorJSDirective.html":{},"injectables/NgxEditorJSService.html":{},"components/NgxTinynodesMatJsonOutputComponent.html":{}}}],["wait",{"_index":506,"title":{},"body":{"directives/NgxEditorJSDirective.html":{}}}],["want",{"_index":1364,"title":{},"body":{"index.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-readme.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-plugins-readme.html":{}}}],["warranties",{"_index":1417,"title":{},"body":{"license.html":{}}}],["warranty",{"_index":1412,"title":{},"body":{"license.html":{}}}],["way",{"_index":416,"title":{},"body":{"directives/NgxEditorJSDirective.html":{},"modules/NgxEditorjsPluginsModule.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-readme/ngx-editorjs-changelog.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-plugins-readme/ngx-editorjs-plugins-changelog.html":{}}}],["wednesday",{"_index":1051,"title":{},"body":{"changelog.html":{}}}],["welcoming",{"_index":1147,"title":{},"body":{"contributing.html":{}}}],["well",{"_index":1049,"title":{},"body":{"changelog.html":{}}}],["whether",{"_index":1429,"title":{},"body":{"license.html":{}}}],["wiki",{"_index":1231,"title":{},"body":{"contributing.html":{}}}],["wish",{"_index":1112,"title":{},"body":{"contributing.html":{}}}],["withbackground",{"_index":58,"title":{},"body":{"interfaces/Block.html":{},"interfaces/Header.html":{},"interfaces/HeaderBlock.html":{},"interfaces/Image.html":{},"interfaces/ImageBlock.html":{},"interfaces/List.html":{},"interfaces/ListBlock.html":{},"interfaces/Paragraph.html":{},"interfaces/ParagraphBlock.html":{}}}],["withborder",{"_index":55,"title":{},"body":{"interfaces/Block.html":{},"interfaces/Header.html":{},"interfaces/HeaderBlock.html":{},"interfaces/Image.html":{},"interfaces/ImageBlock.html":{},"interfaces/List.html":{},"interfaces/ListBlock.html":{},"interfaces/Paragraph.html":{},"interfaces/ParagraphBlock.html":{}}}],["within",{"_index":695,"title":{},"body":{"injectables/NgxEditorJSService.html":{},"contributing.html":{},"index.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-readme.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-plugins-readme.html":{}}}],["without",{"_index":1070,"title":{},"body":{"changelog.html":{},"contributing.html":{},"license.html":{}}}],["won't",{"_index":389,"title":{},"body":{"interfaces/NgxEditorJSConfig.html":{},"interfaces/NgxEditorJSModuleConfig.html":{}}}],["work",{"_index":1065,"title":{},"body":{"changelog.html":{}}}],["written",{"_index":1039,"title":{},"body":{"changelog.html":{}}}],["yes",{"_index":489,"title":{},"body":{"directives/NgxEditorJSDirective.html":{},"modules/NgxEditorJSModule.html":{},"miscellaneous/functions.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-plugins-readme.html":{}}}],["zone",{"_index":705,"title":{},"body":{"injectables/NgxEditorJSService.html":{}}}],["zone.js",{"_index":1326,"title":{},"body":{"dependencies.html":{}}}],["zoom",{"_index":599,"title":{},"body":{"modules/NgxEditorJSModule.html":{},"modules/NgxEditorjsPluginsModule.html":{},"modules/NgxPluginServiceModule.html":{},"modules/NgxTinynodesComponentsModule.html":{},"modules/NgxTinynodesMatJsonOutputModule.html":{},"modules/NgxTinynodesMatTagInputModule.html":{},"overview.html":{}}}]],"pipeline":["stemmer"]},
    "store": {"interfaces/Block.html":{"url":"interfaces/Block.html","title":"interface - Block","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  Block\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            libs/ngx-editorjs/src/lib/types/blocks.ts\n        \n\n            \n                Description\n            \n            \n                Base block type for EditorJS\n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        data\n                                \n                                \n                                        type\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n            \n    Indexable\n        \n            \n                \n                    \n                        [key: string]:        any\n\n                    \n                \n                        \n                            \n                                Defined in libs/ngx-editorjs/src/lib/types/blocks.ts:13\n                            \n                        \n                \n                    \n                        Additional properties on the type\n\n                    \n                \n            \n        \n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        data\n                                    \n                                \n                                \n                                    \n                                        data:     T\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     T\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    The data interface for the block type\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        type\n                                    \n                                \n                                \n                                    \n                                        type:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    The EditorJS block type\n\n                                \n                            \n                        \n                    \n            \n    \n\n\n    \n        export interface Block {\n  /**\n   * The EditorJS block type\n   */\n  type: string;\n\n  /**\n   * The data interface for the block type\n   */\n  data: T;\n\n  /**\n   * Additional properties on the type\n   */\n  [key: string]: any;\n}\n\n/**\n * Available list styles, supports `ordered` and `unordered`.\n * A custom string can also be added\n */\nexport type ListStyle = 'ordered' | 'unordered' | string;\n\n/**\n * Default data type for a list block\n */\nexport interface List {\n  /**\n   * The list style\n   */\n  style: ListStyle;\n  /**\n   * List items of type T\n   */\n  items: T[];\n}\n\n/**\n * The default list block is provided by the EditorJS list plugin\n */\nexport interface ListBlock extends Block> {\n  /**\n   * The EditorJS block type\n   */\n  type: 'list';\n}\n\n/**\n * Default data type for a paragraph block\n */\ninterface Paragraph {\n  /**\n   * The paragraph text\n   */\n  text: string;\n}\n\n/**\n * Interface for a paragraph block\n */\nexport interface ParagraphBlock extends Block {\n  /**\n   * The EditorJS block type\n   */\n  type: 'paragraph';\n}\n\n/**\n * Default data type for a header block\n */\ninterface Header {\n  /**\n   * The header text\n   */\n  text: string;\n  /**\n   * The header level from 1-6\n   */\n  level: number;\n}\n\n/**\n * Interface for a header block\n */\nexport interface HeaderBlock extends Block {\n  /**\n   * The EditorJS block type\n   */\n  type: 'header';\n}\n\n/**\n * Default data type for a header block\n */\nexport interface Image {\n  /**\n   * The image URL\n   */\n  url: string;\n  /**\n   * Optional image caption\n   */\n  caption?: string;\n  /**\n   * Optional border property\n   */\n  withBorder?: boolean;\n\n  /**\n   * Optional background property\n   */\n  withBackground?: boolean;\n\n  /**\n   * Optional stretch property\n   */\n  stretched?: boolean;\n}\n\n/**\n * Interface for a image block\n */\nexport interface ImageBlock extends Block {\n  /**\n   * The EditorJS block type\n   */\n  type: 'image';\n}\n\n/**\n * Type of all the basic block type\n */\nexport type BlockTypes = ParagraphBlock | HeaderBlock | ImageBlock | ListBlock | Block;\n\n    \n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/BlockData.html":{"url":"interfaces/BlockData.html","title":"interface - BlockData","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  BlockData\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            libs/ngx-editorjs-plugins/src/lib/types/plugins.ts\n        \n\n            \n                Description\n            \n            \n                Block Data interface\n\n            \n\n\n\n\n            \n    Indexable\n        \n            \n                \n                    \n                        [key: string]:        any\n\n                    \n                \n                        \n                            \n                                Defined in libs/ngx-editorjs-plugins/src/lib/types/plugins.ts:7\n                            \n                        \n            \n        \n\n\n    \n\n\n    \n        import { InjectionToken } from '@angular/core';\nimport { ToolSettings, ToolConstructable } from '@editorjs/editorjs';\n\n/**\n * Block Data interface\n */\nexport interface BlockData {\n  [key: string]: any;\n}\n\n/**\n * The types of plugins supported, currently block and inline\n */\nexport enum PluginTypes {\n  /**\n   * A EditorJS block plugin\n   */\n  Block = 'block',\n  /**\n   * A EditorJS inline plugin\n   */\n  Inline = 'inline'\n}\n\n/**\n * The types of plugins supported via the plugin `type` property\n */\nexport type PluginType = PluginTypes.Block | PluginTypes.Inline | string;\n\n/**\n * A plugin property\n */\nexport type PluginProperty = string;\n\n/**\n * The EditorJS tool settings for this plugin\n */\nexport type EditorJSPlugin = ToolConstructable | ToolSettings;\n\n/**\n * A map of all the tools settings\n */\nexport interface ToolSettingsMap {\n  /**\n   * The key of the plugin and the plugin exported tool settings\n   */\n  [key: string]: EditorJSPlugin;\n}\n\n/**\n * A plugin configuration object\n */\nexport interface PluginConfig {\n  /**\n   * Specifies the type of plugin for the plugin provider\n   */\n  type: PluginProperty;\n  /**\n   * The key to use for the plugin\n   */\n  key: PluginProperty;\n  /**\n   * Label for displaying the plugin name\n   */\n  pluginName: PluginProperty;\n  /**\n   * Optional description for the plugin\n   */\n  description?: PluginProperty;\n  /**\n   * Optional shortcut for the plugin\n   */\n  shortcut?: PluginProperty;\n  /**\n   * Optional block data, used to define the block data for this type\n   * and used as a default\n   */\n  blockData?: BlockData;\n  /**\n   * The plugin for the editor\n   */\n  plugin: EditorJSPlugin | undefined;\n}\n\n/**\n * The Injection token for initial plugins as defined in the ngx-editorjs module\n */\nexport const EDITOR_JS_TOOL_INJECTOR = new InjectionToken('EDITOR_JS_TOOL_INJECTOR');\n\n/**\n * Injection token for a plugin config\n */\nexport const PLUGIN_CONFIG = new InjectionToken('PLUGIN_CONFIG');\n\n/**\n * A map of plugin configs\n */\nexport interface PluginConfigMap {\n  /**\n   * A plugin config per key\n   */\n  [key: string]: PluginConfig;\n}\n\n/**\n * Injection token for the plugin config map\n */\nexport const PluginClasses = new InjectionToken('PluginClasses');\n\n    \n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/ChangeMap.html":{"url":"interfaces/ChangeMap.html","title":"interface - ChangeMap","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  ChangeMap\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            libs/ngx-editorjs/src/lib/types/maps.ts\n        \n\n            \n                Description\n            \n            \n                A map containing BehaviorSubject which is the last save from the EditorJS instance\n\n            \n\n\n\n\n            \n    Indexable\n        \n            \n                \n                    \n                        [key: string]:    BehaviorSubject\n\n                    \n                \n                        \n                            \n                                Defined in libs/ngx-editorjs/src/lib/types/maps.ts:52\n                            \n                        \n                \n                    \n                        A map key containing a BehaviorSubject\n\n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import EditorJS, { OutputData } from '@editorjs/editorjs';\nimport { BehaviorSubject } from 'rxjs';\nimport { Block } from './blocks';\n\n/**\n * A map containing instances of `BehaviorSubject`\n */\nexport interface EditorMap {\n  /**\n   * A map key containing `BehaviorSubject`\n   */\n  [key: string]: BehaviorSubject;\n}\n\n/**\n * A map containing `BehaviorSubject` values of the ready state of EditorJS\n */\nexport interface ReadyMap {\n  /**\n   * A map key containing a `BehaviorSubject`\n   */\n  [key: string]: BehaviorSubject;\n}\n\n/**\n * A map containing `BehaviorSubject` values of the save state of EditorJS\n */\nexport interface SavedMap {\n  /**\n   * A map key containing a `BehaviorSubject`\n   */\n  [key: string]: BehaviorSubject;\n}\n\n/**\n * An EditorJS change event\n */\nexport interface EditorJSChange {\n  /**\n   * Time of the change\n   */\n  time: number;\n  /**\n   * Blocks in the change\n   */\n  blocks: Block[];\n}\n\n/**\n * A map containing `BehaviorSubject` which is the last save from the EditorJS instance\n */\nexport interface ChangeMap {\n  /**\n   * A map key containing a `BehaviorSubject`\n   */\n  [key: string]: BehaviorSubject;\n}\n\n    \n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/CreateEditorJSOptions.html":{"url":"interfaces/CreateEditorJSOptions.html","title":"interface - CreateEditorJSOptions","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  CreateEditorJSOptions\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            libs/ngx-editorjs/src/lib/types/editorjs-service.ts\n        \n\n            \n                Description\n            \n            \n                EditorJS options\n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                            Optional\n                                        autoSave\n                                \n                                \n                                        config\n                                \n                                \n                                            Optional\n                                        excludeTools\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        autoSave\n                                    \n                                \n                                \n                                    \n                                        autoSave:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    Autosave on change, is set to false\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        config\n                                    \n                                \n                                \n                                    \n                                        config:     EditorConfig\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     EditorConfig\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Configuration\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        excludeTools\n                                    \n                                \n                                \n                                    \n                                        excludeTools:     string[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string[]\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    Tools to include, Optional - if not set all tools will be used\n\n                                \n                            \n                        \n                    \n            \n    \n\n\n    \n        import { EditorConfig } from '@editorjs/editorjs';\n\n/**\n * EditorJS options\n */\nexport interface CreateEditorJSOptions {\n  /**\n   * Configuration\n   */\n  config: EditorConfig;\n  /**\n   * Tools to include, Optional - if not set all tools will be used\n   */\n  excludeTools?: string[];\n  /**\n   * Autosave on change, is set to false\n   */\n  autoSave?: number;\n}\n\n    \n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/EditorJSChange.html":{"url":"interfaces/EditorJSChange.html","title":"interface - EditorJSChange","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  EditorJSChange\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            libs/ngx-editorjs/src/lib/types/maps.ts\n        \n\n            \n                Description\n            \n            \n                An EditorJS change event\n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        blocks\n                                \n                                \n                                        time\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        blocks\n                                    \n                                \n                                \n                                    \n                                        blocks:         Block[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         Block[]\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Blocks in the change\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        time\n                                    \n                                \n                                \n                                    \n                                        time:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Time of the change\n\n                                \n                            \n                        \n                    \n            \n    \n\n\n    \n        import EditorJS, { OutputData } from '@editorjs/editorjs';\nimport { BehaviorSubject } from 'rxjs';\nimport { Block } from './blocks';\n\n/**\n * A map containing instances of `BehaviorSubject`\n */\nexport interface EditorMap {\n  /**\n   * A map key containing `BehaviorSubject`\n   */\n  [key: string]: BehaviorSubject;\n}\n\n/**\n * A map containing `BehaviorSubject` values of the ready state of EditorJS\n */\nexport interface ReadyMap {\n  /**\n   * A map key containing a `BehaviorSubject`\n   */\n  [key: string]: BehaviorSubject;\n}\n\n/**\n * A map containing `BehaviorSubject` values of the save state of EditorJS\n */\nexport interface SavedMap {\n  /**\n   * A map key containing a `BehaviorSubject`\n   */\n  [key: string]: BehaviorSubject;\n}\n\n/**\n * An EditorJS change event\n */\nexport interface EditorJSChange {\n  /**\n   * Time of the change\n   */\n  time: number;\n  /**\n   * Blocks in the change\n   */\n  blocks: Block[];\n}\n\n/**\n * A map containing `BehaviorSubject` which is the last save from the EditorJS instance\n */\nexport interface ChangeMap {\n  /**\n   * A map key containing a `BehaviorSubject`\n   */\n  [key: string]: BehaviorSubject;\n}\n\n    \n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/EditorJSClass.html":{"url":"interfaces/EditorJSClass.html","title":"interface - EditorJSClass","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  EditorJSClass\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            libs/ngx-editorjs/src/lib/types/injector.ts\n        \n\n            \n                Description\n            \n            \n                Interface for the injected EditorJS class, returns the static\nclass of EditorJS with the version and that creates the instance and provides\nthe Typescript parse with type information\n\n            \n\n            \n                Extends\n            \n            \n                        Function\n            \n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        version\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        version\n                                    \n                                \n                                \n                                    \n                                        version:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    EditorJS version\n\n                                \n                            \n                        \n                    \n            \n    \n\n\n    \n        import { InjectionToken } from '@angular/core';\nimport EditorJS, { EditorConfig, OutputData } from '@editorjs/editorjs';\nimport { Block } from './blocks';\n\n/**\n * Configuration for creating an EditorJS instance\n */\nexport interface EditorJSInstanceConfig {\n  /**\n   * The editor configuration, this is required with at least the `holder` property\n   */\n  editorConfig: EditorConfig;\n  /**\n   * The method to call when the editor makes a change\n   */\n  onChange?: (holder?: string) => void;\n\n  /**\n   * The method to call with an editor is ready\n   */\n  onReady?: (holder?: string) => void;\n}\n\n/**\n * Default values for each internal map\n */\nexport const MAP_DEFAULTS = [\n  ['lastChangeMap', { time: 0, blocks: [], version: EditorJS.version }],\n  ['isReadyMap', false],\n  ['hasSavedMap', false]\n];\n\n/**\n * Injection token for the EditorJS class\n */\nexport const EDITORJS_MODULE_IMPORT = new InjectionToken('EDITORJS_MODULE_IMPORT');\n\n/**\n * The EditorJS class injector\n */\nexport const EditorJSInstance = new InjectionToken('EditorJSInstance');\n\n/**\n * Options for a Injector method\n */\nexport interface InjectorMethodOption {\n  /**\n   * The holder for the option\n   */\n  holder: string;\n  /**\n   * Optional blocks\n   */\n  data?: OutputData;\n  /**\n   * Optional editor\n   */\n  editor?: EditorJS;\n  /**\n   * Don't call save\n   */\n  skipSave?: boolean;\n}\n\n/**\n * Options to pass when calling the EditorJS instance API\n */\nexport interface InjectorApiCallOptions {\n  /**\n   * Holder for the EditorJS instance\n   */\n  holder: string;\n\n  /**\n   * The method to call\n   */\n  method: string;\n  /**\n   * The optional namespace for the API call\n   */\n  namespace?: string;\n}\n\n/**\n * A response from the EditorJS api\n */\nexport interface InjectorApiCallResponse extends InjectorApiCallOptions {\n  result: T;\n}\n\n/**\n * Interface for the injected EditorJS class, returns the static\n * class of EditorJS with the version and that creates the instance and provides\n * the Typescript parse with type information\n */\nexport interface EditorJSClass extends Function {\n  new (...args: any[]): T;\n  /**\n   * EditorJS version\n   */\n  version: string;\n}\n\n    \n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/EditorJSInstanceConfig.html":{"url":"interfaces/EditorJSInstanceConfig.html","title":"interface - EditorJSInstanceConfig","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  EditorJSInstanceConfig\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            libs/ngx-editorjs/src/lib/types/injector.ts\n        \n\n            \n                Description\n            \n            \n                Configuration for creating an EditorJS instance\n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        editorConfig\n                                \n                                \n                                            Optional\n                                        onChange\n                                \n                                \n                                            Optional\n                                        onReady\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        editorConfig\n                                    \n                                \n                                \n                                    \n                                        editorConfig:     EditorConfig\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     EditorConfig\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    The editor configuration, this is required with at least the holder property\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        onChange\n                                    \n                                \n                                \n                                    \n                                        onChange:         function\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         function\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    The method to call when the editor makes a change\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        onReady\n                                    \n                                \n                                \n                                    \n                                        onReady:         function\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         function\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    The method to call with an editor is ready\n\n                                \n                            \n                        \n                    \n            \n    \n\n\n    \n        import { InjectionToken } from '@angular/core';\nimport EditorJS, { EditorConfig, OutputData } from '@editorjs/editorjs';\nimport { Block } from './blocks';\n\n/**\n * Configuration for creating an EditorJS instance\n */\nexport interface EditorJSInstanceConfig {\n  /**\n   * The editor configuration, this is required with at least the `holder` property\n   */\n  editorConfig: EditorConfig;\n  /**\n   * The method to call when the editor makes a change\n   */\n  onChange?: (holder?: string) => void;\n\n  /**\n   * The method to call with an editor is ready\n   */\n  onReady?: (holder?: string) => void;\n}\n\n/**\n * Default values for each internal map\n */\nexport const MAP_DEFAULTS = [\n  ['lastChangeMap', { time: 0, blocks: [], version: EditorJS.version }],\n  ['isReadyMap', false],\n  ['hasSavedMap', false]\n];\n\n/**\n * Injection token for the EditorJS class\n */\nexport const EDITORJS_MODULE_IMPORT = new InjectionToken('EDITORJS_MODULE_IMPORT');\n\n/**\n * The EditorJS class injector\n */\nexport const EditorJSInstance = new InjectionToken('EditorJSInstance');\n\n/**\n * Options for a Injector method\n */\nexport interface InjectorMethodOption {\n  /**\n   * The holder for the option\n   */\n  holder: string;\n  /**\n   * Optional blocks\n   */\n  data?: OutputData;\n  /**\n   * Optional editor\n   */\n  editor?: EditorJS;\n  /**\n   * Don't call save\n   */\n  skipSave?: boolean;\n}\n\n/**\n * Options to pass when calling the EditorJS instance API\n */\nexport interface InjectorApiCallOptions {\n  /**\n   * Holder for the EditorJS instance\n   */\n  holder: string;\n\n  /**\n   * The method to call\n   */\n  method: string;\n  /**\n   * The optional namespace for the API call\n   */\n  namespace?: string;\n}\n\n/**\n * A response from the EditorJS api\n */\nexport interface InjectorApiCallResponse extends InjectorApiCallOptions {\n  result: T;\n}\n\n/**\n * Interface for the injected EditorJS class, returns the static\n * class of EditorJS with the version and that creates the instance and provides\n * the Typescript parse with type information\n */\nexport interface EditorJSClass extends Function {\n  new (...args: any[]): T;\n  /**\n   * EditorJS version\n   */\n  version: string;\n}\n\n    \n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/EditorJSMaterialForm.html":{"url":"interfaces/EditorJSMaterialForm.html","title":"interface - EditorJSMaterialForm","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  EditorJSMaterialForm\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            libs/ngx-editorjs/src/lib/containers/editorjs-mat-field/editorjs-mat-field.component.ts\n        \n\n            \n                Description\n            \n            \n                Single interface for EditorJSMaterialForm\n\n            \n\n            \n                Extends\n            \n            \n                    MatFormFieldControl\n            \n\n\n\n\n    \n\n\n    \n        import { FocusMonitor } from '@angular/cdk/a11y';\nimport { coerceBooleanProperty } from '@angular/cdk/coercion';\nimport {\n  AfterContentInit,\n  ChangeDetectionStrategy,\n  ChangeDetectorRef,\n  Component,\n  DoCheck,\n  forwardRef,\n  HostBinding,\n  Input,\n  OnDestroy,\n  OnInit,\n  Optional,\n  Provider,\n  Self,\n  ViewChild\n} from '@angular/core';\nimport { NgControl } from '@angular/forms';\nimport { MatFormFieldControl } from '@angular/material/form-field';\nimport { Subject } from 'rxjs';\nimport { takeUntil } from 'rxjs/operators';\nimport { NgxEditorJSDirective } from '../../directives/ngx-editorjs.directive';\nimport { NgxEditorJSService } from '../../services/editorjs.service';\nimport { NgxEditorJSComponent } from '../editorjs/editorjs.component';\n\n/**\n * Provider for the EditorJS Material Field Component\n */\nexport const EDITORJS_MATERIAL_FIELD_CONTROL: Provider = {\n  provide: MatFormFieldControl,\n  useExisting: forwardRef(() => NgxEditorJSMatFieldComponent),\n  multi: true\n};\n\n/**\n * Single interface for EditorJSMaterialForm\n */\nexport interface EditorJSMaterialForm\n  extends MatFormFieldControl,\n    OnInit,\n    AfterContentInit,\n    OnDestroy,\n    DoCheck {}\n\n/**\n * This component provides a [Material](https://material.angular.io) compatible `` component.\n * It provides a full implementation of all the required properties of a Material component\n *\n * @example\n * \n *  \n * \n */\n@Component({\n  selector: 'ngx-editorjs-mat-field',\n  templateUrl: 'editorjs-mat-field.component.html',\n  styleUrls: ['editorjs-mat-field.component.scss'],\n  providers: [EDITORJS_MATERIAL_FIELD_CONTROL],\n  changeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class NgxEditorJSMatFieldComponent extends NgxEditorJSComponent implements EditorJSMaterialForm {\n  /**\n   * Internal Static ID for Material for each editor instance\n   */\n  static nextId = 0;\n  /**\n   * Material state change subject\n   */\n  public stateChanges = new Subject();\n\n  /**\n   * Material control type\n   */\n  public controlType = 'ngx-editorjs-mat-field';\n\n  /**\n   * Material error state\n   */\n  public errorState = false;\n\n  /**\n   * Get the component value\n   */\n  get value(): any {\n    return this._value;\n  }\n\n  /**\n   * Set the component value\n   * @param value The value to set\n   */\n  @Input('value')\n  set value(value: any) {\n    this._value = value;\n    this.stateChanges.next();\n  }\n\n  /**\n   * Material placeholder value\n   */\n  private _placeholder: string;\n\n  /**\n   * Get the Material placeholder value\n   */\n  get placeholder() {\n    return this._placeholder;\n  }\n  /**\n   * Set the material Placeholder value\n   * @input placeholder The placeholder state to set\n   */\n  @Input('placeholder')\n  set placeholder(placeholder: string) {\n    this._placeholder = placeholder;\n    this.stateChanges.next();\n  }\n\n  /**\n   * Material focused state\n   */\n  private _focused: boolean;\n  /**\n   * Get the Material focused state\n   */\n  get focused() {\n    return this._focused;\n  }\n  /**\n   * Set the Material focused state\n   * @param focused The focused state to set\n   */\n  @Input('focused')\n  set focused(focused: boolean) {\n    this._focused = coerceBooleanProperty(focused);\n    if (this._focused) {\n      this.onTouch();\n    }\n    this.stateChanges.next();\n  }\n\n  /**\n   * Material Required Value\n   */\n  private _required = false;\n\n  /**\n   * Get the Material required state\n   */\n  get required() {\n    return this._required;\n  }\n  /**\n   * Set the Material requied state\n   * @param required The required state to set\n   */\n  @Input('required')\n  set required(required: boolean) {\n    this._required = coerceBooleanProperty(required);\n    this.stateChanges.next();\n  }\n\n  /**\n   * Material disabled state\n   */\n  private _disabled = false;\n\n  /**\n   * Get the Material disabled state\n   */\n  get disabled() {\n    return this._disabled;\n  }\n  /**\n   * Set the Material disabled state\n   * @param disabled The disabled state to set\n   */\n  @Input('disabled')\n  set disabled(disabled: boolean) {\n    this._disabled = coerceBooleanProperty(disabled);\n    this.stateChanges.next();\n  }\n\n  /**\n   * Material empty state\n   */\n  private _empty: boolean;\n  /**\n   * Get the Material empty state\n   */\n  public get empty() {\n    return this._empty;\n  }\n  /**\n   * Set the Material empty state\n   * @param empty The empty value\n   */\n  public set empty(empty: boolean) {\n    this._empty = empty;\n  }\n\n  /**\n   * Access to the underlying {NgxEditorJSDirective}\n   */\n  @ViewChild('editorInstance', { read: NgxEditorJSDirective, static: true })\n  public readonly editorInstance: NgxEditorJSDirective;\n\n  /**\n   * Host binding to the unique ID for this editor for material\n   */\n  @HostBinding()\n  id = `ngx-editorjs-mat-field-${NgxEditorJSMatFieldComponent.nextId++}`;\n\n  /**\n   * Gets if the Material label should float\n   */\n  @HostBinding('class.floating')\n  get shouldLabelFloat() {\n    return this.focused || !this.empty;\n  }\n\n  /**\n   * Host binding for ARIA label\n   */\n  @HostBinding('attr.aria-describedby') describedBy = '';\n\n  /**\n   *\n   * @param ids The IDs of the Material components\n   */\n  public setDescribedByIds(ids: string[]) {\n    this.describedBy = ids.join(' ');\n  }\n\n  /**\n   * Material on container click\n   * @param event The {MouseEvent} for the container click\n   */\n  public onContainerClick(event: MouseEvent) {\n    this.onTouch(event);\n    this.stateChanges.next();\n  }\n\n  /**\n   * Constructor for the Material field, as this extends the `NgxEditorJSComponent` component\n   * we call `super()` to get all the properties of that component\n   * @param editorService The NgxEditorJSService instance\n   * @param focusMonitor Focus monitor for the Material element\n   * @parma cd The Change detection ref\n   * @param ngControl The Angular control base class\n   */\n  constructor(\n    protected readonly editorService: NgxEditorJSService,\n    protected focusMonitor: FocusMonitor,\n    protected readonly changeDetection: ChangeDetectorRef,\n    @Optional() @Self() public ngControl: NgControl\n  ) {\n    super(editorService, focusMonitor, changeDetection);\n  }\n\n  /**\n   * Called on OnInit\n   */\n  public ngOnInit(): void {\n    if (this.ngControl !== null) {\n      this.ngControl.valueAccessor = this;\n    }\n  }\n\n  /**\n   * Inside the AfterContentInit life-cycle we set up a listener for focus\n   * and trigger focus autosave subscribe and unsubscribe\n   */\n  public ngAfterContentInit(): void {\n    this.setupServiceSubscriptions();\n    this.getFocusMonitor(this.editorInstance.element)\n      .pipe(takeUntil(this.onDestroy$))\n      .subscribe(focused => {\n        this.onTouch();\n        this.focused = focused;\n        this.stateChanges.next();\n      });\n  }\n\n  /**\n   * Set the error state based on the underlying control state\n   */\n  ngDoCheck(): void {\n    if (this.ngControl) {\n      this.errorState = this.ngControl.invalid && this.ngControl.touched;\n      this.stateChanges.next();\n    }\n  }\n}\n\n    \n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/EditorMap.html":{"url":"interfaces/EditorMap.html","title":"interface - EditorMap","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  EditorMap\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            libs/ngx-editorjs/src/lib/types/maps.ts\n        \n\n            \n                Description\n            \n            \n                A map containing instances of BehaviorSubject\n\n            \n\n\n\n\n            \n    Indexable\n        \n            \n                \n                    \n                        [key: string]:    BehaviorSubject\n\n                    \n                \n                        \n                            \n                                Defined in libs/ngx-editorjs/src/lib/types/maps.ts:8\n                            \n                        \n                \n                    \n                        A map key containing BehaviorSubject\n\n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import EditorJS, { OutputData } from '@editorjs/editorjs';\nimport { BehaviorSubject } from 'rxjs';\nimport { Block } from './blocks';\n\n/**\n * A map containing instances of `BehaviorSubject`\n */\nexport interface EditorMap {\n  /**\n   * A map key containing `BehaviorSubject`\n   */\n  [key: string]: BehaviorSubject;\n}\n\n/**\n * A map containing `BehaviorSubject` values of the ready state of EditorJS\n */\nexport interface ReadyMap {\n  /**\n   * A map key containing a `BehaviorSubject`\n   */\n  [key: string]: BehaviorSubject;\n}\n\n/**\n * A map containing `BehaviorSubject` values of the save state of EditorJS\n */\nexport interface SavedMap {\n  /**\n   * A map key containing a `BehaviorSubject`\n   */\n  [key: string]: BehaviorSubject;\n}\n\n/**\n * An EditorJS change event\n */\nexport interface EditorJSChange {\n  /**\n   * Time of the change\n   */\n  time: number;\n  /**\n   * Blocks in the change\n   */\n  blocks: Block[];\n}\n\n/**\n * A map containing `BehaviorSubject` which is the last save from the EditorJS instance\n */\nexport interface ChangeMap {\n  /**\n   * A map key containing a `BehaviorSubject`\n   */\n  [key: string]: BehaviorSubject;\n}\n\n    \n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/Header.html":{"url":"interfaces/Header.html","title":"interface - Header","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  Header\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            libs/ngx-editorjs/src/lib/types/blocks.ts\n        \n\n            \n                Description\n            \n            \n                Default data type for a header block\n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        level\n                                \n                                \n                                        text\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        level\n                                    \n                                \n                                \n                                    \n                                        level:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    The header level from 1-6\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        text\n                                    \n                                \n                                \n                                    \n                                        text:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    The header text\n\n                                \n                            \n                        \n                    \n            \n    \n\n\n    \n        export interface Block {\n  /**\n   * The EditorJS block type\n   */\n  type: string;\n\n  /**\n   * The data interface for the block type\n   */\n  data: T;\n\n  /**\n   * Additional properties on the type\n   */\n  [key: string]: any;\n}\n\n/**\n * Available list styles, supports `ordered` and `unordered`.\n * A custom string can also be added\n */\nexport type ListStyle = 'ordered' | 'unordered' | string;\n\n/**\n * Default data type for a list block\n */\nexport interface List {\n  /**\n   * The list style\n   */\n  style: ListStyle;\n  /**\n   * List items of type T\n   */\n  items: T[];\n}\n\n/**\n * The default list block is provided by the EditorJS list plugin\n */\nexport interface ListBlock extends Block> {\n  /**\n   * The EditorJS block type\n   */\n  type: 'list';\n}\n\n/**\n * Default data type for a paragraph block\n */\ninterface Paragraph {\n  /**\n   * The paragraph text\n   */\n  text: string;\n}\n\n/**\n * Interface for a paragraph block\n */\nexport interface ParagraphBlock extends Block {\n  /**\n   * The EditorJS block type\n   */\n  type: 'paragraph';\n}\n\n/**\n * Default data type for a header block\n */\ninterface Header {\n  /**\n   * The header text\n   */\n  text: string;\n  /**\n   * The header level from 1-6\n   */\n  level: number;\n}\n\n/**\n * Interface for a header block\n */\nexport interface HeaderBlock extends Block {\n  /**\n   * The EditorJS block type\n   */\n  type: 'header';\n}\n\n/**\n * Default data type for a header block\n */\nexport interface Image {\n  /**\n   * The image URL\n   */\n  url: string;\n  /**\n   * Optional image caption\n   */\n  caption?: string;\n  /**\n   * Optional border property\n   */\n  withBorder?: boolean;\n\n  /**\n   * Optional background property\n   */\n  withBackground?: boolean;\n\n  /**\n   * Optional stretch property\n   */\n  stretched?: boolean;\n}\n\n/**\n * Interface for a image block\n */\nexport interface ImageBlock extends Block {\n  /**\n   * The EditorJS block type\n   */\n  type: 'image';\n}\n\n/**\n * Type of all the basic block type\n */\nexport type BlockTypes = ParagraphBlock | HeaderBlock | ImageBlock | ListBlock | Block;\n\n    \n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/HeaderBlock.html":{"url":"interfaces/HeaderBlock.html","title":"interface - HeaderBlock","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  HeaderBlock\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            libs/ngx-editorjs/src/lib/types/blocks.ts\n        \n\n            \n                Description\n            \n            \n                Interface for a header block\n\n            \n\n            \n                Extends\n            \n            \n                        Block\n            \n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        type\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        type\n                                    \n                                \n                                \n                                    \n                                        type:     \n\n                                    \n                                \n\n\n\n\n\n\n\n                            \n                                \n                                    The EditorJS block type\n\n                                \n                            \n                        \n                    \n            \n    \n\n\n    \n        export interface Block {\n  /**\n   * The EditorJS block type\n   */\n  type: string;\n\n  /**\n   * The data interface for the block type\n   */\n  data: T;\n\n  /**\n   * Additional properties on the type\n   */\n  [key: string]: any;\n}\n\n/**\n * Available list styles, supports `ordered` and `unordered`.\n * A custom string can also be added\n */\nexport type ListStyle = 'ordered' | 'unordered' | string;\n\n/**\n * Default data type for a list block\n */\nexport interface List {\n  /**\n   * The list style\n   */\n  style: ListStyle;\n  /**\n   * List items of type T\n   */\n  items: T[];\n}\n\n/**\n * The default list block is provided by the EditorJS list plugin\n */\nexport interface ListBlock extends Block> {\n  /**\n   * The EditorJS block type\n   */\n  type: 'list';\n}\n\n/**\n * Default data type for a paragraph block\n */\ninterface Paragraph {\n  /**\n   * The paragraph text\n   */\n  text: string;\n}\n\n/**\n * Interface for a paragraph block\n */\nexport interface ParagraphBlock extends Block {\n  /**\n   * The EditorJS block type\n   */\n  type: 'paragraph';\n}\n\n/**\n * Default data type for a header block\n */\ninterface Header {\n  /**\n   * The header text\n   */\n  text: string;\n  /**\n   * The header level from 1-6\n   */\n  level: number;\n}\n\n/**\n * Interface for a header block\n */\nexport interface HeaderBlock extends Block {\n  /**\n   * The EditorJS block type\n   */\n  type: 'header';\n}\n\n/**\n * Default data type for a header block\n */\nexport interface Image {\n  /**\n   * The image URL\n   */\n  url: string;\n  /**\n   * Optional image caption\n   */\n  caption?: string;\n  /**\n   * Optional border property\n   */\n  withBorder?: boolean;\n\n  /**\n   * Optional background property\n   */\n  withBackground?: boolean;\n\n  /**\n   * Optional stretch property\n   */\n  stretched?: boolean;\n}\n\n/**\n * Interface for a image block\n */\nexport interface ImageBlock extends Block {\n  /**\n   * The EditorJS block type\n   */\n  type: 'image';\n}\n\n/**\n * Type of all the basic block type\n */\nexport type BlockTypes = ParagraphBlock | HeaderBlock | ImageBlock | ListBlock | Block;\n\n    \n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/Image.html":{"url":"interfaces/Image.html","title":"interface - Image","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  Image\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            libs/ngx-editorjs/src/lib/types/blocks.ts\n        \n\n            \n                Description\n            \n            \n                Default data type for a header block\n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                            Optional\n                                        caption\n                                \n                                \n                                            Optional\n                                        stretched\n                                \n                                \n                                        url\n                                \n                                \n                                            Optional\n                                        withBackground\n                                \n                                \n                                            Optional\n                                        withBorder\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        caption\n                                    \n                                \n                                \n                                    \n                                        caption:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    Optional image caption\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        stretched\n                                    \n                                \n                                \n                                    \n                                        stretched:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    Optional stretch property\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        url\n                                    \n                                \n                                \n                                    \n                                        url:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    The image URL\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        withBackground\n                                    \n                                \n                                \n                                    \n                                        withBackground:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    Optional background property\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        withBorder\n                                    \n                                \n                                \n                                    \n                                        withBorder:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    Optional border property\n\n                                \n                            \n                        \n                    \n            \n    \n\n\n    \n        export interface Block {\n  /**\n   * The EditorJS block type\n   */\n  type: string;\n\n  /**\n   * The data interface for the block type\n   */\n  data: T;\n\n  /**\n   * Additional properties on the type\n   */\n  [key: string]: any;\n}\n\n/**\n * Available list styles, supports `ordered` and `unordered`.\n * A custom string can also be added\n */\nexport type ListStyle = 'ordered' | 'unordered' | string;\n\n/**\n * Default data type for a list block\n */\nexport interface List {\n  /**\n   * The list style\n   */\n  style: ListStyle;\n  /**\n   * List items of type T\n   */\n  items: T[];\n}\n\n/**\n * The default list block is provided by the EditorJS list plugin\n */\nexport interface ListBlock extends Block> {\n  /**\n   * The EditorJS block type\n   */\n  type: 'list';\n}\n\n/**\n * Default data type for a paragraph block\n */\ninterface Paragraph {\n  /**\n   * The paragraph text\n   */\n  text: string;\n}\n\n/**\n * Interface for a paragraph block\n */\nexport interface ParagraphBlock extends Block {\n  /**\n   * The EditorJS block type\n   */\n  type: 'paragraph';\n}\n\n/**\n * Default data type for a header block\n */\ninterface Header {\n  /**\n   * The header text\n   */\n  text: string;\n  /**\n   * The header level from 1-6\n   */\n  level: number;\n}\n\n/**\n * Interface for a header block\n */\nexport interface HeaderBlock extends Block {\n  /**\n   * The EditorJS block type\n   */\n  type: 'header';\n}\n\n/**\n * Default data type for a header block\n */\nexport interface Image {\n  /**\n   * The image URL\n   */\n  url: string;\n  /**\n   * Optional image caption\n   */\n  caption?: string;\n  /**\n   * Optional border property\n   */\n  withBorder?: boolean;\n\n  /**\n   * Optional background property\n   */\n  withBackground?: boolean;\n\n  /**\n   * Optional stretch property\n   */\n  stretched?: boolean;\n}\n\n/**\n * Interface for a image block\n */\nexport interface ImageBlock extends Block {\n  /**\n   * The EditorJS block type\n   */\n  type: 'image';\n}\n\n/**\n * Type of all the basic block type\n */\nexport type BlockTypes = ParagraphBlock | HeaderBlock | ImageBlock | ListBlock | Block;\n\n    \n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/ImageBlock.html":{"url":"interfaces/ImageBlock.html","title":"interface - ImageBlock","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  ImageBlock\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            libs/ngx-editorjs/src/lib/types/blocks.ts\n        \n\n            \n                Description\n            \n            \n                Interface for a image block\n\n            \n\n            \n                Extends\n            \n            \n                        Block\n            \n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        type\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        type\n                                    \n                                \n                                \n                                    \n                                        type:     \n\n                                    \n                                \n\n\n\n\n\n\n\n                            \n                                \n                                    The EditorJS block type\n\n                                \n                            \n                        \n                    \n            \n    \n\n\n    \n        export interface Block {\n  /**\n   * The EditorJS block type\n   */\n  type: string;\n\n  /**\n   * The data interface for the block type\n   */\n  data: T;\n\n  /**\n   * Additional properties on the type\n   */\n  [key: string]: any;\n}\n\n/**\n * Available list styles, supports `ordered` and `unordered`.\n * A custom string can also be added\n */\nexport type ListStyle = 'ordered' | 'unordered' | string;\n\n/**\n * Default data type for a list block\n */\nexport interface List {\n  /**\n   * The list style\n   */\n  style: ListStyle;\n  /**\n   * List items of type T\n   */\n  items: T[];\n}\n\n/**\n * The default list block is provided by the EditorJS list plugin\n */\nexport interface ListBlock extends Block> {\n  /**\n   * The EditorJS block type\n   */\n  type: 'list';\n}\n\n/**\n * Default data type for a paragraph block\n */\ninterface Paragraph {\n  /**\n   * The paragraph text\n   */\n  text: string;\n}\n\n/**\n * Interface for a paragraph block\n */\nexport interface ParagraphBlock extends Block {\n  /**\n   * The EditorJS block type\n   */\n  type: 'paragraph';\n}\n\n/**\n * Default data type for a header block\n */\ninterface Header {\n  /**\n   * The header text\n   */\n  text: string;\n  /**\n   * The header level from 1-6\n   */\n  level: number;\n}\n\n/**\n * Interface for a header block\n */\nexport interface HeaderBlock extends Block {\n  /**\n   * The EditorJS block type\n   */\n  type: 'header';\n}\n\n/**\n * Default data type for a header block\n */\nexport interface Image {\n  /**\n   * The image URL\n   */\n  url: string;\n  /**\n   * Optional image caption\n   */\n  caption?: string;\n  /**\n   * Optional border property\n   */\n  withBorder?: boolean;\n\n  /**\n   * Optional background property\n   */\n  withBackground?: boolean;\n\n  /**\n   * Optional stretch property\n   */\n  stretched?: boolean;\n}\n\n/**\n * Interface for a image block\n */\nexport interface ImageBlock extends Block {\n  /**\n   * The EditorJS block type\n   */\n  type: 'image';\n}\n\n/**\n * Type of all the basic block type\n */\nexport type BlockTypes = ParagraphBlock | HeaderBlock | ImageBlock | ListBlock | Block;\n\n    \n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/InjectorApiCallOptions.html":{"url":"interfaces/InjectorApiCallOptions.html","title":"interface - InjectorApiCallOptions","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  InjectorApiCallOptions\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            libs/ngx-editorjs/src/lib/types/injector.ts\n        \n\n            \n                Description\n            \n            \n                Options to pass when calling the EditorJS instance API\n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        holder\n                                \n                                \n                                        method\n                                \n                                \n                                            Optional\n                                        namespace\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        holder\n                                    \n                                \n                                \n                                    \n                                        holder:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Holder for the EditorJS instance\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        method\n                                    \n                                \n                                \n                                    \n                                        method:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    The method to call\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        namespace\n                                    \n                                \n                                \n                                    \n                                        namespace:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    The optional namespace for the API call\n\n                                \n                            \n                        \n                    \n            \n    \n\n\n    \n        import { InjectionToken } from '@angular/core';\nimport EditorJS, { EditorConfig, OutputData } from '@editorjs/editorjs';\nimport { Block } from './blocks';\n\n/**\n * Configuration for creating an EditorJS instance\n */\nexport interface EditorJSInstanceConfig {\n  /**\n   * The editor configuration, this is required with at least the `holder` property\n   */\n  editorConfig: EditorConfig;\n  /**\n   * The method to call when the editor makes a change\n   */\n  onChange?: (holder?: string) => void;\n\n  /**\n   * The method to call with an editor is ready\n   */\n  onReady?: (holder?: string) => void;\n}\n\n/**\n * Default values for each internal map\n */\nexport const MAP_DEFAULTS = [\n  ['lastChangeMap', { time: 0, blocks: [], version: EditorJS.version }],\n  ['isReadyMap', false],\n  ['hasSavedMap', false]\n];\n\n/**\n * Injection token for the EditorJS class\n */\nexport const EDITORJS_MODULE_IMPORT = new InjectionToken('EDITORJS_MODULE_IMPORT');\n\n/**\n * The EditorJS class injector\n */\nexport const EditorJSInstance = new InjectionToken('EditorJSInstance');\n\n/**\n * Options for a Injector method\n */\nexport interface InjectorMethodOption {\n  /**\n   * The holder for the option\n   */\n  holder: string;\n  /**\n   * Optional blocks\n   */\n  data?: OutputData;\n  /**\n   * Optional editor\n   */\n  editor?: EditorJS;\n  /**\n   * Don't call save\n   */\n  skipSave?: boolean;\n}\n\n/**\n * Options to pass when calling the EditorJS instance API\n */\nexport interface InjectorApiCallOptions {\n  /**\n   * Holder for the EditorJS instance\n   */\n  holder: string;\n\n  /**\n   * The method to call\n   */\n  method: string;\n  /**\n   * The optional namespace for the API call\n   */\n  namespace?: string;\n}\n\n/**\n * A response from the EditorJS api\n */\nexport interface InjectorApiCallResponse extends InjectorApiCallOptions {\n  result: T;\n}\n\n/**\n * Interface for the injected EditorJS class, returns the static\n * class of EditorJS with the version and that creates the instance and provides\n * the Typescript parse with type information\n */\nexport interface EditorJSClass extends Function {\n  new (...args: any[]): T;\n  /**\n   * EditorJS version\n   */\n  version: string;\n}\n\n    \n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/InjectorApiCallResponse.html":{"url":"interfaces/InjectorApiCallResponse.html","title":"interface - InjectorApiCallResponse","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  InjectorApiCallResponse\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            libs/ngx-editorjs/src/lib/types/injector.ts\n        \n\n            \n                Description\n            \n            \n                A response from the EditorJS api\n\n            \n\n            \n                Extends\n            \n            \n                        InjectorApiCallOptions\n            \n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        result\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        result\n                                    \n                                \n                                \n                                    \n                                        result:     T\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     T\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { InjectionToken } from '@angular/core';\nimport EditorJS, { EditorConfig, OutputData } from '@editorjs/editorjs';\nimport { Block } from './blocks';\n\n/**\n * Configuration for creating an EditorJS instance\n */\nexport interface EditorJSInstanceConfig {\n  /**\n   * The editor configuration, this is required with at least the `holder` property\n   */\n  editorConfig: EditorConfig;\n  /**\n   * The method to call when the editor makes a change\n   */\n  onChange?: (holder?: string) => void;\n\n  /**\n   * The method to call with an editor is ready\n   */\n  onReady?: (holder?: string) => void;\n}\n\n/**\n * Default values for each internal map\n */\nexport const MAP_DEFAULTS = [\n  ['lastChangeMap', { time: 0, blocks: [], version: EditorJS.version }],\n  ['isReadyMap', false],\n  ['hasSavedMap', false]\n];\n\n/**\n * Injection token for the EditorJS class\n */\nexport const EDITORJS_MODULE_IMPORT = new InjectionToken('EDITORJS_MODULE_IMPORT');\n\n/**\n * The EditorJS class injector\n */\nexport const EditorJSInstance = new InjectionToken('EditorJSInstance');\n\n/**\n * Options for a Injector method\n */\nexport interface InjectorMethodOption {\n  /**\n   * The holder for the option\n   */\n  holder: string;\n  /**\n   * Optional blocks\n   */\n  data?: OutputData;\n  /**\n   * Optional editor\n   */\n  editor?: EditorJS;\n  /**\n   * Don't call save\n   */\n  skipSave?: boolean;\n}\n\n/**\n * Options to pass when calling the EditorJS instance API\n */\nexport interface InjectorApiCallOptions {\n  /**\n   * Holder for the EditorJS instance\n   */\n  holder: string;\n\n  /**\n   * The method to call\n   */\n  method: string;\n  /**\n   * The optional namespace for the API call\n   */\n  namespace?: string;\n}\n\n/**\n * A response from the EditorJS api\n */\nexport interface InjectorApiCallResponse extends InjectorApiCallOptions {\n  result: T;\n}\n\n/**\n * Interface for the injected EditorJS class, returns the static\n * class of EditorJS with the version and that creates the instance and provides\n * the Typescript parse with type information\n */\nexport interface EditorJSClass extends Function {\n  new (...args: any[]): T;\n  /**\n   * EditorJS version\n   */\n  version: string;\n}\n\n    \n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/InjectorMethodOption.html":{"url":"interfaces/InjectorMethodOption.html","title":"interface - InjectorMethodOption","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  InjectorMethodOption\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            libs/ngx-editorjs/src/lib/types/injector.ts\n        \n\n            \n                Description\n            \n            \n                Options for a Injector method\n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                            Optional\n                                        data\n                                \n                                \n                                            Optional\n                                        editor\n                                \n                                \n                                        holder\n                                \n                                \n                                            Optional\n                                        skipSave\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        data\n                                    \n                                \n                                \n                                    \n                                        data:     OutputData\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     OutputData\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    Optional blocks\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        editor\n                                    \n                                \n                                \n                                    \n                                        editor:     EditorJS\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     EditorJS\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    Optional editor\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        holder\n                                    \n                                \n                                \n                                    \n                                        holder:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    The holder for the option\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        skipSave\n                                    \n                                \n                                \n                                    \n                                        skipSave:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    Don't call save\n\n                                \n                            \n                        \n                    \n            \n    \n\n\n    \n        import { InjectionToken } from '@angular/core';\nimport EditorJS, { EditorConfig, OutputData } from '@editorjs/editorjs';\nimport { Block } from './blocks';\n\n/**\n * Configuration for creating an EditorJS instance\n */\nexport interface EditorJSInstanceConfig {\n  /**\n   * The editor configuration, this is required with at least the `holder` property\n   */\n  editorConfig: EditorConfig;\n  /**\n   * The method to call when the editor makes a change\n   */\n  onChange?: (holder?: string) => void;\n\n  /**\n   * The method to call with an editor is ready\n   */\n  onReady?: (holder?: string) => void;\n}\n\n/**\n * Default values for each internal map\n */\nexport const MAP_DEFAULTS = [\n  ['lastChangeMap', { time: 0, blocks: [], version: EditorJS.version }],\n  ['isReadyMap', false],\n  ['hasSavedMap', false]\n];\n\n/**\n * Injection token for the EditorJS class\n */\nexport const EDITORJS_MODULE_IMPORT = new InjectionToken('EDITORJS_MODULE_IMPORT');\n\n/**\n * The EditorJS class injector\n */\nexport const EditorJSInstance = new InjectionToken('EditorJSInstance');\n\n/**\n * Options for a Injector method\n */\nexport interface InjectorMethodOption {\n  /**\n   * The holder for the option\n   */\n  holder: string;\n  /**\n   * Optional blocks\n   */\n  data?: OutputData;\n  /**\n   * Optional editor\n   */\n  editor?: EditorJS;\n  /**\n   * Don't call save\n   */\n  skipSave?: boolean;\n}\n\n/**\n * Options to pass when calling the EditorJS instance API\n */\nexport interface InjectorApiCallOptions {\n  /**\n   * Holder for the EditorJS instance\n   */\n  holder: string;\n\n  /**\n   * The method to call\n   */\n  method: string;\n  /**\n   * The optional namespace for the API call\n   */\n  namespace?: string;\n}\n\n/**\n * A response from the EditorJS api\n */\nexport interface InjectorApiCallResponse extends InjectorApiCallOptions {\n  result: T;\n}\n\n/**\n * Interface for the injected EditorJS class, returns the static\n * class of EditorJS with the version and that creates the instance and provides\n * the Typescript parse with type information\n */\nexport interface EditorJSClass extends Function {\n  new (...args: any[]): T;\n  /**\n   * EditorJS version\n   */\n  version: string;\n}\n\n    \n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/List.html":{"url":"interfaces/List.html","title":"interface - List","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  List\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            libs/ngx-editorjs/src/lib/types/blocks.ts\n        \n\n            \n                Description\n            \n            \n                Default data type for a list block\n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        items\n                                \n                                \n                                        style\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        items\n                                    \n                                \n                                \n                                    \n                                        items:     T[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     T[]\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    List items of type T\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        style\n                                    \n                                \n                                \n                                    \n                                        style:         ListStyle\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         ListStyle\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    The list style\n\n                                \n                            \n                        \n                    \n            \n    \n\n\n    \n        export interface Block {\n  /**\n   * The EditorJS block type\n   */\n  type: string;\n\n  /**\n   * The data interface for the block type\n   */\n  data: T;\n\n  /**\n   * Additional properties on the type\n   */\n  [key: string]: any;\n}\n\n/**\n * Available list styles, supports `ordered` and `unordered`.\n * A custom string can also be added\n */\nexport type ListStyle = 'ordered' | 'unordered' | string;\n\n/**\n * Default data type for a list block\n */\nexport interface List {\n  /**\n   * The list style\n   */\n  style: ListStyle;\n  /**\n   * List items of type T\n   */\n  items: T[];\n}\n\n/**\n * The default list block is provided by the EditorJS list plugin\n */\nexport interface ListBlock extends Block> {\n  /**\n   * The EditorJS block type\n   */\n  type: 'list';\n}\n\n/**\n * Default data type for a paragraph block\n */\ninterface Paragraph {\n  /**\n   * The paragraph text\n   */\n  text: string;\n}\n\n/**\n * Interface for a paragraph block\n */\nexport interface ParagraphBlock extends Block {\n  /**\n   * The EditorJS block type\n   */\n  type: 'paragraph';\n}\n\n/**\n * Default data type for a header block\n */\ninterface Header {\n  /**\n   * The header text\n   */\n  text: string;\n  /**\n   * The header level from 1-6\n   */\n  level: number;\n}\n\n/**\n * Interface for a header block\n */\nexport interface HeaderBlock extends Block {\n  /**\n   * The EditorJS block type\n   */\n  type: 'header';\n}\n\n/**\n * Default data type for a header block\n */\nexport interface Image {\n  /**\n   * The image URL\n   */\n  url: string;\n  /**\n   * Optional image caption\n   */\n  caption?: string;\n  /**\n   * Optional border property\n   */\n  withBorder?: boolean;\n\n  /**\n   * Optional background property\n   */\n  withBackground?: boolean;\n\n  /**\n   * Optional stretch property\n   */\n  stretched?: boolean;\n}\n\n/**\n * Interface for a image block\n */\nexport interface ImageBlock extends Block {\n  /**\n   * The EditorJS block type\n   */\n  type: 'image';\n}\n\n/**\n * Type of all the basic block type\n */\nexport type BlockTypes = ParagraphBlock | HeaderBlock | ImageBlock | ListBlock | Block;\n\n    \n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/ListBlock.html":{"url":"interfaces/ListBlock.html","title":"interface - ListBlock","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  ListBlock\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            libs/ngx-editorjs/src/lib/types/blocks.ts\n        \n\n            \n                Description\n            \n            \n                The default list block is provided by the EditorJS list plugin\n\n            \n\n            \n                Extends\n            \n            \n                        Block\n            \n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        type\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        type\n                                    \n                                \n                                \n                                    \n                                        type:     \n\n                                    \n                                \n\n\n\n\n\n\n\n                            \n                                \n                                    The EditorJS block type\n\n                                \n                            \n                        \n                    \n            \n    \n\n\n    \n        export interface Block {\n  /**\n   * The EditorJS block type\n   */\n  type: string;\n\n  /**\n   * The data interface for the block type\n   */\n  data: T;\n\n  /**\n   * Additional properties on the type\n   */\n  [key: string]: any;\n}\n\n/**\n * Available list styles, supports `ordered` and `unordered`.\n * A custom string can also be added\n */\nexport type ListStyle = 'ordered' | 'unordered' | string;\n\n/**\n * Default data type for a list block\n */\nexport interface List {\n  /**\n   * The list style\n   */\n  style: ListStyle;\n  /**\n   * List items of type T\n   */\n  items: T[];\n}\n\n/**\n * The default list block is provided by the EditorJS list plugin\n */\nexport interface ListBlock extends Block> {\n  /**\n   * The EditorJS block type\n   */\n  type: 'list';\n}\n\n/**\n * Default data type for a paragraph block\n */\ninterface Paragraph {\n  /**\n   * The paragraph text\n   */\n  text: string;\n}\n\n/**\n * Interface for a paragraph block\n */\nexport interface ParagraphBlock extends Block {\n  /**\n   * The EditorJS block type\n   */\n  type: 'paragraph';\n}\n\n/**\n * Default data type for a header block\n */\ninterface Header {\n  /**\n   * The header text\n   */\n  text: string;\n  /**\n   * The header level from 1-6\n   */\n  level: number;\n}\n\n/**\n * Interface for a header block\n */\nexport interface HeaderBlock extends Block {\n  /**\n   * The EditorJS block type\n   */\n  type: 'header';\n}\n\n/**\n * Default data type for a header block\n */\nexport interface Image {\n  /**\n   * The image URL\n   */\n  url: string;\n  /**\n   * Optional image caption\n   */\n  caption?: string;\n  /**\n   * Optional border property\n   */\n  withBorder?: boolean;\n\n  /**\n   * Optional background property\n   */\n  withBackground?: boolean;\n\n  /**\n   * Optional stretch property\n   */\n  stretched?: boolean;\n}\n\n/**\n * Interface for a image block\n */\nexport interface ImageBlock extends Block {\n  /**\n   * The EditorJS block type\n   */\n  type: 'image';\n}\n\n/**\n * Type of all the basic block type\n */\nexport type BlockTypes = ParagraphBlock | HeaderBlock | ImageBlock | ListBlock | Block;\n\n    \n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/NgxEditorJSConfig.html":{"url":"interfaces/NgxEditorJSConfig.html","title":"interface - NgxEditorJSConfig","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  NgxEditorJSConfig\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            libs/ngx-editorjs/src/lib/types/config.ts\n        \n\n            \n                Description\n            \n            \n                Configuration for the EditorJS instance\n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                            Optional\n                                        autofocus\n                                \n                                \n                                            Optional\n                                        blockPlaceholder\n                                \n                                \n                                            Optional\n                                        data\n                                \n                                \n                                            Optional\n                                        hideToolbar\n                                \n                                \n                                            Optional\n                                        holder\n                                \n                                \n                                            Optional\n                                        initialBlock\n                                \n                                \n                                            Optional\n                                        minHeight\n                                \n                                \n                                            Optional\n                                        sanitizer\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        autofocus\n                                    \n                                \n                                \n                                    \n                                        autofocus:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    If the EditorJS is autofocused on creation (default: false)\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        blockPlaceholder\n                                    \n                                \n                                \n                                    \n                                        blockPlaceholder:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    First Block placeholder\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        data\n                                    \n                                \n                                \n                                    \n                                        data:     OutputData\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     OutputData\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    Any initial output data to render\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        hideToolbar\n                                    \n                                \n                                \n                                    \n                                        hideToolbar:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    If true, toolbar won't be shown\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        holder\n                                    \n                                \n                                \n                                    \n                                        holder:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    ID of the element to hold the config\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        initialBlock\n                                    \n                                \n                                \n                                    \n                                        initialBlock:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    The name of the initial block (default \"paragraph\")\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        minHeight\n                                    \n                                \n                                \n                                    \n                                        minHeight:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    Height of Editor's bottom area that allows to set focus on the last Block\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        sanitizer\n                                    \n                                \n                                \n                                    \n                                        sanitizer:     SanitizerConfig\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     SanitizerConfig\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    Define default sanitizer configuration\n\n                                \n                            \n                        \n                    \n            \n    \n\n\n    \n        import { InjectionToken } from '@angular/core';\nimport EditorJS, { OutputData, SanitizerConfig, EditorConfig } from '@editorjs/editorjs';\n\n/**\n * Configuration for the EditorJS instance\n */\nexport interface NgxEditorJSConfig {\n  /**\n   * If the EditorJS is autofocused on creation (default: false)\n   */\n  autofocus?: boolean;\n\n  /**\n   * Any initial output data to render\n   */\n  data?: OutputData;\n\n  /**\n   * If true, toolbar won't be shown\n   */\n  hideToolbar?: boolean;\n\n  /**\n   * ID of the element to hold the config\n   */\n  holder?: string;\n\n  /**\n   * The name of the initial block (default \"paragraph\")\n   */\n  initialBlock?: string;\n\n  /**\n   * Height of Editor's bottom area that allows to set focus on the last Block\n   */\n  minHeight?: number;\n\n  /**\n   * First Block placeholder\n   */\n  blockPlaceholder?: string;\n\n  /**\n   * Define default sanitizer configuration\n   */\n  sanitizer?: SanitizerConfig;\n}\n\n/**\n * The configuration option that can be passed to the `NgxEditorJSModule.forRoot` method\n */\nexport interface NgxEditorJSModuleConfig {\n  /**\n   * Configuration options for EditorJS\n   */\n  editorjs?: EditorConfig;\n}\n\n/**\n * Injection token provied for `NgxEditorJSConfig`\n */\nexport const NGX_EDITORJS_CONFIG = new InjectionToken('NGX_EDITORJS_CONFIG');\n\n/**\n * Internal token for injecting the `NgxEditorJSConfig` into the config factory\n */\nexport const FOR_ROOT_OPTIONS_TOKEN = new InjectionToken('FOR_ROOT_OPTIONS_TOKEN');\n\n/**\n * Get the EditorJS instance injected into the app\n */\nexport const EDITIOR_JS_INSTANCE = new InjectionToken('EDITIOR_JS_INSTANCE');\n\n    \n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"directives/NgxEditorJSDirective.html":{"url":"directives/NgxEditorJSDirective.html","title":"directive - NgxEditorJSDirective","body":"\n                   \n\n\n\n\n\n\n\n  Directives\n  NgxEditorJSDirective\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            libs/ngx-editorjs/src/lib/directives/ngx-editorjs.directive.ts\n        \n\n            \n                Description\n            \n            \n                The main directive of ngx-editorjs provides a way to attach\nan EditorJS instance to any element and control it via\nAngular services and components\nTo use attach to any element with an id property\n\n            \n\n            \n                Implements\n            \n            \n                            OnDestroy\n                            OnChanges\n                            AfterContentInit\n            \n\n            \n                Example\n            \n            \n                        \n                            \n                        \n            \n\n        \n            Metadata\n            \n                \n\n                    \n                        Selector\n                        [ngxEditorJS]\n                    \n\n                \n            \n        \n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                    Async\n                                createEditor\n                            \n                            \n                                    Async\n                                ngAfterContentInit\n                            \n                            \n                                    Async\n                                ngOnChanges\n                            \n                            \n                                ngOnDestroy\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                autofocus\n                            \n                            \n                                autosave\n                            \n                            \n                                blockPlaceholder\n                            \n                            \n                                blocks\n                            \n                            \n                                excludeTools\n                            \n                            \n                                hideToolbar\n                            \n                            \n                                holder\n                            \n                            \n                                initialBlock\n                            \n                            \n                                minHeight\n                            \n                            \n                                sanitizer\n                            \n                        \n                    \n                \n\n                \n                    \n                        Outputs\n                    \n                \n                \n                    \n                        \n                            \n                                hasChanged\n                            \n                            \n                                hasSaved\n                            \n                            \n                                isFocused\n                            \n                            \n                                isReady\n                            \n                            \n                                isTouched\n                            \n                        \n                    \n                \n\n\n                \n                    \n                        HostListeners\n                    \n                \n                \n                    \n                        \n                            \n                                click\n                            \n                        \n                    \n                \n\n                    \n                        \n                            Accessors\n                        \n                    \n                    \n                        \n                            \n                                \n                                    editor\n                                \n                                \n                                    element\n                                \n                                \n                                    service\n                                \n                                \n                                    touched\n                                \n                            \n                        \n                    \n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(el: ElementRef, editorService: NgxEditorJSService, cd: ChangeDetectorRef)\n                    \n                \n                        \n                            \n                                Defined in libs/ngx-editorjs/src/lib/directives/ngx-editorjs.directive.ts:152\n                            \n                        \n\n                \n                    \n                            Creates the directive instance\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        el\n                                                  \n                                                        \n                                                                        ElementRef\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                The element the directive is attached to\n\n                                                        \n                                                \n                                                \n                                                        editorService\n                                                  \n                                                        \n                                                                        NgxEditorJSService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                The editor service\n\n                                                        \n                                                \n                                                \n                                                        cd\n                                                  \n                                                        \n                                                                        ChangeDetectorRef\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    Inputs\n        \n            \n                \n                    \n                        \n                        autofocus\n                    \n                \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                        \n                            \n                                    Defined in libs/ngx-editorjs/src/lib/directives/ngx-editorjs.directive.ts:53\n                            \n                        \n                \n                    \n                        Boolean, If set to true the EditorJS instance gets autofocus when initialized\n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        autosave\n                    \n                \n                \n                    \n                        Type :         number\n\n                    \n                \n                        \n                            \n                                    Defined in libs/ngx-editorjs/src/lib/directives/ngx-editorjs.directive.ts:106\n                            \n                        \n                \n                    \n                        Number, Used with Angular Forms this sets an autosave timer active that calls the EditorJS save\nmethod. This patches the FormControl value with every block change and focus and blur, it also autosaves after\na set time\nSet to 0 to disable or pass a value in ms of the autosave time\n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        blockPlaceholder\n                    \n                \n                \n                    \n                        Type :         string\n\n                    \n                \n                        \n                            \n                                    Defined in libs/ngx-editorjs/src/lib/directives/ngx-editorjs.directive.ts:84\n                            \n                        \n                \n                    \n                        String, The text to display as the placeholder text in the first block before content is added\n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        blocks\n                    \n                \n                \n                    \n                        Type :         Block[]\n\n                    \n                \n                        \n                            \n                                    Defined in libs/ngx-editorjs/src/lib/directives/ngx-editorjs.directive.ts:112\n                            \n                        \n                \n                    \n                        Blocks, An initial set of block data to render inside the component\n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        excludeTools\n                    \n                \n                \n                    \n                        Type :     string[]\n\n                    \n                \n                \n                    \n                        Default value : []\n                    \n                \n                        \n                            \n                                    Defined in libs/ngx-editorjs/src/lib/directives/ngx-editorjs.directive.ts:97\n                            \n                        \n                \n                    \n                        String Array, If empty all tools available via the plugin service will be added.  If a string\narray is set only the tools with the provided keys will be added\n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        hideToolbar\n                    \n                \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                        \n                            \n                                    Defined in libs/ngx-editorjs/src/lib/directives/ngx-editorjs.directive.ts:59\n                            \n                        \n                \n                    \n                        Boolean, If set to true the toolbar will not show in the EditorJS instance\n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        holder\n                    \n                \n                \n                    \n                        Type :         string\n\n                    \n                \n                        \n                            \n                                    Defined in libs/ngx-editorjs/src/lib/directives/ngx-editorjs.directive.ts:65\n                            \n                        \n                \n                    \n                        String, the ID property of the element that the EditorJS instance will be attached to\n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        initialBlock\n                    \n                \n                \n                    \n                        Type :         string\n\n                    \n                \n                        \n                            \n                                    Defined in libs/ngx-editorjs/src/lib/directives/ngx-editorjs.directive.ts:72\n                            \n                        \n                \n                    \n                        String, The type of block to set as the initial block type. This needs to match a name in the UserPlugins object.\nThe default value is \"paragraph\"\n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        minHeight\n                    \n                \n                \n                    \n                        Type :         number\n\n                    \n                \n                        \n                            \n                                    Defined in libs/ngx-editorjs/src/lib/directives/ngx-editorjs.directive.ts:78\n                            \n                        \n                \n                    \n                        Number, The minimum height of the EditorJS instance bottom after the last block\n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        sanitizer\n                    \n                \n                \n                    \n                        Type :     SanitizerConfig\n\n                    \n                \n                        \n                            \n                                    Defined in libs/ngx-editorjs/src/lib/directives/ngx-editorjs.directive.ts:90\n                            \n                        \n                \n                    \n                        SanitizerConfig, The configuration for the HTML sanitizer\n\n                    \n                \n            \n        \n\n            \n    Outputs\n        \n            \n                \n                    \n                        \n                        hasChanged\n                    \n                \n                \n                    \n                        Type :         EventEmitter\n\n                    \n                \n                        \n                            \n                                    Defined in libs/ngx-editorjs/src/lib/directives/ngx-editorjs.directive.ts:136\n                            \n                        \n                \n                    \n                        Emits if the EditorJS content has changed when save is called\n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        hasSaved\n                    \n                \n                \n                    \n                        Type :         EventEmitter\n\n                    \n                \n                        \n                            \n                                    Defined in libs/ngx-editorjs/src/lib/directives/ngx-editorjs.directive.ts:118\n                            \n                        \n                \n                    \n                        Emits if the content from the EditorJS instance has been saved to the component value\n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        isFocused\n                    \n                \n                \n                    \n                        Type :         EventEmitter\n\n                    \n                \n                        \n                            \n                                    Defined in libs/ngx-editorjs/src/lib/directives/ngx-editorjs.directive.ts:130\n                            \n                        \n                \n                    \n                        Emits if the component is focused\n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        isReady\n                    \n                \n                \n                    \n                        Type :         EventEmitter\n\n                    \n                \n                        \n                            \n                                    Defined in libs/ngx-editorjs/src/lib/directives/ngx-editorjs.directive.ts:142\n                            \n                        \n                \n                    \n                        Emits if the EditorJS component is ready\n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        isTouched\n                    \n                \n                \n                    \n                        Type :         EventEmitter\n\n                    \n                \n                        \n                            \n                                    Defined in libs/ngx-editorjs/src/lib/directives/ngx-editorjs.directive.ts:124\n                            \n                        \n                \n                    \n                        Emits if the component has been touched\n\n                    \n                \n            \n        \n\n\n            \n    HostListeners    \n        \n            \n                \n                    \n                    \n                        \n                            click\n                        \n                        \n                    \n                \n            \n            \n                \nclick()\n                \n            \n\n\n            \n                \n                    Defined in libs/ngx-editorjs/src/lib/directives/ngx-editorjs.directive.ts:148\n                \n            \n\n\n            \n                \n                    Host click listener\n\n\n                \n            \n        \n    \n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            Async\n                            createEditor\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    createEditor(config?: EditorConfig, excludeTools: [])\n                \n            \n\n\n            \n                \n                    Defined in libs/ngx-editorjs/src/lib/directives/ngx-editorjs.directive.ts:198\n                \n            \n\n\n            \n                \n                    Creates an EditorJS instance for this directive\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Default value\n                                    Description\n                                \n                            \n                            \n                                \n                                    config\n                                    \n                                            EditorConfig\n                                    \n\n                                    \n                                        Yes\n                                    \n\n                                    \n                                    \n\n                                    \n                                        Configuration for this instance\n\n                                    \n                                \n                                \n                                    excludeTools\n                                    \n                                            []\n                                    \n\n                                    \n                                        No\n                                    \n\n                                    \n                                        []\n                                    \n\n                                    \n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            ngAfterContentInit\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    ngAfterContentInit()\n                \n            \n\n\n            \n                \n                    Defined in libs/ngx-editorjs/src/lib/directives/ngx-editorjs.directive.ts:252\n                \n            \n\n\n            \n                \n                    After content is created, we create the editor instance and set up listners\n\n\n                    \n                        Returns :         any\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            ngOnChanges\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    ngOnChanges(changes: SimpleChanges)\n                \n            \n\n\n            \n                \n                    Defined in libs/ngx-editorjs/src/lib/directives/ngx-editorjs.directive.ts:215\n                \n            \n\n\n            \n                \n                    When ngOnChanges are called, there are two paths\nIf it's just blocks, then the service is updated with the blocks\nIf it's any other property it means we create a new editor, as this\nis a destructive process we also need to wait for an existing editor\nto be ready\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    changes\n                                    \n                                                SimpleChanges\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        Changes on the component\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngOnDestroy\n                        \n                        \n                    \n                \n            \n            \n                \nngOnDestroy()\n                \n            \n\n\n            \n                \n                    Defined in libs/ngx-editorjs/src/lib/directives/ngx-editorjs.directive.ts:285\n                \n            \n\n\n            \n                \n                    Destroy the editor and subjects for this service\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n\n            \n    \n        Accessors\n    \n        \n            \n                \n                    \n                        \n                        editor\n                    \n                \n\n                \n                    \n                        geteditor()\n                    \n                \n                            \n                                \n                                    Defined in libs/ngx-editorjs/src/lib/directives/ngx-editorjs.directive.ts:168\n                                \n                            \n                    \n                        \n                                Get the EditorJS instance for this directive\n\n\n                                \n                                    Returns :     Observable\n\n                                \n                        \n                    \n\n            \n        \n        \n            \n                \n                    \n                        \n                        element\n                    \n                \n\n                \n                    \n                        getelement()\n                    \n                \n                            \n                                \n                                    Defined in libs/ngx-editorjs/src/lib/directives/ngx-editorjs.directive.ts:175\n                                \n                            \n                    \n                        \n                                Get the element for the directive\n\n\n                        \n                    \n\n            \n        \n        \n            \n                \n                    \n                        \n                        service\n                    \n                \n\n                \n                    \n                        getservice()\n                    \n                \n                            \n                                \n                                    Defined in libs/ngx-editorjs/src/lib/directives/ngx-editorjs.directive.ts:182\n                                \n                            \n                    \n                        \n                                Get the NgxEditorJSService for this directive\n\n\n                                \n                                    Returns :         NgxEditorJSService\n\n                                \n                        \n                    \n\n            \n        \n        \n            \n                \n                    \n                        \n                        touched\n                    \n                \n\n                \n                    \n                        gettouched()\n                    \n                \n                            \n                                \n                                    Defined in libs/ngx-editorjs/src/lib/directives/ngx-editorjs.directive.ts:189\n                                \n                            \n                    \n                        \n                                Get the touched state\n\n\n                        \n                    \n\n            \n        \n\n\n    \n\n\n    \n        import {\n  AfterContentInit,\n  ChangeDetectorRef,\n  Directive,\n  ElementRef,\n  EventEmitter,\n  HostListener,\n  Input,\n  OnChanges,\n  OnDestroy,\n  Output,\n  SimpleChanges\n} from '@angular/core';\nimport EditorJS, { EditorConfig, OutputData, SanitizerConfig } from '@editorjs/editorjs';\nimport { BehaviorSubject, Observable, Subject } from 'rxjs';\nimport { takeUntil } from 'rxjs/operators';\nimport { createEditorJSConfig } from '../config/editor-config';\nimport { NgxEditorJSService } from '../services/editorjs.service';\nimport { Block } from '../types/blocks';\n\n/**\n * The main directive of `ngx-editorjs` provides a way to attach\n * an EditorJS instance to any element and control it via\n * Angular services and components\n *\n * To use attach to any element with an `id` property\n *\n * @example\n * \n */\n@Directive({\n  selector: '[ngxEditorJS]'\n})\nexport class NgxEditorJSDirective implements OnDestroy, OnChanges, AfterContentInit {\n  /**\n   * On Destroyed subject\n   */\n  private readonly onDestroy$ = new Subject();\n  /**\n   * Form touched state\n   */\n  private touched$ = new BehaviorSubject(false);\n\n  /**\n   * The DOM element ID, it will use the Directive DOM element ID or falls back to the provided `holder` property\n   */\n  private id: string;\n\n  /**\n   * Boolean, If set to true the EditorJS instance gets autofocus when initialized\n   */\n  @Input()\n  public autofocus: boolean;\n\n  /**\n   * Boolean, If set to true the toolbar will not show in the EditorJS instance\n   */\n  @Input()\n  public hideToolbar: boolean;\n\n  /**\n   * String, the ID property of the element that the EditorJS instance will be attached to\n   */\n  @Input()\n  public holder: string;\n\n  /**\n   * String, The type of block to set as the initial block type. This needs to match a name in the `UserPlugins` object.\n   * The default value is \"paragraph\"\n   */\n  @Input()\n  public initialBlock?: string;\n\n  /**\n   * Number, The minimum height of the EditorJS instance bottom after the last block\n   */\n  @Input()\n  public minHeight: number;\n\n  /**\n   * String, The text to display as the placeholder text in the first block before content is added\n   */\n  @Input()\n  public blockPlaceholder: string;\n\n  /**\n   * SanitizerConfig, The configuration for the HTML sanitizer\n   */\n  @Input()\n  public sanitizer: SanitizerConfig;\n\n  /**\n   * String Array, If empty all tools available via the plugin service will be added.  If a string\n   * array is set only the tools with the provided keys will be added\n   */\n  @Input()\n  public excludeTools: string[] = [];\n\n  /**\n   * Number, Used with Angular Forms this sets an autosave timer active that calls the EditorJS save\n   * method. This patches the `FormControl` value with every block change and focus and blur, it also autosaves after\n   * a set time\n   * Set to 0 to disable or pass a value in `ms` of the autosave time\n   */\n  @Input()\n  public autosave: number;\n\n  /**\n   * Blocks, An initial set of block data to render inside the component\n   */\n  @Input()\n  public blocks: Block[];\n\n  /**\n   * Emits if the content from the EditorJS instance has been saved to the component value\n   */\n  @Output()\n  public hasSaved = new EventEmitter();\n\n  /**\n   * Emits if the component has been touched\n   */\n  @Output()\n  public isTouched = new EventEmitter();\n\n  /**\n   * Emits if the component is focused\n   */\n  @Output()\n  public isFocused = new EventEmitter();\n\n  /**\n   * Emits if the EditorJS content has changed when `save` is called\n   */\n  @Output()\n  public hasChanged = new EventEmitter();\n\n  /**\n   * Emits if the EditorJS component is ready\n   */\n  @Output()\n  public isReady = new EventEmitter();\n\n  /**\n   * Host click listener\n   */\n  @HostListener('click')\n  onclick() {\n    this.touched$.next(true);\n    this.isTouched.emit(true);\n    this.cd.markForCheck();\n  }\n\n  /**\n   * Creates the directive instance\n   * @param el The element the directive is attached to\n   * @param editorService The editor service\n   */\n  constructor(\n    protected readonly el: ElementRef,\n    protected readonly editorService: NgxEditorJSService,\n    protected readonly cd: ChangeDetectorRef\n  ) {}\n\n  /**\n   * Get the EditorJS instance for this directive\n   */\n  public get editor(): Observable {\n    return this.service.getEditor({ holder: this.id });\n  }\n\n  /**\n   * Get the element for the directive\n   */\n  public get element() {\n    return this.el.nativeElement;\n  }\n\n  /**\n   * Get the `NgxEditorJSService` for this directive\n   */\n  public get service(): NgxEditorJSService {\n    return this.editorService;\n  }\n\n  /**\n   * Get the touched state\n   */\n  public get touched() {\n    return this.touched$.asObservable();\n  }\n\n  /**\n   * Creates an EditorJS instance for this directive\n   * @param config Configuration for this instance\n   * @param excludeTools\n   */\n  public async createEditor(config?: EditorConfig, excludeTools = []): Promise {\n    await this.service.createInstance({\n      config,\n      excludeTools: this.excludeTools || excludeTools,\n      autoSave: this.autosave || 0\n    });\n    this.cd.markForCheck();\n  }\n\n  /**\n   * When ngOnChanges are called, there are two paths\n   * If it's just blocks, then the service is updated with the blocks\n   * If it's any other property it means we create a new editor, as this\n   * is a destructive process we also need to wait for an existing editor\n   * to be ready\n   * @param changes Changes on the component\n   */\n  async ngOnChanges(changes: SimpleChanges): Promise {\n    if (\n      changes.blocks &&\n      changes.blocks.previousValue !== null &&\n      !changes.blocks.firstChange &&\n      JSON.stringify(changes.blocks.previousValue) !== JSON.stringify(changes.blocks.currentValue)\n    ) {\n      this.service.update({ holder: this.holder }).subscribe();\n      this.cd.markForCheck();\n    } else {\n      const changesKeys = Object.keys(changes);\n      if (\n        this.id &&\n        // Ignore changes for values not related to EditorJS\n        [\n          'autofocus',\n          'holder',\n          'hideToolbar',\n          'initialBlock',\n          'minHeight',\n          'blockPlaceholder',\n          'sanitizer',\n          'includeTools'\n        ].find(key => {\n          return changesKeys.includes(key);\n        })\n      ) {\n        await this.createEditor(this.createConfig());\n        this.cd.markForCheck();\n      }\n    }\n\n  }\n\n  /**\n   * After content is created, we create the editor instance and set up listners\n   */\n  async ngAfterContentInit() {\n    this.id = this.el.nativeElement.id || this.holder;\n\n    if (!this.id) {\n      throw new Error('Error in NgxEditorJSDirective::ngAfterContentInit - Directive element has no ID');\n    }\n    await this.createEditor(this.createConfig());\n\n    this.service\n      .isReady({ holder: this.holder })\n      .pipe(takeUntil(this.onDestroy$))\n      .subscribe(isReady => {\n        this.isReady.emit(isReady);\n      });\n\n    this.service\n      .lastChange({ holder: this.holder })\n      .pipe(takeUntil(this.onDestroy$))\n      .subscribe(change => {\n        this.hasChanged.emit(change);\n      });\n\n    this.service\n      .hasSaved({ holder: this.holder })\n      .pipe(takeUntil(this.onDestroy$))\n      .subscribe(saved => {\n        this.hasSaved.next(saved);\n      });\n  }\n\n  /**\n   * Destroy the editor and subjects for this service\n   */\n  ngOnDestroy() {\n    this.onDestroy$.next(true);\n    this.onDestroy$.complete();\n    this.service.destroyInstance({ holder: this.id });\n  }\n\n  /**\n   * Create a configuration for EditorJS\n   */\n  private createConfig(): EditorConfig {\n    const config: EditorConfig = createEditorJSConfig({\n      holder: this.id,\n      autofocus: this.autofocus,\n      hideToolbar: this.hideToolbar,\n      initialBlock: this.initialBlock,\n      placeholder: this.blockPlaceholder,\n      minHeight: this.minHeight,\n      sanitizer: this.sanitizer\n    });\n    if (this.blocks && this.blocks.length > 0) {\n      config.data = {\n        time: Date.now(),\n        version: EditorJS.version,\n        blocks: this.blocks\n      };\n    }\n    return config;\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/NgxEditorJSModule.html":{"url":"modules/NgxEditorJSModule.html","title":"module - NgxEditorJSModule","body":"\n                   \n\n\n\n\n    Modules\n    NgxEditorJSModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_NgxEditorJSModule\n\n\n\ncluster_NgxEditorJSModule_declarations\n\n\n\ncluster_NgxEditorJSModule_imports\n\n\n\ncluster_NgxEditorJSModule_exports\n\n\n\ncluster_NgxEditorJSModule_providers\n\n\n\n\nNgxEditorJSComponent\n\nNgxEditorJSComponent\n\n\n\nNgxEditorJSModule\n\nNgxEditorJSModule\n\nNgxEditorJSModule -->\n\nNgxEditorJSComponent->NgxEditorJSModule\n\n\n\n\n\nNgxEditorJSDirective\n\nNgxEditorJSDirective\n\nNgxEditorJSModule -->\n\nNgxEditorJSDirective->NgxEditorJSModule\n\n\n\n\n\nNgxEditorJSMatFieldComponent\n\nNgxEditorJSMatFieldComponent\n\nNgxEditorJSModule -->\n\nNgxEditorJSMatFieldComponent->NgxEditorJSModule\n\n\n\n\n\nNgxEditorJSComponent \n\nNgxEditorJSComponent \n\nNgxEditorJSComponent  -->\n\nNgxEditorJSModule->NgxEditorJSComponent \n\n\n\n\n\nNgxEditorJSDirective \n\nNgxEditorJSDirective \n\nNgxEditorJSDirective  -->\n\nNgxEditorJSModule->NgxEditorJSDirective \n\n\n\n\n\nNgxEditorJSMatFieldComponent \n\nNgxEditorJSMatFieldComponent \n\nNgxEditorJSMatFieldComponent  -->\n\nNgxEditorJSModule->NgxEditorJSMatFieldComponent \n\n\n\n\n\nNgxEditorjsPluginsModule\n\nNgxEditorjsPluginsModule\n\nNgxEditorJSModule -->\n\nNgxEditorjsPluginsModule->NgxEditorJSModule\n\n\n\n\n\nNgxEditorJSService\n\nNgxEditorJSService\n\nNgxEditorJSModule -->\n\nNgxEditorJSService->NgxEditorJSModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            libs/ngx-editorjs/src/lib/ngx-editorjs.module.ts\n        \n\n\n        \n            Description\n        \n        \n            The @tinynodes/ngx-editorjs module provides a collection of demos to allow\nany Angular app to use and control an EditorJS instance\nTo use import the module NgxEditorJSModule.forRoot() into the root of your application.\nThe forRoot method takes an optional NgxEditorJSModuleConfig config, this will provide a\ndefault instance.\n\n        \n\n\n        \n            \n                \n                    Declarations\n                    \n                        \n                            NgxEditorJSComponent\n                        \n                        \n                            NgxEditorJSDirective\n                        \n                        \n                            NgxEditorJSMatFieldComponent\n                        \n                    \n                \n                \n                    Providers\n                    \n                        \n                            NgxEditorJSService\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            NgxEditorjsPluginsModule\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            NgxEditorJSComponent\n                        \n                        \n                            NgxEditorJSDirective\n                        \n                        \n                            NgxEditorJSMatFieldComponent\n                        \n                    \n                \n            \n        \n\n        \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Static\n                            forRoot\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    forRoot(config?: NgxEditorJSModuleConfig)\n                \n            \n\n\n            \n                \n                    Defined in libs/ngx-editorjs/src/lib/ngx-editorjs.module.ts:60\n                \n            \n\n\n            \n                \n                    Use this method in the root of the application.  You can pass an optional configuration\nwhich sets some defaults, or use the provided defaults.\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    config\n                                    \n                                                NgxEditorJSModuleConfig\n                                    \n\n                                    \n                                        Yes\n                                    \n\n\n                                    \n                                        The optional configuration to pass\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         ModuleWithProviders\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n    \n\n\n    \n        import { CommonModule } from '@angular/common';\nimport { ModuleWithProviders, NgModule, Optional, SkipSelf } from '@angular/core';\nimport { FormsModule } from '@angular/forms';\nimport { MatFormFieldModule } from '@angular/material/form-field';\nimport { MatInputModule } from '@angular/material/input';\nimport EditorJS from '@editorjs/editorjs';\nimport { createModuleConfig } from './config/module-config';\nimport { NgxEditorJSMatFieldComponent } from './containers/editorjs-mat-field/editorjs-mat-field.component';\nimport { NgxEditorJSComponent } from './containers/editorjs/editorjs.component';\nimport { NgxEditorJSDirective } from './directives/ngx-editorjs.directive';\nimport { NgxEditorJSService } from './services/editorjs.service';\nimport { FOR_ROOT_OPTIONS_TOKEN, NgxEditorJSModuleConfig, NGX_EDITORJS_CONFIG } from './types/config';\nimport { EditorJSInstance, EDITORJS_MODULE_IMPORT } from './types/injector';\nimport { NgxEditorjsPluginsModule } from '@tinynodes/ngx-editorjs-plugins';\n\n/**\n * Factory function to return the EditorJS base class\n */\nexport function createEditorJSInstance(editorjs: any) {\n  return editorjs;\n}\n\n/**\n * The `@tinynodes/ngx-editorjs` module provides a collection of demos to allow\n * any Angular app to use and control an [EditorJS](http://editorjs.io) instance\n *\n * To use import the module `NgxEditorJSModule.forRoot()` into the root of your application.\n * The `forRoot` method takes an optional `NgxEditorJSModuleConfig` config, this will provide a\n * default instance.\n */\n@NgModule({\n  imports: [CommonModule, FormsModule, NgxEditorjsPluginsModule, MatInputModule, MatFormFieldModule],\n  declarations: [NgxEditorJSComponent, NgxEditorJSMatFieldComponent, NgxEditorJSDirective],\n  exports: [NgxEditorJSComponent, NgxEditorJSMatFieldComponent, NgxEditorJSDirective],\n  providers: [\n    NgxEditorJSService,\n    {\n      provide: EDITORJS_MODULE_IMPORT,\n      useValue: EditorJS\n    },\n    {\n      provide: EditorJSInstance,\n      useFactory: createEditorJSInstance,\n      deps: [EDITORJS_MODULE_IMPORT]\n    }\n  ]\n})\nexport class NgxEditorJSModule {\n  constructor(\n    @Optional()\n    @SkipSelf()\n    parentModule: NgxEditorJSModule\n  ) {}\n\n  /**\n   * Use this method in the root of the application.  You can pass an optional configuration\n   * which sets some defaults, or use the provided defaults.\n   * @param config The optional configuration to pass\n   */\n  static forRoot(@Optional() config?: NgxEditorJSModuleConfig): ModuleWithProviders {\n    return {\n      ngModule: NgxEditorJSModule,\n      providers: [\n        {\n          provide: FOR_ROOT_OPTIONS_TOKEN,\n          useValue: config\n        },\n        {\n          provide: NGX_EDITORJS_CONFIG,\n          useFactory: createModuleConfig,\n          deps: [FOR_ROOT_OPTIONS_TOKEN]\n        }\n      ]\n    };\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/NgxEditorJSModuleConfig.html":{"url":"interfaces/NgxEditorJSModuleConfig.html","title":"interface - NgxEditorJSModuleConfig","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  NgxEditorJSModuleConfig\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            libs/ngx-editorjs/src/lib/types/config.ts\n        \n\n            \n                Description\n            \n            \n                The configuration option that can be passed to the NgxEditorJSModule.forRoot method\n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                            Optional\n                                        editorjs\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        editorjs\n                                    \n                                \n                                \n                                    \n                                        editorjs:     EditorConfig\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     EditorConfig\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    Configuration options for EditorJS\n\n                                \n                            \n                        \n                    \n            \n    \n\n\n    \n        import { InjectionToken } from '@angular/core';\nimport EditorJS, { OutputData, SanitizerConfig, EditorConfig } from '@editorjs/editorjs';\n\n/**\n * Configuration for the EditorJS instance\n */\nexport interface NgxEditorJSConfig {\n  /**\n   * If the EditorJS is autofocused on creation (default: false)\n   */\n  autofocus?: boolean;\n\n  /**\n   * Any initial output data to render\n   */\n  data?: OutputData;\n\n  /**\n   * If true, toolbar won't be shown\n   */\n  hideToolbar?: boolean;\n\n  /**\n   * ID of the element to hold the config\n   */\n  holder?: string;\n\n  /**\n   * The name of the initial block (default \"paragraph\")\n   */\n  initialBlock?: string;\n\n  /**\n   * Height of Editor's bottom area that allows to set focus on the last Block\n   */\n  minHeight?: number;\n\n  /**\n   * First Block placeholder\n   */\n  blockPlaceholder?: string;\n\n  /**\n   * Define default sanitizer configuration\n   */\n  sanitizer?: SanitizerConfig;\n}\n\n/**\n * The configuration option that can be passed to the `NgxEditorJSModule.forRoot` method\n */\nexport interface NgxEditorJSModuleConfig {\n  /**\n   * Configuration options for EditorJS\n   */\n  editorjs?: EditorConfig;\n}\n\n/**\n * Injection token provied for `NgxEditorJSConfig`\n */\nexport const NGX_EDITORJS_CONFIG = new InjectionToken('NGX_EDITORJS_CONFIG');\n\n/**\n * Internal token for injecting the `NgxEditorJSConfig` into the config factory\n */\nexport const FOR_ROOT_OPTIONS_TOKEN = new InjectionToken('FOR_ROOT_OPTIONS_TOKEN');\n\n/**\n * Get the EditorJS instance injected into the app\n */\nexport const EDITIOR_JS_INSTANCE = new InjectionToken('EDITIOR_JS_INSTANCE');\n\n    \n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/NgxEditorJSPluginService.html":{"url":"injectables/NgxEditorJSPluginService.html","title":"injectable - NgxEditorJSPluginService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  NgxEditorJSPluginService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            libs/ngx-editorjs-plugins/src/lib/services/plugin-service.service.ts\n        \n\n            \n                Description\n            \n            \n                The NgxEditorJSPluginService is provided as a root service for handling  EditorJS plugins.\nPlugins are provided by using  NgModule to inject the plugin with a\n PluginConfig using providers.\n\n            \n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                getPlugin\n                            \n                            \n                                    Public\n                                getPlugins\n                            \n                            \n                                    Public\n                                getPluginsWithExclude\n                            \n                            \n                                    Public\n                                getPluginsWithInclude\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(pluginConfigMap: PluginConfigMap)\n                    \n                \n                        \n                            \n                                Defined in libs/ngx-editorjs-plugins/src/lib/services/plugin-service.service.ts:13\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        pluginConfigMap\n                                                  \n                                                        \n                                                                        PluginConfigMap\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                The plugin configuration map injected into the application\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            getPlugin\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    getPlugin(key: string)\n                \n            \n\n\n            \n                \n                    Defined in libs/ngx-editorjs-plugins/src/lib/services/plugin-service.service.ts:32\n                \n            \n\n\n            \n                \n                    Get a plugin configuration via it's key\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    key\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        The key of the plugin to get\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         PluginConfig\n\n                    \n                    \n                        The plugin configuration for the passed key\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            getPlugins\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    getPlugins()\n                \n            \n\n\n            \n                \n                    Defined in libs/ngx-editorjs-plugins/src/lib/services/plugin-service.service.ts:23\n                \n            \n\n\n            \n                \n                    Get a map of all plugin configurations\n\n\n                    \n                    \n                    \n                        Returns :         PluginConfigMap\n\n                    \n                    \n                        The map of plugins injected into this plugin\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            getPluginsWithExclude\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    getPluginsWithExclude(excludeList: string[])\n                \n            \n\n\n            \n                \n                    Defined in libs/ngx-editorjs-plugins/src/lib/services/plugin-service.service.ts:40\n                \n            \n\n\n            \n                \n                    Get a list of plugins, filtering with an exclude list of plugins\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Default value\n                                \n                            \n                            \n                                \n                                    excludeList\n                                    \n                                            string[]\n                                    \n\n                                    \n                                        No\n                                    \n\n                                    \n                                        []\n                                    \n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         PluginConfigMap\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            getPluginsWithInclude\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    getPluginsWithInclude(includeList: string[])\n                \n            \n\n\n            \n                \n                    Defined in libs/ngx-editorjs-plugins/src/lib/services/plugin-service.service.ts:54\n                \n            \n\n\n            \n                \n                    Get a list of plugins, filtering with an include list of plugins\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Default value\n                                \n                            \n                            \n                                \n                                    includeList\n                                    \n                                            string[]\n                                    \n\n                                    \n                                        No\n                                    \n\n                                    \n                                        []\n                                    \n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         PluginConfigMap\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Inject, Injectable } from '@angular/core';\nimport { PluginClasses, PluginConfig, PluginConfigMap } from '../types/plugins';\n\n/**\n * The `NgxEditorJSPluginService` is provided as a root service for handling {@link https://github.com/editor-js | EditorJS plugins}.\n *\n * Plugins are provided by using {@link https://angular.io/api/core/NgModule | NgModule} to inject the plugin with a\n * {@link ../interfaces/PluginConfig.html | PluginConfig} using providers.\n */\n@Injectable({\n  providedIn: 'root'\n})\nexport class NgxEditorJSPluginService {\n  /**\n   * @param pluginConfigMap The plugin configuration map injected into the application\n   */\n  constructor(@Inject(PluginClasses) private readonly pluginConfigMap: PluginConfigMap) {}\n\n  /**\n   * Get a map of all plugin configurations\n   * @returns The map of plugins injected into this plugin\n   */\n  public getPlugins(): PluginConfigMap {\n    return this.pluginConfigMap;\n  }\n\n  /**\n   * Get a plugin configuration via it's key\n   * @param key The key of the plugin to get\n   * @returns The plugin configuration for the passed key\n   */\n  public getPlugin(key: string): PluginConfig {\n    return this.pluginConfigMap[key];\n  }\n\n  /**\n   * Get a list of plugins, filtering with an exclude list of plugins\n   * @param excludeList\n   */\n  public getPluginsWithExclude(excludeList: string[] = []): PluginConfigMap {\n    return Object.entries(this.pluginConfigMap)\n      .filter(([key]) => {\n        return !excludeList.includes(key);\n      })\n      .reduce((pluginMap, [key, plugin]) => {\n        return { ...pluginMap, [key]: plugin };\n      }, {});\n  }\n\n  /**\n   * Get a list of plugins, filtering with an include list of plugins\n   * @param includeList\n   */\n  public getPluginsWithInclude(includeList: string[] = []): PluginConfigMap {\n    return Object.entries(this.pluginConfigMap)\n      .filter(([key]) => {\n        return includeList.includes(key);\n      })\n      .reduce((pluginMap, [key, plugin]) => {\n        return { ...pluginMap, [key]: plugin };\n      }, {});\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/NgxEditorJSService.html":{"url":"injectables/NgxEditorJSService.html","title":"injectable - NgxEditorJSService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  NgxEditorJSService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            libs/ngx-editorjs/src/lib/services/editorjs.service.ts\n        \n\n            \n                Description\n            \n            \n                This handles the management of  EditorJS instances and their lifecycle.\nAll EditorJS instances are created outside of Angular using  NgZone  to ensure change detection is not triggered.\nOnce an instance is created, several  Observable values are also set up:\n\n isReady  Set when the editor instance is ready in the DOM\n hasSaved  Set when the editor .save() method has been called.\n lastChange  Set when a change happens, contains the OutputData from the Editor.\n\nAfter setup,  isReady  is set to true and the editor can be used within Angular.  There are some methods provided\nfor  save ,  update  and  clear  - and an  apiCall  method which allows\nfor any call to be made to EditorJS that matches it's API.\n\n            \n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                apiCall\n                            \n                            \n                                    Public\n                                clear\n                            \n                            \n                                    Public\n                                    Async\n                                createInstance\n                            \n                            \n                                    Public\n                                destroy\n                            \n                            \n                                    Public\n                                destroyInstance\n                            \n                            \n                                    Public\n                                getEditor\n                            \n                            \n                                    Public\n                                hasSaved\n                            \n                            \n                                    Public\n                                isReady\n                            \n                            \n                                    Public\n                                lastChange\n                            \n                            \n                                    Public\n                                save\n                            \n                            \n                                    Public\n                                toggleToolbar\n                            \n                            \n                                    Public\n                                update\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(editorJs: EditorJSClass, config: NgxEditorJSModuleConfig, plugins: NgxEditorJSPluginService, zone: NgZone, ref: ApplicationRef)\n                    \n                \n                        \n                            \n                                Defined in libs/ngx-editorjs/src/lib/services/editorjs.service.ts:61\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        editorJs\n                                                  \n                                                        \n                                                                        EditorJSClass\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                The EditorJS class injected into the application and used to create new editor instances\n\n                                                        \n                                                \n                                                \n                                                        config\n                                                  \n                                                        \n                                                                        NgxEditorJSModuleConfig\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                The configuration provided from the NgxEditorJSModule.forRoot method\n\n                                                        \n                                                \n                                                \n                                                        plugins\n                                                  \n                                                        \n                                                                        NgxEditorJSPluginService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                The plugin service which provides all plugins injected into the application\n\n                                                        \n                                                \n                                                \n                                                        zone\n                                                  \n                                                        \n                                                                        NgZone\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                The Angular Zone service that allows the EditorJS methods to be run outside of Angular\n\n                                                        \n                                                \n                                                \n                                                        ref\n                                                  \n                                                        \n                                                                        ApplicationRef\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                The ApplicationRef provided by Angular, used to trigger an application tick\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            apiCall\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    apiCall(options: InjectorApiCallOptions, ...args: any[])\n                \n            \n\n\n            \n                \n                    Defined in libs/ngx-editorjs/src/lib/services/editorjs.service.ts:139\n                \n            \n\n            \n                \n                    Type parameters :\n                    \n                        T\n                    \n                \n            \n\n            \n                \n                    A helper method to make calls to the  EditorJS API  of any instance.\nThe first argument is an object that you must pass the method name, and the holder ID of the container.\nAn optional namespace can be added for API calls such as blocks, caret, etc.\nThe second argument is any additional arguments as required by the API.\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    options\n                                    \n                                                InjectorApiCallOptions\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        The options for the API call to be made\n\n                                    \n                                \n                                \n                                    args\n                                    \n                                            any[]\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        Any arguments to be passed to the API call\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Observable>\n\n                    \n                    \n                        An Observable of the API response\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            clear\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    clear(options: InjectorMethodOption)\n                \n            \n\n\n            \n                \n                    Defined in libs/ngx-editorjs/src/lib/services/editorjs.service.ts:192\n                \n            \n\n\n            \n                \n                    Gets the  EditorJS instance for the passed holder and calls the clear method.\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    options\n                                    \n                                                InjectorMethodOption\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        Options to configure a method call against the EditorJS core API\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Observable>\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            Async\n                            createInstance\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    createInstance(options: CreateEditorJSOptions)\n                \n            \n\n\n            \n                \n                    Defined in libs/ngx-editorjs/src/lib/services/editorjs.service.ts:88\n                \n            \n\n\n            \n                \n                    Creates a new  EditorJS instance outside of the Angular zone and then adds it to the editor instances\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    options\n                                    \n                                                CreateEditorJSOptions\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        A configuration passed to create an EditorJS instance\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        A Promise when the editor has been created\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            destroy\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    destroy()\n                \n            \n\n\n            \n                \n                    Defined in libs/ngx-editorjs/src/lib/services/editorjs.service.ts:298\n                \n            \n\n\n            \n                \n                    Call this to destroy all subscriptions within the service\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            destroyInstance\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    destroyInstance(options: InjectorMethodOption)\n                \n            \n\n\n            \n                \n                    Defined in libs/ngx-editorjs/src/lib/services/editorjs.service.ts:281\n                \n            \n\n\n            \n                \n                    Destroys a single instance of  EditorJS and all the subject values created for it\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    options\n                                    \n                                                InjectorMethodOption\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        Options to configure a method call against the EditorJS core API\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            getEditor\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    getEditor(options: InjectorMethodOption)\n                \n            \n\n\n            \n                \n                    Defined in libs/ngx-editorjs/src/lib/services/editorjs.service.ts:230\n                \n            \n\n\n            \n                \n                    Returns the underlying  EditorJS instance\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    options\n                                    \n                                                InjectorMethodOption\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        Options to configure a method call against the EditorJS core API\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Observable\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            hasSaved\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    hasSaved(options: InjectorMethodOption)\n                \n            \n\n\n            \n                \n                    Defined in libs/ngx-editorjs/src/lib/services/editorjs.service.ts:270\n                \n            \n\n\n            \n                \n                    Subscribe to the hasSaved state change for the editor passed in the options\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    options\n                                    \n                                                InjectorMethodOption\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        Options to configure a method call against the EditorJS core API\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Observable\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            isReady\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    isReady(options: InjectorMethodOption)\n                \n            \n\n\n            \n                \n                    Defined in libs/ngx-editorjs/src/lib/services/editorjs.service.ts:241\n                \n            \n\n\n            \n                \n                    Subscribe to the isReady state change for the editor passed in the options\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    options\n                                    \n                                                InjectorMethodOption\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        Options to configure a method call against the EditorJS core API\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Observable\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            lastChange\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    lastChange(options: InjectorMethodOption)\n                \n            \n\n\n            \n                \n                    Defined in libs/ngx-editorjs/src/lib/services/editorjs.service.ts:252\n                \n            \n\n\n            \n                \n                    Subscribe to the lastChange state change for the editor passed in the options\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    options\n                                    \n                                                InjectorMethodOption\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        Options to configure a method call against the EditorJS core API\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Observable\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            save\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    save(options: InjectorMethodOption)\n                \n            \n\n\n            \n                \n                    Defined in libs/ngx-editorjs/src/lib/services/editorjs.service.ts:178\n                \n            \n\n\n            \n                \n                    Call the save method of an  EditorJS instance and sets the current value of the service to the result\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    options\n                                    \n                                                InjectorMethodOption\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        Options for the method call\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Observable>\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            toggleToolbar\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    toggleToolbar(options: InjectorMethodOption)\n                \n            \n\n\n            \n                \n                    Defined in libs/ngx-editorjs/src/lib/services/editorjs.service.ts:218\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    options\n                                    \n                                                InjectorMethodOption\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            update\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    update(options: InjectorMethodOption)\n                \n            \n\n\n            \n                \n                    Defined in libs/ngx-editorjs/src/lib/services/editorjs.service.ts:205\n                \n            \n\n\n            \n                \n                    Gets the  EditorJS instance for the passed holder and calls the render method if blocks\nare passed. Optionally can disable the lastChange update - useful if doing actions\nsuch as resetting data.\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    options\n                                    \n                                                InjectorMethodOption\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        Options to configure a method call against the EditorJS core API\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Observable>\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { ApplicationRef, Inject, Injectable, NgZone } from '@angular/core';\nimport EditorJS, { EditorConfig, OutputData } from '@editorjs/editorjs';\nimport { BehaviorSubject, Observable, of, Subject } from 'rxjs';\nimport { distinctUntilChanged, filter, switchMap, take, tap } from 'rxjs/operators';\nimport { NGX_EDITORJS_CONFIG, NgxEditorJSModuleConfig } from '../types/config';\nimport { CreateEditorJSOptions } from '../types/editorjs-service';\nimport {\n  EditorJSClass,\n  EditorJSInstance,\n  InjectorApiCallOptions,\n  InjectorApiCallResponse,\n  InjectorMethodOption,\n  MAP_DEFAULTS\n} from '../types/injector';\nimport { ChangeMap, EditorMap, ReadyMap, SavedMap } from '../types/maps';\nimport { NgxEditorJSPluginService, ToolSettingsMap } from '@tinynodes/ngx-editorjs-plugins';\n\n/**\n * This handles the management of {@link https://editorjs.io/api | EditorJS} instances and their lifecycle.\n *\n * All `EditorJS` instances are created outside of Angular using {@link https://angular.io/api/core/NgZone | NgZone } to ensure change detection is not triggered.\n * Once an instance is created, several {@link https://angular.io/guide/observables | Observable} values are also set up:\n *\n *  - {@link #isReady | isReady } Set when the editor instance is ready in the DOM\n *  - {@link #hasSaved | hasSaved } Set when the editor `.save()` method has been called.\n *  - {@link #lastChange | lastChange } Set when a change happens, contains the `OutputData` from the Editor.\n *\n * After setup, {@link #isReady | isReady } is set to true and the editor can be used within Angular.  There are some methods provided\n * for {@link #save | save }, {@link #update | update } and {@link #clear | clear } - and an {@link #apiCall | apiCall } method which allows\n * for any call to be made to EditorJS that matches it's API.\n */\n@Injectable({\n  providedIn: 'root'\n})\nexport class NgxEditorJSService {\n  /**\n   * Internal destroy subject for the service\n   */\n  private readonly onDestroy$ = new Subject();\n\n  /**\n   * Internal map of all {@link https://editorjs.io/api | EditorJS} instances\n   */\n  private readonly editorMap: EditorMap = {};\n\n  /**\n   * Internal map of all {@link https://editorjs.io/api | EditorJS} ready states\n   */\n  private readonly isReadyMap: ReadyMap = {};\n\n  /**\n   * Internal map of when {@link https://editorjs.io/api | EditorJS} save is called\n   */\n  private readonly hasSavedMap: SavedMap = {};\n\n  /**\n   * Internal map of all {@link https://editorjs.io/api | EditorJS} change states\n   */\n  private readonly lastChangeMap: ChangeMap = {};\n\n  private toolbarOpen = false;\n\n  /**\n   * @param editorJs The EditorJS class injected into the application and used to create new editor instances\n   * @param config The configuration provided from the NgxEditorJSModule.forRoot method\n   * @param plugins The plugin service which provides all plugins injected into the application\n   * @param zone The Angular Zone service that allows the EditorJS methods to be run outside of Angular\n   * @param ref The ApplicationRef provided by Angular, used to trigger an application tick\n   */\n  constructor(\n    @Inject(EditorJSInstance) private readonly editorJs: EditorJSClass,\n    @Inject(NGX_EDITORJS_CONFIG) private readonly config: NgxEditorJSModuleConfig,\n    private readonly plugins: NgxEditorJSPluginService,\n    private readonly zone: NgZone,\n    private readonly ref: ApplicationRef\n  ) {\n  }\n\n  /**\n   * Creates a new {@link https://editorjs.io/api | EditorJS} instance outside of the Angular zone and then adds it to the editor instances\n   *\n   * @remark\n   * This method uses `async/await`\n   *\n   * @param options A configuration passed to create an EditorJS instance\n   * @returns A Promise when the editor has been created\n   */\n  public async createInstance(options: CreateEditorJSOptions): Promise {\n    const editorConfig: EditorConfig = {\n      ...this.config.editorjs,\n      ...options.config,\n      tools: this.getTools(options.excludeTools)\n    };\n\n    // Bind the editor onChange method from the config, otherwise use the local createOnChange method\n    editorConfig.onChange =\n      editorConfig.onChange && typeof editorConfig.onChange === 'function'\n        ? editorConfig.onChange\n        : this.createOnChange.call(this, { holder: editorConfig.holder as string });\n\n    // Bind the editor onReady method from the config, otherwise use the local createOnReady method\n    editorConfig.onReady =\n      editorConfig.onReady && typeof editorConfig.onReady === 'function'\n        ? editorConfig.onReady\n        : this.createOnReady.call(this, { holder: editorConfig.holder as string });\n\n    await this.zone.runOutsideAngular(async () => {\n      const editor = new this.editorJs(editorConfig);\n      const holder = editorConfig.holder as string;\n      await editor.isReady;\n      await this.zone.run(async () => {\n        await this.setupSubjects({ holder });\n        if (this.editorMap[holder]) {\n          this.editorMap[holder].next(editor);\n        } else {\n          this.editorMap[holder] = new BehaviorSubject(editor);\n        }\n        this.isReadyMap[holder].next(true);\n        this.ref.tick();\n      });\n    });\n  }\n\n  /**\n   * A helper method to make calls to the {@link https://editorjs.io/api | EditorJS API } of any instance.\n   * The first argument is an object that you must pass the `method` name, and the `holder` ID of the container.\n   * An optional `namespace` can be added for API calls such as `blocks`, `caret`, etc.\n   *\n   * The second argument is any additional arguments as required by the API.\n   *\n   * @remarks\n   * Unlike other methods an API call be made with a `.subscribe`, the result will be an observable value.\n   * If the value is a Promise it will be resolved first\n   *\n   * @param options The options for the API call to be made\n   * @param args Any arguments to be passed to the API call\n   * @returns An Observable of the API response\n   */\n  public apiCall(options: InjectorApiCallOptions, ...args: any[]): Observable> {\n    return this.getEditor(options).pipe(\n      take(1),\n      switchMap(async editor => {\n        let result: InjectorApiCallResponse = { ...options, result: undefined };\n\n        await this.zone.runOutsideAngular(async () => {\n          let method: any;\n          if (!options.namespace) {\n            method = editor[options.method];\n          } else {\n            method = editor[options.namespace][options.method];\n          }\n          if (!method) {\n            throw new Error(`No method ${ options.method } ${ options.namespace ? 'in ' + options.namespace : '' }`);\n          }\n          const methodCall = method.call(editor, ...args);\n          await this.zone.run(async () => {\n            if (!methodCall || (methodCall && !methodCall.then)) {\n              result = {\n                ...result,\n                result: typeof methodCall === 'undefined' ? {} : methodCall\n              };\n            } else {\n              const r = await methodCall;\n              result = { ...result, result: r };\n            }\n          });\n        });\n\n        return result;\n      })\n    );\n  }\n\n  /**\n   * Call the `save` method of an {@link https://editorjs.io/api | EditorJS} instance and sets the current value of the service to the result\n   * @param options Options for the method call\n   */\n  public save(options: InjectorMethodOption): Observable> {\n    return this.apiCall({ holder: options.holder, namespace: 'saver', method: 'save' }).pipe(\n      take(1),\n      tap((response: InjectorApiCallResponse) => {\n        this.hasSavedMap[options.holder].next(true);\n        this.lastChangeMap[options.holder].next(response.result);\n      })\n    );\n  }\n\n  /**\n   * Gets the {@link https://editorjs.io/api | EditorJS} instance for the passed holder and calls the `clear` method.\n   * @param options Options to configure a method call against the EditorJS core API\n   */\n  public clear(options: InjectorMethodOption): Observable> {\n    return this.apiCall({ holder: options.holder, namespace: 'blocks', method: 'clear' }).pipe(\n      take(1),\n      switchMap((response) => options.skipSave ? of(response) : this.save(options))\n    );\n  }\n\n  /**\n   * Gets the {@link https://editorjs.io/api | EditorJS} instance for the passed holder and calls the render method if blocks\n   * are passed. Optionally can disable the `lastChange` update - useful if doing actions\n   * such as resetting data.\n   * @param options Options to configure a method call against the EditorJS core API\n   */\n  public update(options: InjectorMethodOption): Observable> {\n    const data = {\n      time: Date.now(),\n      version: this.editorJs.version,\n      blocks: [],\n      ...options.data\n    };\n    return this.apiCall({ holder: options.holder, namespace: 'blocks', method: 'render' }, data).pipe(\n      take(1),\n      switchMap((response) => options.skipSave ? of(response) : this.save(options))\n    );\n  }\n\n  public toggleToolbar(options: InjectorMethodOption) {\n    return this.apiCall({\n      holder: options.holder,\n      namespace: 'toolbar',\n      method: this.toolbarOpen ? 'close' : 'open'\n    }).pipe(take(1)).subscribe();\n  }\n\n  /**\n   * Returns the underlying {@link https://editorjs.io/api | EditorJS} instance\n   * @param options Options to configure a method call against the EditorJS core API\n   */\n  public getEditor(options: InjectorMethodOption): Observable {\n    if (!this.editorMap[options.holder]) {\n      this.editorMap[options.holder] = new BehaviorSubject(undefined);\n    }\n    return this.editorMap[options.holder].pipe(filter(editor => typeof editor !== 'undefined'));\n  }\n\n  /**\n   * Subscribe to the `isReady` state change for the editor passed in the options\n   * @param options Options to configure a method call against the EditorJS core API\n   */\n  public isReady(options: InjectorMethodOption): Observable {\n    if (!this.isReadyMap[options.holder]) {\n      this.isReadyMap[options.holder] = new BehaviorSubject(false);\n    }\n    return this.isReadyMap[options.holder].asObservable();\n  }\n\n  /**\n   * Subscribe to the `lastChange` state change for the editor passed in the options\n   * @param options Options to configure a method call against the EditorJS core API\n   */\n  public lastChange(options: InjectorMethodOption): Observable {\n    if (!this.lastChangeMap[options.holder]) {\n      this.lastChangeMap[options.holder] = new BehaviorSubject({\n        time: 0,\n        blocks: [],\n        version: this.editorJs.version\n      });\n    }\n    return this.lastChangeMap[options.holder].pipe(\n      distinctUntilChanged((a, b) => (b && b.time && b.time === 0) || (a && b && (a.time && a.time === b.time))),\n      filter(hasChanged => typeof hasChanged !== 'undefined')\n    );\n  }\n\n  /**\n   * Subscribe to the `hasSaved` state change for the editor passed in the options\n   * @param options Options to configure a method call against the EditorJS core API\n   */\n  public hasSaved(options: InjectorMethodOption): Observable {\n    if (!this.hasSavedMap[options.holder]) {\n      this.hasSavedMap[options.holder] = new BehaviorSubject(false);\n    }\n    return this.hasSavedMap[options.holder].asObservable();\n  }\n\n  /**\n   * Destroys a single instance of {@link https://editorjs.io/api | EditorJS} and all the subject values created for it\n   * @param options Options to configure a method call against the EditorJS core API\n   */\n  public destroyInstance(options: InjectorMethodOption): void {\n    this.getEditor(options)\n      .pipe(take(1))\n      .subscribe(editor => {\n        this.zone.runOutsideAngular(() => {\n          editor.destroy();\n          this.zone.run(() => {\n            this.cleanupSubjects({ holder: options.holder });\n            this.ref.tick();\n          });\n        });\n      });\n  }\n\n  /**\n   * Call this to destroy all subscriptions within the service\n   */\n  public destroy() {\n    Object.keys(this.editorMap).forEach(holder => this.destroyInstance({ holder }));\n    this.onDestroy$.next(true);\n    this.onDestroy$.complete();\n  }\n\n  /**\n   * Internal method to create an default onChange method for {@link https://editorjs.io/api | EditorJS}\n   * @param options The InjectorMethodOption for this request\n   */\n  private createOnChange(options: InjectorMethodOption): (change: OutputData) => void {\n    if (!this.lastChangeMap[options.holder]) {\n      this.lastChangeMap[options.holder] = new BehaviorSubject({ blocks: [] });\n    }\n    return (change: OutputData) => {\n      if (change) {\n        this.lastChangeMap[options.holder].next(change);\n      }\n    };\n  }\n\n  /**\n   * Internal method to create an default onReady method for {@link https://editorjs.io/api | EditorJS}\n   * @param options The InjectorMethodOption for this request\n   */\n  private createOnReady(options: InjectorMethodOption): () => void {\n    if (!this.isReadyMap[options.holder]) {\n      this.isReadyMap[options.holder] = new BehaviorSubject(false);\n    }\n\n    return () => {\n      if (!this.isReadyMap[options.holder].value) {\n        this.isReadyMap[options.holder].next(true);\n      }\n    };\n  }\n\n  /**\n   * Sets up the `BehaviorSubject` values when an {@link https://editorjs.io/api | EditorJS} instance is created.  All the subjects are first created and set\n   * to default values.\n   * Once an EditorJS instance is ready these values can provide change and save state information\n   * @param options Options to configure a method call against the EditorJS core API\n   */\n  private async setupSubjects(options: InjectorMethodOption): Promise {\n    MAP_DEFAULTS.forEach(([ mapKey, value ]: [ string, typeof value ]) => {\n      if (!this[mapKey][options.holder]) {\n        this[mapKey][options.holder] = new BehaviorSubject(value);\n      }\n      this[mapKey][options.holder].next(value);\n    });\n  }\n\n  /**\n   * Handles cleaning up all the `BehaviorSubject` values once an {@link https://editorjs.io/api | EditorJS} instance has been destroyed\n   * @param options The options to pass to clean up the subjects\n   */\n  private cleanupSubjects(options: InjectorMethodOption) {\n    MAP_DEFAULTS.forEach(([ mapKey ]: [ string ]) => {\n      if (this[mapKey][options.holder]) {\n        this[mapKey][options.holder].complete();\n        this[mapKey][options.holder] = null;\n        delete this[mapKey][options.holder];\n      }\n    });\n    this.editorMap[options.holder].complete();\n    this.editorMap[options.holder] = null;\n    delete this.editorMap[options.holder];\n  }\n\n  /**\n   * Returns a map of {@link https://editorjs.io/api | EditorJS} tools to be initialized by the editor\n   * @param excudeTools Optional array of tools to exclude, if not passed all tools\n   */\n  private getTools(excudeTools: string[] = []): ToolSettingsMap {\n    return Object.entries(this.plugins.getPluginsWithExclude(excudeTools))\n      .reduce(\n        (finalTools, [ key, plugin ]) =>\n          plugin.shortcut\n            ? {\n              [key]: {\n                class: plugin.plugin,\n                shortcut: plugin.shortcut,\n                inlineToolbar: plugin.type === 'inline'\n              },\n              ...finalTools\n            }\n            : {\n              [key]: {\n                class: plugin.plugin,\n                inlineToolbar: plugin.type === 'inline'\n              },\n              ...finalTools\n            },\n        {}\n      );\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/NgxEditorjsPluginsModule.html":{"url":"modules/NgxEditorjsPluginsModule.html","title":"module - NgxEditorjsPluginsModule","body":"\n                   \n\n\n\n\n    Modules\n    NgxEditorjsPluginsModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_NgxEditorjsPluginsModule\n\n\n\ncluster_NgxEditorjsPluginsModule_imports\n\n\n\ncluster_NgxEditorjsPluginsModule_exports\n\n\n\n\nNgxPluginServiceModule\n\nNgxPluginServiceModule\n\n\n\nNgxEditorjsPluginsModule\n\nNgxEditorjsPluginsModule\n\nNgxEditorjsPluginsModule -->\n\nNgxPluginServiceModule->NgxEditorjsPluginsModule\n\n\n\n\n\nPluginCodeModule\n\nPluginCodeModule\n\nNgxEditorjsPluginsModule -->\n\nPluginCodeModule->NgxEditorjsPluginsModule\n\n\n\n\n\nPluginHeaderModule\n\nPluginHeaderModule\n\nNgxEditorjsPluginsModule -->\n\nPluginHeaderModule->NgxEditorjsPluginsModule\n\n\n\n\n\nPluginImageModule\n\nPluginImageModule\n\nNgxEditorjsPluginsModule -->\n\nPluginImageModule->NgxEditorjsPluginsModule\n\n\n\n\n\nPluginInlineCodeModule\n\nPluginInlineCodeModule\n\nNgxEditorjsPluginsModule -->\n\nPluginInlineCodeModule->NgxEditorjsPluginsModule\n\n\n\n\n\nPluginLinkModule\n\nPluginLinkModule\n\nNgxEditorjsPluginsModule -->\n\nPluginLinkModule->NgxEditorjsPluginsModule\n\n\n\n\n\nPluginListModule\n\nPluginListModule\n\nNgxEditorjsPluginsModule -->\n\nPluginListModule->NgxEditorjsPluginsModule\n\n\n\n\n\nPluginMarkerModule\n\nPluginMarkerModule\n\nNgxEditorjsPluginsModule -->\n\nPluginMarkerModule->NgxEditorjsPluginsModule\n\n\n\n\n\nPluginParagraphModule\n\nPluginParagraphModule\n\nNgxEditorjsPluginsModule -->\n\nPluginParagraphModule->NgxEditorjsPluginsModule\n\n\n\n\n\nPluginSimpleImageModule\n\nPluginSimpleImageModule\n\nNgxEditorjsPluginsModule -->\n\nPluginSimpleImageModule->NgxEditorjsPluginsModule\n\n\n\n\n\nNgxPluginServiceModule \n\nNgxPluginServiceModule \n\nNgxPluginServiceModule  -->\n\nNgxEditorjsPluginsModule->NgxPluginServiceModule \n\n\n\n\n\nPluginCodeModule \n\nPluginCodeModule \n\nPluginCodeModule  -->\n\nNgxEditorjsPluginsModule->PluginCodeModule \n\n\n\n\n\nPluginHeaderModule \n\nPluginHeaderModule \n\nPluginHeaderModule  -->\n\nNgxEditorjsPluginsModule->PluginHeaderModule \n\n\n\n\n\nPluginImageModule \n\nPluginImageModule \n\nPluginImageModule  -->\n\nNgxEditorjsPluginsModule->PluginImageModule \n\n\n\n\n\nPluginInlineCodeModule \n\nPluginInlineCodeModule \n\nPluginInlineCodeModule  -->\n\nNgxEditorjsPluginsModule->PluginInlineCodeModule \n\n\n\n\n\nPluginLinkModule \n\nPluginLinkModule \n\nPluginLinkModule  -->\n\nNgxEditorjsPluginsModule->PluginLinkModule \n\n\n\n\n\nPluginListModule \n\nPluginListModule \n\nPluginListModule  -->\n\nNgxEditorjsPluginsModule->PluginListModule \n\n\n\n\n\nPluginMarkerModule \n\nPluginMarkerModule \n\nPluginMarkerModule  -->\n\nNgxEditorjsPluginsModule->PluginMarkerModule \n\n\n\n\n\nPluginParagraphModule \n\nPluginParagraphModule \n\nPluginParagraphModule  -->\n\nNgxEditorjsPluginsModule->PluginParagraphModule \n\n\n\n\n\nPluginSimpleImageModule \n\nPluginSimpleImageModule \n\nPluginSimpleImageModule  -->\n\nNgxEditorjsPluginsModule->PluginSimpleImageModule \n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            libs/ngx-editorjs-plugins/src/lib/ngx-editorjs-plugins.module.ts\n        \n\n\n        \n            Description\n        \n        \n            The NgxEditorjsPluginsModule provides several additional modules\nthat provide a way to easily plug in block and inline tools for EditorJS.\nImporting NgxEditorjsPluginsModule will include all modules, while it\nis also possible to import each individual module as required.\n\n        \n\n\n        \n            \n                \n                    Imports\n                    \n                        \n                            NgxPluginServiceModule\n                        \n                        \n                            PluginCodeModule\n                        \n                        \n                            PluginHeaderModule\n                        \n                        \n                            PluginImageModule\n                        \n                        \n                            PluginInlineCodeModule\n                        \n                        \n                            PluginLinkModule\n                        \n                        \n                            PluginListModule\n                        \n                        \n                            PluginMarkerModule\n                        \n                        \n                            PluginParagraphModule\n                        \n                        \n                            PluginSimpleImageModule\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            NgxPluginServiceModule\n                        \n                        \n                            PluginCodeModule\n                        \n                        \n                            PluginHeaderModule\n                        \n                        \n                            PluginImageModule\n                        \n                        \n                            PluginInlineCodeModule\n                        \n                        \n                            PluginLinkModule\n                        \n                        \n                            PluginListModule\n                        \n                        \n                            PluginMarkerModule\n                        \n                        \n                            PluginParagraphModule\n                        \n                        \n                            PluginSimpleImageModule\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\nimport { PluginCodeModule } from './plugins/code/code.module';\nimport { PluginHeaderModule } from './plugins/header/header.module';\nimport { PluginImageModule } from './plugins/image/image.module';\nimport { PluginLinkModule } from './plugins/link/link.module';\nimport { PluginListModule } from './plugins/list/list.module';\nimport { PluginMarkerModule } from './plugins/marker/marker.module';\nimport { PluginParagraphModule } from './plugins/paragraph/paragraph.module';\nimport { PluginSimpleImageModule } from './plugins/simple-image/simple-image.module';\nimport { NgxPluginServiceModule } from './services/plugin-service.module';\nimport { PluginInlineCodeModule } from './plugins/inline-code/inline-code.module';\n\n/**\n * The `NgxEditorjsPluginsModule` provides several additional modules\n * that provide a way to easily plug in block and inline tools for EditorJS.\n *\n * Importing `NgxEditorjsPluginsModule` will include all modules, while it\n * is also possible to import each individual module as required.\n */\n@NgModule({\n  imports: [\n    CommonModule,\n    NgxPluginServiceModule,\n    PluginCodeModule,\n    PluginHeaderModule,\n    PluginImageModule,\n    PluginLinkModule,\n    PluginListModule,\n    PluginMarkerModule,\n    PluginParagraphModule,\n    PluginSimpleImageModule,\n    PluginInlineCodeModule\n  ],\n  exports: [\n    NgxPluginServiceModule,\n    PluginCodeModule,\n    PluginHeaderModule,\n    PluginImageModule,\n    PluginLinkModule,\n    PluginListModule,\n    PluginMarkerModule,\n    PluginParagraphModule,\n    PluginSimpleImageModule,\n    PluginInlineCodeModule\n  ]\n})\nexport class NgxEditorjsPluginsModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/NgxPluginServiceModule.html":{"url":"modules/NgxPluginServiceModule.html","title":"module - NgxPluginServiceModule","body":"\n                   \n\n\n\n\n    Modules\n    NgxPluginServiceModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_NgxPluginServiceModule\n\n\n\ncluster_NgxPluginServiceModule_providers\n\n\n\n\nNgxEditorJSPluginService\n\nNgxEditorJSPluginService\n\n\n\nNgxPluginServiceModule\n\nNgxPluginServiceModule\n\nNgxPluginServiceModule -->\n\nNgxEditorJSPluginService->NgxPluginServiceModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            libs/ngx-editorjs-plugins/src/lib/services/plugin-service.module.ts\n        \n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            NgxEditorJSPluginService\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { NgModule } from '@angular/core';\nimport { EDITOR_JS_TOOL_INJECTOR, PLUGIN_CONFIG, PluginClasses } from '../types/plugins';\nimport { createPluginConfig } from '../util/plugin';\n\nimport { NgxEditorJSPluginService } from './plugin-service.service';\n\n@NgModule({\n  providers: [\n    {\n      provide: PluginClasses,\n      useFactory: createPluginConfig,\n      deps: [PLUGIN_CONFIG, EDITOR_JS_TOOL_INJECTOR]\n    },\n    NgxEditorJSPluginService\n  ]\n})\nexport class NgxPluginServiceModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/NgxTinynodesComponentsModule.html":{"url":"modules/NgxTinynodesComponentsModule.html","title":"module - NgxTinynodesComponentsModule","body":"\n                   \n\n\n\n\n    Modules\n    NgxTinynodesComponentsModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_NgxTinynodesComponentsModule\n\n\n\ncluster_NgxTinynodesComponentsModule_imports\n\n\n\ncluster_NgxTinynodesComponentsModule_exports\n\n\n\n\nNgxTinynodesMatJsonOutputModule\n\nNgxTinynodesMatJsonOutputModule\n\n\n\nNgxTinynodesComponentsModule\n\nNgxTinynodesComponentsModule\n\nNgxTinynodesComponentsModule -->\n\nNgxTinynodesMatJsonOutputModule->NgxTinynodesComponentsModule\n\n\n\n\n\nNgxTinynodesMatTagInputModule\n\nNgxTinynodesMatTagInputModule\n\nNgxTinynodesComponentsModule -->\n\nNgxTinynodesMatTagInputModule->NgxTinynodesComponentsModule\n\n\n\n\n\nNgxTinynodesMatJsonOutputModule \n\nNgxTinynodesMatJsonOutputModule \n\nNgxTinynodesMatJsonOutputModule  -->\n\nNgxTinynodesComponentsModule->NgxTinynodesMatJsonOutputModule \n\n\n\n\n\nNgxTinynodesMatTagInputModule \n\nNgxTinynodesMatTagInputModule \n\nNgxTinynodesMatTagInputModule  -->\n\nNgxTinynodesComponentsModule->NgxTinynodesMatTagInputModule \n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            libs/ngx-tinynodes-components/src/lib/ngx-tinynodes-components.module.ts\n        \n\n\n\n\n        \n            \n                \n                    Imports\n                    \n                        \n                            NgxTinynodesMatJsonOutputModule\n                        \n                        \n                            NgxTinynodesMatTagInputModule\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            NgxTinynodesMatJsonOutputModule\n                        \n                        \n                            NgxTinynodesMatTagInputModule\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { NgModule } from '@angular/core';\nimport { NgxTinynodesMatTagInputModule } from './components/mat-tag-input/mat-tag-input.module';\nimport { NgxTinynodesMatJsonOutputModule } from './components/mat-json-output/mat-json-output.module';\n\n@NgModule({\n  imports: [ NgxTinynodesMatTagInputModule, NgxTinynodesMatJsonOutputModule ],\n  exports: [ NgxTinynodesMatTagInputModule, NgxTinynodesMatJsonOutputModule ]\n})\nexport class NgxTinynodesComponentsModule {\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/NgxTinynodesMatFieldComponent.html":{"url":"interfaces/NgxTinynodesMatFieldComponent.html","title":"interface - NgxTinynodesMatFieldComponent","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  NgxTinynodesMatFieldComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            libs/ngx-tinynodes-components/src/lib/types/components.ts\n        \n\n\n            \n                Extends\n            \n            \n                        ControlValueAccessor\n            \n\n\n\n\n    \n\n\n    \n        import { ControlValueAccessor } from '@angular/forms';\nimport { MatFormFieldControl } from '@angular/material';\nimport { AfterContentInit, DoCheck, OnDestroy, OnInit } from '@angular/core';\n\nexport interface NgxTinynodesMatFieldComponent extends ControlValueAccessor,\n  MatFormFieldControl,\n  OnInit,\n  OnDestroy,\n  DoCheck,\n  AfterContentInit {\n}\n\n    \n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/NgxTinynodesMatJsonOutputComponent.html":{"url":"components/NgxTinynodesMatJsonOutputComponent.html","title":"component - NgxTinynodesMatJsonOutputComponent","body":"\n                   \n\n\n\n\n\n  Components\n  NgxTinynodesMatJsonOutputComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    libs/ngx-tinynodes-components/src/lib/components/mat-json-output/mat-json-output.component.ts\n\n\n\n\n    \n        Implements\n    \n    \n                    OnChanges\n    \n\n\n\n    Metadata\n    \n        \n\n            \n                changeDetection\n                ChangeDetectionStrategy.OnPush\n            \n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                ngx-tinynodes-mat-json-output\n            \n\n\n\n\n            \n                templateUrl\n                mat-json-output.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngOnChanges\n                            \n                            \n                                    Public\n                                toggleExpand\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                expand\n                            \n                            \n                                json\n                            \n                        \n                    \n                \n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(cd: ChangeDetectorRef)\n                    \n                \n                        \n                            \n                                Defined in libs/ngx-tinynodes-components/src/lib/components/mat-json-output/mat-json-output.component.ts:14\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        cd\n                                                  \n                                                        \n                                                                        ChangeDetectorRef\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        expand\n                    \n                \n                \n                    \n                        Default value : true\n                    \n                \n                        \n                            \n                                    Defined in libs/ngx-tinynodes-components/src/lib/components/mat-json-output/mat-json-output.component.ts:14\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        json\n                    \n                \n                \n                    \n                        Type :         any\n\n                    \n                \n                        \n                            \n                                    Defined in libs/ngx-tinynodes-components/src/lib/components/mat-json-output/mat-json-output.component.ts:11\n                            \n                        \n            \n        \n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngOnChanges\n                        \n                        \n                    \n                \n            \n            \n                \nngOnChanges()\n                \n            \n\n\n            \n                \n                    Defined in libs/ngx-tinynodes-components/src/lib/components/mat-json-output/mat-json-output.component.ts:23\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            toggleExpand\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    toggleExpand()\n                \n            \n\n\n            \n                \n                    Defined in libs/ngx-tinynodes-components/src/lib/components/mat-json-output/mat-json-output.component.ts:19\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n\n\n\n\n    \n        import { ChangeDetectionStrategy, ChangeDetectorRef, Component, Input, OnChanges } from '@angular/core';\n\n@Component({\n  selector: 'ngx-tinynodes-mat-json-output',\n  templateUrl: 'mat-json-output.component.html',\n  changeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class NgxTinynodesMatJsonOutputComponent implements OnChanges {\n\n  @Input()\n  json: any;\n\n  @Input()\n  expand = true;\n\n  constructor(private readonly cd: ChangeDetectorRef) {\n  }\n\n  public toggleExpand() {\n    this.expand = !this.expand;\n  }\n\n  ngOnChanges(): void {\n    this.cd.markForCheck();\n  }\n}\n\n    \n\n    \n        \n  \n    Output\n    Data from the EditorJS instance\n  \n  \n    {{expand ? 'Collapse JSON' : 'Expand JSON'}}\n  \n  \n    \n  \n\n\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '      Output    Data from the EditorJS instance        {{expand ? \\'Collapse JSON\\' : \\'Expand JSON\\'}}          '\n    var COMPONENTS = [{'name': 'NgxEditorJSComponent', 'selector': 'ngx-editorjs'},{'name': 'NgxEditorJSMatFieldComponent', 'selector': 'ngx-editorjs-mat-field'},{'name': 'NgxTinynodesMatJsonOutputComponent', 'selector': 'ngx-tinynodes-mat-json-output'},{'name': 'NgxTinynodesMatTagInputComponent', 'selector': 'ngx-tinynodes-mat-tag-input'}];\n    var DIRECTIVES = [{'name': 'NgxEditorJSDirective', 'selector': '[ngxEditorJS]'}];\n    var ACTUAL_COMPONENT = {'name': 'NgxTinynodesMatJsonOutputComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/NgxTinynodesMatJsonOutputModule.html":{"url":"modules/NgxTinynodesMatJsonOutputModule.html","title":"module - NgxTinynodesMatJsonOutputModule","body":"\n                   \n\n\n\n\n    Modules\n    NgxTinynodesMatJsonOutputModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_NgxTinynodesMatJsonOutputModule\n\n\n\ncluster_NgxTinynodesMatJsonOutputModule_declarations\n\n\n\ncluster_NgxTinynodesMatJsonOutputModule_exports\n\n\n\n\nNgxTinynodesMatJsonOutputComponent\n\nNgxTinynodesMatJsonOutputComponent\n\n\n\nNgxTinynodesMatJsonOutputModule\n\nNgxTinynodesMatJsonOutputModule\n\nNgxTinynodesMatJsonOutputModule -->\n\nNgxTinynodesMatJsonOutputComponent->NgxTinynodesMatJsonOutputModule\n\n\n\n\n\nNgxTinynodesMatJsonOutputComponent \n\nNgxTinynodesMatJsonOutputComponent \n\nNgxTinynodesMatJsonOutputComponent  -->\n\nNgxTinynodesMatJsonOutputModule->NgxTinynodesMatJsonOutputComponent \n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            libs/ngx-tinynodes-components/src/lib/components/mat-json-output/mat-json-output.module.ts\n        \n\n\n\n\n        \n            \n                \n                    Declarations\n                    \n                        \n                            NgxTinynodesMatJsonOutputComponent\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            NgxTinynodesMatJsonOutputComponent\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { NgModule } from '@angular/core';\nimport { NgxTinynodesMatJsonOutputComponent } from './mat-json-output.component';\nimport { CommonModule } from '@angular/common';\nimport { MatButtonModule, MatCardModule } from '@angular/material';\nimport { NgxJsonViewerModule } from 'ngx-json-viewer';\n\n@NgModule({\n  imports: [CommonModule, MatCardModule, MatButtonModule, NgxJsonViewerModule],\n  declarations: [ NgxTinynodesMatJsonOutputComponent ],\n  exports: [ NgxTinynodesMatJsonOutputComponent ]\n})\nexport class NgxTinynodesMatJsonOutputModule {\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/NgxTinynodesMatTagInputModule.html":{"url":"modules/NgxTinynodesMatTagInputModule.html","title":"module - NgxTinynodesMatTagInputModule","body":"\n                   \n\n\n\n\n    Modules\n    NgxTinynodesMatTagInputModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_NgxTinynodesMatTagInputModule\n\n\n\ncluster_NgxTinynodesMatTagInputModule_declarations\n\n\n\ncluster_NgxTinynodesMatTagInputModule_NgxTinynodesMatTagInputComponent_providers\n\n\n\ncluster_NgxTinynodesMatTagInputModule_exports\n\n\n\n\nNgxTinynodesMatTagInputComponent\n\nNgxTinynodesMatTagInputComponent\n\n\n\nNgxTinynodesMatTagInputModule\n\nNgxTinynodesMatTagInputModule\n\nNgxTinynodesMatTagInputModule -->\n\nNgxTinynodesMatTagInputComponent->NgxTinynodesMatTagInputModule\n\n\n\n\n\nNgxTinynodesMatTagInputComponent \n\nNgxTinynodesMatTagInputComponent \n\nNgxTinynodesMatTagInputComponent  -->\n\nNgxTinynodesMatTagInputModule->NgxTinynodesMatTagInputComponent \n\n\n\n\n\nTAG_COMPONENT_VALUE_ACCESSOR\n\nTAG_COMPONENT_VALUE_ACCESSOR\n\nNgxTinynodesMatTagInputComponent -->\n\nTAG_COMPONENT_VALUE_ACCESSOR->NgxTinynodesMatTagInputComponent\n\n\n\n\n\nTAG_COMPONENT_FIELD_CONTROL\n\nTAG_COMPONENT_FIELD_CONTROL\n\nNgxTinynodesMatTagInputComponent -->\n\nTAG_COMPONENT_FIELD_CONTROL->NgxTinynodesMatTagInputComponent\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            libs/ngx-tinynodes-components/src/lib/components/mat-tag-input/mat-tag-input.module.ts\n        \n\n\n\n\n        \n            \n                \n                    Declarations\n                    \n                        \n                            NgxTinynodesMatTagInputComponent\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            NgxTinynodesMatTagInputComponent\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { NgModule } from '@angular/core';\nimport { NgxTinynodesMatTagInputComponent } from './mat-tag-input.component';\nimport { MatChipsModule, MatIconModule } from '@angular/material';\nimport { FormsModule } from '@angular/forms';\nimport { CommonModule } from '@angular/common';\n\n@NgModule({\n  imports: [FormsModule,CommonModule, MatChipsModule, MatIconModule],\n  declarations: [ NgxTinynodesMatTagInputComponent ],\n  exports: [ NgxTinynodesMatTagInputComponent ]\n})\nexport class NgxTinynodesMatTagInputModule {\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/Paragraph.html":{"url":"interfaces/Paragraph.html","title":"interface - Paragraph","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  Paragraph\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            libs/ngx-editorjs/src/lib/types/blocks.ts\n        \n\n            \n                Description\n            \n            \n                Default data type for a paragraph block\n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        text\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        text\n                                    \n                                \n                                \n                                    \n                                        text:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    The paragraph text\n\n                                \n                            \n                        \n                    \n            \n    \n\n\n    \n        export interface Block {\n  /**\n   * The EditorJS block type\n   */\n  type: string;\n\n  /**\n   * The data interface for the block type\n   */\n  data: T;\n\n  /**\n   * Additional properties on the type\n   */\n  [key: string]: any;\n}\n\n/**\n * Available list styles, supports `ordered` and `unordered`.\n * A custom string can also be added\n */\nexport type ListStyle = 'ordered' | 'unordered' | string;\n\n/**\n * Default data type for a list block\n */\nexport interface List {\n  /**\n   * The list style\n   */\n  style: ListStyle;\n  /**\n   * List items of type T\n   */\n  items: T[];\n}\n\n/**\n * The default list block is provided by the EditorJS list plugin\n */\nexport interface ListBlock extends Block> {\n  /**\n   * The EditorJS block type\n   */\n  type: 'list';\n}\n\n/**\n * Default data type for a paragraph block\n */\ninterface Paragraph {\n  /**\n   * The paragraph text\n   */\n  text: string;\n}\n\n/**\n * Interface for a paragraph block\n */\nexport interface ParagraphBlock extends Block {\n  /**\n   * The EditorJS block type\n   */\n  type: 'paragraph';\n}\n\n/**\n * Default data type for a header block\n */\ninterface Header {\n  /**\n   * The header text\n   */\n  text: string;\n  /**\n   * The header level from 1-6\n   */\n  level: number;\n}\n\n/**\n * Interface for a header block\n */\nexport interface HeaderBlock extends Block {\n  /**\n   * The EditorJS block type\n   */\n  type: 'header';\n}\n\n/**\n * Default data type for a header block\n */\nexport interface Image {\n  /**\n   * The image URL\n   */\n  url: string;\n  /**\n   * Optional image caption\n   */\n  caption?: string;\n  /**\n   * Optional border property\n   */\n  withBorder?: boolean;\n\n  /**\n   * Optional background property\n   */\n  withBackground?: boolean;\n\n  /**\n   * Optional stretch property\n   */\n  stretched?: boolean;\n}\n\n/**\n * Interface for a image block\n */\nexport interface ImageBlock extends Block {\n  /**\n   * The EditorJS block type\n   */\n  type: 'image';\n}\n\n/**\n * Type of all the basic block type\n */\nexport type BlockTypes = ParagraphBlock | HeaderBlock | ImageBlock | ListBlock | Block;\n\n    \n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/ParagraphBlock.html":{"url":"interfaces/ParagraphBlock.html","title":"interface - ParagraphBlock","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  ParagraphBlock\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            libs/ngx-editorjs/src/lib/types/blocks.ts\n        \n\n            \n                Description\n            \n            \n                Interface for a paragraph block\n\n            \n\n            \n                Extends\n            \n            \n                        Block\n            \n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        type\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        type\n                                    \n                                \n                                \n                                    \n                                        type:     \n\n                                    \n                                \n\n\n\n\n\n\n\n                            \n                                \n                                    The EditorJS block type\n\n                                \n                            \n                        \n                    \n            \n    \n\n\n    \n        export interface Block {\n  /**\n   * The EditorJS block type\n   */\n  type: string;\n\n  /**\n   * The data interface for the block type\n   */\n  data: T;\n\n  /**\n   * Additional properties on the type\n   */\n  [key: string]: any;\n}\n\n/**\n * Available list styles, supports `ordered` and `unordered`.\n * A custom string can also be added\n */\nexport type ListStyle = 'ordered' | 'unordered' | string;\n\n/**\n * Default data type for a list block\n */\nexport interface List {\n  /**\n   * The list style\n   */\n  style: ListStyle;\n  /**\n   * List items of type T\n   */\n  items: T[];\n}\n\n/**\n * The default list block is provided by the EditorJS list plugin\n */\nexport interface ListBlock extends Block> {\n  /**\n   * The EditorJS block type\n   */\n  type: 'list';\n}\n\n/**\n * Default data type for a paragraph block\n */\ninterface Paragraph {\n  /**\n   * The paragraph text\n   */\n  text: string;\n}\n\n/**\n * Interface for a paragraph block\n */\nexport interface ParagraphBlock extends Block {\n  /**\n   * The EditorJS block type\n   */\n  type: 'paragraph';\n}\n\n/**\n * Default data type for a header block\n */\ninterface Header {\n  /**\n   * The header text\n   */\n  text: string;\n  /**\n   * The header level from 1-6\n   */\n  level: number;\n}\n\n/**\n * Interface for a header block\n */\nexport interface HeaderBlock extends Block {\n  /**\n   * The EditorJS block type\n   */\n  type: 'header';\n}\n\n/**\n * Default data type for a header block\n */\nexport interface Image {\n  /**\n   * The image URL\n   */\n  url: string;\n  /**\n   * Optional image caption\n   */\n  caption?: string;\n  /**\n   * Optional border property\n   */\n  withBorder?: boolean;\n\n  /**\n   * Optional background property\n   */\n  withBackground?: boolean;\n\n  /**\n   * Optional stretch property\n   */\n  stretched?: boolean;\n}\n\n/**\n * Interface for a image block\n */\nexport interface ImageBlock extends Block {\n  /**\n   * The EditorJS block type\n   */\n  type: 'image';\n}\n\n/**\n * Type of all the basic block type\n */\nexport type BlockTypes = ParagraphBlock | HeaderBlock | ImageBlock | ListBlock | Block;\n\n    \n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/PluginCodeModule.html":{"url":"modules/PluginCodeModule.html","title":"module - PluginCodeModule","body":"\n                   \n\n\n\n\n    Modules\n    PluginCodeModule\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            libs/ngx-editorjs-plugins/src/lib/plugins/code/code.module.ts\n        \n\n\n        \n            Description\n        \n        \n            A module that provides the default EditorJS  block tool.\nSee the GitHub repo for API details\n\n        \n\n\n        \n            \n            \n        \n\n\n    \n\n\n    \n        import { NgModule } from '@angular/core';\nimport { EDITOR_JS_TOOL_INJECTOR, PLUGIN_CONFIG, PluginClasses, PluginTypes } from '../../types/plugins';\nimport Code from '@editorjs/code';\nimport { createPluginConfig } from '../../util/plugin';\n\n/**\n * A module that provides the default EditorJS `` block tool.\n * See [the GitHub repo](https://github.com/editor-js/code) for API details\n */\n@NgModule({\n  providers: [\n    {\n      provide: EDITOR_JS_TOOL_INJECTOR,\n      useValue: Code,\n      multi: true\n    },\n    {\n      provide: PLUGIN_CONFIG,\n      useValue: {\n        key: 'code',\n        type: PluginTypes.Block,\n        pluginName: 'EditorJS Code'\n      },\n      multi: true\n    }\n  ]\n})\nexport class PluginCodeModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/PluginConfig.html":{"url":"interfaces/PluginConfig.html","title":"interface - PluginConfig","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  PluginConfig\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            libs/ngx-editorjs-plugins/src/lib/types/plugins.ts\n        \n\n            \n                Description\n            \n            \n                A plugin configuration object\n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                            Optional\n                                        blockData\n                                \n                                \n                                            Optional\n                                        description\n                                \n                                \n                                        key\n                                \n                                \n                                        plugin\n                                \n                                \n                                        pluginName\n                                \n                                \n                                            Optional\n                                        shortcut\n                                \n                                \n                                        type\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        blockData\n                                    \n                                \n                                \n                                    \n                                        blockData:         BlockData\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         BlockData\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    Optional block data, used to define the block data for this type\nand used as a default\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        description\n                                    \n                                \n                                \n                                    \n                                        description:         PluginProperty\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         PluginProperty\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    Optional description for the plugin\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        key\n                                    \n                                \n                                \n                                    \n                                        key:         PluginProperty\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         PluginProperty\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    The key to use for the plugin\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        plugin\n                                    \n                                \n                                \n                                    \n                                        plugin:         EditorJSPlugin | undefined\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         EditorJSPlugin | undefined\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    The plugin for the editor\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        pluginName\n                                    \n                                \n                                \n                                    \n                                        pluginName:         PluginProperty\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         PluginProperty\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Label for displaying the plugin name\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        shortcut\n                                    \n                                \n                                \n                                    \n                                        shortcut:         PluginProperty\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         PluginProperty\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    Optional shortcut for the plugin\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        type\n                                    \n                                \n                                \n                                    \n                                        type:         PluginProperty\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         PluginProperty\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Specifies the type of plugin for the plugin provider\n\n                                \n                            \n                        \n                    \n            \n    \n\n\n    \n        import { InjectionToken } from '@angular/core';\nimport { ToolSettings, ToolConstructable } from '@editorjs/editorjs';\n\n/**\n * Block Data interface\n */\nexport interface BlockData {\n  [key: string]: any;\n}\n\n/**\n * The types of plugins supported, currently block and inline\n */\nexport enum PluginTypes {\n  /**\n   * A EditorJS block plugin\n   */\n  Block = 'block',\n  /**\n   * A EditorJS inline plugin\n   */\n  Inline = 'inline'\n}\n\n/**\n * The types of plugins supported via the plugin `type` property\n */\nexport type PluginType = PluginTypes.Block | PluginTypes.Inline | string;\n\n/**\n * A plugin property\n */\nexport type PluginProperty = string;\n\n/**\n * The EditorJS tool settings for this plugin\n */\nexport type EditorJSPlugin = ToolConstructable | ToolSettings;\n\n/**\n * A map of all the tools settings\n */\nexport interface ToolSettingsMap {\n  /**\n   * The key of the plugin and the plugin exported tool settings\n   */\n  [key: string]: EditorJSPlugin;\n}\n\n/**\n * A plugin configuration object\n */\nexport interface PluginConfig {\n  /**\n   * Specifies the type of plugin for the plugin provider\n   */\n  type: PluginProperty;\n  /**\n   * The key to use for the plugin\n   */\n  key: PluginProperty;\n  /**\n   * Label for displaying the plugin name\n   */\n  pluginName: PluginProperty;\n  /**\n   * Optional description for the plugin\n   */\n  description?: PluginProperty;\n  /**\n   * Optional shortcut for the plugin\n   */\n  shortcut?: PluginProperty;\n  /**\n   * Optional block data, used to define the block data for this type\n   * and used as a default\n   */\n  blockData?: BlockData;\n  /**\n   * The plugin for the editor\n   */\n  plugin: EditorJSPlugin | undefined;\n}\n\n/**\n * The Injection token for initial plugins as defined in the ngx-editorjs module\n */\nexport const EDITOR_JS_TOOL_INJECTOR = new InjectionToken('EDITOR_JS_TOOL_INJECTOR');\n\n/**\n * Injection token for a plugin config\n */\nexport const PLUGIN_CONFIG = new InjectionToken('PLUGIN_CONFIG');\n\n/**\n * A map of plugin configs\n */\nexport interface PluginConfigMap {\n  /**\n   * A plugin config per key\n   */\n  [key: string]: PluginConfig;\n}\n\n/**\n * Injection token for the plugin config map\n */\nexport const PluginClasses = new InjectionToken('PluginClasses');\n\n    \n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/PluginConfigMap.html":{"url":"interfaces/PluginConfigMap.html","title":"interface - PluginConfigMap","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  PluginConfigMap\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            libs/ngx-editorjs-plugins/src/lib/types/plugins.ts\n        \n\n            \n                Description\n            \n            \n                A map of plugin configs\n\n            \n\n\n\n\n            \n    Indexable\n        \n            \n                \n                    \n                        [key: string]:        PluginConfig\n\n                    \n                \n                        \n                            \n                                Defined in libs/ngx-editorjs-plugins/src/lib/types/plugins.ts:98\n                            \n                        \n                \n                    \n                        A plugin config per key\n\n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { InjectionToken } from '@angular/core';\nimport { ToolSettings, ToolConstructable } from '@editorjs/editorjs';\n\n/**\n * Block Data interface\n */\nexport interface BlockData {\n  [key: string]: any;\n}\n\n/**\n * The types of plugins supported, currently block and inline\n */\nexport enum PluginTypes {\n  /**\n   * A EditorJS block plugin\n   */\n  Block = 'block',\n  /**\n   * A EditorJS inline plugin\n   */\n  Inline = 'inline'\n}\n\n/**\n * The types of plugins supported via the plugin `type` property\n */\nexport type PluginType = PluginTypes.Block | PluginTypes.Inline | string;\n\n/**\n * A plugin property\n */\nexport type PluginProperty = string;\n\n/**\n * The EditorJS tool settings for this plugin\n */\nexport type EditorJSPlugin = ToolConstructable | ToolSettings;\n\n/**\n * A map of all the tools settings\n */\nexport interface ToolSettingsMap {\n  /**\n   * The key of the plugin and the plugin exported tool settings\n   */\n  [key: string]: EditorJSPlugin;\n}\n\n/**\n * A plugin configuration object\n */\nexport interface PluginConfig {\n  /**\n   * Specifies the type of plugin for the plugin provider\n   */\n  type: PluginProperty;\n  /**\n   * The key to use for the plugin\n   */\n  key: PluginProperty;\n  /**\n   * Label for displaying the plugin name\n   */\n  pluginName: PluginProperty;\n  /**\n   * Optional description for the plugin\n   */\n  description?: PluginProperty;\n  /**\n   * Optional shortcut for the plugin\n   */\n  shortcut?: PluginProperty;\n  /**\n   * Optional block data, used to define the block data for this type\n   * and used as a default\n   */\n  blockData?: BlockData;\n  /**\n   * The plugin for the editor\n   */\n  plugin: EditorJSPlugin | undefined;\n}\n\n/**\n * The Injection token for initial plugins as defined in the ngx-editorjs module\n */\nexport const EDITOR_JS_TOOL_INJECTOR = new InjectionToken('EDITOR_JS_TOOL_INJECTOR');\n\n/**\n * Injection token for a plugin config\n */\nexport const PLUGIN_CONFIG = new InjectionToken('PLUGIN_CONFIG');\n\n/**\n * A map of plugin configs\n */\nexport interface PluginConfigMap {\n  /**\n   * A plugin config per key\n   */\n  [key: string]: PluginConfig;\n}\n\n/**\n * Injection token for the plugin config map\n */\nexport const PluginClasses = new InjectionToken('PluginClasses');\n\n    \n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/PluginHeaderModule.html":{"url":"modules/PluginHeaderModule.html","title":"module - PluginHeaderModule","body":"\n                   \n\n\n\n\n    Modules\n    PluginHeaderModule\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            libs/ngx-editorjs-plugins/src/lib/plugins/header/header.module.ts\n        \n\n\n        \n            Description\n        \n        \n            A module that provides the default EditorJS header block tool.\nSee the GitHub repo for API details\n\n        \n\n\n        \n            \n            \n        \n\n\n    \n\n\n    \n        import { NgModule } from '@angular/core';\nimport { EDITOR_JS_TOOL_INJECTOR, PLUGIN_CONFIG, PluginClasses, PluginTypes } from '../../types/plugins';\nimport Header from '@editorjs/header';\nimport { createPluginConfig } from '../../util/plugin';\n\n/**\n * A module that provides the default EditorJS header block tool.\n * See [the GitHub repo](https://github.com/editor-js/header) for API details\n */\n@NgModule({\n  providers: [\n    {\n      provide: EDITOR_JS_TOOL_INJECTOR,\n      useValue: Header,\n      multi: true\n    },\n    {\n      provide: PLUGIN_CONFIG,\n      useValue: {\n        key: 'header',\n        type: PluginTypes.Block,\n        pluginName: 'EditorJS Header'\n      },\n      multi: true\n    }\n  ]\n})\nexport class PluginHeaderModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/PluginImageModule.html":{"url":"modules/PluginImageModule.html","title":"module - PluginImageModule","body":"\n                   \n\n\n\n\n    Modules\n    PluginImageModule\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            libs/ngx-editorjs-plugins/src/lib/plugins/image/image.module.ts\n        \n\n\n        \n            Description\n        \n        \n            A module that provides the default EditorJS  block tool.\nSee the GitHub repo for API details\n\n        \n\n\n        \n            \n            \n        \n\n\n    \n\n\n    \n        import { NgModule } from '@angular/core';\nimport { EDITOR_JS_TOOL_INJECTOR, PLUGIN_CONFIG, PluginClasses, PluginTypes } from '../../types/plugins';\n\nimport Image from '@editorjs/image';\nimport { createPluginConfig } from '../../util/plugin';\n\n/**\n * A module that provides the default EditorJS `` block tool.\n * See [the GitHub repo](https://github.com/editor-js/image) for API details\n */\n@NgModule({\n  providers: [\n    {\n      provide: EDITOR_JS_TOOL_INJECTOR,\n      useValue: Image,\n      multi: true\n    },\n    {\n      provide: PLUGIN_CONFIG,\n      useValue: {\n        key: 'image',\n        type: PluginTypes.Block,\n        pluginName: 'EditorJS Image'\n      },\n      multi: true\n    }\n  ]\n})\nexport class PluginImageModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/PluginInlineCodeModule.html":{"url":"modules/PluginInlineCodeModule.html","title":"module - PluginInlineCodeModule","body":"\n                   \n\n\n\n\n    Modules\n    PluginInlineCodeModule\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            libs/ngx-editorjs-plugins/src/lib/plugins/inline-code/inline-code.module.ts\n        \n\n\n        \n            Description\n        \n        \n            A module that provides the default EditorJS  block tool.\nSee the GitHub repo for API details\n\n        \n\n\n        \n            \n            \n        \n\n\n    \n\n\n    \n        import { NgModule } from '@angular/core';\nimport { EDITOR_JS_TOOL_INJECTOR, PLUGIN_CONFIG, PluginTypes } from '../../types/plugins';\nimport InlineCode from '@editorjs/inline-code';\n\n/**\n * A module that provides the default EditorJS `` block tool.\n * See [the GitHub repo](https://github.com/editor-js/paragraph) for API details\n */\n@NgModule({\n  providers: [\n    {\n      provide: EDITOR_JS_TOOL_INJECTOR,\n      useValue: InlineCode,\n      multi: true\n    },\n    {\n      provide: PLUGIN_CONFIG,\n      useValue: {\n        key: 'inline-code',\n        type: PluginTypes.Inline,\n        pluginName: 'EditorJS Inline Code',\n        shortcut: 'CTRL+SHIFT+C'\n      },\n      multi: true\n    }\n  ]\n})\nexport class PluginInlineCodeModule {\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/PluginLinkModule.html":{"url":"modules/PluginLinkModule.html","title":"module - PluginLinkModule","body":"\n                   \n\n\n\n\n    Modules\n    PluginLinkModule\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            libs/ngx-editorjs-plugins/src/lib/plugins/link/link.module.ts\n        \n\n\n        \n            Description\n        \n        \n            A module that provides the default EditorJS  block tool.\nSee the GitHub repo for API details\n\n        \n\n\n        \n            \n            \n        \n\n\n    \n\n\n    \n        import { NgModule } from '@angular/core';\nimport { EDITOR_JS_TOOL_INJECTOR, PLUGIN_CONFIG, PluginClasses, PluginTypes } from '../../types/plugins';\n\nimport Link from '@editorjs/link';\nimport { createPluginConfig } from '../../util/plugin';\n\n/**\n * A module that provides the default EditorJS `` block tool.\n * See [the GitHub repo](https://github.com/editor-js/image) for API details\n */\n@NgModule({\n  providers: [\n    {\n      provide: EDITOR_JS_TOOL_INJECTOR,\n      useValue: Link,\n      multi: true\n    },\n    {\n      provide: PLUGIN_CONFIG,\n      useValue: {\n        key: 'link',\n        type: PluginTypes.Block,\n        pluginName: 'EditorJS Link'\n      },\n      multi: true\n    }\n  ]\n})\nexport class PluginLinkModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/PluginListModule.html":{"url":"modules/PluginListModule.html","title":"module - PluginListModule","body":"\n                   \n\n\n\n\n    Modules\n    PluginListModule\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            libs/ngx-editorjs-plugins/src/lib/plugins/list/list.module.ts\n        \n\n\n        \n            Description\n        \n        \n            A module that provides the default EditorJS  block tool.\nSee the GitHub repo for API details\n\n        \n\n\n        \n            \n            \n        \n\n\n    \n\n\n    \n        import { NgModule } from '@angular/core';\nimport { EDITOR_JS_TOOL_INJECTOR, PLUGIN_CONFIG, PluginClasses, PluginTypes } from '../../types/plugins';\n\nimport List from '@editorjs/list';\nimport { createPluginConfig } from '../../util/plugin';\n\n/**\n * A module that provides the default EditorJS `` block tool.\n * See [the GitHub repo](https://github.com/editor-js/image) for API details\n */\n@NgModule({\n  providers: [\n    {\n      provide: EDITOR_JS_TOOL_INJECTOR,\n      useValue: List,\n      multi: true\n    },\n    {\n      provide: PLUGIN_CONFIG,\n      useValue: {\n        key: 'list',\n        type: PluginTypes.Block,\n        pluginName: 'EditorJS List'\n      },\n      multi: true\n    }\n  ]\n})\nexport class PluginListModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/PluginMarkerModule.html":{"url":"modules/PluginMarkerModule.html","title":"module - PluginMarkerModule","body":"\n                   \n\n\n\n\n    Modules\n    PluginMarkerModule\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            libs/ngx-editorjs-plugins/src/lib/plugins/marker/marker.module.ts\n        \n\n\n        \n            Description\n        \n        \n            A module that provides the default EditorJS  block tool.\nSee the GitHub repo for API details\n\n        \n\n\n        \n            \n            \n        \n\n\n    \n\n\n    \n        import { NgModule } from '@angular/core';\nimport { EDITOR_JS_TOOL_INJECTOR, PLUGIN_CONFIG, PluginClasses, PluginTypes } from '../../types/plugins';\nimport Marker from '@editorjs/paragraph';\nimport { createPluginConfig } from '../../util/plugin';\n\n/**\n * A module that provides the default EditorJS `` block tool.\n * See [the GitHub repo](https://github.com/editor-js/paragraph) for API details\n */\n@NgModule({\n  providers: [\n    {\n      provide: EDITOR_JS_TOOL_INJECTOR,\n      useValue: Marker,\n      multi: true\n    },\n    {\n      provide: PLUGIN_CONFIG,\n      useValue: {\n        key: 'paragraph',\n        type: PluginTypes.Inline,\n        pluginName: 'EditorJS Marker',\n        shortcut: 'CTRL+SHIFT+M'\n      },\n      multi: true\n    }\n  ]\n})\nexport class PluginMarkerModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/PluginParagraphModule.html":{"url":"modules/PluginParagraphModule.html","title":"module - PluginParagraphModule","body":"\n                   \n\n\n\n\n    Modules\n    PluginParagraphModule\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            libs/ngx-editorjs-plugins/src/lib/plugins/paragraph/paragraph.module.ts\n        \n\n\n        \n            Description\n        \n        \n            A module that provides the default EditorJS  block tool.\nSee the GitHub repo for API details\n\n        \n\n\n        \n            \n            \n        \n\n\n    \n\n\n    \n        import { NgModule } from '@angular/core';\nimport { EDITOR_JS_TOOL_INJECTOR, PLUGIN_CONFIG, PluginTypes } from '../../types/plugins';\nimport Paragraph from '@editorjs/paragraph';\n\n/**\n * A module that provides the default EditorJS `` block tool.\n * See [the GitHub repo](https://github.com/editor-js/paragraph) for API details\n */\n@NgModule({\n  providers: [\n    {\n      provide: EDITOR_JS_TOOL_INJECTOR,\n      useValue: Paragraph,\n      multi: true\n    },\n    {\n      provide: PLUGIN_CONFIG,\n      useValue: {\n        key: 'paragraph',\n        type: PluginTypes.Block,\n        pluginName: 'EditorJS Paragraph'\n      },\n      multi: true\n    }\n  ]\n})\nexport class PluginParagraphModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/PluginSimpleImageModule.html":{"url":"modules/PluginSimpleImageModule.html","title":"module - PluginSimpleImageModule","body":"\n                   \n\n\n\n\n    Modules\n    PluginSimpleImageModule\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            libs/ngx-editorjs-plugins/src/lib/plugins/simple-image/simple-image.module.ts\n        \n\n\n        \n            Description\n        \n        \n            A module that provides the default EditorJS  block tool.\nSee the GitHub repo for API details\n\n        \n\n\n        \n            \n            \n        \n\n\n    \n\n\n    \n        import { NgModule } from '@angular/core';\nimport { EDITOR_JS_TOOL_INJECTOR, PLUGIN_CONFIG, PluginClasses, PluginTypes } from '../../types/plugins';\n\nimport SimpleImage from '@editorjs/simple-image';\nimport { createPluginConfig } from '../../util/plugin';\n\n/**\n * A module that provides the default EditorJS `` block tool.\n * See [the GitHub repo](https://github.com/editor-js/image) for API details\n */\n@NgModule({\n  providers: [\n    {\n      provide: EDITOR_JS_TOOL_INJECTOR,\n      useValue: SimpleImage,\n      multi: true\n    },\n    {\n      provide: PLUGIN_CONFIG,\n      useValue: {\n        key: 'simpleimage',\n        type: PluginTypes.Block,\n        pluginName: 'EditorJS Simple Image'\n      },\n      multi: true\n    }\n  ]\n})\nexport class PluginSimpleImageModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/ReadyMap.html":{"url":"interfaces/ReadyMap.html","title":"interface - ReadyMap","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  ReadyMap\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            libs/ngx-editorjs/src/lib/types/maps.ts\n        \n\n            \n                Description\n            \n            \n                A map containing BehaviorSubject values of the ready state of EditorJS\n\n            \n\n\n\n\n            \n    Indexable\n        \n            \n                \n                    \n                        [key: string]:    BehaviorSubject\n\n                    \n                \n                        \n                            \n                                Defined in libs/ngx-editorjs/src/lib/types/maps.ts:18\n                            \n                        \n                \n                    \n                        A map key containing a BehaviorSubject\n\n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import EditorJS, { OutputData } from '@editorjs/editorjs';\nimport { BehaviorSubject } from 'rxjs';\nimport { Block } from './blocks';\n\n/**\n * A map containing instances of `BehaviorSubject`\n */\nexport interface EditorMap {\n  /**\n   * A map key containing `BehaviorSubject`\n   */\n  [key: string]: BehaviorSubject;\n}\n\n/**\n * A map containing `BehaviorSubject` values of the ready state of EditorJS\n */\nexport interface ReadyMap {\n  /**\n   * A map key containing a `BehaviorSubject`\n   */\n  [key: string]: BehaviorSubject;\n}\n\n/**\n * A map containing `BehaviorSubject` values of the save state of EditorJS\n */\nexport interface SavedMap {\n  /**\n   * A map key containing a `BehaviorSubject`\n   */\n  [key: string]: BehaviorSubject;\n}\n\n/**\n * An EditorJS change event\n */\nexport interface EditorJSChange {\n  /**\n   * Time of the change\n   */\n  time: number;\n  /**\n   * Blocks in the change\n   */\n  blocks: Block[];\n}\n\n/**\n * A map containing `BehaviorSubject` which is the last save from the EditorJS instance\n */\nexport interface ChangeMap {\n  /**\n   * A map key containing a `BehaviorSubject`\n   */\n  [key: string]: BehaviorSubject;\n}\n\n    \n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/SavedMap.html":{"url":"interfaces/SavedMap.html","title":"interface - SavedMap","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  SavedMap\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            libs/ngx-editorjs/src/lib/types/maps.ts\n        \n\n            \n                Description\n            \n            \n                A map containing BehaviorSubject values of the save state of EditorJS\n\n            \n\n\n\n\n            \n    Indexable\n        \n            \n                \n                    \n                        [key: string]:    BehaviorSubject\n\n                    \n                \n                        \n                            \n                                Defined in libs/ngx-editorjs/src/lib/types/maps.ts:28\n                            \n                        \n                \n                    \n                        A map key containing a BehaviorSubject\n\n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import EditorJS, { OutputData } from '@editorjs/editorjs';\nimport { BehaviorSubject } from 'rxjs';\nimport { Block } from './blocks';\n\n/**\n * A map containing instances of `BehaviorSubject`\n */\nexport interface EditorMap {\n  /**\n   * A map key containing `BehaviorSubject`\n   */\n  [key: string]: BehaviorSubject;\n}\n\n/**\n * A map containing `BehaviorSubject` values of the ready state of EditorJS\n */\nexport interface ReadyMap {\n  /**\n   * A map key containing a `BehaviorSubject`\n   */\n  [key: string]: BehaviorSubject;\n}\n\n/**\n * A map containing `BehaviorSubject` values of the save state of EditorJS\n */\nexport interface SavedMap {\n  /**\n   * A map key containing a `BehaviorSubject`\n   */\n  [key: string]: BehaviorSubject;\n}\n\n/**\n * An EditorJS change event\n */\nexport interface EditorJSChange {\n  /**\n   * Time of the change\n   */\n  time: number;\n  /**\n   * Blocks in the change\n   */\n  blocks: Block[];\n}\n\n/**\n * A map containing `BehaviorSubject` which is the last save from the EditorJS instance\n */\nexport interface ChangeMap {\n  /**\n   * A map key containing a `BehaviorSubject`\n   */\n  [key: string]: BehaviorSubject;\n}\n\n    \n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/ToolSettingsMap.html":{"url":"interfaces/ToolSettingsMap.html","title":"interface - ToolSettingsMap","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  ToolSettingsMap\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            libs/ngx-editorjs-plugins/src/lib/types/plugins.ts\n        \n\n            \n                Description\n            \n            \n                A map of all the tools settings\n\n            \n\n\n\n\n            \n    Indexable\n        \n            \n                \n                    \n                        [key: string]:        EditorJSPlugin\n\n                    \n                \n                        \n                            \n                                Defined in libs/ngx-editorjs-plugins/src/lib/types/plugins.ts:43\n                            \n                        \n                \n                    \n                        The key of the plugin and the plugin exported tool settings\n\n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { InjectionToken } from '@angular/core';\nimport { ToolSettings, ToolConstructable } from '@editorjs/editorjs';\n\n/**\n * Block Data interface\n */\nexport interface BlockData {\n  [key: string]: any;\n}\n\n/**\n * The types of plugins supported, currently block and inline\n */\nexport enum PluginTypes {\n  /**\n   * A EditorJS block plugin\n   */\n  Block = 'block',\n  /**\n   * A EditorJS inline plugin\n   */\n  Inline = 'inline'\n}\n\n/**\n * The types of plugins supported via the plugin `type` property\n */\nexport type PluginType = PluginTypes.Block | PluginTypes.Inline | string;\n\n/**\n * A plugin property\n */\nexport type PluginProperty = string;\n\n/**\n * The EditorJS tool settings for this plugin\n */\nexport type EditorJSPlugin = ToolConstructable | ToolSettings;\n\n/**\n * A map of all the tools settings\n */\nexport interface ToolSettingsMap {\n  /**\n   * The key of the plugin and the plugin exported tool settings\n   */\n  [key: string]: EditorJSPlugin;\n}\n\n/**\n * A plugin configuration object\n */\nexport interface PluginConfig {\n  /**\n   * Specifies the type of plugin for the plugin provider\n   */\n  type: PluginProperty;\n  /**\n   * The key to use for the plugin\n   */\n  key: PluginProperty;\n  /**\n   * Label for displaying the plugin name\n   */\n  pluginName: PluginProperty;\n  /**\n   * Optional description for the plugin\n   */\n  description?: PluginProperty;\n  /**\n   * Optional shortcut for the plugin\n   */\n  shortcut?: PluginProperty;\n  /**\n   * Optional block data, used to define the block data for this type\n   * and used as a default\n   */\n  blockData?: BlockData;\n  /**\n   * The plugin for the editor\n   */\n  plugin: EditorJSPlugin | undefined;\n}\n\n/**\n * The Injection token for initial plugins as defined in the ngx-editorjs module\n */\nexport const EDITOR_JS_TOOL_INJECTOR = new InjectionToken('EDITOR_JS_TOOL_INJECTOR');\n\n/**\n * Injection token for a plugin config\n */\nexport const PLUGIN_CONFIG = new InjectionToken('PLUGIN_CONFIG');\n\n/**\n * A map of plugin configs\n */\nexport interface PluginConfigMap {\n  /**\n   * A plugin config per key\n   */\n  [key: string]: PluginConfig;\n}\n\n/**\n * Injection token for the plugin config map\n */\nexport const PluginClasses = new InjectionToken('PluginClasses');\n\n    \n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"changelog.html":{"url":"changelog.html","title":"getting-started - changelog","body":"\n                   \n\nTinynodes Changelog\n\nThis changelog is related to the overall site. You can also find changelogs for libraries under the library docs\n\n\nUNRELEASED\nToday @tinynodes/ngx-editorjs@3.0.0 has been released, along with @tinynodes/ngx-editorjs-plugins@2.0.0\nThe plugin architecture of the components has been re-written so that plugins are just NgModule classes\nthat provide multi providers for injecting plugins and their configuration.  These are merged into a map\nthat the NgxEditorJSPluginService now provides, and provides methods to getting tool options for instances.\nThis means the plugin module is now a dependency of the project.\nInternally there is some tidy-up related to this, and better async/await handling of the instance creation\nalong with API calls.  The Material demo \nhas been updated as well with improvements on using the component in an application.\nWednesday, 22nd May 2019\nToday @tinynodes/ngx-editorjs@2.0.0 has been released. The major bump is due to underlying changes that may be breaking - the entire service has been improved with better control over the EditorJS interface. Also in this release the exiting component has been upgraded to work with Angular Forms, and there is a new Material Form Field component provided too.\nThe demo has also been updated to reflect the new features of this, and a new demo added for the Material component.\nWednesday, 15th May 2019\nToday I have released @tinynodes/ngx-editorjs@1.3.2. This will be without a Forms component. In this release the main change is internally I'm using a new EditorJS Injector module I've created to handle managing the underlying instance. There are also a lot of documentation improvements and a completly new updated demo site.\nMonday, 13th May 2019\nToday I have released @tinynodes/ngx-editorjs@1.2.0. For now I've removed any default plugins from core package, now all plugins must be added at the application level - this can be see in the demo app.\nSunday, 12th May 2019\nThe first devlog is to report that currently version 1.2 has been delayed due to current build issues.\nA bug report has been filed on @nrwl/nx project.\nIn 1.2 there is a new @tinynodes/ngx-editorjs-plugins module that provides exports for several common EditorJS plugins and will be expanded to cover all the officially released plugins.\nWith this change the current build scripts break, and until it is resolved this will block the release.\nIn the meantime I'll continue to work on this small demo site, making it more useful as a good example of an Angular app.\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"contributing.html":{"url":"contributing.html","title":"getting-started - contributing","body":"\n                   \n\nContributing\nWhen contributing to this repository, please first discuss the change you wish to make via issue,\nemail, or any other method with the owners of this repository before making a change.\nPlease note we have a code of conduct, please follow it in all your interactions with the project.\nPull Request Process\n\nEnsure any install or build dependencies are removed before the end of the layer when doing a\nbuild.\nUpdate the README.md with details of changes to the interface, this includes new environment\nvariables, exposed ports, useful file locations and container parameters.\nIncrease the version numbers in any examples files and the README.md to the new version that this\nPull Request would represent. The versioning scheme we use is SemVer.\nYou may merge the Pull Request in once you have the sign-off of two other developers, or if you\ndo not have permission to do that, you may request the second reviewer to merge it for you.\n\nCode of Conduct\nOur Pledge\nIn the interest of fostering an open and welcoming environment, we as\ncontributors and maintainers pledge to making participation in our project and\nour community a harassment-free experience for everyone, regardless of age, body\nsize, disability, ethnicity, gender identity and expression, level of experience,\nnationality, personal appearance, race, religion, or sexual identity and\norientation.\nOur Standards\nExamples of behavior that contributes to creating a positive environment\ninclude:\n\nUsing welcoming and inclusive language\nBeing respectful of differing viewpoints and experiences\nGracefully accepting constructive criticism\nFocusing on what is best for the community\nShowing empathy towards other community members\n\nExamples of unacceptable behavior by participants include:\n\nThe use of sexualized language or imagery and unwelcome sexual attention or\nadvances\nTrolling, insulting/derogatory comments, and personal or political attacks\nPublic or private harassment\nPublishing others' private information, such as a physical or electronic\naddress, without explicit permission\nOther conduct which could reasonably be considered inappropriate in a\nprofessional setting\n\nOur Responsibilities\nProject maintainers are responsible for clarifying the standards of acceptable\nbehavior and are expected to take appropriate and fair corrective action in\nresponse to any instances of unacceptable behavior.\nProject maintainers have the right and responsibility to remove, edit, or\nreject comments, commits, code, wiki edits, issues, and other contributions\nthat are not aligned to this Code of Conduct, or to ban temporarily or\npermanently any contributor for other behaviors that they deem inappropriate,\nthreatening, offensive, or harmful.\nScope\nThis Code of Conduct applies both within project spaces and in public spaces\nwhen an individual is representing the project or its community. Examples of\nrepresenting a project or community include using an official project e-mail\naddress, posting via an official social media account, or acting as an appointed\nrepresentative at an online or offline event. Representation of a project may be\nfurther defined and clarified by project maintainers.\nEnforcement\nInstances of abusive, harassing, or otherwise unacceptable behavior may be\nreported by contacting the project team at me@tane.dev. All\ncomplaints will be reviewed and investigated and will result in a response that\nis deemed necessary and appropriate to the circumstances. The project team is\nobligated to maintain confidentiality with regard to the reporter of an incident.\nFurther details of specific enforcement policies may be posted separately.\nProject maintainers who do not follow or enforce the Code of Conduct in good\nfaith may face temporary or permanent repercussions as determined by other\nmembers of the project's leadership.\nAttribution\nThis Code of Conduct is adapted from the Contributor Covenant, version 1.4,\navailable at http://contributor-covenant.org/version/1/4\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"dependencies.html":{"url":"dependencies.html","title":"package-dependencies - dependencies","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        Dependencies\n    \n    \n        \n            @angular/animations : ~8.0.0\n        \n            @angular/cdk : ~8.0.0\n        \n            @angular/common : ~8.0.0\n        \n            @angular/compiler : ~8.0.0\n        \n            @angular/core : ~8.0.0\n        \n            @angular/flex-layout : ~8.0.0-beta.26\n        \n            @angular/forms : ~8.0.0\n        \n            @angular/material : ~8.0.0\n        \n            @angular/platform-browser : ~8.0.0\n        \n            @angular/platform-browser-dynamic : ~8.0.0\n        \n            @angular/router : ~8.0.0\n        \n            @ngrx/effects : ~7.4.0\n        \n            @ngrx/store : ~7.4.0\n        \n            core-js : ~3.1.3\n        \n            hammerjs : ~2.0.8\n        \n            install : ~0.12.2\n        \n            ngx-hideable-header : 0.0.5\n        \n            ngx-json-viewer : ~2.4.0\n        \n            npm : ~6.9.0\n        \n            rxjs : ~6.5.2\n        \n            zone.js : ~0.9.1\n    \n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/enumerations.html":{"url":"miscellaneous/enumerations.html","title":"miscellaneous-enumerations - enumerations","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous\n  Enumerations\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            PluginTypes   (libs/.../plugins.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    libs/ngx-editorjs-plugins/src/lib/types/plugins.ts\n    \n        \n            \n                \n                    \n                        \n                        PluginTypes\n                    \n                \n                    \n                        \n                            The types of plugins supported, currently block and inline\n\n                        \n                    \n                        \n                            \n                                 Block\n                            \n                        \n                        \n                            \n                                Value : block\n                            \n                        \n                        \n                            \n                                 Inline\n                            \n                        \n                        \n                            \n                                Value : inline\n                            \n                        \n            \n        \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/functions.html":{"url":"miscellaneous/functions.html","title":"miscellaneous-functions - functions","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous\n  Functions\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            createEditorJSConfig   (libs/.../editor-config.ts)\n                        \n                        \n                            createEditorJSInstance   (libs/.../ngx-editorjs.module.ts)\n                        \n                        \n                            createModuleConfig   (libs/.../module-config.ts)\n                        \n                        \n                            createPluginConfig   (libs/.../plugin.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    libs/ngx-editorjs/src/lib/config/editor-config.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        \n                            createEditorJSConfig\n                        \n                        \n                    \n                \n            \n            \n                \ncreateEditorJSConfig(inputConfig?)\n                \n            \n\n\n\n\n            \n                \n                    Creates an EditorJS configuration, only returning keys that are set\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    inputConfig\n\n                                    \n                                        Yes\n                                    \n\n\n                                    \n                                        Optional config to use to set values\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     EditorConfig\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    libs/ngx-editorjs/src/lib/ngx-editorjs.module.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        \n                            createEditorJSInstance\n                        \n                        \n                    \n                \n            \n            \n                \ncreateEditorJSInstance(editorjs: any)\n                \n            \n\n\n\n\n            \n                \n                    Factory function to return the EditorJS base class\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    editorjs\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                \n            \n        \n    \n    libs/ngx-editorjs/src/lib/config/module-config.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        \n                            createModuleConfig\n                        \n                        \n                    \n                \n            \n            \n                \ncreateModuleConfig(config?)\n                \n            \n\n\n\n\n            \n                \n                    Method to return an module configuration\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    config\n\n                                    \n                                        Yes\n                                    \n\n\n                                    \n                                        Optional module configurations\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         NgxEditorJSModuleConfig\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    libs/ngx-editorjs-plugins/src/lib/util/plugin.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        \n                            createPluginConfig\n                        \n                        \n                    \n                \n            \n            \n                \ncreatePluginConfig(pluginConfigs, plugins)\n                \n            \n\n\n\n\n            \n                \n                    Factory function to create the plugin config map for the plugin service\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    pluginConfigs\n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        The array of plugin configuration objects passed to this factory\n\n                                    \n                                \n                                \n                                    plugins\n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        The array of EditorJS plugins that are passed to this factory\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                \n            \n        \n    \n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"index.html":{"url":"index.html","title":"getting-started - index","body":"\n                   \n\nNgx-Tinynodes\nThis repository is a collection of Angular components and demos with full documentation.\nSee the Changelog for the\ndevelopment diary of this site, or visit the documentation of libraries.\nYou can also find a fully searchable API documentation for all @tinynode components.\nLinks\n\nRepository\nDocumentation\nDemo Application Site\nNPM Collection\n\nLibraries\nngx-editorjs\nThis library provides Angular support for EditorJS. Inside the module you will find:\n\nNgxEditorJSDirective - An Angular Directive used to attach an EditorJS instance to any block DOM element\nNgxEditorJSComponent - An out-of-the-box Angular component that is Reactive Forms compatible\nNgxEditorJSMaterialFieldComponent An Angular Material Form Field component that provides all the required properties and life-cycle events required. See the Form Demo on an example usage\nNgxEditorJSService - A Service that can be injected into an application to provide a interface to interact with EditorJS instances. Underneath are the private NgxEditorJSPluginService and NgxEditorJSInstanceService services. These are private but can be imported via ɵNgxEditorJSPluginService and ɵNgxEditorJSInstanceService from the library if you want to use them.\n\nWithin these components you will be able to access the underlying EditorJS instance, for use see the EditorJS API Docs\nBelow are the dependencies to use the features.\n@tinynodes/ngx-editorjs\nThis project provides a set of features for using EditorJS within Angular 7+\n\nReadme\nChangelog\nDemo\nProject Folder\n\n@tinynodes/ngx-editorjs-plugins\nThis project provides the plugin service module that exports handles\n plugins for @tinynodes/ngx-editorjs. The module also ships a set of default\n plugins and documentation on how to add new ones easily.\n\nReadme\nChangelog\nProject Folder\n\nDevelopment Information\nThis repository is run by Tane Piper and was generated using Nx.\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"license.html":{"url":"license.html","title":"getting-started - license","body":"\n                   \n\nTinynodes General MIT Licence\nCopyright 2019 Tane Piper me@tane.dev\nPermission is hereby granted, free of charge, to any person obtaining a copy of this software and associated documentation files (the \"Software\"), to deal in the Software without restriction, including without limitation the rights to use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of the Software, and to permit persons to whom the Software is furnished to do so, subject to the following conditions:\nThe above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software.\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules.html":{"url":"modules.html","title":"modules - modules","body":"\n                   \n\n\n\n\n    Modules\n\n\n    \n            \n                \n                    \n                        NgxEditorJSModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        NgxEditorjsPluginsModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        NgxPluginServiceModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        NgxTinynodesComponentsModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        NgxTinynodesMatJsonOutputModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        NgxTinynodesMatTagInputModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        PluginCodeModule\n                    \n                    \n                                \n                                    No graph available.\n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        PluginHeaderModule\n                    \n                    \n                                \n                                    No graph available.\n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        PluginImageModule\n                    \n                    \n                                \n                                    No graph available.\n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        PluginInlineCodeModule\n                    \n                    \n                                \n                                    No graph available.\n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        PluginLinkModule\n                    \n                    \n                                \n                                    No graph available.\n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        PluginListModule\n                    \n                    \n                                \n                                    No graph available.\n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        PluginMarkerModule\n                    \n                    \n                                \n                                    No graph available.\n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        PluginParagraphModule\n                    \n                    \n                                \n                                    No graph available.\n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        PluginSimpleImageModule\n                    \n                    \n                                \n                                    No graph available.\n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"overview.html":{"url":"overview.html","title":"overview - overview","body":"\n                   \n\n\n\n    Overview\n\n  \n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_NgxEditorJSModule\n\n\n\ncluster_NgxEditorJSModule_declarations\n\n\n\ncluster_NgxEditorJSModule_imports\n\n\n\ncluster_NgxEditorJSModule_exports\n\n\n\ncluster_NgxEditorJSModule_providers\n\n\n\ncluster_NgxEditorjsPluginsModule\n\n\n\ncluster_NgxEditorjsPluginsModule_imports\n\n\n\ncluster_NgxEditorjsPluginsModule_exports\n\n\n\ncluster_NgxPluginServiceModule\n\n\n\ncluster_NgxPluginServiceModule_providers\n\n\n\ncluster_NgxTinynodesComponentsModule\n\n\n\ncluster_NgxTinynodesComponentsModule_imports\n\n\n\ncluster_NgxTinynodesComponentsModule_exports\n\n\n\ncluster_NgxTinynodesMatJsonOutputModule\n\n\n\ncluster_NgxTinynodesMatJsonOutputModule_declarations\n\n\n\ncluster_NgxTinynodesMatJsonOutputModule_exports\n\n\n\ncluster_NgxTinynodesMatTagInputModule\n\n\n\ncluster_NgxTinynodesMatTagInputModule_declarations\n\n\n\ncluster_NgxTinynodesMatTagInputModule_NgxTinynodesMatTagInputComponent_providers\n\n\n\ncluster_NgxTinynodesMatTagInputModule_exports\n\n\n\n\nNgxEditorJSComponent\n\nNgxEditorJSComponent\n\n\n\nNgxEditorJSModule\n\nNgxEditorJSModule\n\nNgxEditorJSModule -->\n\nNgxEditorJSComponent->NgxEditorJSModule\n\n\n\n\n\nNgxEditorJSDirective\n\nNgxEditorJSDirective\n\nNgxEditorJSModule -->\n\nNgxEditorJSDirective->NgxEditorJSModule\n\n\n\n\n\nNgxEditorJSMatFieldComponent\n\nNgxEditorJSMatFieldComponent\n\nNgxEditorJSModule -->\n\nNgxEditorJSMatFieldComponent->NgxEditorJSModule\n\n\n\n\n\nNgxEditorJSComponent \n\nNgxEditorJSComponent \n\nNgxEditorJSComponent  -->\n\nNgxEditorJSModule->NgxEditorJSComponent \n\n\n\n\n\nNgxEditorJSDirective \n\nNgxEditorJSDirective \n\nNgxEditorJSDirective  -->\n\nNgxEditorJSModule->NgxEditorJSDirective \n\n\n\n\n\nNgxEditorJSMatFieldComponent \n\nNgxEditorJSMatFieldComponent \n\nNgxEditorJSMatFieldComponent  -->\n\nNgxEditorJSModule->NgxEditorJSMatFieldComponent \n\n\n\n\n\nNgxEditorjsPluginsModule\n\nNgxEditorjsPluginsModule\n\nNgxEditorJSModule -->\n\nNgxEditorjsPluginsModule->NgxEditorJSModule\n\n\n\n\n\nNgxPluginServiceModule \n\nNgxPluginServiceModule \n\nNgxPluginServiceModule  -->\n\nNgxEditorjsPluginsModule->NgxPluginServiceModule \n\n\n\n\n\nPluginCodeModule \n\nPluginCodeModule \n\nPluginCodeModule  -->\n\nNgxEditorjsPluginsModule->PluginCodeModule \n\n\n\n\n\nPluginHeaderModule \n\nPluginHeaderModule \n\nPluginHeaderModule  -->\n\nNgxEditorjsPluginsModule->PluginHeaderModule \n\n\n\n\n\nPluginImageModule \n\nPluginImageModule \n\nPluginImageModule  -->\n\nNgxEditorjsPluginsModule->PluginImageModule \n\n\n\n\n\nPluginInlineCodeModule \n\nPluginInlineCodeModule \n\nPluginInlineCodeModule  -->\n\nNgxEditorjsPluginsModule->PluginInlineCodeModule \n\n\n\n\n\nPluginLinkModule \n\nPluginLinkModule \n\nPluginLinkModule  -->\n\nNgxEditorjsPluginsModule->PluginLinkModule \n\n\n\n\n\nPluginListModule \n\nPluginListModule \n\nPluginListModule  -->\n\nNgxEditorjsPluginsModule->PluginListModule \n\n\n\n\n\nPluginMarkerModule \n\nPluginMarkerModule \n\nPluginMarkerModule  -->\n\nNgxEditorjsPluginsModule->PluginMarkerModule \n\n\n\n\n\nPluginParagraphModule \n\nPluginParagraphModule \n\nPluginParagraphModule  -->\n\nNgxEditorjsPluginsModule->PluginParagraphModule \n\n\n\n\n\nPluginSimpleImageModule \n\nPluginSimpleImageModule \n\nPluginSimpleImageModule  -->\n\nNgxEditorjsPluginsModule->PluginSimpleImageModule \n\n\n\n\n\nNgxEditorJSService\n\nNgxEditorJSService\n\nNgxEditorJSModule -->\n\nNgxEditorJSService->NgxEditorJSModule\n\n\n\n\n\nNgxPluginServiceModule\n\nNgxPluginServiceModule\n\nNgxEditorjsPluginsModule -->\n\nNgxPluginServiceModule->NgxEditorjsPluginsModule\n\n\n\n\n\nPluginCodeModule\n\nPluginCodeModule\n\nNgxEditorjsPluginsModule -->\n\nPluginCodeModule->NgxEditorjsPluginsModule\n\n\n\n\n\nPluginHeaderModule\n\nPluginHeaderModule\n\nNgxEditorjsPluginsModule -->\n\nPluginHeaderModule->NgxEditorjsPluginsModule\n\n\n\n\n\nPluginImageModule\n\nPluginImageModule\n\nNgxEditorjsPluginsModule -->\n\nPluginImageModule->NgxEditorjsPluginsModule\n\n\n\n\n\nPluginInlineCodeModule\n\nPluginInlineCodeModule\n\nNgxEditorjsPluginsModule -->\n\nPluginInlineCodeModule->NgxEditorjsPluginsModule\n\n\n\n\n\nPluginLinkModule\n\nPluginLinkModule\n\nNgxEditorjsPluginsModule -->\n\nPluginLinkModule->NgxEditorjsPluginsModule\n\n\n\n\n\nPluginListModule\n\nPluginListModule\n\nNgxEditorjsPluginsModule -->\n\nPluginListModule->NgxEditorjsPluginsModule\n\n\n\n\n\nPluginMarkerModule\n\nPluginMarkerModule\n\nNgxEditorjsPluginsModule -->\n\nPluginMarkerModule->NgxEditorjsPluginsModule\n\n\n\n\n\nPluginParagraphModule\n\nPluginParagraphModule\n\nNgxEditorjsPluginsModule -->\n\nPluginParagraphModule->NgxEditorjsPluginsModule\n\n\n\n\n\nPluginSimpleImageModule\n\nPluginSimpleImageModule\n\nNgxEditorjsPluginsModule -->\n\nPluginSimpleImageModule->NgxEditorjsPluginsModule\n\n\n\n\n\nNgxEditorJSPluginService\n\nNgxEditorJSPluginService\n\nNgxPluginServiceModule -->\n\nNgxEditorJSPluginService->NgxPluginServiceModule\n\n\n\n\n\nNgxTinynodesMatJsonOutputModule\n\nNgxTinynodesMatJsonOutputModule\n\n\n\nNgxTinynodesComponentsModule\n\nNgxTinynodesComponentsModule\n\nNgxTinynodesComponentsModule -->\n\nNgxTinynodesMatJsonOutputModule->NgxTinynodesComponentsModule\n\n\n\n\n\nNgxTinynodesMatJsonOutputComponent \n\nNgxTinynodesMatJsonOutputComponent \n\nNgxTinynodesMatJsonOutputComponent  -->\n\nNgxTinynodesMatJsonOutputModule->NgxTinynodesMatJsonOutputComponent \n\n\n\n\n\nNgxTinynodesMatTagInputModule\n\nNgxTinynodesMatTagInputModule\n\nNgxTinynodesComponentsModule -->\n\nNgxTinynodesMatTagInputModule->NgxTinynodesComponentsModule\n\n\n\n\n\nNgxTinynodesMatTagInputComponent \n\nNgxTinynodesMatTagInputComponent \n\nNgxTinynodesMatTagInputComponent  -->\n\nNgxTinynodesMatTagInputModule->NgxTinynodesMatTagInputComponent \n\n\n\n\n\nNgxTinynodesMatJsonOutputModule \n\nNgxTinynodesMatJsonOutputModule \n\nNgxTinynodesMatJsonOutputModule  -->\n\nNgxTinynodesComponentsModule->NgxTinynodesMatJsonOutputModule \n\n\n\n\n\nNgxTinynodesMatTagInputModule \n\nNgxTinynodesMatTagInputModule \n\nNgxTinynodesMatTagInputModule  -->\n\nNgxTinynodesComponentsModule->NgxTinynodesMatTagInputModule \n\n\n\n\n\nNgxTinynodesMatJsonOutputComponent\n\nNgxTinynodesMatJsonOutputComponent\n\nNgxTinynodesMatJsonOutputModule -->\n\nNgxTinynodesMatJsonOutputComponent->NgxTinynodesMatJsonOutputModule\n\n\n\n\n\nNgxTinynodesMatTagInputComponent\n\nNgxTinynodesMatTagInputComponent\n\nNgxTinynodesMatTagInputModule -->\n\nNgxTinynodesMatTagInputComponent->NgxTinynodesMatTagInputModule\n\n\n\n\n\nTAG_COMPONENT_VALUE_ACCESSOR\n\nTAG_COMPONENT_VALUE_ACCESSOR\n\nNgxTinynodesMatTagInputComponent -->\n\nTAG_COMPONENT_VALUE_ACCESSOR->NgxTinynodesMatTagInputComponent\n\n\n\n\n\nTAG_COMPONENT_FIELD_CONTROL\n\nTAG_COMPONENT_FIELD_CONTROL\n\nNgxTinynodesMatTagInputComponent -->\n\nTAG_COMPONENT_FIELD_CONTROL->NgxTinynodesMatTagInputComponent\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n  \n\n    \n        \n            \n                \n                    \n                    \n                        15 Modules\n                    \n                \n            \n        \n        \n            \n                \n                    \n                    4 Components\n                \n            \n        \n        \n            \n                \n                    \n                    1 Directive\n                \n            \n        \n        \n            \n                \n                    \n                    2 Injectables\n                \n            \n        \n        \n            \n                \n                    \n                    28 Interfaces\n                \n            \n        \n    \n\n\n \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"todo.html":{"url":"todo.html","title":"getting-started - todo","body":"\n                   \n\nngx-tinynodes Todo\nGeneral Todos\n\n Add CI pipeline for publishing modules\n Publish doc changes and tags back to repo\n\nngx-editorjs\n\n Add full EditorJS config support\n Add config options as @Input on component and directive\n Add autosave option support to module config\n Expose EditorJS CoreAPI via service helpers (e.g. blocks, selection, etc)\n ~~Provide peer-dependency ngrx/effects via library to control service~~\n\nngx-editorjs-demo\n\n Add store for page\n Add controls for setting editor\n Add Save feature\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/typealiases.html":{"url":"miscellaneous/typealiases.html","title":"miscellaneous-typealiases - typealiases","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous\n  Type aliases\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            BlockTypes   (libs/.../blocks.ts)\n                        \n                        \n                            EditorJSPlugin   (libs/.../plugins.ts)\n                        \n                        \n                            ListStyle   (libs/.../blocks.ts)\n                        \n                        \n                            PluginProperty   (libs/.../plugins.ts)\n                        \n                        \n                            PluginType   (libs/.../plugins.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    libs/ngx-editorjs/src/lib/types/blocks.ts\n    \n    \n        \n            \n                \n                    \n                    BlockTypes\n                \n            \n            \n                \n                    Type of all the basic block type\n\n                \n            \n            \n                \n                        ParagraphBlock | HeaderBlock | ImageBlock | ListBlock | Block\n\n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    ListStyle\n                \n            \n            \n                \n                    Available list styles, supports ordered and unordered.\nA custom string can also be added\n\n                \n            \n            \n                \n                        \"ordered\" | \"unordered\" | string\n\n                \n            \n        \n    \n    libs/ngx-editorjs-plugins/src/lib/types/plugins.ts\n    \n    \n        \n            \n                \n                    \n                    EditorJSPlugin\n                \n            \n            \n                \n                    The EditorJS tool settings for this plugin\n\n                \n            \n            \n                \n                        ToolConstructable | ToolSettings\n\n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    PluginProperty\n                \n            \n            \n                \n                    A plugin property\n\n                \n            \n            \n                \n                            string\n\n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    PluginType\n                \n            \n            \n                \n                    The types of plugins supported via the plugin type property\n\n                \n            \n            \n                \n                            PluginTypes.Block | PluginTypes.Inline | string\n\n                \n            \n        \n    \n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/variables.html":{"url":"miscellaneous/variables.html","title":"miscellaneous-variables - variables","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous\n  Variables\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            context   (libs/.../test.ts)\n                        \n                        \n                            DEFAULT_HOLDER_ID   (libs/.../editor-config.ts)\n                        \n                        \n                            EDITIOR_JS_INSTANCE   (libs/.../config.ts)\n                        \n                        \n                            EDITOR_JS_TOOL_INJECTOR   (libs/.../plugins.ts)\n                        \n                        \n                            EDITORJS_FORM_VALUE_ACCESSOR   (libs/.../editorjs.component.ts)\n                        \n                        \n                            EDITORJS_MATERIAL_FIELD_CONTROL   (libs/.../editorjs-mat-field.component.ts)\n                        \n                        \n                            EDITORJS_MODULE_IMPORT   (libs/.../injector.ts)\n                        \n                        \n                            EditorJSInstance   (libs/.../injector.ts)\n                        \n                        \n                            FOR_ROOT_OPTIONS_TOKEN   (libs/.../config.ts)\n                        \n                        \n                            MAP_DEFAULTS   (libs/.../injector.ts)\n                        \n                        \n                            NGX_EDITORJS_CONFIG   (libs/.../config.ts)\n                        \n                        \n                            PLUGIN_CONFIG   (libs/.../plugins.ts)\n                        \n                        \n                            PluginClasses   (libs/.../plugins.ts)\n                        \n                        \n                            require   (libs/.../test.ts)\n                        \n                        \n                            TAG_COMPONENT_FIELD_CONTROL   (libs/.../mat-tag-input.component.ts)\n                        \n                        \n                            TAG_COMPONENT_VALUE_ACCESSOR   (libs/.../mat-tag-input.component.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    libs/ngx-tinynodes-components/src/test.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            context\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : require.context('./', true, /\\.spec\\.ts$/)\n                        \n                    \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            require\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         any\n\n                        \n                    \n\n\n            \n        \n\n    libs/ngx-editorjs/src/lib/config/editor-config.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            DEFAULT_HOLDER_ID\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Default value : 'editor-js'\n                        \n                    \n\n                \n                    \n                        The default holder ID to attach EditorJS to\n\n                    \n                \n\n            \n        \n\n    libs/ngx-editorjs/src/lib/types/config.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            EDITIOR_JS_INSTANCE\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : new InjectionToken('EDITIOR_JS_INSTANCE')\n                        \n                    \n\n                \n                    \n                        Get the EditorJS instance injected into the app\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            FOR_ROOT_OPTIONS_TOKEN\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : new InjectionToken('FOR_ROOT_OPTIONS_TOKEN')\n                        \n                    \n\n                \n                    \n                        Internal token for injecting the NgxEditorJSConfig into the config factory\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            NGX_EDITORJS_CONFIG\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : new InjectionToken('NGX_EDITORJS_CONFIG')\n                        \n                    \n\n                \n                    \n                        Injection token provied for NgxEditorJSConfig\n\n                    \n                \n\n            \n        \n\n    libs/ngx-editorjs-plugins/src/lib/types/plugins.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            EDITOR_JS_TOOL_INJECTOR\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : new InjectionToken('EDITOR_JS_TOOL_INJECTOR')\n                        \n                    \n\n                \n                    \n                        The Injection token for initial plugins as defined in the ngx-editorjs module\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            PLUGIN_CONFIG\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : new InjectionToken('PLUGIN_CONFIG')\n                        \n                    \n\n                \n                    \n                        Injection token for a plugin config\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            PluginClasses\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : new InjectionToken('PluginClasses')\n                        \n                    \n\n                \n                    \n                        Injection token for the plugin config map\n\n                    \n                \n\n            \n        \n\n    libs/ngx-editorjs/src/lib/containers/editorjs/editorjs.component.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            EDITORJS_FORM_VALUE_ACCESSOR\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Provider\n\n                        \n                    \n                    \n                        \n                            Default value : {\n  provide: NG_VALUE_ACCESSOR,\n  useExisting: forwardRef(() => NgxEditorJSComponent),\n  multi: true\n}\n                        \n                    \n\n                \n                    \n                        The NgxEditorJSBaseComponent Provider for NG_VALUE_ACCESSOR\n\n                    \n                \n\n            \n        \n\n    libs/ngx-editorjs/src/lib/containers/editorjs-mat-field/editorjs-mat-field.component.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            EDITORJS_MATERIAL_FIELD_CONTROL\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Provider\n\n                        \n                    \n                    \n                        \n                            Default value : {\n  provide: MatFormFieldControl,\n  useExisting: forwardRef(() => NgxEditorJSMatFieldComponent),\n  multi: true\n}\n                        \n                    \n\n                \n                    \n                        Provider for the EditorJS Material Field Component\n\n                    \n                \n\n            \n        \n\n    libs/ngx-editorjs/src/lib/types/injector.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            EDITORJS_MODULE_IMPORT\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : new InjectionToken('EDITORJS_MODULE_IMPORT')\n                        \n                    \n\n                \n                    \n                        Injection token for the EditorJS class\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            EditorJSInstance\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : new InjectionToken('EditorJSInstance')\n                        \n                    \n\n                \n                    \n                        The EditorJS class injector\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            MAP_DEFAULTS\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     []\n\n                        \n                    \n                    \n                        \n                            Default value : [\n  ['lastChangeMap', { time: 0, blocks: [], version: EditorJS.version }],\n  ['isReadyMap', false],\n  ['hasSavedMap', false]\n]\n                        \n                    \n\n                \n                    \n                        Default values for each internal map\n\n                    \n                \n\n            \n        \n\n    libs/ngx-tinynodes-components/src/lib/components/mat-tag-input/mat-tag-input.component.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            TAG_COMPONENT_FIELD_CONTROL\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Provider\n\n                        \n                    \n                    \n                        \n                            Default value : {\n  provide: MatFormFieldControl,\n  useExisting: forwardRef(() => NgxTinynodesMatTagInputComponent),\n  multi: true\n}\n                        \n                    \n\n                \n                    \n                        Provider for Material field support\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            TAG_COMPONENT_VALUE_ACCESSOR\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Provider\n\n                        \n                    \n                    \n                        \n                            Default value : {\n  provide: NG_VALUE_ACCESSOR,\n  useExisting: forwardRef(() => NgxTinynodesMatTagInputComponent),\n  multi: true\n}\n                        \n                    \n\n                \n                    \n                        Tag Value Accessor\n\n                    \n                \n\n            \n        \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"additional-documentation/tinynodes-library-docs.html":{"url":"additional-documentation/tinynodes-library-docs.html","title":"additional-page - Tinynodes Library Docs","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nNgx-Tinynodes Libraries\nHere you can find all the README and CHANGELOG details of all projects released to NPM\n\nPlease note due to a bug in CompoDoc the `README.md` files are currently not generated correctly - these are rendered correctly on GitHub and NPM.\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"additional-documentation/tinynodes-library-docs/ngx-editorjs-readme.html":{"url":"additional-documentation/tinynodes-library-docs/ngx-editorjs-readme.html","title":"additional-page - ngx-editorjs Readme","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nNgx-EditorJS\nThis library provides Angular support for EditorJS.\n\nInside the module you will find:\n\nNgxEditorJSDirective - An Angular Directive used to attach an EditorJS instance to any block DOM element\nNgxEditorJSComponent - An out-of-the-box Angular component that is Reactive Forms compatible\nNgxEditorJSMaterialFieldComponent An Angular Material Form Field component that provides all the required properties and life-cycle events required. See the Form Demo on an example usage\nNgxEditorJSBaseComponent - A base Angular component that is Reactive form compatible but with no template, can be used to create custom UI framework containers\nNgxEditorJSService - A Service that can be injected into an application to provide a interface to interact with EditorJS instances and manage plugins.\n\nWithin these components you will be able to access the underlying EditorJS instance, for use see the EditorJS API Docs\nYou can see a demo in action or download it\non GitHub to see how it was implemented.\nFor changes see the CHANGELOG\nInstalling and usage\nInstall the library via npm along with the plugins module and EditorJS module. For each plugin you want to use you also need to install it's dependency - see the Plugin Docs for more information.\n```bash\n\nnpm install @tinynodes/ngx-editorjs @tinynodes/ngx-editorjs-plugins @editorjs/editorjs @editorjs/paragraph....\n```\n\nOnce installed, include the NgxEditorJSModule module in your project with the forRoot method. The forRoot takes an optional configuration.\nYou also need to pass a provider for UserPlugins with a factory function that returns an options map tools to provide to the EditorJS instance. An example of this is shows in the demo application\n```typescript\nimport { NgModule } from '@angular/core';\nimport { BrowserModule } from '@angular/platform-browser';\nimport { NgxEditorJSModule } from '@tinynodes/ngx-editorjs';\nimport { AppComponent } from './app.component';\nimport EditorJS from '@editorjs/editorjs';\nimport {\n  PluginParagraphModule,\n  PluginParagraph,\n  PluginHeaderModule,\n  PluginHeader,\n  PluginListModule,\n  PluginList\n} from '@tinynodes/ngx-editorjs-plugins';\nexport function createTools() {\n  return {\n    paragraph: new PluginParagraph(),\n    header: new PluginHeader(),\n    list: new PluginList()\n  };\n}\n@NgModule({\n  declarations: [AppComponent],\n  imports: [\n    BrowserModule,\n    NgxEditorJSModule.forRoot({\n      editorjs: {\n        autofocus: false,\n        holder: 'editor',\n        initialBlock: 'paragraph',\n        data: {\n          time: Date.now(),\n          version: EditorJS.version,\n          blocks: []\n        }\n      }\n    })\n  ],\n  providers: [\n    {\n      provide: UserPlugins,\n      useFactory: createTools\n    }\n  ],\n  bootstrap: [AppComponent]\n})\nexport class AppModule {}\n```\nConfiguration\nEditorJS Config\nThe configuration is deigned to be extendable in the future, so each potential feature has a key. For configuring EditorJS pass the options below into a editorjs key in the config.\nThe module configuration allows EditorJS to be provided with a set of options for use. See the EditorJS docs for more details.\n| Configuration Key  | Description                                                                                                                                                     |\n| ------------------ | --------------------------------------------------------------------------------------------------------------------------------------------------------------- |\n| autofocus        | Sets the EditorJS instance to autofocus on load                                                                                                                 |\n| autosave         | Value of time for the the autosave of EditorJS content to the service when the component when focused, this is used for Reactive forms. Default is 0 to disable |\n| data             | Initial data to load into the editor, this is an OutputData object from EditorJS                                                                              |\n| hideToolbar      | Hides the toolbar by default                                                                                                                                    |\n| holder           | The element ID of the holder, this will set all instances in this module to use this as a default                                                               |\n| initialBlock     | The default block type to use in the editor                                                                                                                     |\n| minHeight        | Height of Editor's bottom area that allows to set focus on the last Block                                                                                       |\n| blockPlaceholder | Placeholder of the first block                                                                                                                                  |\n| sanitizer        | Content sanitizer configurations                                                                                                                                |\n| excludeTools     | Excludes tools from the application, if no value or empty list passed all plugins available are added|\nAdding custom tools\nSee the plugin module\nfor docs on how to add custom plugins for EditorJS.\nLinks\n\nDocumentation\nGitHub\nNPM\nAngular Demo\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"additional-documentation/tinynodes-library-docs/ngx-editorjs-readme/ngx-editorjs-changelog.html":{"url":"additional-documentation/tinynodes-library-docs/ngx-editorjs-readme/ngx-editorjs-changelog.html","title":"additional-page - ngx-editorjs Changelog","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nChangelog\nAll notable changes to this project will be documented in this file.\nThe format is based on Keep a Changelog,\nand this project adheres to Semantic Versioning.\n[3.0.0] - 2019-06-05\nChanged\n\nUpgraded to Angular and Material 8.\nSimplified API on service and components, Material demo updated to show best\nuse of component in a reactive form.\n\nFixed\n\nFixed major bug where inline tools did not show [Issue 6]\n\nRemoved\n\nPlugin responsibility of service and types moved to @tinynodes/ngx-editorjs-plugins module\nand is now a required dependency of the project, plugin architecture has been simplified to make it\neasy to add features in an AOT friendly way via Angular's dependency injection\n\n[2.1.0] - 2019-05-23\nAdded\n\nNgxEditorJSService.apiCall method added to service to provide a way to call any method in EditorJS\n\nRemoved\n\nPrivate services for EditorJS instance and plugins removed, NgxEditorJSService is now a single service that handles all the Editor and plugin life-cycles\nEditorJSBaseComponent removed and using NgxEditorJSComponent as base component\n\nChanged\n\nVarious internal improvements to state management and saving\n\n[2.0.0] - 2019-05-22\nThis release is the first big changes to the module and also includes new Material component.\nAdded\n\nNgxEditorJSComponent can be used in Angular Forms via it's ControlValueAccessor\nEditorJSBaseComponent exported and can be used to create custom components\nNgxEditorJSMatFieldComponent provided as a Material field component.\nautosave support now added to both components\napiCall method for calling any EditorJS API method\n\nChanged\n\nplaceholder property of EditorJS config is now blockPlaceholder so it does not clash with the Material property\nEditorJS instance service refactored, available as a private import\nAll public methods now take a InjectorMethodOption object as it's parameter\n\n[1.3.2] - 2019-05-15\nChanged\n\nFixed bug with passing data to EditorJS instance service.\nRemoved rogue console.log\n\n[1.3.0] - 2019-05-15\nAdded\n\n@Input properties on the component and directive for providing EditorJS instance configuration\ncreateEditorJSConfig function available to generate EditorJS configurations\nLots more doc improvements and updated demo\n\nChanged\n\nInternal service now uses an EditorJS injector module and service, provides more robust control and creation of EditorJS instances and controlling them.\n\n[1.2.0] - 2019-05-13\nAdded\n\nAdded all configuration options for EditorJS to the module configuration\n\nChanged\n\nRemoved all plugins from the ngx-editorjs project. All plugins are now provided by the @tinynodes/ngx-editorjs-plugins module and a default set of tools must be provided in an application.\nAdded NgxEditorJSPluginService back to core, all plugins must now be provided with a UserPlugin provider.\n\n[1.1.2] - 2019-05-11\nAdded\n\nImproved internal documentation for generated docs.\n\nRemoved\n\nGenerated docs no longer included in this module - all docs are now available via the generated docs site\n\n[1.1.1] - 2019-05-10\nAdded\n\nGenerated docs via CompoDoc in npm package\nInclude CHANGELOG.md in npm package\n\n[1.1.0] - 2019-05-10\nAdded\n\nEditorJS default paragraph plugin is now included in the default tools, fixes issue where the regenerated component failed to use the default plugin.\n\nChanged\n\nNgxEditorJSService is now provided in the root and now stores multiple editor instances. Getters removed and replaced with methods that take the holder parameter which is the ID of the DOM element the editor should be attached to.\nPlugins are now instances of an Injectable class for AOT and have an instance method of plugin. Also supports shortcut as an optional method that returns the string to set up as the shortcut.\nEditorJSPlugin now renamed BasePlugin and changed from class to interface.\nImproved documentation\n\n[1.0.0] - 2019-05-10\nAdded\n\nInitial release\nReadme, Changelog\nNgxEditorJSModule: That can be imported into the root of a project\nNgxEditorJSDirective: A directive that can attach an EditorJS instance to an element\nNgxEditorJSComponent: A component that is pre-configured to use the directive in any Angular project\nNgxEditorJSService: An Angular service for controlling an EditorJS instance\nDefault plugins for Header and List plugins, documentation on how to add plugins with AOT support\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"additional-documentation/tinynodes-library-docs/ngx-editorjs-plugins-readme.html":{"url":"additional-documentation/tinynodes-library-docs/ngx-editorjs-plugins-readme.html","title":"additional-page - ngx-editorjs-plugins Readme","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nNgx-EditorJS Plugins\nThis module provides the core Plugin service for @tinynodes/ngx-editorjs, and also provides a default set of EditorJS plugins\nfor using Angular modules and Injection Tokens.\nPlugin Service\nThe NgxEditorJSPluginService takes all the Plugin provides and creates a single map of the configurations and instances. These are used within NgxEditorJS to set the plugins\navailable within the editor. The plugin service is provided separably to avoid circular dependencies\nwithin the libraries and is required by @tinynodes/ngx-editorjs\nCreating a Plugin.\nCreating a plugin is very simple, the module provides some Injection Tokens for use with the module.\nThe plugin you want to import should conform to the Block or Inline format of EditorJS, alongside a configuration object that provides details about the plugin.\nBoth these providers must be set to multi: true - when the plugin service is initialised it will be provided a map of these.\nHere is an example of the PluginParagraph:\n```ts\nimport { NgModule } from '@angular/core';\nimport { EDITOR_JS_TOOL_INJECTOR, PLUGIN_CONFIG, PluginTypes from '@tinynodes/ngx-editorjs-plugins';\nimport Paragraph from '@editorjs/paragraph';\n@NgModule({\n  providers: [{\n    provide: EDITOR_JS_TOOL_INJECTOR,\n    useValue: Paragraph,\n    multi: true // IMPORTANT!\n  }, {\n    provide: PLUGIN_CONFIG,\n    useValue: {\n      key: 'paragraph',\n      type: PluginTypes.Block,\n      pluginName: 'EditorJS Paragraph',\n    },\n    multi: true // IMPORTANT!\n  }]\n})\nexport class PluginParagraphModule {}\n```\nThe full configuration object parameters are listed below, please note some are not yet implemented in the application\nbut will be used in future releases.\n| Param Name    | Type     | Optional | Description                                                      |\n| ------------- | -------- | -------- | ---------------------------------------------------------------- |\n| key         | string | No       | The default key of the plugin (e.g. paragraph)                 |\n| type        | string | No       | The type of plugin, currently block and inline are supported |\n| pluginName  | string | No       | The descriptive name of the plugin                               |\n| shortcut    | string | Yes      | An optional keyboard shortcut for the plugin                     |\n| description | string | Yes      | A description of the plugin                                      |\n| blockData   | string | Yes      | Optional default block data to use for the plugin                |\nOnce imported into an application or module the plugin is available in the app with several methods to get plugins on the service.\n\ngetPlugins - Get a map of all plugins\ngetPlugin(key: string) - Get a specific plugin by map key\ngetPluginsWithExclude(excludeList: string[]) - Get a map of plugins but exclude ones in the passed list\ngetPluginsWithInclude(includeList: string[]) - Get a map of plugins but only the ones in the include list\n\nPeer Dependencies\nAll EditorJS plugins are listed as peerDependencies of the project - this is because Angular requires these modules to be in the root. You must manually install these are the root of your Angular application.\n```bash\n\nnpm install @editorjs/paragraph @editorjs/header ....\n```\n\nPlugin List\n| Plugin Name             | Description                                            | Links                                                                                               |\n| ----------------------- | ------------------------------------------------------ | --------------------------------------------------------------------------------------------------- |\n| PluginCodeModule        | Provides a  block editor                       | README GitHub              |\n| PluginHeaderModule      | Provides a  -  block editor                  | README GitHub          |\n| PluginImageModule       | Provides an  block editor + file upload support | README GitHub            |\n| PluginLinkModule        | Provides an  block editor                         | README GitHub              |\n| PluginIListModule       | Provides an / block editor                   | README GitHub              |\n| PluginMarkerModule      | Provides inline text marking                           | README GitHub          |\n| PluginParagraphModule   | Provides an  block editor                         | README GitHub    |\n| PluginSimpleImageModule | Provides an  block editor with paste support    | README GitHub |\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"additional-documentation/tinynodes-library-docs/ngx-editorjs-plugins-readme/ngx-editorjs-plugins-changelog.html":{"url":"additional-documentation/tinynodes-library-docs/ngx-editorjs-plugins-readme/ngx-editorjs-plugins-changelog.html","title":"additional-page - ngx-editorjs-plugins Changelog","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nChangelog\nAll notable changes to this project will be documented in this file.\nThe format is based on Keep a Changelog,\nand this project adheres to Semantic Versioning.\n[2.0.0]\nAdded\n\nNgxEditorJSPluginService returns to the plugin module as a requirement to avoid circular dependencies.\nThis service now provides a more reliable way of handling plugins, each plugin is a module with two multi providers\nwhich are turned into a configuration map of plugins.\n\nChanged\n\nPlugins no longer provide an injectable class, all plugins are modules that provide\ninjectable EDITOR_JS_TOOL_INJECTOR and PLUGIN_CONFIG. These provides are injected in the\nplugin service and made available in the editor. See the README for details on how\nplugins are created\n\n[1.1.1] - 2019-05-15\nChanged\n\nDocumentation updates\n\n[1.1.0] - 2019-05-13\nRemoved\n\nRemoved the NgxEditorJSPluginService from this module back to core\n\n[1.0.0] - 2019-05-11\nAdded\n\nInitial release of module with default plugins - see README.md for details.\nMoved the internal PluginService to public NgxEditorJSPluginService provided by this module\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"}}
}
